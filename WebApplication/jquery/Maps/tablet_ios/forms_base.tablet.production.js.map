{"version":3,"sources":["jquery/common/bizagi.tabs/js/jquery.material.tab.js","jquery/common/bizagi.mfb/js/bizagi.mfb.js","jquery/common/bizagi.ripple/js/jquery.ripple.js","jquery/common/bizagi.grid/js/tablet/bizagi.grid.tablet.js","jquery/common/base/js/lib/mobile/jquery.tabs.js","jquery/rendering/js/base/bizagi.rendering.element.js","jquery/rendering/js/base/container/bizagi.rendering.container.js","jquery/rendering/js/base/render/bizagi.rendering.render.js","jquery/rendering/js/base/render/bizagi.rendering.render.base.js","jquery/rendering/js/base/container/bizagi.rendering.form.js","jquery/rendering/js/base/container/bizagi.rendering.formTemplate.js","jquery/rendering/js/base/container/bizagi.rendering.layout.js","jquery/rendering/js/base/container/bizagi.rendering.accordion.js","jquery/rendering/js/base/container/bizagi.rendering.accordionItem.js","jquery/rendering/js/base/render/bizagi.rendering.collectionnavigator.js","jquery/rendering/js/base/container/bizagi.rendering.group.js","jquery/rendering/js/base/container/bizagi.rendering.horizontal.js","jquery/rendering/js/base/container/bizagi.rendering.panel.js","jquery/rendering/js/base/container/bizagi.rendering.contentPanel.js","jquery/rendering/js/base/container/bizagi.rendering.searchForm.js","jquery/rendering/js/base/container/bizagi.rendering.tab.js","jquery/rendering/js/base/container/bizagi.rendering.tabItem.js","jquery/rendering/js/base/container/bizagi.rendering.nestedForm.js","jquery/rendering/js/base/render/bizagi.rendering.combo.js","jquery/rendering/js/base/render/bizagi.rendering.check.js","jquery/rendering/js/base/render/bizagi.rendering.number.js","jquery/rendering/js/base/render/bizagi.rendering.numberScientificNotation.js","jquery/rendering/js/base/render/bizagi.rendering.date.js","jquery/rendering/js/base/render/bizagi.rendering.extendedText.js","jquery/rendering/js/base/render/bizagi.rendering.grid.js","jquery/rendering/js/base/render/bizagi.rendering.hidden.js","jquery/rendering/js/base/render/bizagi.rendering.label.js","jquery/rendering/js/base/render/bizagi.rendering.search.js","jquery/rendering/js/base/render/bizagi.rendering.text.js","jquery/rendering/js/base/render/bizagi.rendering.button.js","jquery/rendering/js/base/render/bizagi.rendering.fileprint.js","jquery/rendering/js/base/render/bizagi.rendering.link.js","jquery/rendering/js/base/render/bizagi.rendering.geolocation.js","jquery/rendering/js/base/render/bizagi.rendering.association.js","jquery/rendering/js/base/render/bizagi.rendering.upload.js","jquery/rendering/js/base/render/bizagi.rendering.ecm.js","jquery/rendering/js/base/render/bizagi.rendering.yesno.js","jquery/rendering/js/base/render/bizagi.rendering.letter.js","jquery/rendering/js/base/render/bizagi.rendering.formLink.js","jquery/rendering/js/base/render/bizagi.rendering.cascadingCombo.js","jquery/rendering/js/base/render/bizagi.rendering.list.js","jquery/rendering/js/base/render/bizagi.rendering.multiSelect.js","jquery/rendering/js/base/render/bizagi.rendering.searchList.js","jquery/rendering/js/base/render/bizagi.rendering.money.js","jquery/rendering/js/base/render/bizagi.rendering.radio.js","jquery/rendering/js/base/render/bizagi.rendering.image.js","jquery/rendering/js/base/render/bizagi.rendering.userfield.js","jquery/rendering/js/base/render/bizagi.rendering.document.js","jquery/rendering/js/base/render/bizagi.rendering.range.js","jquery/rendering/js/base/render/bizagi.rendering.rangeDate.js","jquery/rendering/js/base/render/bizagi.rendering.rangeMoney.js","jquery/rendering/js/base/render/bizagi.rendering.rangeNumber.js","jquery/rendering/js/base/render/bizagi.rendering.checkList.js","jquery/rendering/js/base/render/bizagi.rendering.actionLauncher.js","jquery/rendering/js/base/render/bizagi.rendering.entityTemplate.js","jquery/rendering/js/base/render/bizagi.rendering.polymorphicLauncher.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.column.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.readonly.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.combo.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.date.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.search.js","jquery/rendering/js/base/bizagi.rendering.base.factory.js","jquery/rendering/js/bizagi.rendering.device.factory.js","jquery/rendering/js/bizagi.rendering.facade.js"],"names":["$","updateIndicatorState","tabs","active_tab","direction","tabs_meta","getTabsMetaInfo","tabs_info","tabsMetaInfo","tab_info","tabMetaInfo","left","tmp_left","scrollLeftNormalized","clientWidth","scrollWidth","scrollLeft","width","tabs_meta_info","r","getBoundingClientRect","a","n","window","document","body","e","createElement","appendChild","createTextNode","dir","style","fontSize","height","position","top","overflow","type","removeChild","getScrollType","Number","NaN","getNormalizedScrollLeft","right","tab_meta_info","fn","material_bizagi_tabs","options","params","opts","extend","defaults","base","index","$el","undefined","$active","$active_content","init","el","$ind","self","this","$tabs","$content_tabs","updatePositions","active","$indicator","info","get","css","scroll_info","scrollSelectedIntoView","trigger","active_index_tab","each","element","addClass","data","hide","push","on","stopPropagation","prepend","find","removeClass","reference","show","preventDefault","getActiveTab","tab","contantTab","moveToNextTab","length","click","refreshPositions","console","error","mfb","overlay","opened","buttons","activePrincipalButton","placement","indexOf","efect","clickHoverOpt","toggleMethod","menuState","menuStateValue","isOpen","isClosed","mainButtonClass","restingIcon","activeIcon","children","remove","target","currentState","attachEvt","elems","evt","handler","i","len","addEventListener","configureBlur","blur","siblings","closest","html","kendo","template","useWithBlock","append","toggle","getAttribute","parentNode","button","principal","appendTo","bind","setAttribute","jQuery","bz_navigation_buttons","isDesign","lastActionExecuted","allowAddButtons","$element","empty","$container","result","caption","properties","$elementButton","replace","targetElement","offset","offsetWidth","$addButton","htmlButtons","heightAddButton","heightWrapper","heightButtons","$rightNavigationButton","rightNavigationButtonIsLocated","insertAfter","leftNavigationButtonIsLocated","$leftNavigationButton","ev","maxScrollLeft","detach","prependTo","processButtons","transparent","$temp","rippleEffect","eventPageX","eventPageY","inkX","inkY","maxDiameter","rippleColor","$inkSpan","$inkparent","$thisElement","eventType","getRippleColorFromTraverse","inkColor","fallBackColor","backgroundOrInhreitedBackGround","hex","luma","returnLumintion","fallback","getBgColor","$elementToCheckForBg","is","parent","colorToHex","getLuminationValue","getColorLuminance","getInkColor","inkDefaultColor","appendInkTo","inkClass","inkContainerClass","Math","max","outerWidth","outerHeight","idToUse","background-color","pageX","pageY","touch","originalEvent","touches","changedTouches","setTimeout","hexcolor","substring","rgb","parseInt","lum","String","c","resultHex","substr","round","min","toString","color","match","slice","widget","ui","bizagi_grid","_init","_super","isOfflineForm","bizagi","util","parseBoolean","attachHandlers","_getComponent","pageNumber","attr","changePage","selectDynamicPager","columnIndex","sortBy","totalizer","processAction","unselectRow","$context","parents","hasClass","businessKey","onRemoveNewRow","key","selectRow","_addColumnActions","totalData","onRowSelected","prototype","apply","arguments","_showRowButtons","onRowUnselected","_hideRowButtons","getCell","xpath","row","cell","_canShowButtons","actions","drawRow","rowData","isNewRow","columnKeyIndex","newRow","rnd","floor","random","fasttmpl","cells","drawCell","_canShowRowButtons","drawSpecialCell","columns","_replaceElement","drawPager","pages","total","number","page","pagination","renderPages","totalPages","currentPage","pager","subType","selectedRow","getNewRowKeys","rows","map","action","onSaveAddedRows","onCancelEdition","isNewRecord","addInlineRow","_triggerHandler","createAddRowData","postRenderRow","ceil","onAddRow","add","inlineAdd","savedRows","keys","newRowKeys","isValid","value","items","details","name","localization","getResource","edit","overflowMenu","cancelNewRow","newRows","RegExp","bztabs","activeTab","tabNumber","activate","popUp","beforeActivate","tabCountPopup","tabHeader","tabCountReal","widthRow","item","textContent","tabCurrent","eq","widthTabSelected","updateTabSize","first","origin","changeTab","dataRef","tempTabs","moveAtTheEnd","currentTarget","tabChildren","when","domIncluded","done","event","headerWidth","innerWidth","totalWidth","j","pop","last","Class","ELEMENT_TYPE_CONTAINER","ELEMENT_TYPE_RENDER","ELEMENT_TYPE_COLUMN","renderFactory","dataService","resources","observableElement","disposed","initializeData","subscribers","xpathContext","getXpathContext","idPageCache","getPageCache","getFormContainer","getElementType","resize","size","focus","required","layout","isScrolledIntoView","effect","triggerGlobalHandler","triggerHandler","unbind","one","getRenderedElement","getMode","getParams","getFormType","ready","isReadyToSave","getCustomHandlers","dispose","off","override","disposeTime","isDisposed","processFailMessage","message","form","context","errorType","validationController","clearValidationMessages","showErrorMessage","container","idCase","JSON","parse","code","responseText","showAlertMessage","startLoading","endLoading","beforeToRefresh","afterToRefresh","tryToExecuteFunction","id","rendering","TYPE_QUERY_FORM","uniqueId","editable","visible","orientation","originalProperties","encode","childrenHash","elements","render","createRenderElement","createContainerElement","createFormElement","originalElement","inlineEdit","retype","clone","getRender","mode","processDuplicateRender","registerRender","getContainer","getElement","getElementsByType","child","clonedElement","displayName","isClone","cloneRender","internalRender","applyContainerDefaults","tag","requestedForm","renderContainerHtml","postRenderContainer","renderingDeferred","Deferred","renderContainer","isRendered","promise","isEmpty","alert","backgroundColor","changeBackgroundColor","changeVisibility","argument","changeEditability","replaceTag","replaceSelector","replaceChildrenTag","replaceChildrenHtml","replaceFirstWithoutPatterns","resolve","executeChildrenPostRender","configureHandlers","applyPlaceHolderPolyfill","configureDesignView","configureLayoutView","config","placeHolderConfig","forceApply","Placeholders","enable","childrenElements","childElement","postRenderElement","renderChildrenHtml","temp","renderElement","collectRenderValues","renderValues","canBeSent","collectData","hasChanged","collectRenderValuesQueryForm","canBeSentQueryForm","collectDataQueryForm","firstChild","getRenders","renders","getRendersByXpath","o","invalidElements","hasValidGrids","childrenPromises","getFocus","getCustomHandler","customHandlers","refreshContainer","args","multiaction","refreshControl","idRender","contexttype","idForm","unregisterChildren","removeActions","currentContainer","replaceWith","refreshActions","triggerChildrenActions","fail","always","refreshDesignContainer","messageValidation","l","triggerRenderChange","changed","registerActions","actionController","buildActions","unregisterRender","replaceChild","splice","getChildById","postRenderTimeout","maxRendersPerScreen","rendersExecuted","renderOptimization","startOptimization","stopOptimization","included","includedInResult","renderType","normalizeType","test","submitOnChange","maxLength","helpText","trim","textFormat","valueFormat","isHidden","editabilityEnabled","contextType","labelAlign","valueAlign","originalValue","previousValue","calculateInitialLayoutProperties","displayType","getDefaultLabelAlign","getDefaultValueAlign","getRTLAlign","renderWidth","calculateRenderWidth","labelWidth","valueWidth","label","control","layoutType","renderTemplateName","renderTemplate","getTemplate","replaceAll","isFullRender","detectDevice","isTabletDevice","parseFloat","isExtendedText","isExtended","displayOptionClass","getDisplayOptionClass","labelAlignClass","getAlignClass","valueAlignClass","stringLabelWidth","stringValueWidth","printVersion","printversion","cssClass","cssclass","showFullRender","internalRenderControl","state","replaceControlHtml","resolveResult","asyncRenderDeferred","renderControl","renderReadOnly","configureSubmitOnChange","isLabelFormat","executePostRender","_element","internalPostRender","getControl","emptyControlByAsyncRenderDeferred","processLayout","postRenderPrintVersion","postRender","postRenderReadOnly","performExecutionModeMethods","performDesignModeMethods","configureHandlersQueryForm","configureHandlersReadOnly","internalSetInitialValue","log","internalSetInitialValueFlag","setDisplayValue","grid","setValidationMessage","hasValue","isQueryForm","filter","forEach","messageData","isQuery","getValue","val","columnEditable","getColumn","isNumeric","controlValueIsChanged","format","changeColor","background","bold","changeFontBold","italic","changeFontItalic","underline","changeFontUnderline","strikethru","changeFontStrikethru","changeFontSize","changeRequired","changeCellVisibility","setValue","triggerEvents","identicalObjects","checkRequired","changeRequiredLabel","triggerRenderValidate","validateInputRetype","display","enableCheck","displayValue","getDisplayValue","sanitizeHTML","getLabel","mustImplement","getControlFiller","validationMessage","readOnlyValue","isObject","isString","decodedDisplayValue","changeDisplayOption","changeLabelAlign","alignType","changeValueAlign","customizeRenderWidth","setProperty","getElementsToStylize","originalColor","currentStyle","getFormattingLabel","compareValue","baseValue","defaultValue","forceCollectData","includes","compareValueObj","_findAction","guid","targetObj","guidAction","objectValue","valuestrikethru","valueunderline","newFontSize","emptyControlByChangeEditability","changeEditabilityCellControl","renderColumn","decorated","getDecorated","readyDeferred","onCellChange","labelElement","controlElement","pipe","controlFiller","currentElement","refreshDesignControl","cleanData","clearDisplayValue","input","updateOriginalValue","change","queryValue","searchType","typeSearch","rangeQuery","toUpperCase","newParameter","orderType","displayXpath","force","displayOnly","time","defaultControl","innerControl","isIE","autoScrollBottom","align","dependencies","conditions","expressions","simple","submitOnChangexpathContext","operator","argumentType","commands","command","elseCommands","addSubmitAction","bRefreshForm","notCollect","defer","BA_CONTEXT_PARAMETER_PREFIX","internalSubmitOnChange","reject","getCacheIdCase","cache","idCaseObject","parameters","percent2Number","getIdCase","getIdWorkitem","idWorkitem","getidTask","idTask","getSessionId","sessionId","changeCellColor","changeCellBackgroundColor","backgroundImage","needBGPaint","background-image","changeCellRequired","startActionExecution","actionExecutionDeferred","endActionExecution","readyActionExecution","isFromCreatedRow","submitInvalidatePageCacheRequest","pageCacheToInvalidate","invalidatePageCache","isDesignMode","isExecutionMode","preventDefaultForAnchorTag","isSharepointContext","processLabelLayout","processControlLayout","warm","$label","changeFontColor","changeTextDecoration","$control","$elements","textDecoration","device","rendersById","rendersByXpath","rendersByXpathId","rendersByType","pageCacheId","displayAsReadOnly","userConfirmationMessage","hasRule","paramsRender","processPath","breadCrumb","split","validations","allowValidateAndSaveAction","enableActionValidateAndSave","initializeButtons","transitions","originalProcessButton","processButton","isRoutingDisabled","applicationParent","isOfflineFormsV2Supported","isMobileDevice","ordinal","next","nextWithoutValidations","submitData","cancel","back","createnewcase","validate","save","routing","executeRule","refresh","buildButtonStyle","useCustomButtons","unshift","setParam","property","xpathId","isArray","listRendesByType","getRenderByType","listRendesByTypeLength","renderKey","listRender","getRenderById","getGridByColumn","grids","columnsIds","helptext","queryForm","summaryForm","globalForm","complexGatewayContainer","activeTransitions","mainForm","controllers","validation","checkboxLabel","transitionId","strStyle","getContextType","getEndPointAction","formtype","getButtons","stopImmediatePropagation","buttonProperties","lastActionButton","routingDisabled","prop","hasOwnProperty","propagateExternalEvents","processDefer","contains","documentElement","preProcessButton","postProcessButton","responses","setLoaderDeferred","loaderDeferred","deleteLoaderDeferred","isLoaderDeferredSet","useOrSetLoaderDeferred","getLoaderPromise","appendWaitForLoader","create","then","getResolveOrReject","deferred","chrono","initAndStart","getAllTabs","getAllTabsLength","innerTabsLoading","loadingDeferred","performValidations","needsUserConfirmation","showConfirmationBox","submitForm","expandNotificationBox","customHandler","validateForm","saveForm","isNativeMobileDevice","allowOnlineActions","collectRenderValuesForSubmit","deferredsToWait","deferreds","saveParams","offlineType","internalSubmitFormOffline","internalSubmitForm","checkWidgetsData","isComplexGatewayPainted","getLastActionButton","countProps","showMessageBox","prepare","isSaveForDraft","online","loading","start","tryPushResponsePromise","responsePromise","stop","offlineAction","IdCase","caseNumber","CaseNumber","recreateNativeButtons","isValidResource","showNotification","text","bHasValidations","alertMessage","response","propertiesToDisplayMessages","validationToDisplayMessages","messages","modalError","failHandler","animate","scrollTop","submitDataAction","executeButtonAction","performAction","checkpointAction","commitAction","waitingDeferreds","prepareCheckpointAction","executeButton","prepareCommitAction","getButtonAction","forcePlanCompletion","surrogatekey","surrogateKey","flowControlDeferred","execute","sendRollbackAction","refreshForm","jqxhrList","abortAll","_","messageType","addValidationMessage","icon","itemAdditionalClass","autofocus","showValidationMessage","addErrorMessage","errorMessage","selectedTabs","getSelectedTabs","isRefresh","idStartScope","tabContainers","tabContainer","selected","processInternalSubmitAction","waitingTemplate","waitingOverlay","waitingMessage","tmpl","isSharePoint","canvas","getSize","getOffset","min-height","min-width","getFocusedElement","setFocusedElement","errorJson","setSize","isEmptyObject","rule","clearOnlyServer","join","executeInterface","interface","executeSAPConnector","guidsap","executeConnector","guidConnector","unbindActions","cancelPreviousRequest","focusIdentifier","IdScope","objMessage","strMessage","multiactionConnection","connection","abort","showErrorAlertDialog","buttonId","sendCheckpoint","url","checkpointUrl","commitLinkForm","commitUrl","rollbackLinkForm","rollbackUrl","getButton","getFloatingButton","configureNetworkHandlers","isConnected","BIZAGI_ENVIRONMENT","toLowerCase","handleConnectionChange","contextEvent","processTemplate","controls","processedTemplate","g1","g2","string","layoutCollection","getCss","layoutGuid","layoutguid","loadStyle","getContextEvent","stripslashes","desktop","allowAdd","withAddForm","allowEdit","withEditForm","allowDetail","allowDelete","getKeys","pointer","totalRows","inlineAddRecords","showPreview","drawControls","drawActions","drawControl","drawForms","drawPreview","templateItem","hasData","getTotalRows","getRow","getNextRow","getPreviousRow","getFirstRow","getLastRow","getIndexes","setPointer","isTherePendingInlineRow","addKey","newId","removeKey","navigationform","getParameters","recordXpath","recordXPath","submitAddRequest","addGridRecord","addUrl","idEntity","submitEditRequest","editGridRecord","editUrl","submitDeleteRequest","deleteGridRecord","deleteUrl","submitSaveRequest","saveGridRecord","saveUrl","dataFail","submitRollbackRequest","rollbackGridAction","getRemoteData","dataUrl","getData","content","validateControls","collapse","expandedIcon","getExpandedIcon","collapsedIcon","getCollapsedIcon","expandedClassIcon","toogleContainer","bImmediate","panel","renderResult","performSearch","searchParams","submitSearch","refreshResults","collectSearchValues","isMapEmpty","maxRecords","maxRows","idSearchForm","allowFullSearch","criteria","records","deviceMaxRecordsExceeded","onSearchFinished","errorObject","submitArray","operation","getCriteriaOperation","criteriaData","dataType","parseAdditionalProperties","tabItems","counter","tooltip","tabOrientation","loadOnDemand","formParams","containsFocusedElement","setActiveTab","selectedTab","renderTabContent","hasLocalData","enableTyping","complementData","isDependant","getParentCombo","valueControl","BA_ACTION_PARAMETER_PREFIX","renderCombo","renderComboTemplate","dataPromise","getTemplateName","emptyValue","emptyLabelForCombo","getTemplateParams","unique","randomNumber","formatItem","showEmpty","showCurrentData","getDummyData","remoteDataLoaded","extra","recalculate","allowActions","msgObj","auxMsg","parseJSON","resetData","combo","getSelectedValue","currentValue","parseAdditionalValues","newItem","hidden","bCurrentDataFound","emptyFound","dataValue","Object","column","comboData","isExtraItem","escapeValue","mapValue","fromAction","validateValue","translated","findDataValueById","showLetters","randomId","allowDecimals","getDefaultAllowDecimals","numDecimals","BIZAGI_DEFAULT_CURRENCY_INFO","decimalDigits","symbol","positiveFormat","negativeFormat","decimalSymbol","decimalSeparator","digitGroupSymbol","groupSeparator","groupDigits","setGroupDigits","colorize","colorizeOnNegative","dataTypeMinValue","calculateMinValue","dataTypeMaxValue","calculateMaxValue","isMobile","isAndroidDevice","numericInput","numeric","attachRetypeDouble","attachFormatCurrency","removeValidations","isValidRender","formatCurrency","regions","language","digitGroupSeparator","minValue","getMinValue","maxValue","getMaxValue","percentage","inputValue","inputLength","xPath","oldVal","isInvalidFormat","tempValue","isNaN","asNumber","messageToShow","isValidRenderMessage","executeFormatCurrencyPlugin","tmpData","isIE11","clipboardData","totalVal","eval","keydown","keyUnicode","charCode","keyCode","formatTimeout","clearTimeout","floatPart","selectionStart","selectionEnd","currentPosition","keyup","keypress","character","fromCharCode","roundToDecimalPlace","removeTrailingZeros","positive","regExp","re","bValid","validMessage","getDefaultGroupDigits","thousands","changeMinValue","newValue","changeMaxValue","createTooltip","currentTitle","toolTipZindex","getMaxZindex","zIndex","numericSN","dateFormat","timeFormat","showTime","fullFormat","search","date","dateFormatter","getDateFromInvariant","datePickerRegional","formatDate","indexDateTimeSeparation","lastIndexOf","uppercaseDatePlaceholder","rtl","intHandler","isNow","dateControl","getDateControl","timeControl","getTimeControl","mask","onChangeHandler","updatingTime","setHours","formatInvariant","setSeconds","setMilliseconds","Date","hasMaxLines","maxLines","regularExpressionExpression","regularExpressionMessage","regularExpression","expression","isEmptyField","textarea","validationMessages","regEx","decodedValue","decodeURI","valueToDisplay","originalData","areThereEditableColumns","areThereTotalizedColumns","initProperties","enabledChecks","exclusiveChanges","originalEnabledChecks","columnProperties","groupBy","allowGrouping","isExclusive","hasExclusiveCheck","columnRender","singleInstance","totalize","reverse","showSummary","rowsPerPage","keyColumn","skipInitialLoad","allowMore","allowFilter","groupSummary","groupText","groupCollapsed","groupOrder","formShowMode","floatingHeader","sort","sortOrder","order","addLabel","editLabel","deleteLabel","exportOptionsLabel","detailLabel","tableCssClass","alreadySaved","overrideGetRemoteData","changes","cellOverrides","isRTL","changeOrderData","rowKey","reverseDataRows","shift","removeRemainingColumns","numColumns","remainingColumns","getColumnType","getGridTemplate","applyTemplate","columnInitializers","initialize","encodeXpath","sortType","searchFilter","getGridData","spliceRowData","spliceIndex","spliceRowDataVisible","spliceRowDataEditable","rowTemplate","buildCellXpathFilter","disableServerGridValidations","dataResp","collectGridChange","isPressed","pressed","configureColumnSubmitOnChange","keysToDelete","columnExclusiveChanges","columnEnabledChecks","columnXpath","canColumnBeSent","checkedObject","v","cellOverride","getCellOverride","getCellValue","getCellCurrentValue","getControlCell","setError","changeCellEditability","changeCellProperties","changeCellMaxValue","changeCellMinValue","cleanCellData","saveGrid","tmpEditable","changeColumnsEditability","saveInlineAddedRows","refreshCell","refreshGridCell","typeRender","getDepthData","isBoolean","updateAffectedCellManually","canBeExported","rowDeleted","hasErrors","getDataNewRows","merge","uniqueMessages","isValueValid","k","messagesLength","gridValidationMessage","setCellOverrides","len_v","newRecords","cellValue","getGridExportUrl","disposition","exportType","submitForGridChange","getEnabledChecks","xpathfilter","getGridDataExclusivesSelected","cleanNewRecords","hasColorHeader","headerFormat","isRTLOrientation","canBeExport","getExclusiveChangeByRow","idRow","obj","allowDinamiclabel","bindingValue","configureHelpText","searchForms","advancedSearch","allowSuggest","allowTyping","allowClear","searchLength","enableLocalStorage","expireCache","submitVersion","h_contexttype","enableQuerySuggestBehavior","term","regexC","getSearchData","hideStatus","selectedValue","regex","showDesignValidations","isNull","submitOnChangexpathContextRow","runButtonAction","error_obj","getErrorFormatted","filesCount","getFilePrintUrl","geolocation","navigator","allowUpdate","getCurrentPosition","succes_callback","fail_callback","getErrorMessage","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","performPrecision","latitude","longitude","toPrecision","allowFlip","flipped","flipstate","leftData","rightData","processPropertyValue","def","getFlipAssociation","flip","makeJsonBase","getColumnData","getRightAssociation","formatJson","associationData","leftId","association","isChecked","idRight","checked","removeElement","rightId","removeValue","addElement","leftXpath","rightXpath","leftFactName","rightFactName","values","maxFileSizeOfProperty","maxSize","maxFileSizeOfUser","BIZAGI_SETTINGS","UploadMaxFileSize","maxfiles","validExtensions","singleExtensions","defExtensions","getUploadAddUrl","allowSendInMail","files","getUploadXpath","haveFiles","noFiles","file","fileName","renderUploadItem","replaceFilesHtml","itemTemplate","getTemplateItemName","buildItemUrl","filename","getUploadFileUrl","fileId","deleteUploadItem","deleteUploadFile","grep","fileItem","buildAddParams","prefix","BA_PAGE_CACHE","BIZAGI_SESSION_NAME","setRenderRequired","maxFiles","serviceLocator","getUrl","q_xpath","showMetadata","listControl","fileProperties","idFileUpload","getFileExtension","isImage","lengthValues","idAttrib","renderFileLayout","loader","productBuildToAbout","replaceItemHtml","metadataTemplate","getECMMetadata","getFileProperties","metaData","ecm_ecmStatus","ecmStatus","ecm_isVisible","isVisible","ecm_allowUpdateMetadata","allowUpdateMetadata","ecm_allowDelete","ecm_allowUpdateContent","allowUpdateContent","ecm_allowView","allowView","ecm_allowCheckOut","allowCheckOut","ecm_allowCancelCheckOut","allowCancelCheckOut","ecm_allowEdit","idFileUploads","deviceType","extension","p_sessionId","cookie","getECMFileUrl","metaValues","deleteECMFile","lockUploadItem","checkOutFile","unlockUploadItem","cancelCheckOut","isEmptyValue","letterOpened","getLetterContent","getXpath","getContextXpath","saveLetterContent","getCanGenerateLetter","maximized","likeButton","editLinkForm","getFormLinkXpath","saveLinkForm","executeSubmitOnChange","submitCommitRequest","submitCheckpointRequest","submitDataRequest","services","service","dependants","parentCombo","initializingCascadingCombo","bindDependantCombo","configureReadOnlyHandlers","isInitialValue","deferredVisible","dependantCombo","onChangeFunction","refreshDependantCombo","focusDependant","cleanInput","isEventBinded","_data","unbindDependantCombo","dependant","parentValue","inputCombo","parentLength","parentArray","configured","itemSelected","listSize","Array","normalizeData","getDataValue","idToRemove","markAsChecked","some","found","canAddMoreItems","$tagsContainer","toArray","reduce","acc","getElementWidth","MORE_OPTION_WIDTH","styles","getComputedStyle","filterList","query","stringContainer","stringToSearch","addSelectedElements","findItemById","hasSearchForm","list","removeLastElement","getListItems","showsymbol","currencySymbol","horizontal","vertical","getUploadAddFileUrl","isUserPreference","isAutoWidth","isAutoHeight","getTemplateItem","currentUser","idUser","getPropertyData","charAt","buildItemUrlOffline","getFormParams","loadImageFromForm","imageId","offlineImageId","getOfflineImage","imageValue","getDataUrl","saveImageOffline","path","blobPromise","isNative","media","getImagePath","normalizeIOSFilePath","errorHandler","resolveLocalFileSystemURL","fileEntry","reader","FileReader","onloadend","blob","Blob","readAsArrayBuffer","blobImage","operationType","saveOfflineImage","err","blobError","buildFullItemUrl","getFileDependencies","fileDependencies","loadFile","renderUserfieldControl","extendedData","ajax","userEditableControl","getEditableControl","renderComplex","loadUserfieldReadOnly","userReadOnlyControl","getReadonlyControl","getReadonlyValue","setEditableValue","getEditableValue","getPropertyValue","propertyName","jqXHR","textStatus","errorThrown","getRenderElements","getServerResourceURL","resource","userfieldGuid","getRenderValue","showDialog","showPopup","initialParams","userfieldName","getUserfieldControl","isColumn","getControlXpathContext","getUserFieldInstance","replicateUserfieldMethods","userfieldInstance","downloadalldocuments","allowGenerate","preRenderControl","downloadAllDocuments","documents","getControlHtml","renderDocumentsHtml","renderActionsHtml","noActivateButton","allowgenerate","activateButton","getDocumentXpath","renderDocumentItem","joined","buildAllDocumentsUrl","getAllDocumentsDownloadUrl","caseId","idWorkItem","workitemId","htmlControl","updateControlForPrintMode","validateContainer","replaceActionsHtml","buttonExecuted","generateLink","isPropagationStopped","documentTemplateGenerate","showDocumentPreview","deleteDocumentTemplate","resolveDeleteDocumentTemplate","xpathcontext","generateDocumentTemplate","resolveDocumentTemplateGenerate","messageText","autoOpenDocuments","returnCssTypeFile","lenght","redrawDocuments","documentContainer","renderAllDocumentDownload","removeDeleteButton","startIndex","restOfWord","finishIndex","downloadAllDocumentsLink","getErrorTemplate","getTemplateDownload","getTemplateReadonly","setRanageControls","minControl","maxControl","$maxCanvas","$minCanvas","renderRangeControl","$canvas","defineRangeControl","dateMin","suscribe","observer","notify","dateMax","getRenderProperties","typeRangeControl","renderProperties","moneyMin","money","moneyMax","numberMin","numberMax","checkListGroup","typeForm","deferredActions","engine","templateEngine","autoGenerateData","templateGuid","selecttemplate","processPropertyValueArgs","pcaseId","pguidEntity","guidEntity","psurrogatedKey","surrogatedKey","ptags","tagslist","pmaxitems","maxItems","pactionXpath","xpathActions","processPropertyValueDataTmplArgs","ptemplateGuid","defaultAllowActions","allowactions","isHorizontal","allowSearch","templatetype","executeActionImmediately","processPropertyValueExecuteAction","pguidAction","pparameters","executeActions","notifyExecution","actionName","readOnly","templateDefined","actionManager","guidProcess","actionType","guidWFClass","hasStartForm","processStartForm","guidprocess","title","processActionFormCollection","processActionForm","addActionToQueue","actionsList","additionalXpaths","additionalXpath","idParentWorkitem","entityXpath","newValueActionsList","removeActionToQueue","controlValue","countSameActions","count","getPropertiesActionLaucher","actionsLaucher","getTagList","processPropertyValueExecuteConstructor","pguidConstructor","guidConstructor","guidObject","displayNamee","taglist","decoratedClass","decorateRenders","columnVisible","showColumn","readonly","isReadonly","instanceDecoratedClass","applyOverrides","propertyOverrides","invalidElement","overrideDecoratedRenderProperties","renderSummary","postRenderSummary","setSurrogateKey","defaultvalue","setDefaultValue","getCompositeValue","overrideProperties","getSortName","getAnyDecoratedInstance","getSortColumn","arrayEach","originalGetData","getDataForAllCells","findDataById","fetchingData","valueForGrid","tableCell","formattedDate","templates","loadOverrides","initAsyncStuff","loadTemplates","loadTemplate","templateDestination","templateService","resolvedTemplate","getCommonTemplate","containerParams","mobileform","formTemplate","usersForm","contentPanel","nestedForm","tabItem","accordion","accordionItem","group","mobilegroup","searchForm","renderParams","extendedText","mobiletext","check","yesno","cascadingCombo","multiSelect","radio","image","ecm","upload","searchList","letter","formLink","link","layoutImage","layoutLink","layoutLabel","layoutText","layoutDateTime","layoutNumber","layoutMoney","layoutPlaceholder","actionLauncher","layoutBoolean","layoutUpload","entityTemplate","polymorphicLauncher","userfieldWrapper","getSearchRender","getQueryRender","fileprint","collectionnavigator","getUser","rangeDate","rangeMoney","rangeNumber","activityCheckList","columnParams","exclusiveCheck","uploadecm","numberScientificNotation","queryExtendedText","queryText","queryCheck","queryYesNo","queryNumber","queryMoney","queryDate","queryCombo","queryCascadingCombo","querySuggest","queryLabel","queryList","queryMultiSelect","querySearch","queryRadio","queryState","queryCaseState","queryProcess","querySearchUser","execution_device","cachedFactory","getRenderFactory","print","factory","tablet","isSmartphoneDevice","smartphone","getDataService","executionDeferred","deviceFactory","getFactory","subscribe","unsubscribe","publish","update","doc","ownerDocument","location","queryString","getQueryString","process","refreshing","pathProcess","insertBefore","lastWidth","lastHeight","resizeInPopUpHTML","configureRefresh","configureRouting","configureRenderError","configureResize","configureGlobalHandlers","stopAndLog","enableE2EInterface","errorTemplate","getFormData","transformGridControl","processForm","getFailDeferred","jsonErrorMessage","BIZAGI_ORIENTATION","buttonsForm","refreshParams","fastEmpty","canvasParent","resizeTimeout","forceResize","triggerParams","heightActivitiFormContainer","renderForm","buttonContainer","heightButtonContainer","renderBehavior","heightCanvas","innerHeight"],"mappings":"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","sourcesContent":["/**\r\n * Autor: Ricardo Pérez\r\n */\r\n\r\n(function ($) {\r\n\r\n    $.fn.material_bizagi_tabs = function (options, params) {\r\n\r\n        var opts = $.extend({}, $.fn.material_bizagi_tabs.defaults, options);\r\n\r\n        var base = {\r\n            index: 0,\r\n            tabs: [],\r\n            $el: undefined,\r\n            $active: undefined,\r\n            $active_content: undefined, \r\n            init: function(el, params){\r\n                var self = this;\r\n                var $tabs = $(\">ul.bz-tabs\", el);\r\n                var $content_tabs = self.$el = $(el);\r\n                var $ind;\r\n                self.index = opts.active_index_tab;\r\n\r\n                function updatePositions(active, $indicator){\r\n                    if (typeof $indicator !== \"undefined\"){\r\n                        var info = updateIndicatorState($tabs.get(0), active.get(0), opts.direction);\r\n                        $indicator.css(\"left\", info.left).css(\"width\", info.width);\r\n                    }\r\n        \r\n                    var scroll_info = scrollSelectedIntoView($tabs.get(0), active.get(0), opts.direction);                        \r\n                    $tabs.scrollLeft(scroll_info);\r\n                    $tabs.trigger(\"updatePositions\", getTabsMetaInfo($tabs.get(0), active.get(0), opts.direction));\r\n                }\r\n\r\n                $(\">li.bz-tab\", $tabs).each(function(index, element) {\r\n                    if (index === opts.active_index_tab){\r\n                        self.$active = $(this);\r\n                        self.$active.addClass(\"active\");\r\n                    }\r\n                    else {\r\n                        $($(element).data(\"reference\"), $content_tabs).hide();\r\n                    }\r\n                    self.tabs.push({index: index, element: element});\r\n                });\r\n                \r\n                self.$active_content = $(self.$active.data(\"reference\"), $content_tabs);\r\n                \r\n                //Updates the initial position\r\n                updatePositions(self.$active);\r\n                \r\n                $tabs.on('click', '> li.bz-tab', function (e) {\r\n                    e.stopPropagation();\r\n        \r\n                    if (typeof $ind === \"undefined\"){\r\n                        $ind = $(\"<li class='bz-indicator-bar'></li>\");\r\n                        var info = updateIndicatorState($tabs.get(0), self.$active.get(0), opts.direction);\r\n                        $ind.css(\"left\", info.left).css(\"width\", info.width);\r\n                        $ind = $tabs.prepend($ind).find(\".bz-indicator-bar\");\r\n                    }\r\n        \r\n                    self.$active.removeClass('active');            \r\n                    self.$active_content.hide();\r\n        \r\n                    self.$active = $(this);\r\n        \r\n                    var reference = self.$active.data(\"reference\");\r\n                    self.index = self.$active.data(\"index\");\r\n\r\n                    self.$active_content = $(reference, $content_tabs);\r\n        \r\n                    self.$active.addClass('active');\r\n\r\n                    //Updates to the current position\r\n                    updatePositions(self.$active, $ind);\r\n                    $tabs.trigger(\"updateActive\", {index: self.index});\r\n\r\n                    self.$active_content.show();\r\n                    e.preventDefault();\r\n                });\r\n\r\n            },\r\n            getActiveTab: function(){\r\n                return {\r\n                    index: this.index,\r\n                    tab: this.$active,\r\n                    contantTab : this.$active_content\r\n                };\r\n            },\r\n            moveToNextTab: function(){\r\n                var index = ((this.index + 1) < this.tabs.length) ? this.index + 1 : 0;\r\n                this.tabs[index].element.click();\r\n            },\r\n            refreshPositions: function(){\r\n                this.tabs[this.index].element.click();\r\n            }\r\n        };\r\n\r\n        \r\n        if (typeof options == \"string\" && options) {\r\n            base = $(this).data(\"base\");\r\n            if (typeof base == \"undefined\"){\r\n                console.error(\"this plugin is has not been initialized!!\");\r\n            }\r\n            return base[options](params);\r\n        }\r\n        else {\r\n            return this.each(function () {\r\n                base.init(this, params);\r\n                $(this).data(\"base\", base);\r\n            });\r\n        }\r\n    };\r\n\r\n    $.fn.material_bizagi_tabs.defaults = {\r\n        direction: 'ltr',\r\n        active_index_tab: 0\r\n    }\r\n\r\n    function updateIndicatorState(tabs, active_tab, direction) {\r\n        var tabs_meta = getTabsMetaInfo(tabs, active_tab, direction);\r\n        var tabs_info = tabs_meta.tabsMetaInfo;\r\n        var tab_info = tabs_meta.tabMetaInfo;\r\n\r\n        var left = 0;\r\n        if (tabs_info && tab_info) {\r\n            var tmp_left = \"rtl\" === direction ? tabs_info.scrollLeftNormalized + tabs_info.clientWidth - tabs_info.scrollWidth : tabs_info.scrollLeft;\r\n            left = tab_info.left - tabs_info.left + tmp_left;\r\n        }\r\n        return {\r\n            left: left,\r\n            width: tab_info ? tab_info.width : 0\r\n        }\r\n    }\r\n\r\n    function getTabsMetaInfo(tabs, active_tab, direction) {\r\n        var tabs_meta_info = void 0;\r\n        if (tabs) {\r\n            var r = tabs.getBoundingClientRect();\r\n            tabs_meta_info = {\r\n                clientWidth: tabs ? tabs.clientWidth : 0,\r\n                scrollLeft: tabs ? tabs.scrollLeft : 0,\r\n                scrollLeftNormalized: tabs ? getNormalizedScrollLeft(tabs, direction) : 0,\r\n                scrollWidth: tabs ? tabs.scrollWidth : 0,\r\n                left: r.left,\r\n                right: r.right\r\n            }\r\n        }\r\n        var tab_meta_info = void 0;\r\n        if (tabs && false !== active_tab) {\r\n            tab_meta_info = active_tab.getBoundingClientRect();\r\n        }\r\n\r\n        return {\r\n            tabsMetaInfo: tabs_meta_info,\r\n            tabMetaInfo: tab_meta_info\r\n        }\r\n    }\r\n\r\n    function getNormalizedScrollLeft(tabs, direction) {\r\n        var a = tabs.scrollLeft;\r\n        if (\"rtl\" !== direction)\r\n            return a;\r\n        var n = getScrollType(tabs);\r\n        if (\"indeterminate\" === n)\r\n            return Number.NaN;\r\n        switch (n) {\r\n            case \"negative\":\r\n                return e.scrollWidth - e.clientWidth + a;\r\n            case \"reverse\":\r\n                return e.scrollWidth - e.clientWidth - a\r\n        }\r\n        return a\r\n    }\r\n\r\n    function getScrollType(tabs) {\r\n        if (!tabs || !window.document.body)\r\n            return \"indeterminate\";\r\n\r\n        var e = window.document.createElement(\"div\");\r\n        e.appendChild(document.createTextNode(\"ABCD\"));\r\n        e.dir = \"rtl\";\r\n        e.style.fontSize = \"14px\";\r\n        e.style.width = \"4px\";\r\n        e.style.height = \"1px\";\r\n        e.style.position = \"absolute\";\r\n        e.style.top = \"-1000px\";\r\n        e.style.overflow = \"scroll\";\r\n        document.body.appendChild(e);\r\n        type = \"reverse\";\r\n        if (e.scrollLeft > 0)\r\n            type = \"default\";\r\n        else {\r\n            e.scrollLeft = 1;\r\n            0 === e.scrollLeft && (type = \"negative\")\r\n        }\r\n        document.body.removeChild(e);\r\n        return type;\r\n    }\r\n\r\n    scrollSelectedIntoView = function (tabs, active_tab, direction) {\r\n        var tabs_meta = getTabsMetaInfo(tabs, active_tab, direction)\r\n        var tabs_info = tabs_meta.tabsMetaInfo;\r\n        var tab_info = tabs_meta.tabMetaInfo;\r\n\r\n        if (!tab_info || !tabs_info)\r\n            return;\r\n        \r\n        var scroll_info = void 0;\r\n        if (tab_info.left < tabs_info.left) {\r\n            scroll_info = tabs_info.scrollLeft + (tab_info.left - tabs_info.left);\r\n        } else if (tab_info.right > tabs_info.right) {\r\n            scroll_info = tabs_info.scrollLeft + (tab_info.right - tabs_info.right);\r\n        }             \r\n        return scroll_info;\r\n    }\r\n    \r\n})($);","/**\r\n * Material floating button\r\n * By: Nobita\r\n * Repo and docs: https://github.com/nobitagit/material-floating-button\r\n *\r\n * License: MIT\r\n */\r\n\r\n// build script hook - don't remove\r\n(function ($) {\r\n    $.fn.mfb = function (options) {\r\n        \"use strict\";\r\n\r\n        var animations = [\"mfb-zoomin\", \"mfb-slidein\", \"mfb-slidein-spring\", \"mfb-fountain\"];\r\n        var placements = [\"mfb-component--tl\", \"mfb-component--tr\", \"mfb-component--bl\", \"mfb-component--br\"];\r\n\r\n        /**\r\n         * Some defaults\r\n         */\r\n        var self = this;\r\n        var overlay = {\r\n            element: $(\"<div class='mfb-component__overlay'></div>\"),\r\n            opened: false\r\n        };\r\n\r\n        options = options || {};\r\n        options.buttons = options.buttons || [];\r\n        options.activePrincipalButton = options.activePrincipalButton || false;\r\n        options.placement = typeof options.placement !== \"undefined\" ? (placements.indexOf(options.placement) !== -1 ? options.placement : \"mfb-component--br\") : \"mfb-component--br\";\r\n        options.efect = typeof options.efect !== \"undefined\" ? (animations.indexOf(options.efect) !== -1 ? options.efect : \"mfb-slidein\") : \"mfb-slidein\";\r\n        options.clickHoverOpt = options.clickHoverOpt ||\"click\";\r\n        options.toggleMethod = options.toggleMethod || \"data-mfb-toggle\";\r\n        options.menuState = options.menuState || \"data-mfb-state\";\r\n        options.menuStateValue =  options.menuStateValue || \"closed\";\r\n        options.isOpen = options.isOpen||  \"open\";\r\n        options.isClosed = options.isClosed || \"closed\";\r\n        options.mainButtonClass = options.mainButtonClass || \"mfb-component__button--main\";\r\n        options.restingIcon = options.restingIcon || \"mo-icon bz-plus\";\r\n        options.activeIcon = options.activeIcon || \"mo-icon bz-cross\";\r\n\r\n        /**\r\n         * @todo ask: I think this is useless cause we don't need to remove the main button, remove the complete component will be cleaner\r\n         */\r\n        // $(\"[\" + options.toggleMethod + \"='\" + options.clickHoverOpt + \"'] .\" + options.mainButtonClass, this).remove();\r\n        $(this).children(\".mfb-component-holder\").remove();\r\n        /**\r\n         * @fix How about the events that was bind before?\r\n         */\r\n\r\n        var tmpl =\r\n            \"<ul class=\\\"mfb-component-holder #: data.placement # #: data.efect #\\\" #: data.toggleMethod #=\\\"#: data.clickHoverOpt #\\\" #: data.menuState#=\\\"#: data.menuStateValue #\\\">\" +\r\n            \"   <li class=\\\"mfb-component__wrap\\\">\" +\r\n            \"      #if (data.activePrincipalButton && data.buttons.length >= 1){#\" +\r\n            \"       <a #if(typeof data.buttons[0].label !== \\\"undefined\\\"){# data-mfb-label=\\\"#: data.buttons[0].label #\\\"#}# class=\\\"mfb-component__button--main\\\">\" +\r\n            \"           <i class=\\\"mfb-component__main-icon--resting mfb-icon-font bz-#:data.restingIcon#\\\"></i><i class=\\\"mfb-component__main-icon--active mfb-icon-font bz-#:data.buttons[0].icon#\\\"></i>\" +\r\n            \"       </a>\" +\r\n            \"       #}else{#\" +\r\n            \"       <a #if(typeof data.label !== \\\"undefined\\\"){# data-mfb-label=\\\"#: data.label #\\\"#}# class=\\\"mfb-component__button--main\\\">\" +\r\n            \"           <i class=\\\"mfb-component__main-icon--resting mfb-icon-font bz-#:data.restingIcon#\\\"></i><i class=\\\"mfb-component__main-icon--active mfb-icon-font bz-#:data.activeIcon#\\\"></i>\" +\r\n            \"       </a>\" +\r\n            \"       #}#\" +\r\n            \"       # if(data.buttons.length > 0){#\" +\r\n            \"       <ul class=\\\"mfb-component__list\\\">\" +\r\n            \"           #for(var i = (data.activePrincipalButton ? 1 : 0), len = data.buttons.length; i< len; i++){#\" +\r\n            \"           <li data-id=\\\"#: data.buttons[i].id #\\\">\" +\r\n            \"               <a href=\\\"#: data.buttons[i].link #\\\" data-index=\\\"#: i#\\\" #if(typeof data.buttons[i].label !== \\\"undefined\\\"){# data-mfb-label=\\\"#: data.buttons[i].label #\\\"#}# class=\\\"mfb-component__button--child\\\">\" +\r\n            \"                  <i class=\\\"mfb-component__child-icon mfb-icon-font bz-#: data.buttons[i].icon #\\\"></i>\" +\r\n            \"               </a>\" +\r\n            \"           </li>\" +\r\n            \"           #}#\" +\r\n            \"       </ul>\" +\r\n            \"       #}#\" +\r\n            \"   </li>\" +\r\n            \"</ul>\";\r\n\r\n        /**\r\n         * Internal references\r\n         */\r\n        var target,\r\n            currentState;\r\n\r\n        /**\r\n         * For every menu we need to get the main button and attach the appropriate evt.\r\n         */\r\n        function attachEvt(elems, evt, handler) {\r\n            for (var i = 0, len = elems.length; i < len; i++) {\r\n                elems[i].addEventListener(evt, handler, false);\r\n            }\r\n        }\r\n\r\n        function configureBlur(element, blur){\r\n            if(blur){\r\n                element.siblings().addClass(\"mfb-component__overlay--blur\");\r\n                element.closest(\"[data-role]\").siblings().addClass(\"mfb-component__overlay--blur\");\r\n            }else{\r\n                element.siblings().removeClass(\"mfb-component__overlay--blur\");\r\n                element.closest(\"[data-role]\").siblings().removeClass(\"mfb-component__overlay--blur\");\r\n            }\r\n        }\r\n\r\n        /**\r\n         * The open/close action is performed by toggling an attribute\r\n         * on the menu main element.\r\n         *\r\n         * First, check if the target is the menu itself. If it's a child\r\n         * keep walking up the tree until we found the main element\r\n         * where we can toggle the state.\r\n         */\r\n        function toggleButton(evt) {\r\n            target = evt.target;\r\n            while (target && !target.getAttribute(options.toggleMethod)) {\r\n                target = target.parentNode;\r\n                if (!target) {\r\n                    return;\r\n                }\r\n            }\r\n            currentState = target.getAttribute(options.menuState) === options.isOpen ? options.isClosed : options.isOpen;\r\n\r\n            if (options.activePrincipalButton && currentState !== \"open\") {\r\n                var button = options.buttons[0];\r\n                if (options.click) {\r\n                    options.click(evt, $.extend(button, {principal: true}), this);\r\n                }\r\n                configureBlur($(target), true);\r\n            }\r\n\r\n            if (currentState === \"open\" && !overlay.opened) {\r\n                overlay.element.appendTo(target).bind(\"click\", function() {\r\n                    this.remove();\r\n                    overlay.opened = false;\r\n                    target.setAttribute(options.menuState, \"close\");\r\n                    configureBlur($(target), false);\r\n                });\r\n                configureBlur($(target), true);\r\n            } else {\r\n                overlay.element.remove();\r\n                configureBlur($(target), false);\r\n            }\r\n\r\n            overlay.opened = !overlay.opened;\r\n\r\n            target.setAttribute(options.menuState, currentState);\r\n        }\r\n\r\n        function clickChildButton(evt) {\r\n            var index = $(this).data(\"index\");\r\n            var button = options.buttons[index];\r\n\r\n            $(\".mfb-component__overlay\", self).click();\r\n\r\n            if (options.click){\r\n                evt.preventDefault();\r\n                options.click(evt, $.extend(button, {principal: false}), this);\r\n            }\r\n        }\r\n\r\n        function clickPrincipalButton(evt) {\r\n            if (options.click) {\r\n                evt.preventDefault();\r\n                options.click(evt, { principal: true }, this);\r\n            }\r\n        }\r\n\r\n        var template = kendo.template(tmpl, { useWithBlock: false });\r\n        var html = template(options);\r\n\r\n        if (options.position === \"prepend\") {\r\n            this.prepend(html);\r\n        } else {\r\n            this.append(html);\r\n        }\r\n\r\n        // Principal button to toggle\r\n        var toggle = options.buttons.length > 0 ? toggleButton : clickPrincipalButton;        \r\n        attachEvt($(\"[\" + options.toggleMethod + \"='\" + options.clickHoverOpt + \"'] .\" + options.mainButtonClass, this), \"click\", toggle);        \r\n\r\n        // Secondary buttons to click\r\n        attachEvt($(\".mfb-component__button--child\", this), \"click\", clickChildButton);\r\n    };\r\n\r\n// build script hook - don't remove\r\n})(jQuery);\r\n\r\n\r\n(function ($) {\r\n    $.fn.bz_navigation_buttons = function (options) {        \r\n        options = options || {};\r\n        var MARGIN = 2;\r\n        var buttons = options.buttons || [];\r\n        var isDesign = options.isDesign || false;\r\n        var lastActionExecuted = options.lastActionExecuted || false;\r\n        var allowAddButtons = options.allowAddButtons || false;\r\n        var $element = this;\r\n        \r\n\r\n        var addButtonTemplate = '<div class=\"bz-button--add\"><svg class=\"ico_16x16\" ><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-plus\"></use></svg></div>';        \r\n        var containerTemplate = '<ul class=\"bz-buttons--container\"></ul>';\r\n        var buttonTemplate ='<li class=\"bz-button--container\"><button class=\"bz-btn\">{0}</button></li>';        \r\n        var rightNavigationButton = '<div class=\"bz-button--rigth\"><svg class=\"ico_16x16\" ><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-arrow-rigth\"></use></svg></div>';\r\n        var leftNavigationButton = '<div class=\"bz-button--left\"><svg class=\"ico_16x16\" ><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-arrow-left\"></use></svg></div>';       \r\n        \r\n        $element.empty();\r\n        $element.addClass('bz-buttons--navigation');\r\n\r\n        var $container = $(containerTemplate);\r\n        $container.appendTo($element);    \r\n                   \r\n        \r\n        var processButtons = function(){                      \r\n            var result = MARGIN;\r\n            for (var index = 0; index < buttons.length; index++) {\r\n                (function(button){\r\n                    var caption = button.properties.caption;                            \r\n                    var $elementButton =  $(buttonTemplate.replace(\"{0}\", caption));\r\n                    var height = 0;    \r\n\r\n                    var handlerOnClickButton = function(){                                                \r\n                        $container.trigger('onSelectButton', {\r\n                            $element: $elementButton,\r\n                            button: button\r\n                        });\r\n                        \r\n                        var targetElement = $container.get(0);\r\n                        var clientWidth = targetElement.clientWidth; \r\n                        var offset = isDesign ? 35 : 0;\r\n\r\n                        if (targetElement.scrollWidth > clientWidth){\r\n                            if (height > clientWidth) { targetElement.scrollLeft = (height - clientWidth) + offset }\r\n                            else {\r\n                                if ((height - targetElement.scrollLeft) < targetElement.scrollLeft) { targetElement.scrollLeft = (height - (targetElement.scrollLeft + offset)); }\r\n                            }                            \r\n                        }\r\n                    };\r\n                    \r\n                    $elementButton    \r\n                        .on('click', handlerOnClickButton)\r\n                        .appendTo($container);\r\n                    \r\n                    height = result = result + $elementButton.get(0).offsetWidth + MARGIN;    \r\n\r\n                }(buttons[index].button), result)                                                                                                                                                      \r\n            };\r\n                             \r\n            \r\n            if (isDesign) {\r\n                var $addButton = $(addButtonTemplate);\r\n                \r\n                if (allowAddButtons){\r\n                    $addButton.click(function(){                   \r\n                        $container.trigger('onAddButton');                                                            \r\n                    });\r\n        \r\n                    $addButton.appendTo($element);\r\n                }\r\n                \r\n                var htmlButtons = $container.get(0);\r\n\r\n                var heightAddButton = $addButton.get(0).scrollWidth;\r\n                var heightWrapper = $element.get(0).scrollWidth;\r\n                var heightButtons =  htmlButtons.scrollWidth;          \r\n                \r\n                \r\n                var $rightNavigationButton = $(rightNavigationButton);\r\n                var rightNavigationButtonIsLocated = heightButtons > (heightWrapper - heightAddButton);\r\n\r\n                if (rightNavigationButtonIsLocated) { $rightNavigationButton.insertAfter($container); }\r\n\r\n                $rightNavigationButton.on(\"click\", function(){\r\n                    htmlButtons.scrollLeft += 40;\r\n                });\r\n                \r\n                var leftNavigationButtonIsLocated = false;\r\n                var $leftNavigationButton = $(leftNavigationButton);\r\n                                \r\n\r\n                $leftNavigationButton.on(\"click\", function(){                    \r\n                    htmlButtons.scrollLeft -= 40;                    \r\n                });\r\n\r\n                $container.on(\"scroll\", function(ev){\r\n                    var targetElement = ev.target;                     \r\n                    var maxScrollLeft = targetElement.scrollWidth - targetElement.clientWidth;\r\n                    var scrollLeft = targetElement.scrollLeft;\r\n\r\n                    if ( scrollLeft === 0 && leftNavigationButtonIsLocated) {\r\n                        leftNavigationButtonIsLocated = false;\r\n                        $leftNavigationButton.detach();\r\n                    }\r\n\r\n                    if (rightNavigationButtonIsLocated && scrollLeft === maxScrollLeft) {\r\n                        rightNavigationButtonIsLocated = false;\r\n                        $rightNavigationButton.detach();\r\n                    }\r\n                                        \r\n                    if (!leftNavigationButtonIsLocated && scrollLeft > 0){\r\n                       \r\n                        $leftNavigationButton.prependTo($element);     \r\n                        leftNavigationButtonIsLocated = true;\r\n                    }\r\n                    \r\n                    if (!rightNavigationButtonIsLocated && scrollLeft < maxScrollLeft){\r\n                        rightNavigationButtonIsLocated = true;\r\n                        $rightNavigationButton.insertAfter($container);       \r\n                    }                    \r\n                });\r\n                \r\n                if (lastActionExecuted === \"addButton\") {\r\n                    if (rightNavigationButtonIsLocated){\r\n                        htmlButtons.scrollLeft = (htmlButtons.scrollWidth - htmlButtons.clientWidth);  \r\n                    }                    \r\n                }\r\n            }\r\n        }              \r\n\r\n        processButtons();\r\n        \r\n        return  $container; \r\n    }\r\n\r\n})(jQuery);    ","/*\r\nAdd the Material Design Style Ripple Effect on Click / Touch.\r\n*/\r\n(function ($) { \r\n    var transparent;\r\n    //only run this once. this addes an empty elment in boody root and gets the defintion of the browsers transparent color scheme.\r\n    if (typeof (transparent) == \"undefined\") {\r\n        // Get this browser's definition of no back ground / transprent, rgba(0,0,0,0) etc..\r\n        // Must be appended else Chrome etc return 'initial'\r\n        var $temp = $('<div style=\"background:none;display:none;\"/>').appendTo('body');\r\n        //now we just get the value given back to use by the browser for its spcific transparent color scheme.\r\n        transparent = $temp.css('backgroundColor');\r\n        //remove the temp object since were done with it.\r\n        $temp.remove();\r\n    }\r\n\r\n\r\n    //add Material desing style rippple effect to a given element that animates on click / touch.\r\n    $.fn.rippleEffect = function (options) {\r\n        // Extend our default options with those provided.\r\n        var opts = $.extend({}, $.fn.rippleEffect.defaults, options);\r\n\r\n\r\n        return this.each(function () {\r\n            $(this).on(\"click\", function (e) {\r\n                var $thisElement = $(this),\r\n                eventPageX,\r\n                eventPageY,\r\n                inkX,\r\n                inkY,\r\n                maxDiameter,\r\n                eventType = e.type,\r\n                rippleColor,\r\n                $inkSpan,\r\n                $inkparent;\r\n\r\n                //default append\r\n                $inkparent = $thisElement;\r\n\r\n                function getRippleColorFromTraverse() {\r\n                    if (opts.inkColor != \"\") {\r\n                        return opts.inkColor;\r\n                    } else {\r\n                        //try and get from elemnt or parent what ever has a bg color and it will lighten or dark based on color.\r\n                        return getInkColor($inkparent, opts.inkDefaultColor);\r\n                    }\r\n                }\r\n                //check to see if were appending ink to a parent element other than the trigger\r\n                //if you append to a parent item that item will have the ripple span and it may block access to links\r\n                //all i had to do was give any of the siblings of the ripple a z-index of 1, some i had to set position to relative.\r\n                if (opts.appendInkTo != \"\") {\r\n                    $inkparent = $thisElement.closest(opts.appendInkTo);\r\n                }\r\n                // check to se if we have an ink, if not we need to add it in, we only need to do this once.\r\n                if ($inkparent.find(\".\" + opts.inkClass).length == 0) {\r\n                    //add ink \r\n                    $inkparent.append('<span class=\"' + opts.inkContainerClass + '\"><span class=\"' + opts.inkClass + '\"></span></span>');\r\n                }\r\n                //set the ink var targeting the ink within the element to prevent dup ink animates.\r\n                $inkSpan = $inkparent.find(\".\" + opts.inkContainerClass + \" > \" + \" .\" + opts.inkClass);\r\n                //incase of quick double click or animate is present. remove the animation\r\n                $inkSpan.removeClass(\"animate\");\r\n\r\n                //now if the ink has no height set we need to add it in.\r\n                if (!$inkSpan.height() && !$inkSpan.width()) {\r\n                    //use $thisElement width or height whichever is larger for the diameter to make a circle which can cover the entire element.\r\n                    maxDiameter = Math.max($inkparent.outerWidth(), $inkparent.outerHeight());\r\n                    //set width and height and get bg color for the\r\n                    //see if ripple color was provided via data attr.\r\n                    if (typeof ($thisElement.data(\"ripple\")) != \"undefined\" && $thisElement.data(\"ripple\") != \"\") {\r\n                        rippleColor = $thisElement.data(\"ripple\");\r\n                    } else {\r\n                        //check if a target element id to get a ripple color from is provided\r\n                        if (typeof ($thisElement.data(\"ripple-getcolorfromid\")) != \"undefined\" && $thisElement.data(\"ripple-getcolorfromid\") != \"\") {\r\n                            var idToUse = $thisElement.data(\"ripple-getcolorfromid\");\r\n                            //make sure element is on page.\r\n                            if ($(idToUse).length > 0) {\r\n                                //set from given elmements bgcolor.\r\n                                rippleColor = $(idToUse).css(\"background-color\");\r\n                            } else {\r\n                                //get from default ways\r\n                                rippleColor = getRippleColorFromTraverse();\r\n                            }\r\n                        } else {\r\n                            //get from default ways\r\n                            rippleColor = getRippleColorFromTraverse();\r\n                        }\r\n                    }\r\n                    //set h and w and ripple color.\r\n                    $inkSpan.css({ height: maxDiameter, width: maxDiameter, \"background-color\": rippleColor });\r\n                }\r\n                \r\n                //now that the ink is taken care of we need to set the position where it starts, which if from click.\r\n                //get event type.\r\n                if(eventType === \"click\"){\r\n                    eventPageX = e.pageX; \r\n                    eventPageY = e.pageY;\r\n                } else if(eventType === \"touchstart\") {\r\n                    var touch = (e.originalEvent.touches[0] || e.originalEvent.changedTouches[0]);\r\n                    eventPageX = touch.pageX;\r\n                    eventPageY = touch.pageY\r\n                }\r\n               \r\n                inkX = (eventPageX - $inkparent.offset().left - $inkSpan.width() / 2);\r\n                inkY = (eventPageY - $inkparent.offset().top - $inkSpan.height() / 2);\r\n                $inkSpan.css({ top: inkY + 'px', left: inkX + 'px' }).addClass(\"animate\");\r\n                //remove animation after a little bit.\r\n                setTimeout(function () {\r\n                    $inkSpan.removeClass(\"animate\")\r\n                }, 400);\r\n\r\n            });\r\n        });\r\n    };\r\n    // Plugin defaults – added as a property on our plugin function.\r\n    $.fn.rippleEffect.defaults = {\r\n        inkContainerClass: \"ripple\",\r\n        inkClass: \"ink\",\r\n        //to avoid a global default you can add data-ripple=\"#ff00ff\" to the element that will have the ripple and that color will be used.\r\n        //or to use a tagrget elements background color for the ripple you can set the data-ripple=\"\" and data-ripple-getcolorfromid=\"#elmentWIthBGColorToUSe\"\r\n        inkDefaultColor: \"#F0F0F0\", //falback color to use if using parent traversing to get a bg color.\r\n        inkColor: \"\", //the ink color you want the element to use, this will override any bg checks for element and parent traversing, but if the ement has data-ripple=\"#fff\" the #fff will be used above all else\r\n        //if you append to a parent item that item will have the ripple span and it may block access to links and child elements\r\n        //all i had to do was give any of the children of the appended element a z-index of 1, some i had to set position to relative.\r\n        appendInkTo: \"\" //append ink to a diffrent element. will find closest element matching.\r\n    };\r\n\r\n    //Now users can include a line like this in their scripts:\r\n    //$.fn.rippleEffect.defaults.inkDefaultColor = \"#0000FF\";\r\n\r\n    // Define our get background color function.\r\n    //this will try and get a background color for the ink color manipulation \r\n    //by starting with the element provided and going as far back to the body unless a value is found.\r\n    //providing a falback value will make sure that an actual color is returned\r\n    function getBackgroundColorForInk($element, fallback) {\r\n        function getBgColor($elementToCheckForBg) {\r\n            //here we check against the @transparent var that is set on load.\r\n            if ($elementToCheckForBg.css('backgroundColor') == transparent) {\r\n                //here we check if were not at body, if not, then run again on the elments parent, if were at body use fallback or the browers take on transparent.\r\n                return !$elementToCheckForBg.is('body') ? getBgColor($elementToCheckForBg.parent()) : fallback || transparent;\r\n            } else {\r\n                //it was not transparent return this color.\r\n                return $elementToCheckForBg.css('backgroundColor');\r\n            }\r\n        }\r\n        //run the function which will repeate as long as it needs until it hits body to find a color to use.\r\n        return getBgColor($element);\r\n    };\r\n\r\n    //create as a property so users can set make there own lum check.\r\n    //returns the direction lumination should go for ink contrast.\r\n    //get the lumination value for a given color.\r\n    $.fn.rippleEffect.getLuminationValue = function (hexcolor) {\r\n        var hexcolor = hexcolor.substring(1);      // strip #\r\n        var rgb = parseInt(hexcolor, 16);   // convert rrggbb to decimal\r\n        var r = (rgb >> 16) & 0xff;  // extract red\r\n        var g = (rgb >> 8) & 0xff;  // extract green\r\n        var b = (rgb >> 0) & 0xff;  // extract blue\r\n\r\n        var luma = 0.2126 * r + 0.7152 * g + 0.0722 * b; // per ITU-R BT.709\r\n        return luma;\r\n    }\r\n\r\n    //create as property, for user override. \r\n    //this was from a site point article.\r\n    //get a new color luminance -0.15 is darker by 15% and 0.20 is lighter by 20%\r\n    $.fn.rippleEffect.getColorLuminance = function (hexcolor, lum) {\r\n        // validate hex string\r\n        hexcolor = String(hexcolor).replace(/[^0-9a-f]/gi, '');\r\n        if (hexcolor.length < 6) {\r\n            hexcolor = hexcolor[0] + hexcolor[0] + hexcolor[1] + hexcolor[1] + hexcolor[2] + hexcolor[2];\r\n        }\r\n        //set a default lum value.\r\n        lum = lum || 0;\r\n\r\n        // convert to decimal and change luminosity\r\n        var resultHex = \"#\", c, i;\r\n        for (i = 0; i < 3; i++) {\r\n            c = parseInt(hexcolor.substr(i * 2, 2), 16);\r\n            c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\r\n            resultHex += (\"00\" + c).substr(c.length);\r\n        }\r\n\r\n        return resultHex;\r\n    }\r\n\r\n    //create property for overide if wanted, this converts an rgb value to hex.\r\n    //it does not work right with rgba though it just returns the bas rgb part so the trans is not claculated in.\r\n    $.fn.rippleEffect.colorToHex = function (rgb) {\r\n        //first echeck to see if we already have a hex color, if so just return.\r\n        if (rgb.substr(0, 1) === '#') {\r\n            return color;\r\n        }\r\n        rgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\r\n        return (rgb && rgb.length === 4) ? \"#\" +\r\n         (\"0\" + parseInt(rgb[1], 10).toString(16)).slice(-2) +\r\n         (\"0\" + parseInt(rgb[2], 10).toString(16)).slice(-2) +\r\n         (\"0\" + parseInt(rgb[3], 10).toString(16)).slice(-2) : '';\r\n    }\r\n\r\n    //this is the base function that does all of the magic, it gets a bkg color, \r\n    //then changes the colors lumanince so the ink is visiable when being animated.\r\n    function getInkColor($element, fallBackColor) {\r\n        var backgroundOrInhreitedBackGround,\r\n            hex,\r\n            luma,\r\n            returnLumintion;\r\n        //get back ground color of element / or parent with an actual color or use fallback of a lighter gray \r\n        // Call our getBackgroundColorForInk function.\r\n\r\n        backgroundOrInhreitedBackGround = getBackgroundColorForInk($element, fallBackColor);\r\n        //convert to hex, this returns hex if it is already hex.\r\n        //call our colorToHex function\r\n        hex = $.fn.rippleEffect.colorToHex(backgroundOrInhreitedBackGround);\r\n        //now get the lumination value of this bg.\r\n        //call our getLuminationValue function\r\n        luma = $.fn.rippleEffect.getLuminationValue(hex);\r\n\r\n        //239 for lighter lumination ok \r\n        if (luma <= 239) {\r\n            //go lighter alwasy prefered.\r\n            //we need to make sure we are light enough though\r\n            if (luma <= 70) {\r\n                returnLumintion = $.fn.rippleEffect.getColorLuminance(hex, 0.80);\r\n            } else {\r\n                returnLumintion = $.fn.rippleEffect.getColorLuminance(hex, 0.20);\r\n            }\r\n        } else {\r\n            //go darker\r\n            returnLumintion = $.fn.rippleEffect.getColorLuminance(hex, -0.15);\r\n        }\r\n        return returnLumintion;\r\n    };\r\n\r\n})(jQuery);","/*\r\n*   Name: Bizagi Grid for tablet\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This widget will extend the bizagi grid widget to specialize into a tablet view\r\n*\r\n*   Markup: <div></div>\r\n*\r\n*   Styles:\r\n*   - css/bizagi/tablet/controls/bizagi.grid.css\r\n*/\r\n\r\n(function ($) {\r\n    $.widget(\"ui.bizagi_grid_tablet\", $.ui.bizagi_grid, {\r\n\r\n        /**\r\n         * Constructor\r\n         * @private\r\n         */\r\n        _init: function () {\r\n            this._super();\r\n\r\n            this.isOfflineForm = typeof (this.options.isOfflineForm) !== \"undefined\" && bizagi.util.parseBoolean(this.options.isOfflineForm);\r\n        },\r\n\r\n        /**\r\n         * Method to attach any handler to the grid\r\n         * @returns {}\r\n         */\r\n        attachHandlers: function () {\r\n            var self = this;\r\n\r\n            // Add paging events\r\n            self._getComponent(\"pager\").find(\"ul li button\").bind(\"click\", function () {\r\n                var pageNumber = parseInt($(this).attr(\"data-page-number\"));\r\n\r\n                if (pageNumber) {\r\n                    self.changePage(pageNumber);\r\n                }\r\n            });\r\n\r\n            //TODO falta implementar\r\n            self._getComponent(\"dynamicPager\").find(\"input\").bind(\"click\", function () {\r\n                self.selectDynamicPager();\r\n            });\r\n\r\n            // Add sort events\r\n            self._getComponent(\"columns\").find(\".bz-tablet-grid__label\").bind(\"click\", function () {\r\n                if (!self.isOfflineForm) {\r\n                    var columnIndex = $(this).attr(\"data-column-index\");\r\n                    self.sortBy(columnIndex);\r\n                }\r\n            });\r\n\r\n            // Bind button actions\r\n            self._getComponent(\"buttons\").find(\"[data-action]\").bind(\"click\", function () {\r\n                if ($(this).attr(\"data-action\") === \"totalizer\") {\r\n                    self.totalizer();\r\n                } else {\r\n                    self.processAction($(this).attr(\"data-action\"));\r\n                    self.unselectRow();\r\n                }\r\n            });\r\n\r\n            self._getComponent(\"rowButtons\").find(\"[data-action]\").bind(\"click\", function () {\r\n                self.processAction($(this).attr(\"data-action\"));\r\n                self.unselectRow();\r\n            });\r\n\r\n            if (this.isOfflineForm) {\r\n                self._getComponent(\"rows\").on(\"click\", \".bz-tablet-grid__cell-more [data-action=more]\", function (evt) {\r\n                    var $context = $(evt.target).parents(\"[data-bizagi-component=cells]\");\r\n\r\n                    if ($context && $context.hasClass(\"bz-tablet-grid__row\")) {\r\n                        var businessKey = $context.attr(\"data-business-key\");\r\n                        var isNewRow = bizagi.util.parseBoolean($context.attr(\"data-new-row\")) || false;\r\n\r\n                        if (isNewRow) {\r\n                            self.onRemoveNewRow(businessKey);\r\n                        } else {\r\n                            self.processAction(\"remove\", {key: businessKey});\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n\r\n                self._getComponent(\"rows\").find(\"tr\").bind(\"click\", function (evt) {\r\n                    var $context = $(evt.target).closest(\".bz-tablet-grid__cell\");\r\n\r\n                    evt.stopPropagation();\r\n\r\n                    if ($context && $context.hasClass(\"bz-tablet-grid__cell\")) {\r\n                        var key = $(this).attr(\"data-key\");\r\n                        var businessKey = $(this).attr(\"data-business-key\");\r\n\r\n                        self.selectRow(key, businessKey);\r\n                    }\r\n                });\r\n\r\n                // Bind special cell button action\r\n                self._addColumnActions();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Popup Total\r\n         * @returns {}\r\n         */\r\n        totalizer: function () {\r\n            this.options.totalData();\r\n        },\r\n        /**\r\n         * Executes the row selected handler\r\n         * @returns {}\r\n         */\r\n        onRowSelected: function () {\r\n            // Call base\r\n            $.ui.bizagi_grid.prototype.onRowSelected.apply(this, arguments);\r\n\r\n            // Show row buttons             \r\n            this._showRowButtons();\r\n        },\r\n\r\n        /**\r\n         * Executes the row un-selected handler\r\n         * @returns {}\r\n         */\r\n        onRowUnselected: function () {\r\n            // Call base\r\n            $.ui.bizagi_grid.prototype.onRowUnselected.apply(this, arguments);\r\n\r\n            // Hide row buttons           \r\n            this._hideRowButtons();\r\n        },\r\n\r\n        getCell: function (key, xpath, index) {\r\n            var self = this;\r\n            var row = self._getComponent(\"rows\").find(\"[data-business-key=\" + key + \"]\");\r\n            var allVisibleTd, cell = \"\";\r\n\r\n            if (index < 4) {\r\n                allVisibleTd = $(\"td\", $(row));\r\n                cell = allVisibleTd[index + 1];\r\n            } else {\r\n                allVisibleTd = $(\"td:visible\", $(row));\r\n                cell = allVisibleTd[index];\r\n            }\r\n\r\n            return $(cell);\r\n        },\r\n\r\n        /**\r\n         * Template method to check if buttons component must be rendered\r\n         * @returns {}\r\n         */\r\n        _canShowButtons: function () {\r\n            var actions = this.options.actions;\r\n\r\n            if (this.isOfflineForm) {\r\n                return actions[\"add\"] || actions[\"remove\"] || actions[\"edit\"] || actions[\"inlineAdd\"];\r\n            } else {\r\n                return actions[\"add\"] || actions[\"hasTotalizer\"];\r\n            }\r\n        },\r\n\r\n        /*\r\n        *   This method draws a grid row\r\n        */\r\n        drawRow: function (rowData, isNewRow) {\r\n            var self = this;\r\n            var options = self.options;\r\n            var key = rowData[self.columnKeyIndex];\r\n            var newRow = isNewRow || false;\r\n            var rnd = Math.floor(Math.random() * 10000);\r\n            var row = $.fasttmpl(options.template.row, {\r\n                key: rnd,\r\n                isNewRow: isNewRow,\r\n                businessKey: key\r\n            });\r\n\r\n            // Resolve cells\r\n            var cells = \"\";\r\n            $.each(rowData, function (i, cell) {\r\n                // Draw normal cell\r\n                cells += self.drawCell(i, key, cell, newRow);\r\n            });\r\n\r\n            if (self._canShowRowButtons()){\r\n                // Draw special column\r\n                cells += self.drawSpecialCell(self.options.columns.length + 1);\r\n            }\r\n\r\n            // Resolve cells template\r\n            row = self._replaceElement(row, \"cells\", cells);\r\n            return row;\r\n        },\r\n\r\n        /*\r\n        *   This method draws a grid pager\r\n        */\r\n        drawPager: function () {\r\n            var self = this;\r\n            var options = self.options;\r\n\r\n            // Calculate pages\r\n            var pages = [];\r\n            var renderPages = [];\r\n\r\n            for (var i = 1; i <= self.data.total; i++) {\r\n                pages.push({\r\n                    number: i,\r\n                    active: (i == self.data.page)\r\n                });\r\n            }\r\n\r\n            if (self.data.page < 3 || self.data.page > self.data.total - 2) {\r\n                renderPages = [];\r\n            } else {\r\n                renderPages = [self.data.page - 1, self.data.page, self.data.page + 1];\r\n            }\r\n\r\n            var pagination = {\r\n                renderPages: renderPages,\r\n                pages: pages,\r\n                pagination: {\r\n                    totalPages: self.data.total,\r\n                    currentPage: self.data.page\r\n                }\r\n            };\r\n\r\n            // Resolve pager template\r\n            return $.fasttmpl(options.template.pager, pagination);\r\n        },\r\n\r\n        /**\r\n         * Template method to check if row buttons must be displayed when the row is selected\r\n         * @returns {}\r\n         */\r\n        _canShowRowButtons: function () {\r\n            var actions = this.options.actions;\r\n\r\n            if (this.isOfflineForm) {\r\n                return false;\r\n            } else {\r\n                return actions[\"edit\"] || actions[\"details\"] || actions[\"remove\"] || this.options.subType == \"adhocGrid\";\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show the row buttons\r\n         * @returns {}\r\n         */\r\n        _showRowButtons: function () {\r\n            var self = this;\r\n            var doc = window.document;\r\n            var element = self.element;\r\n\r\n            // Add selected style to row\r\n            var tr = element.find(\"[data-bizagi-component=rows] tr[data-key=\" + self.selectedRow + \"]\");\r\n            tr.addClass(\"ui-bizagi-state-selected\");\r\n        },\r\n\r\n        /**\r\n         * Hide the row buttons\r\n         * @returns {}\r\n         */\r\n        _hideRowButtons: function () {\r\n            var self = this;\r\n\r\n            // Call base\r\n            $.ui.bizagi_grid.prototype.onRowUnselected.apply(self, arguments);\r\n\r\n            var tr = self._getComponent(\"rows\").find(\"tr[data-key=\" + self.selectedRow + \"]\");\r\n            tr.removeClass(\"ui-bizagi-state-selected\");\r\n\r\n            // Hide floating buttons for the row\r\n            if (!self.isOfflineForm) {\r\n                var floatingButtons = self._getComponent(\"rowButtons\");\r\n                floatingButtons.hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Return the new created ids\r\n         * @param {} rows\r\n         * @returns {}\r\n         */\r\n        getNewRowKeys: function (rows) {\r\n            var self = this;\r\n\r\n            rows = rows || self._getComponent(\"rows\").find(\"[data-new-row=true]\");\r\n\r\n            return $.map(rows, function (row, i) {\r\n                return $(row).data(\"business-key\");\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Process an action in order to do something with the grid\r\n         * @param {} action\r\n         * @returns {}\r\n         */\r\n        processAction: function (action) {\r\n            var self = this;\r\n\r\n            // Call base\r\n            $.ui.bizagi_grid.prototype.processAction.apply(self, arguments);\r\n\r\n            if (action === \"save\") {\r\n                self.onSaveAddedRows();\r\n            }\r\n            if (action === \"cancel\") {\r\n                self.onCancelEdition();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if row its new\r\n         * @param {} businessKey\r\n         * @returns {}\r\n         */\r\n        isNewRecord: function (businessKey) {\r\n            var self = this;\r\n            var row = self._getComponent(\"rows\");\r\n\r\n            if (row) {\r\n                businessKey = row.find(\"[data-business-key='\" + businessKey + \"']\");\r\n                if ($(businessKey).data(\"new-row\")) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Add inline row\r\n         * @returns {}\r\n         */\r\n        addInlineRow: function () {\r\n            var self = this;\r\n\r\n            // Draw the new row\r\n            self._triggerHandler(\"beforeInlineAdd\");\r\n            var html = self.drawRow(self.createAddRowData(), true);\r\n            var newRow = $(html);\r\n\r\n            // Execute the postrender\r\n            self.postRenderRow(newRow);\r\n\r\n            // Append to rows component\r\n            self._getComponent(\"rows\").append(newRow);\r\n\r\n            var buttons = self._getComponent(\"buttons\");\r\n\r\n            if (self.isOfflineForm) {\r\n                buttons.find(\"[data-action=save]\").removeClass(\"bz-tablet-grid__buttons--hidden\");\r\n                buttons.find(\"[data-action=cancel]\").removeClass(\"bz-tablet-grid__buttons--hidden\");\r\n            } else {\r\n                buttons.find(\"[data-action=save]\").css(\"display\", \"inline-block\");\r\n                buttons.find(\"[data-action=cancel]\").css(\"display\", \"inline-block\");\r\n            }\r\n\r\n            // Show table component if there are no rows\r\n            if (self.data.rows.length === 0) {\r\n                self._getComponent(\"table\").show();\r\n                self._getComponent(\"emptyTable\").hide();\r\n            }\r\n\r\n            self._triggerHandler(\"afterInlineAdd\");\r\n        },\r\n\r\n        /**\r\n         * Creates a dummy data for the new row\r\n         * @returns {}\r\n         */\r\n        createAddRowData: function () {\r\n            var self = this;\r\n            var options = self.options;\r\n            var row = [];\r\n\r\n            $.each(options.columns, function (i) {\r\n\r\n                if (i === self.columnKeyIndex) {\r\n                    // Add random key so we can identify them later\r\n                    var key = Math.ceil(Math.random() * 100000);\r\n                    row.push(key);\r\n                } else {\r\n                    // Add null value\r\n                    row.push(null);\r\n                }\r\n            });\r\n\r\n            return row;\r\n        },\r\n\r\n        /**\r\n         * Executes the on add row handler\r\n         * @returns {}\r\n         */\r\n        onAddRow: function () {\r\n            var self = this;\r\n\r\n            // Allow add\r\n            if (self.options.actions.add) {\r\n                if (self.options.actions.inlineAdd) {\r\n                    return self.addInlineRow();\r\n                } else {\r\n                    // Open dialog with addform\r\n                    return self._triggerHandler(\"addRow\");\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Executes when the user presses the cancel button, after inline add edition\r\n         * @returns {}\r\n         */\r\n        onCancelEdition: function () {\r\n            var self = this;\r\n\r\n            // Remove zero key rows\r\n            var rows = self._getComponent(\"rows\").find(\"[data-new-row=true]\");\r\n            var savedRows = self._getComponent(\"rows\").find(\"[data-new-row=false]\");\r\n            rows.detach();\r\n\r\n            // Hide buttons\r\n            var buttons = self._getComponent(\"buttons\");\r\n\r\n            if (self.isOfflineForm) {\r\n                buttons.find(\"[data-action=save]\").addClass(\"bz-tablet-grid__buttons--hidden\");\r\n                buttons.find(\"[data-action=cancel]\").addClass(\"bz-tablet-grid__buttons--hidden\");\r\n            } else {\r\n                buttons.find(\"[data-action=save]\").hide();\r\n                buttons.find(\"[data-action=cancel]\").hide();\r\n            }\r\n\r\n            // Show table component if there are no rows\r\n            if (savedRows.length === 0) {\r\n                self._getComponent(\"table\").hide();\r\n                self._getComponent(\"emptyTable\").show();\r\n            }\r\n\r\n            return self._triggerHandler(\"cancelEdition\", {keys: self.getNewRowKeys(rows)});\r\n        },\r\n\r\n        /**\r\n         * Executes when the user presses the save button, after inline add edition\r\n         * @returns {}\r\n         */\r\n        onSaveAddedRows: function () {\r\n            var self = this;\r\n\r\n            // Retrieve key of added rows\r\n            var newRowKeys = self.getNewRowKeys();\r\n            var buttons = self._getComponent(\"buttons\");\r\n\r\n            // Hide buttons         \r\n            if (newRowKeys.length >= 1 && self.isValid()) {\r\n\r\n                var row = self._getComponent(\"rows\");\r\n\r\n                if (self.isOfflineForm) {\r\n                    $.each(newRowKeys, function (key, value) {\r\n                        var businessKey = row.find(\"[data-business-key='\" + value + \"']\");\r\n                        $(businessKey).attr(\"data-new-row\", 'false');\r\n                    });\r\n\r\n                    buttons.find(\"[data-action=save]\").addClass(\"bz-tablet-grid__buttons--hidden\");\r\n                    buttons.find(\"[data-action=cancel]\").addClass(\"bz-tablet-grid__buttons--hidden\");\r\n\r\n                    self._triggerHandler(\"saveAddedRows\", {keys: newRowKeys});\r\n\r\n                    return true;\r\n                } else {\r\n                    buttons.find(\"[data-action=save]\").hide();\r\n                    buttons.find(\"[data-action=cancel]\").hide();\r\n\r\n                    self._triggerHandler(\"saveAddedRows\", {keys: newRowKeys});\r\n\r\n                    return self._triggerHandler(\"removeNewRecords\", {keys: newRowKeys});\r\n                }\r\n\r\n            } else {\r\n                return true;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add new column actions\r\n         * @private\r\n         */\r\n        _addColumnActions: function () {\r\n            var self = this;\r\n            var items = [];\r\n\r\n            if (self.options.actions.details) {\r\n                items.push({\r\n                    name: bizagi.localization.getResource(\"render-collection-navigator-details-form\"),\r\n                    fn: function (e) {\r\n                        var businessKey = $(e).parents(\"[data-bizagi-component=cells]\").attr(\"data-business-key\");\r\n\r\n                        if (self.options.actions.details) {\r\n                            self.processAction(\"details\", {key: businessKey});\r\n                        } else {\r\n                            self.processAction(\"more\", {key: businessKey});\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (self.options.actions.edit) {\r\n                items.push({\r\n                    name: bizagi.localization.getResource(\"render-grid-edit-label\"),\r\n                    fn: function (e) {\r\n                        var businessKey = $(e).parents(\"[data-bizagi-component=cells]\").attr(\"data-business-key\");\r\n\r\n                        self.processAction(\"edit\", {key: businessKey});\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (self.options.actions.remove) {\r\n                items.push({\r\n                    name: bizagi.localization.getResource(\"render-ecm-confirm-bt-delete\"),\r\n                    fn: function (e) {\r\n                        var businessKey = $(e).parents(\"[data-bizagi-component=cells]\").attr(\"data-business-key\");\r\n\r\n                        self.processAction(\"remove\", {key: businessKey});\r\n                    }\r\n                });\r\n            }\r\n\r\n            self._getComponent(\"rows\").find(\"[data-action=more]\").overflowMenu({items: items});\r\n        },\r\n\r\n        /**\r\n         * Executes when the user presses the cancel button, after inline add edition\r\n         * @param key\r\n         * @param businessKey\r\n         */\r\n        onRemoveNewRow: function (businessKey) {\r\n            var self = this;\r\n            var buttons = self._getComponent(\"buttons\");\r\n\r\n            // Remove zero key rows\r\n            var cancelNewRow = self._getComponent(\"rows\").find(\"tr[data-business-key=\" + businessKey + \"]\");\r\n            var savedRows = self._getComponent(\"rows\").find(\"[data-new-row=false]\");\r\n            var newRows = self._getComponent(\"rows\").find(\"[data-new-row=true]\");\r\n\r\n            cancelNewRow.detach();\r\n\r\n            // Hide buttons\r\n            if(newRows.length === 1) {\r\n                buttons.find(\"[data-action=save]\").addClass(\"bz-tablet-grid__buttons--hidden\");\r\n                buttons.find(\"[data-action=cancel]\").addClass(\"bz-tablet-grid__buttons--hidden\");\r\n            }\r\n\r\n            // Show table component if there are no rows\r\n            if (savedRows.length === 0) {\r\n                self._getComponent(\"table\").hide();\r\n                self._getComponent(\"emptyTable\").show();\r\n            }\r\n\r\n            return self._triggerHandler(\"cancelEdition\", {keys: self.getNewRowKeys(cancelNewRow)});\r\n        },\r\n\r\n        /**\r\n         * Replaces a matched element in the container for the specified \"replace\" element\r\n         * @param html\r\n         * @param element\r\n         * @param replace\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _replaceElement: function (html, element, replace) {\r\n            return html.replace(new RegExp(\"{{element \" + element + \"}}\", 'g'), replace);\r\n        }\r\n\r\n    });\r\n\r\n})(jQuery);\r\n","/**\r\n * Name:\r\n *   Author: Bizagi Mobile team\r\n *   Comments:\r\n * Structure to applicate plugin\r\n *  <div class=\"bz-bizagi-container-tap-popup\"> //container\r\n    <div class=\"cell bz-container-items-tabs\"> // represent item of tab\r\n    <span >${displayName}</span>// the first span always is the title                                    \r\n    <span> ........</span> // after the span can place the items you want\r\n    <div> .........</div> // etc\r\n    </div> <!-- end cell-->\r\n    </div><!-- end bz-bizagi-container-tap-popup-->\r\n**/\r\n(function ($) {\r\n    $.fn.bztabs = function (params) {\r\n\r\n        var self = $(this);\r\n\r\n        params = params || {};\r\n        params.activeTab = params.activeTab || 0;\r\n        params.tabNumber = params.tabNumber || 1;\r\n\r\n\r\n        var activate = (params.activate && typeof params.activate === \"function\") ? params.activate : function () { };\r\n        var beforeActivate = (params.beforeActivate && typeof params.beforeActivate === \"function\") ? params.beforeActivate : function () { };\r\n\r\n        // PopUp control\r\n        var popUp = self.find(\">div.bz-bizagi-container-tap-popup\").hide();\r\n        // Depending on tabNumber a percentage will be in the width of each tab\r\n        var tabCountPopup = popUp.children().length;\r\n        // Base to build the header of tabs\r\n        var tabHeader = $(\"<div class='bz-header_select'></div>\");\r\n\r\n        var tabCountReal = (params.tabNumber > tabCountPopup) ? tabCountPopup : params.tabNumber;\r\n\r\n        // round down\r\n        var widthRow = Math.floor(100 / Number(tabCountReal));\r\n\r\n        // Duplicate the tabs to create the header\r\n        popUp.children().each(function (i, item) {\r\n            tabHeader.append(\r\n                \"<div class='bz-wp-tabs-ui bz-wp-tabs-item' data-index='\" + i + \"' data-reference-tab='\" +\r\n                item.getAttribute(\"data-reference-tab\") + \"'><span>\" +\r\n                item.textContent + \"</span></div>\");\r\n        });\r\n\r\n        tabHeader.find(\"> .bz-wp-tabs-ui\").css(\"width\", widthRow + \"%\");        \r\n        tabHeader.append(\"<div class='bz-wp-tabs-arrow-container'><div class='bz-cm-icon bz-mo-icon bz-plus'></div></div>\");\r\n\r\n        self.prepend(tabHeader);\r\n\r\n        var tabCurrent = self.find(\"> .bz-bizagi-container-tap-popup > .bz-container-items-tabs\").eq(params.activeTab);\r\n        var itemCurrent = $($(tabCurrent).data(\"reference-tab\"), self);\r\n\r\n        itemCurrent.addClass(\"childrenActive\");\r\n        tabCurrent.addClass(\"tabSelected\");\r\n\r\n        // Mark the selected tab in the header\r\n        var activeTab = $(\".bz-wp-tabs-ui:nth-child(\" + (params.activeTab + 1) + \")\", tabHeader).addClass(\"tabSelected\");\r\n\r\n        // The new width will be added to the tabSelected in order to complete the 100% on tabs\r\n        var widthTabSelected = widthRow + (100 - (widthRow * tabCountReal));\r\n        activeTab.css(\"width\", widthTabSelected + \"%\");\r\n\r\n        function updateTabSize() {\r\n            if (params.tabNumber < tabCountPopup) {\r\n                // Select the current tab\r\n                $(\".bz-wp-tabs-arrow-container\", self).first().addClass(\"show-pluss\");\r\n                tabHeader.addClass(\"show-pluss\");\r\n                activeTab.trigger(\"click\", { origin: \"popUp\" });\r\n            } else {\r\n                $(\".bz-wp-tabs-arrow-container\", self).removeClass(\"show-pluss\");\r\n                tabHeader.removeClass(\"show-pluss\");\r\n                tabHeader.find(\"> .bz-wp-tabs-ui:last\").addClass(\"bz-wp-no-border\");\r\n            }\r\n        }\r\n\r\n        // Reorder tabs\r\n        function reorderTabs(dataRef) {\r\n\r\n            var tempTabs = tabHeader.find(\".bz-wp-tabs-ui\");\r\n            var moveAtTheEnd = true;\r\n\r\n            tempTabs.each(function (i, item) {\r\n                if (dataRef !== item.getAttribute(\"data-reference-tab\") && moveAtTheEnd) {\r\n                    tabHeader.remove(\"[data-reference-tab='\" + dataRef + \"']\");\r\n                    tabHeader.append(item);\r\n                } else {\r\n                    moveAtTheEnd = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        // Change tabs\r\n        function changeTab(e, params) {\r\n\r\n            params = params || {};\r\n            params.origin = params.origin || \"header\";\r\n\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            if ($(this).hasClass(\"tabSelected\") && params.origin !== \"popUp\") {\r\n                return;\r\n            }\r\n\r\n            var dataRef = e.currentTarget.getAttribute(\"data-reference-tab\");\r\n            var tabChildren = $(dataRef, self);\r\n\r\n            activeTab = $(e.currentTarget);\r\n            // Changes the visibility of the contents of the tabs\r\n            self.find(\">div.childrenActive\").removeClass(\"childrenActive\");\r\n            tabChildren.addClass(\"childrenActive\");\r\n\r\n            // Add the normal width\r\n            tabHeader.find(\">div.tabSelected\").removeClass(\"tabSelected\").css(\"width\", widthRow + \"%\");\r\n\r\n            if (popUp.css(\"display\") === \"block\") {\r\n                popUp.toggle();\r\n            }\r\n\r\n            if (params.origin && params.origin === \"popUp\") {\r\n                activeTab = $(\"[data-reference-tab='\" + dataRef + \"']\", tabHeader);\r\n                reorderTabs(dataRef);\r\n            }\r\n\r\n            // Add the new width for tabSelected to complete the 100%\r\n            activeTab.addClass(\"tabSelected\").css(\"width\", widthTabSelected + \"%\");\r\n            activate(e, params);\r\n        }\r\n\r\n        if (typeof (params.domIncluded) !== \"undefined\") {\r\n            // Until the control is added to the DOM can be known widths to add the icon popup         \r\n            $.when(params.domIncluded).done(function () {\r\n                updateTabSize();\r\n            });\r\n        } else {\r\n            updateTabSize();\r\n        }\r\n\r\n        // Attach events\r\n        self.find(\".bz-wp-tabs-arrow-container\").first().bind(\"click\", function (event) {\r\n\r\n            // Determine if an item is visible or not\r\n            var headerWidth = (tabHeader.innerWidth() - 29);\r\n            var totalWidth = 0;\r\n\r\n            // Remove the visible elements\r\n            $(\".bz-container-items-tabs\", popUp).removeClass(\"show\");\r\n\r\n            tabHeader.find(\".bz-wp-tabs-ui\").each(function (i, item) {\r\n\r\n                totalWidth += $(\":first-child\", item).outerWidth();\r\n\r\n                // If \"true\" then it is a tab to display the popup\r\n                if (totalWidth > headerWidth) {\r\n\r\n                    popUp.children().each(function (j, pop) {\r\n                        if (pop.textContent === item.textContent) {\r\n                            $(pop).addClass(\"show\");\r\n                            $(\".cell.bz-container-items-tabs\").css(\"border-bottom\", \"\");\r\n                            $(\".cell.bz-container-items-tabs.show\").last().css(\"border-bottom\", \"none\");\r\n\r\n                            return;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            popUp.toggle();\r\n        });\r\n\r\n        $(\">div.cell\", popUp).bind(\"click\", function (e) {\r\n            changeTab(e, { origin: \"popUp\" });\r\n        });\r\n\r\n        $(\".bz-wp-tabs-ui\", tabHeader).bind(\"click\", changeTab);\r\n\r\n        tabHeader.bind(\"resizeHeader\", function () {\r\n            updateTabSize();\r\n        });\r\n    };\r\n})(jQuery);","/*\r\n*   Name: BizAgi Element Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a base class with common stuff related to all renders and containers\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.element\", {\r\n    ELEMENT_TYPE_CONTAINER: 1,\r\n    ELEMENT_TYPE_RENDER: 2,\r\n    ELEMENT_TYPE_COLUMN: 3\r\n}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Set render factory\r\n        this.renderFactory = params.renderFactory;\r\n\r\n        // Set data service\r\n        this.dataService = params.dataService;\r\n\r\n        // Set reference to parent\r\n        this.parent = params.parent;\r\n\r\n        // Set l10n service\r\n        this.resources = bizagi.localization;\r\n\r\n        // Set the observable element\r\n        this.observableElement = $(\"<div />\");\r\n\r\n        // Set the dispose flag\r\n        this.disposed = false;\r\n\r\n        // Update data\r\n        this.initializeData(params.data);\r\n\r\n        // Define an object to hold the subscribe collection\r\n        this.subscribers = [];\r\n    },\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Set the internal data\r\n        this.properties = {};\r\n        if (data && data.properties) this.properties = data.properties;\r\n\r\n        // Set xpath context\r\n        this.properties.xpathContext = this.getXpathContext();\r\n\r\n        // Set page cache\r\n        this.properties.idPageCache = this.getPageCache();\r\n    },\r\n\r\n    /*\r\n    *   Returns the xpath context of the element\r\n    */\r\n    getXpathContext: function () {\r\n        // By default return parent's xpath context\r\n        // This method is overriden in form container which contains the real xpath context\r\n\r\n        return (this.parent != undefined && typeof this.parent.getXpathContext == \"function\") ? this.parent.getXpathContext() : \"\";\r\n    },\r\n\r\n    /*\r\n    *   Returns the page cache for the current element\r\n    */\r\n    getPageCache: function () {\r\n        // By default return parent's page cache\r\n        // This method is overriden in form container which contains the real page cache\r\n\r\n        return (this.parent != undefined && typeof this.parent.getPageCache == \"function\") ? this.parent.getPageCache() : \"\";\r\n    },\r\n\r\n    /*\r\n    *   Returns the form containing the element\r\n    */\r\n    getFormContainer: function () {\r\n        // By default return parent's form container\r\n        // This method is overriden in form container which returns itself\r\n        if (typeof (this.parent) != \"undefined\")\r\n        return this.parent.getFormContainer();\r\n    },\r\n\r\n\r\n    /*\r\n    *   Returns the mapped resource\r\n    */\r\n    getResource: function (key) {\r\n        return this.resources.getResource(key);\r\n    },\r\n\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () { },\r\n\r\n    /* \r\n    *   Resizes the element \r\n    */\r\n    resize: function (size) {\r\n\r\n    },\r\n\r\n    /*\r\n    *   Focus on the current element\r\n    */\r\n    focus: function () {\r\n\r\n        if (this.properties.required) {\r\n            var layout = $(\"#ui-bizagi-wp-app-render-form-content\");\r\n            // Check if element is visible into scroll\r\n            if (!bizagi.util.isScrolledIntoView(this.element, layout)) {\r\n                $(this.element).attr('tabindex', -1).focus();\r\n            }\r\n            if (this.element) {\r\n                this.element.effect('highlight', 2000);\r\n            }\r\n        }\r\n\r\n        //Check if the element has parent\r\n        if (this.parent && typeof this.parent.focus == 'function') {\r\n            this.parent.focus();\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Publish a global event that the facade will replicate\r\n    */\r\n    triggerGlobalHandler: function (eventType, data) {\r\n        if (this.disposed) return null;\r\n        if (this.parent) return this.parent.triggerGlobalHandler(eventType, data);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Triggers an event inside the control\r\n    */\r\n    trigger: function (eventType, data) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.trigger(eventType, data);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Triggers an event handler inside the control\r\n    */\r\n    triggerHandler: function (eventType, data) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.triggerHandler(eventType, data);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Binds to an event\r\n    */\r\n    bind: function (eventType, fn) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.bind(eventType, fn);\r\n        this.subscribers.push({ event: eventType });\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Un-binds to an event\r\n    */\r\n    unbind: function (eventType, fn) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.unbind(eventType, fn);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Binds a one time event\r\n    */\r\n    one: function (eventType, fn) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.one(eventType, fn);\r\n        this.subscribers.push({ event: eventType });\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Return the rendered element\r\n    */\r\n    getRenderedElement: function () { },\r\n\r\n    /*\r\n    *   Get current rendering mode\r\n    */\r\n    getMode: function () {\r\n        if (this.parent) return this.parent.getMode();\r\n    },\r\n\r\n    /*\r\n    *   Get current rendering params\r\n    */\r\n    getParams: function () {\r\n        if (this.parent) return this.parent.getParams();\r\n    },\r\n\r\n    /*\r\n    * Get current form type (ex. queryform, form)\r\n    */\r\n    getFormType: function () {\r\n        var self = this;\r\n\r\n        var form = self.getFormContainer();\r\n        return form.properties.type || \"form\";\r\n    },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () { },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready to save\r\n    */\r\n    isReadyToSave: function () { },\r\n\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Dispose the class so we can detect when a class is invalid already\r\n    */\r\n    dispose: function () {\r\n        var self = this;\r\n        self.disposed = true;\r\n\r\n        setTimeout(function () {\r\n            if (self.subscribers != null) {\r\n                // Remove all subcriptions\r\n                $.each(self.subscribers, function (i, item) {\r\n                    self.unbind(item.event);\r\n                });\r\n            }\r\n            delete self.subscribers;\r\n\r\n            if (self.observableElement) self.observableElement.off();\r\n            bizagi.util.dispose(self);\r\n        }, bizagi.override.disposeTime || 50);\r\n    },\r\n\r\n    /*\r\n    *   Check if the current object is disposed\r\n    */\r\n    isDisposed: function () {\r\n        return this.disposed;\r\n    },\r\n\r\n    /*\r\n    *   This method process the error or alert messages coming from the server, and adds them to the validation controller\r\n    */\r\n    processFailMessage: function(message) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        if (message.errorType === \"CustomMessageException\") {\r\n            // Clear previous validations\r\n            form.validationController.clearValidationMessages();\r\n            var error = bizagi.localization.getResource(message.message);\r\n            form.validationController.showErrorMessage(error);\r\n        } else if (message.errorType === \"InvalidCaseStateException\") {\r\n            var params = form.getParams()\r\n\r\n            form.validationController.clearValidationMessages();\r\n           \r\n            // Redirection Here\r\n            form.container.trigger(\"routing\", { idCase: params.idCase || bizagi.context.idCase });\r\n        } else {\r\n            var message = message || {};\r\n            message = typeof (message) == \"string\" ? JSON.parse(message) : message;\r\n            var type = message.type || \"error\";\r\n            var code = message.code || \"code\";\r\n            message = message.responseText || (message.message || message);\r\n\r\n            // Omit processing when the ajax didn't process\r\n            if (type === \"not-processed\") return;\r\n            if (type === \"not-shown\") return;\r\n            if (isOfflineForm && code === \"AUTH_ERROR\") return;\r\n\r\n            // Clear previous validations\r\n            form.validationController.clearValidationMessages();\r\n            if (type == \"alert\") {\r\n                form.validationController.showAlertMessage(message);\r\n            } else {\r\n                form.validationController.showErrorMessage(message);\r\n            }\r\n        }\r\n\r\n        return message;\r\n    },\r\n\r\n    /*\r\n    *   Sets a waiting overlay above the current element\r\n    */\r\n    startLoading: function () {  /* Override in implementations */ },\r\n\r\n    /*\r\n    *   Removes the waiting overlay\r\n    */\r\n    endLoading: function () { /* Override in implementations */ },\r\n\r\n    /**\r\n    *   Prepare control to remove it from the render, that allows to\r\n    *   clean all elements of the control or to do any stuff before to remove\r\n    */\r\n    beforeToRefresh: function () { /* Implement in each render and container if you need */ },\r\n\r\n    /**\r\n    *   Run before that the control has been refreshed\r\n    */\r\n    afterToRefresh: function () { \r\n        /* Implement in each render and container if you need */ \r\n        var formContainer = this.getFormContainer();\r\n        formContainer.tryToExecuteFunction(this.properties.xpath || this.properties.id); \r\n    }\r\n});\r\n\r\n","/*\r\n *   Name: BizAgi Container Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define a base container class with common stuff related to all containers\r\n */\r\n\r\nbizagi.rendering.element.extend(\"bizagi.rendering.container\", {\r\n    TYPE_QUERY_FORM: \"queryForm\"\r\n}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Set defaults\r\n        var properties = self.properties;\r\n        properties.uniqueId = Math.ceil(Math.random() * 1000000);\r\n        properties.editable = (typeof properties.editable != \"undefined\") ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.visible = (typeof properties.visible != \"undefined\") ? bizagi.util.parseBoolean(properties.visible) : true;\r\n\r\n        // Override orientation from parent if not set\r\n        properties.orientation = properties.orientation || \"auto\";\r\n\r\n        // Save original properties\r\n        this.originalProperties = JSON.parse(JSON.encode(properties));\r\n\r\n        // Create children\r\n        this.children = [];\r\n        this.childrenHash = {};\r\n\r\n        if (data.elements) {\r\n            $.each(data.elements, function(i, element) {\r\n                if (element.render) {\r\n                    self.createRenderElement(element);\r\n                } else if (element.container) {\r\n                    self.createContainerElement(element);\r\n                } else if (element.form) {\r\n                    self.createFormElement(element);\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Creates a render element\r\n    */\r\n    createRenderElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var originalElement;\r\n\r\n        // Replicate editable property when container is not editable\r\n        if (properties.editable == false) {\r\n            element.render.properties.editable = properties.editable;\r\n            if (element.render.properties.type == \"grid\")\r\n                element.render.properties.inlineEdit = false;\r\n        }\r\n\r\n        // Replicate required property when container is not required\r\n        if (properties.required === false) {\r\n            element.render.properties.required = properties.required;\r\n        }\r\n\r\n        //clone originalElement to apply duplicate render properties correctly\r\n        if (element.render.properties.retype == \"duplicate\") {\r\n            originalElement = bizagi.clone(element);\r\n        }\r\n\r\n        var render = self.renderFactory.getRender({\r\n            type: element.render.properties.type,\r\n            data: element.render,\r\n            dataService: self.dataService,\r\n            parent: self,\r\n            mode: self.getMode()\r\n        });\r\n\r\n        // Add to children\r\n        self.children.push(render);\r\n\r\n        // Check for duplicate\r\n        if (element.render.properties.retype == \"duplicate\") {\r\n            self.processDuplicateRender(render, originalElement);\r\n        }\r\n\r\n        //TODO: at this point not posible add the retype double at this point not exist input\r\n\r\n        // Register in form container\r\n        self.getFormContainer().registerRender(render);\r\n    },\r\n    /*\r\n    *   Creates a container element\r\n    */\r\n    createContainerElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Replicate editable property when container is not editable\r\n        if (properties.editable == false) {\r\n            element.container.properties.editable = properties.editable;\r\n        }\r\n\r\n        // Replicate required property when container is not required\r\n        if (properties.required === false) {\r\n            element.container.properties.required = properties.required;\r\n        }\r\n\r\n        var container = self.renderFactory.getContainer({\r\n            type: element.container.properties.type,\r\n            data: element.container,\r\n            parent: self,\r\n            dataService: self.dataService,\r\n            mode: self.getMode(),\r\n            isDesign: self.getMode() === \"design\"\r\n        });\r\n\r\n        self.children.push(container);\r\n\r\n        // Register in form container\r\n        self.getFormContainer().registerRender(container);\r\n    },\r\n    /*\r\n    *   Creates a form element\r\n    */\r\n    createFormElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Replicate editable property when container is not editable\r\n        if (properties.editable == false) {\r\n            element.container.properties.editable = properties.editable;\r\n        }\r\n\r\n        var form = self.renderFactory.getContainer({\r\n            type: (element.form.properties.type || \"form\"),\r\n            data: element.form,\r\n            parent: self,\r\n            dataService: self.dataService,\r\n            mode: self.getMode()\r\n        });\r\n        self.children.push(form);\r\n    },\r\n    /* \r\n    *   Gets the current container \r\n    */\r\n    getElement: function () {\r\n        var self = this;\r\n        return self.container;\r\n    },\r\n    /* \r\n    *   Gets a collection for all elements matching a type \r\n    */\r\n    getElementsByType: function (type, elements) {\r\n        elements = elements || [];\r\n        var self = this;\r\n\r\n        // Iterate through elements\r\n        $.each(self.children, function (i, child) {\r\n            if (child.properties.type == type) {\r\n                elements.push(child);\r\n            }\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.getElementsByType(type, elements);\r\n            }\r\n        });\r\n\r\n        return elements;\r\n    },\r\n    /*\r\n    *   Process renders with duplicate property\r\n    */\r\n    processDuplicateRender: function (render, element) {\r\n        var self = this;\r\n        var clonedElement = JSON.parse(JSON.encode(element.render));\r\n\r\n        // Changes properties\r\n        clonedElement.properties.displayName = clonedElement.properties.displayName + \" \" + self.getResource(\"render-text-duplicate-label-sufix\");\r\n        clonedElement.properties.xpath = clonedElement.properties.xpath + \".clone\";\r\n        clonedElement.properties.isClone = true;\r\n\r\n        // Creates clone\r\n        var clone = self.renderFactory.getRender({\r\n            type: clonedElement.properties.type,\r\n            data: clonedElement,\r\n            parent: self,\r\n            mode: self.getMode()\r\n        });\r\n\r\n        // Associates with main render\r\n        render.cloneRender = clone;\r\n\r\n        // Add to collection\r\n        self.children.push(clone);\r\n    },\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () {\r\n        return bizagi.rendering.element.ELEMENT_TYPE_CONTAINER;\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    */\r\n    render: function () {\r\n        var self = this,\r\n            mode = self.getMode(),\r\n            result;\r\n\r\n        // Render container\r\n        result = self.internalRender();\r\n\r\n        // Apply container defaults\r\n        self.applyContainerDefaults();\r\n\r\n        // Add container id\r\n        result.attr(\"data-container-id\", self.properties.id);\r\n\r\n        //Add container tag property\r\n        if (self.properties.tag) {\r\n            result.attr(\"data-tag\", self.properties.tag);\r\n        }\r\n\r\n        //Add class to the requested form, to specify if is add form, edit form, or detail form\r\n        if (self.params)\r\n            if (self.params.requestedForm)\r\n                result.addClass(self.params.requestedForm);\r\n\r\n        return result;\r\n    },\r\n    /*\r\n    *   Internal  rendering\r\n    */\r\n    internalRender: function () {\r\n        var self = this;\r\n\r\n        // Render the container\r\n        var html = self.renderContainerHtml();\r\n\r\n        // Convert html string to jquery object\r\n        var container = self.container = $(html);\r\n\r\n        // Post-render\r\n        self.postRenderContainer(container);\r\n\r\n        return self.container;\r\n    },\r\n    /*\r\n    *   Renders container html\r\n    */\r\n    renderContainerHtml: function () {\r\n        var self = this;\r\n        // Start rendering deferred\r\n        self.renderingDeferred = self.renderingDeferred || new $.Deferred();\r\n\r\n        return this.renderContainer();\r\n    },\r\n    /*\r\n    *   Check if the jquery element is ready or not\r\n    */\r\n    isRendered: function () {\r\n        var self = this;\r\n        if (!self.renderingDeferred)\r\n            return false;\r\n        return self.renderingDeferred.promise();\r\n    },\r\n    /*\r\n    *   Return the rendered element\r\n    */\r\n    getRenderedElement: function () {\r\n        if (bizagi.util.isEmpty(this.container))\r\n            alert(\"container hasn't been rendered!\");\r\n\r\n        return this.container;\r\n    },\r\n    /* \r\n    *   Set container defaults\r\n    */\r\n    applyContainerDefaults: function () {\r\n        var self = this,\r\n                properties = self.properties;\r\n\r\n        // Set customizations\r\n        if (properties.backgroundColor)\r\n            self.changeBackgroundColor(properties.backgroundColor);\r\n\r\n        // Set editability and visiblity\r\n        if (!properties.visible)\r\n            self.changeVisibility(properties.visible);\r\n    },\r\n    /* \r\n    *  Changes background color \r\n    */\r\n    changeBackgroundColor: function (color) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        properties.backgroundColor = color;\r\n\r\n        // Iterate through elements\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.changeBackgroundColor(color);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                child.changeBackgroundColor(color);\r\n            }\r\n        });\r\n    },\r\n    /* \r\n    *   Hides / Show container \r\n    */\r\n    changeVisibility: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Store in properties\r\n        properties.visible = bizagi.util.parseBoolean(argument);\r\n\r\n        // Hide - show the render\r\n        if (properties.visible) {\r\n            self.container.show();\r\n\r\n        } else {\r\n            self.container.hide();\r\n        }\r\n    },\r\n    /* Changes editability */\r\n    changeEditability: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Store in properties\r\n        properties.editable = argument == \"Default\" ? self.originalProperties.editable: bizagi.util.parseBoolean(argument);\r\n\r\n        // Iterate through elements\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.changeEditability(argument);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                child.changeEditability(argument);\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Replaces a <x/> tag in the container for the specified \"replace\" element\r\n    */\r\n    replaceTag: function (container, tag, replace) {\r\n        bizagi.util.replaceSelector(container, tag, replace);\r\n    },\r\n    /*\r\n    *   Replaces a <children/> tag in the container for the specified \"replace\" element\r\n    */\r\n    replaceChildrenTag: function (container, replace) {\r\n        this.replaceTag(container, \".children\", replace);\r\n    },\r\n    /*\r\n    *   Replaces a {{children}} string in the specified element\r\n    */\r\n    replaceChildrenHtml: function (html, replace) {\r\n        return html.replaceFirstWithoutPatterns(\"{{children}}\", replace);\r\n    },\r\n    /*\r\n    *   Template method to render the container layout, returns a string with all the builded html,\r\n    *   must be overriden in all children\r\n    */\r\n    renderContainer: function () {\r\n    },\r\n    /*\r\n    *   Template method to process each jquery object\r\n    *   must be overriden in each container\r\n    */\r\n    postRenderContainer: function (container) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n\r\n        // Resolve rendering deferred\r\n        if (self.renderingDeferred)\r\n            self.renderingDeferred.resolve();\r\n\r\n        // Process children elements\r\n        self.container = container;\r\n        self.executeChildrenPostRender(container);\r\n\r\n        if (mode == \"execution\") {\r\n            // Apply handlers\r\n            self.configureHandlers();\r\n            self.applyPlaceHolderPolyfill();\r\n\r\n        }\r\n        if (mode == \"design\") {\r\n            // Configure view\r\n            self.configureDesignView();\r\n        }\r\n        if (mode == \"layout\") {\r\n            // Configure view\r\n            self.configureDesignView();\r\n            self.configureLayoutView();\r\n        }\r\n    },\r\n\r\n    applyPlaceHolderPolyfill: function () {\r\n        var self = this;\r\n        var config = window.placeHolderConfig || {};\r\n        if (('placeholder' in $('<input>')[0] || 'placeHolder' in $('<input>')[0]) && !config.forceApply) {\r\n            // don't run the polyfill when the browser has native support\r\n            return;\r\n        }\r\n        Placeholders.enable();\r\n    },\r\n    /*\r\n    *   Process container children\r\n    */\r\n    executeChildrenPostRender: function (container) {\r\n        var self = this;\r\n        var childrenElements = container.children();\r\n\r\n        $.each(childrenElements, function (i, childElement) {\r\n            childElement = $(childElement);\r\n            var id = Number(childElement.data(\"unique-id\"));\r\n            if (id) {\r\n                var child = self.childrenHash[id];\r\n                if (child) {\r\n                    var type = child.getElementType();\r\n                    if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER)\r\n                        child.postRenderElement(childElement);\r\n                    if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER)\r\n                        child.postRenderContainer(childElement);\r\n                }\r\n            } else {\r\n                self.executeChildrenPostRender(childElement);\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour when rendering in design mode\r\n    */\r\n    configureDesignView: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to show layout\r\n    */\r\n    configureLayoutView: function () {\r\n\r\n    },\r\n    /**\r\n    *   Renders all children html\r\n    */\r\n    renderChildrenHtml: function () {\r\n        var self = this;\r\n        var temp = \"\";\r\n\r\n        $.each(self.children, function (i, child) {\r\n            var type = child.getElementType();\r\n            if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER)\r\n                temp += child.renderElement();\r\n            if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER)\r\n                temp += child.renderContainerHtml();\r\n            self.childrenHash[child.properties.uniqueId] = child;\r\n        });\r\n\r\n        return temp;\r\n    },\r\n    /*\r\n    *   Iterate through all the renders in the container and fills the hashtable\r\n    */\r\n    collectRenderValues: function (renderValues) {\r\n        var self = this;\r\n        if (self.children) {\r\n            $.each(self.children, function (i, child) {\r\n                if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                    // Go though container\r\n                    child.collectRenderValues(renderValues);\r\n\r\n                } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                    // Check if the render can be sent to the server\r\n                    if (child.canBeSent()) {\r\n                        child.collectData(renderValues);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Iterate through all the renders and check if has changed\r\n    */\r\n    hasChanged: function (result) {\r\n        var self = this;\r\n        result = result || [];\r\n\r\n        if (!result.length) {\r\n            if(self.children){\r\n                $.each(self.children, function (i, child) {\r\n                    if (result.length || child.hasChanged(result)) {\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            return result;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *    Creates a json array parameters to search result\r\n    */\r\n    collectRenderValuesQueryForm: function (renderValues) {\r\n        var self = this;\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                // Go though container\r\n                child.collectRenderValuesQueryForm(renderValues);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                // Check if the render can be sent to the server\r\n                if (child.canBeSentQueryForm()) {\r\n                    child.collectDataQueryForm(renderValues);\r\n                }\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Gets the first child\r\n    */\r\n    firstChild: function () {\r\n        return this.children[0];\r\n    },\r\n    /*\r\n    *   Method to find all the renders matching an xpath inside the container\r\n    */\r\n    getRenders: function (xpath, renders) {\r\n        var self = this;\r\n\r\n        renders = renders || [];\r\n\r\n        // Remove [] filters for grid columns xpaths to fully identify the grid as the xpath target\r\n        if (xpath.indexOf(\"[\") > 0) {\r\n            xpath = xpath.substring(0, xpath.indexOf(\"[\"));\r\n        }\r\n\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                // Go though container\r\n                child.getRenders(xpath, renders);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                if (xpath == child.properties.xpath) {\r\n                    renders.push(child);\r\n                }\r\n            }\r\n        });\r\n\r\n        return renders;\r\n    },\r\n    /* \r\n    *   Gets the first editable render \r\n    */\r\n    getRender: function (xpath) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        var result = null;\r\n        $.each(renders, function (i, render) {\r\n            if (render.properties.editable) {\r\n                if (result == null)\r\n                    result = render;\r\n            }\r\n        });\r\n\r\n        // if no render has been found, skip editable condition\r\n        if (result == null) {\r\n            $.each(renders, function (i, render) {\r\n                result = render;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n     *   Gets all renders by xpath\r\n     */\r\n    getRendersByXpath: function (xpath) {\r\n        var self = this;\r\n        return self.getRenders(xpath);\r\n    },\r\n\r\n    /* \r\n    *   Gets a container by the id\r\n    */\r\n    getContainer: function (id) {\r\n        var self = this;\r\n\r\n        if (self.properties.id == id)\r\n            return this;\r\n\r\n        var result;\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                // Go though container\r\n                var o = child.getContainer(id);\r\n                if (o != null) {\r\n                    result = o;\r\n                    return false;\r\n                }\r\n            }\r\n        });\r\n\r\n        return result;\r\n    },\r\n    /* \r\n    *   Validate all renders in the container \r\n    */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n\r\n        if (self.children) {\r\n            $.each(self.children, function (i, child) {\r\n                if (child.properties.visible) {\r\n                    if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                        // Go though container\r\n                        child.isValid(invalidElements);\r\n                    } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                        // Go to the render\r\n                        child.isValid(invalidElements);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        return invalidElements.length == 0;\r\n    },\r\n\r\n    /*\r\n   *   Validate all grids in the container\r\n   */\r\n    hasValidGrids: function (invalidElements) {\r\n        var self = this;\r\n\r\n        $.each(self.children, function (i, child) {\r\n            if (child.properties.visible) {\r\n                if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                    // Go though container\r\n                    child.hasValidGrids(invalidElements);\r\n\r\n                } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER && typeof (child.grid) != \"undefined\") {\r\n                    // Go to the render\r\n                    child.isValid(invalidElements);\r\n                }\r\n            }\r\n        });\r\n\r\n        return invalidElements.length == 0;\r\n    },\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n        return $.when(self.parent.ready(), self.isRendered());\r\n    },\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready to save\r\n    */\r\n    isReadyToSave: function () {\r\n        var self = this;\r\n        var childrenPromises = $.map(self.children, function (child) {\r\n            return child.isReadyToSave();\r\n        });\r\n        return $.when.apply($, childrenPromises);\r\n    },\r\n    /*  \r\n    *   Return the current focuses container\r\n    */\r\n    getFocus: function () {\r\n        var self = this;\r\n        var focus;\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                var result = child.getFocus();\r\n                if (!bizagi.util.isEmpty(result)) {\r\n                    focus = result;\r\n                }\r\n            }\r\n        });\r\n\r\n        return focus;\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n\r\n        if (form) {\r\n            return form.getCustomHandlers();\r\n        }\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandler: function (key) {\r\n        var self = this;\r\n        var customHandlers = self.getCustomHandlers();\r\n\r\n        if (customHandlers) {\r\n            return customHandlers[key];\r\n        }\r\n    },\r\n    /*\r\n    *   Dispose the class so we can detect when a class is invalid already\r\n    */\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        // Iterate through elements\r\n        setTimeout(function () {\r\n            if (self.children) {\r\n                $.each(self.children, function (i, child) {\r\n                    child.dispose();\r\n                });\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    },\r\n\r\n    /*\r\n    *   Refresh the current container\r\n    */\r\n    refreshContainer: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n\r\n        // Start waiting\r\n        self.startLoading();\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh();\r\n\r\n        // Call the service\r\n        return $.when(self.dataService.multiaction().refreshControl({\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: (properties.xpathContext || args.xpathContext),\r\n            contexttype: self.properties.contexttype || \"\",\r\n            idForm: (form && form.properties && form.properties.id) ? form.properties.id : \"\" //To fix BA56877.\r\n        })).done(function (data) {\r\n\r\n            if (!self.isDisposed()) {\r\n\r\n                // Unregister children of container to replace in hash self.rendersById and self.rendersByXpath\r\n                self.unregisterChildren();\r\n                delete self.children;\r\n                delete self.childrenHash;\r\n\r\n                self.getFormContainer().removeActions();\r\n\r\n                // update editable\r\n                if (self.properties.editable === false) {\r\n                    data.container && data.container.properties ? (data.container.properties.editable = false) : \"\";\r\n                }\r\n\r\n                // Update the data\r\n                self.initializeData(data.container);\r\n\r\n                // Render the container again\r\n                var currentContainer = self.container;\r\n                var result = self.render();\r\n\r\n                if (self.properties.type == \"tabItem\") {\r\n                    $(result).addClass(\"childrenActive\");\r\n                }\r\n\r\n                currentContainer.replaceWith(result);\r\n\r\n                // Rebind the actions\r\n                var actions = data.container && data.container.actions ? data.container.actions : [];\r\n                self.getFormContainer().refreshActions(actions);\r\n\r\n                self.triggerChildrenActions();\r\n\r\n                // Execute personalized stuff after to refresh it\r\n                self.afterToRefresh();\r\n\r\n            }\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n\r\n        }).always(function () {\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Refresh the current container\r\n     */\r\n    refreshDesignContainer: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh(data);\r\n        //self.setActiveTab(data.elements);\r\n\r\n        $.extend(data.properties, {\r\n            editable: properties.editable,\r\n            contexttype: (properties.contexttype || \"\"),\r\n            idPageCache: properties.idPageCache,\r\n            idRender: properties.id,\r\n            messageValidation: properties.messageValidation,\r\n            uniqueId: properties.uniqueId,\r\n            visible:properties.visible,\r\n            xpath: properties.xpath,\r\n            mode: \"design\",\r\n            xpathContext: properties.xpathContext || \"\"\r\n        });\r\n\r\n\r\n        if (!self.isDisposed()) {\r\n            // Unregister children of container to replace in hash self.rendersById and self.rendersByXpath\r\n            self.unregisterChildren();\r\n            delete self.children;\r\n            delete self.childrenHash;\r\n\r\n            // update editable\r\n            if (self.properties.editable === false) {\r\n                data.container && data.container.properties ? (data.container.properties.editable = false) : \"\";\r\n            }\r\n\r\n            // Update the data\r\n            self.initializeData(data.container);\r\n\r\n            // Render the container again\r\n            var currentContainer = self.container;\r\n            var result = self.render();\r\n\r\n            if (self.properties.type == \"tabItem\") {\r\n                $(result).addClass(\"childrenActive\");\r\n            }\r\n\r\n            currentContainer && currentContainer.replaceWith(result);\r\n\r\n            // Execute personalized stuff after to refresh it\r\n            self.afterToRefresh();\r\n        }\r\n    },\r\n\r\n    beforeToRefresh: function () {\r\n        var self = this;\r\n\r\n        // Call beforeToRefresh of each children\r\n        for (var i = 0; i < self.children.length; i++) {\r\n            self.children[i].beforeToRefresh();\r\n        }\r\n    },\r\n\r\n    afterToRefresh: function () {\r\n        var self = this;\r\n\r\n        var formContainer = self.getFormContainer();\r\n        formContainer.tryToExecuteFunction(self.properties.id);\r\n\r\n        // Call beforeToRefresh of each children\r\n        for (var i = 0; i < self.children.length; i++) {\r\n            self.children[i].afterToRefresh();\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Re-execute children actions\r\n    */\r\n    triggerChildrenActions: function () {\r\n        var self = this;\r\n\r\n        var form = self.getFormContainer();\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n            var type = child.getElementType();\r\n\r\n            if (type === bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.triggerChildrenActions();\r\n            }\r\n            else if (type === bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                child.triggerRenderChange({ changed: false });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /*\r\n    * register actions container\r\n    */\r\n    registerActions: function (actions) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n\r\n        if (actions) {\r\n            form.actionController.buildActions(actions);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * unregister children container\r\n    */\r\n    unregisterChildren: function () {\r\n        var self = this;\r\n\r\n        var form = self.getFormContainer();\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n            var type = child.getElementType();\r\n\r\n            if (type === bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.unregisterChildren();\r\n            }\r\n            else if (type === bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                form.unregisterRender(child);\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * Replace child\r\n    */\r\n    replaceChild: function (element) {\r\n        var self = this;\r\n\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n\r\n            if (child.properties.uniqueId == element.properties.uniqueId) {\r\n                children.splice(i, 1);\r\n                children.splice(i, 0, element);\r\n                break;\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * Gets child\r\n    */\r\n    getChildById: function (id) {\r\n\r\n        var self = this;\r\n\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n\r\n            if (child.properties.id == id) {\r\n                return child;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: Bizagi Render Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a base render class with common stuff related to all renders\r\n */\r\n\r\nbizagi.rendering.element.extend(\"bizagi.rendering.render\", {\r\n    postRenderTimeout: 0,\r\n    maxRendersPerScreen: 50,\r\n    rendersExecuted: 0,\r\n    renderOptimization: false,\r\n    TYPE_QUERY_FORM: \"queryForm\",\r\n    startOptimization: function () {\r\n        bizagi.rendering.render.postRenderTimeout = 500;\r\n        bizagi.rendering.render.rendersExecuted = 0;\r\n        // Cancelled optimization temporally, because its on experimental stage\r\n        bizagi.rendering.render.renderOptimization = false;\r\n    },\r\n    stopOptimization: function () {\r\n        bizagi.rendering.render.postRenderTimeout = 0;\r\n        bizagi.rendering.render.rendersExecuted = 0;\r\n        bizagi.rendering.render.renderOptimization = false;\r\n    }\r\n}, {\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        var form = self.getFormContainer();\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n\r\n        properties.included = (typeof properties.included != \"undefined\") ? bizagi.util.parseBoolean(properties.included) : false;\r\n        properties.uniqueId = Math.ceil(Math.random() * 1000000);\r\n        properties.displayName = properties.displayName || \"\";\r\n        properties.editable = (typeof properties.editable != \"undefined\") ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.visible = (typeof properties.visible != \"undefined\") ? bizagi.util.parseBoolean(properties.visible) : true;\r\n        properties.includedInResult = (typeof properties.includedInResult != \"undefined\") ? bizagi.util.parseBoolean(properties.includedInResult) : false;\r\n\r\n        var renderType = bizagi.util.normalizeType(properties.type);\r\n        if (/^hidden$/i.test(renderType)) {\r\n            properties.visible = false;\r\n        }\r\n\r\n        properties.required = (typeof properties.required != \"undefined\") ? bizagi.util.parseBoolean(properties.required) : false;\r\n        properties.submitOnChange = (typeof properties.submitOnChange != \"undefined\") ? bizagi.util.parseBoolean(properties.submitOnChange) : false;\r\n        properties.maxLength = properties.maxLength || 0;\r\n        properties.helpText = bizagi.util.trim(properties.helpText) || \"\";\r\n        properties.textFormat = properties.textFormat || {};\r\n        properties.valueFormat = properties.valueFormat || {};\r\n        properties.isHidden = (typeof properties.isHidden != \"undefined\") ? bizagi.util.parseBoolean(properties.isHidden) : false;\r\n        properties.visible = (properties.isHidden) ? false : properties.visible;\r\n        //BUG 26867 -    Verify if the control was editable in sometime. Apply only in the column grid (canBeSent). \r\n        //Change the value property on changeEditability, changeEditabilityCellControl\r\n        properties.editabilityEnabled = false;\r\n\r\n        // Old color and background color\r\n        if (properties.color) {\r\n            properties.textFormat.color = properties.color;\r\n        }\r\n\r\n        if (properties.backgroundColor) {\r\n            properties.textFormat.backgroundColor = properties.backgroundColor;\r\n        }\r\n\r\n        // Non-editable fields cannot be required\r\n        properties.required = properties.editable ? properties.required : false;\r\n\r\n        // Override orientation from parent if not set\r\n        properties.orientation = properties.orientation || \"auto\";\r\n\r\n        // Check contexttype\r\n        properties.contexttype = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : \"\";\r\n\r\n        // Save original properties\r\n        self.originalProperties = {\r\n            textFormat: {\r\n                color: properties.textFormat.color,\r\n                backgroundColor: properties.textFormat.backgroundColor\r\n            },\r\n            valueFormat: {\r\n                color: properties.textFormat.color,\r\n                backgroundColor: properties.textFormat.backgroundColor\r\n            },\r\n            visible: properties.visible,\r\n            editable: properties.editable,\r\n            required: properties.required,\r\n            labelAlign: properties.labelAlign,\r\n            valueAlign: properties.valueAlign\r\n        };\r\n\r\n        // Create value property\r\n        self.value = typeof (properties.value) !== \"undefined\" ? properties.value : null;\r\n\r\n        // Register original value property\r\n        self.properties.originalValue = self.value;\r\n        self.properties.previousValue = self.value;\r\n\r\n        // Calculate layout properties\r\n        self.calculateInitialLayoutProperties();\r\n    },\r\n    /*\r\n    *   Calculate aligns, display types, rtl and widths\r\n    */\r\n    calculateInitialLayoutProperties: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set visual defaults\r\n        properties.displayType = properties.displayType || \"normal\";\r\n        properties.labelAlign = properties.labelAlign || self.getDefaultLabelAlign(properties.displayType);\r\n        properties.valueAlign = properties.valueAlign || self.getDefaultValueAlign(properties.displayType);\r\n\r\n        // Check rtl orientation\r\n        if (properties.orientation === \"rtl\") {\r\n            properties.labelAlign = self.getRTLAlign(properties.labelAlign);\r\n            properties.valueAlign = self.getRTLAlign(properties.valueAlign);\r\n        }\r\n\r\n        // Calculate render with\r\n        var renderWidth = self.calculateRenderWidth(properties.labelWidth, properties.valueWidth, properties.displayType);\r\n        properties.labelWidth = renderWidth.label;\r\n        properties.valueWidth = renderWidth.control;\r\n\r\n        if (properties.layoutType === \"percentage\") {\r\n            properties.valueWidth = renderWidth.control;\r\n        }\r\n\r\n        if (properties.labelWidth == 0) {\r\n            properties.displayType = \"value\";\r\n            properties.valueWidth = renderWidth.control;\r\n        }\r\n\r\n        if (properties.valueWidth == 0) {\r\n            properties.displayType = \"label\";\r\n        }\r\n\r\n        if (properties.type === \"userfield\") {\r\n            if (properties.displayType === \"both\") {\r\n                properties.valueWidth = properties.valueWidth || 50;\r\n                properties.labelWidth = properties.labelWidth || 50;\r\n            } else if (properties.displayType === \"vertical\") {\r\n                properties.valueWidth = 100;\r\n                properties.labelWidth = 100;\r\n            } else {\r\n                properties.valueWidth = 100;\r\n                properties.labelWidth = 0;\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () {\r\n        return bizagi.rendering.element.ELEMENT_TYPE_RENDER;\r\n    },\r\n    /*\r\n    *   Returns the html templated element\r\n    */\r\n    render: function (renderTemplateName) {\r\n        return this.renderElement(renderTemplateName);\r\n    },\r\n    /*\r\n    *   Returns the html templated element\r\n    */\r\n    renderElement: function (renderTemplateName) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        // Start rendering deferred\r\n        self.renderingDeferred = new $.Deferred();\r\n\r\n        // Set render template\r\n        renderTemplateName = renderTemplateName || \"render\";\r\n        var renderTemplate = self.renderFactory.getTemplate(renderTemplateName);\r\n\r\n        // Resolve render label\r\n        var label = properties.displayName;\r\n        if (typeof label == \"string\") {\r\n            label = label.replaceAll(\"&\", \"&amp;\");\r\n            label = label.replaceAll(\"$\", \"&#36;\");\r\n            label = label.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\r\n            label = label.replaceAll(\"\\\"\", \"&#34;\").replaceAll(\"'\", \"&#39;\").replaceAll(\"/\", \"&#47;\");\r\n            label = label.replaceAll(\"\\\\n\", \"<br/>\");\r\n            label = label.replaceAll(\"\\n\", \"<br/>\");\r\n        }\r\n\r\n        var isFullRender = bizagi.util.detectDevice() !== \"desktop\" && (properties.type === \"association\" || properties.type === \"uploadecm\" || ((properties.type === \"actionLauncher\" || properties.type === \"polymorphicLauncher\") && bizagi.util.isTabletDevice()) || (properties.type === \"grid\" && !bizagi.util.isTabletDevice()));\r\n        var labelWidth = parseFloat(properties.labelWidth);\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(renderTemplate, {\r\n            label: label, helpText: properties.helpText,\r\n            editable: properties.editable,\r\n            isExtendedText: (properties.type == \"text\" && properties.isExtended),\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            tag: properties.tag,\r\n            displayType: properties.displayType,\r\n            displayOptionClass: self.getDisplayOptionClass(properties.displayType),\r\n            labelAlignClass: self.getAlignClass(properties.labelAlign),\r\n            valueAlignClass: self.getAlignClass(properties.valueAlign),\r\n            labelWidth: labelWidth,\r\n            stringLabelWidth: labelWidth + (properties.layoutType == 'pixels' ? 'px' : '%'),\r\n            valueWidth: parseFloat(properties.valueWidth),\r\n            stringValueWidth: parseFloat(properties.valueWidth) + (properties.layoutType == 'pixels' ? 'px' : '%'),\r\n            layoutType: properties.layoutType,\r\n            isDesign: self.getMode() === \"design\",\r\n            messageValidation: properties.messageValidation,\r\n            printVersion: form.params.printversion,\r\n            cssClass: properties.cssclass || \"\",\r\n            includedInResult: properties.includedInResult,\r\n            included: properties.included,\r\n            type: properties.type,\r\n            showFullRender: isFullRender,\r\n            required: properties.required,\r\n            helpText: properties.helpText\r\n        });\r\n\r\n        // Render internal control html\r\n        var result = self.internalRenderControl();\r\n        if (!result) {\r\n            result = \"\";\r\n        }\r\n\r\n        // Check if this is an async element or not\r\n        var async = typeof (result) === \"object\" && result.done;\r\n        if (!async) {\r\n            html = self.replaceControlHtml(html, result);\r\n\r\n        } else {\r\n            if (result.state() === \"resolved\") {\r\n                // Fetch resolved result\r\n                html = self.replaceControlHtml(html, self.resolveResult(result));\r\n                self.asyncRenderDeferred = null;\r\n            } else {\r\n                // Wait for result\r\n                self.asyncRenderDeferred = result;\r\n                html = self.replaceControlHtml(html, \"\");\r\n            }\r\n        }\r\n\r\n        return html;\r\n    },\r\n    /*\r\n    *   Returns the resolved result from a promise when the promise has been executed already\r\n    */\r\n    resolveResult: function (promise) {\r\n        return bizagi.resolveResult(promise);\r\n    },\r\n    /*\r\n    *   Check if the jquery element is ready or not\r\n    */\r\n    isRendered: function () {\r\n        var self = this;\r\n        if (!self.renderingDeferred) {\r\n            return false;\r\n        }\r\n        return self.renderingDeferred.promise();\r\n    },\r\n    /*\r\n    *   Renders the control html\r\n    */\r\n    internalRenderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        self.control = null;\r\n\r\n        if (self.renderFactory.printVersion) {\r\n            properties.editable = false;\r\n            return self.renderControl();\r\n        } else if (properties.editable) {\r\n            return self.renderControl();\r\n        }\r\n\r\n        return self.renderReadOnly();\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    postRenderElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set element variable\r\n        self.element = element;\r\n\r\n        if (properties.submitOnChange)\r\n            self.configureSubmitOnChange();\r\n\r\n        // Process internal layout\r\n        isLabelFormat = true;\r\n\r\n        var executePostRender = function (_element) {\r\n            if (bizagi.rendering.render.renderOptimization &&\r\n                bizagi.rendering.render.rendersExecuted > bizagi.rendering.render.maxRendersPerScreen) {\r\n\r\n                // Execute post-render control\r\n                setTimeout(function () {\r\n                    self.internalPostRender(_element);\r\n                    bizagi.rendering.render.postRenderTimeout += 50;\r\n                }, bizagi.rendering.render.postRenderTimeout);\r\n\r\n            } else {\r\n                self.internalPostRender(_element);\r\n            }\r\n            bizagi.rendering.render.rendersExecuted++;\r\n        };\r\n\r\n        if (self.asyncRenderDeferred) {\r\n            // Wait for async result\r\n            $.when(self.asyncRenderDeferred)\r\n                .done(function (html) {\r\n                    var control = self.getControl();\r\n                    if (typeof self.emptyControlByAsyncRenderDeferred == \"function\") {\r\n                        self.emptyControlByAsyncRenderDeferred();\r\n                    }\r\n                    control.append(html);\r\n\r\n                    // Execute post-render control\r\n                    executePostRender(element);\r\n                    self.processLayout(!isLabelFormat, self.properties.valueFormat || {});\r\n                });\r\n        } else {\r\n            // Execute post-render control\r\n            executePostRender(element);\r\n        }\r\n    },\r\n    /*\r\n    *   Executes the post render handlers\r\n    */\r\n    internalPostRender: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n\r\n        self.control = self.getControl();\r\n\r\n        // Resolve rendering deferred\r\n        if (self.renderingDeferred) {\r\n            self.renderingDeferred.resolve();\r\n        }\r\n\r\n        // Execute post-renders\r\n        if (properties.editable) {\r\n            // Post-render editable version\r\n            if (self.renderFactory.printVersion && self.postRenderPrintVersion) {\r\n                self.postRenderPrintVersion();\r\n            } else {\r\n                self.postRender();\r\n            }\r\n\r\n        } else {\r\n            // Post-render readonly version\r\n            self.postRenderReadOnly(element);\r\n        }\r\n\r\n        // Perform execution mode methods\r\n        if (mode == \"execution\") {\r\n            self.performExecutionModeMethods();\r\n        } else {\r\n            self.performDesignModeMethods();\r\n        }\r\n\r\n        self.processLayout(isLabelFormat, self.properties.textFormat || {});\r\n        self.processLayout(!isLabelFormat, self.properties.valueFormat || {});\r\n    },\r\n    /*\r\n    *   Execute runtime only methods\r\n    */\r\n    performExecutionModeMethods: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (self.getFormType() == self.Class.TYPE_QUERY_FORM) {\r\n            self.configureHandlersQueryForm();\r\n        }\r\n\r\n        // Apply handlers\r\n        if (properties.editable) {\r\n            self.configureHandlers();\r\n        } else {\r\n            self.configureHandlersReadOnly();\r\n        }\r\n\r\n        // Set initial value\r\n        self.internalSetInitialValue();\r\n    },\r\n    /**\r\n     * Execute design only methods\r\n     */\r\n    performDesignModeMethods: function () {\r\n        var self = this;\r\n\r\n        // Execute custom code for each render\r\n        self.configureDesignView();\r\n\r\n        // Set initial value\r\n        self.internalSetInitialValue();\r\n    },\r\n    /*\r\n    *   Replaces a {{control}} string in the specified element\r\n    */\r\n    replaceControlHtml: function (html, replace) {\r\n        html = html || \"\";\r\n        replace = replace || \"\";\r\n        return html.replaceFirstWithoutPatterns(\"{{control}}\", replace);\r\n    },\r\n    /*\r\n    *   Return the rendered element\r\n    */\r\n    getRenderedElement: function () {\r\n        if (bizagi.util.isEmpty(this.element)) {\r\n            bizagi.log(\" render hasn't been rendered!\", this, \"error\");\r\n        }\r\n\r\n        return this.element;\r\n    },\r\n    /*\r\n    *   Sets the initial value for the renders\r\n    */\r\n    internalSetInitialValue: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        self.internalSetInitialValueFlag = true;\r\n\r\n        // Set the initial value\r\n        if (properties.editable) {\r\n            if (!bizagi.util.isEmpty(self.value)) {\r\n                self.setDisplayValue(self.value);\r\n            }\r\n        } else {\r\n            if (!bizagi.util.isEmpty(self.value)) {\r\n                self.setDisplayValue(self.value);\r\n            }\r\n        }\r\n        self.internalSetInitialValueFlag = false;\r\n    },\r\n    /*\r\n    * Public method to determine if a value is valid or not\r\n    */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n        var inlineAdd = self.grid && self.grid.properties && self.grid.properties.inlineAdd;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) === false) {\r\n            return true;\r\n        }\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) === false && !inlineAdd) {\r\n            return true;\r\n        }\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (bizagi.util.parseBoolean(properties.required)) {\r\n            var form = self.getFormContainer();\r\n            var hasValue = false;\r\n            var renders = self.grid ? [self] : form.getRenders(properties.xpath);\r\n            var isQueryForm = /^query/i.test(properties.type);\r\n\t               \r\n            renders.filter(function (render) {\r\n                return render.properties.id == properties.id;\r\n            }).forEach(function (render) {\r\n                if (render.hasValue() && (render.properties.editable || inlineAdd)) {\r\n                    hasValue = true;\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            if (!hasValue && !self.properties.isClone) {\r\n                message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                var messageData = {xpath: properties.xpath, message: message};\r\n\r\n                if (isQueryForm) {\r\n                    messageData = $.extend({}, messageData, {\r\n                        id: properties.id,\r\n                        isQuery: isQueryForm\r\n                    });\r\n                }\r\n\r\n                invalidElements.push(messageData);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // Check retypes\r\n        if (properties.retype == \"duplicate\") {\r\n            // Don't process cloned renders, just originals\r\n            if (self.cloneRender) {\r\n                if (self.cloneRender.getValue() != self.getValue()) {\r\n                    message = self.getResource(\"render-text-retype-error\");\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    return false;\r\n                }\r\n            }\r\n        } else if (properties.retype == \"double\") {\r\n            var control = $(\"input\", self.element);\r\n\r\n            //Waits until the control has the second value written\r\n            if (control && control.data(\"oldValue\")) {\r\n                if (control.val() === \"\") {\r\n\r\n                    message = self.getResource(\"render-text-retype-error\");\r\n                    invalidElements.push({\r\n                        xpath: properties.xpath,\r\n                        message: message\r\n                    });\r\n\r\n                    return false;\r\n                } else if (control.val() != control.data(\"oldValue\")) {\r\n                    message = self.getResource(\"render-text-retype-error\");\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Check maxlength\r\n        var columnEditable = self.grid && self.grid.getColumn ? self.grid.getColumn(self.properties.xpath).properties.editable : true;\r\n        if (properties.type !== \"userPassword\" && properties.maxLength !== undefined && properties.maxLength > 0 && bizagi.util.isNumeric(properties.maxLength)) {\r\n            if (columnEditable || (!columnEditable && self.controlValueIsChanged())) {\r\n                var maxLength = new Number(properties.maxLength);\r\n                var value = self.getValue();\r\n\r\n                if (value && value.toString().length > maxLength) {\r\n                    message = self.getResource(\"render-text-maxLength-error\").replaceAll(\"#maxLength#\", maxLength);\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Check if a render has no value for required validation\r\n    */\r\n    hasValue: function () {\r\n        var self = this;\r\n        // Next line decides if only spaces are accepted as valid texts or not. Anyway the spaces are still saved as self.value has not changed\r\n        var value = self.getValue();\r\n\r\n        if (value && self.properties.type === \"text\") {\r\n            value = typeof (value) === \"string\" ? value.trim() : value;\r\n        }\r\n\r\n        return !bizagi.util.isEmpty(value);\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    postRender: function () {       \r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed in read-only mode\r\n    */\r\n    postRenderReadOnly: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers when the control is readonly\r\n    */\r\n    configureHandlersReadOnly: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour when rendering in design mode\r\n    */\r\n    configureDesignView: function () {\r\n    },\r\n    /*\r\n    *   Method to process the render the layout\r\n    */\r\n    processLayout: function (isLabelFormat, format) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (self.getControl() == null) return;\r\n\r\n        // Set customizations\r\n        format = format || {};\r\n\r\n        if (format.color) {\r\n            self.changeColor(format.color, isLabelFormat);\r\n        }\r\n        if (format.background) {\r\n            self.changeBackgroundColor(format.background);\r\n        }\r\n        //if bold is true in modeler, we receive nothing in execution (!formal.bold)\r\n        if (format.bold || !format.bold || !isLabelFormat) {\r\n            self.changeFontBold(format.bold, isLabelFormat);\r\n        }\r\n        if (format.italic) {\r\n            self.changeFontItalic(format.italic, isLabelFormat);\r\n        }\r\n        if (format.underline) {\r\n            self.changeFontUnderline(format.underline, isLabelFormat);\r\n        }\r\n        if (format.strikethru) {\r\n            self.changeFontStrikethru(format.strikethru, isLabelFormat);\r\n        }\r\n        if (format.size) {\r\n            self.changeFontSize(format.size, isLabelFormat);\r\n        }\r\n\r\n        // Set required and visiblity\r\n        properties.required = properties.required != undefined ? bizagi.util.parseBoolean(properties.required) : false;\r\n        var visible = properties.visible != undefined ? bizagi.util.parseBoolean(properties.visible) : true;\r\n        if (properties.required) {\r\n            self.changeRequired(properties.required);\r\n        }\r\n        if (!visible) {\r\n            if (self.grid) {\r\n                self.changeCellVisibility(visible);\r\n            } else {\r\n                self.changeVisibility(visible);\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        triggerEvents = triggerEvents !== undefined ? triggerEvents : true;\r\n\r\n        if (!(bizagi.util.identicalObjects(value, self.value))) {\r\n            // set previous value\r\n            self.properties.previousValue = self.properties.originalValue = self.value;\r\n\r\n            // Change internal value\r\n            self.value = self.properties.value = value;\r\n            if (self.properties.required && self.getMode() == \"execution\") {\r\n\r\n                if (self.checkRequired([])) {\r\n                    self.changeRequiredLabel(false);\r\n                } else {\r\n                    self.changeRequiredLabel(true);\r\n                }\r\n            }\r\n\r\n            // Trigger events\r\n            if (triggerEvents && !self.internalSetInitialValueFlag) {\r\n                self.triggerRenderChange();\r\n                self.triggerRenderValidate();\r\n            }\r\n        }\r\n    },\r\n\r\n    checkRequired: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (bizagi.util.parseBoolean(properties.required)) {\r\n            if (!self.hasValue()) {\r\n                message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                invalidElements.push({\r\n                    xpath: properties.xpath,\r\n                    message: message\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n\r\n    validateInputRetype: function () {\r\n        var self = this;\r\n        if (self.properties.retype && self.cloneRender) {\r\n            return self.getValue() == self.cloneRender.getValue();\r\n        }\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Triggers the render change event\r\n    */\r\n    triggerRenderChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        params.changed = params.changed !== undefined ? params.changed : true;\r\n        self.triggerHandler(\"renderchange\", {render: self, changed: params.changed});\r\n    },\r\n    /*\r\n    *   Triggers the render validate event\r\n    */\r\n    triggerRenderValidate: function () {\r\n        var self = this;\r\n        self.triggerHandler(\"rendervalidate\", {render: self});\r\n    },\r\n    /*\r\n    *   Sets the value in the rendered control\r\n    */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n\r\n        if (!self.properties.editable && (self.properties.display !== \"check\" || (self.properties.display === \"check\" && bizagi.override.enableCheck === true))) {\r\n            // Render as simple value\r\n            var displayValue = self.getDisplayValue(value);\r\n            if (typeof (displayValue) == \"string\" || typeof (displayValue) == \"number\") {\r\n                displayValue = bizagi.util.sanitizeHTML(displayValue);\r\n                $(control).html(\"<label class='readonly-control'>\" + displayValue + \"</label>\");\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *   Returns the internal value\r\n    */\r\n    getValue: function () {\r\n        return this.value;\r\n    },\r\n    /*\r\n    *   Returns the value to display, ex. non-editable renders\r\n    */\r\n    getDisplayValue: function () {\r\n        return this.getValue();\r\n    },\r\n    /*\r\n    *   Template method to get the label element\r\n    */\r\n    getLabel: function () {\r\n        bizagi.util.mustImplement(\"getLabel\");\r\n    },\r\n    /*\r\n    *   Template method to get the control element\r\n    */\r\n    getControl: function () {\r\n        bizagi.util.mustImplement(\"getControl\");\r\n    },\r\n    /*\r\n    *   Template method to get the control filler element\r\n    */\r\n    getControlFiller: function () {\r\n        bizagi.util.mustImplement(\"getControlFiller\");\r\n    },\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n    },\r\n    /*\r\n    *   Adds a validation message to the render\r\n    */\r\n    setValidationMessage: function (message) {\r\n        this.validationMessage = message;\r\n    },\r\n    /*\r\n    *   Method to render non editable values\r\n    */\r\n    renderReadOnly: function () {\r\n        var result = this.getValue();\r\n        var readOnlyValue = \"\";\r\n\r\n        if (bizagi.util.isObject(result) && typeof (result.value) !== \"undefined\") {\r\n            readOnlyValue = bizagi.util.sanitizeHTML(result.value);\r\n        } else if (!bizagi.util.isEmpty(result)) {\r\n            if (bizagi.util.isString(result)) {\r\n                readOnlyValue = bizagi.util.decodedDisplayValue(result);\r\n            } else {\r\n                readOnlyValue = result;\r\n            }\r\n        }\r\n\r\n        return readOnlyValue;\r\n    },\r\n\r\n    /*\r\n    *  Method to render print version\r\n    */\r\n    postRenderPrintVersion: function () {\r\n    },\r\n\r\n    /*\r\n    *   Customizes render display type with custom css classes\r\n    */\r\n    changeDisplayOption: function (displayType) {\r\n        this.properties.displayType = displayType;\r\n    },\r\n\r\n    /*\r\n    *   Return the right display option class\r\n    */\r\n    getDisplayOptionClass: function (displayType) {\r\n        return \"\";\r\n    },\r\n\r\n    /*\r\n    *   Customizes render label align\r\n    */\r\n    changeLabelAlign: function (alignType) {\r\n        this.properties.labelAlign = alignType;\r\n    },\r\n\r\n    /*\r\n    *   Customizes render value align\r\n    */\r\n    changeValueAlign: function (alignType) {\r\n        this.properties.valueAlign = alignType;\r\n    },\r\n\r\n    /*\r\n    *   Return the right align class\r\n    */\r\n    getAlignClass: function (alignType) {\r\n        return \"\";\r\n    },\r\n\r\n    /*\r\n    *   Customizes render label and value width\r\n    */\r\n    customizeRenderWidth: function () {\r\n    },\r\n\r\n    /* Customizes render color*/\r\n    changeColor: function (color, isLabelFormat) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var label = self.getLabel();\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        if (control && label) {\r\n            if (color != 'none') {\r\n                // Hide - show the render\r\n                if (self.properties.displayType === \"value\" || !isLabelFormat) {\r\n                    self.getElementsToStylize(self.getControl()).css(\"color\", color, \"!important\");\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"color\", color, \"!important\");\r\n                    });\r\n                } else {\r\n                    self.element.each(function () {\r\n                        this.style.setProperty('color', color, 'important');\r\n                    });\r\n\r\n                    if (self.properties.type == \"grid\") {\r\n                        self.getControl().find(\".bz-mobile-grid__header-title\").each(function () {\r\n                            this.style.setProperty('color', color, 'important');\r\n                        });\r\n                    }\r\n\r\n                    self.getLabel().find(\"label\").css(\"color\", color, \"!important\");\r\n                    if (self.properties.editable === false) {\r\n                        self.getElementsToStylize(self.getControl()).css(\"color\", color, \"!important\");\r\n                        self.getElementsToStylize($(\"label\", self.getControl()).css(\"color\", color, \"!important\"));\r\n                    }\r\n                }\r\n            } else {\r\n                self.element.css(\"color\", \"\");\r\n                self.getLabel().find(\"label\").css(\"color\", \"\");\r\n                self.getControl().css(\"color\", \"\");\r\n\r\n                self.getControl().find(\"input, textarea\").each(function (i, element) {\r\n                    var originalColor = $(element).data(\"originalColor\") || \"\";\r\n                    self.getElementsToStylize(element).css(\"color\", originalColor);\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes render background color*/\r\n    changeBackgroundColor: function (color) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var label = self.getLabel();\r\n\r\n        if (control && label) {\r\n            if (color != 'none') {\r\n                self.element.each(function () {\r\n                    this.style.setProperty('background-color', color, 'important');\r\n                });\r\n\r\n                if (typeof (label.find('label').style) !== \"undefined\") {\r\n                    self.getLabel().find(\"label\").style(\"background-color\", color, \"important\");\r\n                } else {\r\n                    self.getLabel().find(\"label\").css(\"background-color\", color, \"!important\");\r\n                }\r\n\r\n                var currentStyle = self.getLabel().attr(\"style\");\r\n                currentStyle += \"; background-color:\" + color + \"!important\";\r\n                self.getLabel().attr(\"style\", currentStyle);\r\n            } else {\r\n                self.element.css(\"background-color\", \"\");\r\n                self.getLabel().find(\"label\").css(\"background-color\", \"\");\r\n                self.getControl().css(\"background-color\", \"\");\r\n                self.getControl().find(\"input, textarea\").each(function (i, element) {\r\n                    var originalColor = $(element).data(\"originalColor\") || \"\";\r\n                    $(element).css(\"background-color\", originalColor);\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Returns the formatting label to be used for bold, italic, underline, strikethrough and size*/\r\n    getFormattingLabel: function () {\r\n        var self = this;\r\n        return self.getLabel().find(\"label\");\r\n    },\r\n\r\n    /* Customizes the font weight */\r\n    changeFontBold: function (bold, isLabelFormat) {\r\n        var self = this;\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(bold) != false && isLabelFormat) {\r\n            self.getFormattingLabel().css(\"font-weight\", \"bold\", \"!important\");\r\n            self.getControl().each(function (i, element) {\r\n                $(element).css(\"font-weight\", \"bold\", \"!important\");\r\n            });\r\n\r\n        } else {\r\n            if (isLabelFormat)\r\n                self.getFormattingLabel().css(\"font-weight\", \"normal\", \"!important\");\r\n        }\r\n        if (!isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(bold) == true) {\r\n                self.getControl().find(\"*\").each(function (i, element) {\r\n                    $(element).css(\"font-weight\", \"bold\", \"!important\");\r\n                });\r\n            } else {\r\n                self.getControl().find(\"*\").each(function (i, element) {\r\n                    $(element).css(\"font-weight\", \"normal\", \"!important\");\r\n                });\r\n                self.getControl().css(\"font-weight\", \"normal\", \"!important\");\r\n            }\r\n        }\r\n    },\r\n\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var value = self.getValue();\r\n        var compareValue = properties.originalValue;\r\n        var baseValue = properties.defaultValue;\r\n        var result = true;\r\n        var renderType = bizagi.util.normalizeType(properties.type);\r\n\r\n        // Flag to force to collect data\r\n        if ($.forceCollectData) {\r\n            return true;\r\n        }\r\n\r\n        // Verify if control has been ready\r\n        if (renderType === \"grid\" && self.ready().state() === \"pending\") {\r\n            return false;\r\n        }\r\n\r\n        if ([\"combo\", \"queryCombo\", \"list\", \"queryList\",\"radio\", \"queryRadio\"].includes(renderType) || /^cascadingcombo$/i.test(renderType)) {\r\n            if (value && value.length !== undefined) {\r\n                value = value[0];\r\n            }\r\n            if (compareValue && compareValue.length !== undefined) {\r\n                compareValue = compareValue[0];\r\n            }\r\n            if (baseValue && baseValue.length !== undefined) {\r\n                baseValue = baseValue[0];\r\n            }\r\n            value = value && value.id ? value.id : value;\r\n            compareValue = compareValue && compareValue.id ? compareValue.id : compareValue;\r\n            baseValue = baseValue && baseValue.id ? baseValue.id : baseValue;\r\n            if (typeof baseValue != \"undefined\" && baseValue != null) {\r\n                result = (compareValue == value) && (compareValue != baseValue) ? false : true;\r\n            } else {\r\n                result = (compareValue == value) ? false : true;\r\n            }\r\n        } else if (renderType === \"boolean\" || renderType === \"queryBoolean\" || renderType === \"queryCheck\") {\r\n            result = (bizagi.util.parseBoolean(compareValue) == bizagi.util.parseBoolean(value)) ? false : true;\r\n        } else if (renderType === \"searchNumber\") {\r\n            result = !!(value);\r\n        } else if (renderType === \"number\") {\r\n            if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue === value) ? false : true;\r\n            }\r\n        } else if (renderType === \"text\") {\r\n            if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue === value) ? false : true;\r\n            }\r\n        } else if (renderType === \"date\") {\r\n            if (!compareValue && !value) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue == value) ? false : true;\r\n            }\r\n        } else if (renderType === \"actionLauncher\") {\r\n            //Object must be an array\r\n            result = false;\r\n            var compareValueObj = [];\r\n            try {\r\n                if (typeof compareValue === \"string\") {\r\n                    compareValueObj = JSON.parse(compareValue);\r\n                } else {\r\n                    compareValueObj = compareValue;\r\n                }\r\n            } catch (e) {\r\n            }\r\n\r\n            var _findAction = function (guid, targetObj) {\r\n                guid = guid || \"\";\r\n                targetObj = targetObj || [];\r\n                var result = false;\r\n                for (var i = 0, l = targetObj.length; i < l; i++) {\r\n                    if (targetObj[i].guidAction == guid) {\r\n                        result = true;\r\n                        break;\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n\r\n            if (compareValueObj.length == value.length) {\r\n                for (var i = 0, l = compareValueObj.length; i < l; i++) {\r\n                    if (!_findAction(compareValueObj[i].guidAction, value)) {\r\n                        result = true;\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                result = true;\r\n            }\r\n        } else if (renderType === \"polymorphicLauncher\" || renderType === \"entityTemplate\") {\r\n            //Object must be an array\r\n            if (compareValue.length != value.length) {\r\n                result = true;\r\n            } else {\r\n                result = (JSON.encode(value) == JSON.encode(compareValue)) ? false : true;\r\n            }\r\n        } else if (renderType === \"image\") {\r\n            if (compareValue == null && value.indexOf(true) < 0) {\r\n                result = false;\r\n            } else {\r\n                result = true;\r\n            }\r\n        } else if (renderType === \"searchList\") {\r\n            var objectValue = {};\r\n            try {\r\n                objectValue = JSON.parse(value);\r\n            } catch (e) {\r\n                console.log(\"Error when detect change value on searchList control\")\r\n            }\r\n            result = (JSON.encode(compareValue) == JSON.encode(objectValue.value)) ? false : true;\r\n        } else {\r\n            result = (compareValue === value) ? false : true;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /* Customizes the font italic style */\r\n    changeFontItalic: function (italic, isLabelFormat) {\r\n        var self = this;\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(italic) == true) {\r\n                if (isLabelFormat)\r\n                    self.getFormattingLabel().css(\"font-style\", \"italic\", \"!important\");\r\n\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"font-style\", \"italic\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"font-style\", \"italic\", \"!important\");\r\n                }\r\n            } else {\r\n                if (isLabelFormat)\r\n                    self.getFormattingLabel().css(\"font-style\", \"normal\", \"!important\");\r\n\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"font-style\", \"normal\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"font-style\", \"normal\", \"!important\");\r\n                }\r\n            }\r\n        } else {\r\n            if (bizagi.util.parseBoolean(italic) == true) {\r\n                self.getFormattingLabel().css(\"font-style\", \"italic\", \"!important\");\r\n            } else {\r\n                self.getFormattingLabel().css(\"font-style\", \"normal\", \"!important\");\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes the font underline */\r\n    changeFontUnderline: function (underline, isLabelFormat) {\r\n        var self = this;\r\n        var textFormat = self.properties.textFormat || {};\r\n        var valueFormat = self.properties.valueFormat || {};\r\n        var strikethru = bizagi.util.parseBoolean(textFormat.strikethru) ? \"line-through \" : \"\";\r\n        var valuestrikethru = bizagi.util.parseBoolean(valueFormat.strikethru) ? \"line-through \" : \"\";\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(underline) == true && isLabelFormat) {\r\n            self.getFormattingLabel().css(\"text-decoration\", strikethru + \"underline\", \"!important\");\r\n            self.getControl().each(function (i, element) {\r\n                self.getElementsToStylize(element).css(\"text-decoration\", strikethru + \"underline\");\r\n            });\r\n        } else {\r\n            if (isLabelFormat)\r\n                self.getFormattingLabel().css(\"text-decoration\", strikethru, \"!important\");\r\n        }\r\n        if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(underline) == true) {\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"text-decoration\", valuestrikethru + \"underline\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"text-decoration\", valuestrikethru + \"underline\", \"!important\");\r\n                }\r\n            } else {\r\n                self.getControl().find(\"*\").each(function (i, element) {\r\n                    self.getElementsToStylize(element).css(\"text-decoration\", valuestrikethru, \"!important\");\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes the font Strikethrough property */\r\n    changeFontStrikethru: function (strikethru, isLabelFormat) {\r\n        var self = this;\r\n        var textFormat = self.properties.textFormat || {};\r\n        var valueFormat = self.properties.valueFormat || {};\r\n        var underline = bizagi.util.parseBoolean(textFormat.underline) ? \"underline \" : \"\";\r\n        var valueunderline = bizagi.util.parseBoolean(valueFormat.underline) ? \"underline \" : \"\";\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(strikethru) == true && isLabelFormat) {\r\n            self.getFormattingLabel().css(\"text-decoration\", underline + \"line-through\", \"!important\");\r\n        } else {\r\n            if (isLabelFormat)\r\n                self.getFormattingLabel().css(\"text-decoration\", underline, \"!important\");\r\n        }\r\n\r\n        if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(strikethru) == true) {\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"text-decoration\", valueunderline + \"line-through\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"text-decoration\", valueunderline + \"line-through\", \"!important\");\r\n                }\r\n            } else {\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"text-decoration\", valueunderline, \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"text-decoration\", valueunderline, \"!important\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes the font size property */\r\n    changeFontSize: function (size, isLabelFormat) {\r\n        var self = this;\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (size != \"0\") {\r\n            var label = self.getFormattingLabel();\r\n            var newFontSize = (100 + Number(size) * 10) + \"%\";\r\n            if (isLabelFormat) {\r\n                label.css(\"font-size\", newFontSize, \"!important\");\r\n            }\r\n            if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n                var control = self.getControl();\r\n                if (typeof control.children() == \"object\" && control.children().length > 0) {\r\n                    self.getElementsToStylize(control.children()).css(\"font-size\", newFontSize, \"!important\");\r\n                } else {\r\n                    self.getElementsToStylize(control).css(\"font-size\", newFontSize, \"!important\");\r\n                    // Next line applies to Cascading combo and combo in order to increase the control space with large value fonts\r\n                    if (self.properties.type.indexOf(\"ombo\") != -1 && size > 4) (\".ui-selectmenu\", control).children(0).height(2 * size + 20);\r\n                }\r\n\r\n                self.getElementsToStylize(control.find(\".ui-bizagi-render-date\")).css(\"line-height\", \"normal\");\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * in mobiles, don't apply styles to icon's elements\r\n     */\r\n    getElementsToStylize: function (context) {\r\n        return $(context);\r\n    },\r\n\r\n    /* Changes the render visibility*/\r\n    changeVisibility: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(argument) == true) {\r\n            if (properties.type !== \"hidden\") {\r\n                self.element.show();\r\n                self.element.css(\"display\", \"\");\r\n\r\n                if (properties.required) {\r\n                    if (!self.hasValue()) {\r\n                        self.changeRequiredLabel(true);\r\n                    }\r\n                }\r\n            }\r\n        } else if (self.element) {\r\n            self.element.hide();\r\n        }\r\n\r\n        // Update properties\r\n        properties.visible = argument;\r\n    },\r\n    /* Changes the render editability*/\r\n    changeEditability: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        // Renders again\r\n        properties.editable = argument == \"Default\" ? self.originalProperties.editable: bizagi.util.parseBoolean(argument);\r\n        properties.editabilityEnabled = properties.editabilityEnabled || properties.editable; \r\n\r\n        // Clears control\r\n        control.empty();\r\n\r\n        if (typeof self.internalRenderControl == \"function\") {\r\n            $.when(self.internalRenderControl()).done(function (html) {\r\n                if (typeof self.emptyControlByChangeEditability == \"function\")\r\n                    self.emptyControlByChangeEditability();\r\n                if (!self.asyncRenderDeferred)\r\n                    control.append(html);\r\n                self.postRenderElement(self.element);\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    * change cell editability and attach bindings\r\n    */\r\n    changeEditabilityCellControl: function (argument, key, xpath) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        var renderColumn = self.grid.getColumn(xpath);\r\n        var decorated = renderColumn.getDecorated(key);\r\n\r\n        // Renders again\r\n        properties.editable = argument == \"Default\" ? self.originalProperties.editable: bizagi.util.parseBoolean(argument);\r\n        properties.editabilityEnabled = properties.editabilityEnabled || properties.editable; \r\n\r\n        // Clears control\r\n        control.empty();\r\n        if (typeof self.internalRenderControl == \"function\") {\r\n            $.when(self.internalRenderControl()).done(function (html) {\r\n                if (!self.asyncRenderDeferred) {\r\n                    control.append(html);\r\n                }\r\n\r\n                self.postRenderElement(self.element);\r\n\r\n                if (properties.editable) {\r\n\r\n                    renderColumn.bind(\"rendered\", function () {\r\n                        renderColumn.readyDeferred.resolve();\r\n                    });\r\n\r\n                    decorated.unbind(\"renderchange\");\r\n\r\n                    // If the render changes set the flag on\r\n                    decorated.bind(\"renderchange\", function (render, args) {\r\n                        renderColumn.changed = true;\r\n                        self.grid.onCellChange(renderColumn, null, key, args);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    changeRequired: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var label = properties.displayName || \"\";\r\n        var labelElement = $(\"label\", self.getLabel());\r\n        var controlElement = self.getControl();\r\n\r\n        // Update properties\r\n        properties.required = argument;\r\n\r\n        // Changes label\r\n        if (self.getMode() == \"execution\" && self.checkRequired([])) {\r\n            self.changeRequiredLabel(false);\r\n        } else if (bizagi.util.parseBoolean(argument) == true && properties.editable) {\r\n            if (self.properties.orientation == \"rtl\") {\r\n                controlElement.prepend('<div class=\"ui-bizagi-render-control-required-rtl\"></div>');\r\n            } else {\r\n                controlElement.addClass('control-required');\r\n                controlElement.prepend('<div class=\"ui-bizagi-render-control-required\"></div>');\r\n            }\r\n        } else {\r\n            // if element has required label and through action change it, remove element.\r\n            if (self.properties.orientation == \"rtl\") {\r\n                $(\".ui-bizagi-render-control-required-rtl\", controlElement).remove();\r\n            } else {\r\n                controlElement.removeClass('control-required');\r\n                $(\".ui-bizagi-render-control-required\", controlElement).remove();\r\n            }\r\n        }\r\n\r\n        // Set text, HTML is more suitable for the content\r\n        labelElement.html(label);\r\n\r\n        // Perform validations again to check if the form is valid after this change\r\n        self.triggerRenderValidate();\r\n    },\r\n    /**\r\n     * This method just make a toggle of red label indicator\r\n     * Does't change internal value of control, if you need it\r\n     * please use changeRequired method\r\n     *\r\n     * @argument {boolean} argument\r\n     */\r\n    changeRequiredLabel: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var label = properties.displayName || \"\";\r\n        var labelElement = $(\"label\", self.getLabel());\r\n        var controlElement = self.getControl();\r\n\r\n        // Changes label\r\n        if (bizagi.util.parseBoolean(argument) == true && properties.editable) {\r\n            if (self.properties.orientation == \"rtl\") {\r\n                controlElement.prepend('<div class=\"ui-bizagi-render-control-required-rtl\"></div>');\r\n            } else {\r\n                controlElement.addClass('control-required');\r\n                controlElement.append('<div class=\"ui-bizagi-render-control-required\"></div>');\r\n            }\r\n        } else {\r\n            // if element has required label and through action change it, remove element.\r\n            if (self.properties.orientation == \"rtl\") {\r\n                $(\".ui-bizagi-render-control-required-rtl\", controlElement).remove();\r\n            } else {\r\n                controlElement.removeClass('control-required');\r\n                $(\".ui-bizagi-render-control-required\", controlElement).remove();\r\n            }\r\n        }\r\n\r\n        // Set text, HTML is more suitable for the content\r\n        labelElement.html(label);\r\n\r\n        // Perform validations again to check if the form is valid after this change\r\n        self.triggerRenderValidate();\r\n    },\r\n    /*\r\n    *   Refresh the control with a new data\r\n    */\r\n    refreshControl: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var originalValue = self.value;\r\n        var form = self.getFormContainer();\r\n        var idForm = form.properties.id || \"\";\r\n\r\n        args = args || {};\r\n\r\n        // Start waiting\r\n        self.startLoading();\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh();\r\n\r\n        // Call the ajax service\r\n        return $.when(self.dataService.multiaction().refreshControl({\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: (properties.xpathContext || args.xpathContext),\r\n            idForm: idForm\r\n        })).pipe(function (data) {\r\n            // Clear variables\r\n            self.control = self.controlFiller = self.label = null;\r\n\r\n            // Update properties data\r\n            var currentElement = self.element;\r\n            self.initializeData(data.render);\r\n\r\n            // Render the control again\r\n            return $.when(self.render()).pipe(function (html) {\r\n                var result = $(html);\r\n                //Dont remove unused rendered var\r\n                var rendered = self.postRenderElement(result);\r\n                self.properties.originalValue = self.value;\r\n                return result;\r\n            }).pipe(function (result) {\r\n                // When the content has been post-renderized, replace it\r\n                currentElement.replaceWith(result);\r\n\r\n                // Prevent multiple refresh on grid\r\n                if (!self.grid) {\r\n                    self.triggerRenderChange({changed: false});\r\n                }\r\n\r\n                // Execute personalized stuff before to refresh it\r\n                self.afterToRefresh();\r\n            });\r\n\r\n        }).fail(function (message) {\r\n            var message = self.processFailMessage(message);\r\n\r\n        }).always(function () {\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Refresh the control with a new data\r\n     */\r\n    refreshDesignControl: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh();\r\n\r\n        // Clear variables\r\n        self.control = self.controlFiller = self.label = null;\r\n\r\n        $.extend(data.render.properties, {\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: (properties.xpathContext || \"form\"),\r\n            idPageCache: properties.idPageCache\r\n        });\r\n\r\n        // Update properties data\r\n        var currentElement = self.element;\r\n        self.initializeData(data.render);\r\n\r\n        // Render the control again\r\n        return $.when(self.render()).pipe(function (html) {\r\n            var result = $(html);\r\n            //Dont remove unused rendered var\r\n            var rendered = self.postRenderElement(result);\r\n            self.properties.originalValue = self.value;\r\n            return result;\r\n        }).pipe(function (result) {\r\n            // When the content has been post-renderized, replace it\r\n            currentElement.replaceWith(result);\r\n            self.triggerRenderChange();\r\n\r\n            // Execute personalized stuff before to refresh it\r\n            self.beforeToRefresh();\r\n        });\r\n    },\r\n\r\n    /*\r\n    * Cleans current value\r\n    */\r\n    cleanData: function () {\r\n        var self = this;\r\n\r\n        self.setValue(\"\");\r\n        self.clearDisplayValue();\r\n    },\r\n\r\n    /*\r\n     *   Sets the value in the rendered control\r\n     */\r\n    clearDisplayValue: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var input = control.find(\"input\");\r\n\r\n        if (input.length > 0) {\r\n            input.val(self.getValue());\r\n        } else if (self.properties.editable === false) {\r\n            $(control).html(\"<label class='readonly-control'></label>\");\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Updates original value for some comparisons\r\n    */\r\n    updateOriginalValue: function () {\r\n        var self = this;\r\n        self.properties.originalValue = self.value;\r\n    },\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            if (!bizagi.util.isEmpty(xpath)) {\r\n                if (!bizagi.util.isEmpty(value)) {\r\n                    renderValues[properties.xpath] = value;\r\n                } else if (value === \"\" || value === null) {\r\n                    renderValues[properties.xpath] = \"\";\r\n                }\r\n            }\r\n        }\r\n\r\n        //Validate if the input has a retype configured and check that both values matches, otherwise delete the original value\r\n        if (!self.validateInputRetype()) {\r\n            renderValues[properties.xpath] = \"\";\r\n        }\r\n    },\r\n\r\n    hasChanged: function (result) {\r\n        var self = this;\r\n        if (self.controlValueIsChanged()) {\r\n            result.push(true);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *  Configure aditional Handlers for queryForm type\r\n    */\r\n    configureHandlersQueryForm: function () {\r\n        var self = this;\r\n        var checkIncluded = self.element.find(\".ui-bizagi-render-control-included\");\r\n        checkIncluded.change(function () {\r\n            self.properties.included = $(this).is(\":checked\");\r\n        });\r\n    },\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectDataQueryForm: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n        var queryValue = null;\r\n        if (!bizagi.util.isEmpty(xpath)) {\r\n            if (value !== null && typeof (value) !== \"undefined\") {\r\n                var isObject = typeof (value.id) !== \"undefined\";\r\n                if (isObject) {\r\n                    queryValue = (!bizagi.util.isEmpty(value.id)) ? [value] : null;\r\n                } else {\r\n                    queryValue = (value !== \"\") ? value : null;\r\n                }\r\n            }\r\n            if (queryValue !== null || properties.included) {\r\n\r\n                if (!(properties.display == \"check\" && properties.value == false)) {\r\n\r\n                    var searchType = self.properties.typeSearch || self.properties.rangeQuery || \"NONE\";\r\n                    searchType = searchType.toUpperCase();\r\n                    var newParameter = {\r\n                        \"value\": queryValue,\r\n                        \"included\": self.properties.included,\r\n                        \"xpath\": properties.xpath,\r\n                        \"searchType\": searchType,\r\n                        \"orderType\": \"NONE\"\r\n                    };\r\n                    if (typeof properties.displayXpath !== \"undefined\" && properties.displayXpath !== \"\") {\r\n                        //newParameter.displayXpath= properties.xpath+\".\"+properties.displayXpath;\r\n                        newParameter.displayXpath = properties.displayXpath;\r\n                    }\r\n                    renderValues.push(newParameter);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *  Method to determine if the render value can be sent to the server or not\r\n    */\r\n    canBeSent: function () {\r\n        var self = this, force;\r\n        var properties = self.properties;\r\n        var displayOnly = bizagi.util.parseBoolean(properties.displayOnly) || false;\r\n        var editable = properties.editable;\r\n\r\n        // The render can be sent if it is editable and is not \"display only\"\r\n        if (!displayOnly && editable) {\r\n            return true;\r\n        }\r\n\r\n        // Don't send the clones\r\n        if (properties.isClone) {\r\n            return false;\r\n        }\r\n\r\n        if (properties.xpath) {\r\n            var form = self.getFormContainer();\r\n            if (form.getRenders(properties.xpath).length == 1) {\r\n                force = $.forceCollectData ? $.forceCollectData.toString() : false;\r\n                $.forceCollectData = force ? undefined : $.forceCollectData;\r\n                if (self.controlValueIsChanged()) {\r\n                    $.forceCollectData = force ? bizagi.util.parseBoolean(force) : $.forceCollectData;\r\n                    return true;\r\n                }\r\n                $.forceCollectData = force ? bizagi.util.parseBoolean(force) : $.forceCollectData;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n    /*\r\n    *  Method to determine if the render value can be sent to search\r\n    */\r\n    canBeSentQueryForm: function () {\r\n        var self = this, force;\r\n        var properties = self.properties;\r\n        // Don't send the clones\r\n        if (properties.isClone) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    /*\r\n    *   Focus on the current element\r\n    */\r\n    focus: function (time) {\r\n        var self = this;\r\n\r\n        // Focus is only allowed when the render is visible\r\n        if (!self.properties.visible) return;\r\n\r\n        // Call base\r\n        this._super();\r\n        var layout = $(\"#ui-bizagi-wp-app-render-form-content\");\r\n\r\n        // Configures effect\r\n        var effect = function () {\r\n            var control = self.getControl();\r\n            var defaultControl = (self.properties.type != \"grid\") ? $(\"input, select, option, textarea\", control) : $(\"input, select, option, textarea\", control).first();\r\n            if (defaultControl.length > 0) {\r\n\r\n                // Focus control\r\n                $.each(defaultControl, function (i) {\r\n                    var innerControl = defaultControl[i];\r\n                    if ($(innerControl).attr(\"type\") != \"hidden\" && $(innerControl).css(\"display\") != \"none\" && $(innerControl).css(\"visibility\") != \"hidden\") {\r\n\r\n                        try {\r\n                            if (!bizagi.util.isIE()) {\r\n                                bizagi.util.autoScrollBottom(layout);\r\n                            }\r\n                            innerControl.focus();\r\n                        } catch (e) {\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        // Wait until the render is ready to apply the focus effect\r\n        $.when(self.ready())\r\n            .done(function () {\r\n                // Run effect\r\n                if (time > 0) {\r\n                    setTimeout(effect, time);\r\n                } else {\r\n                    effect();\r\n                }\r\n            });\r\n    },\r\n\r\n    /*\r\n    *   Resolves default align for each display type\r\n    */\r\n    getDefaultLabelAlign: function (displayType) {\r\n        return \"default\";\r\n    },\r\n\r\n    /*\r\n    *   Resolves default value align for each display type\r\n    */\r\n    getDefaultValueAlign: function (displayType) {\r\n        return \"default\";\r\n    },\r\n    /*\r\n    *   Transform the align type when using RTL orientation\r\n    */\r\n    getRTLAlign: function (align) {\r\n        /* if (align === \"default\"){ \r\n            return \"right\";\r\n        } */\r\n        return align;\r\n    },\r\n\r\n    /*\r\n    *   Enables submit on change feature for the current render\r\n    */\r\n    configureSubmitOnChange: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = \"\";\r\n\r\n        if (!properties.editable) return;\r\n\r\n        // Build action\r\n        properties.dependencies = properties.dependencies || 'all';\r\n\r\n        if (properties.xpath) {\r\n            if (properties.submitOnChangexpathContext) {\r\n                xpath = properties.submitOnChangexpathContext + \".\" + properties.xpath;\r\n            } else {\r\n                xpath = properties.xpath;\r\n            }\r\n        } else {\r\n            if (properties.submitOnChangexpathContext) {\r\n                xpath = properties.submitOnChangexpathContext + \".\" + properties.id;\r\n            } else {\r\n                xpath = properties.id;\r\n            }\r\n        }\r\n\r\n        var action = {\r\n            \"conditions\": {\r\n                \"expressions\": [\r\n                    {\r\n                        \"simple\": {\r\n                            \"xpath\": xpath,\r\n                            \"operator\": \"changes\",\r\n                            \"argumentType\": \"const\"\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            \"commands\": [\r\n                {\r\n                    \"xpath\": xpath,\r\n                    \"command\": 'submit-value',\r\n                    \"argument\": properties.dependencies\r\n                }\r\n            ],\r\n            \"dependencies\": [xpath],\r\n            \"elseCommands\": []\r\n        };\r\n\r\n        // Add action when form ends its rendering\r\n        $.when(self.ready()).done(function () {\r\n            var form = self.getFormContainer();\r\n            form.addSubmitAction(xpath, action);\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Sends all the info to the server then refreshes the form\r\n    *   Returns a deferred\r\n    */\r\n    submitOnChange: function (data, bRefreshForm, notCollect) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n\r\n        // Add context parameter\r\n        if (self.properties.contexttype != \"\" && data) {\r\n            data[self.dataService.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = self.properties.contexttype;\r\n        }\r\n\r\n        $.when(self.isReadyToSave()).done(function () {\r\n            self.internalSubmitOnChange(data, bRefreshForm, notCollect).done(function () {\r\n                defer.resolve();\r\n            }).fail(function () {\r\n                defer.reject();\r\n            });\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    getCacheIdCase: function () {\r\n        var self = this;\r\n        var idCase = self.getParams().idCase;\r\n\r\n        if (bizagi.cache === undefined) {\r\n            bizagi.cache = {};\r\n            bizagi.cache.idCaseObject = {\r\n                idCase: idCase !== undefined ? idCase : (bizagi.cache.idCase !== undefined ? bizagi.cache.idCase : undefined)\r\n            };\r\n        } else {\r\n            if (idCase !== undefined && bizagi.cache.idCaseObject !== undefined) {\r\n                bizagi.cache.idCaseObject.idCase = idCase;\r\n            } else {\r\n                if (idCase !== undefined && bizagi.cache.idCaseObject === undefined) {\r\n                    bizagi.cache.idCaseObject = {};\r\n                    bizagi.cache.idCaseObject.idCase = idCase;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (idCase === undefined) {\r\n            if (bizagi.cache.idCaseObject === undefined) {\r\n                idCase = undefined;\r\n            } else {\r\n                idCase = bizagi.cache.idCaseObject.idCase;\r\n            }\r\n        } else {\r\n            idCase = idCase;\r\n        }\r\n\r\n        return idCase;\r\n    },\r\n    /*\r\n    *   Internal method\r\n    *   Sends all the info to the server then refreshes the form\r\n    *   Returns a deferred\r\n    */\r\n    internalSubmitOnChange: function (data, bRefreshForm, notCollect) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n        var parameters = {\r\n            data: data,\r\n            bRefreshForm: bRefreshForm,\r\n            notCollect: notCollect,\r\n            properties: {\r\n                idCase: self.getCacheIdCase(),\r\n                id: properties.id,\r\n                xpath: properties.xpath,\r\n                idPageCache: properties.idPageCache,\r\n                contexttype: properties.contexttype\r\n            }\r\n        }\r\n\r\n        return form.internalSubmitOnChange(parameters);\r\n    },\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n        return $.when(self.parent.ready(), self.isRendered());\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n\r\n        if (form) {\r\n            return form.getCustomHandlers();\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandler: function (key) {\r\n        var self = this;\r\n        var customHandlers = self.getCustomHandlers();\r\n\r\n        if (customHandlers) {\r\n            return customHandlers[key];\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n    *   Calculates render label and value width\r\n    */\r\n    calculateRenderWidth: function (labelWidth, valueWidth, displayType) {\r\n        var self = this;\r\n        // Read values\r\n        // If the label width or the value width are 0, the BAS means that no value is used, so we need to adjust them to 50%\r\n        if (valueWidth == \"100\" && typeof labelWidth === \"undefined\") {\r\n            labelWidth = \"0\";\r\n        } else {\r\n            labelWidth = labelWidth ? (labelWidth != \"0\" ? labelWidth : \"50\") : \"50%\";\r\n        }\r\n        valueWidth = valueWidth ? (valueWidth != \"0\" ? valueWidth : \"50\") : \"50%\";\r\n\r\n        if (displayType == \"normal\" || displayType == \"both\" || displayType == \"reversed\") {\r\n\r\n            // Special case with lower values, so they want both fields in \"auto\" width\r\n            if (labelWidth && bizagi.util.percent2Number(labelWidth) < 5 &&\r\n                valueWidth && bizagi.util.percent2Number(valueWidth) < 5) {\r\n                return {label: 0, control: 100};\r\n            }\r\n            // Normalize percentages\r\n            if (labelWidth && !valueWidth) {\r\n                labelWidth = bizagi.util.percent2Number(labelWidth);\r\n                valueWidth = 100 - labelWidth;\r\n\r\n            } else if (!labelWidth && valueWidth) {\r\n                valueWidth = bizagi.util.percent2Number(valueWidth);\r\n                labelWidth = 100 - valueWidth;\r\n            } else {\r\n                labelWidth = bizagi.util.percent2Number(labelWidth);\r\n                valueWidth = bizagi.util.percent2Number(valueWidth);\r\n\r\n                // Check 100% percentage\r\n                if ((labelWidth + valueWidth) != 100 && typeof (self.properties) != \"undefined\" && self.properties.layoutType != \"pixels\") {\r\n                    valueWidth = 100 - labelWidth;\r\n                }\r\n            }\r\n        } else {\r\n            labelWidth = 100;\r\n            valueWidth = 100;\r\n        }\r\n\r\n        return {label: labelWidth, control: valueWidth};\r\n    },\r\n    /*\r\n    *   Get param value idCase\r\n    */\r\n    getIdCase: function () {\r\n        var self = this;\r\n        return self.getFormContainer().params.idCase || bizagi.context.idCase;\r\n    },\r\n    /*\r\n    *   Get param value idWorkitem\r\n    */\r\n    getIdWorkitem: function () {\r\n        var self = this;\r\n        return self.getFormContainer().params.idWorkitem || bizagi.context.idWorkitem;\r\n    },\r\n    /*\r\n    *   Get param value idTask\r\n    */\r\n    getidTask: function () {\r\n        var self = this;\r\n        return self.getFormContainer().params.idTask || bizagi.context.idTask;\r\n    },\r\n    /*\r\n    *   Get param value sessionId\r\n    */\r\n    getSessionId: function () {\r\n        var self = this;\r\n        return self.getFormContainer().properties.sessionId;\r\n    },\r\n\r\n    /*\r\n    *   CELL STUFF\r\n    *   TODO: Move to other place\r\n    */\r\n\r\n    /* Customizes cell color*/\r\n    changeCellColor: function (color) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        if (control) {\r\n            if (color != 'none') {\r\n                control.css(\"color\", color);\r\n                control.find(\"input, textarea, label\").each(function (i, element) {\r\n                    $(element).css(\"color\", color);\r\n                });\r\n            } else {\r\n                control.css(\"color\", \"\");\r\n                control.find(\"input, textarea, label\").each(function (i, element) {\r\n                    $(element).css(\"color\", \"\");\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Customizes cell background color\r\n     * @param color\r\n     */\r\n    changeCellBackgroundColor: function (color) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var backgroundColor = \"\";\r\n        var backgroundImage = \"\";\r\n\r\n        if (control) {\r\n            if (color != 'none') {\r\n                backgroundColor = color;\r\n                backgroundImage = \"none\";\r\n            }\r\n\r\n            if (self.properties.editable) {\r\n                var needBGPaint = false;\r\n\r\n                control.find(\"input, textarea, .ui-selectmenu\").each(function (i, element) {\r\n\r\n                    if (((element.type == \"text\") || (element.type == \"textarea\")) && !($(element).hasClass('ui-select-data')))\r\n                        needBGPaint = true;\r\n\r\n                    $(element).css({\r\n                        \"background-color\": backgroundColor,\r\n                        \"background-image\": backgroundImage\r\n                    });\r\n                });\r\n\r\n                if (!needBGPaint) {\r\n                    control.closest(\"td\").each(function (i, element) {\r\n                        $(element).css({\r\n                            \"background-color\": backgroundColor,\r\n                            \"background-image\": backgroundImage\r\n                        });\r\n                    });\r\n                }\r\n\r\n            } else {\r\n                control.each(function (i, element) {\r\n                    //TODO: Validar si se aplican los estilos en tablet aun sin esta linea, cuidado con desktop\r\n                    var item = ($(element).hasClass(\"ui-bizagi-cell-readonly\")) ? control.closest(\"td\") : $(element);\r\n                    item.css({\r\n                        \"background-color\": backgroundColor,\r\n                        \"background-image\": backgroundImage\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n    },\r\n\r\n    /**\r\n     * Changes the cell visibility\r\n     * @param argument\r\n     */\r\n    changeCellVisibility: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        if (control) {\r\n            // Hide - show the render\r\n            if (bizagi.util.parseBoolean(argument) == true) {\r\n                //control.show();\r\n                control.css(\"visibility\", \"visible\");\r\n                control.css(\"display\", \"\");\r\n\r\n                self.element && self.element.show();\r\n            } else {\r\n                //control.hide();\r\n                control.css(\"visibility\", \"hidden\");\r\n            }\r\n        }\r\n\r\n        // Update properties\r\n        properties.visible = argument;\r\n    },\r\n\r\n    /**\r\n     * Changes the cell required\r\n     * @param argument\r\n     */\r\n    changeCellRequired: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        if (control) {\r\n            // Check if argument is true and control donot have any value\r\n            if (bizagi.util.parseBoolean(argument) == true && bizagi.util.isEmpty(self.value)) {\r\n                control.addClass('control-required');\r\n                control.append('<div class=\"ui-bizagi-render-control-required\"></div>');\r\n            } else {\r\n                control.removeClass('control-required');\r\n                $(\".ui-bizagi-render-control-required\", control).remove();\r\n            }\r\n            // Update properties\r\n            properties.required = argument;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to create deferred at the moment to start multiaction\r\n     */\r\n    startActionExecution: function () {\r\n        var self = this;\r\n        self.startLoading();\r\n        self.actionExecutionDeferred = new $.Deferred();\r\n    },\r\n\r\n    /**\r\n     * method to resolve the deferred when multiaction finish\r\n     */\r\n    endActionExecution: function () {\r\n        var self = this;\r\n        self.endLoading();\r\n        if (self.actionExecutionDeferred) self.actionExecutionDeferred.resolve();\r\n        delete self.actionExecutionDeferred;\r\n    },\r\n\r\n    /**\r\n     * Method to return the promise to anyone that needs to know if multiaction ended\r\n     * @returns {*}\r\n     */\r\n    readyActionExecution: function () {\r\n        var self = this;\r\n        if (!self.actionExecutionDeferred) return $.when(true);\r\n        return self.actionExecutionDeferred.promise();\r\n    },\r\n\r\n    /**\r\n     * Verifies is the elements was inside a new row in a grid\r\n     * @returns {boolean}\r\n     */\r\n    isFromCreatedRow: function () {\r\n        var self = this;\r\n\r\n        if (self.grid) {\r\n            var i = self.grid.columns.length;\r\n\r\n            while (i-- > 0) {\r\n                if (self.grid.columns[i].properties.xpath == self.properties.xpath) {\r\n                    if (self.grid.columns[i].isNewRow == true) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    /**\r\n     * Submits a invalidate page cache request\r\n     * @param params\r\n     */\r\n    submitInvalidatePageCacheRequest: function (params) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var pageCacheToInvalidate = params ? params.idPageCache : properties.idPageCache;\r\n\r\n\r\n        self.dataService.invalidatePageCache({idPageCache: pageCacheToInvalidate});\r\n    },\r\n\r\n    /**\r\n     * Check is design mode\r\n     */\r\n    isDesignMode: function () {\r\n        return this.getMode() === \"design\";\r\n    },\r\n\r\n    /**\r\n     * Check is design mode\r\n     */\r\n    isExecutionMode: function () {\r\n        return this.getMode() === \"execution\";\r\n    },\r\n\r\n    /***/\r\n    preventDefaultForAnchorTag: function(){        \r\n        if (bizagi.util.isSharepointContext()){\r\n            $(\"a[href='#']\", this.getControl()).click(function(ev){\r\n                ev.preventDefault();          \r\n            });\r\n        }    \r\n    }\r\n});\r\n","/*\r\n *   Name: Bizagi Render Base Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a base render class with common stuff related to all renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.render.base\", {}, {\r\n\r\n    /**\r\n     * Method to process the render the layout\r\n     * @param {boolean} isLabelFormat\r\n     * @param {string} format\r\n     */\r\n    processLayout: function (isLabelFormat, format) {\r\n        var properties = this.properties;\r\n\r\n        if (typeof isLabelFormat !== \"boolean\") {\r\n            console.warm(\"error calling processLayout, 'isLabelFormat' is not boolean\");\r\n            return;\r\n        }\r\n\r\n        if (isLabelFormat) {\r\n            this.processLabelLayout(format);\r\n        } else {\r\n            this.processControlLayout(format);\r\n\r\n            // Set required and visiblity\r\n            properties.required = typeof (properties.required) !== \"undefined\" ? bizagi.util.parseBoolean(properties.required) : false;\r\n            var visible = typeof (properties.visible) !== \"undefined\" ? bizagi.util.parseBoolean(properties.visible) : true;\r\n\r\n            if (properties.required) {\r\n                this.changeRequired(properties.required);\r\n            }\r\n\r\n            if (!visible) {\r\n                this.changeVisibility(visible);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to process the label in the layout\r\n     * @param {} format\r\n     * @returns {}\r\n     */\r\n    processLabelLayout: function (format) {\r\n        var $label = this.getLabel();\r\n        if ($label == null) return;\r\n\r\n        // Set customizations\r\n        format = format || {};\r\n        if (typeof format.bold === \"undefined\") {\r\n            format.bold = true; // Default value\r\n        }\r\n\r\n        this.changeBackgroundColor(format.background)\r\n            .changeFontColor($label, format.color)\r\n            .changeFontBold($label, format.bold)\r\n            .changeFontSize($label, format.size)\r\n            .changeFontItalic($label, format.italic)\r\n            .changeTextDecoration($label, (format.underline ? \"underline\" : \"\") + (format.strikethru ? \" line-through\" : \"\"));\r\n    },\r\n\r\n    /**\r\n     * Method to process the control in the layout\r\n     * @param {} format\r\n     * @returns {}\r\n     */\r\n    processControlLayout: function (format) {\r\n        var $control = this.getControl();\r\n        var $elements = this.getElementsToStylize($control);\r\n\r\n        // Set customizations\r\n        format = format || {};\r\n\r\n        this.changeFontColor($elements, format.color)\r\n            .changeFontBold($elements, format.bold)\r\n            .changeFontItalic($elements, format.italic)\r\n            .changeFontSize($elements, format.size)\r\n            .changeTextDecoration($elements, (format.underline ? \"underline\" : \"\") + (format.strikethru ? \" line-through\" : \"\"));\r\n    },\r\n\r\n    /**\r\n     * Customizes render color\r\n     * @param {} color\r\n     * @returns {}\r\n     */\r\n    changeColor: function (color) {\r\n        var $label = this.getLabel();\r\n        var $control = this.getControl();\r\n        var $elements = this.getElementsToStylize($control);\r\n\r\n        return this\r\n            .changeFontColor($label, color)\r\n            .changeFontColor($elements, color);\r\n    },\r\n\r\n    /**\r\n     * Customizes render color\r\n     * @param {} $element\r\n     * @param {} color\r\n     * @returns {}\r\n     */\r\n    changeFontColor: function ($element, color) {\r\n        if ($element === undefined) return this;\r\n        if (color === undefined) return this;\r\n\r\n        var style = color !== \"none\" ? color : \"\";\r\n        $element.css(\"color\", style);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font size property\r\n     * @param {} $element\r\n     * @param {} size\r\n     * @returns {}\r\n     */\r\n    changeFontSize: function ($element, size) {\r\n        if (size === undefined) return this;\r\n        if ($element === undefined) return this;\r\n\r\n        if (size !== \"0\") {\r\n            var newFontSize = 100 + Number(size) * 10 + \"%\";\r\n            $element.css(\"font-size\", newFontSize);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font Strikethrough or underline property\r\n     * @param {} $element\r\n     * @param {} textDecoration\r\n     * @returns {}\r\n     */\r\n    changeTextDecoration: function ($element, textDecoration) {\r\n        if (textDecoration === undefined) return this;\r\n        if ($element === undefined) return this;\r\n\r\n        textDecoration && $element.css(\"text-decoration\", textDecoration);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font italic style\r\n     * @param {} $element\r\n     * @param {} italic\r\n     * @returns {}\r\n     */\r\n    changeFontItalic: function ($element, italic) {\r\n        var style = bizagi.util.parseBoolean(italic) ? \"italic\" : \"normal\";\r\n\r\n        $element.css(\"font-style\", style);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font weight\r\n     * @param {} $label\r\n     * @param {} bold\r\n     * @returns {}\r\n     */\r\n    changeFontBold: function ($label, bold) {\r\n        var style = bizagi.util.parseBoolean(bold) ? \"bold\" : \"normal\";\r\n\r\n        $label.css(\"font-weight\", style);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes render background color\r\n     * @param {} color\r\n     * @returns {}\r\n     */\r\n    changeBackgroundColor: function (color) {\r\n        if (typeof color === \"undefined\") return this;\r\n\r\n        if (color !== \"none\") {\r\n            this.element.css(\"background-color\", color);\r\n        } else {\r\n            this.element.css(\"background-color\", \"\");\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * This method just make a toggle of red label indicator\r\n     * @argument {boolean} argument\r\n     */\r\n    changeRequiredLabel: function () {\r\n    },\r\n\r\n    /**\r\n     * Change cell required and attach bindings\r\n     * @param argument\r\n     */\r\n    changeCellRequired: function (argument) {\r\n        this.changeRequired(argument);\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    getRTLAlign: function (align) {\r\n        if (typeof align == \"undefined\" || align == \"\") {\r\n            return \"default\";\r\n        }\r\n        return align;\r\n    },\r\n\r\n    /**\r\n     * TODO: This override should be removed after genome, just because the align shoudnt be depend of the display type\r\n     */\r\n    getDefaultLabelAlign: function(){\r\n        return \"default\";\r\n    },\r\n\r\n    /**\r\n     * TODO: This override should be removed after genome, just because the align shoudnt be depend of the display type\r\n     */\r\n    getDefaultValueAlign: function(){\r\n        return \"default\";\r\n    }\r\n});","/**\r\n *   Name: Bizagi Form Container Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a form container class that defines basic stuff regarding the device\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.form\", {}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n        var data = params.data;\r\n        var device = bizagi.util.detectDevice();\r\n\r\n        // Creates a hashtable to maintain references by id\r\n        self.rendersById = {};\r\n        self.rendersByXpath = {};\r\n        self.rendersByXpathId = {};\r\n        self.rendersByType = {};\r\n\r\n        // Set page cache id\r\n        self.idPageCache = data.pageCacheId;\r\n\r\n        // Set default mode\r\n        self.mode = params.mode || \"execution\";\r\n        self.focus = params.focus;\r\n\r\n        // Set rendering params\r\n        self.params = params;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Define confirmation message \r\n        var message = \"\";\r\n\r\n        if (device !== \"desktop\") {\r\n            message = this.getResource(\"render-form-user-confirmation-message\").replace(/<br(\\/| \\/)>/g, \"\\n\");\r\n        } else {\r\n            message = this.getResource(\"render-form-user-confirmation-message\");\r\n        }\r\n\r\n        // Default properties\r\n        var properties = self.properties;\r\n        properties.sessionId = data.sessionId;\r\n        properties.displayAsReadOnly = bizagi.util.parseBoolean(data.displayAsReadOnly) || false;\r\n        properties.userConfirmationMessage = properties.userConfirmationMessage || message;\r\n        properties.orientation = properties.orientation || \"ltr\";\r\n        properties.hasRule = bizagi.util.parseBoolean(properties.hasRule) || false;\r\n        properties.contexttype = params.contexttype || \"\";\r\n        properties.paramsRender = params.paramsRender || {};\r\n        properties.processPath = params.data.processPath ? params.data.processPath.replaceAll(\"|/|\", \"  &rsaquo;  \") : \"\";\r\n        properties.breadCrumb = params.data.processPath ? params.data.processPath.split(\"|/|\") : [];\r\n\r\n        // Set validations & actions\r\n        this.validations = data.validations;\r\n        this.actions = data.actions;\r\n\r\n        // Enable the \"Validate and Save\" action for Form Buttons\r\n        self.allowValidateAndSaveAction = bizagi.override && bizagi.override.enableActionValidateAndSave === true;\r\n\r\n        // Initialize buttons\r\n        self.initializeButtons(data);\r\n\r\n        // Define transitions to Complex Gateway\r\n        if (data.transitions) {\r\n            self.transitions = data.transitions;\r\n        }\r\n\r\n        this.originalProcessButton = this.processButton;\r\n\r\n        //Custom behaviour for application parent activated.\r\n        self.isRoutingDisabled = false;\r\n        if (params.applicationParent) {\r\n            switch (params.applicationParent) {\r\n                case 'NEWWORKPORTAL':\r\n                    self.isRoutingDisabled = true;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        self.isOfflineFormsV2Supported = bizagi.util.isMobileDevice() && bizagi.util.isOfflineFormsV2Supported();\r\n        self.isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n    },\r\n\r\n    /*\r\n    *   Initializes button metadata\r\n    */\r\n    initializeButtons: function (data) {\r\n        var self = this;\r\n\r\n        self.buttons = [];\r\n\r\n        // Process buttons\r\n        if (data.buttons) {\r\n            $.each(data.buttons, function (i, item) {\r\n                var button = item.button.properties;\r\n\r\n                // Process caption\r\n                button.caption = !bizagi.util.isEmpty(button.caption) && self.getResource(button.caption) != button.caption ? self.getResource(button.caption) : button.caption;\r\n\r\n                // Process actions\r\n                if (button.actions) {\r\n                    $.each(button.actions, function (i, action) {\r\n                        button[action] = true;\r\n                    });\r\n                }\r\n\r\n                // Add other properties\r\n                button.ordinal = i;\r\n                button.action = button.next ? \"next\" :\r\n                    button.nextWithoutValidations ? \"nextWithoutValidations\" :\r\n                        button.submitData ? \"save\" :\r\n                            button.cancel ? \"cancel\" :\r\n                                button.back ? \"back\" :\r\n                                    button.createnewcase ? \"createnewcase\" :\r\n                                        button.validate ? \"validate\" : \"\";\r\n\r\n                // Explicit add save operation\r\n                button.save = (button.action === \"save\");\r\n\r\n                // Add inherent behaviours\r\n                if (button.next || button.back || button.nextWithoutValidations) {\r\n                    button.routing = true;\r\n                }\r\n\r\n                if (button.hasRule) {\r\n                    button.executeRule = true;\r\n                }\r\n\r\n                if (self.allowValidateAndSaveAction && button.validate) {\r\n                    button.submitData = true;\r\n                    button.refresh = true;\r\n                    button.save = true;\r\n                    if (button.action === \"next\" || button.action === \"createnewcase\") {\r\n                        button.refresh = false;\r\n                    }\r\n                }\r\n\r\n                // Prepare button style\r\n                button.style = self.buildButtonStyle(button);\r\n\r\n                // Add to button array\r\n                if (self.properties.orientation === \"rtl\" && !self.properties.useCustomButtons) {\r\n                    self.buttons.unshift(button);\r\n                } else {\r\n                    self.buttons.push(button);\r\n                }\r\n\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Get the original params used to fetch the form\r\n    */\r\n    getParams: function () {\r\n        return this.params;\r\n    },\r\n\r\n    setParam: function (property, value) {\r\n        if (this.params) {\r\n            this.params[property] = value;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Get current rendering mode\r\n    */\r\n    getMode: function () {\r\n        return this.mode;\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        var self = this;\r\n        if (self.params) {\r\n            return self.params.customHandlers;\r\n        }\r\n    },\r\n    /*\r\n    * Method to index renders\r\n    */\r\n    registerRender: function (render) {\r\n        var self = this;\r\n        var xpath = render.properties.xpath;\r\n        var id = render.properties.id;\r\n        var type = render.properties.type;\r\n        var xpathId = xpath ? xpath + \".\" + id : undefined;\r\n\r\n        self.rendersById[id] = render;\r\n        if (xpath) {\r\n            if (!self.rendersByXpath[xpath]) {\r\n                self.rendersByXpath[xpath] = [];\r\n            }\r\n            self.rendersByXpath[xpath].push(render);\r\n        }\r\n\r\n        if (xpathId) {\r\n            if (!self.rendersByXpathId[xpathId]) {\r\n                self.rendersByXpathId[xpathId] = [];\r\n            }\r\n            self.rendersByXpathId[xpathId].push(render);\r\n        }\r\n\r\n        if (!self.rendersByType[type]) {\r\n            self.rendersByType[type] = [];\r\n        }\r\n        self.rendersByType[type].push(render);\r\n    },\r\n    /*\r\n    * Method to unregister render\r\n    */\r\n    unregisterRender: function (render) {\r\n        var self = this;\r\n\r\n        if (self.rendersById[render.properties.id]) {\r\n            delete self.rendersById[render.properties.id];\r\n        }\r\n\r\n        if (render.properties.xpath) {\r\n            if ($.isArray(self.rendersByXpath[render.properties.xpath])\r\n                && self.rendersByXpath[render.properties.xpath].length > 1) {\r\n                for (var i = 0, l = self.rendersByXpath[render.properties.xpath].length; i < l; i++) {\r\n                    var element = self.rendersByXpath[render.properties.xpath][i];\r\n                    if (element.properties.id === render.properties.id) {\r\n                        self.rendersByXpath[render.properties.xpath].splice(i, 1);\r\n                        self.rendersByXpathId[render.properties.xpath + '.' + render.properties.id].splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                delete self.rendersByXpath[render.properties.xpath];\r\n            }\r\n        }\r\n\r\n        // Unregister from renders by type\r\n        if (render.properties.type) {\r\n            var listRendesByType = self.getRenderByType(render.properties.type);\r\n            var listRendesByTypeLength = listRendesByType.length;\r\n            var renderKey = render.properties.id || render.properties.xpath;\r\n\r\n            for (var i = 0; i < listRendesByTypeLength; i++) {\r\n                var listRender = listRendesByType[i];\r\n                if ((typeof listRender.properties.id != \"undefined\" && listRender.properties.id == renderKey) ||\r\n                    (typeof listRender.properties.xpath != \"undefined\" && listRender.properties.xpath == renderKey)) {\r\n                    // Unregister element\r\n                    self.rendersByType[render.properties.type].splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * Method to access a render by id\r\n    */\r\n    getRenderById: function (id) {\r\n        var self = this;\r\n\r\n        return self.rendersById[id];\r\n    },\r\n\r\n    getGridByColumn: function (id) {\r\n        var self = this;\r\n        var grids = self.getRenderByType('grid');\r\n        var i = 0, columnIndex;\r\n\r\n        for (; i < grids.length; i++) {\r\n            columnIndex = grids[i].columnsIds.indexOf(id);\r\n            if (columnIndex != -1) {\r\n                return grids[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Method to find all the renders matching an xpath inside the container\r\n    */\r\n    getRenders: function (xpath) {\r\n        var self = this;\r\n\r\n        // Remove [] filters for grid columns xpaths to fully identify the grid as the xpath target\r\n        if (xpath && xpath.indexOf)\r\n            if (xpath.indexOf(\"[\") > 0) {\r\n                xpath = xpath.substring(0, xpath.indexOf(\"[\"));\r\n            }\r\n\r\n        return self.rendersByXpathId[xpath] ?\r\n            self.rendersByXpathId[xpath] : self.rendersByXpath[xpath] ?\r\n                self.rendersByXpath[xpath] : [];\r\n    },\r\n    /**\r\n     * Get all render with the same type\r\n     */\r\n    getRenderByType: function (type) {\r\n        var self = this;\r\n\r\n        // Check that type is defined\r\n        if (typeof type == \"string\" && type.length > 0) {\r\n            // Search controls by type\r\n            return (self.rendersByType[type]) ? self.rendersByType[type] : [];\r\n        }\r\n        return [];\r\n    },\r\n\r\n    /*\r\n    *   Build the container html\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"form\");\r\n        var idCase = \"\";\r\n\r\n        // Render the form\r\n        var html = $.fasttmpl(template, {\r\n            buttons: self.buttons,\r\n            transitions: self.transitions,\r\n            uniqueId: properties.uniqueId,\r\n            helptext: properties.helpText,\r\n            mode: self.getMode(),\r\n            queryForm: self.getFormType() == \"queryForm\",\r\n            summaryForm: self.params.summaryForm || false,\r\n            globalForm: self.properties.displayAsReadOnly || false,\r\n            idCase: idCase,\r\n            displayName: self.params.displayName || idCase,\r\n            processPath: properties.processPath,\r\n            breadCrumb: properties.breadCrumb,\r\n            orientation: properties.orientation\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n    /*\r\n    *   Process the html rendering object\r\n    */\r\n    postRenderContainer: function (form) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        // Add a mode class\r\n        form.addClass(\"ui-bizagi-rendering-mode-\" + mode);\r\n\r\n        // Call base\r\n        this._super(form);\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var complexGatewayContainer;\r\n        var form = self.container;\r\n\r\n        if (form.length > 1) {\r\n            $(form).each(function () {\r\n                if ($(this).hasClass('ui-bizagi-container-complexgateway')) {\r\n                    complexGatewayContainer = this;\r\n                }\r\n            });\r\n        } else {\r\n            complexGatewayContainer = $(\".ui-bizagi-container-complexgateway\", form);\r\n        }\r\n\r\n        // activeTransitions is used to store ids of activities in Complex Gateway\r\n        self.activeTransitions = {};\r\n\r\n        // Process buttons\r\n        self.processButtons(form);\r\n\r\n        // Check for dom included event\r\n        self.bind(\"ondomincluded\", function (e, mainForm) {\r\n            // Creates validation controller after the form is ready\r\n            self.validationController = new bizagi.command.controllers.validation(self, self.validations, mainForm);\r\n            // Creates action controller after the form is ready\r\n            self.actionController = new bizagi.command.controllers.action(self, self.actions);\r\n\r\n            // Resolve this deferred to start executing DOM dependant plugins\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n        // Set events for complex gateway interface\r\n        $(complexGatewayContainer).find(\".ui-checkbox\").bind(\"click\", function () {\r\n            var checkboxLabel = $(\"label\", this);\r\n\r\n            var transitionId = checkboxLabel.data(\"value\") || \"\";\r\n            if (typeof self.activeTransitions[transitionId] == \"undefined\") {\r\n                self.activeTransitions[transitionId] = false;\r\n            }\r\n\r\n            if (bizagi.util.parseBoolean(checkboxLabel.data(\"checked\"))) {\r\n                // Uncheck element\r\n                checkboxLabel.removeClass(\"ui-checkbox-state-checked\");\r\n                checkboxLabel.removeClass(\"bz-check\").addClass(\"bz-full-ball\");\r\n                checkboxLabel.data(\"checked\", false);\r\n                self.activeTransitions[transitionId] = false;\r\n            } else {\r\n                // Check element\r\n                checkboxLabel.addClass(\"ui-checkbox-state-checked\");\r\n                checkboxLabel.addClass(\"bz-mo-icon\").addClass(\"bz-check\").removeClass(\"bz-full-ball\");\r\n                checkboxLabel.data(\"checked\", true);\r\n                self.activeTransitions[transitionId] = true;\r\n            }\r\n        });\r\n\r\n\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour when rendering in design mode\r\n    */\r\n    configureDesignView: function () {\r\n        var self = this;\r\n\r\n\r\n        // Check for dom included event\r\n        self.bind(\"ondomincluded\", function () {\r\n            // Resolve this deferred to start executing DOM dependant plugins\r\n            self.readyDeferred.resolve();\r\n        });\r\n    },\r\n    /*\r\n    *   Format form buttons to allow further customization\r\n    */\r\n    buildButtonStyle: function (button) {\r\n\r\n        var style = {};\r\n        if (button.format) {\r\n            if (button.format.size) {\r\n                if (button.format.size != \"0\") {\r\n                    var newFontSize = (100 + Number(button.format.size) * 10) + \"%\";\r\n                    style[\"font-size\"] = newFontSize + \" !important\";\r\n                }\r\n            }\r\n            if (button.format.bold) {\r\n                style[\"font-weight\"] = \"bold !important\";\r\n                if (bizagi.util.isIE()) {\r\n                    style[\"font-family\"] = \"'Open Sans', 'Helvetica Neue', Arial, Helvetica, sans-serif !important\";\r\n                }\r\n            }\r\n            if (button.format.italic) {\r\n                style[\"font-style\"] = \"italic !important\";\r\n            }\r\n            if (button.format.underline || button.format.strikethru) {\r\n                var strikethru = bizagi.util.parseBoolean(button.format.strikethru) ? \"line-through \" : \"\";\r\n                var underline = bizagi.util.parseBoolean(button.format.underline) ? \"underline \" : \"\";\r\n                style[\"text-decoration\"] = strikethru + underline + \" !important\";\r\n            }\r\n            if (button.format.background) {\r\n                style[\"background-color\"] = button.format.background + \" !important\";\r\n                style[\"background-image\"] = \"none !important\";\r\n            }\r\n            if (button.format.color) {\r\n                style[\"color\"] = button.format.color + \" !important\";\r\n            }\r\n        }\r\n\r\n        var strStyle = \"\";\r\n        for (key in style) {\r\n            strStyle += key + \":\" + style[key] + \";\";\r\n        }\r\n        return strStyle;\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    *   Returns a promise\r\n    */\r\n    render: function () {\r\n        var self = this;\r\n\r\n        // Creates a deferred, so we can check when form has been included in dom\r\n        if (!self.readyDeferred)\r\n            self.readyDeferred = new $.Deferred();\r\n\r\n        // Call base\r\n        var result = this._super();\r\n\r\n        return result;\r\n    },\r\n    /*\r\n    *   Sets a promise that the form will be included in the DOM\r\n    *   so we can apply some tedious plugins that require that\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n\r\n        return self.readyDeferred.promise();\r\n    },\r\n    /*\r\n    *   Returns the xpath context of the element\r\n    */\r\n    getXpathContext: function () {\r\n        return this.properties.xpathContext || \"\";\r\n    },\r\n    /*\r\n    *  Return context type, when the parent form is entity\r\n    */\r\n    getContextType: function () {\r\n        return this.properties.contexttype || \"\";\r\n    },\r\n\r\n    /*\r\n    * Return the endpoint action, when the form will be refresh\r\n    */\r\n    getEndPointAction: function () {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        if (properties.formtype == \"startform\")\r\n            return \"LOADSTARTFORM\";\r\n\r\n        return undefined;\r\n\r\n    },\r\n\r\n    /*\r\n    *   Returns the page cache id for the element\r\n    */\r\n    getPageCache: function () {\r\n        return this.idPageCache;\r\n    },\r\n    /*\r\n    *   Returns the form containing the element\r\n    */\r\n    getFormContainer: function () {\r\n        return this;\r\n    },\r\n    /*\r\n    *   Method to process button actions in the form\r\n    */\r\n    processButtons: function () {\r\n        var self = this;\r\n        var buttons = self.getButtons();\r\n\r\n        // Don't process buttons if they are undefined in the template\r\n        if (!buttons || buttons.length == 0) {\r\n            return;\r\n        }\r\n\r\n        // Attach a handler for each button\r\n        buttons.on(\"click\", function (e) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n\r\n            self.startLoading();\r\n\r\n            var button = $(this);\r\n            var ordinal = button.attr(\"ordinal\");\r\n            var buttonProperties = self.buttons[ordinal];\r\n\r\n            self.lastActionButton = buttonProperties;\r\n            if (buttonProperties.action === \"next\") {\r\n                buttonProperties.routingDisabled = self.isRoutingDisabled;\r\n            }\r\n\r\n            button.prop(\"disabled\", true); //disable button to prevent multiple click actions\r\n\r\n            if (button.hasOwnProperty('disabled')) {\r\n                button.button(\"disable\"); //Setting styles\r\n            }\r\n\r\n            // External Events\r\n            self.propagateExternalEvents(e);\r\n\r\n            // Execute button\r\n            //QAF-1418 - add setTimeout\r\n            setTimeout(function () {\r\n                $.when(self.processButton(buttonProperties)).always(function () {\r\n                    self.processDefer = undefined;\r\n                    self.endLoading();\r\n                    if ($.contains(document.documentElement, button.get(0))) { //check if button is still in DOM\r\n                        button.prop(\"disabled\", false);  //enable button\r\n\r\n                        if (button.hasOwnProperty('enable')) {\r\n                            button.button(\"enable\"); //Setting styles\r\n                        }\r\n                    }\r\n                });\r\n            }, 100);\r\n        });\r\n    },\r\n    /*\r\n    * Execute codes just before sending information to server\r\n    */\r\n    preProcessButton: function (buttonProperties) {\r\n        return true;\r\n    },\r\n    /*\r\n    * Execute codes just after sending information to server\r\n    */\r\n    postProcessButton: function (responses, buttonProperties) {\r\n        return true; // true means continue\r\n    },\r\n\r\n    setLoaderDeferred: function () {\r\n        var self = this;\r\n\r\n        self.loaderDeferred = $.Deferred().resolve();\r\n    },\r\n\r\n    deleteLoaderDeferred: function () {\r\n        var self = this;\r\n\r\n        if (self.isLoaderDeferredSet()) {\r\n            $.when(self.loaderDeferred.promise()).done(function () {\r\n                delete self.loaderDeferred;\r\n            }).fail(function () {\r\n                delete self.loaderDeferred;\r\n            });\r\n        }\r\n    },\r\n\r\n    useOrSetLoaderDeferred: function () {\r\n        var self = this;\r\n\r\n        if (!self.isLoaderDeferredSet()) {\r\n            self.setLoaderDeferred();\r\n        }\r\n    },\r\n\r\n    getLoaderPromise: function () {\r\n        var self = this;\r\n\r\n        if (self.isLoaderDeferredSet()) {\r\n            return self.loaderDeferred.promise();\r\n        } else {\r\n            return;\r\n        }\r\n    },\r\n\r\n    isLoaderDeferredSet: function () {\r\n        var self = this;\r\n\r\n        if (self.loaderDeferred) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    appendWaitForLoader: function (params) {\r\n        var self = this;\r\n        var promise = params.promise;\r\n        var create = params.create || false;\r\n\r\n        if (!self.isLoaderDeferredSet()) {\r\n            if (create) {\r\n                self.setLoaderDeferred();\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n\r\n        self.loaderDeferred = self.loaderDeferred.then(function () {\r\n            return (function () {\r\n                return promise;\r\n            })();\r\n        });\r\n    },\r\n\r\n    getResolveOrReject: function () {\r\n        var self = this;\r\n        var deferred = $.Deferred();\r\n\r\n        if (self.isLoaderDeferredSet()) {\r\n            $.when(self.loaderDeferred.promise()).done(function () {\r\n                deferred.resolve();\r\n            }).fail(function () {\r\n                deferred.resolve();\r\n            });\r\n        } else {\r\n            deferred.resolve();\r\n        }\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n\r\n    /*\r\n    *   Executes a single button action\r\n    */\r\n    processButton: function (buttonProperties) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n        var properties = self.properties;\r\n        if (!buttonProperties.routing) {\r\n            bizagi.chrono.initAndStart(\"submitForm\");\r\n        }\r\n        bizagi.chrono.init(\"waiting\");\r\n\r\n        // First hide and clear validation box\r\n        self.validationController.clearValidationMessages();\r\n\r\n        // Resolve asynchronous tabItems\r\n        var form = self.getFormContainer();\r\n        var getAllTabs = form.getRenderByType(\"tabItem\");\r\n        var getAllTabsLength = getAllTabs.length;\r\n\r\n        form.innerTabsLoading = true;\r\n\r\n        self.useOrSetLoaderDeferred();\r\n\r\n        // Check\r\n        for (var i = 0; i < getAllTabsLength; i++) {\r\n            var render = getAllTabs[i];\r\n            // Resolve internal deferred\r\n            if (render.loadingDeferred && render.parent.container) {\r\n                render.loadingDeferred.resolve();\r\n            }\r\n        }\r\n\r\n        delete form.innerTabsLoading;\r\n\r\n        $.when(self.ready(), self.getResolveOrReject()).done(function () {\r\n            self.deleteLoaderDeferred();\r\n            // Validate the form\r\n            var valid = bizagi.util.parseBoolean(buttonProperties.validate) ? self.validationController.performValidations() : true;\r\n            if (valid) {\r\n\r\n                if ([\"save\", \"next\", \"back\", \"createnewcase\", \"nextWithoutValidations\"].includes(buttonProperties.action)) {\r\n                    $(document).data('auto-save', '');\r\n                }\r\n\r\n                // Check for user confirmation if configured and the button is configured to enroute\r\n                if (bizagi.util.parseBoolean(self.properties.needsUserConfirmation) && bizagi.util.parseBoolean(buttonProperties.routing)) {\r\n                    self.endLoading();\r\n                    $.when(bizagi.showConfirmationBox(properties.userConfirmationMessage, null, false)).done(function () {\r\n                        // Submits the form\r\n                        if (self.preProcessButton(buttonProperties)) {\r\n                            //Trigger the event after ProcessButton\r\n                            self.triggerGlobalHandler(\"renderActionButton\", buttonProperties);\r\n                            $.when(self.submitForm(buttonProperties)).done(function () {\r\n                                defer.resolve();\r\n                            }).fail(function () {\r\n                                defer.reject(arguments);\r\n                            });\r\n                        }\r\n                    }).fail(function () {\r\n                        defer.reject();\r\n                    });\r\n\r\n                } else {\r\n                    if (self.preProcessButton(buttonProperties)) {\r\n                        //Trigger the event after ProcessButton\r\n                        self.triggerGlobalHandler(\"renderActionButton\", buttonProperties);\r\n                        $.when(self.submitForm(buttonProperties)).done(function () {\r\n                            $(document).trigger(\"FORMACTION\", buttonProperties);\r\n                            defer.resolve();\r\n                        }).fail(function () {\r\n                            defer.reject(arguments);\r\n                        });\r\n                    }\r\n                }\r\n\r\n            } else {\r\n\r\n                self.endLoading();\r\n                if (buttonProperties.submitData) {\r\n                    $.when(self.submitData()).done(function () {\r\n                        defer.reject();\r\n                    });\r\n                } else {\r\n                    defer.reject();\r\n                }\r\n\r\n                self.validationController.expandNotificationBox();\r\n            }\r\n\r\n            var customHandler = self.getCustomHandler(\"afterFormButtonClick\");\r\n            if (customHandler) {\r\n                customHandler(buttonProperties);\r\n            }\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n    /*\r\n    *   Public method to perform validations externally\r\n    */\r\n    validateForm: function () {\r\n        var self = this;\r\n\r\n        // First hide and clear validation box\r\n        self.validationController.clearValidationMessages();\r\n\r\n        // Validate the form\r\n        return self.validationController.performValidations();\r\n    },\r\n    /*\r\n    *   Submits all the form to the server and returns a deferred to check when the process finishes\r\n    */\r\n    saveForm: function () {\r\n        var self = this;\r\n\r\n        // Avoid the execution of server actions for mobile offline\r\n        if(bizagi.util.isNativeMobileDevice() && !this.allowOnlineActions()){\r\n            return $.when(function() {\r\n                return null;\r\n            });\r\n        }\r\n\r\n        // Check is offline form        \r\n        var isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n\r\n        // Collect data\r\n        var data = self.collectRenderValuesForSubmit();\r\n\r\n        // Check if there are deferreds to wait\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        // Wait for deferreds\r\n        return $.when(deferredsToWait).pipe(function () {\r\n            self.startLoading();\r\n            \r\n            var saveParams = {\r\n                action: \"SAVE\",\r\n                data: data,\r\n                idCase: self.params.idCase,\r\n                idWorkitem: self.params.idWorkitem,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                isOfflineForm: isOfflineForm || false\r\n            };\r\n\r\n            if (isOfflineForm){\r\n                saveParams.offlineType = self.params.offlineType;\r\n            }\r\n\r\n            // Submit the form\r\n            return $.when(self.dataService.submitData(saveParams))\r\n            .always(function () {\r\n                self.endLoading();\r\n            });\r\n        });\r\n    },\r\n    /*\r\n    *   Creates a json array with key values to send to the server\r\n    */\r\n    submitForm: function (buttonProperties) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n\r\n        // Check is offline form                \r\n        var isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n\r\n        $.when(self.isReadyToSave())\r\n            .done(function () {\r\n                if (isOfflineForm) {\r\n                    self.internalSubmitFormOffline(buttonProperties);\r\n                    return;\r\n                }\r\n                $.when(self.internalSubmitForm(buttonProperties)).done(function () {\r\n                    defer.resolve();\r\n                }).fail(function () {\r\n                    defer.reject(arguments);\r\n                });\r\n\r\n            }).fail(function () {\r\n            self.endLoading();\r\n            bizagi.log(\"The form is not saved, no changes were found\");\r\n            defer.reject();\r\n        });\r\n        return defer.promise();\r\n    },\r\n    checkWidgetsData: function () {\r\n        //\r\n    },\r\n    isComplexGatewayPainted: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Get last action button\r\n     * @returns {*}\r\n     */\r\n    getLastActionButton: function () {\r\n        return this.lastActionButton;\r\n    },\r\n\r\n    /**\r\n     * Internal - Creates a json array with key values to send to the database\r\n     * @param {} buttonProperties\r\n     * @returns {}\r\n     */\r\n    internalSubmitFormOffline: function (buttonProperties) {\r\n        var self = this;\r\n        var message = \"\";\r\n        var data;\r\n\r\n        // Check is offline form                \r\n        var isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n\r\n        if (isOfflineForm && (self.properties && !self.properties.idPageCache)) {\r\n            self.properties.idPageCache = \"\";\r\n        }\r\n\r\n        // Fill data hash\r\n        if (buttonProperties.submitData || buttonProperties.executeRule) {\r\n            // Collect data\r\n            data = self.collectRenderValuesForSubmit();\r\n        }\r\n\r\n        if (self.transitions) {\r\n            var transitions = [];\r\n            $.each(this.activeTransitions, function (key, value) {\r\n                (value) ? transitions.push(key) : \"\";\r\n            });\r\n\r\n            if (bizagi.util.countProps(transitions) == 0) {\r\n                bizagi.showMessageBox(\r\n                    bizagi.localization.getResource(\"render-widget-complexgateway-path\"),\r\n                    bizagi.localization.getResource(\"render-widget-complexgateway-error\"), \"info\", false\r\n                );\r\n                self.endLoading();\r\n                return \"\";\r\n            }\r\n        }\r\n\r\n        $.when(self.dataService.submitData({\r\n            action: buttonProperties.action,\r\n            data: data,\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache,\r\n            idForm: self.properties.id,\r\n            prepare: true,\r\n            transitions: transitions || \"\",\r\n            idCase: self.params.idCase,\r\n            idWorkitem: self.params.idWorkitem,\r\n            isOfflineForm: isOfflineForm || false,\r\n            offlineType: self.params.offlineType || \"\"\r\n        })).done(function (responses) {\r\n\r\n            if (!self.postProcessButton(responses, buttonProperties)) {\r\n                return;\r\n            }\r\n\r\n            //Offline action stored\r\n            var isSaveForDraft = self.params.offlineType !== \"task\" && buttonProperties.action === \"save\";\r\n            if (self.online && self.isOfflineFormsV2Supported && !isSaveForDraft) {\r\n                bizagi.loading.start();\r\n                var tryPushResponsePromise = new $.Deferred();\r\n                self.params.responsePromise = tryPushResponsePromise;\r\n                $(document).trigger(\"tryPushCase.offline\", self.params);\r\n            }\r\n            //Backward comp\r\n            if (!self.isOfflineFormsV2Supported) {\r\n                $(document).trigger(\"tryPushData.offline\");\r\n            }\r\n\r\n\r\n            $.when(tryPushResponsePromise)\r\n                .then(function (result) {\r\n                    bizagi.loading.stop();\r\n                    if (buttonProperties.routing) {\r\n                        if (!self.online && self.isOfflineFormsV2Supported) {\r\n                            self.triggerHandler(\"routing\", {\r\n                                offlineAction: buttonProperties.action,\r\n                                idCase: self.params.idCase,\r\n                                idWorkitem: self.params.idWorkitem\r\n                            });\r\n                        } else {\r\n                            self.triggerHandler(\"routing\", {\r\n                                idCase: result.IdCase,\r\n                                caseNumber: result.CaseNumber\r\n                            });\r\n                        }\r\n                    } else {\r\n                        if(self.online && isSaveForDraft){\r\n                            bizagi.util.recreateNativeButtons(self);\r\n                        }\r\n                        message = bizagi.util.isValidResource(\"workportal-mobile-offline-form-successful\")\r\n                            ? bizagi.localization.getResource(\"workportal-mobile-offline-form-successful\")\r\n                            : \"Saved\";\r\n\r\n                        bizagi.util.showNotification({text: message, type: \"success\"});\r\n                    }\r\n                })\r\n                .fail(function (error) {\r\n                    bizagi.loading.stop();\r\n                    bizagi.util.recreateNativeButtons(self);\r\n                    if ($.isArray(error)) {\r\n                        var responses = error;\r\n                        var bHasValidations;\r\n                        var alertMessage = \"\";\r\n                        $.each(responses, function (i, response) {\r\n                            var propertiesToDisplayMessages = self.validationToDisplayMessages(bHasValidations, response.result.type, response.result.messages, alertMessage);\r\n                            bHasValidations = propertiesToDisplayMessages.bHasValidations;\r\n                            alertMessage = propertiesToDisplayMessages.alertMessage;\r\n                        });\r\n                        if (bHasValidations && alertMessage !== \"\") {\r\n                            bizagi.modalError.show(alertMessage, 'workportal-general-word-information', false);\r\n                        }\r\n                    }\r\n                    self.failHandler(error);\r\n                });\r\n\r\n        }).fail(function (error) {\r\n            message = bizagi.util.isValidResource(\"workportal-mobile-offline-successful-fail\")\r\n                ? bizagi.localization.getResource(\"workportal-mobile-offline-successful-fail\")\r\n                : \"Not saved\";\r\n\r\n            bizagi.util.showNotification({text: message, type: \"error\"});\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Internal - Creates a json array with key values to send to the server\r\n    */\r\n    internalSubmitForm: function (buttonProperties) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n        var data = {};\r\n\r\n        // Fill data hash\r\n        if (buttonProperties.submitData || buttonProperties.executeRule || buttonProperties.createnewcase || buttonProperties.back) {\r\n            // Collect data\r\n            data = self.collectRenderValuesForSubmit();\r\n        }\r\n\r\n        // Start asynchronous operation\r\n        $.when(self.startLoading()).done(function () {\r\n            $('html, body').animate({scrollTop: $('.ui-bizagi-loading-icon')}, 'slow');\r\n        });\r\n\r\n        var submitDataAction = null;\r\n        var executeButtonAction = null;\r\n        var performAction = null;\r\n        var checkpointAction = null;\r\n        var commitAction = null;\r\n        var waitingDeferreds = [];\r\n        var deferredsToWait = null;\r\n\r\n        // Prepare actions\r\n        if (buttonProperties.executeRule) {  // When the button has to execute any rule (MUST SUBMIT DATA BEFORE ALWAYS)\r\n\r\n            if (data.deferreds) {\r\n                deferredsToWait = $.when.apply($, data.deferreds);\r\n                waitingDeferreds.push(deferredsToWait);\r\n                delete data.deferreds;\r\n            }\r\n\r\n            submitDataAction = self.dataService.submitData({\r\n                action: \"SUBMITDATA\",\r\n                data: data,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true\r\n            });\r\n            submitDataAction.tag = \"submitData\";\r\n\r\n            checkpointAction = self.prepareCheckpointAction(buttonProperties.id);\r\n\r\n            // Reset data because when an execute rule operation has been performed, it saved already all the data\r\n            data = {};\r\n            executeButtonAction = self.dataService.executeButton({\r\n                idRender: buttonProperties.id,\r\n                xpathContext: self.properties.xpathContext || \"\",\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true\r\n            });\r\n            executeButtonAction.tag = \"executeRule\";\r\n\r\n            commitAction = self.prepareCommitAction(buttonProperties.id);\r\n        }\r\n\r\n        if (buttonProperties.next || buttonProperties.back || buttonProperties.save || buttonProperties.createnewcase || buttonProperties.nextWithoutValidations) {\r\n            // Verify transitions\r\n            if (self.transitions) {\r\n                var transitions = [];\r\n                $.each(this.activeTransitions, function (key, value) {\r\n                    (value) ? transitions.push(key) : \"\";\r\n                });\r\n\r\n                if (bizagi.util.countProps(transitions) == 0) {\r\n                    bizagi.showMessageBox(bizagi.localization.getResource(\"render-widget-complexgateway-path\"), bizagi\r\n                        .localization.getResource(\"render-widget-complexgateway-error\"), \"info\", false);\r\n                    self.endLoading();\r\n                    defer.reject();\r\n                    return defer.promise();\r\n                }\r\n            }\r\n\r\n            if (data && data.deferreds) {\r\n                deferredsToWait = $.when.apply($, data.deferreds);\r\n                waitingDeferreds.push(deferredsToWait);\r\n                delete data.deferreds;\r\n            }\r\n\r\n\r\n            performAction = self.dataService.submitData({\r\n                action: self.getButtonAction(buttonProperties.action),\r\n                forcePlanCompletion: buttonProperties.forcePlanCompletion,\r\n                data: data,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true,\r\n                transitions: transitions || \"\",\r\n                contexttype: self.properties.contextType,\r\n                surrogatekey: self.properties.surrogateKey\r\n            });\r\n            performAction.tag = \"performAction\";\r\n        }\r\n\r\n        // Assemble the actions\r\n        var actions = [];\r\n\r\n        if (executeButtonAction) {\r\n            actions.push(submitDataAction);\r\n            actions.push(checkpointAction);\r\n            actions.push(executeButtonAction);\r\n            actions.push(commitAction);\r\n        }\r\n\r\n        if (performAction) {\r\n            actions.push(performAction);\r\n        }\r\n\r\n        // Execute the batch\r\n        bizagi.chrono.initAndStart(\"submitForm-ajax\");\r\n\r\n\r\n        //Evaluate if there are deferreds to evaluate, like inline add in grid, that must send a ADDRELATIONWITHDATA before to savedata\r\n        var flowControlDeferred = new $.Deferred();\r\n        if (data && data.deferreds) {\r\n            $.when.apply(this, data.deferreds)\r\n                .done(function (response) {\r\n                    flowControlDeferred.resolve(response);\r\n                })\r\n                .fail(function () {\r\n                    flowControlDeferred.reject();\r\n                    console.log(\"Error: It was not possible resolve async actions on form \")\r\n                })\r\n        } else {\r\n            flowControlDeferred.resolve();\r\n        }\r\n\r\n        waitingDeferreds.push(flowControlDeferred);\r\n\r\n        $.when.apply($, waitingDeferreds).done(function () {\r\n            $.when(self.dataService.multiaction().execute({actions: actions})).done(function (responses) {\r\n                bizagi.chrono.stop(\"submitForm-ajax\");\r\n                // End asynchronous operation\r\n                self.endLoading();\r\n                // Find validations\r\n                var bHasValidations;\r\n                var alertMessage = \"\";\r\n                $.each(responses, function (i, response) {\r\n\r\n                    var propertiesToDisplayMessages = self.validationToDisplayMessages(bHasValidations, response.result.type, response.result.messages, alertMessage);\r\n                    bHasValidations = propertiesToDisplayMessages.bHasValidations;\r\n                    alertMessage = propertiesToDisplayMessages.alertMessage;\r\n\r\n                });\r\n\r\n                if (!bHasValidations) {\r\n                    // Everything went ok .. succesfully response from the server\r\n                    if (!self.postProcessButton(responses, buttonProperties)) {\r\n                        return;\r\n                    }\r\n\r\n                    // After successfully response refresh the form\r\n                    if (buttonProperties.refresh) {\r\n                        self.refreshForm();\r\n                    }\r\n\r\n                    // If needs routing publish an event\r\n                    if (buttonProperties.routing) {\r\n                        bizagi.jqxhrList.abortAll(\"rendering_\" + self.dataService.guid);\r\n                        self.triggerHandler(\"routing\", {\r\n                            idCase: self.params.idCase,\r\n                            routingDisabled: buttonProperties.routingDisabled\r\n                        });\r\n                    }\r\n\r\n                    // Create case\r\n                    if (buttonProperties.createnewcase) {\r\n                        if (responses.length > 0) {\r\n                            bizagi.jqxhrList.abortAll(\"rendering_\" + self.dataService.guid);\r\n                            self.triggerHandler(\"routing\", {\r\n                                idCase: responses[0].result.IdCase,\r\n                                caseNumber: responses[0].result.CaseNumber\r\n                            });\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (alertMessage !== \"\") { /*If there is an alertMessage show in a modal error*/\r\n                        bizagi.modalError.show(alertMessage, 'workportal-general-word-information', false);\r\n                    }\r\n                    if (buttonProperties.executeRule) {\r\n                        self.sendRollbackAction(buttonProperties.id);\r\n                    }\r\n                }\r\n\r\n                defer.resolve();\r\n            }).fail(function (_, _, response) {\r\n                if (buttonProperties.executeRule) {\r\n                    self.sendRollbackAction(buttonProperties.id);\r\n                }\r\n\r\n                if (response && response.error && (response.error.errorType === \"WaitForCompletionPlanException\" ||\r\n                    response.error.errorType === \"InvalidPlanStateException\" || response.error.errorType === \"CustomMessageException\")) {\r\n                    self.endLoading();\r\n                    $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(response.error.message), null, false)).then(function () {\r\n                        return $.when(self.internalSubmitForm($.extend({}, buttonProperties, {forcePlanCompletion: true})));\r\n                    }).done(function () {\r\n                        defer.resolve();\r\n                    }).fail(function () {\r\n                        defer.reject();\r\n                    });\r\n                } else {\r\n                    self.failHandler(response);\r\n                    defer.reject(response);\r\n                }\r\n            });\r\n        });\r\n        return defer.promise();\r\n    },\r\n    validationToDisplayMessages: function (bHasValidations, messageType, message, alertMessage) {\r\n        var self = this;\r\n\r\n        if (messageType == \"validationMessages\") {\r\n            // Something went wrong, we gotta display messages in notifications grid\r\n            self.addValidationMessage(message);\r\n            bHasValidations = true;\r\n        }\r\n        if (bizagi.detectDevice() == \"desktop\" && messageType == \"alertMessages\") {\r\n            // Something went wrong, we gotta display alert message\r\n            if (alertMessage === \"\") {\r\n                alertMessage = message;\r\n            } else {\r\n                alertMessage = alertMessage + \"\\n\\n\" + message;\r\n            }\r\n\r\n            bHasValidations = true;\r\n        }\r\n\r\n        return {\"bHasValidations\": bHasValidations, \"alertMessage\": alertMessage};\r\n    },\r\n\r\n    /*\r\n    *   Add a validation message to the form\r\n    */\r\n    addValidationMessage: function (validationMessage, focus, icon, itemAdditionalClass, autofocus, type) {\r\n        var self = this;\r\n\r\n        // Clean messages for mobile offline\r\n        if (bizagi.util.isNativeMobileDevice() && !this.allowOnlineActions())\r\n            this.clearValidationMessages();\r\n\r\n        if (!self.validationController) {\r\n            self.validationController = new bizagi.command.controllers.validation(self);\r\n        }\r\n\r\n        if (typeof (validationMessage) == \"string\") {\r\n            self.validationController.showValidationMessage(validationMessage, focus, icon, itemAdditionalClass, type);\r\n        } else {\r\n            $.each(validationMessage, function (i, message) {\r\n                self.validationController.showValidationMessage(message, focus, icon, itemAdditionalClass, type);\r\n            });\r\n        }\r\n        self.validationController.expandNotificationBox(autofocus);\r\n    },\r\n    /*\r\n    *   Public method to perform validations externally\r\n    */\r\n    clearValidationMessages: function (params) {\r\n        var self = this;\r\n\r\n        // First hide and clear validation box\r\n        if (self.validationController) {\r\n            self.validationController.clearValidationMessages(params);\r\n        }\r\n\r\n    },\r\n    /*\r\n    *   Add an error message to the form\r\n    */\r\n    addErrorMessage: function (errorMessage) {\r\n        var self = this;\r\n\r\n        // Clean messages for mobile offline\r\n        if (bizagi.util.isNativeMobileDevice() && !this.allowOnlineActions())\r\n            this.clearValidationMessages();\r\n\r\n        self.validationController.showErrorMessage(errorMessage);\r\n        self.validationController.expandNotificationBox();\r\n    },\r\n    /*\r\n    *   Refresh the current form\r\n    */\r\n    refreshForm: function (focus) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var deferred = $.Deferred();\r\n\r\n        focus = focus || self.getFocus();\r\n\r\n        // Normalize new focus structure if not present\r\n        if (focus && !focus.id) {\r\n            focus = {\r\n                id: focus\r\n            };\r\n        }\r\n\r\n        var options = {\r\n            idCase: self.params.idCase || \"\",\r\n            idWorkitem: self.params.idWorkitem || \"\",\r\n            idTask: self.params.idTask || \"\",\r\n            focus: focus,\r\n            selectedTabs: self.getSelectedTabs(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            isRefresh: true,\r\n            contextType: self.getContextType() || \"\",\r\n            action: self.getEndPointAction(),\r\n            idStartScope: self.properties.idStartScope || \"\"\r\n        };\r\n\r\n        // Notify the refresh event so the consumer takes the decision about what to do\r\n        self.startLoading();\r\n        $.when(self.triggerHandler(\"refresh\", options)).done(function () {\r\n            self.endLoading();\r\n            deferred.resolve();\r\n        }).fail(function () {\r\n            self.endLoading();\r\n            deferred.reject();\r\n        });\r\n        return deferred.promise();\r\n    },\r\n    /*\r\n    *   Get opened tabs configuration\r\n    */\r\n    getSelectedTabs: function () {\r\n        var self = this;\r\n        var tabContainers = self.getElementsByType(\"tab\");\r\n        var tabs = $.map(tabContainers, function (tabContainer) {\r\n            return {tab: tabContainer.properties.id, selected: tabContainer.activeTab};\r\n        });\r\n        var selectedTabs = {};\r\n        for (var i = 0, length = tabs.length; i < length; i++) {\r\n            selectedTabs[tabs[i].tab] = tabs[i].selected;\r\n        }\r\n        return selectedTabs;\r\n    },\r\n    /*\r\n    *   Template method to get the buttons objects\r\n    */\r\n    getButtons: function () {\r\n    },\r\n    /*\r\n    *   Adds an action on the fly to process the submit on change\r\n    */\r\n    addSubmitAction: function (xpath, action) {\r\n        var self = this;\r\n        self.actionController.processInternalSubmitAction(xpath, action);\r\n    },\r\n    /**\r\n     *   Adds an overlay to the form, and sets a waiting message\r\n     *\r\n     *   @argument {bool} delay Apply delay\r\n     */\r\n    startLoading: function () {\r\n        var self = this;\r\n        var waitingTemplate = self.renderFactory.getTemplate(\"form-waiting\");\r\n\r\n        if (self.waitingOverlay && self.waitingMessage)\r\n            return;\r\n\r\n        // This hack is only for desktop\r\n        if (!bizagi.util.isTabletDevice()) {\r\n            // Detect canvas parent with scroll\r\n            var isSharePoint = self.params.context === \"sharepoint\";\r\n            var canvas = self.params.canvas;\r\n            if (isSharePoint) {\r\n                canvas = bizagi.util.scrollTop(canvas);\r\n\r\n                if (!!!canvas.context) {\r\n                    canvas = $(\"body\", $(document));\r\n                }\r\n            } else {\r\n                canvas = $(\"body\", $(document));\r\n            }\r\n\r\n            // Configures overlay\r\n            var size = this.getSize();\r\n            var position = this.getOffset();\r\n            if (size.height == $(window).height()) {\r\n                position.top = 0;\r\n            }\r\n            self.waitingOverlay = $('<div class=\"ui-widget-overlay\" />').appendTo(canvas);\r\n            self.waitingMessage = $.tmpl(waitingTemplate).appendTo(canvas);\r\n            self.waitingOverlay.css({\r\n                \"height\": \"100%\",\r\n                \"width\": \"100%\",\r\n                \"min-height\": size.height,\r\n                \"min-width\": size.width\r\n            });\r\n            self.waitingMessage.css({\r\n                \"top\": (position.top + Math.ceil((size.height - self.waitingMessage.outerHeight()) / 2)) + \"px\",\r\n                \"left\": (Math.ceil((size.width - self.waitingMessage.outerWidth()) / 2)) + \"px\"\r\n            });\r\n            canvas.css(\"position\", \"relative\");\r\n\r\n        } else {\r\n            // Configures overlay\r\n            self.waitingOverlay = $('<div class=\"ui-widget-overlay\" />').appendTo(\"body\", $(document));\r\n            self.waitingMessage = $.tmpl(waitingTemplate).appendTo(\"body\", $(document));\r\n        }\r\n    },\r\n    /*\r\n    *   Removes the overlay and restores the form edition\r\n    */\r\n    endLoading: function () {\r\n        var self = this;\r\n        if (self.waitingOverlay && self.waitingMessage) {\r\n            self.waitingOverlay.remove();\r\n            self.waitingMessage.remove();\r\n            self.waitingOverlay = null;\r\n            self.waitingMessage = null;\r\n\r\n            var canvas = self.params.canvas;\r\n\r\n            if (canvas != undefined)\r\n                canvas.css(\"position\", \"\");\r\n        }\r\n    },\r\n    /*\r\n    *   Get the focused render in the current request\r\n    */\r\n    getFocusedElement: function () {\r\n        var self = this;\r\n        return self.focus;\r\n    },\r\n    /*\r\n    *   Set the focused render in the current request\r\n    */\r\n    setFocusedElement: function (focus) {\r\n        var self = this;\r\n        self.focus = focus;\r\n    },\r\n    /*\r\n    *   Publish a global event that the facade will replicate\r\n    */\r\n    triggerGlobalHandler: function (eventType, data) {\r\n        return this.triggerHandler(\"globalHandler\", {eventType: eventType, data: data});\r\n    },\r\n    /*\r\n    *   Generic handler to attach fail workflow for some operations\r\n    */\r\n    failHandler: function (error) {\r\n        var self = this;\r\n\r\n        // Check if the error is in multiaction format\r\n        try {\r\n            error = JSON.parse(error);\r\n        } catch (e) {\r\n        }\r\n\r\n        //This double validation has the purpose to get the real error object from two different levels ( error.error or error.error.error )\r\n        if (error & error.length && error.length > 1) error = error[0];\r\n        if (error.error) error = error.error;\r\n        if (error.error) error = error.error;\r\n\r\n        // Handle normal messages\r\n        if (typeof error == \"object\" && error.message) {\r\n            if (error.errorType === \"WaitForCompletionPlanException\" || error.errorType === \"InvalidPlanStateException\" || error.errorType === \"CustomMessageException\") {\r\n                error = bizagi.localization.getResource(error.message);\r\n            } else {\r\n                error = error.message;\r\n            }\r\n\r\n        } else if (typeof error == \"string\") {\r\n            // Parse to json\r\n            try {\r\n                var errorJson = JSON.parse(error);\r\n                if (errorJson.errorType === \"WaitForCompletionPlanException\" || errorJson.errorType === \"InvalidPlanStateException\" || error.errorType === \"CustomMessageException\") {\r\n                    errorJson.message = bizagi.localization.getResource(errorJson.message);\r\n                }\r\n                error = errorJson.message;\r\n            } catch (e) {\r\n            }\r\n        }\r\n\r\n        // Workflow engine error, we gotta show it with error\r\n        self.addErrorMessage(error);\r\n        self.endLoading();\r\n    },\r\n    /* \r\n    *   Resizes the element\r\n    */\r\n    resize: function (size) {\r\n        // Just save the size, for reference\r\n        this.setSize(size);\r\n    },\r\n    /*\r\n    *   Sets the internal size for the form\r\n    */\r\n    setSize: function (size) {\r\n        this.size = size;\r\n    },\r\n    /*\r\n    *   Gets the internal size for the form\r\n    */\r\n    getSize: function () {\r\n        if (this.size) {\r\n            return this.size;\r\n        }\r\n        var canvas = (this.params.canvas) ? this.params.canvas : this.getFormContainer().container;\r\n\r\n        var canvasWidth = canvas.width();\r\n        var canvasHeight = canvas.height();\r\n\r\n        return {\r\n            width: canvasWidth,\r\n            height: canvasHeight\r\n        };\r\n    },\r\n    getOffset: function () {\r\n        var canvas = this.getFormContainer().container;\r\n\r\n        return canvas.offset();\r\n    },\r\n\r\n    /**\r\n     * This function execute action to save all data of render, but\r\n     * the server service dont execute any rule on the server\r\n     */\r\n    submitData: function (args) {\r\n        var self = this;\r\n\r\n        // Avoid the execution of server actions for mobile offline\r\n        if (bizagi.util.isNativeMobileDevice() && !this.allowOnlineActions())\r\n            return;\r\n\r\n        // Collect data\r\n        var data = self.collectRenderValuesForSubmit();\r\n\r\n        // Check is offline form        \r\n        var isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n        if (isOfflineForm && (self.properties && !self.properties.idPageCache)) {\r\n            self.properties.idPageCache = \"\";\r\n        }\r\n\r\n        // Mark data collected as original values\r\n        $.each(data, function (key, value) {\r\n            var renders = self.getRenders(key);\r\n            $.each(renders, function (i, render) {\r\n                render.updateOriginalValue();\r\n            });\r\n        });\r\n\r\n        // Don't do anything if there is no data\r\n        if ($.isEmptyObject(data)) {\r\n            return;\r\n        }\r\n\r\n        // Call the service\r\n        if (isOfflineForm) {\r\n            return $.when(self.dataService.submitData({\r\n                action: \"save\",\r\n                data: data,\r\n                xpathContext: self.properties.xpathContext,\r\n                contexttype: self.properties.contexttype || \"\",\r\n                isOfflineForm: isOfflineForm,\r\n                offlineType: self.params.offlineType,\r\n                idCase: self.params.idCase,\r\n                idWorkitem: self.params.idWorkitem\r\n            })).fail(function (message) {\r\n                message = self.processFailMessage(message);\r\n            });\r\n        } else {\r\n            return $.when(self.dataService.multiaction().submitData({\r\n                action: \"SUBMITDATA\",\r\n                data: data,\r\n                idPageCache: self.properties.idPageCache,\r\n                xpathContext: self.properties.xpathContext,\r\n                contexttype: self.properties.contexttype || \"\"\r\n            })).fail(function (message) {\r\n                message = self.processFailMessage(message);\r\n            });\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * This function send a request to the server to execute a rule\r\n     */\r\n    executeRule: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n        var deferred = $.Deferred();\r\n\r\n        // Concat inheritance context\r\n        if (properties.xpathContext !== \"\") {\r\n            xpathContext = (xpathContext !== \"\") ? properties.xpathContext + \".\" + xpathContext : properties.xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        $.when(self.dataService.multiaction().executeRule({\r\n            idPageCache: properties.idPageCache,\r\n            rule: args.rule,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            var type = message && message.type ? message.type : \"\";\r\n            var form = self.getFormContainer();\r\n\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages({clearOnlyServer: true});\r\n\r\n            if ([\"validationMessages\", \"alertMessages\"].includes(type)) {\r\n                if (type === \"alertMessages\") {\r\n                    bizagi.modalError && bizagi.modalError.show(message.messages.join(\"\\n\\n\"), 'workportal-general-word-information', false);\r\n                } else {\r\n                    form.addValidationMessage.apply(self, [message.messages, undefined, undefined, undefined, false, \"serverMessage\"]);\r\n                }\r\n\r\n                deferred.reject(message);\r\n            } else {\r\n                deferred.resolve(message);\r\n            }\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n            deferred.reject(message);\r\n        });\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    /**\r\n     * This function send a request to the server to execute an interface\r\n     */\r\n    executeInterface: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties.xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeInterface({\r\n            idPageCache: properties.idPageCache,\r\n            interface: args.interface,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages();\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage(message.messages);\r\n            }\r\n\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n    },\r\n    executeSAPConnector: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties.xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeSAPConnector({\r\n            idPageCache: properties.idPageCache,\r\n            guidsap: args.guidsap,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages();\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage(message.messages);\r\n            }\r\n\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n\r\n    },\r\n\r\n    executeConnector: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties\r\n                .xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeConnector({\r\n            idPageCache: properties.idPageCache,\r\n            guidConnector: args.guidConnector,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages();\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage(message.messages);\r\n            }\r\n\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n\r\n    },\r\n\r\n    /*\r\n    *   Re-binds pending actions that could not be set because the renders did not exist when the form loaded\r\n    */\r\n    refreshActions: function (actions) {\r\n        var self = this;\r\n        self.actionController.refreshActions(actions);\r\n    },\r\n\r\n    /***/\r\n    tryToExecuteFunction: function(xpath){\r\n        if (this.getMode() == \"execution\"){\r\n            this.actionController && this.actionController.tryToExecuteFunction(xpath);\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Re-binds pending actions that could not be set because the renders did not exist when the form loaded\r\n    */\r\n    removeActions: function () {\r\n        var self = this;\r\n        self.actionController.unbindActions();\r\n    },\r\n    /*\r\n    *   Iterate through all renders and collect the data to send, then update original values for each render\r\n    */\r\n    collectRenderValuesForSubmit: function (data) {\r\n        var self = this;\r\n        data = data || {};\r\n\r\n        // Collect data\r\n        self.collectRenderValues(data);\r\n\r\n        // Mark data collected as original values\r\n        $.each(data, function (key, value) {\r\n            var renders = self.getRenders(key);\r\n            $.each(renders, function (i, render) {\r\n                render.updateOriginalValue();\r\n            });\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param params {data, bRefreshForm,properties}\r\n     * @returns {*}\r\n     */\r\n    internalSubmitOnChange: function (params) {\r\n        params = params || {};\r\n        var self = this;\r\n        var properties = params.properties;\r\n        var defer = new $.Deferred();\r\n        var data = params.data || {};\r\n        var bRefreshForm = typeof (params.bRefreshForm) != \"undefined\" ? params.bRefreshForm : true;\r\n        var notCollect = params.notCollect ? params.notCollect : undefined;\r\n\r\n        // Collect data\r\n        if (!(notCollect && !$.isEmptyObject(data))) {\r\n            self.collectRenderValuesForSubmit(data);\r\n        }\r\n\r\n        self.startLoading();\r\n\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        $.when(deferredsToWait).then(function () {\r\n            // Submit the form\r\n            self.dataService.multiaction().submitData({\r\n                action: \"SUBMITONCHANGE\",\r\n                data: data,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: properties.idPageCache,\r\n                contexttype: properties.contexttype\r\n            }).done(function (response) {\r\n                // Cancel previous multiactions and process property value\r\n                self.cancelPreviousRequest();\r\n                // After successfully response refresh the form\r\n                self.endLoading();\r\n                // If response message has error in validation, do not refresh the form\r\n                // and show validation message\r\n                if (response && response.type == \"validationMessages\") {\r\n                    if (typeof self.clearValidationMessages == \"function\") {\r\n                        self.clearValidationMessages();\r\n                    }\r\n\r\n                    self.addValidationMessage(response.messages);\r\n                    defer.resolve();\r\n                } else if (bRefreshForm) {\r\n                    var focusIdentifier = {\r\n                        id: properties.id,\r\n                        xpath: properties.xpath\r\n                    };\r\n                    if (properties.idCase !== undefined) {\r\n                        $.extend(focusIdentifier, {\r\n                            idCaseObject: bizagi.cache.idCaseObject\r\n                        });\r\n                    }\r\n                    if (response.IdScope) {\r\n                        self.properties.idStartScope = response.IdScope;\r\n                    }\r\n                    $.when(self.refreshForm(focusIdentifier)).done(function () {\r\n                        defer.resolve();\r\n                    }).fail(function () {\r\n                        defer.resolve();\r\n                    });\r\n                } else {\r\n                    defer.resolve();\r\n                }\r\n            }).fail(function (message) {\r\n                self.endLoading();\r\n                var objMessage = typeof message == 'object' ? message.responseText ? JSON.parse(message.responseText) : message : {};\r\n                var strMessage = objMessage.message || message;\r\n                // Clear previous validations\r\n                self.validationController.clearValidationMessages();\r\n                if (objMessage.type == \"alert\") {\r\n                    self.validationController.showAlertMessage(strMessage);\r\n                } else {\r\n                    self.validationController.showErrorMessage(strMessage);\r\n                }\r\n                defer.resolve();\r\n            });\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    cancelPreviousRequest: function () {\r\n        if (bizagi.multiactionConnection && bizagi.multiactionConnection.length) {\r\n            var length = bizagi.multiactionConnection.length;\r\n            var i = 0, connection;\r\n            for (; i < length; i++) {\r\n                connection = bizagi.multiactionConnection.pop();\r\n                if (connection && connection.abort) {\r\n                    bizagi.showErrorAlertDialog = false;\r\n                    connection.abort();\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    prepareCheckpointAction: function (buttonId) {\r\n        var self = this;\r\n\r\n        var checkpointAction = self.dataService.sendCheckpoint({\r\n            url: self.properties.checkpointUrl,\r\n            idRender: buttonId,\r\n            xpath: \"\",\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache,\r\n            prepare: true\r\n        });\r\n\r\n        checkpointAction.tag = \"checkpoint\";\r\n\r\n        return checkpointAction;\r\n    },\r\n\r\n    prepareCommitAction: function (buttonId) {\r\n        var self = this;\r\n\r\n        var commitAction = self.dataService.commitLinkForm({\r\n            url: self.properties.commitUrl,\r\n            idRender: buttonId,\r\n            xpath: \"\",\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache,\r\n            prepare: true\r\n        });\r\n\r\n        commitAction.tag = \"commit\";\r\n\r\n        return commitAction;\r\n    },\r\n\r\n    sendRollbackAction: function (buttonId) {\r\n        var self = this;\r\n\r\n        self.dataService.rollbackLinkForm({\r\n            url: self.properties.rollbackUrl,\r\n            idRender: buttonId,\r\n            xpath: \"\",\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache\r\n        });\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n        self.endLoading();\r\n\r\n        setTimeout(function () {\r\n            if (self.params) {\r\n                delete self.params.canvas;\r\n            }\r\n            delete self.params;\r\n            delete self.control;\r\n            if (self.validationController) {\r\n                self.unbind(\"rendervalidate\");\r\n                delete self.validationController;\r\n            }\r\n\r\n            if (self.actionController) {\r\n                self.actionController.unbindActions();\r\n                delete self.actionController;\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    },\r\n    getButton: function (guid) {\r\n        return $(\".ui-bizagi-button[data-id='\" + guid + \"']\", this.container);\r\n    },\r\n\r\n    getFloatingButton: function (guid) {\r\n        return $(\"li[data-id='\" + guid + \"']\", this.container);\r\n    },\r\n\r\n    propagateExternalEvents: function (evt) {\r\n        // Menu-Overflow\r\n        var $menuOverflow = $(\".bz-overflow-menu\");\r\n        if ($menuOverflow)\r\n            $(document).trigger('click.overflow');\r\n\r\n        // ECM with preview image\r\n        var zoomIsOpen = $(\".jquery-image-zoom\") && $(\".jquery-image-zoom\").css(\"display\") == \"block\";\r\n\r\n        if (zoomIsOpen)\r\n            $(\"div.jquery-image-zoom a\").click();\r\n    },\r\n\r\n    getButtonAction: function (action) {\r\n        return this.allowValidateAndSaveAction && action === \"validate\" ? \"save\" : action;\r\n    },\r\n\r\n    /**\r\n     * Add handlers to network management\r\n     */\r\n    configureNetworkHandlers: function () {\r\n        var self = this;\r\n        self.online = bizagi.util.isConnected();\r\n        if(self.isOfflineForm && (bizagi.util.isMobileDevice() && (\"\" + BIZAGI_ENVIRONMENT).toLowerCase() === \"debug\")){\r\n            self.online = false;\r\n        }\r\n\r\n        // Update the online status based on connectivity\r\n        if (bizagi.util.isNativeMobileDevice() || (bizagi.util.isMobileDevice() && (\"\" + BIZAGI_ENVIRONMENT).toLowerCase() === \"debug\")) {\r\n            $(document).off(\"online.form\");\r\n            $(document).on(\"online.form\", this.handleConnectionChange.bind(self));\r\n\r\n            $(document).off(\"offline.form\");\r\n            $(document).on(\"offline.form\", this.handleConnectionChange.bind(self));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Event handler\r\n     * @param event\r\n     */\r\n    handleConnectionChange: function (event) {\r\n        var form = this.getFormContainer();\r\n        if (bizagi.util.isMobileDevice() && (\"\" + BIZAGI_ENVIRONMENT).toLowerCase() === \"debug\"){\r\n            this.online = event.type === \"online\";\r\n        }\r\n        else{\r\n            this.online = bizagi.util.isConnected();\r\n        }\r\n\r\n        // You lost connection.\r\n        if (event.type === \"offline\") {\r\n            form.triggerHandler(\"offlineForm\");\r\n        }\r\n\r\n        // You are now back online.\r\n        if (event.type === \"online\") {\r\n            form.triggerHandler(\"onlineForm\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if allow to call the button actions\r\n     * @returns {boolean|*}\r\n     */\r\n    allowOnlineActions: function () {\r\n        if (typeof (this.online) === \"undefined\") return true;\r\n        return this.online || (!this.online && this.isOfflineForm);\r\n    }\r\n\r\n});\r\n","/**\r\n * Render a new type of form called template\r\n *\r\n * @author Edward Morales\r\n */\r\n$.Class.extend(\"bizagi.rendering.formTemplate\", {\r\n\r\n    /**\r\n     *   Constructor\r\n     */\r\n    init: function (params) {\r\n        this._super(params);\r\n        if(params.paramsRender && params.paramsRender.contextEvent){\r\n            self.contextEvent = params.paramsRender.contextEvent;\r\n        }\r\n    },\r\n\r\n\t/**\r\n\t * Process controls on template\r\n\t * @param template\r\n\t * @param controls\r\n\t * @return {*}\r\n\t */\r\n\tprocessTemplate: function(template, controls) {\r\n\t    var regexControl = /\\{\\{([\\w:]*)\\s*(\\{[\"':,-\\[\\]\\w\\s]*\\})\\}\\}/g;\r\n\t\tvar regexRepeater = /\\{\\{(((repeater)\\s*(\\{[\"':,-\\[\\]\\w\\s]*\\}))|([\\/repeater]+:item)|(\\/repeater)|(repeater)|(separator))\\}\\}/g;\r\n\r\n\t\t// Remove all repeaters key words\r\n\t\tvar processedTemplate = template.replace(regexRepeater, \"\");\r\n\r\n\t\t// replace controls\r\n\t\tprocessedTemplate = processedTemplate.replace(regexControl, function(match, g1, g2, offset, string) {\r\n\t\t    var parameters = JSON.parse(g2);\r\n            \r\n\t\t\treturn controls[parameters.id] || '';\r\n\t\t});\r\n\r\n\t    processedTemplate = processedTemplate.replace(/{{([\\w:]*)\\s*}}/g, function() {\r\n\t        return '';\r\n\t    });\r\n\r\n\r\n\t\treturn processedTemplate;\r\n\t},\r\n\r\n\t/**\r\n\t * Render layout container\r\n\t * @return {*}\r\n\t */\r\n\trenderContainer: function() {\r\n\t\tvar self = this;\r\n\t\tvar layoutCollection = self.getRenderByType(\"layout\");\r\n\t\tvar layout = (layoutCollection.length > 0) ? layoutCollection[0] : {};\r\n\t\tvar template = (typeof layout.getTemplate == \"function\") ? layout.getTemplate() : \"\";\r\n\t\tvar css = (typeof layout.getCss == \"function\") ? layout.getCss() : \"\";\r\n\t\tvar mode = self.getMode();\r\n\t\tvar layoutGuid = self.properties.layoutguid || Math.guid();\r\n\r\n\t\tvar controls = {};\r\n\r\n\t\t/**\r\n\t\t * Render all elements within first layout container\r\n\t\t */\r\n\t\tif(layout.children) {\r\n\t\t\t$.each(layout.children, function(i, child) {\r\n\t\t\t    // ignore layoutPlaceholder control in execution\r\n\t\t\t    if (!(mode == 'execution' && child.properties.type == 'layoutPlaceholder')) {\r\n\r\n\t\t\t        var type = child.getElementType();\r\n\t\t\t        if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n\t\t\t            controls[child.properties.id] = child.renderElement();\r\n\t\t\t        }\r\n\t\t\t        if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n\t\t\t            controls[child.properties.id] = child.renderContainerHtml();\r\n\t\t\t        }\r\n\t\t\t        self.childrenHash[child.properties.uniqueId] = child;\r\n\t\t\t    }\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Load css\r\n\t\tbizagi.util.loadStyle(css, layoutGuid);\r\n\r\n\t\treturn self.processTemplate(template, controls);\r\n\t},\r\n\r\n    /**\r\n     * Get the context in which loads the formTemplate\r\n     *\r\n     */\r\n    getContextEvent: function(){\r\n        return self.contextEvent;\r\n    }\r\n});\r\n","$.Class.extend(\"bizagi.rendering.layout\", {}, {\r\n\r\n\t/**\r\n\t * Get html template\r\n\t * @return {*}\r\n\t */\r\n\tgetTemplate: function() {\r\n\t    var self = this;\r\n\t    var mode = self.getMode();\r\n\t    var html = self.properties.html || \"\";\r\n\r\n        // Add a container, this is important in design to calculate the scroll \r\n\t    if (mode == 'design' && html) {\r\n            html = \"<div class='bz-design-template'>\" + html + \"</div>\"\r\n\t    }\r\n\t\t\r\n\t\treturn bizagi.util.stripslashes(html);\r\n\t},\r\n\r\n\t/**\r\n\t * Get string css of layout container\r\n\t * @return {*}\r\n\t */\r\n\tgetCss: function() {\r\n\t    var self = this;\r\n\t\tvar css = self.properties.css || \"\";\r\n\r\n\t\tvar mode = self.getMode();\r\n\t\tif (mode == \"design\") {\r\n\t\t    css = css && css.desktop;\r\n\t\t}\r\n\r\n\t\treturn bizagi.util.stripslashes(css);\r\n\t},\r\n\r\n\r\n\t/*\r\n\t *   Template method to process each jquery object\r\n\t *   must be overriden in each container\r\n\t */\r\n\tpostRenderContainer: function(container) {\r\n\t\tvar self = this;\r\n\t\tvar mode = self.getMode();\r\n\r\n\t\t// Resolve rendering deferred\r\n\t\tif(self.renderingDeferred)\r\n\t\t\tself.renderingDeferred.resolve();\r\n\r\n\t\t// Process children elements\r\n\t\tself.container = container;\r\n\t\tself.executeChildrenPostRender(container);\r\n\r\n\t\tif(mode == \"execution\") {\r\n\t\t\t// Apply handlers\r\n\t\t\tself.configureHandlers();\r\n\t\t}\r\n\t\tif(mode == \"design\") {\r\n\t\t\t// Configure view\r\n\t\t\tself.configureDesignView();\r\n\t\t}\r\n\t\tif(mode == \"layout\") {\r\n\t\t\t// Configure view\r\n\t\t\tself.configureDesignView();\r\n\t\t\tself.configureLayoutView();\r\n\t\t}\r\n\t}\r\n});","/*\r\n*   Name: BizAgi Accordion Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a accordion container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.accordion\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Enumerate the children appending a property\r\n        $.each(self.children, function (i, child) {\r\n            child.properties.ordinal = i;\r\n        });\r\n    },\r\n\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"accordion\");\r\n\r\n        // Render the accordion\r\n        var html = $.fasttmpl(template, {\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Accordion Item Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a accordion item class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.accordionItem\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"accordionItem\");\r\n\r\n        // Render the accordionItem\r\n        var html = $.fasttmpl(template, {\r\n            id: properties.id,\r\n            ordinal: properties.ordinal,\r\n            displayName: properties.displayName,\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Fires when the accordionItem is selected \r\n    */\r\n    activate: function () {\r\n        var self = this;\r\n        self.active = true;\r\n    },\r\n\r\n    /*  \r\n    *   Return the current focuses container\r\n    */\r\n    getFocus: function () {\r\n        var self = this;\r\n        var focus = self._super();\r\n        if (bizagi.util.isEmpty(focus) && self.active) {\r\n            focus = self.properties.id;\r\n        }\r\n\r\n        return focus;\r\n    }\r\n\r\n\r\n});\r\n\r\n","/*\r\n*   Name: Bizagi Render CollectionNavigator\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define basic stuff for collection navigator renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.collectionnavigator\", {}, {\r\n\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        self._super(params);\r\n\r\n        var properties = self.properties;\r\n        properties.allowAdd = (typeof properties.allowAdd != \"undefined\") ? bizagi.util.parseBoolean(properties.allowAdd) : true;\r\n        properties.withAddForm = properties.withAddForm && properties.allowAdd;\r\n        properties.allowEdit = (typeof properties.allowEdit != \"undefined\") ? bizagi.util.parseBoolean(properties.allowEdit) : true;\r\n        properties.withEditForm = properties.withEditForm && properties.allowEdit;\r\n        properties.allowDetail = (typeof properties.allowDetail != \"undefined\") ? bizagi.util.parseBoolean(properties.allowDetail) : false;\r\n        properties.inlineAdd = (typeof properties.inlineAdd != \"undefined\") ? bizagi.util.parseBoolean(properties.inlineAdd) : true;\r\n        properties.inlineAdd = properties.inlineAdd && properties.allowAdd;\r\n        properties.inlineEdit = (typeof properties.inlineEdit != \"undefined\") ? bizagi.util.parseBoolean(properties.inlineEdit) : true;\r\n        properties.inlineEdit = properties.inlineEdit && properties.allowEdit;\r\n        properties.allowDelete = (typeof properties.allowDelete != \"undefined\") ? bizagi.util.parseBoolean(properties.allowDelete) : true;\r\n\r\n        self.orientation = self.properties.orientation || \"ltr\",\r\n        self.data = self.properties.data;\r\n        self.keys = self.data ? self.getKeys(self.data.rows) : [];\r\n        self.pointer = 0;\r\n        self.totalRows = 0;\r\n        self.inlineAddRecords = [];\r\n\r\n        if (self.data) {\r\n            self.totalRows = self.data.rows.length;\r\n        }\r\n    },\r\n    /*\r\n    * Normalize keys\r\n    */\r\n    getKeys: function (rows) {\r\n        rows = rows || [];\r\n        var keys = [];\r\n\r\n        for (var i = 0, l = rows.length; i < l; i++) {\r\n            var row = rows[i];\r\n            keys.push(row[0]);\r\n        }\r\n        return keys;\r\n    },\r\n\r\n    /*\r\n    *   Render the control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var templateItem = \"collectionnavigator\";\r\n        var template = self.renderFactory.getTemplate(templateItem);\r\n        var mode = self.getMode();\r\n\r\n        // Render the container\r\n        var html = $.fasttmpl(template, {\r\n            uniqueId: properties.uniqueId,\r\n            displayName: properties.displayName ? properties.displayName : \"\",\r\n            id: properties.id,\r\n            guid: properties.guid,\r\n            showPreview: self.showPreview(),\r\n            mode: mode,\r\n            orientation: self.getFormContainer().properties.orientation\r\n        });\r\n\r\n        html = self.drawControls(html);\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    * Render version readonly of control\r\n    */\r\n    renderReadOnly: function () {        \r\n        return this.renderControl();\r\n    },\r\n\r\n    /*\r\n    * Draw navigation controls\r\n    */\r\n    drawControls: function (html) {\r\n\r\n    },\r\n\r\n    /*\r\n    *  render several actions in the navigation palete\r\n    *  ex. save, cancel \r\n    */\r\n    drawActions: function (controls) {\r\n\r\n    },\r\n\r\n    /*\r\n    * Render navigation controls (next, previous, last, first. etc )\r\n    */\r\n    drawControl: function (controls) {\r\n\r\n    },\r\n\r\n    /*\r\n    * Draw forms options (add form, edit form, navigation form)\r\n    */\r\n    drawForms: function (controls) {\r\n\r\n    },\r\n\r\n    /*\r\n    * Draw a preview views, it will be show when the collection hasn't records\r\n    */\r\n    drawPreview: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var templateItem = (mode === \"execution\") ? \"collectionnavigator-execution\" : \"collectionnavigator-preview\";\r\n        var template = self.renderFactory.getTemplate(templateItem);\r\n        var html = $.tmpl(template);\r\n\r\n        self.canvas.append(html);\r\n\r\n    },\r\n\r\n    /*\r\n    * Returns true if the collection has data\r\n    */\r\n    hasData: function () {        \r\n        return this.getTotalRows() > 0;\r\n    },\r\n\r\n    /*\r\n    * Returns the key of current row\r\n    */\r\n    getRow: function () {        \r\n        return this.keys[this.pointer];\r\n    },\r\n\r\n    /*\r\n    * Returns the key of next row\r\n    */\r\n    getNextRow: function () {\r\n        var self = this;\r\n\r\n        if (self.getTotalRows() > (self.pointer + 1))\r\n            self.pointer += 1;\r\n\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the key of previous row\r\n    */\r\n    getPreviousRow: function() {\r\n        var self = this;\r\n\r\n        if (self.pointer > 0)\r\n            self.pointer -= 1;\r\n\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the key of first row\r\n    */\r\n    getFirstRow: function () {\r\n        var self = this;\r\n\r\n        self.pointer = 0;\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the key of last row\r\n    */\r\n    getLastRow: function () {\r\n        var self = this;\r\n\r\n        self.pointer = self.keys.length - 1;\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the total numbers of rows in collection\r\n    */\r\n    getTotalRows: function () {        \r\n        return this.keys.length;\r\n    },\r\n\r\n    getIndexes: function () {        \r\n        return this.properties.data.rows;\r\n    },\r\n\r\n    /*\r\n    * Sets the pointer to a specific position\r\n    */\r\n    setPointer: function (index) {        \r\n        this.pointer = index - 1;\r\n    },\r\n\r\n    /*\r\n    * Returns true is there is a inline row pending to save\r\n    */\r\n    isTherePendingInlineRow: function() {\r\n        return this.inlineAddRecords.length > 0;\r\n    },\r\n\r\n    /*\r\n    * Adds new row to collection\r\n    */\r\n    addKey: function (newId) {        \r\n        this.keys.push(newId);\r\n    },\r\n\r\n    /*\r\n    * Removes row in collection\r\n    */\r\n    removeKey: function () {\r\n        var self = this;\r\n        var index = self.pointer;\r\n\r\n        if (index >= 0) {\r\n            self.keys.splice(index, 1);\r\n\r\n            var totalRows = self.getTotalRows();\r\n            if (totalRows > 0 && index >= totalRows) {\r\n                self.setPointer(totalRows);\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Returns true if the control should show the preview view\r\n    * ex. if the collection is empty \r\n    */\r\n    showPreview: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var properties = self.properties;\r\n\r\n        if (mode == \"execution\") {\r\n            return !self.hasData();\r\n        } else {\r\n            return !bizagi.util.parseBoolean(properties.navigationform);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Returns the parameters needed for the request\r\n    */\r\n    getParameters: function (params) {\r\n        var self = this;\r\n\r\n        var parameters = {};\r\n        var properties = self.properties;\r\n        var recordXpath = properties.xpath + \"[id=\" + params.id + \"]\";\r\n\r\n        parameters.idRender = properties.id;\r\n        parameters.recordXPath = recordXpath;\r\n        parameters.xpathContext = properties.xpathContext;\r\n        parameters.idPageCache = properties.idPageCache;\r\n        parameters.requestedForm = params.requestedForm;\r\n        parameters.contextType = properties.contextType || properties.contexttype;\r\n        parameters.url = params.url;\r\n        parameters.editable = params.editable;\r\n        orientation: properties.orientation || \"ltr\";\r\n\r\n\r\n        return parameters;\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection navigator add record request\r\n    *   Returns a deferred when done, the server returns an id for the new record\r\n    */\r\n    submitAddRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var request = self.dataService.addGridRecord({\r\n            url: properties.addUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType || properties.contexttype,\r\n            idPageCache: properties.idPageCache,\r\n            orientation: properties.orientation || \"ltr\"\r\n        });\r\n\r\n        var filterResponse = request.pipe(function (data) {\r\n            // Parses response\r\n            return data.idEntity;\r\n        });\r\n\r\n        return filterResponse.promise();\r\n    },\r\n\r\n    /*\r\n    *   Submits a edit record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitEditRequest: function (id) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        return self.dataService.editGridRecord({\r\n            url: properties.editUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType || properties.contexttype || '',\r\n            orientation: properties.orientation || \"ltr\"\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection delete record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitDeleteRequest: function (id) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        return self.dataService.deleteGridRecord({\r\n            url: properties.deleteUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType || properties.contexttype\r\n        }).pipe(function (data) {\r\n            if (data.type == \"validationMessages\") {\r\n                var form = self.getFormContainer();\r\n                var message = data.messages.join(\" \");\r\n                form.failHandler({ message: message });\r\n            }\r\n\r\n            return data;\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection navigator edit record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitSaveRequest: function (id, data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = $.Deferred();\r\n\r\n        // Calculate xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + properties.xpath + \"[id=\" + id + \"]\" : properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        $.when(deferredsToWait).then(function() {\r\n\r\n            self.dataService.saveGridRecord({\r\n                url: properties.saveUrl,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: xpathContext,\r\n                contexttype: properties.contextType || properties.contexttype || \"\",\r\n                submitData: data\r\n            }).done(function(response) {\r\n                defer.resolve(response);\r\n            }).fail(function (dataFail) {\r\n                var form = self.getFormContainer();\r\n                var message = (dataFail.responseText) ? dataFail.responseText : ((typeof dataFail == \"string\") ? dataFail : dataFail.toString());\r\n                //Convert String to object\r\n                if (typeof message == \"string\") {\r\n                    try {\r\n                        message = JSON.parse(message).message;\r\n                    } catch (e) {\r\n                        message = message.match(/\"message\":(.*)\",/)[0];\r\n                        message = message.substr(11, message.length - 13);\r\n                    }\r\n    \r\n                } else if (!message.message) {\r\n                    message = dataFail;\r\n                }\r\n                form.validateForm();\r\n                form.clearValidationMessages();\r\n                form.addValidationMessage(message);\r\n            });\r\n\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection navigator rollback request\r\n    *   Returns a deferred when done\r\n    */\r\n    submitRollbackRequest: function (error) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.rollbackGridAction({\r\n            url: properties.rollbackUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: error.idPageCache,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        });\r\n    },\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set params\r\n        params = params || {};\r\n        $.extend(params, {\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType || properties.contexttype,\r\n            idPageCache: properties.idPageCache\r\n\r\n        });\r\n\r\n        return self.dataService.getData(params);\r\n    },\r\n\r\n    isValid: function (invalidElements) {\r\n        var form = this.form;\r\n\r\n        if (typeof (form) !== \"undefined\") {\r\n            (form.children || []).forEach(function (child) {\r\n                if (child.properties.visible) {\r\n                    if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                        // Go though container\r\n                        child.isValid(invalidElements);\r\n\r\n                    } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                        // Go to the render\r\n                        if (!child.isValid(invalidElements)) {\r\n                            var content = invalidElements[invalidElements.length - 1];\r\n                            invalidElements[invalidElements.length - 1] = $.extend(content, {\r\n                                id: child.properties.id\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        return invalidElements.length === 0;\r\n    },\r\n\r\n    validateControls: function(invalidElements) {\r\n        if (!this.form) return false;\r\n        return this.form.validationController.performValidations(invalidElements);\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Group Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a group container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.group\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Default properties\r\n        var properties = self.properties;\r\n\r\n        properties.helpText = properties.helpText || properties.displayName;\r\n\r\n        // Extend css property \r\n        properties.cssclass = properties.cssclass || \"cssClassContainer\";\r\n\r\n        properties.collapse = (typeof properties.collapse != \"undefined\" && bizagi.util.parseBoolean(properties.collapse)) ? true : false;\r\n    },\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"group\");\r\n\r\n        // Define icons\r\n        self.expandedIcon = self.getExpandedIcon();\r\n        self.collapsedIcon = self.getCollapsedIcon();\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            expandedClassIcon: self.expandedIcon,\r\n            displayName: properties.displayName,\r\n            editable: properties.editable,\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            collapse: properties.collapse,\r\n            isDesign: (self.getMode() !== \"execution\"),            \r\n            messageValidation: properties.messageValidation,\r\n            cssclass: properties.cssclass,\r\n            guid: properties.guid\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Returns the expanded icon\r\n    */\r\n    getExpandedIcon: function () { },\r\n\r\n    /*\r\n    *   Returns the collapsed icon\r\n    */\r\n    getCollapsedIcon: function () { },\r\n\r\n    /* \r\n    *   Expands or collapse the container \r\n    */\r\n    toogleContainer: function (argument, bImmediate) { }\r\n\r\n});","/*\r\n*   Name: BizAgi Horizontal Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a tab item class for all devices\r\n*/\r\n\r\n\r\n$.Class.extend(\"bizagi.rendering.horizontal\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"horizontal\");\r\n\r\n        // Render the container\r\n        var html = $.fasttmpl(template, {\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Panel Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a panel container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.panel\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function(params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Override properties\r\n        var properties = self.properties;\r\n        properties.displayName = properties.displayName || \"\";\r\n    },\r\n\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function() {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"panel\");\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            displayName: properties.displayName,\r\n            loading: properties.loading,\r\n            message: properties.message,\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            cssClass: properties.cssclass\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Process the html rendering object\r\n    */\r\n    postRenderContainer: function(panel) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set height\r\n        if (properties.height) {\r\n            panel.height(properties.height);\r\n        }\r\n\r\n        // Call base\r\n        self._super(panel);\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Panel Container Class\r\n*   Author: David Romero\r\n*   Comments:\r\n*   -   This script will define a panel container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.contentPanel\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Override properties\r\n        var properties = self.properties;\r\n        properties.displayName = properties.displayName || \"\";\r\n    },\r\n\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"contentPanel\");\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            displayName: properties.displayName,\r\n            mode: self.getMode(),\r\n            uniqueId: properties.uniqueId,\r\n            isDesign: self.getMode() === \"design\",\r\n            messageValidation: properties.messageValidation,\r\n            cssClass: properties.cssclass,\r\n            guid: properties.guid\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Process the html rendering object\r\n    */\r\n    postRenderContainer: function (panel) {\r\n        // Call base\r\n        this._super(panel);\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Panel Container Class\r\n *   Author: Bizagi UI Forms\r\n *   Comments:\r\n *   -   This script will define a panel container class for all devices\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.searchForm\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"searchForm\");\r\n\r\n        if (properties.contexttype !== \"entity\" && self.parent) {\r\n            properties.contexttype = (typeof self.parent.getContextType == 'function') ? self.parent.getContextType() : \"\";\r\n        }\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            displayName: properties.displayName,\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n\r\n        // Render result\r\n        html = html.replaceFirstWithoutPatterns(\"{{result}}\", self.renderResult());\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Perform a search and render the results\r\n    */\r\n    performSearch: function (searchParams) {\r\n        var properties = this.properties;\r\n\r\n        // Set parameter to search\r\n        properties.searchParams = searchParams;\r\n\r\n        // Submit the search to the server\r\n        this.submitSearch();\r\n    },\r\n\r\n    /*\r\n    *   Submits the query to the server\r\n    */\r\n    submitSearch: function () {\r\n        // Makes the results to update its contents\r\n        this.refreshResults();\r\n    },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        return this.parent.ready();\r\n    },\r\n\r\n    /*\r\n    *   Method to fill the result data\r\n    *   (THIS IS CALLED WITHIN GRID RENDER SCOPE)\r\n    */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        // Collect data\r\n        var data = self.collectSearchValues();\r\n\r\n        if (bizagi.util.isMapEmpty(data)) {\r\n            bizagi.showMessageBox(this.getResource(\"render-search-advanced-no-filters\"), this.getResource(\"render-form-dialog-box-search\"), \"error\");\r\n            return null;\r\n        }\r\n\r\n        params.rows = (properties.searchParams && properties.searchParams.maxRecords && properties.searchParams.maxRecords > 0) ? properties.searchParams.maxRecords : params.rows;\r\n\r\n        // The Grid only support one row per page in smartphone (DRAGON-41733 / QAF-3916)         \r\n        if (properties.searchParams && typeof (properties.searchParams.maxRows) !== \"undefined\") {\r\n            params.rows = properties.searchParams.maxRows || params.rows;\r\n        }\r\n\r\n        // Resolve with remote data\r\n        self.dataService.submitSearch($.extend(params, {\r\n            url: properties.dataUrl,\r\n            idRender: properties.idRender,\r\n            idPageCache: properties.idPageCache,\r\n            idSearchForm: properties.id,\r\n            allowFullSearch: (properties.searchParams.allowFullSearch ? properties.searchParams.allowFullSearch : null),\r\n            maxRecords: (properties.searchParams.maxRecords > 0 ? properties.searchParams.maxRecords : null),\r\n            criteria: data\r\n\r\n        })).done(function (response) {\r\n\r\n            // Resolve with fetched data    \r\n            properties.page = response.page;\r\n            properties.records = response.records;\r\n            properties.totalPages = response.totalPages || 0;\r\n\r\n            //In tablets are allowed about 10000 records as maximum\r\n            if (response.records > 10000) {\r\n                properties.deviceMaxRecordsExceeded = true;\r\n                response.deviceMaxRecordsExceeded = true;\r\n            } else {\r\n                delete properties.deviceMaxRecordsExceeded;\r\n            }\r\n\r\n            defer.resolve(response);\r\n\r\n            // Call virtual method\r\n            self.onSearchFinished();\r\n        }).fail(function (errorObject) {\r\n            bizagi.showErrorAlertDialog = false;\r\n            if (errorObject.responseText) {\r\n                try {\r\n                    var message = JSON.parse(errorObject.responseText).message;\r\n                    bizagi.showMessageBox(message, \"\", \"error\");\r\n                } catch (e) {\r\n                }\r\n            }\r\n            defer.reject();\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Iterate through all the renders in the container and fills the hashtable\r\n    *   - Overriden because server needs this in array\r\n    */\r\n    collectSearchValues: function () {\r\n        var self = this;\r\n\r\n        // Collect data\r\n        var data = {};\r\n        this.collectRenderValues(data);\r\n\r\n        // Changes to array\r\n        var submitArray = [];\r\n        for (key in data) {\r\n            var xpath = key;\r\n            var value = data[key];\r\n            var operation = self.getCriteriaOperation(self.getRender(xpath));\r\n            var criteriaData = {};\r\n            if (!bizagi.util.isEmpty(value)) {\r\n                criteriaData[\"xpath\"] = xpath;\r\n                criteriaData[\"value\"] = value;\r\n                criteriaData[\"operation\"] = operation;\r\n                submitArray.push(criteriaData);\r\n            }\r\n        }\r\n\r\n        return submitArray;\r\n    },\r\n\r\n    /*\r\n    *   This method find out the criterial operation to be executed according to\r\n    *   data type. Text renders use LIKE operation, but other data types such like\r\n    *   numerics use exact match operatiors\r\n    */\r\n    getCriteriaOperation: function (render) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var operation = \"EQUALS\";\r\n        if (render.properties.dataType == \"15\") {\r\n            if (typeof render.properties.typeSearch === \"undefined\" || render.properties.typeSearch === \"approx\") {\r\n                if (properties.allowFullSearch) {\r\n                    operation = \"FULLLIKE\";\r\n                } else {\r\n                    operation = \"LIKE\";\r\n                }\r\n            }\r\n        }\r\n        return operation;\r\n    },\r\n\r\n    /*\r\n    *   Render the result controls for the query\r\n    *   Resolved in each device\r\n    */\r\n    renderResult: function () {\r\n    },\r\n\r\n    /*\r\n    *   Refresh the result panel, making it to query data with current criteria\r\n    */\r\n    refreshResults: function () {\r\n    },\r\n\r\n    /*\r\n    *   Function to parse the dataType\r\n    */\r\n    parseAdditionalProperties: function (dataType) {\r\n\r\n        // Number\r\n        if (dataType == 1 || dataType == 2 || dataType == 3 ||\r\n            dataType == 4 || dataType == 6 || dataType == 7 ||\r\n            dataType == 10 || dataType == 11) {\r\n            return {type: \"columnNumber\"};\r\n        }\r\n\r\n        // Oracle Number\r\n        if (dataType == 29) {\r\n            return {type: \"columnNumberScientificNotation\"};\r\n        }\r\n\r\n        // Money\r\n        if (dataType == 8) {\r\n            return {type: \"columnMoney\"};\r\n        }\r\n\r\n        // Date\r\n        if (dataType == 12 || dataType == 13) {\r\n            return {type: \"columnDate\"};\r\n        }\r\n\r\n        // Boolean\r\n        if (dataType == 5) {\r\n            return {type: \"columnBoolean\"};\r\n        }\r\n\r\n        // Text\r\n        return {type: \"columnText\"};\r\n    },\r\n\r\n    /*\r\n    *\r\n    */\r\n    onSearchFinished: function () {\r\n        // Empty function, overrided for Tablet version for now\r\n    }\r\n\r\n\r\n});\r\n\r\n","/*\r\n *   Name: BizAgi Tab Container Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define a tab container class for all devices\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.tab\", {}, {\r\n\r\n    /*\r\n     *   Constructor\r\n     */\r\n    initializeData: function(params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Default properties\r\n        var properties = self.properties;\r\n        properties.helpText = properties.helpText || properties.displayName;\r\n\r\n        // Extend css property\r\n        properties.cssclass = properties.cssclass || \"\";\r\n    },\r\n\r\n    /*\r\n     *   Render the container layout\r\n     */\r\n    renderContainer: function() {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var tabItems = $.map(self.children, function(child, key) {\r\n            child.properties.counter = key;\r\n            child.properties.tooltip =  child.properties.tooltip || child.properties.displayName || \"\";\r\n            return child.properties;\r\n        });\r\n        var template = self.renderFactory.getTemplate(\"tab\");\r\n        var mode = self.getMode();\r\n\r\n        // Render the tab\r\n        var html = $.fasttmpl(template, {\r\n            id: properties.id,\r\n            tabs: tabItems,\r\n            mode: mode,\r\n            isDesign: (self.getMode() !== \"execution\"),\r\n            editable: properties.editable,\r\n            tabOrientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            cssclass: properties.cssclass\r\n        });\r\n\r\n        // Get active container based on focus\r\n        var activeTab = self.activeTab = self.getActiveTab();\r\n\r\n        // Render children\r\n        for (var i = 0, length = self.children.length; i < length; i++) {\r\n            // Load on demand other tabs besides the first one\r\n            self.children[i].properties.loadOnDemand = (i != activeTab);\r\n        }\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     *   Return the active tab containing the focus, or the first tab\r\n     */\r\n    getActiveTab: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var formParams = this.getFormContainer().getParams();\r\n        var mode = self.getMode();\r\n\r\n        if (mode === \"execution\") {\r\n            if (!formParams.isRefresh && properties.activeTab) {\r\n                self.getFormContainer().setFocusedElement(properties.activeTab);\r\n            }\r\n        }\r\n\r\n        var selectedTabs = formParams && formParams.selectedTabs ? formParams.selectedTabs : {};\r\n\r\n        // Fetch from selected tabs collection\r\n        if (selectedTabs[self.properties.id] >= 0) {\r\n            return selectedTabs[self.properties.id];\r\n        }\r\n\r\n        // Check for focused elements\r\n        for (var i = 0, length = self.children.length; i < length; i++) {\r\n            // Load on demand other tabs besides the first one\r\n            if (self.children[i].containsFocusedElement()) return i;\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    /**\r\n     * Update position of tab\r\n     * @param index\r\n     */\r\n    setActiveTab: function (index) {\r\n        var self = this;\r\n\r\n        self.triggerHandler(\"selected\", { index: index, tab: self.children[index] });\r\n\r\n        if (self.children[index]) {\r\n            var form = self.getFormContainer();\r\n\r\n            self.children[index].activate();\r\n            self.activeTab = index;\r\n\r\n            var selectedTab = {};\r\n            selectedTab[self.children[index].parent.properties.id] = index;\r\n            form.setParam(\"selectedTabs\", selectedTab);\r\n        }\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tab Item Container Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a tab item class for all devices\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.tabItem\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"tabItem\");\r\n\r\n        // Render the tabItem\r\n        var html = $.fasttmpl(template, {\r\n            id: properties.id,\r\n            uniqueId: properties.uniqueId,\r\n            counter: properties.counter,\r\n            tabOrientation: properties.orientation,\r\n            isDesign: (self.getMode() !== \"execution\")\r\n        });\r\n\r\n        // Render content\r\n        html = self.renderTabContent(html);\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    * Renders the tab content\r\n    */\r\n    renderTabContent: function (html) {\r\n        // Render children\r\n        return this.replaceChildrenHtml(html, this.renderChildrenHtml());\r\n    },\r\n\r\n    /*\r\n    *   Fires when the tab is selected \r\n    */\r\n    activate: function () {\r\n        this.active = true;\r\n    },\r\n\r\n    /*  \r\n    *   Return the current focuses container\r\n    */\r\n    getFocus: function () {\r\n        var self = this;\r\n        var focus = self._super();\r\n        if (bizagi.util.isEmpty(focus) && self.active) {\r\n            focus = self.properties.id;\r\n        }\r\n\r\n        return focus;\r\n    },\r\n\r\n    /*\r\n    *   Return true if this tab contains the active focused element\r\n    */\r\n    containsFocusedElement: function () {\r\n        var self = this;\r\n        var focus = self.getFormContainer().getFocusedElement();\r\n\r\n        if (focus) {\r\n\r\n            // Locate element\r\n            if (focus.xpath) {\r\n                // Search by xpath and id\r\n                var elements = self.getFormContainer().getRenders(focus.xpath);\r\n                var element;\r\n\r\n                $.each(elements, function (i, item) {\r\n                    // Just select editable control\r\n                    if (item.properties.id == focus.id && item.properties.editable) {\r\n                        element = item;\r\n                    }\r\n                });\r\n            } else {\r\n                // Search just using id\r\n                var element = self.getFormContainer().getContainer(focus) || self.getFormContainer().getRenderById(focus);\r\n            }\r\n\r\n            // Search element parent\r\n            if (element) {\r\n                while (element.parent) {\r\n                    if (element.properties.id == self.properties.id || element.parent.properties.id == self.properties.id) return true;\r\n                    element = element.parent;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n});\r\n\r\n","/*\r\n*   Name: BizAgi Nested Form Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a nested form container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.nestedForm\", {}, {\r\n\r\n});","/**\r\n *   Name: Bizagi Render Combo Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for combo renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.combo\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        properties.hasLocalData = properties.data || false;\r\n        // TODO: Review additional value in radio control\r\n        properties.value = properties.value && properties.value.length > 0 ? properties.value[0] : (properties.defaultValue && properties.defaultValue.length > 0 ? properties.defaultValue[0] : null);\r\n\r\n        if (typeof (properties.enableTyping) === \"undefined\") properties.enableTyping = true;\r\n        if (properties.value && properties.value.id === undefined) properties.value = null;\r\n        this.value = properties.value;\r\n\r\n        // Add empty node if configured\r\n        if (properties.hasLocalData) {\r\n            properties.data = this.complementData(properties.data);\r\n        }\r\n\r\n        // This line is to set a flag to fetch the data when rendering, or on demand, by default is false, overriding it on desktop implementation\r\n        properties.loadOnDemand = false;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var params = {};\r\n        var renderType = bizagi.util.normalizeType(self.properties.type);\r\n\r\n        if (self.isDependant && self.properties && /^cascadingcombo$/i.test(renderType) && self.getParentCombo) {\r\n            var valueControl = self.getParentCombo().getValue();\r\n            if (valueControl && valueControl.id) {\r\n                params[self.Class.BA_ACTION_PARAMETER_PREFIX + \"parent\"] = valueControl.id;\r\n            }\r\n        }\r\n\r\n        return self.renderCombo(params);\r\n    },\r\n\r\n    /*\r\n    *   Renders the combo\r\n    */\r\n    renderCombo: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (properties.loadOnDemand) {\r\n            // Render the combo without data\r\n            var html = self.renderComboTemplate();\r\n            return html;\r\n        } else {\r\n\r\n            // Set data promise \r\n            var defer = new $.Deferred();\r\n            var dataPromise = self.getData(params);\r\n\r\n            // Attach callback \r\n            $.when(dataPromise).done(function (data) {\r\n                // Render combo\r\n                var html = self.renderComboTemplate(data);\r\n                self.properties.data = data;\r\n                defer.resolve(html);\r\n\r\n            }).fail(function (data) {\r\n                var html = self.renderComboTemplate({});\r\n                defer.resolve(html);\r\n            });\r\n\r\n            // Returns a promise so we can hold post-render method until this is done\r\n            return defer.promise();\r\n        }\r\n    },\r\n\r\n    renderComboTemplate: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(self.getTemplateName());\r\n        var emptyValue = bizagi.override.emptyLabelForCombo || self.getResource(\"render-combo-empty-selection\");\r\n        var value = properties.value ? \"\" : emptyValue;\r\n        data = data || self.properties.data || {};\r\n\r\n        if (self.properties.type === \"columnCombo\" && value === \"\" && typeof properties.value === \"object\" && properties.value.id === \"\" && (properties.value.value === \"\" || properties.value.value === self.getResource(\"render-combo-empty-value\"))) {\r\n            value = self.getResource(\"render-combo-empty-selection\");\r\n        }\r\n\r\n        var html = $.fasttmpl(template, $.extend(self.getTemplateParams(), {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            unique: bizagi.util.randomNumber(10000, 1000000),\r\n            idPageCache: properties.idPageCache,\r\n            items: data,\r\n            align: properties.valueAlign,\r\n            value: value,\r\n            editable: properties.editable\r\n        }));\r\n\r\n\r\n        return html;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed in read-only mode\r\n    */\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n        self._super();\r\n        var item = self.getValue();\r\n        var control = self.getControl();\r\n\r\n        if (self.control && self.control.parent()) {\r\n            self.control.parent().addClass(\"ui-bizagi-noneditable-\" + self.properties.displayType);\r\n        }\r\n        if (item) {\r\n\r\n            if (item.value != null && typeof (item.value) === \"boolean\") {\r\n                if (bizagi.util.parseBoolean(item.value) === true) {\r\n                    item.value = this.getResource(\"render-boolean-yes\");\r\n\r\n                } else if (bizagi.util.parseBoolean(item.value) == false) {\r\n                    item.value = this.getResource(\"render-boolean-no\");\r\n                }\r\n            }\r\n\r\n            // Returns the cached value from the properties to avoid server side fetching\r\n            if (self.getResource(\"render-combo-empty-value\") === item.value || self.getResource(\"render-combo-empty-selection\") === item.value) {\r\n                control.text(\"\");\r\n            } else {\r\n                control.html(\"<label class='readonly-control'>\" + self.formatItem(item.value) + \"</label>\");\r\n            }\r\n        } else {\r\n            // Render empty \r\n            control.text(\"\");\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Gets the template used by the combo render\r\n    *   can be overriden in subclasses to reuse logic and just change the template\r\n    */\r\n    getTemplateName: function () {\r\n        return \"combo\";\r\n    },\r\n\r\n    /*\r\n    *   Determines if we need to show the empty node or not\r\n    *   Can be overriden to change behaviour\r\n    */\r\n    showEmpty: function () {\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Determines if we need to show the current data regardless if it belongs to data or not\r\n    *   Can be overriden to change behaviour\r\n    */\r\n    showCurrentData: function () {\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        var mode = self.getMode();\r\n        var isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n\r\n        // Just execute ajax calls when rendering in execution mode\r\n        if (mode !== \"execution\") return self.getDummyData();\r\n\r\n        if (properties.hasLocalData || isOfflineForm) {\r\n\r\n            // Resolve with local data    \r\n            defer.resolve(properties.data);\r\n\r\n        } else {\r\n            var renderType = bizagi.util.normalizeType(properties.type);\r\n\r\n            // Check if the data has been cached\r\n            if (properties.remoteDataLoaded && !(/^cascadingcombo$/i.test(renderType))) {\r\n                defer.resolve(properties.data);\r\n            } else {\r\n                // Go to server\r\n                self.dataService.multiaction().getData({\r\n                    url: properties.dataUrl,\r\n                    xpath: properties.xpath,\r\n                    idRender: properties.id,\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache,\r\n                    extra: params,\r\n                    contexttype: self.properties.contexttype || null\r\n                }).done(function (data) {\r\n\r\n                    // Resolve the data\r\n                    if (!properties.recalculate) {\r\n                        properties.remoteDataLoaded = true;\r\n                    }\r\n                    properties.data = self.complementData(data);\r\n                    defer.resolve(properties.data);\r\n\r\n                }).fail(function (data) {\r\n\r\n                    var allowActions = true;\r\n                    var form = self.getFormContainer();\r\n\r\n                    if (bizagi.util.isNativeMobileDevice() && typeof (form) !== \"undefined\")\r\n                        allowActions = form.allowOnlineActions();\r\n\r\n                    if (data.type === \"not-processed\" && allowActions)\r\n                        return;\r\n\r\n                    // Show error from server\r\n                    var msgObj = self.properties.displayName + \": \";\r\n\r\n                    if (typeof data === \"string\") {\r\n                        var auxMsg = JSON && JSON.parse(data) || $.parseJSON(data);\r\n                    } else {\r\n                        var auxMsg = data;\r\n                    }\r\n\r\n                    msgObj += auxMsg.message;\r\n\r\n                    form.addValidationMessage(msgObj);\r\n\r\n                    defer.reject(data);\r\n                });\r\n            }\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Creates a set of dummy data in order to display it when rendering in design or layout mode\r\n    */\r\n    getDummyData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (properties.data) {\r\n            return properties.data;\r\n\r\n        } else {\r\n            properties.data = [];\r\n            properties.data = self.complementData(properties.data);\r\n\r\n            // Add another data\r\n            properties.data.push({id: \"\", value: \"Item 1\"});\r\n            properties.data.push({id: \"\", value: \"Item 2\"});\r\n\r\n            return properties.data;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Resets the data in order to fetch it again when needed\r\n    */\r\n    resetData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        properties.hasLocalData = false;\r\n        properties.data = null;\r\n        properties.remoteDataLoaded = false;\r\n    },\r\n\r\n    /* \r\n    *   Gets the display value of the render\r\n    */\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n\r\n        if (self.combo && self.combo.length > 0) {\r\n            // When there is a combo painted, we fetch the selected value from it\r\n            return self.getSelectedValue();\r\n        } else {\r\n            var displayValue = \"\";\r\n            var item = self.getValue();\r\n\r\n            if (item) {\r\n                // Check on cached propert from server first if the key exists\r\n                displayValue = self.formatItem(item.value);\r\n            }\r\n\r\n            return displayValue;\r\n        }\r\n    },\r\n\r\n\r\n    /*\r\n    *   Returns the selected value in the template\r\n    */\r\n    getSelectedValue: function () {\r\n    },\r\n\r\n    /*\r\n    *   Adds custom parameters to process the template\r\n    */\r\n    getTemplateParams: function () {\r\n        return {};\r\n    },\r\n\r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n\r\n        if (value !== undefined && value !== null) {\r\n            if ($.isArray(value)) {\r\n\r\n                for (var i = 0, length = value.length; i < length; i++) {\r\n                    if (value[i] != null && typeof (value[i]) === \"boolean\") {\r\n                        if (bizagi.util.parseBoolean(value[i]) === true) {\r\n                            value[i] = this.getResource(\"render-boolean-yes\");\r\n                        } else if (bizagi.util.parseBoolean(value[i]) === false) {\r\n                            value[i] = this.getResource(\"render-boolean-no\");\r\n                        }\r\n                    }\r\n                }\r\n                return value.join(\" - \");\r\n            } else {\r\n                return value;\r\n            }\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            // Remove empty validation for value for combos        \r\n            if (!bizagi.util.isEmpty(xpath) && value !== null && typeof (value) !== \"undefined\") {\r\n                // Add a validation because sometimes value contains an empty not null object\r\n                if (typeof (value) === \"object\" && (value.id === undefined || value.id === \"\")) {\r\n                    renderValues[properties.xpath] = \"\";\r\n                } else {\r\n                    // Add the value to the server\r\n                    renderValues[properties.xpath] = typeof (value.id) !== \"undefined\" ? value.id : \"\";\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var currentValue = self.getValue();\r\n        var originalValue = properties.originalValue;\r\n        var defaultValue = properties.defaultValue;\r\n\r\n        var result = true;\r\n\r\n        if ($.forceCollectData) {\r\n            return result;\r\n        }\r\n\r\n        currentValue = currentValue && currentValue.length !== undefined ? currentValue[0] : currentValue;\r\n        originalValue = originalValue && originalValue.length !== undefined ? originalValue[0] : originalValue;\r\n        defaultValue = defaultValue && defaultValue.length !== undefined ? defaultValue[0] : defaultValue;\r\n\r\n        currentValue = currentValue && currentValue.id !== undefined ? currentValue.id : currentValue;\r\n        originalValue = originalValue && originalValue.id !== undefined ? originalValue.id : originalValue;\r\n        defaultValue = defaultValue && defaultValue.id !== undefined ? defaultValue.id : defaultValue;\r\n\r\n        if (defaultValue !== undefined) {\r\n            if (defaultValue != originalValue || defaultValue != currentValue) {\r\n                result = true;\r\n            } else {\r\n                result = false;\r\n            }\r\n        } else {\r\n            result = currentValue != originalValue ? true : false;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    * Parses additional values info in order to format them correctly\r\n    */\r\n    parseAdditionalValues: function (data) {\r\n        var self = this;\r\n\r\n        return $.map(data, function (item) {\r\n            var value = item.value ? self.formatItem(item.value) : item;\r\n            var newItem = {id: item.id, value: value};\r\n\r\n            if (item.hidden) newItem.hidden = true;\r\n            return item;\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Complement data from server before control implementation\r\n    */\r\n    complementData: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var bCurrentDataFound = false;\r\n        $.each(data, function (i, item) {\r\n\r\n            if (item.value !== undefined && item.value !== null) {\r\n                item.value = self.formatItem(item.value);\r\n                if (properties.value) {\r\n                    if (item.id == properties.value.id) {\r\n                        bCurrentDataFound = true;\r\n                    }\r\n                }\r\n            } else {\r\n                item.value = \"\";\r\n            }\r\n        });\r\n\r\n        // Add empty node if configured\r\n        if (self.showEmpty()) {\r\n            var emptyFound = false;\r\n            for (var i = 0, length = data.length; i < length; i++) {\r\n                if (data[i].id === \"\") {\r\n                    emptyFound = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!emptyFound) {\r\n                var dataValue = bizagi.override.emptyLabelForCombo || bizagi.localization.getResource(\"render-combo-empty-value\")\r\n                data.unshift({id: \"\", value: dataValue});\r\n            }\r\n        }\r\n\r\n        if (properties.value) {\r\n            if (!bCurrentDataFound && self.showCurrentData()) {\r\n                data.unshift({id: properties.value.id, value: properties.value.value, hidden: true});\r\n            }\r\n        }\r\n\r\n        // Add additional value\r\n        return self.parseAdditionalValues(data);\r\n    },\r\n\r\n    /*\r\n    *   Check if a render has no value for required validation\r\n    */\r\n    hasValue: function () {\r\n        var self = this;\r\n        var currentValue = self.getValue();\r\n\r\n        if (bizagi.util.isEmpty(currentValue)) return false;\r\n        if (Object.prototype.toString.apply(currentValue) === \"[object Object]\" && (bizagi.util.isEmpty(currentValue.id) || currentValue.id == 0)) return false;\r\n\r\n        // Else\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    * Cleans current data\r\n    */\r\n    cleanData: function () {\r\n        var self = this;\r\n        var value = {id: \"\", label: \"\"};\r\n\r\n        self.setDisplayValue(value);\r\n        self.setValue(value, false);\r\n    },\r\n\r\n    beforeToRefresh: function () {\r\n        this.column && !this.column.comboData && this.getData();\r\n    },\r\n\r\n    isExtraItem: function () {\r\n        var self = this;\r\n        var data = self.value || {};\r\n        var value = data.value || \"\";\r\n\r\n        return value === \"\" || value === self.getResource(\"render-combo-empty-selection\") || value === self.getResource(\"render-combo-empty-value\");\r\n    },\r\n\r\n    escapeValue: function (value) {\r\n        if (bizagi.util.isString(value)) {\r\n            var valueToReturn = value.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\r\n            return valueToReturn;\r\n        } else {\r\n            return value;\r\n        }\r\n    },\r\n\r\n    /**\r\n     *  Maps the value, when this one comes from actions\r\n     * @param value\r\n     * @returns {*}\r\n     */\r\n    mapValue: function (value) {\r\n        if (value && value.fromAction) {\r\n            return {\r\n                id: value.value,\r\n                value: value.label,\r\n                label: value.label\r\n            }\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    validateValue: function (value) {\r\n        if ((value.id != undefined) && ((typeof value.id === \"number\" && value.id !== null) || (typeof value.id === \"string\" && value.id.length > 0))) {\r\n            if (value.value !== null && typeof value.value === \"boolean\") {\r\n                translated = true;\r\n                if (bizagi.util.parseBoolean(value.value) === true) {\r\n                    value.value = bizagi.localization.getResource(\"render-boolean-yes\");\r\n                } else if (bizagi.util.parseBoolean(value.value) === false) {\r\n                    value.value = bizagi.localization.getResource(\"render-boolean-no\");\r\n                }\r\n            } else if (value.value != null && typeof value.value === \"object\") {\r\n                for (var i = 0, length = value.value.length; i < length; i++) {\r\n                    if (value.value[i] != null && typeof (value.value[i]) === \"boolean\") {\r\n                        if (bizagi.util.parseBoolean(value.value[i]) === true) {\r\n                            value.value[i] = bizagi.localization.getResource(\"render-boolean-yes\");\r\n                        } else if (bizagi.util.parseBoolean(value.value[i]) === false) {\r\n                            value.value[i] = bizagi.localization.getResource(\"render-boolean-no\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    /**\r\n     * Finds an element in the combo data values by id\r\n     * @param {int} id\r\n     * @returns {Object}\r\n     */\r\n    findDataValueById: function (id) {\r\n        return (this.properties.data || []).find(function (e) {\r\n            return e.id == id;\r\n        });\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render Check Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for check renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.check\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.value = typeof (properties.value) != \"undefined\" ? bizagi.util.parseBoolean(properties.value) : null;\r\n\r\n        properties.showLetters = (bizagi.override && bizagi.override.enableCheck === true) && !properties.editable;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"check\");\r\n        var randomId = bizagi.util.randomNumber(100, 10000000);\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            id: randomId,\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Gets the display value of the render\r\n     */\r\n    getDisplayValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.parseBoolean(value) === true) {\r\n            return this.getResource(\"render-boolean-yes\");\r\n        } else if (bizagi.util.parseBoolean(value) === false) {\r\n            return this.getResource(\"render-boolean-no\");\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if a render has no value for required validation\r\n     */\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.isEmpty(value)) return false;\r\n\r\n        var booleanValue = bizagi.util.parseBoolean(value);\r\n\r\n        return !(booleanValue === false && this.properties.required);\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Render Number Class\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define basic stuff for numbers\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.number\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        properties.allowDecimals = (typeof (properties.allowDecimals) !== \"undefined\") ? bizagi.util.parseBoolean(properties.allowDecimals) : this.getDefaultAllowDecimals(properties.dataType);\r\n        properties.numDecimals = properties.allowDecimals ? (properties.numDecimals ? properties.numDecimals : (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalDigits : 2)) : 0;\r\n        properties.symbol = '';\r\n        properties.positiveFormat = format.positiveFormat;\r\n        properties.negativeFormat = format.negativeFormat;\r\n        properties.decimalSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator : format.decimalSymbol;\r\n        properties.digitGroupSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.groupSeparator : format.digitGroupSymbol;\r\n        properties.groupDigits = this.setGroupDigits();\r\n        properties.colorize = properties.colorizeOnNegative || false;\r\n        properties.dataTypeMinValue = this.calculateMinValue(properties.dataType);\r\n        properties.dataTypeMaxValue = this.calculateMaxValue(properties.dataType);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"number\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            editable: self.properties.editable,\r\n            value: bizagi.isMobile() ? self.getDisplayValue() : \"\", // Only apply to mobile because in the template value is required (Bug: 11624)\r\n            type: bizagi.util.isAndroidDevice() ? \"tel\" : \"text\", // Change type control for android device\r\n            isDesign: self.getMode() !== \"execution\"\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n\r\n        self._super();\r\n\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n\r\n        self.numericInput = control.find(\"input\");\r\n\r\n        // Add numeric plugin to avoid invalid keystrokes\r\n        self.numericInput.numeric(self.properties.decimalSymbol);\r\n\r\n        // Attach event for retype double\r\n        if (properties.retype === \"double\") {\r\n            self.attachRetypeDouble();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        // Attach Format Currency Plugin to format the input\r\n        this.attachFormatCurrency();\r\n    },\r\n\r\n    /**\r\n     * Removes Validation Messages\r\n     */\r\n    removeValidations: function () {\r\n        var form = this.getFormContainer().parent || this.getFormContainer();\r\n\r\n        form.clearValidationMessages();\r\n    },\r\n\r\n    /**\r\n     * Function virtual implements on children (desktop,smartphone...).\r\n     * @returns {}\r\n     */\r\n    attachRetypeDouble: function () {\r\n    },\r\n\r\n    /**\r\n     * Adds the format currency plugin\r\n     * @returns {}\r\n     */\r\n    attachFormatCurrency: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message = bizagi.localization.getResource(\"render-number-retype-fail\");\r\n        self.isValidRender = self.isValidRender || true;\r\n\r\n        // Extend formatCurrency language\r\n        if ($.formatCurrency.regions[bizagi.language] == null)\r\n            $.formatCurrency.regions[bizagi.language] = this.getResource(\"numericFormat\");\r\n\r\n        // Attach events\r\n        self.numericInput.blur(function () {\r\n            if (typeof (self.getFormContainer().validationController) == \"undefined\") self.getFormContainer().validationController = new bizagi.command.controllers.validation(self.getFormContainer(), self.validations);\r\n            var validationController = self.getFormContainer().validationController || self.getFormContainer().parent.validationController;\r\n            var decimalSeparator = \".\";\r\n            var digitGroupSeparator = \",\";\r\n            if (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) == \"undefined\") {\r\n                decimalSeparator = self.getResource(\"numericFormat\").decimalSymbol || \".\";\r\n                digitGroupSeparator = self.getResource(\"numericFormat\").digitGroupSymbol || \",\";\r\n            }\r\n            else {\r\n                decimalSeparator = BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator;\r\n                digitGroupSeparator = BIZAGI_DEFAULT_CURRENCY_INFO.groupSeparator;\r\n            }\r\n\r\n            var minValue = self.getMinValue();\r\n            var maxValue = self.getMaxValue();\r\n\r\n            if(properties.percentage)self.numericInput.val(self.numericInput.val().replace(\"%\", \"\"));\r\n            var inputValue = self.numericInput.val();\r\n            inputValue = (decimalSeparator == \",\") ? inputValue.replace(/\\,0+$/, '') : inputValue.replace(/\\.0+$/, '');\r\n            inputValue = inputValue.replace(properties.symbol, \"\");\r\n            //Replace all the ocurrences of the digitGroupSeparator\r\n            inputValue = bizagi.util.replaceAll(inputValue, digitGroupSeparator, \"\");\r\n            if (inputValue.toString().indexOf(decimalSeparator) != -1) {\r\n                if (decimalSeparator == \",\") inputValue = inputValue.replace(/([0-9]+(\\,[0-9]+[1-9])?)(\\,?0+$)/, '$1');\r\n                if (decimalSeparator == \".\") inputValue = inputValue.replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/, '$1');\r\n            }\r\n\r\n            if (inputValue != undefined && inputValue.length > 0) self.numericInput.val(inputValue);\r\n\r\n            if (/(.+)-$/.test(inputValue)) {\r\n                inputValue = inputValue.replace(/(.+)-$/, '-$1');\r\n                self.numericInput.val(inputValue);\r\n            }\r\n\r\n            var inputLength = inputValue.replace(/[^0-9]+/g, \"\").length;\r\n            var xPath = self.properties.xpath;\r\n            var oldVal = self.numericInput.val();\r\n\r\n\r\n            if ((self.isInvalidFormat != null && self.isInvalidFormat == true)\r\n                || (inputValue != \"\" && [\"$\", \"£\", \"€\", \"¥\", properties.symbol].indexOf(inputValue) != -1)) {\r\n                self.setValue(\"\");\r\n                self.getControl().find(\"input\").val(\"\");\r\n                self.numericInput.val(\"\");\r\n                return;\r\n            }\r\n\r\n            if (bizagi.util.trim(inputValue) == \"\") {\r\n                self.setValue(\"\");\r\n                return;\r\n            }\r\n\r\n            //The \",\" is changed to \".\" For the correct operation of \"parseFloat ()\"\r\n            var tempValue = parseFloat(inputValue.replace(\",\", \".\"));\r\n            if (isNaN(tempValue)) {\r\n                tempValue = self.numericInput.asNumber();\r\n            }\r\n\r\n            if (minValue !== undefined && minValue != null && tempValue < minValue) {\r\n                message = bizagi.localization.getResource(\"render-numeric-minimum-validation\")\r\n                    .replaceAll(\"#label#\", properties.displayName + \" (\" + oldVal + \")\")\r\n                    .replaceAll(\"#minValue#\", minValue.toString());\r\n            }\r\n            else if (maxValue !== undefined && maxValue !== null && tempValue > maxValue) {\r\n                message = bizagi.localization.getResource(\"render-numeric-maximum-validation\")\r\n                    .replaceAll(\"#label#\", properties.displayName + \" (\" + oldVal + \")\")\r\n                    .replaceAll(\"#maxValue#\", maxValue.toString());\r\n            } else\r\n                message = message + \" \" + oldVal + \"\";\r\n\r\n\r\n            // Do datatype validations\r\n            if (\r\n                (minValue !== undefined && minValue !== null && tempValue < minValue)\r\n                || (maxValue !== undefined && maxValue !== null && tempValue > maxValue)\r\n                || (self.properties.dataType == 10 && inputLength > 15)\r\n                || (self.properties.dataType == 1 && inputLength > 19)\r\n                || (self.properties.dataType == 11 && inputLength > 7)\r\n                || (self.properties.dataType == 11 && inputLength > 7)\r\n                || (oldVal.match(/[^$£€¥,-.()\\d]/))\r\n            ) {\r\n                if (typeof validationController != \"undefined\" && validationController != null) {\r\n                    self.removeValidations();\r\n\r\n                    var messageToShow = message;\r\n                    if(messageToShow.indexOf(oldVal) === -1){\r\n                        messageToShow = message + \" \" + oldVal + \"\";\r\n                    }\r\n\r\n                    validationController.showValidationMessage(messageToShow, xPath);\r\n                    self.isValidRender = false;\r\n                    self.isValidRenderMessage = messageToShow;\r\n                }\r\n                message = message.replace(oldVal, \"\");\r\n                return;\r\n            }\r\n            else {\r\n                self.isValidRender = true;\r\n                self.isValidRenderMessage = \"\";\r\n            }\r\n\r\n            // Fix decimals specially when it starts with 0 (0000234 -> 234, 00000 -> 0)\r\n            if (this.value.toString().length > 0 && !properties.allowDecimals && !properties.groupDigits) {\r\n                this.value = this.value.toString().replace(/^0+/, '');\r\n                if (properties.symbol.length > 0) this.value = this.value.toString().replace(properties.symbol + \"0\", properties.symbol);\r\n                this.value = this.value.toString().replace(/^0+/, '');\r\n                if (this.value.replaceAll('0', '').length == 0)\r\n                    this.value = properties.symbol + \"0\";\r\n                else if (this.value.toString() == parseInt(this.value)) this.value = properties.symbol + this.value;\r\n            } else {\r\n                //Fix type money when number start with 0 (0000234 -> 234, 00000 -> 0)\r\n                if(self.properties.type === \"money\" || self.properties.type === \"number\" || self.properties.type === \"columnMoney\" || self.properties.type === \"columnNumber\"){\r\n                    this.value = this.value.toString().replace(/^0+/, '');\r\n                    if(this.value === \"\"){\r\n                        this.value = 0;\r\n                    }\r\n                }\r\n            }\r\n            self.executeFormatCurrencyPlugin();\r\n\r\n            // Updates internal value\r\n            self.setValue(self.numericInput.asNumber({\r\n                symbol: properties.symbol,\r\n                positiveFormat: properties.positiveFormat,\r\n                negativeFormat: properties.negativeFormat,\r\n                decimalSymbol: properties.decimalSymbol,\r\n                digitGroupSymbol: properties.digitGroupSymbol,\r\n                groupDigits: properties.groupDigits\r\n            }));\r\n\r\n            if (properties.percentage) {\r\n                if (self.numericInput && self.numericInput.val().indexOf(\"%\") == -1)\r\n                    self.numericInput.val(self.numericInput.val() + '%');\r\n            }\r\n            message = message.replace(oldVal, \"\");\r\n        })\r\n\r\n        // Avoiding pasting invalid characters\r\n            .bind('paste', function (e) {\r\n                try {\r\n                    var tmpData = (bizagi.util.isIE() || bizagi.util.isIE11()) ? window.clipboardData.getData(\"text\") : e.originalEvent.clipboardData.getData(\"Text\");\r\n\r\n\r\n\r\n                    // Next lines checks if there is something different to numbers symbol, decimalSymbol and digitGroupSybol\r\n                    var totalVal = \"/[^0-9\";\r\n                    if (properties.decimalSymbol.length > 0) {\r\n                        totalVal += properties.decimalSymbol;\r\n                    }\r\n                    // Next lines only for currency type\r\n                    if (properties.dataType == 8) {\r\n                        if (properties.symbol.length > 0) {\r\n                            totalVal += properties.symbol;\r\n                        }\r\n                        if (properties.digitGroupSymbol.length > 0) {\r\n                            totalVal += properties.digitGroupSymbol;\r\n                        }\r\n                    }\r\n                    totalVal += \"\\\\-\\\\s]/gi\";\r\n                    try {\r\n                        if (tmpData.replace(eval(totalVal), '').length != tmpData.length)\r\n                            e.preventDefault();\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    bizagi.log(\"Error to pasting content\");\r\n                    self.isInvalidFormat = true;\r\n                }\r\n            })\r\n            // Now we implement keydown instead of keyup in order to include preventDefault\r\n            .keydown(function (e) {\r\n                self.previousValue = this.value;\r\n                e = (window.event && window.event.preventDefault) ? window.event : e;\r\n                var keyUnicode = e.charCode || e.keyCode;\r\n                // Validation for currency info\r\n                if (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) != \"undefined\")\r\n                    if (BIZAGI_DEFAULT_CURRENCY_INFO.decimalDigits == 0) properties.allowDecimals = false;\r\n                if (properties.dataType < 5 || (properties.dataType == 8 && properties.allowDecimals == false))\r\n                    if (keyUnicode == 188 || keyUnicode == 190 || keyUnicode == 110)\r\n                        e.preventDefault();\r\n                if (this.value)\r\n                    if (e !== undefined && this.value.length > 0 && (properties.dataType == 8 || properties.dataType == 10)) {\r\n                        // Just numbers\r\n                        if (keyUnicode > 47 && keyUnicode < 58) {\r\n                            if (self.formatTimeout) {\r\n                                clearTimeout(self.formatTimeout);\r\n                            }\r\n\r\n                            var floatPart = this.value + \"\";\r\n                            //var  floatPart = stringPart.replaceAll(properties.digitGroupSymbol, \"\").replaceAll(properties.symbol,\"\").trim().replaceAll(properties.decimalSymbol,\".\");\r\n                            if (properties.digitGroupSymbol && properties.digitGroupSymbol.length > 0) {\r\n                                floatPart = floatPart.replaceAll(properties.digitGroupSymbol, \"\");\r\n                            }\r\n                            if (properties.symbol.length > 0) {\r\n                                floatPart = floatPart.replaceAll(properties.symbol, \"\");\r\n                            }\r\n\r\n                            floatPart = $.trim(floatPart);\r\n                            if (properties.decimalSymbol && properties.decimalSymbol.length > 0) {\r\n                                floatPart = floatPart.replaceAll(properties.decimalSymbol, \".\");\r\n                            }\r\n                            // If increasing one digit (x10) will overtake the maxValue\r\n                            if (floatPart * 10 > properties.dataTypeMaxValue) {\r\n                                e.preventDefault();\r\n                            }\r\n                        }                  \r\n                        else if (keyUnicode == 109 || keyUnicode == 189) {\r\n                            if (this.selectionStart != 0 || this.selectionEnd != this.value.length) {\r\n                                var currentPosition = this.selectionEnd;\r\n                                this.value = properties.symbol + \"-\" + this.value.replace(properties.symbol, \"\");\r\n                                this.selectionStart = this.selectionEnd = currentPosition + 1;\r\n                            } else if (this.selectionStart == 0 && this.selectionEnd == this.value.length) {\r\n                                this.value = \"-\";\r\n                                this.selectionStart = this.selectionEnd = this.value.length;\r\n                            }\r\n                        }\r\n                    }                    \r\n            })\r\n\r\n            .keyup(function (e) {\r\n                e = window.event || e;\r\n                var keyUnicode = e.charCode || e.keyCode;\r\n                if (e !== undefined) {\r\n                    switch (keyUnicode) {\r\n                        case 16:\r\n                            break; // Shift\r\n                        case 17:\r\n                            break; // Ctrl\r\n                        case 13:\r\n                            break; // Intro\r\n                        case 18:\r\n                            break; // Alt\r\n                        case 27:\r\n                            this.value = '';\r\n                            break; // Esc: clear entry\r\n                        case 35:\r\n                            break; // End\r\n                        case 36:\r\n                            break; // Home\r\n                        case 37:\r\n                            break; // cursor left\r\n                        case 38:\r\n                            break; // cursor up\r\n                        case 39:\r\n                            break; // cursor right\r\n                        case 40:\r\n                            break; // cursor down\r\n                        case 78:\r\n                            break; // N (Opera 9.63+ maps the \".\" from the number key section to the \"N\" key too!) (See: http://unixpapa.com/js/key.html search for \". Del\")\r\n                        case 110:\r\n                            break; // . number block (Opera 9.63+ maps the \".\" from the number block to the \"N\" key (78) !!!)\r\n                        case 188:\r\n                            break; // , comma\r\n                        case 190:\r\n                            break; // .\r\n                        default:\r\n                        {\r\n\r\n                        }\r\n                    }\r\n                }                \r\n            }).keypress(function (e) {\r\n            e = (window.event && window.event.preventDefault) ? window.event : e;\r\n            var keyUnicode = e.charCode || e.keyCode;\r\n            if (typeof (e) !== \"undefined\") {\r\n                if (keyUnicode == 35 || keyUnicode == 37 || keyUnicode == 39) {\r\n                    e.preventDefault();\r\n                } else if (properties.dataType != 8 && keyUnicode == 36) {\r\n                    e.preventDefault();\r\n                }\r\n\r\n                // When no decimals are permited\r\n                var character = String.fromCharCode(keyUnicode);\r\n                if (properties.allowDecimals === false && properties.numDecimals === 0 && character === properties.decimalSymbol)\r\n                    e.preventDefault();\r\n            }\r\n        });\r\n\r\n    },\r\n\r\n    executeFormatCurrencyPlugin: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (self.numericInput) {\r\n            self.numericInput.formatCurrency({\r\n                symbol: properties.symbol,\r\n                positiveFormat: properties.positiveFormat,\r\n                negativeFormat: properties.negativeFormat,\r\n                decimalSymbol: properties.decimalSymbol,\r\n                digitGroupSymbol: properties.digitGroupSymbol,\r\n                groupDigits: properties.groupDigits,\r\n                roundToDecimalPlace: properties.numDecimals,\r\n                colorize: properties.colorize\r\n            });\r\n        }\r\n\r\n        if (properties.dataType !== 8 && bizagi.override.removeTrailingZeros === true) {\r\n            var value = self.numericInput.val();\r\n            var positive = true;\r\n\r\n            if (value.indexOf(\")\") !== -1) {\r\n                positive = false;\r\n                value = value.replace(\"(\", \"\").replace(\")\", \"\")\r\n            }\r\n\r\n            var regExp = new RegExp(\"(\" + properties.decimalSymbol + \"\\\\d*?[1-9])0+$\", \"g\");\r\n            value = value.replace(regExp, \"$1\")\r\n\r\n            regExp = new RegExp(\"\\\\\" + properties.decimalSymbol + \"0+$\", \"g\");\r\n            value = value.replace(regExp, \"\");\r\n            self.numericInput.val(value);\r\n\r\n            if (!positive) self.numericInput.val(\"(\" + value + \")\");\r\n        }\r\n\r\n        if (properties.percentage)\r\n            self.numericInput.val(self.numericInput.val() + '%');\r\n    },\r\n\r\n    /**\r\n     * Returns the display value of the render\r\n     * @returns {*}\r\n     */\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n        var value = self.getValue() !== undefined ? self.getValue() : $(\"input\", control).val() || \"\";\r\n\r\n        // Workaround to get the display value by the format currency plugin, because it requires a control\r\n        var label = $('<label/>').html(value);\r\n\r\n        label.formatCurrency({\r\n            symbol: properties.symbol,\r\n            positiveFormat: properties.positiveFormat,\r\n            negativeFormat: properties.negativeFormat,\r\n            decimalSymbol: properties.decimalSymbol,\r\n            digitGroupSymbol: properties.digitGroupSymbol,\r\n            groupDigits: properties.groupDigits,\r\n            roundToDecimalPlace: properties.numDecimals,\r\n            colorize: properties.colorize\r\n        });\r\n\r\n        if (properties.percentage)\r\n            label = $('<label/>').html(label.text() + '%');\r\n\r\n        // Removing unrequired zeros as requested by BA26331\r\n        if (!properties.editable && properties.dataType !== 8 && bizagi.override.removeTrailingZeros === true) {\r\n            value = label.text();\r\n            var positive = true;\r\n\r\n            if (value.toString().indexOf(\")\") !== -1) {\r\n                positive = false;\r\n                value = value.replace(\"(\", \"\").replace(\")\", \"\");\r\n            }\r\n\r\n            var re = new RegExp(\"(\" + properties.decimalSymbol + \"\\\\d*?[1-9])0+$\", \"g\");\r\n            value = value.replace(re, \"$1\");\r\n\r\n            re = new RegExp(\"\\\\\" + properties.decimalSymbol + \"0+$\", \"g\");\r\n            value = value.replace(re, \"\");\r\n\r\n            if (!positive) value = \"(\" + value + \")\";\r\n            return value;\r\n        }\r\n\r\n        return label.text();\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @returns {*}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        var message;\r\n        var minValue = self.getMinValue();\r\n        var maxValue = self.getMaxValue();\r\n\r\n        if (typeof (value) == \"string\" && value != \"\") {\r\n            value = Number(value);\r\n        }\r\n\r\n        // Check min value\r\n        if (self.hasValue()) {\r\n            if (!bizagi.util.isEmpty(minValue)) {\r\n                if (value < minValue) {\r\n                    message = this.getResource(\"render-numeric-minimum-validation\").replaceAll(\"#label#\", properties.displayName.toString() + \" (\" + value + \")\").replaceAll(\"#minValue#\", minValue.toString());\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n            // Check max value\r\n            if (!bizagi.util.isEmpty(maxValue)) {\r\n                if (value > maxValue) {\r\n                    message = this.getResource(\"render-numeric-maximum-validation\").replaceAll(\"#label#\", properties.displayName.toString() + \" (\" + value + \")\").replaceAll(\"#maxValue#\", maxValue.toString());\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (self.isValidRender === false && !(bValid && bizagi.util.isMobileDevice())) {\r\n            bValid = false;\r\n            var validMessage = self.isValidRenderMessage ? self.isValidRenderMessage : \"error\";\r\n            invalidElements.push({xpath: properties.xpath, message: validMessage});\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Get minimum value\r\n     * @returns {*}\r\n     */\r\n    getMinValue: function () {\r\n        var minValue = this.properties.minValue;\r\n\r\n        if (minValue !== undefined && minValue !== null)\r\n            return minValue;\r\n\r\n        return this.properties.dataTypeMinValue;\r\n    },\r\n\r\n    /**\r\n     * Get maximum value\r\n     * @returns {*}\r\n     */\r\n    getMaxValue: function () {\r\n        var maxValue = this.properties.maxValue;\r\n\r\n        if (maxValue !== undefined && maxValue !== null)\r\n            return maxValue;\r\n\r\n        return this.properties.dataTypeMaxValue;\r\n    },\r\n\r\n    /**\r\n     * Return the allow decimals default property based on the datatype\r\n     * @param dataType\r\n     * @returns {boolean}\r\n     */\r\n    getDefaultAllowDecimals: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType === 1 || dataType === 2 || dataType === 3 || dataType === 4 || dataType === 7) {\r\n                return false;\r\n            }\r\n            // Decimal and money data types\r\n            if (dataType === 6 || dataType === 8 || dataType === 10 || dataType === 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    /**\r\n     * Return the group digits default property based on the datatype\r\n     * @param dataType\r\n     * @returns {boolean}\r\n     */\r\n    getDefaultGroupDigits: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType === 1 || dataType === 2 || dataType === 3 || dataType === 4 || dataType === 7) {\r\n                return false;\r\n            }\r\n\r\n            // Decimal data types\r\n            if (dataType === 6 || dataType === 8 || dataType === 10 || dataType === 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Return the group digits default property based on digitGroupSymbol\r\n     * @returns {*}\r\n     */\r\n    setGroupDigits: function () {\r\n        var self = this;\r\n        if (typeof (self.properties.thousands) !== \"undefined\") {\r\n            if (self.properties.digitGroupSymbol) { //some cultures\r\n                return bizagi.util.parseBoolean(self.properties.thousands);\r\n            } else {\r\n                return false;\r\n            }\r\n        } else if (self.properties.digitGroupSymbol) { //some cultures\r\n            return this.getDefaultGroupDigits(self.properties.dataType);\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Calculate Minimum Value\r\n     * @param dataType\r\n     * @returns {*}\r\n     */\r\n    calculateMinValue: function (dataType) {\r\n        if (dataType === 8 || dataType === 10) {\r\n            return -922337203685477; // Money\r\n        }\r\n        if (dataType === 4) {\r\n            return 0; // tinyint\r\n        }\r\n        if (dataType === 3) {\r\n            return -32768; // smallint\r\n        }\r\n        if (dataType === 2) {\r\n            return -2147483648; // int\r\n        }\r\n        if (dataType === 1) {\r\n            return -999999999999999; // bigint\r\n        }\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * Calculate Maximum Value\r\n     * @param dataType\r\n     * @returns {*}\r\n     */\r\n    calculateMaxValue: function (dataType) {\r\n        if (dataType === 8 || dataType === 10) {\r\n            return 922337203685477; // Money\r\n        }\r\n        if (dataType === 4) {\r\n            return 255; // tinyint\r\n        }\r\n        if (dataType === 3) {\r\n            return 32767; // smallint\r\n        }\r\n        if (dataType === 2) {\r\n            return 2147483647; // int\r\n        }\r\n        if (dataType === 1) {\r\n            return 999999999999999; // bigint\r\n        }\r\n        return null;\r\n    },\r\n\r\n    changeMinValue: function (value) {\r\n        var self = this;\r\n        var newValue = Number(value);\r\n\r\n        self.properties.minValue = self.properties.dataTypeMinValue = Number.isNaN(newValue) ? self.calculateMinValue(self.properties.dataType) : newValue;\r\n    },\r\n\r\n    changeMaxValue: function (value) {\r\n        var newValue = Number(value);\r\n\r\n        this.properties.maxValue = this.properties.dataTypeMaxValue = Number.isNaN(newValue) ? this.calculateMaxValue(this.properties.dataType) : newValue;\r\n    },\r\n\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        control.data(\"oldValue\", currentValue);\r\n        control.val(\"\");\r\n\r\n        try {\r\n            // Destroy tooltips\r\n            control.tooltip(\"destroy\");\r\n        } catch (e) {\r\n        }\r\n\r\n        control.attr(\"title\", currentTitle);\r\n        control.tooltip();\r\n\r\n        var toolTipZindex = $.getMaxZindex();\r\n        control.tooltip().on(\"tooltipopen\", function (event, ui) {\r\n            ui.tooltip.zIndex(toolTipZindex);\r\n        });\r\n\r\n        // Create new tooltip\r\n        control.tooltip(\"open\");\r\n\r\n        setTimeout(function () {\r\n            control.focus();\r\n        }, 100);\r\n    }\r\n});\r\n\r\n","\r\n/*\r\n*   Name: Bizagi Render Number Scientific notation Class\r\n*   Author: Laura Ariza\r\n*   Comments:\r\n*   -   This script will define basic stuff for scientific notation numbers\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.numberScientificNotation\", {\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n\r\n        properties.decimalSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\"\r\n            ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator : format.decimalSymbol;\r\n    },\r\n\r\n    renderControl: function() {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"numberScientificNotation\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {});\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function() {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        self.numericInput = control.find(\"input\");\r\n        // Add numeric plugin to avoid invalid keystrokes\r\n        self.numericInput.numericSN(self.properties.decimalSymbol);\r\n\r\n    },\r\n\r\n    getDisplayValue: function() {\r\n        var self = this;\r\n        return self.getValue().replace('.', self.properties.decimalSymbol);\r\n    },\r\n\r\n    setValue: function(value) {\r\n        var self = this;\r\n        value = (value || '').toString().replace(self.properties.decimalSymbol, '.');\r\n        self._super(value);\r\n    },\r\n    controlValueIsChanged: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var value = self.getValue() || \"\";\r\n        var compareValue = properties.originalValue || \"\";\r\n        var result = true;\r\n\r\n        // Flag to force to collect data\r\n        if ($.forceCollectData) {\r\n            return true;\r\n        }\r\n        result = (compareValue.toLowerCase() == value.toLowerCase()) ? false : true;\r\n        return result;\r\n    }\r\n\r\n});","/*\r\n*   Name: BizAgi Render Date Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for date renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.date\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var dateFormat = this.getResource(\"dateFormat\");\r\n        var timeFormat = this.getResource(\"timeFormat\");\r\n\r\n        // We will hold here the value to display\r\n        properties.displayValue = \"\";\r\n        properties.showTime = properties.showTime !== undefined ? bizagi.util.parseBoolean(properties.showTime) : false;\r\n        properties.dateFormat = properties.dateFormat || dateFormat;\r\n        properties.timeFormat = properties.timeFormat || timeFormat;\r\n        properties.fullFormat = properties.dateFormat;\r\n\r\n        // Check if it has the showtime property\r\n        if (properties.showTime) {\r\n            if (properties.fullFormat.search(/[h|H]+/ig) === -1) {\r\n                properties.fullFormat = properties.fullFormat + ' ' + properties.timeFormat;\r\n            }\r\n        }\r\n\r\n        // Read always parameter from server in invariant format\r\n        if (properties.value) {\r\n\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(properties.value, properties.showTime);\r\n            // Format date to current format\r\n            if (date != 0) {\r\n                // Value must always hold the value with invariant format\r\n                self.value = properties.value;\r\n                var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n                properties.displayValue = bizagi.util.dateFormatter.formatDate(date, properties.fullFormat, datePickerRegional);\r\n            } else {\r\n                self.value = null;\r\n            }\r\n        }\r\n    },\r\n    \r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"date\");\r\n        var indexDateTimeSeparation = properties.dateFormat.substring(0, properties.dateFormat.indexOf(\":\")).lastIndexOf(\" \");\r\n        var dateFormat = (indexDateTimeSeparation > 0) ? properties.dateFormat.substring(0, indexDateTimeSeparation) : properties.dateFormat;\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            showTime: properties.showTime,\r\n            value: properties.value,\r\n            editable: properties.editable,\r\n            dateFormat: bizagi.override && bizagi.override.uppercaseDatePlaceholder === true ? dateFormat.toUpperCase() : dateFormat,\r\n            timeFormat: (properties.showTime && indexDateTimeSeparation > 0) ? properties.dateFormat.substring(indexDateTimeSeparation) : \"\",\r\n            rtl: (properties.orientation == \"rtl\")\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n    */\r\n    configureHandlers: function (intHandler, isNow) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set control references\r\n        var dateControl = self.getDateControl();\r\n        var timeControl = self.getTimeControl();\r\n\r\n        // Set mask\r\n        if (properties.mask) {\r\n            dateControl.mask({\r\n                mask: properties.mask\r\n            });\r\n        }\r\n\r\n        // Attach change event\r\n        dateControl.bind(\"change\", function () {\r\n            self.onChangeHandler();\r\n        });\r\n        if (properties.showTime) {\r\n            timeControl.bind(\"change\", function (e, isNow) {\r\n                if (self.updatingTime) {\r\n                    delete self.updatingTime;\r\n                    return;\r\n                }\r\n                self.onChangeHandler(isNow);\r\n            });\r\n        }\r\n    },\r\n\r\n    /* \r\n    *   Formats the date time value to the hidden control\r\n    */\r\n    onChangeHandler: function () {\r\n    },\r\n\r\n    getDisplayValue: function (value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var displayValue;\r\n\r\n        if (!properties.displayValue && value) {\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(value, properties.showTime);\r\n            var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n            displayValue = bizagi.util.dateFormatter.formatDate(date, properties.fullFormat, datePickerRegional);\r\n        } else {\r\n            displayValue = \"\";\r\n        }\r\n\r\n        // We can return the display value isntance\r\n        return properties.displayValue || displayValue || \"\";\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            if (!bizagi.util.isEmpty(xpath)) {\r\n                if (!bizagi.util.isEmpty(value)) {\r\n                    // Formats the value in full invariant (with time) in order to send to the server\r\n                    var date = bizagi.util.dateFormatter.getDateFromInvariant(value, properties.showTime);\r\n                    if (typeof (date) != \"undefined\")\r\n                        if (date !== 0) {\r\n                            if (!properties.showTime) {\r\n                                date.setHours(0, 0, 0, 0);\r\n                            }\r\n                            renderValues[properties.xpath] = bizagi.util.dateFormatter.formatInvariant(date, true);\r\n                        }\r\n                } else if (value === \"\") {\r\n                    renderValues[properties.xpath] = \"\";\r\n                }\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Gets the date control\r\n    */\r\n    getDateControl: function () { },\r\n\r\n    /*\r\n    *   Gets the time control\r\n    */\r\n    getTimeControl: function () { },\r\n\r\n    /* \r\n    * Public method to determine if a value is valid or not\r\n    */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n        properties = self.properties;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        if (value) {\r\n            if (bizagi.util.parseBoolean(properties.editable) === true) {\r\n                value = bizagi.util.dateFormatter.getDateFromInvariant(value, properties.showTime);\r\n                var message;\r\n\r\n                // Check that we have a valid data\r\n                if (value != 0) {\r\n                    // Clear seconds and milliseconds for validations\r\n                    value.setSeconds(0);\r\n                    value.setMilliseconds(0);\r\n\r\n                    // Check min value\r\n                    if (properties.minValue && (typeof properties.minValue === 'string' || typeof properties.minValue == 'number')) {\r\n                        var minValue = typeof properties.minValue == 'string' ? bizagi.util.dateFormatter.getDateFromInvariant(properties.minValue, properties.showTime) : new Date(properties.minValue);\r\n                        minValue.setSeconds(0);\r\n                        minValue.setMilliseconds(0);\r\n\r\n                        if (value < minValue) {\r\n                            message = this.getResource(\"render-date-minimum-validation\").replaceAll(\"#label#\", properties.displayName).replaceAll(\"#minValue#\", bizagi.util.dateFormatter.formatDate(minValue, properties.fullFormat));\r\n                            invalidElements.push({\r\n                                xpath: properties.xpath,\r\n                                message: message\r\n                            });\r\n                            bValid = false;\r\n                        }\r\n                    }\r\n\r\n                    // Check max value\r\n                    if (properties.maxValue && (typeof properties.maxValue == 'string' || typeof properties.maxValue == 'number')) {\r\n                        var maxValue = typeof properties.maxValue == 'string' ? bizagi.util.dateFormatter.getDateFromInvariant(properties.maxValue, properties.showTime) : new Date(properties.maxValue);\r\n                        maxValue.setSeconds(0);\r\n                        maxValue.setMilliseconds(0);\r\n\r\n                        if (value > maxValue) {\r\n                            message = this.getResource(\"render-date-maximum-validation\").replaceAll(\"#label#\", properties.displayName).replaceAll(\"#maxValue#\", bizagi.util.dateFormatter.formatDate(maxValue, properties.fullFormat));\r\n                            invalidElements.push({\r\n                                xpath: properties.xpath,\r\n                                message: message\r\n                            });\r\n                            bValid = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Check that both controls (data and time) are filled out\r\n        if (properties.showTime) {\r\n            if (bizagi.util.parseBoolean(properties.editable) === true) {\r\n                // Check required\r\n                if (properties.required && self.hasValue()) {\r\n\r\n                    // Check both controls\r\n                    var dateControl = self.getDateControl();\r\n                    var timeControl = self.getTimeControl();\r\n\r\n                    // If date is filled but time is not ... show validation\r\n                    if (dateControl.length > 0 && timeControl.length > 0) {\r\n                        if (dateControl.val().length > 0 && timeControl.val().length == 0) {\r\n                            message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                            invalidElements.push({\r\n                                xpath: properties.xpath,\r\n                                message: message\r\n                            });\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Text Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for text renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.extendedText\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Check if offline forms is supported\r\n        this.isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n        this.hasMaxLines = this.properties.maxLines ? true : false;\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        // Fill default properties\r\n        properties.maxLines = this.properties.maxLines || 6;\r\n\r\n        if (properties.regularExpressionExpression) {\r\n            var message = properties.regularExpressionMessage || self.getResource(\"render-text-regular-expression-default-message\");\r\n\r\n            properties.regularExpression = {\"expression\": properties.regularExpressionExpression, \"message\": message};\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"extendedText\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            isEmptyField: typeof (this.properties.value) === \"undefined\",\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        self._super();\r\n\r\n        var control = self.getControl();\r\n        self.textarea = control.find(\"textarea\");\r\n\r\n        // If is textarea, then enable resize element.\r\n        if (self.textarea) {\r\n            self.textarea.css({resize: \"both\"});\r\n        } else {\r\n            self.textarea.css({resize: \"none\"});\r\n        }\r\n\r\n        // Attach event for retype double\r\n        if (self.properties.retype === \"double\")\r\n            self.attachRetypeDouble();\r\n    },\r\n\r\n    /**\r\n     * Function virtual implements on children (desktop,samrtphone...).\r\n     */\r\n    attachRetypeDouble: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set the default maxlength for the input if is 0 or undefined set to infinity\r\n        // this resolve issue with scope strings that don't have maxlength\r\n        if (properties.maxLength)\r\n            self.textarea.prop('maxlength', properties.maxLength);\r\n\r\n        if (properties.maxLines) {\r\n            self.textarea.prop('rows', properties.maxLines)\r\n        } else {\r\n            self.textarea.prop('rows', 6);\r\n        }\r\n\r\n        // Attach change event\r\n        self.textarea.bind(\"change\", function () {\r\n\r\n            // Updates internal value\r\n            self.setValue(self.textarea.val());\r\n\r\n            // Check that the value is valid\r\n            var validationMessages = [];\r\n            if (properties.retype !== \"duplicate\") {\r\n                if (self.isValid(validationMessages) || typeof (properties.regularExpression) === \"undefined\") {\r\n                    // Update value again triggering handlers\r\n                    self.setValue(self.textarea.val(), true);\r\n                } else {\r\n                    // Set error message\r\n                    var message = validationMessages[0].message;\r\n                    bizagi.showMessageBox(message, \"Bizagi\", \"error\");\r\n                }\r\n            }\r\n        });\r\n\r\n        // Attach blur event\r\n        self.textarea.bind(\"blur\", function () {\r\n            // Updates internal value\r\n            self.setValue(self.textarea.val());\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param {} invalidElements\r\n     * @returns {}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        var regEx = new RegExp(\".*?(<|\\\\u003C)(.+?)(>|\\\\u003E)(.?)|eval\\\\(|eval\\\\u0028\", \"g\");\r\n\r\n        // Offline capability\r\n        if (this.isOfflineForm && bizagi.util.isMobileDevice()) {\r\n            value = value && typeof (value) === \"object\" && value.value ? value.value : value;\r\n        }\r\n\r\n        // Check regular expression\r\n        if (properties.regularExpression) {\r\n\r\n            if (value && ((value.match(regEx)) || (!value.match(new RegExp(properties.regularExpression.expression)) && (self.properties && self.properties.xpath === \"userName\")))) {\r\n                message = properties.regularExpression.message;\r\n                invalidElements.push({xpath: properties.xpath, message: message});\r\n                bValid = false;\r\n            } else {\r\n                if (value && ((value.match(regEx)) || (!value.match(new RegExp(properties.regularExpression.expression))))) {\r\n                    message = properties.regularExpression.message;\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n        } else {\r\n            if (value && (value.match(new RegExp(\".*?eval\\\\(\", \"g\"))) && (value.match(new RegExp(\".*?eval\\\\u0028\", \"g\")))) {\r\n                if (properties.editable) {\r\n                    message = this.getResource(\"render-text-regular-expression-default-message\");\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n\r\n        if (self.properties.editable == false) {\r\n            // Render as simple value\r\n            if (typeof (value) == \"string\") {\r\n\r\n                // Replace line breaks for html line breaks\r\n                var valueToDisplay = bizagi.util.decodedDisplayValue(self.getDisplayValue());\r\n\r\n                control.html(valueToDisplay);\r\n            }\r\n        }\r\n\r\n        // Set internal value\r\n        self.setValue(decodedValue, false);\r\n    },\r\n\r\n    /**\r\n     * Add the render data to the given collection in order to send data to the server\r\n     * @param {} renderValues\r\n     * @returns {}\r\n     */\r\n    collectData: function (renderValues) {\r\n        // Call base\r\n        this._super(renderValues);\r\n    },\r\n\r\n    /**\r\n     * Extend setValue to fix all encode data from database\r\n     * More information SUITE-9407\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setValue: function (value) {\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n\r\n        this._super(decodedValue);\r\n    },\r\n\r\n    /**\r\n     * Helptext tooltip\r\n     * @param {} control\r\n     * @param {} currentValue\r\n     * @param {} currentTitle\r\n     */\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        control.data(\"oldValue\", currentValue);\r\n        control.val(\"\");\r\n\r\n        if(control.data('ui-tooltip')) control.tooltip('destroy');  \r\n\r\n        control.attr(\"title\", currentTitle);\r\n        control.tooltip();\r\n\r\n        var toolTipZindex = $.getMaxZindex();\r\n        control.tooltip().on(\"tooltipopen\", function (event, ui) {\r\n            ui.tooltip.zIndex(toolTipZindex);\r\n        });\r\n\r\n        // Create new tooltip\r\n        control.tooltip(\"open\");\r\n\r\n        setTimeout(function () {\r\n            control.focus();\r\n        }, 100);\r\n    },\r\n\r\n    //#region No side effects functions\r\n    /**\r\n     * Gets the string with the correct size\r\n     * @param {string} value String value to validate\r\n     * @param {Int} maxLength Maximum size of the string\r\n     * @returns {string} String value validated\r\n     */\r\n    validateValue: function (value, maxLength) {\r\n        if(maxLength<1 || value.length<=maxLength)return value;\r\n        return value.substr(0, maxLength)\r\n    }\r\n    //#endregion No side effects functions\r\n});\r\n","/*\r\n *   Name: Bizagi Render Grid Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for grids\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.grid\", {}, {\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        self.originalData = bizagi.clone(data.properties);\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        self.initProperties();\r\n\r\n        // Set columns\r\n        var areThereEditableColumns;\r\n        var areThereTotalizedColumns;\r\n        self.columns = [];\r\n        self.columnsIds = [];\r\n        self.enabledChecks = {};\r\n        self.exclusiveChanges = {};\r\n        self.originalEnabledChecks = [];\r\n        $.each(data.elements, function (i, column) {\r\n            var columnProperties = column.render.properties;\r\n\r\n            // the groupby property is taken of column\r\n            if (columnProperties.groupBy) {\r\n                properties.groupBy = columnProperties.xpath || \"\";\r\n                properties.allowGrouping = !bizagi.util.isEmpty(properties.groupBy) ? true : false;\r\n            }\r\n           //if (columnProperties.type === \"columnLabel\") {\r\n                //self.spliceRowData(data.properties.data, i + 1);\r\n            //}\r\n\r\n            if (columnProperties.type === \"columnBoolean\" && columnProperties.isExclusive) {\r\n                properties.hasExclusiveCheck = true;\r\n                self.enabledChecks[columnProperties.xpath] = [];                   \r\n            }\r\n                       \r\n            // If inlineEdit is false then all columns must be read only\r\n            if (!self.properties.inlineEdit) {\r\n                column.render.properties.editable = false;\r\n            }\r\n\r\n            // Create renderColumns\r\n            var columnRender = self.renderFactory.getColumn({\r\n                type: columnProperties.type,\r\n                data: column.render,\r\n                parent: self,\r\n                singleInstance: properties.singleInstance\r\n            });\r\n\r\n            self.columns.push(columnRender);\r\n            self.columnsIds.push(column.render.properties.id);\r\n\r\n            if (columnProperties.editable) {\r\n                areThereEditableColumns = true;\r\n            }\r\n\r\n            if (columnProperties.totalize && columnProperties.totalize.operation) {\r\n                areThereTotalizedColumns = true;\r\n\r\n                // Default summary format\r\n                columnProperties.totalize.format = columnProperties.totalize.format || {};\r\n                columnProperties.totalize.format.bold = columnProperties.totalize.format.bold !== undefined ? columnProperties.totalize.format.bold : true;\r\n            }\r\n        });\r\n\r\n        // Reverse columns when using right to left orientation\r\n        if (properties.orientation === \"rtl\")\r\n            self.columns = self.columns.reverse();\r\n\r\n        // Turn off inline edit if there are any editable columns        \r\n        if (properties.inlineEdit && !areThereEditableColumns) {\r\n            properties.inlineEdit = false;\r\n            properties.allowEdit = false;\r\n        }\r\n\r\n        // Check if the grid has totalizers\r\n        if (areThereTotalizedColumns) {\r\n            properties.showSummary = true;\r\n            properties.rowsPerPage = 0;\r\n        }\r\n    },\r\n\r\n    initProperties: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        /** Edit properties\r\n         * @default editable true\r\n         */\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) || false;\r\n        properties.allowEdit = bizagi.util.parseBoolean(properties.allowEdit) != null ? bizagi.util.parseBoolean(properties.allowEdit) : true;\r\n        properties.inlineEdit = bizagi.util.parseBoolean(properties.inlineEdit) != null ? bizagi.util.parseBoolean(properties.inlineEdit) : true;\r\n        properties.withEditForm = bizagi.util.parseBoolean(properties.withEditForm) != null ? bizagi.util.parseBoolean(properties.withEditForm) : false;\r\n\r\n        /** Add properties\r\n         * @default  allowAdd true\r\n         */\r\n        properties.allowAdd = bizagi.util.parseBoolean(properties.allowAdd) != null ? bizagi.util.parseBoolean(properties.allowAdd) : true;\r\n        properties.inlineAdd = (properties.allowAdd) ? (bizagi.util.parseBoolean(properties.inlineAdd) != null) ? bizagi.util.parseBoolean(properties.inlineAdd) : true : false;\r\n\r\n        /* Define Delete properties */\r\n        properties.allowDelete = bizagi.util.parseBoolean(properties.allowDelete) != null ? bizagi.util.parseBoolean(properties.allowDelete) : true;\r\n\r\n        /* Define details properties*/\r\n        properties.allowDetail = bizagi.util.parseBoolean(properties.allowDetail) != null ? bizagi.util.parseBoolean(properties.allowDetail) : false;\r\n\r\n        /* Define general properties */\r\n        properties.keyColumn = \"\";\r\n        properties.data = properties.data || null;\r\n        properties.displayType = \"value\";\r\n        properties.skipInitialLoad = properties.skipInitialLoad || false;\r\n        properties.allowMore = bizagi.util.parseBoolean(properties.allowMore) || false;\r\n        properties.allowFilter = bizagi.util.parseBoolean(properties.allowFilter) || false;\r\n        properties.allowGrouping = false;\r\n        properties.groupBy = \"\";\r\n        properties.groupSummary = properties.groupSummary || null;\r\n        properties.groupText = this.getResource(\"render-grid-group-text\");\r\n        properties.groupCollapsed = bizagi.util.parseBoolean(properties.groupCollapsed) || false;\r\n        properties.groupOrder = properties.groupOrder || \"asc\";\r\n        properties.formShowMode = bizagi.util.parseBoolean(properties.formShowMode) || \"popup\";\r\n        properties.floatingHeader = bizagi.util.parseBoolean(properties.floatingHeader) || false;\r\n\r\n        properties.sortBy = properties.sortBy ? properties.sortBy : properties.data && properties.data.sort ? properties.data.sort : properties.keyColumn;\r\n        properties.sortOrder = properties.sortOrder !== undefined && properties.sortOrder !== null ? (properties.sortOrder === \"True\" ? \"asc\" : \"desc\") : properties.data && properties.data.order ? properties.data.order : \"asc\";\r\n        properties.sort = properties.sortBy + \" \" + properties.sortOrder;\r\n\r\n        properties.rowsPerPage = properties.allowGrouping ? 1000 : (properties.rowsPerPage || 20);\r\n        properties.page = 1;\r\n        properties.records = 0;\r\n        properties.totalPages = 0;\r\n\r\n        properties.addLabel = properties.addLabel || this.getResource(\"render-grid-add-label\") + properties.displayName;\r\n        properties.editLabel = properties.editLabel || $.trim(this.getResource(\"render-grid-edit-label\")) + \" \" + properties.displayName;\r\n        properties.deleteLabel = properties.deleteLabel || this.getResource(\"render-ecm-confirm-bt-delete\") + \" \" + properties.displayName;\r\n        properties.exportOptionsLabel = properties.exportOptionsLabel || this.getResource(\"render-grid-export-options-label\") + properties.displayName;\r\n        properties.detailLabel = properties.detailLabel || this.getResource(\"render-collection-navigator-details-form\");\r\n\r\n\r\n        // Apply style to entire table\r\n        properties.tableCssClass = properties.cssClass || \"\";\r\n\r\n        properties.alreadySaved = false;\r\n\r\n        // When grid open in modal window and the parent is entity\r\n        if (properties.contexttype != \"entity\") {\r\n            properties.contexttype = (typeof self.parent.getContextType == 'function') ? self.parent.getContextType() : \"\";\r\n        }\r\n\r\n        // Define if it is editable or not        \r\n        /* This part change all cells in the table to no editable,\r\n         * you must use it when the parent container has noeditable property,\r\n         * so this table is noeditable too.\r\n         */\r\n        try {\r\n            if ((self.parent && typeof self.parent.properties.editable == \"boolean\" && !self.parent.properties.editable) || !properties.editable) {\r\n                properties.allowAdd = false;\r\n                properties.allowEdit = false;\r\n                properties.allowDelete = false;\r\n                properties.inlineEdit = false;\r\n                properties.inlineAdd = false;\r\n                properties.editable = false;\r\n            }\r\n        } catch (e) {\r\n        }\r\n\r\n\r\n        // If grid has not allowEdit property in true, all fields within the grid\r\n        // must be no editables, so these lines changes this behavior\r\n        if (!properties.allowEdit || (!properties.inlineEdit && !properties.withEditForm)) {\r\n            properties.editable = false;\r\n        }\r\n\r\n        // Calculate render width\r\n        properties.labelWidth = 0;\r\n        properties.valueWidth = \"100%\";\r\n\r\n        // This property will be used to make custom grids with another data source\r\n        properties.overrideGetRemoteData = properties.overrideGetRemoteData || undefined;\r\n        //this property use to create a single decorated or a array of decorated\r\n        properties.singleInstance = bizagi.util.isEmpty(properties.singleInstance) ? true : properties.singleInstance;\r\n\r\n        // Check if the grid its opened whitin dialog form and has contextType\r\n        properties.contextType = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : null;\r\n\r\n        // Create a collection to collect changes\r\n        self.changes = {};\r\n\r\n        // Create a collection to override properties per cell\r\n        self.cellOverrides = {};\r\n\r\n\r\n        // Check orientation and change order of data if its necesary (rtl)\r\n        if (self.isRTL() && properties.data != null) {\r\n            properties.data.rows = self.changeOrderData(properties.data.rows);\r\n        }\r\n    },\r\n\r\n    /*\r\n   *   Check if a render has no value for required validation\r\n   */\r\n    hasValue: function () {\r\n        return this.properties.data && this.properties.data.rows.length > 0;\r\n    },\r\n\r\n    isRTL: function () {\r\n        var properties = this.properties;\r\n        if (!properties) return true;\r\n        return (typeof properties.orientation == \"string\" && properties.orientation.toUpperCase() == \"RTL\") ? true : false;\r\n    },\r\n    changeOrderData: function (data) {\r\n        var reverseDataRows = [];\r\n        var rows = data || [];\r\n        var rowKey;\r\n\r\n        $.each(rows, function (key, value) {\r\n            // Extract row key\r\n            rowKey = value.shift();\r\n            reverseDataRows = value.reverse();\r\n            // add element in the start\r\n            reverseDataRows.unshift(rowKey);\r\n\r\n            rows[key] = reverseDataRows;\r\n        });\r\n\r\n        return rows;\r\n    },\r\n\r\n    /**\r\n     * Specific fix RTL with localizated\r\n     * @param data\r\n     * @returns {*|Array}\r\n     */\r\n    removeRemainingColumns: function (data, numColumns) {\r\n        var rows = data || [];\r\n        var remainingColumns = 0;\r\n        if (rows.length > 0) {\r\n            // \"- 1\" because the first column represent id row\r\n            remainingColumns = rows[0].length - numColumns - 1;\r\n        }\r\n        if (remainingColumns > 0) {\r\n            $.each(rows, function (key, value) {\r\n                // Remove remaining columns\r\n                for (var i = 0; i < remainingColumns; i++) {\r\n                    value.pop();\r\n                }\r\n            });\r\n        }\r\n        return rows;\r\n    },\r\n\r\n    /* \r\n     *   Gets a column definition by xpath\r\n     */\r\n    getColumn: function (xpath) {\r\n        var self = this;\r\n        var result = null;\r\n        $.each(self.columns, function (i, column) {\r\n            if (\r\n                column.properties.xpath == xpath || \r\n                column.properties.id == xpath ||\r\n                column.properties.xpath + \".\" + column.properties.id == xpath\r\n            ) {\r\n                result = column;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    },\r\n\r\n    getColumnType: function (id) {\r\n        var self = this;\r\n        var columnIndex = self.columnsIds.indexOf(id);\r\n\r\n        if (columnIndex != -1) {\r\n            return self.columns[columnIndex].properties.type;\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    /*\r\n     *   Template method to implement in each children to customize each control\r\n     *   Returns a promise that will be resolved when all the columns has been loaded\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        // Set dummy data when not in execution mode\r\n        var mode = self.getMode();\r\n        if (mode !== \"execution\") {\r\n            properties.data = self.getDummyData();\r\n        }\r\n\r\n        var template = self.getGridTemplate();\r\n\r\n        // Render template\r\n        var html = self.applyTemplate(template);\r\n\r\n        // Initialize columns\r\n        var columnInitializers = [];\r\n        $.each(self.columns, function (i, column) {\r\n\r\n            // Add to column initializer array so we can synch out the promises\r\n            var result = column.initialize();\r\n            if (result)\r\n                columnInitializers.push(result);\r\n        });\r\n\r\n        // Resolve when all columns has been loaded\r\n        $.when.apply($, columnInitializers).done(function () {\r\n            defer.resolve(html);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n    /*\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Call base\r\n        this._super();\r\n\r\n        // Make control to behave as a block container\r\n        // TODO: Move to instances. This does not apply to mobiles\r\n        control.addClass(\"ui-bizagi-render-grid-container\")\r\n            .addClass(\"ui-bizagi-render-display-block\");\r\n    },\r\n\r\n    /*\r\n     *   Returns the grid template to be used\r\n     */\r\n    getGridTemplate: function () {\r\n        return this.renderFactory.getTemplate(\"grid\");\r\n    },\r\n\r\n    /*\r\n     *   Applies the template to the render and returns the resolved element\r\n     */\r\n    applyTemplate: function (template) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        orientation = self.properties.orientation;\r\n\r\n        return $.fasttmpl(template, {\r\n            id: bizagi.util.encodeXpath(properties.xpath),\r\n            displayName: bizagi.util.encodeXpath(properties.displayName),\r\n            allowAdd: properties.allowAdd,\r\n            addLabel: properties.addLabel\r\n        });\r\n    },\r\n    /*\r\n     *   Method to render non editable values\r\n     *   Returns a promise that will be resolved when all the columns has been loaded\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n\r\n        // Override read-only presets\r\n        //  properties.allowAdd = false;\r\n        // Render the same, just change some presets\r\n        return self.renderControl();\r\n    },\r\n    /*\r\n     *   Fetch the data into a deferred\r\n     */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set params\r\n        params = params || {};\r\n        $.extend(params, {\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType,\r\n            idPageCache: properties.idPageCache,\r\n            sort: properties.sortBy,\r\n            order: properties.sortType,\r\n            page: properties.page,\r\n            rows: properties.rowsPerPage,\r\n            searchFilter: properties.searchFilter,\r\n            orientation: properties.orientation || \"ltr\"\r\n        });\r\n\r\n        // Check if a custom method has been given\r\n        if (properties.overrideGetRemoteData) {\r\n            return properties.overrideGetRemoteData(params);\r\n        } else {\r\n            // Resolve with remote data\r\n            return self.dataService.multiaction().getGridData(params).then(function (data) {\r\n                self.originalData = self.originalData || {};\r\n                self.originalData.data = bizagi.clone(data);\r\n\r\n                // Resolve with fetched data\r\n                properties.page = data.page;\r\n                properties.records = data.records;\r\n                properties.totalPages = data.totalPages;\r\n\r\n                return data;\r\n            });\r\n        }\r\n    },\r\n    /*\r\n     insert a blank item in the selected column in the data matrix\r\n     */\r\n    spliceRowData: function (data, index) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        if (mode === \"execution\" && (data && data.rows)) {\r\n            $.each(data.rows, function (key, value) {\r\n                var spliceIndex = index || data.rows[key].length;\r\n                data.rows[key].splice(spliceIndex, 0, \"\");\r\n            });\r\n        }\r\n    },\r\n\r\n    spliceRowDataVisible: function(data, index) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        if (mode === \"execution\" && (data && data.visible)) {\r\n            $.each(data.visible, function (key, value) {\r\n                var spliceIndex = index || data.visible[key].length;\r\n                data.visible[key].splice(spliceIndex, 0, true);\r\n            });\r\n        }\r\n    },\r\n\r\n    spliceRowDataEditable: function(data, index) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        if (mode === \"execution\" && (data && data.editable)) {\r\n            $.each(data.editable, function (key, value) {\r\n                var spliceIndex = index || data.editable[key].length;\r\n                data.editable[key].splice(spliceIndex, 0, true);\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n     *   Creates a set of dummy data in order to display it when rendering in design or layout mode\r\n     */\r\n    getDummyData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (properties.data) {\r\n            return properties.data;\r\n\r\n        } else {\r\n            var rowTemplate = [\"1\"];\r\n\r\n            // Add a value for each column\r\n            for (var i = 0; i < self.columns.length; i++) {\r\n                rowTemplate.push(\"\");\r\n            }\r\n\r\n            var data = {\r\n                \"page\": 1,\r\n                \"total\": 1,\r\n                \"records\": 1,\r\n                \"rows\": [rowTemplate]\r\n            };\r\n\r\n            return data;\r\n        }\r\n    },\r\n    /*\r\n     *   Submits a grid edit record request for the given id\r\n     *   Returns a deferred\r\n     */\r\n    submitEditRequest: function (id) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var xpath = properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n        return self.dataService.editGridRecord({\r\n            url: properties.editUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType\r\n        });\r\n    },\r\n    /*\r\n     *   Submits a grid edit record request for the given id\r\n     *   Returns a deferred\r\n     */\r\n    submitSaveRequest: function (id, data) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        // Check if there are deferreds to wait\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        // Calculate xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + properties.xpath + self.buildCellXpathFilter(id) : properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n        return $.when(deferredsToWait).pipe(function () {\r\n            self.startLoading();\r\n            return self.dataService.saveGridRecord({\r\n                url: properties.saveUrl,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: xpathContext,\r\n                submitData: data,\r\n                contexttype: properties.contextType,\r\n                disableServerGridValidations: data.disableServerGridValidations || false\r\n            }).pipe(function (dataResp) {\r\n                self.endLoading();\r\n                return dataResp;\r\n            }).fail(function (dataFail) {\r\n                var form = self.getFormContainer();\r\n                var message = (dataFail.responseText) ? dataFail.responseText : ((typeof dataFail == \"string\") ? dataFail : dataFail.toString());\r\n                //Convert String to object\r\n                if (typeof message == \"string\") {\r\n                    try {\r\n                        message = JSON.parse(message).message;\r\n                    } catch (e) {\r\n                        message = message.match(/\"message\":(.*)\",/)[0];\r\n                        message = message.substr(11, message.length - 13);\r\n                    }\r\n\r\n                } else if (!message.message) {\r\n                    message = dataFail;\r\n                }\r\n                form.validateForm();\r\n                form.clearValidationMessages();\r\n                form.addValidationMessage(message);\r\n            });\r\n        });\r\n    },\r\n    /*\r\n     *   Submits a grid delete record request for the given id\r\n     *   Returns a deferred\r\n     */\r\n    submitDeleteRequest: function (id) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var xpath = properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n        return self.dataService.deleteGridRecord({\r\n            url: properties.deleteUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType\r\n        }).pipe(function (data) {\r\n            if (data.type == \"validationMessages\") {\r\n                var form = self.getFormContainer();\r\n                var message = data.messages.join(\" \");\r\n                form.failHandler({message: message});\r\n            }\r\n\r\n            return data;\r\n        });\r\n    },\r\n    /*\r\n     *   Submits a grid add record request\r\n     *   Returns a deferred when done, the server returns an id for the new record\r\n     */\r\n    submitAddRequest: function () {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var request = self.dataService.addGridRecord({\r\n            url: properties.addUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType,\r\n            idPageCache: properties.idPageCache\r\n        });\r\n\r\n        var filterResponse = request.pipe(function (data) {\r\n            // Parses response\r\n            return data.idEntity;\r\n        });\r\n\r\n        return filterResponse.promise();\r\n    },\r\n    /*\r\n     *   Submits a grid rollback request\r\n     *   Returns a deferred when done\r\n     */\r\n    submitRollbackRequest: function (params) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        return self.dataService.rollbackGridAction({\r\n            url: properties.rollbackUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: params ? params.idPageCache : properties.idPageCache,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        });\r\n    },\r\n    /*\r\n     *   Collect a single cell change made in the grid to send the data when the user saves the form\r\n     */\r\n    collectGridChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        var id = params.id;\r\n        var xpath = params.xpath;\r\n        var value = params.value;\r\n        var trigger = typeof (params.trigger) !== \"undefined\" ? params.trigger : true;\r\n        var isPressed = params.pressed || false;\r\n\r\n        self.changes[id] = self.changes[id] || {};\r\n        self.changes[id][xpath] = value;\r\n\r\n        if (trigger)\r\n            self.triggerRenderChange({key: id, column: xpath, pressed: isPressed});\r\n    },\r\n    /*\r\n     *   Configures a column to perform a submit on change when the user changes a cell\r\n     */\r\n    configureColumnSubmitOnChange: function (xpath) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Build action\r\n        var action = {\r\n            commands: [{\r\n                xpath: properties.xpath,\r\n                command: 'submit-value',\r\n                argument: 'all'\r\n            }],\r\n            conditions: {\r\n                operator: 'and',\r\n                expressions: [\r\n                    {\r\n                        simple: {\r\n                            operator: 'cell-change',\r\n                            xpath: properties.xpath + '[].' + xpath,\r\n                            argumentType: 'text',\r\n                            argument: xpath\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            dependencies: [properties.xpath]\r\n        };\r\n\r\n        // Add action when form ends its rendering\r\n        $.when(self.ready())\r\n            .done(function () {\r\n                var form = self.getFormContainer();\r\n                form.addSubmitAction(xpath, action);\r\n            });\r\n    },\r\n    /*\r\n     *   Add the render data to the given collection in order to send data to the server\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var keysToDelete = [];\r\n\r\n        if (self.exclusiveChanges) {\r\n            //Add filter to parse all checks in tru to false. DON'T CHANGE CODE ORDER\r\n            for (var xpath in self.exclusiveChanges) {//Brings the xpath columns with changes\r\n                var columnExclusiveChanges = self.exclusiveChanges[xpath];\r\n                var columnEnabledChecks = self.enabledChecks[xpath];\r\n                if (columnExclusiveChanges && columnEnabledChecks) {\r\n                    // If there are any change, its needed to include as a change the filter to set all rows in false\r\n                    var xpathExclusiveFilter = properties.xpath + \"[\" + xpath + \"=true].\" + xpath;\r\n                    renderValues[xpathExclusiveFilter] = false;                    \r\n                }\r\n            }\r\n        }\r\n\r\n        for (var id in self.changes) {\r\n            // Dont collect data from totalizers \r\n            if (id != \"summary\") {\r\n                for (var columnXpath in self.changes[id]) {\r\n                    // Check if the render can submit data\r\n                    if (self.canColumnBeSent(id, columnXpath)) {\r\n                        var xpath = properties.xpath + self.buildCellXpathFilter(id) + \".\" + columnXpath;\r\n                        var value = self.changes[id][columnXpath];\r\n\r\n                        renderValues[xpath] = value;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Clean changes \r\n            keysToDelete.push(id);\r\n\r\n        }\r\n        //If any exclusive check is true, set the new value in renderValues. DON'T CHANGE CODE ORDER\r\n        if (self.exclusiveChanges) {\r\n            for (var xpath in self.exclusiveChanges) {//Brings the xpath columns with changes\r\n                var columnExclusiveChanges = self.exclusiveChanges[xpath];\r\n                var columnEnabledChecks = self.enabledChecks[xpath];\r\n                if (columnExclusiveChanges && columnEnabledChecks) {\r\n                    var checkedObject = self.exclusiveChanges[xpath];                    \r\n                    if (checkedObject && checkedObject.value){\r\n                        var columnSimpleXpathEnabled = properties.xpath + self.buildCellXpathFilter(checkedObject.key) + \".\" + xpath;                                                    \r\n                        renderValues[columnSimpleXpathEnabled] = checkedObject.value;                \r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Clean changes array in order to prevent duplicate data\r\n        // when execute SUBMITDATA in multiaction, that make and error\r\n        // in circular dependencies, specially when we add inline record\r\n        $.each(keysToDelete, function (key, v) {\r\n            delete self.changes[v];\r\n        });\r\n    },\r\n\r\n    hasChanged: function (result) {\r\n        var self = this;\r\n        if (!$.isEmptyObject(self.changes)) {\r\n            result.push(true);\r\n            return true;\r\n        } else {\r\n            if (!$.isEmptyObject(self.exclusiveChanges)) {\r\n                result.push(true);\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n     *   Check if a column data can be sent to the server\r\n     */\r\n    canColumnBeSent: function (id, columnXpath) {\r\n        var self = this, i, j, xpath;\r\n        for (i in self.columns) {\r\n            if (self.columns.hasOwnProperty(i)) {\r\n                var column = self.columns[i];\r\n                if (column.properties.type !== \"columnUserfield\") {\r\n                    if (column.properties.xpath == columnXpath) {\r\n                        var cellOverride = self.getCellOverride(id, column.columnIndex - 1);\r\n                        return column.canBeSent(id, cellOverride);\r\n                    }\r\n                } else {\r\n                    for (j in column.properties) {\r\n                        if (column.properties.hasOwnProperty(j)) {\r\n                            if (Object.prototype.toString.apply(column.properties[j]) === \"[object String]\") {\r\n                                xpath = column.properties[j].substr(column.properties[j].lastIndexOf(\".\") + 1);\r\n                                if (xpath === columnXpath) {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n    /* \r\n     *  Method to determine if the render value can be sent to the server or not\r\n     */\r\n    canBeSent: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var displayOnly = bizagi.util.parseBoolean(properties.displayOnly) || false;\r\n\r\n        // The render can be sent if it is \"display only\" and inline Edit is available\r\n        if (!displayOnly && (properties.inlineEdit || properties.inlineAdd || !$.isEmptyObject(self.changes))) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    /*\r\n     *   Return the value for a requested cell\r\n     */\r\n    getCellValue: function (key, xpath) {\r\n        var self = this;\r\n        var data = self.properties.data.rows;\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (data[i][0] == key) {\r\n                for (var j = 0; j < self.columns.length; j++) {\r\n                    if (self.columns[j].properties.xpath == xpath) {\r\n                        var result = data[i][j + 1];\r\n                        return result;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n     *\r\n     */\r\n    getCellCurrentValue: function (key, xpath) {\r\n        var self = this;\r\n\r\n        var control = self.getControlCell(key, xpath);\r\n        if (control && typeof control.getValue === \"function\") {\r\n            return control.getValue();\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n     *   Gets control\r\n     */\r\n    getControlCell: function (key, xpath) {\r\n        var self = this;\r\n        var control = null;\r\n        if (typeof (self.columns) != \"undefined\")\r\n            for (var j = 0; j < self.columns.length; j++) {\r\n                if (\r\n                    self.columns[j].properties.xpath == xpath || \r\n                    self.columns[j].properties.id == xpath ||\r\n                    self.columns[j].properties.xpath + \".\" + self.columns[j].properties.id == xpath \r\n                ) {\r\n                    control = self.columns[j].getDecorated(key);\r\n                    break;\r\n                }\r\n            }\r\n\r\n\r\n        return control;\r\n    },\r\n\r\n    changeRequired: function (argument) {\r\n        this.properties.required = argument;\r\n        this.changeRequiredLabel(argument);\r\n    },\r\n\r\n    changeRequiredLabel: function (argument) {\r\n        var control = this.getControl();\r\n\r\n        if (control.length > 0) {\r\n            if (this.getMode() !== \"execution\") {\r\n                if (bizagi.util.parseBoolean(argument) == true && this.properties.editable) {\r\n                    control.addClass(\"grid-control-required\");\r\n                } else {\r\n                    control.removeClass(\"grid-control-required\");\r\n                }\r\n            } else {\r\n                if (bizagi.util.parseBoolean(argument) == true && !this.hasValue() && this.properties.editable) {\r\n                    control.addClass(\"grid-control-required\");\r\n                } else {\r\n                    control.removeClass(\"grid-control-required\");\r\n                }\r\n            }\r\n        }\r\n\r\n        this.triggerRenderValidate();\r\n    },\r\n\r\n    /*\r\n     *   Fetch the data again and updates the content\r\n     */\r\n    refresh: function () {\r\n    },\r\n    /*\r\n     *   Sets an error on the cell\r\n     */\r\n    setError: function (key, columnXpath) {\r\n    },\r\n    /*\r\n     *   Changes the background for a cell\r\n     */\r\n    changeCellBackgroundColor: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *   Changes the background for a cell\r\n     */\r\n    changeCellColor: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *   Changes the visibility for a cell\r\n     */\r\n    changeCellVisibility: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *   Changes the editability for a cell\r\n     */\r\n    changeCellEditability: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *  Changes the required for cell\r\n     */\r\n    changeCellRequired: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *  Refresh behaviors of cell\r\n     */\r\n    changeCellProperties: function (key, xpath, argument) {\r\n\r\n    },\r\n    /*\r\n     *  Changes the max value for a cell\r\n     */\r\n    changeCellMaxValue: function (key, xpath, argument) {\r\n\r\n    },\r\n    /*\r\n     *  Changes the min value for a cell\r\n     */\r\n    changeCellMinValue: function (key, xpath, argument) {\r\n\r\n    },\r\n    /*\r\n     *  Clean data of cell\r\n     */\r\n    cleanCellData: function (key, xpath) {\r\n    },\r\n\r\n    changeEditability: function (argument) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        self.saveGrid().done(function () {\r\n\r\n            // Renders again\r\n            var tmpEditable = argument == \"Default\" ? self.originalProperties.editable: bizagi.util.parseBoolean(argument);\r\n            var properties = {properties: $.extend({editable: tmpEditable}, self.originalData)};\r\n\r\n            // Clears control\r\n            control.empty();\r\n\r\n            bizagi.rendering.render.prototype.initializeData.apply(self, [properties]);\r\n\r\n            self.initProperties();\r\n            self.changeColumnsEditability(argument);\r\n\r\n            if (typeof self.internalRenderControl == \"function\") {\r\n                $.when(self.internalRenderControl()).done(function (html) {\r\n                    control.append(html);\r\n                    self.postRenderElement(self.element);\r\n                });\r\n\r\n            }\r\n\r\n        });\r\n\r\n    },\r\n\r\n    saveGrid: function () {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n\r\n        var rows = $(\"[data-bizagi-component=rows]\", self.element).find(\"[data-new-row=true]\");\r\n        if (rows.length > 0) {\r\n            rows = $.map(rows, function (row, i) {\r\n                return $(row).data(\"business-key\");\r\n            });\r\n            self.saveInlineAddedRows(rows).done(function () {\r\n                defer.resolve();\r\n            });\r\n        } else {\r\n            defer.resolve();\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    changeColumnsEditability: function (value) {\r\n        var self = this;\r\n        var columns = self.columns || [];\r\n\r\n        $.each(columns, function (i, column) {\r\n            column.properties.editable = value == \"Default\" ? column.originalProperties.editable :  bizagi.util.parseBoolean(value);\r\n        });\r\n    },\r\n\r\n    /**\r\n     *   Refresh behaviors of cell\r\n     */\r\n    refreshCell: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var key = params.key;\r\n        var column = params.column;\r\n        var xpathContext = (params.xpathContext !== \"\") ? params.xpathContext + \".\" + self.properties.xpath + self.buildCellXpathFilter(key) : self.properties.xpath + self.buildCellXpathFilter(key);\r\n        var cell = self.getControlCell(key, params.column);\r\n        var form = self.getFormContainer();\r\n        var idForm = form.properties.id;\r\n\r\n        if (!cell) {\r\n            return;\r\n        }\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        cell.beforeToRefresh();\r\n\r\n        // Call service\r\n        return $.when(self.dataService.multiaction().refreshGridCell({\r\n            idRender: properties.id,\r\n            column: cell.properties.id,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: xpathContext,\r\n            idForm: idForm,\r\n            typeRender: cell.properties.type\r\n        })).done(function (data) {\r\n            // Extract values\r\n            var getDepthData = function (target) {\r\n                if (target && typeof target == \"object\" && target.length >= 1) {\r\n                    return (target[0].length >= 1) ? target[0][0] : target[0];\r\n                }\r\n                return \"\";\r\n            };\r\n            var newValue = getDepthData(data.rows);\r\n            var editable = getDepthData(data.editable);\r\n            if (!bizagi.util.isBoolean(editable)) {\r\n                editable = editable || true;\r\n            }\r\n            var visible = getDepthData(data.visible);\r\n            if (!bizagi.util.isBoolean(visible)) {\r\n                visible = visible || true;\r\n            }\r\n            \r\n            // Change Visibility & Editability\r\n            self.changeCellVisibility(key, column, visible);\r\n            self.changeCellEditability(key, column, editable);\r\n\r\n            // Change control value\r\n            cell.setValue(newValue);\r\n            cell.setDisplayValue(newValue);\r\n\r\n            // Trigger grid change\r\n            self.triggerRenderChange({key: key, column: column, changed: false});\r\n\r\n            // Update the affected cell manually after a refresh\r\n            //TODO:temporary solution\r\n            //review the DRAGON-5982 \r\n            if (cell.column != undefined && bizagi.util.detectDevice() == \"desktop\") {\r\n                self.updateAffectedCellManually(key, newValue, cell.column.columnIndex);\r\n            }\r\n\r\n            // Execute personalized stuff after to refresh it\r\n            self.afterToRefresh({ action: \"refreshCell\" });\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Triggers the render change event\r\n     */\r\n    triggerRenderChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        // Property to verify exporting updated grids\r\n        if (!bizagi.util.isEmpty(params) && params.changed != false)\r\n            self.properties.canBeExported = false;\r\n        self.triggerHandler(\"renderchange\", {\r\n            render: self,\r\n            surrogateKey: params.key,\r\n            column: params.column,\r\n            changed: params.changed,\r\n            rowDeleted: params.rowDeleted,\r\n            pressed: params.pressed\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Validate the grid\r\n     */\r\n    validate: function () {\r\n        this.isValid([]);\r\n    },\r\n    /* \r\n     * Public method to determine if a value is valid or not\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var bValid = true;\r\n\r\n        // Clear error message\r\n        self.hasErrors = false;\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check for required columns and null values\r\n        if (self.properties.data && self.properties.data.rows) {\r\n            var newRows = self.getDataNewRows();\r\n            // Preserve elements in data.rows\r\n            // Check required\r\n            if (newRows.length == 0 && bizagi.util.parseBoolean(self.properties.required)) {\r\n                if (!self.hasValue()) {\r\n                    message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", self.properties.displayName);\r\n                    invalidElements.push({\r\n                        xpath: self.properties.xpath,\r\n                        message: message\r\n                    });\r\n                    bValid = false;\r\n                }\r\n            }\r\n\r\n            var data = $.merge($.merge([], self.properties.data.rows), newRows);\r\n\r\n            for (var i = 0; i < self.columns.length; i++) {\r\n                var messages = [];\r\n                var uniqueMessages = {};\r\n\r\n                for (var j = 0; j < data.length; j++) {\r\n                    var value = data[j][i + 1];\r\n                    var key = data[j][0];\r\n                    var xpath = self.columns[i].properties.xpath;\r\n                    if (self.changes[key] !== undefined && self.changes[key][self.columns[i].properties.xpath] !== undefined) {\r\n                        value = self.changes[key][self.columns[i].properties.xpath];\r\n                    }\r\n\r\n                    // Check if the column is valid\r\n                    var valueValid = self.columns[i].isValueValid(key, value, messages, self.getCellOverride(key, i));\r\n                    if (!valueValid) {\r\n                        bValid = false;\r\n\r\n                        self.hasErrors = true;\r\n                        self.setError(key, self.columns[i].properties.xpath);\r\n                    }\r\n                }\r\n                for (var k = 0, messagesLength = messages.length; k < messagesLength; k++) {\r\n                    if (uniqueMessages[messages[k]] == null) {\r\n                        uniqueMessages[messages[k]] = messages[k];\r\n                    }\r\n                }\r\n\r\n                if (messages.length > 0) {\r\n                    var gridValidationMessage = self.getResource(\"render-grid-validation\").replaceAll(\"#grid#\", self.properties.displayName);\r\n                    for (key in uniqueMessages) {\r\n                        invalidElements.push({\r\n                            xpath: self.properties.xpath,\r\n                            message: gridValidationMessage + \" \" + key\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n    /*\r\n     *   Enables submit on change feature for the current render\r\n     */\r\n    configureSubmitOnChange: function () {\r\n        // Don't do anything we will trigger submit on change manually only when the grid add or edit form has been edited   \r\n    },\r\n    /*\r\n     *   Get cell override\r\n     */\r\n    getCellOverride: function (key, column) {\r\n        var self = this;\r\n\r\n        // Convert to numbers\r\n        key = Number(key);\r\n        column = Number(column);\r\n\r\n        // Find overrides\r\n        var columnProperties = self.columns[column].properties;\r\n        if (!self.cellOverrides[key])\r\n            self.cellOverrides[key] = {};\r\n        if (!self.cellOverrides[key][column]) {\r\n            self.cellOverrides[key][column] = {\r\n                visible: columnProperties.visible,\r\n                editable: columnProperties.editable,\r\n                required: columnProperties.required\r\n            };\r\n        }\r\n\r\n        return self.cellOverrides[key][column];\r\n    },\r\n\r\n    /*\r\n     * Set cell overrides based on the data\r\n     */\r\n    setCellOverrides: function (data, columns) {\r\n        var self = this;\r\n        var key;\r\n\r\n        // Init visibility overrides\r\n        if (data.visible) {\r\n            for (var i = 0, len = data.visible.length; i < len; i++) {\r\n                key = data.visible[i][0];\r\n                for (var j = 0, len_v = data.visible[i].length; j < len_v; j++) {\r\n                    // Skip key columns\r\n                    if (j > 0)\r\n                        self.getCellOverride(key, j - 1).visible = bizagi.util.parseBoolean(data.visible[i][j]);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Init editability overrides\r\n        if (data.editable) {\r\n            for (var i = 0, len = data.editable.length; i < len; i++) {\r\n                key = data.editable[i][0];\r\n                for (var j = 0, len_v = data.editable[i].length; j < len_v; j++) {\r\n                    // Skip key columns\r\n                    if (j > 0) {\r\n                        var columnEditable = columns ? bizagi.util.parseBoolean(columns[j - 1].properties.editable) : true;\r\n                        self.getCellOverride(key, j - 1).editable = columnEditable ? bizagi.util.parseBoolean(data.editable[i][j]) : false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Init required overrides\r\n        if (data.required) {\r\n            for (var i = 0, len = data.required.length; i < len; i++) {\r\n                key = data.required[i][0];\r\n                for (var j = 0, len_v = data.required[i].length; j < len_v; j++) {\r\n                    // Skip key columns\r\n                    if (j > 0)\r\n                        self.getCellOverride(key, j - 1).required = bizagi.util.parseBoolean(data.required[i][j]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*\r\n     *   Returns the row indexes for the data\r\n     */\r\n    getIndexes: function () {\r\n        var self = this;\r\n        var data = $.merge(self.properties.data.rows, self.getDataNewRows());\r\n        return $.map(data, function (item, i) {\r\n            return item[0];\r\n        });\r\n    },\r\n    /**\r\n     *  Return object with value of all new records unsaved within the grid\r\n     *  @return {object} all new records\r\n     */\r\n    getDataNewRows: function () {\r\n        var self = this;\r\n        var newRows = [];\r\n\r\n        if (typeof self.newRecords == \"object\" && !$.isEmptyObject(self.newRecords)) {\r\n            $.each(self.newRecords, function (rowKey) {\r\n                var cellValue = [];\r\n                cellValue.push(Number(rowKey));\r\n                for (var i = 0, length = self.columns.length; i < length; i++) {\r\n                    cellValue.push(self.getCellCurrentValue(rowKey, self.columns[i].properties.xpath));\r\n                }\r\n                // Add cell value row to new rows\r\n                newRows.push(cellValue);\r\n            });\r\n        }\r\n        return newRows;\r\n    },\r\n\r\n    /*\r\n     * Return the object with the required url to access the exported grid to the desired format\r\n     *  @return {object} render attributes, including id, xpathContext, idPagecache, disposition (inline or attachment), and exportType (XLS or PDF)\r\n     */\r\n    getGridExportUrl: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.getGridExportUrl({\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext || \"\",\r\n            idPageCache: properties.idPageCache,\r\n            disposition: params.disposition,\r\n            exportType: params.exportType,\r\n            sort: properties.sort,\r\n            sessionId: self.getSessionId(),\r\n            idForm: self.getFormContainer().properties.id\r\n\r\n        });\r\n    },\r\n\r\n    submitForGridChange: function () {\r\n        var self = this;\r\n        return self.submitOnChange(null, false);\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self.columns) {\r\n                $.each(self.columns, function (i, column) {\r\n                    column.dispose();\r\n                });\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    },\r\n\r\n    getEnabledChecks: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        params = params || {};\r\n        $.extend(params, {\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType,\r\n            idPageCache: properties.idPageCache,\r\n            rows: properties.rowsPerPage,\r\n            xpathfilter: params.xpath\r\n        });\r\n        // Default ajax call\r\n        var defer = new $.Deferred();\r\n        // Resolve with remote data\r\n        self.dataService.multiaction().getGridDataExclusivesSelected(params).done(function (data) {\r\n            // Resolve with fetched data\r\n            properties.page = data.page;\r\n            properties.records = data.records;\r\n            properties.totalPages = data.totalPages;\r\n\r\n            // Check RTL\r\n            if (self.isRTL()) {\r\n                data.rows = self.changeOrderData(data.rows);\r\n            }\r\n            defer.resolve(data);\r\n        });\r\n        return defer.promise();\r\n    },\r\n\r\n    buildCellXpathFilter: function (key) {\r\n        if (bizagi.util.isNumeric(key)) return \"[id=\" + key + \"]\";\r\n        return \"[id='\" + key + \"']\";\r\n    },\r\n\r\n    cleanNewRecords: function () {\r\n        // Mark it as saved\r\n        this.newRecords = {};\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Customizes render background color\r\n     *\r\n     * This method is called when the backgroud color is setted by Form Designer\r\n     *\r\n     * @param color\r\n     */\r\n    changeBackgroundColor: function (color) {\r\n        this._super(color);\r\n\r\n        var control = this.getControl();\r\n        control.find(\".bz-rn-grid-header-title\").css(\"background-color\", color, \"!important\");\r\n        control.find(\".bz-rn-grid-container-foother\").css(\"background-color\", color, \"!important\");\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Check has header format\r\n     * @returns {boolean}\r\n     */\r\n    hasColorHeader: function () {\r\n        var headerFormat = this.properties.headerFormat || {};\r\n\r\n        return headerFormat ? !bizagi.util.isEmpty(headerFormat.color) : false;\r\n    },\r\n\r\n    /**\r\n     * Check if the orientation is RTL\r\n     * @param parent\r\n     * @param orientation\r\n     * @returns {*|boolean|boolean}\r\n     */\r\n    isRTLOrientation: function(parent, orientation){\r\n        if ((!orientation || orientation === \"auto\") && parent) {\r\n            return this.isRTLOrientation(parent.parent, parent.properties.orientation);\r\n        }\r\n\r\n        return /^rtl$/i.test(orientation);\r\n    },\r\n\r\n    /**\r\n     * Check If has changes for send to server\r\n     * @returns {boolean}\r\n     */\r\n    canBeExport: function () {\r\n        var self = this;\r\n        var renderValues = {};\r\n\r\n        for (var id in self.changes) {\r\n            // Don't collect data from totalizers\r\n            if (id !== \"summary\") {\r\n                for (var columnXpath in self.changes[id]) {\r\n                    // Check if the render can submit data\r\n                    if (self.canColumnBeSent(id, columnXpath)) {\r\n                        var xpath = self.properties.xpath + self.buildCellXpathFilter(id) + \".\" + columnXpath;\r\n                        var value = self.changes[id][columnXpath];\r\n\r\n                        renderValues[xpath] = value;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return Object.keys(renderValues).length === 0;\r\n    }, \r\n    getExclusiveChangeByRow: function(idRow){\r\n        var value = {};\r\n        for (var xpath in this.enabledChecks) {\r\n            if (this.enabledChecks.hasOwnProperty(xpath)) {\r\n                var obj = (this.enabledChecks[xpath] || []).find(function(el){\r\n                    return el.id == idRow && el.changed;\r\n                });\r\n                if (obj){\r\n                    value[xpath] = obj.value;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    },\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Hidden Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for hiddens\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.hidden\", {}, {\r\n\r\n    /**\r\n     * Returns the in-memory processed element\r\n     */\r\n    renderControl: function () {\r\n        if (this.getMode() === \"design\") {\r\n            return \"<div>\" + bizagi.localization.getResource(\"render-hidden-displayName\") + \"</div>\";\r\n        } else {\r\n            return \"<div />\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var properties = this.properties;\r\n\r\n        // Call base\r\n        this._super();\r\n\r\n        // Set the initial value\r\n        if (properties.value !== undefined) {\r\n            this.setDisplayValue(properties.value);\r\n        }\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Label Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for labels\r\n */\r\n$.Class.extend(\"bizagi.rendering.label\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // A label itself is never \"required\" as other controls\r\n        var properties = self.properties;\r\n        properties.required = false;\r\n\r\n        // Set properties\r\n        self.properties.displayType = \"label\";\r\n        //self.properties.labelAlign = self.originalProperties.labelAlign || \"left\";\r\n        self.properties.displayName = data.properties.displayName || \"\";\r\n\r\n        if (bizagi.util.parseBoolean(self.properties.allowDinamiclabel)) {\r\n            this.properties.displayName = data.properties.displayName || bizagi.localization.getResource(\"render-label-default-display-name\");\r\n        }\r\n\r\n        self.bindingValue();\r\n\r\n        // Calculate layout properties\r\n        self.calculateInitialLayoutProperties();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();\r\n        // Just apply display-type: label, align it to the left\r\n        this.changeDisplayOption(\"label\");\r\n        //this.changeLabelAlign(this.properties.labelAlign || \"left\");\r\n\r\n        if (typeof this.configureHelpText == \"function\")\r\n            this.configureHelpText();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this._super();\r\n        // Just apply display-type: label, align it to the left\r\n        this.changeDisplayOption(\"label\");\r\n        this.changeLabelAlign(this.properties.labelAlign || \"left\");\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param {} invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Automatically this render is valid, so we can't check a required label\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    bindingValue: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.allowDinamiclabel && self.properties.value) {\r\n            if (typeof (self.properties.value) === \"object\" && self.properties.value[0]) {\r\n                self.properties.displayName = self.properties.value[0].value;\r\n            } else if (typeof (self.properties.value) === \"string\" && self.properties.value !== \"\") {\r\n                self.properties.displayName = self.properties.value;\r\n            }\r\n        }\r\n    },\r\n\r\n    controlValueIsChanged: function(){\r\n        //Labels never change\r\n        return false;\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: Bizagi Render Search Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for search renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.search\", {}, {\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        properties.searchForms = properties.searchForms || [];\r\n\r\n        // Default maxRecords is 20\r\n        properties.maxRecords = Number(properties.maxRecords) || 20;\r\n        properties.advancedSearch = (bizagi.util.parseBoolean(properties.advancedSearch) === null) ? false : bizagi.util.parseBoolean(properties.advancedSearch);\r\n        properties.allowSuggest = bizagi.util.parseBoolean(properties.allowSuggest) !== null ? bizagi.util.parseBoolean(properties.allowSuggest) : false;\r\n        properties.allowFullSearch = properties.allowFullSearch || false;\r\n        properties.allowAdd = bizagi.util.parseBoolean(properties.allowAdd) || false;\r\n        properties.allowTyping = bizagi.util.parseBoolean(properties.allowTyping) !== null ? bizagi.util.parseBoolean(properties.allowTyping) : false;\r\n        properties.allowTyping = bizagi.util.parseBoolean(properties.allowSuggest) ? true : properties.allowTyping;\r\n        properties.allowClear = bizagi.util.parseBoolean(properties.allowClear) !== null ? bizagi.util.parseBoolean(properties.allowClear) : false;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) !== null ? bizagi.util.parseBoolean(properties.editable) : true;\r\n\r\n        // This length defines the behavior of the suggest, 2 characters are used by default meaning after 2 characters are written the search will take place\r\n        properties.searchLength = properties.searchLength || 2;\r\n\r\n        // Expire local storage cache\r\n        properties.enableLocalStorage = false;\r\n        properties.expireCache = 1000 * 60 * 15; // 15 minutes\r\n\r\n        // QAF-3297 - Compatibility for old versions of advanced search where the \"submitOnChange\" property default is true\r\n        // New \"submitVersion\" property default is 2\r\n        if (properties.advancedSearch && self.getMode() === \"execution\") {\r\n            properties.submitOnChange = bizagi.util.parseBoolean(properties.submitOnChange) || false;\r\n            properties.submitOnChange = (properties.submitVersion || 1) > 1 ? properties.submitOnChange : true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"search\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            allowTyping: properties.allowTyping,\r\n            advancedSearch: properties.advancedSearch,\r\n            allowSuggest: properties.allowSuggest,\r\n            editable: properties.editable,\r\n            allowClear: properties.allowClear,\r\n            hasValue: self.hasValue(),\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Fetch the data into a deferred\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    getData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        var form = self.getFormContainer();\r\n        var contextType = form.getContextType() || form.params.contexttype || false;\r\n\r\n        params = params || {};\r\n\r\n        // Verify context type\r\n        if (self.properties.contexttype) {\r\n            params.h_contexttype = self.properties.contexttype;\r\n        } else if (contextType) {\r\n            params.h_contexttype = contextType;\r\n        }\r\n\r\n        params.h_contexttype = self.properties.enableQuerySuggestBehavior ? \"metadata\" : params.h_contexttype;\r\n\r\n        // QA-471 When the contexttype is metadata it does not send xpathcontext\r\n        if (params && params.h_contexttype && params.h_contexttype === 'metadata') {\r\n            properties.xpathContext = '';\r\n        }\r\n\r\n        // BA35025 - JFA\r\n        if (properties.term.indexOf(\"\\'\") > -1) {\r\n            var regexC = new RegExp(\"\\'\", \"g\");\r\n            properties.term = properties.term.replace(regexC, \"\\\\'\\\\'\");\r\n        }\r\n\r\n        // QAF-6448 - JFA\r\n        if (properties.term.indexOf(\"\\\"\") > -1) {\r\n            var regexC = new RegExp(\"\\\"\", \"g\");\r\n            properties.term = properties.term.replace(regexC, \"\\\"\");\r\n        }\r\n\r\n        // Resolve with remote data\r\n        self.dataService.multiaction().getSearchData({\r\n            url: properties.dataUrl,\r\n            contexttype: params.h_contexttype,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            term: (properties.allowFullSearch) ? \"%\" + properties.term : properties.term,\r\n            extra: params\r\n        }).done(function (data) {\r\n            // Resolve with fetched data\r\n            properties.data = data;\r\n            defer.resolve(properties.data);\r\n        }).fail(function (data) {\r\n            var hideStatus = data.hideStatus || false;\r\n\r\n            defer.resolve({});\r\n\r\n            if (!hideStatus) {\r\n                self.trigger(\"onSearchError\", data);\r\n            }\r\n        });\r\n\r\n        return defer.promise(defer);\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param {} value\r\n     * @param {} triggerEvents\r\n     * @returns {}\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        triggerEvents = triggerEvents !== undefined ? triggerEvents : true;\r\n\r\n        self._super(value, triggerEvents);\r\n\r\n        if (value != undefined) {\r\n            this.value = value;\r\n            this.selectedValue = value.label;\r\n        } else {\r\n            this.value = null;\r\n            this.selectedValue = null;\r\n        }\r\n    },\r\n\r\n    /* Maps the value, when this one comes from actions*/\r\n    mapValue: function (value) {\r\n        if (value && value.fromAction) {\r\n            return {\r\n                id: value.value,\r\n                value: value.label,\r\n                label: value.label\r\n            }\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var xpath = self.properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            // Remove empty validation for value for combos\r\n            if (!bizagi.util.isEmpty(xpath) && value !== null && typeof (value) !== \"undefined\") {\r\n                // Add a validation because sometimes value contains an empty not null object\r\n                if (typeof (value) == \"object\" && value.id === undefined)\r\n                    return;\r\n                // Add the value to the server\r\n                renderValues[xpath] = value;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Submits the selected data to the server in order to be saved\r\n     * @returns {}\r\n     */\r\n    submitData: function () {\r\n        var self = this;\r\n        var data = {};\r\n\r\n        // Add current data\r\n        if (!self.grid) {\r\n            data[self.properties.xpath] = self.getValue();\r\n        }\r\n\r\n        // Executes submit on change\r\n        self.submitOnChange(data, undefined, false);\r\n    },\r\n\r\n    /**\r\n     * Check if control is valid or not\r\n     * @param {} invalidElements\r\n     * @returns {}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        return this._super(invalidElements);\r\n    },\r\n\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (typeof (value) == \"undefined\" || value == null) return false;\r\n\r\n        if (typeof value === \"object\" && value.id !== \"\" && typeof (value.id) !== \"undefined\") return true;\r\n        return !bizagi.util.isEmpty(value);\r\n    },\r\n\r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n        return bizagi.util.formatItem(value);\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Text Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for text renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.text\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        if (properties.regularExpressionExpression) {\r\n            var message = properties.regularExpressionMessage || this.getResource(\"render-text-regular-expression-default-message\");\r\n            properties.regularExpression = {\"expression\": properties.regularExpressionExpression, \"message\": message};\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*}\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"text\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            value: this.properties.value,\r\n            isEmptyField: typeof (this.properties.value) === \"undefined\",\r\n            helpText: this.properties.helpText,\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"text-read-only\");\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.isString(value)) {\r\n            value = value.replaceAll(\"`\", \"&#96;\");\r\n        }\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {value: value, editable: this.properties.editable});\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n\r\n        this.input = this.getControl().find(\"input\");\r\n\r\n        //Attach event for retype double\r\n        if (this.properties.retype === \"double\")\r\n            this.attachRetypeDouble();\r\n    },\r\n\r\n    /**\r\n     * function virtual implements on children (desktop,samrtphone...).\r\n     */\r\n    attachRetypeDouble: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Check mask property\r\n        if (properties.mask)\r\n            self.input.mask({mask: properties.mask});\r\n\r\n        // Attach change event\r\n        self.input.bind(\"change\", function () {\r\n\r\n            // Updates internal value\r\n            self.setValue(self.input.val(), false);\r\n\r\n            // Check that the value is valid\r\n            var validationMessages = [];\r\n            if (properties.retype !== \"duplicate\") {\r\n                if (self.isValid(validationMessages) || typeof (properties.regularExpression) === \"undefined\") {\r\n                    // Update value again triggering handlers\r\n                    self.setValue(self.input.val(), true);\r\n                }\r\n            }\r\n\r\n        }).keypress(function (e) {\r\n            e = window.event || e;\r\n            var keyUnicode = e.charCode || e.keyCode;\r\n\r\n            if (e !== undefined) {\r\n                if (keyUnicode == 13) {\r\n                    $(this).trigger(\"change\");\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @returns {*}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n\r\n        // When the form have big data, block browser executing RegExp. QAF-1418.\r\n        // Check regular expression\r\n        if (typeof value == \"string\") {\r\n            if (properties.regularExpression) {\r\n                var regex = new RegExp(\"\");\r\n                try {\r\n                    regex = new RegExp(properties.regularExpression.expression);\r\n                } catch (e) {\r\n                    if (bizagi.override.showDesignValidations) {\r\n                        bizagi.log(e);\r\n                        invalidElements.push({xpath: properties.xpath, message: e.message});\r\n                        bValid = false;\r\n                    }\r\n                }\r\n\r\n                if (value && ((value.match(new RegExp(\".*?(<|\\\\u003C)(.+?)(>|\\\\u003E)(.?)|eval\\\\(|eval\\\\u0028\", \"g\"))) || (!value.match(regex) && self.properties && self.properties.xpath === \"userName\"))) {\r\n                    var message = properties.regularExpression.message;\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                } else {\r\n                    if (value && ((value.match(new RegExp(\".*?(<|\\\\u003C)(.+?)(>|\\\\u003E)(.?)|eval\\\\(|eval\\\\u0028\", \"g\"))) || (!value.match(regex)))) {\r\n                        var message = properties.regularExpression.message;\r\n                        invalidElements.push({xpath: properties.xpath, message: message});\r\n                        bValid = false;\r\n                    }\r\n                }\r\n            } else {\r\n                // Strange behavior on IE. When matchs are united on IE have is very slow\r\n                // solution, divide matchs\r\n                //.*? means for more information search: \"Lazy matching regexp\"\r\n                if (value && (value.match(new RegExp(\".*?eval\\\\(\", \"g\"))) && (value.match(new RegExp(\".*?eval\\\\u0028\", \"g\")))) {\r\n                    if (properties.editable) {\r\n                        var message = this.getResource(\"render-text-regular-expression-default-message\");\r\n\r\n                        invalidElements.push({xpath: properties.xpath, message: message});\r\n                        bValid = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n\r\n        if (!bizagi.util.parseBoolean(self.properties.editable)) {\r\n            // Render as simple value\r\n            if (typeof (value) === \"string\") {\r\n                // Replace line breaks for html line breaks\r\n                var valueToDisplay = bizagi.util.decodedDisplayValue(self.getDisplayValue());\r\n\r\n                control.html(\"<label class='readonly-control'>\" + valueToDisplay + \"</label>\");\r\n            } else {\r\n                if (bizagi.util.isNull(value)) {\r\n                    control.html(\"\");\r\n                }\r\n            }\r\n        }\r\n\r\n        // Set internal value\r\n        self.setValue(decodedValue, false);\r\n    },\r\n\r\n    /**\r\n     * Extend setValue to fix all encode data from database\r\n     * @param value\r\n     */\r\n    setValue: function (value) {\r\n        this._super(value);\r\n    },\r\n\r\n    /**\r\n     * Helptext tooltip\r\n     * @param {} control\r\n     * @param {} currentValue\r\n     * @param {} currentTitle\r\n     */\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        control.data(\"oldValue\", currentValue);\r\n        control.val(\"\");\r\n        \r\n        if(control.data('ui-tooltip')) control.tooltip('destroy');  \r\n        \r\n        control.attr(\"title\", currentTitle);\r\n        control.tooltip();\r\n\r\n        var toolTipZindex = $.getMaxZindex();\r\n        control.tooltip().on(\"tooltipopen\", function (event, ui) {\r\n            ui.tooltip.zIndex(toolTipZindex);\r\n        });\r\n\r\n        // Create new tooltip\r\n        control.tooltip(\"open\");\r\n\r\n        setTimeout(function () {\r\n            control.focus();\r\n        }, 100);\r\n    },\r\n\r\n\r\n    //#region No side effects funtions    \r\n    /**\r\n     * Gets the string with the correct size\r\n     * @param {string} value String value to validate\r\n     * @param {Int} maxLength Maximum size of the string\r\n     * @returns {string} String value validated\r\n     */\r\n    validateValue: function (value, maxLength) {\r\n        if (maxLength < 1 || value.length <= maxLength) return value;\r\n        return value.substr(0, maxLength)\r\n    }\r\n    //#endregion No side effects funtions\r\n\r\n});","/**\r\n *   Name: Bizagi Render Button Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for button renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.button\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.caption = properties.caption || \"\";\r\n\r\n        // set default value from normal to value\r\n        properties.displayType = \"value\";\r\n\r\n        // A button cannot be required\r\n        properties.required = false;\r\n\r\n        // This flag enable/disable default behaviors of buttons\r\n        // auto save and execute rule\r\n        properties.preventDefault = properties.preventDefault || false;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"button\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {\r\n            caption: self.properties.caption,\r\n            cssClass: self.properties.cssclass || \"\",\r\n            editable: self.properties.editable\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {}\r\n     */\r\n    renderReadOnly: function () {\r\n        // Executes the same template than normal render\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        // call base\r\n        this._super();\r\n\r\n        this.getLabel().addClass('bz-form-label--hidden');\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render behaviour after to be processed\r\n     */\r\n    postRender: function () {\r\n        // call base\r\n        this._super();\r\n\r\n        this.getLabel().addClass('bz-form-label--hidden');\r\n    },\r\n\r\n    /**\r\n     * Saves the form\r\n     * @returns {}\r\n     */\r\n    saveForm: function () {\r\n        var form = this.getFormContainer();\r\n        return form.saveForm();\r\n    },\r\n\r\n    /**\r\n     * Executes the button action\r\n     * @returns {}\r\n     */\r\n    executeButton: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = properties.xpathContext || \"\";\r\n\r\n        if (properties.submitOnChangexpathContextRow) {\r\n            xpathContext = xpathContext ? xpathContext + \".\" + properties.submitOnChangexpathContextRow : properties.submitOnChangexpathContextRow;\r\n        }\r\n\r\n        // Set the loading feedback\r\n        self.getFormContainer().startLoading();\r\n\r\n        return self.dataService.multiaction().executeButton({\r\n            idRender: properties.id,\r\n            xpath: properties.xpath || \"\",\r\n            xpathContext: xpathContext || \"\",\r\n            idPageCache: properties.idPageCache\r\n        }).always(function () {\r\n            self.getFormContainer().endLoading();\r\n            return arguments ? arguments[0] : undefined;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Refresh the current form\r\n     * @returns {}\r\n     */\r\n    refreshForm: function () {\r\n        var form = this.getFormContainer();\r\n        form.refreshForm(this.properties.id);\r\n    },\r\n\r\n    /**\r\n     * Process the button actions workflow\r\n     * @returns {}\r\n     */\r\n    processButton: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.editable) {\r\n            // Save the form prior opening the dialog\r\n            self.runButtonAction();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Triggers the render change event\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    triggerRenderChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n\r\n        var pressed = params.pressed || false;\r\n\r\n        self.triggerHandler(\"renderchange\", {render: self, pressed: pressed});\r\n    },\r\n\r\n    /**\r\n     * Run button actions\r\n     * @returns {}\r\n     */\r\n    runButtonAction: function () {\r\n        var self = this;\r\n\r\n        // Save the form prior opening the dialog\r\n        self.getFormContainer().clearValidationMessages();\r\n\r\n        self.saveForm().pipe(function () {\r\n            return self.executeButton();\r\n        }).done(function (result) {\r\n\r\n            if (result == null || result == true || result.result === \"success\" || result.type === \"success\") {\r\n                return self.refreshForm();\r\n            } else if (result.type === \"validationMessages\") {\r\n                try {\r\n                    // Add validation messages\r\n                    self.getFormContainer().addValidationMessage(result.messages);\r\n                } catch (e) {\r\n                }\r\n            }\r\n        }).fail(function (error) {\r\n\r\n            try {\r\n                // Add error messages\r\n                var error_obj = bizagi.util.getErrorFormatted(error);\r\n                var message = typeof (error_obj) === \"undefined\" ? {\r\n                    \"message\": bizagi.localization.getResource(\"workportal-general-error\")\r\n                } : error_obj;\r\n\r\n                self.getFormContainer().failHandler(message);\r\n            } catch (e) {\r\n            }\r\n\r\n        });\r\n\r\n    },\r\n\r\n    processLayout: function (isLabelFormat, format) {\r\n        if (isLabelFormat) {\r\n            this.changeBackgroundColor(format.background);\r\n            this._super(!isLabelFormat, format);\r\n        }\r\n    },\r\n\r\n    changeBackgroundColor: function (color) {\r\n        if (typeof color === \"undefined\") return this;\r\n\r\n        if (color !== \"none\") {\r\n            this.getElementsToStylize(this.getControl()).style(\"background\", color, \"important\");\r\n        } else {\r\n            this.getElementsToStylize(this.getControl()).css(\"background\", \"\");\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    getElementsToStylize: function ($context) {\r\n        return $(\"input\", $context);\r\n    },\r\n\r\n    /**\r\n     *  Method to determine if the render value can be sent to the server or not\r\n     * @returns {}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Fileprint Class\r\n *   Author: Christian Collazos\r\n *   Comments:\r\n *   -   This script will define basic stuff for fileprint renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.fileprint\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.caption = (properties.caption && properties.caption != \" \")? properties.caption : \"render-fileprint-property-caption\";\r\n        properties.filesCount = properties.filesCount ? properties.filesCount : 0;\r\n\r\n        // set default value from normal to value\r\n        properties.displayType = \"value\";\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n\r\n        // A button cannot be required\r\n        properties.required = false;\r\n    },\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"fileprint\");\r\n\r\n        return $.fasttmpl(template, {\r\n            caption: properties.caption\r\n        });\r\n    },\r\n    /*\r\n    *   Method to render non editable values\r\n    */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n\r\n        // Executes the same template than normal render\r\n        return self.renderControl();\r\n    },\r\n\r\n    /*\r\n    *   get the fileprint url\r\n    */\r\n    getFilePrintUrl: function (disposition) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.getFilePrintUrl({\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext || \"\",\r\n            idPageCache: properties.idPageCache,\r\n            disposition: disposition,\r\n            sessionId: self.getSessionId()\r\n        });\r\n\r\n    },\r\n\r\n    /*\r\n    *   Refresh the current form\r\n    */\r\n    refreshForm: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var form = self.getFormContainer();\r\n        form.refreshForm(properties.id);\r\n    },\r\n\r\n     /*\r\n    *   Saves the form\r\n    */\r\n    saveForm: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        return form.saveForm();\r\n    }\r\n});","/**\r\n *   Name: Bizagi Render Simple Link Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for link renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.link\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Set properties\r\n        var properties = this.properties;\r\n        properties.required = false;\r\n        properties.displayType = \"value\";\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"link\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {\r\n            displayName: self.properties.displayName,\r\n            align: self.properties.valueAlign,\r\n            editable: self.properties.editable\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        // Executes the same template than normal render\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Automatically this render is valid, so we can't check a required link\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Do nothing\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        return false;\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render Geolocation control\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for geolocation renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.geolocation\", {}, {\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {} data\r\n     */\r\n    init: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n        this.geolocation = window.navigator.geolocation;\r\n\r\n        var properties = this.properties;\r\n        properties.allowUpdate = bizagi.util.parseBoolean(properties.allowUpdate) === true;\r\n\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"geolocation\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, self.properties);\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param {} invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Call base\r\n        return this._super(invalidElements);\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Set internal value\r\n        this.setValue(value, false);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     * @returns {}\r\n     */\r\n    configureHandlers: function () {\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} succes_callback\r\n     * @param {} fail_callback\r\n     */\r\n    getCurrentPosition: function (succes_callback, fail_callback) {\r\n        var self = this;\r\n\r\n        if (typeof (self.geolocation) === \"undefined\") {\r\n            if (fail_callback)\r\n                fail_callback(bizagi.localization.getResource(\"render-control-unsuported-by-browser\").replace(\"{0}\", self.properties.type));\r\n            return;\r\n        }\r\n\r\n        var onSuccess = function (position) {\r\n            if (succes_callback)\r\n                succes_callback(position);\r\n        };\r\n\r\n        var onError = function (error) {\r\n            var strMessage = self.getErrorMessage(error);\r\n\r\n            if (fail_callback)\r\n                fail_callback(strMessage);\r\n        };\r\n\r\n        return self.geolocation.getCurrentPosition(onSuccess, onError);\r\n    },\r\n\r\n    /**\r\n     * Get message of error\r\n     * @param error\r\n     * @returns {*|string}\r\n     */\r\n    getErrorMessage: function (error) {\r\n        var strMessage = \"\";\r\n\r\n        // Check for known errors\r\n        switch (error.code) {\r\n            case error.PERMISSION_DENIED:\r\n            case 1:\r\n                strMessage = bizagi.localization.getResource(\"render-geolocation-permission-denied\");\r\n                break;\r\n            case error.POSITION_UNAVAILABLE:\r\n            case 2:\r\n                strMessage = bizagi.localization.getResource(\"render-geolocation-position-unavailable\");\r\n                break;\r\n            case error.TIMEOUT:\r\n            case 3:\r\n                strMessage = bizagi.localization.getResource(\"render-geolocation-timeout\");\r\n                break;\r\n            default:\r\n                strMessage = \"WD: \" + bizagi.localization.getResource(\"render-geolocation-permission-denied\");\r\n                break;\r\n        }\r\n\r\n        return strMessage;\r\n    },\r\n\r\n    /**\r\n     * Change precision number of coordinates\r\n     * @param data\r\n     * @returns {*}\r\n     */\r\n    performPrecision: function (data) {\r\n        var geolocation = data.split(\" \") || \"\";\r\n\r\n        if (!geolocation) return data;\r\n\r\n        try {\r\n            var latitude = parseFloat(geolocation[0].trim());\r\n            var longitude = parseFloat(geolocation[1].trim());\r\n\r\n            return latitude.toPrecision(10) + \" \" + longitude.toPrecision(10);\r\n        } catch (e) {\r\n            return data;\r\n        }\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Render Association Class\r\n*   Author: Edward Morales\r\n*   Comments:\r\n*   -   This script will define basic stuff for association renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.association\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        var properties = self.properties;\r\n\r\n        // Fill default properties\r\n        properties.property = \"flipped\";\r\n        properties.idRender = self.properties.id;\r\n        properties.allowFlip = (typeof properties.allowFlip != \"undefined\") ? bizagi.util.parseBoolean(properties.allowFlip) : true;\r\n        properties.flipped = (typeof properties.flipped != \"undefined\") ? bizagi.util.parseBoolean(properties.flipped) : false;\r\n        properties.flipstate = properties.flipped;\r\n\r\n\r\n        // data of entities (left and right)\r\n        properties.leftData = properties.leftData || [];\r\n        properties.rightData = properties.rightData || [];\r\n\r\n        if (properties.value) {\r\n            self.processPropertyValue();\r\n        }\r\n    },\r\n\r\n\r\n\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"association\");\r\n        var def = new $.Deferred();\r\n\r\n        self.properties.property = \"flipped\";\r\n        self.properties.idRender = self.properties.id;\r\n\r\n        // Define flipped\r\n        $.when(self.getFlipAssociation())\r\n            .done(function (flip) {\r\n\r\n                // Make json base, create self.properties.formatJson\r\n                self.makeJsonBase();\r\n\r\n                self.properties.flipped = bizagi.util.parseBoolean(flip) || false;\r\n\r\n                var html = $.fasttmpl(template, self.properties, {\r\n                    getColumnData: self.getColumnData,\r\n                    getRightAssociation: self.getRightAssociation\r\n                });\r\n\r\n                /* by default need set self.properties.formatJson */\r\n                self.setValue(JSON.encode(self.properties.formatJson));\r\n\r\n                def.resolve(html);\r\n            });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n\r\n    /*\r\n    * Returns the flip state\r\n    */\r\n    getFlipAssociation: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        if (mode == \"execution\")\r\n            return self.dataService.getFlipAssociation(self.properties);\r\n\r\n        return false;\r\n    },\r\n\r\n    /* \r\n    *   Gets the display value of the render\r\n    */\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n        var value = self.getValue();\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Get the template \r\n    */\r\n    getTemplateName: function () {\r\n        return \"association\";\r\n    },\r\n\r\n\r\n    /**\r\n    * Get Left Data, verify if flipper flags sets true\r\n    * \r\n    * @param column {'0'||'1'}\r\n    */\r\n    getColumnData: function () {\r\n        var self = this;\r\n        var properties = self.data;\r\n        var data = [];\r\n        var associationData = properties.flipped ? properties.rightData : properties.leftData;\r\n\r\n        $.each(associationData, function(key, item) {\r\n            data.push({ id: item.id, value: item.value });\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n    * Association of right elements\r\n    */\r\n    getRightAssociation: function (leftId) {\r\n        var self = this;\r\n        var properties = self.data;\r\n        var association = [];\r\n\r\n\r\n        var isChecked = function (leftId, idRight) {\r\n            var checked = false;\r\n            $.each(properties.formatJson.value, function (key, value) {\r\n                if (!checked && value.id == leftId && value.value.indexOf(idRight) >= 0) {\r\n                    checked = true;\r\n                }\r\n            });\r\n\r\n            return checked;\r\n        };\r\n\r\n        // create association and check element\r\n        if (properties.flipped) {\r\n            // left element\r\n            $.each(properties.leftData, function (key, data) {\r\n                association.push({\r\n                    id: data.id,\r\n                    name: data.value,\r\n                    checked: isChecked(data.id, leftId)\r\n                });\r\n\r\n            });\r\n        } else {\r\n            $.each(properties.rightData, function (key, data) {\r\n                association.push({\r\n                    id: data.id,\r\n                    name: data.value,\r\n                    checked: isChecked(leftId, data.id)\r\n                });\r\n            });\r\n        }\r\n\r\n        return association;\r\n    },\r\n\r\n\r\n    removeElement: function (leftId, rightId) {\r\n        var self = this;\r\n\r\n        $.each(self.properties.formatJson.value, function (key, data) {\r\n            if (self.properties.flipped) {\r\n                if (data.id == rightId) {\r\n                    // Remove right element from left panel\r\n                    $.each(self.properties.formatJson.value[key][\"value\"], function (removeKey, removeValue) {\r\n                        if (leftId == removeValue) {\r\n                            // Splice from array\r\n                            self.properties.formatJson.value[key][\"value\"].splice(removeKey, 1);\r\n                        }\r\n                    });\r\n                }\r\n            } else if (data.id == leftId) {\r\n                // Remove right element from left panel\r\n                $.each(self.properties.formatJson.value[key][\"value\"], function (removeKey, removeValue) {\r\n                    if (rightId == removeValue) {\r\n                        // Splice from array\r\n                        self.properties.formatJson.value[key][\"value\"].splice(removeKey, 1);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        self.setValue(JSON.encode(self.properties.formatJson));\r\n    },\r\n\r\n\r\n    addElement: function (leftId, rightId) {\r\n        var self = this;\r\n\r\n        $.each(self.properties.formatJson.value, function (key, data) {\r\n            if (self.properties.flipped) {\r\n                if (data.id == rightId) {\r\n                    // Add right element to left panel\r\n                    self.properties.formatJson.value[key][\"value\"].push(leftId);\r\n                }\r\n            } else if (data.id == leftId) {\r\n                // Add right element to left panel\r\n                self.properties.formatJson.value[key][\"value\"].push(rightId);\r\n            }\r\n        });\r\n        self.setValue(JSON.encode(self.properties.formatJson));\r\n    },\r\n\r\n    makeJsonBase: function () {\r\n        var self = this;\r\n        self.properties.formatJson = self.properties.formatJson || {\r\n            leftXpath: self.properties.leftXpath,\r\n            rightXpath: self.properties.rightXpath,\r\n            leftFactName: self.properties.leftFactName,\r\n            rightFactName: self.properties.rightFactName,\r\n            value: self.properties.value\r\n        };\r\n    },\r\n\r\n\r\n    /*\r\n    *   Check if a render has no value for required validation\r\n    */\r\n    hasValue: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.formatJson) {\r\n            var values = self.properties.formatJson.value;\r\n        } else {            \r\n            values = self.properties.value;\r\n        }\r\n       \r\n\r\n        for (var i = 0, l = values.length; i < l; i++) {\r\n            var data = values[i];\r\n            if (data && data.value.length > 0) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    /*\r\n    * This method process the value.\r\n    * changes the format to send request\r\n    */\r\n    processPropertyValue: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var values = properties.value;\r\n        var result = [];\r\n\r\n        for (var i = 0, l = values.length; i < l; i++) {\r\n            var value = values[i];\r\n            result.push({ id: value[0], value: value[1] });\r\n        }\r\n\r\n        properties.value = result;\r\n    }\r\n});","/**\r\n *   Name: Bizagi Render Upload Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for uploads\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.upload\", {}, {\r\n    /***\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        var form = self.getFormContainer();\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        var maxFileSizeOfProperty = Number(properties.maxSize) || 0;\r\n        var maxFileSizeOfUser = typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\" ? Number(BIZAGI_SETTINGS.UploadMaxFileSize) : 4091904;\r\n\r\n        properties.maxSize = maxFileSizeOfProperty || maxFileSizeOfUser;\r\n        properties.maxfiles = Number(properties.maxfiles) || 999;\r\n        properties.validExtensions = properties.validExtensions || \"\";\r\n\r\n        if (properties.validExtensions.length > 0 && properties.validExtensions.indexOf(\".\") < 0) {\r\n            var singleExtensions = properties.validExtensions.replace(/\\ /gi, '').split(\";\");\r\n            var defExtensions = [];\r\n\r\n            for (var i = 0; i < singleExtensions.length; i++) {\r\n                if (singleExtensions[i].length > 0) {\r\n                    defExtensions.push(\"*.\" + singleExtensions[i]);\r\n                } else {\r\n                    //Removes the empty element\r\n                    var index = singleExtensions.indexOf(singleExtensions[i]);\r\n                    singleExtensions.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            properties.validExtensions = defExtensions.join(\";\");\r\n        }\r\n\r\n        properties.addUrl = properties.addUrl || self.dataService.getUploadAddUrl();\r\n        properties.deleteUrl = properties.deleteUrl || undefined;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) || false;\r\n        properties.allowDelete = (bizagi.util.parseBoolean(properties.allowDelete) !== null && properties.editable) ? bizagi.util.parseBoolean(properties.allowDelete) : false;\r\n\r\n        properties.contexttype = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : \"\";\r\n        properties.allowSendInMail = properties.allowSendInMail || false;\r\n\r\n        // Set files property\r\n        self.files = properties.value || [];\r\n        self.filesCount = self.files.length;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"upload\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            xpath: bizagi.util.encodeXpath(self.getUploadXpath()),\r\n            editable: properties.editable,\r\n            haveFiles: self.filesCount !== 0,\r\n            noFiles: self.filesCount === 0,\r\n            allowSendInMail: properties.allowSendInMail\r\n        });\r\n\r\n        // Render current children\r\n        var items = \"\";\r\n        for (var i = 0; i < self.filesCount; i++) {\r\n            var file = {id: self.files[i][0], fileName: self.files[i][1]};\r\n            var item = self.renderUploadItem(file);\r\n\r\n            items += item;\r\n        }\r\n\r\n        html = self.replaceFilesHtml(html, items);\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Renders a single upload item\r\n     * @param file\r\n     * @returns {jQuery|*}\r\n     */\r\n    renderUploadItem: function (file) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var itemTemplate = self.getTemplateItemName();\r\n        var template = self.renderFactory.getTemplate(itemTemplate);\r\n\r\n        // Don't render urls when not running in execution mode\r\n        var url = !self.isExecutionMode() ? \"\" : self.buildItemUrl(file); // TODO: Review if need it: javascript:void(0);\r\n\r\n        var html = $.fasttmpl(template, {\r\n            id: file.id,\r\n            mode: mode,\r\n            url: url,\r\n            allowDelete: self.properties.allowDelete,\r\n            filename: file.fileName,\r\n            editable: self.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (file) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n\r\n        return self.dataService.getUploadFileUrl({\r\n            idRender: properties.id,\r\n            xpath: self.getUploadXpath(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            fileId: file.id,\r\n            sessionId: form.properties.sessionId,\r\n            contexttype: properties.contexttype\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{files}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Removes a file from the upload control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    deleteUploadItem: function (item, fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = self.getUploadXpath() + (bizagi.util.isNumeric(fileId) ? \"[id=\" + fileId + \"]\" : \"[id='\" + fileId + \"']\");\r\n\r\n        return self.dataService.deleteUploadFile({\r\n            url: properties.deleteUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contexttype\r\n        }).pipe(function () {\r\n\r\n            // Subtract counter\r\n            self.filesCount = self.filesCount - 1;\r\n\r\n            // Remove from local collection\r\n            self.files = $.grep(self.files, function (fileItem) {\r\n                return fileItem[0] != fileId;\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n\r\n        // Set files property\r\n        self.files = value || []; // Dont remove this line\r\n        self.filesCount = self.files.length;\r\n\r\n        // Call base\r\n        self._super(value, triggerEvents);\r\n    },\r\n\r\n    /**\r\n     * Returns the internal value\r\n     * @returns {*}\r\n     */\r\n    getValue: function () {\r\n        return this.files;\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @returns {boolean}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n        var bValid = true;\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (properties.required && properties.editable) {\r\n            var newRow = self.grid && self.grid.isFromCreatedRow.apply(self);\r\n\r\n            if (self.filesCount <= 0 && !newRow) {\r\n                var inlineEdit = self.grid ? self.grid.properties.inlineEdit : true;\r\n\r\n                if (inlineEdit) {\r\n                    message = self.getResource(\"render-required-upload\").replaceAll(\"#label#\", properties.displayName);\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Build add params to send to the server\r\n     */\r\n    buildAddParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var data = {};\r\n        var prefix = self.Class.BA_CONTEXT_PARAMETER_PREFIX;\r\n\r\n        data[prefix + \"xpath\"] = self.getUploadXpath();\r\n        data[prefix + \"idRender\"] = properties.id;\r\n        data[prefix + \"xpathContext\"] = properties.xpathContext;\r\n        data[prefix + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\r\n        data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = form.properties.sessionId;\r\n        data[prefix + \"contexttype\"] = properties.contexttype;\r\n\r\n        try {\r\n            if (typeof (BIZAGI_SESSION_NAME) !== \"undefined\") {\r\n                data[BIZAGI_SESSION_NAME] = form.properties.sessionId\r\n            } else {\r\n                data[\"JSESSIONID\"] = form.properties.sessionId;\r\n            }\r\n        } catch (e) {\r\n            data[\"JSESSIONID\"] = form.properties.sessionId;\r\n        }\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getUploadXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    checkRequired: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (bizagi.util.parseBoolean(properties.required)) {\r\n            if (self.grid && self.grid.properties.inlineAdd === true) {\r\n                if (!self.hasValue() && !(self.getControl().parents(\"tr\").data(\"new-row\"))) {\r\n                    self.setRenderRequired(invalidElements, properties);\r\n                    return false;\r\n                }\r\n            } else {\r\n                if (!self.hasValue()) {\r\n                    self.setRenderRequired(invalidElements, properties);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    setRenderRequired: function (invalidElements, properties) {\r\n        var self = this;\r\n        var message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n        invalidElements.push({xpath: properties.xpath, message: message});\r\n    },\r\n\r\n    /**\r\n     * Templates\r\n     */\r\n    getTemplateItemName: function () {\r\n        return \"uploadItem\";\r\n    }\r\n});","/**\r\n *   Name: Bizagi Render ECM upload control\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for ECM Control\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.ecm\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        properties.maxSize = Number(properties.maxSize) || (typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\" ? Number(BIZAGI_SETTINGS.UploadMaxFileSize) : properties.maxSize = Number(properties.maxSize) || 4091904);\r\n        properties.maxFiles = Number(properties.maxfiles) || 999;\r\n        properties.validExtensions = properties.validExtensions || \"\";\r\n\r\n        if (properties.validExtensions.length > 0 && properties.validExtensions.indexOf(\".\") < 0) {\r\n            var singleExtensions = properties.validExtensions.split(\";\");\r\n            for (var i = 0; i < singleExtensions.length; i++) {\r\n                singleExtensions[i] = \"*.\" + singleExtensions[i];\r\n            }\r\n            properties.validExtensions = singleExtensions.join(\";\");\r\n        }\r\n\r\n        properties.addUrl = self.dataService.serviceLocator.getUrl(\"render-ecm-upload-url\") + \"?action=uploadECMFile\";\r\n        properties.editUrl = self.dataService.serviceLocator.getUrl(\"render-ecm-upload-url\") + \"?action=updateECMFileContent\";\r\n        properties.deleteUrl = properties.deleteUrl || undefined;\r\n        properties.allowDelete = bizagi.util.parseBoolean(properties.allowDelete) !== null ? bizagi.util.parseBoolean(properties.allowDelete) : true;\r\n        properties.q_xpath = bizagi.util.encodeXpath(properties.xpath);\r\n        properties.showMetadata = properties.showMetadata === undefined || properties.showMetadata === null ? true : bizagi.util.parseBoolean(properties.showMetadata);\r\n\r\n        var dateFormat = this.getResource(\"dateFormat\");\r\n        var timeFormat = this.getResource(\"timeFormat\");\r\n\r\n        // We will hold here the value to display\r\n        properties.displayValue = \"\";\r\n        properties.showTime = properties.showTime !== undefined ? bizagi.util.parseBoolean(properties.showTime) : false;\r\n        properties.dateFormat = properties.dateFormat || dateFormat;\r\n        properties.timeFormat = properties.timeFormat || timeFormat;\r\n        properties.fullFormat = properties.dateFormat;\r\n\r\n        // Set files property\r\n        self.files = properties.value || [];\r\n        self.filesCount = self.files.length;\r\n\r\n        properties.xpathContext = this.parent.properties.xpathContext || properties.xpathContext || \"\";\r\n\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @param listControl\r\n     * @param fileProperties\r\n     * @returns {*}\r\n     */\r\n    renderControl: function (listControl, fileProperties) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"ecm\");\r\n        var mode = self.getMode();\r\n        var defer = new $.Deferred();\r\n\r\n        properties.value = (fileProperties) ? [[fileProperties.idFileUpload, fileProperties.fileName]] : self.value;\r\n        var html = $.fasttmpl(template, properties, {\r\n            getFileExtension: self.getFileExtension,\r\n            isImage: self.isImage\r\n        });\r\n\r\n        if (self.properties.value != undefined) {\r\n\r\n            var lengthValues = self.properties.value.length;\r\n\r\n            if (lengthValues === 0) {\r\n                defer.resolve(html);\r\n            }\r\n\r\n            $.each(self.properties.value, function (key, value) {\r\n                var data = {};\r\n\r\n                data.idFileUpload = value[0];\r\n                data.fileName = value[1];\r\n                data.idPageCache = self.properties.idPageCache;\r\n                data.xpathContext = self.getXpathContext();\r\n                data.xPath = self.properties.xpath;\r\n                data.editable = self.properties.editable;\r\n                data.idAttrib = self.properties.idAttrib;\r\n\r\n                var form = self.getFormContainer();\r\n                if (form && form.properties && form.properties.sessionId) {\r\n                    data.sessionId = form.properties.sessionId;\r\n                }\r\n\r\n                if (mode === \"execution\") {\r\n                    $.when(self.renderFileLayout(data, fileProperties)).done(function (item) {\r\n                        lengthValues--;\r\n\r\n                        if (bizagi.loader.productBuildToAbout && bizagi.loader.productBuildToAbout.indexOf(\"10.4\") === 0) {\r\n                            item = item.replaceAll(\"Handlers/MetadataFile\", \"Handlers/Metadata\");\r\n                        }\r\n\r\n                        html = self.replaceItemHtml(html, self.properties.id + \"-\" + data.idFileUpload, item);\r\n                        if (lengthValues === 0) {\r\n                            defer.resolve(html);\r\n                        }\r\n                    });\r\n\r\n                }\r\n            });\r\n        } else {\r\n            defer.resolve(html);\r\n        }\r\n        return defer.promise();\r\n    },\r\n\r\n    replaceItemHtml: function (html, id, replace) {\r\n        return html.replace(\"{{\" + id + \"}}\", replace);\r\n    },\r\n\r\n    renderFileLayout: function (data, fileProperties) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var metadataTemplate = self.renderFactory.getTemplate(\"ecm-metadata\");\r\n\r\n        var deferred = $.Deferred();\r\n\r\n        $.when(self.dataService.getECMMetadata(data),\r\n            (fileProperties) ? [fileProperties] : self.dataService.getFileProperties(data)\r\n        ).done(function (metaData, fileProperties) {\r\n\r\n            fileProperties[0].data = data;\r\n\r\n            // Make xpath context\r\n            fileProperties[0].xpathContext = fileProperties[0].xpathContext || form.properties.xpathContext || \"\";\r\n            fileProperties[0].xpath = self.properties.xpath;\r\n\r\n            metaData[0].filename = data.fileName;\r\n            metaData[0].url = self.buildItemUrl(fileProperties[0]);\r\n\r\n            // Define File Properties\r\n            metaData[0].ecm_ecmStatus = fileProperties[0].ecmStatus;\r\n            metaData[0].ecm_isVisible = fileProperties[0].isVisible;\r\n            metaData[0].ecm_allowUpdateMetadata = fileProperties[0].allowUpdateMetadata;\r\n            metaData[0].ecm_allowDelete = fileProperties[0].allowDelete;\r\n            metaData[0].ecm_allowUpdateContent = fileProperties[0].allowUpdateContent;\r\n            metaData[0].ecm_allowView = fileProperties[0].allowView;\r\n            metaData[0].ecm_allowCheckOut = fileProperties[0].allowCheckOut;\r\n            metaData[0].ecm_allowCancelCheckOut = fileProperties[0].allowCancelCheckOut;\r\n            metaData[0].ecm_allowEdit = data.editable && fileProperties[0].allowEdit;\r\n            metaData[0].ecm_ecmStatus = fileProperties[0].ecmStatus;\r\n            metaData[0].idFileUploads = fileProperties[0].idFileUpload;\r\n            metaData[0].xpath = fileProperties[0].xpath;\r\n            metaData[0].value = bizagi.util.parseBoolean(fileProperties[0].value);\r\n            metaData[0].deviceType = bizagi.detectDevice();\r\n\r\n            var html = $.fasttmpl(metadataTemplate, metaData[0]);\r\n            deferred.resolve(html);\r\n        });\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    isImage: function (file) {\r\n        var extension = this.getFileExtension(file);\r\n        var image = [\"JPG\", \"JPEG\", \"GIF\", \"PNG\", \"BMP\"];\r\n\r\n        return (image.indexOf(extension.toUpperCase()) > -1) ? true : false;\r\n    },\r\n\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (file) {\r\n        var self = this;\r\n        var p_sessionId = bizagi.cookie(\"JSESSIONID\");\r\n\r\n        if(!file.data) {\r\n            file.data = {fileName: file.fileName, idAttrib: file.idAttrib}\r\n        }\r\n\r\n        return self.dataService.getECMFileUrl({\r\n            idFileUpload: file.idFileUpload,\r\n            xPath: file.xpath || file.xPath,\r\n            xpathContext: file.xpathContext,\r\n            idAttrib: file.data.idAttrib,\r\n            idPageCache: self.properties.idPageCache,\r\n            fileName: file.data.fileName.replace(/ /g, \"_\"),\r\n            p_sessionId: p_sessionId,\r\n            sessionId: file.data.sessionId || \"\"\r\n        });\r\n    },\r\n\r\n    buildAddParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var data = {};\r\n\r\n        // data.fileExt = properties.validExtensions;\r\n        // data.fileDesc = properties.validExtensions ? self.getResource(\"render-upload-allowed-extensions\") + properties.validExtensions : \"\";\r\n        data.xPath = properties.xpath;\r\n        data.idAttrib = properties.idAttrib;\r\n        data.xpathContext = properties.xpathContext;\r\n        data.metaValues = [];\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Get name of file extension\r\n     * @param fileName\r\n     * @returns {*}\r\n     */\r\n    getFileExtension: function (fileName) {\r\n        fileName = fileName || \"\";\r\n        return fileName.split(\".\").pop();\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Call base\r\n        self._super(value, triggerEvents);\r\n\r\n        // Set files property\r\n        self.files = properties.value || [];\r\n        self.filesCount = (self.files.length) ? self.files.length : properties.value;\r\n    },\r\n\r\n    /**\r\n     * Gets xpath context\r\n     * @returns {*|string}\r\n     */\r\n    getXpathContext: function () {\r\n        return this.properties.xpathContext || \"\";\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getUploadXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Removes a file from the ECM control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    deleteUploadItem: function (item, fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var params = {\r\n            idFileUpload: fileId,\r\n            xPath: properties.xpath,\r\n            idAttrib: properties.idAttrib,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: self.getXpathContext()\r\n        };\r\n\r\n        return self.dataService.deleteECMFile(params).pipe(function () {\r\n\r\n            // Subtract counter\r\n            self.filesCount = self.filesCount - 1;\r\n\r\n            // Remove from local collection\r\n            self.files = $.grep(self.files, function (fileItem) {\r\n                return fileItem[0] != fileId;\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Lock a file from the ECM control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    lockUploadItem: function (fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var params = {\r\n            idFileUpload: fileId,\r\n            xPath: properties.xpath,\r\n            idAttrib: properties.idAttrib,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: self.getXpathContext()\r\n        };\r\n\r\n        return self.dataService.checkOutFile(params);\r\n    },\r\n\r\n    /**\r\n     * Unlock a file from the ECM control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    unlockUploadItem: function (fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var params = {\r\n            idFileUpload: fileId,\r\n            xPath: properties.xpath,\r\n            idAttrib: properties.idAttrib,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: self.getXpathContext()\r\n        };\r\n\r\n        return self.dataService.cancelCheckOut(params);\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render Yes-no Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for yes-no renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.yesno\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.value = typeof (properties.value) != \"undefined\" ? bizagi.util.parseBoolean(properties.value) : null;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"yesno\");\r\n        var randomId = bizagi.util.randomNumber(100, 10000000);\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            id: randomId,\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Gets the display value of the render\r\n     */\r\n    getDisplayValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.parseBoolean(value) === true) {\r\n            return this.getResource(\"render-boolean-yes\");\r\n        } else if (bizagi.util.parseBoolean(value) === false) {\r\n            return this.getResource(\"render-boolean-no\");\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if a render has no value for required validation\r\n     * @returns {boolean}\r\n     */\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.isEmptyValue(value)) return false;\r\n        return bizagi.util.parseBoolean(value) !== null;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Letter Class\r\n*   Author: Diego Parra\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for letter renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.letter\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Create a variable to check if the letter has been opened when editable\r\n        this.letterOpened = false;\r\n    },\r\n\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"letter\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template);\r\n    },\r\n\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"letter.readonly\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template);\r\n    },\r\n\r\n    /**\r\n     * Returns the letter content from the server\r\n     */\r\n    getLetterContent: function () {\r\n        // Set flag to true\r\n        this.letterOpened = true;\r\n\r\n        return this.dataService.getLetterContent({\r\n            url: this.properties.getUrl,\r\n            idRender: this.properties.id,\r\n            xpath: this.getXpath(),\r\n            xpathContext: this.getContextXpath(),\r\n            idPageCache: this.properties.idPageCache\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sends the content to the server in order to save\r\n     * @param {} content\r\n     */\r\n    saveLetterContent: function (content) {\r\n        return this.dataService.saveLetterContent({\r\n            url: this.properties.saveUrl,\r\n            idRender: this.properties.id,\r\n            xpath: this.getXpath(),\r\n            xpathContext: this.getContextXpath(),\r\n            idPageCache: this.properties.idPageCache,\r\n            content: content\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Returns the letter content from the server\r\n     */\r\n    getCanGenerateLetter: function () {\r\n        return this.dataService.getCanGenerateLetter({\r\n            idRender: this.properties.id,\r\n            xpath: this.getXpath(),\r\n            xpathContext: this.getContextXpath(),\r\n            idPageCache: this.properties.idPageCache\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Saves the form\r\n     */\r\n    saveForm: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        return form.saveForm();\r\n    },\r\n\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) == false) return true;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) == false) return true;\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (properties.required) {\r\n            if (self.letterOpened == false) {\r\n                message = self.getResource(\"render-letter-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                invalidElements.push({xpath: properties.xpath, message: message});\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns the current xpath\r\n     */\r\n    getXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Returns the current context xpath\r\n     */\r\n    getContextXpath: function () {\r\n        return this.properties.xpathContext;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Form Link Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for form link renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.formLink\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Set properties\r\n        var properties = this.properties;\r\n\r\n        properties.displayType = \"value\";\r\n        properties.maximized = bizagi.util.parseBoolean(this.properties.maximized) != null ? bizagi.util.parseBoolean(this.properties.maximized) : false;\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"formLink\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            align: properties.valueAlign,\r\n            displayName: properties.displayName,\r\n            value: properties.value,\r\n            editable: properties.editable,\r\n            likeButton: bizagi.util.parseBoolean(properties.likeButton) || false\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        // Executes the same template than normal render\r\n        return this.renderControl();\r\n\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Submits a edit request for a link display form\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    submitEditRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Don't send request when the link is not editable\r\n        if (!properties.editable && !properties.value)\r\n            return null;\r\n\r\n        return self.dataService.editLinkForm({\r\n            url: properties.editUrl,\r\n            idRender: properties.id,\r\n            xpath: self.getFormLinkXpath(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Submits a link save request for the displayed form\r\n     * @param data\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    submitSaveRequest: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Don't send request when the link is not editable\r\n        if (!properties.editable && !properties.value)\r\n            return null;\r\n\r\n        var xpath = self.getFormLinkXpath();\r\n        var xpathContext = xpath;\r\n\r\n        if (typeof (properties.xpathContext) !== \"undefined\" && properties.xpathContext !== \"\") {\r\n            xpathContext = xpath ? properties.xpathContext + \".\" + xpath : properties.xpathContext;\r\n        }\r\n\r\n        return self.dataService.saveLinkForm({\r\n            url: properties.saveUrl,\r\n            idRender: properties.id,\r\n            xpathContext: xpathContext,\r\n            submitData: data\r\n        }).done(function (response) {\r\n            var executeSubmitOnChange = true;\r\n\r\n            if (response && response.type === \"validationMessages\")\r\n                executeSubmitOnChange = false;\r\n\r\n            if (executeSubmitOnChange)\r\n                self.submitOnChange({});\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Submits a rollback request\r\n     * @param params\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitRollbackRequest: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function(){\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value){\r\n                return null;\r\n            }\r\n            else{\r\n                return self.dataService.rollbackLinkForm({\r\n                    url: properties.rollbackUrl,\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: params ? params.idPageCache : properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Submits a commit request\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitCommitRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function(){\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value){\r\n                return null;\r\n            } else {\r\n                return self.dataService.commitLinkForm({\r\n                    url: properties.commitUrl,\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Submits a checkpoint request\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitCheckpointRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function(){\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value){\r\n                return null;\r\n            } else {\r\n                return self.dataService.sendCheckpoint({\r\n                    url: properties.checkpointUrl,\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Submits a submitData request\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitDataRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function () {\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value) {\r\n                return null;\r\n            } else {\r\n\r\n\r\n                return self.dataService.submitData({\r\n                    url: properties.checkpointUrl,\r\n                    action: \"SUBMITDATA\",\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Automatically this render is valid, so we can't check a required link\r\n    },\r\n\r\n    /**\r\n     * Get Form Link xpath to use\r\n     * @returns {*}\r\n     */\r\n    getFormLinkXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Don't do anything\r\n    }\r\n\r\n});\r\n\r\n","/*\r\n*   Name: Bizagi Render Cascading Combo Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for cascading combo renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.cascadingCombo\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX\r\n}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Create dependency collection\r\n        self.dependants = [];\r\n        self.isDependant = false;\r\n    },\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.hasLocalData = bizagi.util.isEmpty(properties.parentCombo) ? properties.hasLocalData : false;\r\n\r\n        if (properties.value && properties.value.id === undefined)\r\n            properties.value = null;\r\n\r\n        self.value = properties.value;\r\n\r\n        // Add empty node if configured\r\n        if (properties.hasLocalData)\r\n            properties.data = self.complementData(properties.data);\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        // Check if this is a dependant combo\r\n        var parentCombo = self.parentCombo = self.getParentCombo();\r\n        if (parentCombo != null) {\r\n            var renderType = bizagi.util.normalizeType(parentCombo.properties.type);\r\n\r\n            if (/^cascadingcombo$/i.test(renderType)) {\r\n                self.isDependant = true;\r\n            }\r\n        }\r\n\r\n        // Apply element plugin, set a flag to avoid dependant combo ajax requests\r\n        self.initializingCascadingCombo = true;\r\n\r\n        // Call base\r\n        var result = this._super();\r\n\r\n        if (mode !== \"execution\") {\r\n            self.initializingCascadingCombo = false;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        self.initializingCascadingCombo = false;\r\n\r\n        // Bind with parent combo\r\n        if (self.isDependant) {\r\n            self.parentCombo.bindDependantCombo(self);\r\n        }\r\n    },\r\n\r\n    configureReadOnlyHandlers: function () {\r\n        var self = this;\r\n        self.initializingCascadingCombo = false;\r\n\r\n        // Bind with parent combo\r\n        if (self.isDependant) {\r\n            self.parentCombo.bindDependantCombo(self);\r\n        }\r\n    },\r\n    /*\r\n    *   Refresh the combo, after it has been painted\r\n    */\r\n    refresh: function (params, isInitialValue) {\r\n        var self = this;\r\n\r\n        // Wait until current element is rendered\r\n        $.when(self.isRendered()).done(function () {\r\n\r\n            // Unbind previous handler\r\n            // self.parentCombo.unbindDependantCombo(self);\r\n\r\n            // Clear current control\r\n            var control = self.getControl();\r\n            var mode = self.getMode();\r\n            control.empty();\r\n\r\n            // Render combo again\r\n            $.when(self.renderCombo(params)).then(function (html) {\r\n                // Append new element\r\n                control.html(html);\r\n\r\n                // Post-render method\r\n                self.postRender();\r\n\r\n                if (mode == \"execution\") {\r\n                    self.configureHandlers();\r\n                }\r\n\r\n                // Set current value\r\n                if (self.getValue() !== undefined) {\r\n                    self.setDisplayValue(self.getValue());\r\n                }\r\n\r\n                if (self.deferredVisible) {\r\n                    self.deferredVisible.resolve();\r\n                }\r\n\r\n                self.trigger(\"select\", [self.value, isInitialValue]);\r\n\r\n            });\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getData: function (params) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        // Just execute ajax calls when rendering in execution mode\r\n        if (mode != \"execution\") return self.getDummyData();\r\n\r\n        // Do not load dependant combos when there are no parent id\r\n        if (self.isDependant) {\r\n            if (self.parentCombo && params) {\r\n                self.properties.remoteDataLoaded = false;\r\n            }\r\n\r\n            // Return an empty array when there are no parent defined when the combo is dependant\r\n\r\n            var parentValue = (self.parentCombo.selectedValue) ? self.parentCombo.selectedValue.id : '';\r\n\r\n            if (parentValue != '') {\r\n                return this._super(params);\r\n            } else {\r\n                return [];\r\n            }\r\n        }\r\n\r\n        return this._super(params);\r\n    },\r\n\r\n\r\n    /* \r\n    *   Bind the combos to create the cascading feature\r\n    */\r\n    bindDependantCombo: function (dependantCombo) {\r\n        var self = this;\r\n        var renderType = bizagi.util.normalizeType(dependantCombo.properties.type);\r\n\r\n        // Check it is a cascading combo\r\n        if (/^cascadingcombo$/i.test(renderType)) {\r\n\r\n            // Append to dependant combos\r\n            self.dependants.push(dependantCombo);\r\n\r\n            // When this combo is selected we need to make the other combo to auto fill with an extra filter\r\n            dependantCombo.onChangeFunction = function (event, item, isInitialValue) {\r\n                // Fill items for next combo\r\n                self.refreshDependantCombo(dependantCombo, item.id, self.focusDependant, isInitialValue);\r\n\r\n                //if initial value is true, it prevents deleting the next combo\r\n                if (!isInitialValue) {\r\n                    // Clean next inputs\r\n                    dependantCombo.cleanInput();\r\n                }\r\n            };\r\n\r\n            if (!self.isEventBinded(\"select\")) {\r\n                self.bind(\"select\", dependantCombo.onChangeFunction);\r\n            }\r\n\r\n            // After the event binding has been made, we need to fill the new dependant render if this instance (the parent) has a value\r\n            if (!bizagi.util.isEmpty(self.getValue())) {\r\n\r\n                // Auto fill dependant items with current value\r\n                if (self.properties.hasLocalData) {\r\n                    self.refreshDependantCombo(dependantCombo, self.getValue().id);\r\n                }\r\n\r\n            }\r\n        }\r\n    },\r\n    isEventBinded: function (event) {\r\n        if (typeof $._data(this.observableElement.get(0), \"events\") === \"undefined\") {\r\n            return false;\r\n        } else {\r\n            if (typeof $._data(this.observableElement.get(0), \"events\")[event] === \"undefined\") {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /* \r\n    *   Unbind the combos that are being redrawn\r\n    */\r\n    unbindDependantCombo: function (dependantCombo) {\r\n        // When this combo is selected we need to make the other combo to auto fill with an extra filter\r\n        this.unbind(\"select\", dependantCombo.onChangeFunction);\r\n    },\r\n\r\n    /*\r\n    *   Fills the next dependant combo based on the given value\r\n    */\r\n    refreshDependantCombo: function (dependant, parentValue, focus, isInitialValue) {\r\n        var self = this;\r\n        var params = {};\r\n        params[self.Class.BA_ACTION_PARAMETER_PREFIX + \"parent\"] = parentValue;\r\n\r\n        dependant.deferredVisible = $.Deferred();\r\n\r\n        if (!isInitialValue) {\r\n            // Clear dependant value\r\n            dependant.setValue(\"\", false);\r\n        }\r\n\r\n        dependant.refresh(params, isInitialValue);\r\n\r\n        if (focus) {\r\n            $.when(dependant.deferredVisible.promise()).done(function () {\r\n                dependant.inputCombo.trigger(\"click\");\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Empty html when render from action\r\n     */\r\n\r\n    emptyControlByChangeEditability: function () {\r\n        var control = this.getControl();\r\n        control.empty();\r\n    },\r\n\r\n    /* \r\n    *   Cleans the combo value\r\n    */\r\n    cleanInput: function () {\r\n        this.triggerHandler(\"select\", {id: 0});\r\n    },\r\n\r\n    /*\r\n    *   Search for the other cascading combo refering this one, by idRender\r\n    */\r\n    getParentCombo: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Check if parentCombo is defined\r\n        if (properties.parentCombo === undefined)\r\n            return null;\r\n\r\n        // Get form reference\r\n        var form = self.getFormContainer();\r\n        var renderType = bizagi.util.normalizeType(self.properties.type);\r\n        var controls = /^cascadingcombo$/i.test(renderType) ? form.getRenderByType(properties.type) : [];\r\n\r\n        var i = 0;\r\n        var j = 0;\r\n        var parents = [];\r\n\r\n        var control = null;\r\n\r\n        for (; i < controls.length; i++) {\r\n            if (properties.parentCombo === controls[i].properties.id) {\r\n                parents.push({control: controls[i], index: i});\r\n            }\r\n        }\r\n\r\n        if (parents.length > 1) {\r\n            var parentLength, parent, xpathParent, parentArray;\r\n\r\n            for (; j < parents.length; j++) {\r\n                parent = parents[j].control;\r\n                xpathParent = parent.properties.xpath;\r\n                parentArray = xpathParent.split(\".\");\r\n                parentLength = parentArray.length;\r\n                xpathParent = parentArray.slice(0, parentLength - 1).join(\".\");\r\n\r\n                if (xpathParent === properties.xpath) {\r\n                    control = controls[parents[j].index];\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            control = form.getRenderById(properties.parentCombo);\r\n        }\r\n\r\n        // Return parent combo\r\n        return control;\r\n    },\r\n\r\n    /* \r\n    *  Method to determine if the render value can be sent to the server or not\r\n    */\r\n    canBeSent: function () {\r\n        var self = this;\r\n\r\n        // If the render has dependants we can't send to the server\r\n        return self._super() && bizagi.util.isMapEmpty(self.dependants);\r\n    },\r\n\r\n    /*\r\n    *   Determines if we need to show the current data regardless if it belongs to data or not\r\n    *   Can be overriden to change behaviour\r\n    */\r\n    showCurrentData: function () {\r\n        var mode = this.getMode();\r\n\r\n        if (mode != \"execution\") return true;\r\n        return false;\r\n    },\r\n\r\n    /*\r\n    *   Enables submit on change feature for the current render\r\n    */\r\n    configureSubmitOnChange: function () {\r\n        var self = this;\r\n\r\n        if (!self.configured) {\r\n            // Call super\r\n            self._super();\r\n            self.configured = true;\r\n        }\r\n    },\r\n\r\n    internalSubmitOnChange: function (data, bRefreshForm) {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        if (self.isDependant && self.canBeSent() && self.itemSelected !== undefined)\r\n            return self._super(data, bRefreshForm);\r\n        return defer.resolve();\r\n    },\r\n    /*\r\n    *   Sets the initial value for the renders\r\n    */\r\n    internalSetInitialValue: function () {\r\n        var self = this;\r\n        // Call original method\r\n        self._super();\r\n\r\n        if (self.value && self.isDependant == false) {\r\n            self.internalSetInitialValueFlag = true;\r\n            self.trigger(\"select\", [self.value, true]);\r\n        }\r\n\r\n        self.internalSetInitialValueFlag = false;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Render List Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for list renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.list\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data \r\n     * @returns {} \r\n     */\r\n    initializeData: function(data) {      \r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.listSize = properties.listSize || 0;\r\n    },\r\n\r\n    /**\r\n     * Gets the template used by the combo render can be overriden in subclasses\r\n     * to reuse logic and just change the template\r\n     * @returns {} \r\n     */\r\n    getTemplateName: function() {\r\n        return \"list\";\r\n    },\r\n\r\n    /**\r\n     * Determines if we need to show the current data regardless if it belongs\r\n     * to data or not Can be overriden to change behaviour    \r\n     * @returns {} \r\n     */\r\n    showCurrentData: function() {\r\n        return false;\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render MultiSelect Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for multiselect renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.multiSelect\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n        if (Array.isArray(this.value)) {\r\n            this.value = this.properties.value = JSON.encode({\"value\": this.value});\r\n            this.properties.originalValue = this.properties.previousValue = this.value;\r\n        }\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) !== null ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.maxRecords = Number(properties.maxRecords) || 20;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"list-multiselect\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            editable: properties.editable,\r\n            align: properties.valueAlign\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"list-multiselect\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            editable: properties.editable,\r\n            align: properties.valueAlign\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Fetch the data into a deferred\r\n     * @returns {*[]}\r\n     */\r\n    getData: function () {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n        var properties = this.properties;\r\n\r\n        // Go to server\r\n        self.dataService.multiaction().getData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contexttype || null,\r\n            idPageCache: properties.idPageCache\r\n        }).done(function (data) {\r\n            properties.data = self.normalizeData(data);\r\n\r\n            defer.resolve(properties.data);\r\n\r\n        }).fail(function (data) {\r\n            if (data.type === \"not-processed\")\r\n                return;\r\n\r\n            // Show error from server\r\n            var auxMsg = \"\";\r\n            var form = self.getFormContainer();\r\n            var msgObj = self.properties.displayName + \": \";\r\n\r\n            if (typeof data == \"string\") {\r\n                auxMsg = JSON && JSON.parse(data) || $.parseJSON(data);\r\n            } else {\r\n                auxMsg = data;\r\n            }\r\n\r\n            msgObj += auxMsg.message;\r\n\r\n            form.addValidationMessage(msgObj);\r\n\r\n            defer.reject(data);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        triggerEvents = triggerEvents !== undefined ? triggerEvents : true;\r\n\r\n        if(Array.isArray(value)){\t\t\r\n\t\t\tvalue = JSON.encode({\"value\": value});\r\n\t\t} else {\r\n\t\t\tvalue = value;\r\n\t\t}\r\n\r\n        this._super(value, triggerEvents);\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns the internal value\r\n     * @returns {*|Array}\r\n     */\r\n    getValue: function () {\r\n        return this.value || [];\r\n    },\r\n\r\n    /**\r\n     * Get list of data\r\n     * @returns {*|Array}\r\n     */\r\n    getDataValue: function () {\r\n        var list;\r\n\r\n        try {\r\n            list = JSON.parse(this.value);\r\n\r\n            return list.value || [];\r\n        } catch (e) {\r\n            return [];\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if a render has no value for required validation\r\n     * @returns {*|Array|boolean}\r\n     */\r\n    hasValue: function () {\r\n        var values = this.getDataValue();\r\n\r\n        return values && values.length > 0;\r\n    },\r\n\r\n    getElementsToStylize: function (context) {\r\n        return $(\".bz-multiselect .bz-multiselect__tag:not(.bz-multiselect__plus)\", context);\r\n    },\r\n\r\n    /**\r\n     * Add elements to global value\r\n     * @param value\r\n     */\r\n    addElement: function (value) {\r\n        var newValue = this.getDataValue();\r\n\r\n        newValue.push(value);\r\n\r\n        this.setValue(newValue);\r\n    },\r\n\r\n    /**\r\n     * Remove elements to global value\r\n     * @param value\r\n     */\r\n    removeElement: function (value) {\r\n        var idToRemove = value.id;\r\n        var newValue = this.getDataValue()\r\n            .filter(function (item) {\r\n                return item.id !== idToRemove;\r\n            });\r\n\r\n        this.setValue(newValue);\r\n    },\r\n\r\n    /**\r\n     * Submit the selected data to the server in order to be saved\r\n     */\r\n    submitData: function () {\r\n        var data = {};\r\n\r\n        // Add current data\r\n        data[this.properties.xpath] = this.getValue();\r\n\r\n        // Executes submit on change\r\n        this.submitOnChange(data);\r\n    },\r\n\r\n    /**\r\n     * Mark a item how checked\r\n     * @param id\r\n     * @returns {*}\r\n     */\r\n    markAsChecked: function (id) {\r\n        var self = this;\r\n\r\n        return self.selected.some(function (item, index) {\r\n            var found = item.id === id;\r\n\r\n            if (found) self.selected.splice(index, 1);\r\n            return found;\r\n        });\r\n    },\r\n\r\n    isChecked: function (values, id) {\r\n        return values.some(function (item) {\r\n            return item.id == id;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to verify if can add more items\r\n     * @param $tagsContainer\r\n     * @returns {boolean}\r\n     */\r\n    canAddMoreItems: function ($tagsContainer) {\r\n        var self = this;\r\n        var containerWidth = parseInt($tagsContainer.css(\"width\"));\r\n        var $children = $tagsContainer.children();\r\n\r\n        var childrenWidth = $children\r\n            .toArray()\r\n            .reduce(function (acc, child) {\r\n                acc += self.getElementWidth(child);\r\n                return acc;\r\n            }, 0);\r\n\r\n        return containerWidth > (childrenWidth + self.Class.MORE_OPTION_WIDTH)\r\n\r\n    },\r\n\r\n    /**\r\n     * getElementWidth\r\n     * @param element\r\n     * @returns {*}\r\n     */\r\n    getElementWidth: function (element) {\r\n        var styles = window.getComputedStyle(element);\r\n        var outerWidth = $(element).outerWidth();\r\n        return outerWidth + [\r\n            \"padding-left\",\r\n            \"padding-right\",\r\n            \"margin-left\",\r\n            \"margin-right\"\r\n        ].reduce(function (acc, property) {\r\n            acc += parseInt(styles[property]);\r\n            return acc;\r\n        }, 0);\r\n    },\r\n\r\n    /**\r\n     * Filtering list of elements\r\n     * @param query\r\n     * @param $container\r\n     */\r\n    filterList: function (query, $container) {\r\n\r\n        $container.filter(function () {\r\n            var stringContainer = $(this).text().toUpperCase();\r\n            var stringToSearch = query.toUpperCase();\r\n\r\n            if (stringContainer.indexOf(stringToSearch) >= 0) {\r\n                return $(this);\r\n            } else {\r\n                $(this).hide();\r\n            }\r\n        }).show();\r\n\r\n    },\r\n\r\n    /**\r\n     * addSelectedElements\r\n     */\r\n    addSelectedElements: function () {\r\n    },\r\n\r\n    /**\r\n     * Find item by id\r\n     * @param id\r\n     * @returns {[]}\r\n     */\r\n    findItemById: function (id) {\r\n        return (this.properties.data || []).find(function (item) {\r\n            return item.id == id;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n        return bizagi.util.formatItem(value);\r\n    },\r\n\r\n    /**\r\n     * Complement data from server before control implementation\r\n     * @param data\r\n     */\r\n    normalizeData: function (data) {\r\n        (data || []).forEach(function (item) {\r\n            item.value = typeof (item.value) !== \"undefined\" && item.value !== null ? item.value : \"\";\r\n        });\r\n\r\n        return data;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Render Search List Control\r\n*   Author: UI Forms Team\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.searchList\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data \r\n     * @returns {} \r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.maxRecords = Number(properties.maxRecords) || 20;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) !== null ? bizagi.util.parseBoolean(properties.editable) : true;\r\n\r\n        // Set value\r\n        self.setValue(properties.value);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {} \r\n     */\r\n    renderControl: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"searchList\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            value: properties.value,\r\n            allowTyping: properties.allowTyping,\r\n            items: properties.value,\r\n            hasSearchForm: properties.searchForms ? true : false,\r\n            editable: properties.editable\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {} \r\n     */\r\n    renderReadOnly: function() {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param {} value \r\n     * @returns {} \r\n     */\r\n    setValue: function(value) {\r\n        this.value = JSON.encode({ \"value\": value });\r\n        this.triggerRenderChange();\r\n    },\r\n\r\n    /**\r\n     * Add elements to global value\r\n     * @param value = { id:integer,value:[string || array] }\r\n     * @returns {} \r\n     */\r\n    addElement: function(value) {\r\n        var list = JSON.parse(this.value);\r\n\r\n        list.value.push(value);\r\n\r\n        this.setValue(list.value);\r\n    },\r\n\r\n    /**\r\n     * Remove elements to global value\r\n     * @param value = { id:integer }\r\n     * @returns {} \r\n     */\r\n    removeElement: function(value) {\r\n        var list = JSON.parse(this.value);\r\n        var result = [];\r\n\r\n        $.each(list.value, function(key, val) {\r\n            if (val.id != value.id) {\r\n                result.push({ id: val.id, value: val.value });\r\n            }\r\n        });\r\n\r\n        this.setValue(result);\r\n    },\r\n\r\n    /**\r\n     * Remove last element to global value\r\n     * @returns {} \r\n     */\r\n    removeLastElement: function() {\r\n        var list = JSON.parse(this.value);\r\n\r\n        if (list.value.length > 0) {\r\n            list.value.pop();\r\n            this.setValue(list.value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fetch the data into a deferred\r\n     * @param {} params \r\n     * @returns {} \r\n     */\r\n    getData: function(params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        // Resolve with remote data\r\n        self.dataService.getSearchData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            term: properties.term,\r\n            extra: params\r\n        }).done(function(data) {\r\n            // Resolve with fetched data\r\n            properties.data = data;\r\n            defer.resolve(properties.data);\r\n        }).fail(function(data) {\r\n            var hideStatus = data.hideStatus || false;\r\n\r\n            defer.resolve({});\r\n\r\n            if (!hideStatus) {\r\n                self.trigger(\"onSearchError\", data);\r\n            }\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Submits the selected data to the server in order to be saved\r\n     * @returns {} \r\n     */\r\n    submitData: function() {\r\n        var data = {};\r\n\r\n        // Add current data\r\n        data[this.properties.xpath] = this.getValue();\r\n\r\n        // Executes submit on change\r\n        this.submitOnChange(data);\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {} \r\n     */\r\n    canBeSent: function() {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Check if the control has value\r\n     * @returns {} \r\n     */\r\n    hasValue: function() {\r\n        var list = this.getListItems();\r\n\r\n        return list.length > 0;\r\n    },\r\n\r\n    getListItems: function(){\r\n        var value = this.getValue();\r\n        var finalValue = typeof (value) === \"string\" ? JSON.parse(value).value : value.value;\r\n\r\n        return finalValue || [];\r\n    },\r\n    \r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n        return bizagi.util.formatItem(value);\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Money Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for money numbers\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.money\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        // Configures symbol\r\n        properties.showsymbol = typeof (properties.showsymbol) !== \"undefined\" ? properties.showsymbol : true;\r\n\r\n        if (properties.showsymbol) {\r\n            var symbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.symbol : format.symbol;\r\n            properties.symbol = properties.currencySymbol ? properties.currencySymbol : symbol;\r\n        } else {\r\n            properties.symbol = \"\";\r\n        }\r\n\r\n        properties.groupDigits = true;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Radio Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for radio renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.radio\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.horizontal = bizagi.util.parseBoolean(properties.horizontal) || false;\r\n\r\n        // Set a random identifier to fix a problem when using radio buttons inside grids and the plugin mismatch the elements because all of them have the same name\r\n        properties.unique = bizagi.util.randomNumber(1000, 1000000);\r\n    },\r\n\r\n    /**\r\n     * Gets the template used by the combo render\r\n     * Can be overridden in subclasses to reuse logic and just change the template\r\n     * @returns {string}\r\n     */\r\n    getTemplateName: function () {\r\n        return \"radio\";\r\n    },\r\n\r\n    /**\r\n     * Determines if we need to show the empty node or not\r\n     * Can be overridden to change behaviour\r\n     * @returns {boolean}\r\n     */\r\n    showEmpty: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Determines if we need to show the current data regardless if it belongs to data or not\r\n     * Can be overridden to change behaviour\r\n     * @returns {boolean}\r\n     */\r\n    showCurrentData: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Adds custom parameters to process the template\r\n     * @returns {{vertical: boolean}}\r\n     */\r\n    getTemplateParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return {\r\n            vertical: !properties.horizontal,\r\n            horizontal: properties.horizontal\r\n        };\r\n    },\r\n\r\n    /**\r\n     * Cleans current data\r\n     */\r\n    cleanData: function () {\r\n        var self = this;\r\n        var value = {id: \"\", label: \"\"};\r\n        var selectedItem = self.element.find(\".ui-radio-state-checked\");\r\n\r\n        selectedItem.removeClass(\"ui-radio-state-checked\");\r\n        self.setDisplayValue(value);\r\n        self.setValue(value, false);\r\n        self.clearDisplayValue();\r\n    },\r\n\r\n    /**\r\n     * Check value of control is changed\r\n     * @returns {boolean}\r\n     */\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var value = self.getValue();\r\n        var compareValue = properties.originalValue;\r\n        var baseValue = properties.defaultValue;\r\n\r\n        var result = true;\r\n\r\n        if (value && value.length !== undefined) {\r\n            value = value[0];\r\n        }\r\n        if (compareValue && compareValue.length !== undefined) {\r\n            compareValue = compareValue[0];\r\n        }\r\n        if (baseValue && baseValue.length !== undefined) {\r\n            baseValue = baseValue[0];\r\n        }\r\n\r\n        value = value && value.id !== undefined ? value.id : value;\r\n        compareValue = compareValue && compareValue.id !== undefined ? compareValue.id : compareValue;\r\n        baseValue = baseValue && baseValue.id !== undefined ? baseValue.id : baseValue;\r\n\r\n        if (baseValue !== undefined) {\r\n            if ((baseValue == value) && (value == compareValue)) {\r\n                result = false;\r\n            } else {\r\n                if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                    result = false;\r\n                } else {\r\n                    result = (compareValue == value) ? false : true;\r\n                }\r\n            }\r\n        } else {\r\n            if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue == value) ? false : true;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    },\r\n    /**\r\n     * Clean html because some scenarios render twice\r\n     */\r\n    emptyControlByAsyncRenderDeferred: function () {\r\n        var control = this.getControl();\r\n        control.empty();\r\n    }\r\n});\r\n\r\n","/**\r\n*   Name: Bizagi Render Image Class\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define basic stuff for image control\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.image\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\r\n    BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE\r\n}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var maxSize = 4091904;\r\n\r\n        if(properties.maxSize) {\r\n            maxSize = Number(properties.maxSize);\r\n        } else if (typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\") {\r\n            maxSize = Number(BIZAGI_SETTINGS.UploadMaxFileSize);\r\n        }\r\n\r\n        properties.maxSize = maxSize;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) === true;\r\n        properties.validExtensions = properties.validExtensions || \"\";\r\n\r\n        if (properties.validExtensions.length > 0 && properties.validExtensions.indexOf(\".\") < 0) {\r\n            var singleExtensions = properties.validExtensions.replace(/\\ /gi, '').split(\";\");\r\n\r\n            for (var i = 0; i < singleExtensions.length; i++) {\r\n                if (singleExtensions[i].length != 0) {\r\n                    singleExtensions[i] = \"*.\" + singleExtensions[i].replaceAll(\" \", \"\");\r\n                } else {\r\n                    //Removes the empty element\r\n                    var index = singleExtensions.indexOf(singleExtensions[i]);\r\n                    singleExtensions.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            properties.validExtensions = singleExtensions.join(\";\");\r\n        }\r\n\r\n        properties.addUrl = properties.addUrl || self.dataService.getUploadAddFileUrl(properties.isUserPreference);\r\n        properties.allowDelete = bizagi.util.parseBoolean(properties.allowDelete) !== null;\r\n\r\n        properties.isAutoWidth = false;\r\n        properties.isAutoHeight = false;\r\n\r\n        if (properties.width === -1) {\r\n            properties.width = \"100%\";\r\n            properties.isAutoWidth = true;\r\n        } else {\r\n            properties.width = properties.width + \"px\";\r\n        }\r\n\r\n        if (properties.height === -1) {\r\n            properties.height = \"auto\";\r\n            properties.isAutoHeight = true;\r\n        } else {\r\n            properties.height = properties.height + \"px\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var def = new $.Deferred(); //design\r\n        var template = self.renderFactory.getTemplate(\"image\");        \r\n\r\n        $.when(self.buildItemUrl()).done(function (dataUrl) {\r\n            if (!self.isDisposed()) {\r\n                self.properties.url = dataUrl !== \"\" ? dataUrl : \"\";\r\n                self.properties.value = self.value = self.properties.url.length > 0 ? [self.properties.url] : null;\r\n                self.setValue(self.properties.value);                \r\n\r\n                var html = $.fasttmpl(template, { url: self.properties.url });\r\n                def.resolve(html);\r\n            }\r\n        }).fail(function (error) {\r\n           def.reject(error)\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"image-readonly\");\r\n        var html = $.fasttmpl(template);\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * This method return the name of template of items, please make a override in each device\r\n     * @returns {*}\r\n     */\r\n    getTemplateItem: function () {\r\n        return this.renderFactory.getTemplate(\"image-item\");\r\n    },\r\n\r\n    /**\r\n     * Renders a single upload item\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    renderUploadItem: function (file) {\r\n        var self = this;\r\n        var mode = self.getMode();        \r\n        var def = new $.Deferred();\r\n        var template = self.getTemplateItem();\r\n\r\n        $.when(self.buildItemUrl()).done(function (dataUrl) {\r\n            var url = dataUrl || \"\";\r\n\r\n            var html = $.fasttmpl(template, {\r\n                url: url,\r\n                allowDelete: self.properties.allowDelete,\r\n                editable: self.properties.editable,\r\n                mode: mode,                \r\n            });\r\n\r\n            self.properties.url = url;\r\n            self.properties.value = url.length > 0 ? [url] : null;\r\n\r\n            def.resolve(html);\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param params\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var def = new $.Deferred();\r\n        var url = \"\";\r\n\r\n        if (!this.isExecutionMode()) {\r\n            url = \"\"; // TODO: Review the use of \"javascript:void(0);\";\r\n            def.resolve(url);\r\n        } else {\r\n            var parameters = {\r\n                url: properties.dataUrl,\r\n                xpath: properties.xpath,\r\n                idRender: properties.id,\r\n                xpathContext: properties.xpathContext,\r\n                idPageCache: properties.idPageCache,\r\n                property: params && params.property ? params.property : \"fileContent\",\r\n                dataType: \"text\"\r\n            };\r\n\r\n            if (properties.contexttype) {\r\n                parameters.contexttype = properties.contexttype;\r\n            }\r\n\r\n            if (properties.isUserPreference) {\r\n                self.currentUser = bizagi.currentUser.idUser;\r\n                parameters.xpathContext = \"@Context.Users[id == \" + self.currentUser + \"]\";\r\n                parameters.contexttype = \"entity\";\r\n                parameters.surrogatekey = self.currentUser;\r\n            }\r\n\r\n            self.dataService.multiaction().getPropertyData(parameters, \"text\")\r\n                .done(function (data) {\r\n                    if (data.charAt(0) === \"\\\"\") {\r\n                        data = data.slice(1, -1);\r\n                    }\r\n\r\n                    if (data !== \"\") {\r\n                        url = \"data:image/png;base64,\" + data;\r\n                    }\r\n\r\n                    def.resolve(url);\r\n                }).fail(function (error) {\r\n                def.reject(error);\r\n            });\r\n        }\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    buildItemUrlOffline: function(parameters){\r\n        var def = new $.Deferred();\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var formParams = self.getFormParams();\r\n        var loadImageFromForm = true;\r\n        var imageId = properties.xpath;\r\n        if( properties.offlineImageId ){\r\n            imageId = properties.offlineImageId;\r\n            loadImageFromForm = false;\r\n        }\r\n        var parameters = {\r\n            idCase: formParams.idCase,\r\n            idWorkitem: formParams.idWorkitem,\r\n            id: imageId,\r\n            offlineType: formParams.offlineType,\r\n            loadImageFromForm: loadImageFromForm\r\n        }\r\n        $.when(self.dataService.getOfflineImage(parameters, \"base64\"))\r\n        .done( function(imageValue){\r\n            properties.value = imageValue;\r\n            def.resolve(bizagi.util.getDataUrl(properties));\r\n        });\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Create an image offline\r\n     * @param path File in Browser or Path in Mobile Devices\r\n     * @param promise Promise to be resolved when save is completed\r\n     */\r\n    saveImageOffline: function (path) {\r\n        var self = this; \r\n        var def = new $.Deferred();       \r\n        var blobPromise = new $.Deferred();\r\n        var offlineImageId = self.properties.xpath + '-' + bizagi.util.randomNumber();\r\n\r\n        if(self.isNative){\r\n            var fileName = self.fileProperties.name;            \r\n            if (!bizagi.util.isAndroidDevice()) {\r\n                path = bizagi.util.media.normalizeIOSFilePath(path);\r\n            }\r\n            else{\r\n                // Fix android 4.4 getting images from recent folder\r\n                path = bizagi.util.media.getImagePath(path);\r\n            }\r\n            \r\n            var errorHandler = function (error) {\r\n                bizagi.log('error converting path to blob', error);  \r\n                blobPromise.reject(error);\r\n            };\r\n    \r\n            window.resolveLocalFileSystemURL(path, function (fileEntry) {\r\n                fileEntry.file(function (file) {    \r\n                    var reader = new FileReader();\r\n                    reader.onloadend = function () {\r\n                        var blob = new Blob([this.result], {type: file.type});\r\n                        blob.name = fileName;\r\n                        blobPromise.resolve(blob);\r\n                    }    \r\n                    reader.readAsArrayBuffer(file);\r\n                }, errorHandler);\r\n            }, errorHandler);\r\n        }\r\n        else {\r\n            blobPromise.resolve(path);\r\n        }        \r\n\r\n        $.when(blobPromise)\r\n        .done( function(blobImage) {\r\n            // Save the image as attachment \r\n            var formParams = self.getFormParams();\r\n            var parameters = {\r\n                idCase: formParams.idCase,\r\n                idWorkitem: formParams.idWorkitem,\r\n                id: offlineImageId,\r\n                operationType: \"edition\",\r\n                offlineType: formParams.offlineType\r\n            }\r\n\r\n            $.when(self.dataService.saveOfflineImage(parameters, blobImage))\r\n            .done( function() {\r\n                self.properties.offlineImageId = offlineImageId;\r\n                def.resolve();\r\n            })\r\n            .fail( function(err){\r\n                def.reject(err);\r\n            });\r\n        })\r\n        .fail( function(blobError){\r\n            def.reject(blobError);\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url in real size\r\n     * @returns {*}\r\n     */\r\n    buildFullItemUrl: function () {\r\n        var def = new $.Deferred();\r\n\r\n        $.when(this.buildItemUrl({\"property\": \"fileFullContent\"}))\r\n            .done(function (dataUrl) {\r\n                def.resolve(dataUrl);\r\n            }).fail(function (error) {\r\n            def.reject(error);\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        // Call base\r\n        this._super(value, triggerEvents);\r\n    },\r\n\r\n    /**\r\n     * Returns the internal value\r\n     * @returns {*|Array}\r\n     */\r\n    getValue: function () {\r\n        return this.properties.value || [];\r\n    },\r\n\r\n    /**\r\n     * Check if control is valid or not\r\n     * @param invalidElements\r\n     * @returns {boolean}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(self.properties.visible) === false) {\r\n            return true;\r\n        }\r\n\r\n        // Don't check non- editable renders\r\n        if (bizagi.util.parseBoolean(self.properties.editable) === false) {\r\n            return true;\r\n        }\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (self.properties.required) {\r\n            var newRow = self.grid && self.grid.isFromCreatedRow.apply(self);\r\n\r\n            if (!newRow) {\r\n                var value = self.getValue();\r\n\r\n                if (value.length === 0) {\r\n                    var message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", self.properties.displayName);\r\n                    invalidElements.push({ xpath: self.properties.xpath, message: message });\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Build add params to send to the server\r\n     */\r\n    buildAddParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var data = {};\r\n\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = self.getUploadXpath();\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = properties.id;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = properties.xpathContext;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\r\n        data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = form.properties.sessionId;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = 'savefile';\r\n\r\n        if (properties.contexttype) {\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = properties.contexttype;\r\n        }\r\n\r\n        try {\r\n            if (typeof (BIZAGI_SESSION_NAME) !== \"undefined\") {\r\n                data[BIZAGI_SESSION_NAME] = form.properties.sessionId;\r\n            } else {\r\n                data[\"JSESSIONID\"] = form.properties.sessionId;\r\n            }\r\n        } catch (e) {\r\n            data[\"JSESSIONID\"] = form.properties.sessionId;\r\n        }\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getUploadXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Clean html because some scenarios render twice\r\n     */\r\n    emptyControlByAsyncRenderDeferred: function () {\r\n        var $control = this.getControl();\r\n        $control.empty();\r\n    }\r\n});","/*\r\n*   Name: BizAgi User field render\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define the basic behavior for userfields\r\n*/\r\n$.Class.extend(\"bizagi.rendering.userfieldDefinition\", {}, {\r\n\r\n    /*************************************************************/\r\n    /* Private section of the userfield                          */\r\n    /*************************************************************/\r\n\r\n    /*\r\n    *   Method to be overriden by userfields in order to ensure that custom files are loaded before the execution\r\n    */\r\n    getFileDependencies: function () {\r\n        return null;\r\n    },\r\n\r\n    postRender: function () {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super();\r\n\r\n        var defer = $.Deferred();\r\n        var fileDependencies = self.getFileDependencies();\r\n        if (fileDependencies && fileDependencies.length > 0) {\r\n            bizagi.loader.loadFile(fileDependencies)\r\n\t\t\t.then(function () {\r\n\t\t\t    // After all dependencies has been resolved\r\n\t\t\t    self.internalRenderControl();\r\n\t\t\t    defer.resolve();\r\n\t\t\t});\r\n\r\n        } else {\r\n            $.when( self.renderUserfieldControl()).done(function () {\r\n                defer.resolve();\r\n            });\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    renderUserfieldControl: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n        var def = new $.Deferred();\r\n\r\n        if (properties.extendedData && properties.extendedData.length > 0) {\r\n            self.extendedData = bizagi.services.ajax.parseJSON(properties.extendedData);\r\n        } else {\r\n            self.extendedData = {};\r\n        }\r\n\r\n\r\n        var loadUserfield = function () {\r\n            var userEditableControl = self.getEditableControl();\r\n            if (userEditableControl) {\r\n                self.input = control.html(userEditableControl);\r\n            }\r\n            self.renderComplex();\r\n            def.resolve();\r\n        };\r\n\r\n        \r\n            loadUserfield();\r\n    \r\n        \r\n        return def.promise();\r\n    },\r\n\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n\r\n        if (properties.extendedData && properties.extendedData.length > 0) {\r\n            self.extendedData = bizagi.services.ajax.parseJSON(properties.extendedData);\r\n        } else {\r\n            self.extendedData = {};\r\n        }\r\n\r\n        var loadUserfieldReadOnly = function () {\r\n            try {\r\n                var userReadOnlyControl = self.getReadonlyControl();\r\n                if (userReadOnlyControl) {\r\n                    self.input = control.html(userReadOnlyControl);\r\n                }                                                 \r\n                self.renderComplex();\r\n                \r\n            } catch (error) {\r\n                var displayName = self.properties.displayName || \"Widget\";\r\n                control.html(\"<h6>\" + displayName  + \"</h6>\")\r\n            }\r\n            \r\n        };\r\n\r\n        if (self.ready) {\r\n            self.ready().done(function () {\r\n                loadUserfieldReadOnly();\r\n            });\r\n        } else {\r\n            loadUserfieldReadOnly();\r\n        }\r\n    },\r\n\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n        return self.getReadonlyValue();\r\n    },\r\n\r\n    /*\r\n    *   Sets the value in the rendered control \r\n    */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self.setValue(value);\r\n\r\n        // Set editable value in control\r\n        self.setEditableValue(value);\r\n    },\r\n\r\n    getValue: function () {\r\n        var self = this;\r\n        return self.getEditableValue();\r\n    },\r\n\r\n    getPropertyValue: function (propertyName, params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        self.dataService.multiaction().getPropertyData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            property: propertyName,\r\n            extra: params,\r\n            dataType: params ? params.dataType : null\r\n        }).done(function (data) {\r\n            if (data.type == \"error\") {\r\n                // Workflow engine error, we gotta show it with error\r\n                self.getFormContainer().addErrorMessage(data.message);\r\n                defer.reject(data);\r\n            } else {\r\n                defer.resolve(data);\r\n            }\r\n        }).fail(function (jqXHR, textStatus, errorThrown) {\r\n            defer.reject(jqXHR, textStatus, errorThrown);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Saves the form\r\n    */\r\n    saveForm: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        return form.saveForm();\r\n    },\r\n\r\n    /**\r\n    * Returns all the elements that match the given xpath\r\n    */\r\n    getRenderElements: function (xpath) {\r\n        var self = this;\r\n        var result = $();\r\n        var controls = self.getFormContainer().getRenders(xpath);\r\n        $.each(controls, function (i, item) {\r\n            result = result.add($(item.element));\r\n        });\r\n\r\n        return result;\r\n    },\r\n\r\n    getServerResourceURL: function (resource) {\r\n        var self = this;\r\n        var url = \"Rest/Userfields/{0}/resource/{1}/{2}\";\r\n        url = url.replace(\"{0}\", self.properties.userfieldGuid);\r\n        resource = resource.replace(\"\\\\\", \"__\").replace(\"/\", \"__\");\r\n        var device = bizagi.util.detectDevice();\r\n        url = url.replace(\"{1}\", device);\r\n        url = url.replace(\"{2}\", resource);\r\n        //Rest/Userfields/{0}/resource/desktop/{1}\r\n        return url;\r\n    },\r\n\r\n    /**\r\n    * Returns all the elements that match the given xpath\r\n    */\r\n    getRenderValue: function (xpath) {\r\n        var self = this;\r\n        var controls = self.getFormContainer().getRenders(xpath);\r\n        var control;\r\n        $.each(controls, function (index, item) {\r\n            if (!control || item.properties.editable) {\r\n                control = item;\r\n            }\r\n        });\r\n        if (control) {\r\n            return control.getValue();\r\n        } else {\r\n            return null;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Refresh the current form\r\n    */\r\n    refreshForm: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var form = self.getFormContainer();\r\n        form.refreshForm(properties.id);\r\n    },\r\n\r\n    /*\r\n    * Shows a jquery dialog\r\n    */\r\n    showDialog: function (url, params) {\r\n        bizagi.util.mustImplement(\"Must implement the showDialog method\");\r\n    },\r\n\r\n    /*\r\n    *   Shows a browser popup\r\n    */\r\n    showPopup: function (url, params) {\r\n        bizagi.util.mustImplement(\"Must implement the showPopup method\");\r\n    },\r\n\r\n    updateOriginalValue: function () {\r\n        var self = this;\r\n        self.properties.originalValue = self.value = self.properties.value;\r\n    }\r\n\r\n\r\n});\r\n\r\n\r\n$.Class.extend(\"bizagi.rendering.basicUserField\", {}, {\r\n\r\n    /*************************************************************/\r\n    /* methods to be overriden by the implementations            */\r\n    /*************************************************************/\r\n    getEditableControl: function () {\r\n    },\r\n\r\n    renderComplex: function () {\r\n    },\r\n\r\n    // Returns the value of the control\r\n    getEditableValue: function () {\r\n        return bizagi.rendering.render.prototype.getValue.apply(this, arguments);\r\n    },\r\n\r\n    // \r\n    setEditableValue: function (value) {\r\n        return bizagi.rendering.render.prototype.setValue.apply(this, arguments);\r\n    },\r\n\r\n    getReadonlyControl: function () {\r\n    },\r\n\r\n    getReadonlyValue: function () {\r\n        // if the method is not overriden then call the parent method \r\n        return bizagi.rendering.render.prototype.getDisplayValue.apply(this, arguments);\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super();\r\n    }\r\n\r\n});\r\n\r\n/*\r\n*   This control will wrap any userfield in order to load the code remotely, \r\n*   when executing renderControl, which is an async method\r\n*/\r\n$.Class.extend(\"bizagi.rendering.userfieldWrapper\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n        // Save userfield guid and name\r\n        self.initialParams = params;\r\n        self.userfieldGuid = this.properties.userfieldGuid;\r\n        self.userfieldName = this.properties.control;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    */\r\n    internalPostRender: function () {\r\n        var self = this;\r\n        $.when(self.getUserfieldControl())\r\n        .done(function (control) {\r\n            control.element = self.element;\r\n\r\n            // Add grid and surrogatekey properties if the userfield is a column userfield\r\n            if (self.column) {\r\n                control.isColumn = true;\r\n                control.grid = self.grid;\r\n                control.surrogateKey = self.surrogateKey;\r\n                control.properties.xpathContext = self.getControlXpathContext(control);\r\n                control.getControl = self.column.getControl;\r\n            }\r\n\r\n            return control.internalPostRender();\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Helper for userfields to fetch the xpathContext\r\n    */\r\n    getControlXpathContext: function (control) {\r\n        var self = this;\r\n        var properties = control.properties;\r\n\r\n        if (control.isColumn) {\r\n            return properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + control.grid.properties.xpath + \"[id=\" + control.surrogateKey + \"]\" : control.grid.properties.xpath + \"[id=\" + control.surrogateKey + \"]\";\r\n        }\r\n\r\n        return properties.xpathContext;\r\n    },\r\n\r\n\r\n    getUserFieldInstance: function(params){\r\n        console.log(\"not implemented\");\r\n    },\r\n\r\n    /*\r\n    *   Replicate all userfield methods to this instance in order to create a proxy\r\n    */\r\n    replicateUserfieldMethods: function (control) {\r\n        var self = this;\r\n        for (var key in control.Class.prototype) {\r\n            // Omit the folowing methods\r\n            if (key == \"init\" || key == \"constructor\" || key == \"Class\" || key == \"subscribe\" || key == \"unsubscribe\" ||\r\n                key == \"publish\" || key == \"render\" || key == \"triggerHandler\" || key == \"dispose\") continue;\r\n\r\n            // Replicate instance methods\r\n            self[key] = eval('var tmp = function(){ if (this.userfieldInstance) return this.userfieldInstance.' + key + '.apply(this.userfieldInstance, arguments); return null;};tmp');\r\n        }\r\n\r\n        // Replicate properties and value\r\n        control.properties = self.properties;\r\n        control.value = self.value;\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self.userfieldInstance) {\r\n                self.userfieldInstance.unbind(\"renderchange\");\r\n                self.userfieldInstance.dispose();\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    }\r\n});\r\n\r\n","/**\r\n *   Name: Bizagi Render Document Generator\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for document generator render\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.document\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        var properties = this.properties;\r\n\r\n        properties.validate = bizagi.util.parseBoolean(properties.validate) != null ? bizagi.util.parseBoolean(properties.validate) : false;\r\n        properties.downloadalldocuments = properties.downloadalldocuments ? properties.downloadalldocuments : false;\r\n        properties.allowGenerate = properties.allowGenerate !== undefined ? properties.allowGenerate : true;\r\n        properties.append = properties.append ? properties.append : false;\r\n\r\n        if (properties.caption) {\r\n            properties.caption = bizagi.util.trim(properties.caption);\r\n\r\n            if (properties.caption.length === 0) {\r\n                properties.caption = this.getResource(\"render-documentgenerator-button-label\");\r\n            }\r\n        } else {\r\n            properties.caption = this.getResource(\"render-documentgenerator-button-label\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n\r\n        self.preRenderControl();\r\n\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n        var downloadAllDocuments = properties.downloadalldocuments;\r\n        var allowGenerate = properties.allowGenerate;\r\n        var template = self.renderFactory.getTemplate(self.getTemplate());\r\n        var documents = properties.value || [];\r\n        var noFiles = documents ? (documents.length === 0) : true;\r\n\r\n        // Render template\r\n        var html = self.getControlHtml(template, mode, downloadAllDocuments, allowGenerate, properties, noFiles);\r\n\r\n        // Render current children\r\n        var items = this.renderDocumentsHtml(documents);\r\n        items += this.renderActionsHtml(documents, noFiles, downloadAllDocuments);\r\n\r\n        html = self.replaceFilesHtml(html, items);\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @param template\r\n     * @param mode\r\n     * @param downloadAllDocuments\r\n     * @param allowGenerate\r\n     * @param properties\r\n     * @param noFiles\r\n     * @returns {*|jQuery}\r\n     */\r\n    getControlHtml: function (template, mode, downloadAllDocuments, allowGenerate, properties, noFiles) {\r\n        var self = this;\r\n\r\n        return $.fasttmpl(template, {\r\n            noActivateButton: false,\r\n            editable: mode !== \"execution\",\r\n            mode: mode,\r\n            downloadalldocuments: downloadAllDocuments,\r\n            required: properties.required,\r\n            allowgenerate: allowGenerate,\r\n            xpath: self.getXpath(properties.xpath),\r\n            append: properties.append,\r\n            caption: properties.caption,\r\n            noFiles: noFiles,\r\n            allowSendInMail: properties.allowSendInMail\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @param xpath\r\n     * @returns {*}\r\n     */\r\n    getXpath: function (xpath) {\r\n        return xpath;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    preRenderControl: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {boolean}\r\n     */\r\n    activateButton: function () {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @param xpath\r\n     * @returns {*}\r\n     */\r\n    getDocumentXpath: function (xpath) {\r\n        return xpath;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getContextXpath: function () {\r\n        return this.properties.xpathContext;\r\n    },\r\n\r\n    /**\r\n     * Renders a single document item\r\n     * @param file\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderDocumentItem: function (file) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var template = self.renderFactory.getTemplate(self.getTemplateItem());\r\n        var url = self.buildItemUrl(file);\r\n\r\n        // Don't render urls when not running in execution mode\r\n        if (mode !== \"execution\") url = \"javascript:void(0);\";\r\n\r\n        var html = $.fasttmpl(template, {\r\n            url: url,\r\n            allowDelete: self.properties.allowDelete,\r\n            filename: file.fileName,\r\n            mode: mode,\r\n            editable: self.properties.editable,\r\n            joined: false\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (file) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.getUploadFileUrl({\r\n            idRender: properties.id,\r\n            xpath: self.getDocumentXpath(properties.xpath),\r\n            xpathContext: self.getContextXpath(),\r\n            idPageCache: properties.idPageCache,\r\n            fileId: file.id,\r\n            sessionId: self.getSessionId()\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Builds the download all items item url\r\n     * @returns {*}\r\n     */\r\n    buildAllDocumentsUrl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var returnLink = self.dataService.getAllDocumentsDownloadUrl({\r\n            xpath: self.getDocumentXpath(properties.xpath),\r\n            xpathContext: self.getContextXpath(),\r\n            idPageCache: properties.idPageCache,\r\n            idCase: properties.caseId,\r\n            idWorkItem: properties.workitemId,\r\n            sessionId: self.getSessionId()\r\n        });\r\n\r\n        return returnLink;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed (Virtual method)\r\n     * @returns {string}\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n\r\n        return \"<div></div>\";\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        if (mode !== \"design\") {\r\n            var control = self.getControl();\r\n            var htmlControl = self.renderControl();\r\n\r\n            control.append(htmlControl);\r\n\r\n            self.updateControlForPrintMode(control);\r\n\r\n            // Execute the same as post-render\r\n            self.postRender();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Saves the form before the document generation\r\n     * @returns {*}\r\n     */\r\n    validateContainer: function () {\r\n        // Check if the form is valid, then generate\r\n        var form = this.getFormContainer();\r\n        return form.validateForm();\r\n    },\r\n\r\n    /**\r\n     * Saves the form before the document generation\r\n     * @returns {*}\r\n     */\r\n    save: function () {\r\n        var form = this.getFormContainer();\r\n\r\n        return form.saveForm();\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{files}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{actions}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceActionsHtml: function (html, replace) {\r\n        return html.replace(\"{{actions}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @param invalidElements\r\n     * @returns {boolean}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties,\r\n            message;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) === false) {\r\n            return true;\r\n        }\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) === false) {\r\n            return true;\r\n        }\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (properties.required && !properties.buttonExecuted) {\r\n            if (self.value) {\r\n                if (self.value.length > 0) return true;\r\n                message = self.getResource(\"render-document-required-text\");\r\n                invalidElements.push({xpath: properties.xpath, message: message});\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var mode = self.getMode();\r\n\r\n        // Call base\r\n        self._super();\r\n\r\n        // Attach handler\r\n        var generateLink = $(\".ui-bizagi-button-documentgenerator\", control);\r\n        if (mode === \"execution\") {\r\n            generateLink.click(function (e) {\r\n                if (e.isPropagationStopped()) return;\r\n                e.stopPropagation();\r\n\r\n                self.properties.buttonExecuted = true;\r\n\r\n                if (self.properties.validate) {\r\n                    // Check if the form is valid, then generate\r\n                    var isValid = self.validateContainer();\r\n                    if (isValid) {\r\n                        self.documentTemplateGenerate();\r\n                    }\r\n                } else {\r\n                    // Just generate the form\r\n                    self.documentTemplateGenerate();\r\n                }\r\n\r\n                self.properties.buttonExecuted = false;\r\n            });\r\n        }\r\n\r\n        // Configure preview handler\r\n        $(\".ui-bizagi-document-preview\", control).click(function (e) {\r\n            if (e.isPropagationStopped()) return;\r\n            e.stopPropagation();\r\n\r\n            self.showDocumentPreview($(this).data(\"url\"), $(this).data(\"filename\"));\r\n        });\r\n\r\n        // Configure preview handler\r\n        $(\".ui-bizagi-container-documents-item-delete\", control).click(function (e) {\r\n            if (e.isPropagationStopped()) return;\r\n            e.stopPropagation();\r\n\r\n            self.deleteDocumentTemplate($(this).data(\"filename\"));\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Creates the event of generation of templates.\r\n     * @param filename\r\n     */\r\n    deleteDocumentTemplate: function (filename) {\r\n        var self = this;\r\n        var params = {\r\n            xpath: self.properties.xpath + \"[fileName='\" + filename + \"']\",\r\n            idRender: self.properties.id,\r\n            xpathContext: self.getContextXpath(),\r\n            idPageCache: self.properties.idPageCache\r\n        };\r\n\r\n        self.startLoading();\r\n\r\n        $.when(self.dataService.deleteUploadFile(params))\r\n            .done(function () {\r\n                $.when(self.dataService.multiaction().getPropertyData({\r\n                    xpath: self.properties.xpath,\r\n                    idRender: self.properties.id,\r\n                    xpathContext: self.getContextXpath(),\r\n                    idPageCache: self.properties.idPageCache,\r\n                    property: \"value\"\r\n                })).done(function (documents) {\r\n                    self.resolveDeleteDocumentTemplate(documents, false, self.properties.downloadalldocuments);\r\n\r\n                    // Finish loading\r\n                    self.endLoading();\r\n                });\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Creates the event of generation of templates.\r\n     */\r\n    documentTemplateGenerate: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        self.startLoading();\r\n\r\n        //Get the context xPath\r\n        properties.xpathcontext = self.getContextXpath();\r\n        properties.xpath = self.getDocumentXpath(properties.xpath);\r\n\r\n        self.save().done(function () {\r\n\r\n            bizagi.showErrorAlertDialog = false;\r\n\r\n            $.when(self.dataService.generateDocumentTemplate(properties))\r\n                .done(function () {\r\n\r\n                    // Fetch again the value property\r\n                    $.when(self.dataService.multiaction().getPropertyData({\r\n                        xpath: properties.xpath,\r\n                        idRender: properties.id,\r\n                        xpathContext: self.getContextXpath(),\r\n                        idPageCache: properties.idPageCache,\r\n                        property: \"value\"\r\n                    })).done(function (documents) {\r\n                        self.resolveDocumentTemplateGenerate(documents, false, properties.downloadalldocuments);\r\n\r\n                        // Finish loading\r\n                        self.endLoading();\r\n                    });\r\n\r\n                }).fail(function (error) {\r\n                self.endLoading();\r\n\r\n                // Add error messages\r\n                self.showErrorMessage(error);\r\n            });\r\n        }).fail(function (message) {\r\n            self.endLoading();\r\n\r\n            // Add error messages\r\n            self.showErrorMessage(message);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Show the error message when something went wrong with the service.\r\n     * @param error\r\n     */\r\n    showErrorMessage: function (error) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var messageText = self.resources.getResource('render-upload-alert-maxsize').replace(\"{0}\", BIZAGI_SETTINGS.UploadMaxFileSize);\r\n\r\n        try {\r\n            messageText = error && typeof (error.responseText) !== \"undefined\" ? JSON.parse(error.responseText).message : error;\r\n        } catch (e) {\r\n        }\r\n\r\n        form.addErrorMessage(messageText);\r\n        form.endLoading();\r\n    },\r\n\r\n    /**\r\n     * Shows the document if the flag is set. (virtual Function)\r\n     */\r\n    autoOpenDocuments: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed (Virtual method)\r\n     * @param url\r\n     * @param filename\r\n     */\r\n    showDocumentPreview: function (url, filename) {\r\n    },\r\n\r\n    /**\r\n     * Identifies the extension of the file in a simpler way that ECM does\r\n     * @param file\r\n     * @returns {string}\r\n     */\r\n    returnCssTypeFile: function (file) {\r\n\r\n        if (file == undefined || file.lenght === 0) {\r\n            return \"ui-bizagi-document-upload-item-generic-file\";\r\n        }\r\n\r\n        var extension = file.substr((file.lastIndexOf('.') + 1));\r\n\r\n        switch (extension) {\r\n            case 'docx':\r\n                return \"ui-bizagi-document-upload-item-doc\";\r\n            case 'pdf':\r\n                return \"ui-bizagi-document-upload-item-pdf\";\r\n            case 'xlsx':\r\n                return \"ui-bizagi-document-upload-item-xls\";\r\n            default:\r\n                return \"ui-bizagi-document-upload-item-generic-file\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Redraw documents when needed\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    redrawDocuments: function (documents, noFiles, downloadAllDocuments) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var html = \"\";\r\n        var documentContainer = $(\"[data-component='files']\", control);\r\n\r\n        // Clear current links\r\n        documentContainer.empty();\r\n\r\n        // Draw links again\r\n        html += this.renderDocumentsHtml(documents);\r\n\r\n        // Check if there are documents and the flag to download all are available to show the link.\r\n        html += this.renderActionsHtml(documents, noFiles, downloadAllDocuments);\r\n\r\n        documentContainer.append(html);\r\n\r\n        //Set value\r\n        self.setValue(documents);\r\n    },\r\n\r\n    /**\r\n     * This method must be implemented by the specific class of each device. (Virtual method)\r\n     * @param file\r\n     * @returns {*|*|*}\r\n     */\r\n    renderAllDocumentDownload: function (file) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n\r\n        var template = self.renderFactory.getTemplate(self.getTemplateItem());\r\n        var url = self.buildAllDocumentsUrl();\r\n\r\n        // Don't render urls when not running in execution mode\r\n        if (mode !== \"execution\") url = \"javascript:void(0);\";\r\n\r\n        var html = $.fasttmpl(template, {\r\n            url: url,\r\n            allowDelete: properties.allowDelete,\r\n            filename: file.fileName,\r\n            mode: mode,\r\n            joined: true\r\n        });\r\n\r\n        return self.removeDeleteButton(html);\r\n    },\r\n\r\n    /**\r\n     * removeDeleteButton\r\n     * @param html\r\n     * @returns {*}\r\n     */\r\n    removeDeleteButton: function (html) {\r\n        var startIndex = html.indexOf(\"<span class=\\\"ui-bizagi-container-documents-item-delete\");\r\n\r\n        if (startIndex > 0) {\r\n            var restOfWord = html.substring(startIndex);\r\n            var finishIndex = restOfWord.indexOf(\"</span>\") + 7;\r\n\r\n            return html.substring(0, startIndex) + restOfWord.substring(finishIndex);\r\n        } else {\r\n            return html;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Process request of DeleteDocumentTemplate action\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    resolveDocumentTemplateGenerate: function (documents, noFiles, downloadAllDocuments) {\r\n        // Redraw documents\r\n        this.redrawDocuments(documents, noFiles, downloadAllDocuments);\r\n        this.value = documents;\r\n\r\n        // This does not apply for mobile.\r\n        this.autoOpenDocuments();\r\n        this.configureHandlers();\r\n    },\r\n\r\n    /**\r\n     * Process request of DocumentTemplateGenerate action\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    resolveDeleteDocumentTemplate: function (documents, noFiles, downloadAllDocuments) {\r\n        // Redraw documents\r\n        this.redrawDocuments(documents, noFiles, downloadAllDocuments);\r\n        this.value = documents;\r\n\r\n        // This does not apply for mobile.\r\n        this.configureHandlers();\r\n    },\r\n\r\n    /**\r\n     * Method to renders the documents\r\n     * @param documents\r\n     * @returns {string}\r\n     */\r\n    renderDocumentsHtml: function (documents) {\r\n        var items = \"\";\r\n\r\n        for (var i = 0; i < documents.length; i++) {\r\n            var document = {id: documents[i][0], fileName: documents[i][1]};\r\n            var item = this.renderDocumentItem(document);\r\n\r\n            items += item;\r\n        }\r\n\r\n        return items;\r\n    },\r\n\r\n    /**\r\n     * Methos to renders action of document\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     * @returns {string}\r\n     */\r\n    renderActionsHtml: function (documents, noFiles, downloadAllDocuments) {\r\n        var actions = \"\";\r\n\r\n        if (downloadAllDocuments && (!noFiles && documents.length > 0)) {\r\n            var downloadAllDocumentsLink = {fileName: this.getResource(\"render-document-downloadalldocuments\")};\r\n            var action = this.renderAllDocumentDownload(downloadAllDocumentsLink);\r\n\r\n            actions += action;\r\n        }\r\n\r\n        return actions;\r\n    },\r\n\r\n    getTemplate: function () {\r\n        return \"document\";\r\n    },\r\n\r\n    getTemplateItem: function () {\r\n        return \"document-item\";\r\n    },\r\n\r\n    getErrorTemplate: function () {\r\n        return \"form-error\";\r\n    },\r\n\r\n    getTemplateDownload: function () {\r\n        return \"document-download\";\r\n    },\r\n\r\n    getTemplateReadonly: function () {\r\n        return \"document-readonly\";\r\n    }\r\n\r\n});","/**\r\n * Base definition of a range control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.range\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function(params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     * Initialize the control with data provided\r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n    },\r\n\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function() {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var template;\r\n        var html = \"\";\r\n        // Render template\r\n        template = self.renderFactory.getTemplate(\"render-range\");\r\n        html = $.fasttmpl(template, {});\r\n        return html;\r\n    },\r\n    /**\r\n     * Sets the range controls in DOM\r\n     * @param minControl: min range control\r\n     * @param maxControl: max range control\r\n     */\r\n    setRanageControls: function (minControl, maxControl){\r\n        var self = this;\r\n        self.minControl = minControl || null;\r\n        self.maxControl = maxControl || null;\r\n        var control = self.getControl();\r\n\r\n        var $maxCanvas = $(\".bz-range-maximum\", control);\r\n        var $minCanvas = $(\".bz-range-minimum\", control);\r\n\r\n        //var $maxCanvas = $('<div>hola</div>');\r\n        //var $minCanvas = $('<div>hola</div>');\r\n\r\n        self.renderRangeControl($minCanvas, minControl);\r\n        self.renderRangeControl($maxCanvas, maxControl);\r\n    },\r\n\r\n    /*\r\n     *   Returns the internal value\r\n     */\r\n    getValue: function () {\r\n        var self = this;\r\n        var minValue = self.minControl.getValue();\r\n        var maxValue = self.maxControl.getValue();\r\n\r\n        var value = {\r\n            min: minValue,\r\n            max: maxValue\r\n        };\r\n        return value;\r\n    },\r\n\r\n    renderRangeControl: function ($canvas, control){\r\n        $.when(control.render(\"render\")).done(function (html) {\r\n            $canvas.empty().append(html);\r\n            control.postRenderElement($canvas);\r\n        });\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range date control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.rangeDate\", {}, {\r\n\r\n    /**\r\n     * Defines de min date an de max date to the range control\r\n     */\r\n    defineRangeControl: function (params) {\r\n        var self = this;\r\n\r\n        var dateMin = bizagi.rendering.date.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1 ; i >= 0; i--) {\r\n                    this.observer[i].changeMinValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var dateMax = bizagi.rendering.date.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1; i >= 0; i--) {\r\n                    this.observer[i].changeMaxValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n\r\n        var minControl = new dateMin(self.getRenderProperties(\"min\"));\r\n        var maxControl = new dateMax(self.getRenderProperties(\"max\"));\r\n\r\n        minControl.suscribe(maxControl);\r\n        maxControl.suscribe(minControl);\r\n\r\n\r\n        self.setRanageControls(minControl, maxControl);\r\n    },\r\n\r\n    getRenderProperties: function (typeRangeControl) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        var renderProperties = {\r\n            data: {\r\n                properties: {\r\n                    \"id\": properties.id,\r\n                    \"xpath\": properties.xpath + \"_\" + typeRangeControl,\r\n                    \"displayType\": \"value\"\r\n                }\r\n            },\r\n            mode: \"execute\",\r\n            parent: form,\r\n            renderFactory: self.renderFactory,\r\n            resources: bizagi.localization,\r\n            dataService: self.dataService\r\n        };\r\n\r\n        if (typeRangeControl === \"min\") {\r\n            renderProperties.data.properties.displayName = \"From\";\r\n        } else {\r\n            renderProperties.data.properties.displayName = \"To\";\r\n        }\r\n\r\n        return renderProperties;\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range money control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.rangeMoney\", {}, {\r\n    \r\n    /**\r\n     * Defines de min money an de max money to the range control\r\n     */\r\n    defineRangeControl: function () {\r\n        var self = this;\r\n\r\n        var moneyMin = bizagi.rendering.money.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1 ; i >= 0; i--) {\r\n                    this.observer[i].changeMinValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var moneyMax = bizagi.rendering.money.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1; i >= 0; i--) {\r\n                    this.observer[i].changeMaxValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var minControl = new moneyMin(self.getRenderProperties(\"min\"));\r\n        var maxControl = new moneyMax(self.getRenderProperties(\"max\"));\r\n\r\n        minControl.suscribe(maxControl);\r\n        maxControl.suscribe(minControl);\r\n\r\n        self.setRanageControls(minControl, maxControl);\r\n    },\r\n\r\n\r\n    getRenderProperties: function (typeRangeControl){\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        var renderProperties = {\r\n            data: {\r\n                properties: {\r\n                    \"id\": properties.id,\r\n                    \"xpath\": properties.xpath + \"_\" + typeRangeControl,\r\n                    \"displayType\": \"value\"\r\n                }\r\n            },\r\n            mode: \"execute\",\r\n            parent: form,\r\n            renderFactory: self.renderFactory,\r\n            resources: bizagi.localization,\r\n            dataService: self.dataService\r\n        };\r\n        return renderProperties;\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range number control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n $.Class.extend(\"bizagi.rendering.rangeNumber\", {}, {\r\n\r\n    /**\r\n    * Defines de min number an de max number to the range control\r\n    */\r\n    defineRangeControl: function () {\r\n        var self = this;\r\n\r\n        var numberMin = bizagi.rendering.number.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1 ; i >= 0; i--) {\r\n                    this.observer[i].changeMinValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var numberMax = bizagi.rendering.number.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1; i >= 0; i--) {\r\n                    this.observer[i].changeMaxValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var minControl = new numberMin(self.getRenderProperties(\"min\"));\r\n        var maxControl = new numberMax(self.getRenderProperties(\"max\"));\r\n\r\n        minControl.suscribe(maxControl);\r\n        maxControl.suscribe(minControl);\r\n\r\n        self.setRanageControls(minControl, maxControl);\r\n    },\r\n\r\n\r\n    getRenderProperties: function (typeRangeControl){\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        var renderProperties = {\r\n            data: {\r\n                properties: {\r\n                    \"id\": properties.id,\r\n                    \"xpath\": properties.xpath + \"_\" + typeRangeControl,\r\n                    \"displayType\": \"value\"\r\n                }\r\n            },\r\n            mode: \"execute\",\r\n            parent: form,\r\n            renderFactory: self.renderFactory,\r\n            resources: bizagi.localization,\r\n            dataService: self.dataService\r\n        };\r\n\r\n        return renderProperties;\r\n    }\r\n});\r\n","/*\r\n *   Name: BizAgi Render Radio Class\r\n *   Author: Ivan Ricardo Taimal Narvaez\r\n *   Comments:\r\n *   -   This script will define basic stuff for radio renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.checkList\", {}, {\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.horizontal = bizagi.util.parseBoolean(properties.horizontal) || false;\r\n        self.setValue(properties.items);\r\n        self.updateOriginalValue();\r\n    },\r\n\r\n    /*\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Call base\r\n        self._super();\r\n        self.checkListGroup = $(\".ui-bizagi-render-checkList .ui-bizagi-render-checkList-item\", control);\r\n    },\r\n\r\n    /*\r\n     *   Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(self.getTemplateName());\r\n        var items = self.properties.items || [];\r\n\r\n        var html = $.fasttmpl(template, $.extend(self.getTemplateParams(), {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            unique: bizagi.util.randomNumber(10000, 1000000),\r\n            idPageCache: properties.idPageCache,\r\n            items: items\r\n        }));\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     *   Gets the template used by the combo render\r\n     *   can be overriden in subclasses to reuse logic and just change the template\r\n     */\r\n    getTemplateName: function () {\r\n        return \"checkList\";\r\n    },\r\n\r\n    /*\r\n     *   Determines if we need to show the empty node or not\r\n     *   Can be overriden to change behaviour\r\n     */\r\n    showEmpty: function () {\r\n        return false;\r\n    },\r\n\r\n    /*\r\n     *   Determines if we need to show the current data regardless if it belongs to data or not\r\n     *   Can be overriden to change behaviour\r\n     */\r\n    showCurrentData: function () {\r\n        return false;\r\n    },\r\n\r\n    /*\r\n     *   Adds custom parameters to process the template\r\n     */\r\n    getTemplateParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return {\r\n            vertical: !properties.horizontal\r\n        };\r\n    },\r\n    /*\r\n     * Cleans current data\r\n     */\r\n    cleanData: function () {\r\n\r\n    },\r\n\r\n    setValue: function (value) {;\r\n        this.value = bizagi.clone(value);\r\n    },\r\n\r\n    getValue: function (data) {;\r\n        return this.value || [];\r\n    }\r\n\r\n});\r\n\r\n","/**\r\n * Base definition of Action Launcher and Entity template controls\r\n *\r\n * @author: Edward Morales\r\n */\r\n$.Class.extend(\"bizagi.rendering.actionLauncher\", {}, {\r\n\r\n    /*\r\n     * Initialize the control with data provided\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n        var form = self.getFormContainer();\r\n        this.typeForm = form.properties.typeForm || \"\";\r\n        var mode = self.getMode();\r\n        var properties = self.properties;\r\n\r\n        self.deferredActions = new $.Deferred();\r\n        self.deferredActions.promise();\r\n\r\n        if (mode == \"execution\") {\r\n            self.engine = new bizagi.templateEngine({\r\n                renderFactory: self.renderFactory,\r\n                cache: true,\r\n                autoGenerateData: false,\r\n                templateGuid: properties.selecttemplate\r\n            });\r\n        }\r\n\r\n        // Data of get process property value\r\n        self.processPropertyValueArgs = {\r\n            \"pcaseId\": self.getIdCase(),\r\n            \"pguidEntity\": self.properties.guidEntity,\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"property\": \"data\",\r\n            \"psurrogatedKey\": self.properties.surrogatedKey,\r\n            \"ptags\": self.properties.tagslist || [],\r\n            \"pmaxitems\": self.properties.maxItems,\r\n            \"pactionXpath\": self.properties.xpathActions\r\n        };\r\n\r\n        self.processPropertyValueDataTmplArgs = {\r\n            \"pactionXpath\": self.properties.xpathActions,\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"ptemplateGuid\": properties.selecttemplate,\r\n            \"property\": \"dataTemplate\",\r\n            \"xpathActions\": self.properties.xpathActions\r\n        };\r\n\r\n        self.properties.valueWidth = 100;\r\n        self.properties.displayType = \"value\";\r\n        var defaultAllowActions = data.properties.type === \"entityTemplate\" ? false : true;\r\n        self.properties.allowactions = (typeof data.properties.allowactions == \"undefined\")\r\n            ? defaultAllowActions : data.properties.allowactions;\r\n        self.properties.isHorizontal = (typeof data.properties.isHorizontal == \"undefined\")\r\n            ? true : data.properties.isHorizontal;\r\n        self.properties.allowSearch = (typeof data.properties.allowSearch == \"undefined\")\r\n            ? false : data.properties.allowSearch;\r\n        self.properties.selecttemplate = (typeof data.properties.selecttemplate == \"undefined\")\r\n            ? \"\" : data.properties.selecttemplate;\r\n        self.properties.templatetype = (typeof properties.templatetype != \"undefined\")\r\n            ? properties.templatetype : 'none';\r\n\r\n        self.properties.sessionId = form.params.data.sessionId;\r\n\r\n        if (!self.properties.value) {\r\n            self.properties.value = self.value = [];\r\n            self.properties.originalValue = [];\r\n        } else if (typeof self.properties.value == \"string\") {\r\n            self.properties.value = self.value = JSON.parse(self.properties.value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Send processpropertyvalue in order to execute an Action\r\n     * This method is used when this control stay in Summary form or Global form\r\n     * @param action\r\n     */\r\n    executeActionImmediately: function (action) {\r\n        var self = this;\r\n        //Execute action immediately\r\n        var form = self.getFormContainer();\r\n\r\n        var processPropertyValueExecuteAction = {\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"property\": \"executeAction\",\r\n            \"psurrogatedKey\": self.properties.surrogatedKey,\r\n            \"pguidAction\": action.guidAction,\r\n            \"pparameters\": JSON.encode({\r\n                \"idStartScope\": action.idStartScope,\r\n                \"pactionXpath\": self.properties.xpathActions,\r\n                \"idPageCache\": action.idPageCache\r\n            })\r\n        };\r\n\r\n        self.dataService.executeActions(processPropertyValueExecuteAction).done(function (data) {\r\n            self.notifyExecution(data, action);\r\n        }).fail(function (error) {\r\n            // TODO: Create generic mechanism to send notifications\r\n            self.notifyExecution(\"Error\", action);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * notify action execution status\r\n     * @param response\r\n     * @param actionName\r\n     */\r\n    notifyExecution: function (response, actionName) {\r\n        // To override in each device\r\n    },\r\n\r\n    /**\r\n     * Render control in read only mode: properties.editable = false\r\n     * @return {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Make a postrender of readonly control\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this.properties.readOnly = true;\r\n        this.postRender();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @return {string}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n        var template;\r\n        var html = \"\";\r\n\r\n        // Render template\r\n        if (mode == \"design\") {\r\n            template = self.renderFactory.getTemplate(\"render-actionLauncher-design\");\r\n            var params = {\r\n                type: properties.type,\r\n                isHorizontal: properties.isHorizontal,\r\n                allowSearch: properties.allowSearch,\r\n                templateDefined: properties.templatetype != 'none',\r\n                allowactions: properties.allowactions\r\n            };\r\n            html = $.fasttmpl(template, params);\r\n        } else if (properties.surrogatedKey) {\r\n            template = self.renderFactory.getTemplate(\"render-actionLauncher\");\r\n            html = $.fasttmpl(template, { allowactions: self.properties.allowactions });\r\n        }\r\n        return html;\r\n    },\r\n\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @return {*}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var value = self.getValue();\r\n        var bValid = false;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) == false) {\r\n            return true;\r\n        }\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) == false) {\r\n            return true;\r\n        }\r\n\r\n        // Check required\r\n        if (properties.required) {\r\n            if (self.value) {\r\n                if (self.value.length > 0)\r\n                    return true;\r\n                message = self.getResource(\"render-required-register-action\");\r\n                invalidElements.push({ xpath: properties.xpath, message: message });\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        // TODO: write functionality\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n    },\r\n\r\n    /**\r\n     * Process an action\r\n     * @param action\r\n     */\r\n    actionManager: function (action) {\r\n        var self = this;\r\n        var guidProcess = action.guidProcess || \"\";\r\n        var def = new $.Deferred();\r\n\r\n        action.recordXpath = self.getFormContainer().properties.recordXpath;\r\n\r\n        /**\r\n         * Check if action is a process\r\n         */\r\n        switch (action.actionType) {\r\n            case \"Process\":\r\n                // Verify if case has startform\r\n                var params = {\r\n                    guidWFClass: guidProcess\r\n                };\r\n\r\n                $.when(self.dataService.hasStartForm(params)).done(function (result) {\r\n                    if (result.hasStartForm) {\r\n                        // Open a dialog with startform and wait for Scope\r\n                        $.when(self.processStartForm({\r\n                            guidprocess: guidProcess,\r\n                            title: action.displayName,\r\n                            recordXpath: action.recordXpath\r\n                        })).done(function (idStartScope) {\r\n                            action.idStartScope = idStartScope;\r\n                            def.resolve(action);\r\n                        });\r\n                    } else {\r\n                        // Just add action to queue to be executed on nextEvent\r\n                        def.resolve(action);\r\n                    }\r\n                });\r\n\r\n                break;\r\n            case \"Rule\":\r\n                // Just add action to queue to be executed on nextEvent\r\n                def.resolve(action);\r\n                break;\r\n            case \"Form\":\r\n                // If it has additional xpath this action is a form of collection\r\n                if (action.xpathContext) {\r\n                    $.when(self.processActionFormCollection(action)).done(function (idStartScope) {\r\n                        action.idStartScope = idStartScope;\r\n                        def.resolve(action);\r\n                    });\r\n                } else {\r\n\r\n                    if (action.actionType === \"Form\") {\r\n                        action.xpathContext = undefined;\r\n                        action.contextType = \"entitytemplate\";\r\n                        action.guidEntity = action.guidEntity || self.properties.guidEntity;\r\n                    }\r\n\r\n                    $.when(self.processActionForm(action)).done(function (idStartScope) {\r\n                        action.idStartScope = idStartScope;\r\n                        def.resolve(action);\r\n                    });\r\n                }\r\n                break;\r\n        }\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Add actions within value object\r\n     * @param action\r\n     */\r\n    addActionToQueue: function (action) {\r\n        var self = this;\r\n        var actionsList = self.getValue();\r\n        var formParams = self.getFormContainer().getParams();\r\n\r\n        action.params = action.params || {};\r\n\r\n        var recordXpath = self.properties.xpathContext;\r\n\r\n        switch (action.actionType) {\r\n            case \"Process\":\r\n                action.params = {\r\n                    idStartScope: action.idStartScope,\r\n                    additionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n                    idParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n                    recordXpath: recordXpath\r\n                };\r\n                break;\r\n            case \"Form\":\r\n                action.params = {\r\n                    idStartScope: action.idStartScope,\r\n                    additionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n                    entityXpath: self.properties.xpathActions,\r\n                    idParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n                    idEntity: action.idEntity\r\n                };\r\n                break;\r\n            case \"Rule\":\r\n                action.params = {\r\n                    xpathActions: action.xpathActions || \"\",\r\n                    recordXpath: recordXpath\r\n                };\r\n                break;\r\n        }\r\n\r\n        var newValueActionsList = bizagi.clone(actionsList);\r\n        newValueActionsList.push(action);\r\n        self.setValue(newValueActionsList);\r\n        self.setDisplayValue(newValueActionsList);\r\n    },\r\n\r\n    /**\r\n     * Remove action within value object\r\n     * @param index\r\n     */\r\n    removeActionToQueue: function (index) {\r\n        var self = this;\r\n        var newValueActionsList = bizagi.clone(self.getValue());\r\n        newValueActionsList.splice(index, 1);\r\n        self.setValue(newValueActionsList);\r\n        self.setDisplayValue(newValueActionsList);\r\n    },\r\n    /**\r\n     * Add the render data to the given collection in order to send data to the server\r\n     * @param renderValues\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        if (self.controlValueIsChanged()) {\r\n            var properties = self.properties;\r\n            var xpath = properties.xpath;\r\n            var controlValue = self.getValue();\r\n            var actions = [];\r\n            $.each(controlValue, function (index, value) {\r\n                var action = {};\r\n                action.params = value.params || {};\r\n                action.guidAction = value.guidAction;\r\n\r\n                actions.push(action);\r\n            });\r\n            renderValues[xpath] = (actions.length == 0) ? \"\" : JSON.encode(actions);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Util to count how many actions are there\r\n     * @param action\r\n     * @return {number}\r\n     */\r\n    countSameActions: function (action) {\r\n        var self = this;\r\n        var value = self.getValue();\r\n        var count = 0;\r\n        $.each(value, function (key, value) {\r\n            if (value.guidAction == action.guidAction) {\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    },\r\n\r\n    /**\r\n    * Normalize action launcher control properties\r\n    * @param actionsLaucher\r\n    * @returns {*}\r\n    */\r\n    getPropertiesActionLaucher: function (actionsLaucher) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        /**\r\n         * The properties of actionLaucher have to 7 properties mandatory\r\n         * 0: guidProcess\r\n         * 1: displayName\r\n         * 2: title\r\n         * 3: actionType\r\n         * 4: guidaction\r\n         * 5: xpathContext\r\n         * 6: readOnlyForm: default: false\r\n         */\r\n        for (var i = 0, length = actionsLaucher.length, j = length; i < j; i += 1) {\r\n            //some ocassions server return 6 or 7 items\r\n            //return 6 properties when launch form action from action launcher control.\r\n            //in this case dont return xpathContext.\r\n            // So, add item position 5, simulate xpathContext empty.\r\n            if (actionsLaucher[i].length === 6) {\r\n                actionsLaucher[i].splice(5, 0, \"\");\r\n\r\n                if (actionsLaucher[i][3] == \"Process\" && form.properties.xpathContext) {\r\n                    actionsLaucher[i][5] = form.properties.xpathContext;\r\n                }\r\n            }\r\n        }\r\n\r\n        return actionsLaucher;\r\n    }\r\n});\r\n","/**\r\n * Base definition of entity template\r\n *\r\n * @author: Andres Fernando Muñoz\r\n * based on action launcher control\r\n */\r\n$.Class.extend(\"bizagi.rendering.entityTemplate\", {}, {\r\n    /**\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /**\r\n     * Initialize the control with data provided\r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n        var form = self.getFormContainer();\r\n\r\n        self.deferredActions = new $.Deferred();\r\n        self.deferredActions.promise();\r\n\r\n        // Data of get process property value\r\n        self.processPropertyValueArgs = {\r\n            \"pcaseId\": self.getIdCase(),\r\n            \"pguidEntity\": self.properties.guidEntity,\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"property\": \"data\",\r\n            \"psurrogatedKey\": self.properties.surrogatedKey\r\n        };\r\n\r\n        self.properties.valueWidth = 100;\r\n        self.properties.displayType = \"value\";\r\n        self.properties.allowactions = (typeof data.properties.allowactions == \"undefined\") ? true : data.properties.allowactions;\r\n\r\n        if(!self.properties.value) {\r\n            self.properties.value = self.value = [];\r\n        } else if(typeof self.properties.value == \"string\") {\r\n            self.properties.value = self.value = JSON.parse(self.properties.value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var template;\r\n        var html = \"\";\r\n        // Render template\r\n        if (mode == \"design\") {\r\n            template = self.renderFactory.getTemplate(\"render-entityTemplate-design\");\r\n            html = $.fasttmpl(template, {});\r\n        }\r\n        else if(self.properties.surrogatedKey) {\r\n            template = self.renderFactory.getTemplate(\"render-entityTemplate\");\r\n            html = $.fasttmpl(template, {allowactions: self.properties.allowactions});\r\n        }\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        // TODO: write functionality\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        // TODO: write functionality\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n    }\r\n});","/**\r\n * Base definition of Polymorphic launcher\r\n *\r\n * @author: Edward J Morales\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.polymorphicLauncher\", {}, {\r\n\t/*\r\n\t * Constructor\r\n\t */\r\n\tinit: function(params) {\r\n\t\t// Call base\r\n\t\tthis._super(params);\r\n\t},\r\n\r\n\t/*\r\n\t * Initialize the control with data provided\r\n\t */\r\n\tinitializeData: function(data) {\r\n\t\tvar self = this;\r\n\t\t// Call base\r\n\t\tthis._super(data);\r\n\t\tvar form = self.getFormContainer();\r\n\t\tthis.typeForm = form.properties.typeForm || \"\";\r\n\t\tvar mode = self.getMode();\r\n\r\n\t\tself.deferredActions = new $.Deferred();\r\n\t\tself.deferredActions.promise();\r\n\r\n\t\tself.properties.valueWidth = 100;\r\n\t\tself.properties.displayType = \"value\";\r\n\t\tself.properties.allowSearch = (typeof data.properties.allowSearch == \"undefined\") ? false : data.properties.allowSearch;\r\n\t\tself.properties.additionalXpath = self.properties.additionalXpath || [];\r\n\r\n\t\tif(!self.properties.value) {\r\n\t\t\tself.properties.value = self.value = [];\r\n\t\t\tself.properties.originalValue = [];\r\n\t\t} else if(typeof self.properties.value == \"string\") {\r\n\t\t\tself.properties.value = self.value = JSON.parse(self.properties.value);\r\n\t\t}\r\n\r\n\t\t// Data of get process property value\r\n\t\tself.processPropertyValueArgs = {\r\n\t\t\t\"pcaseId\": self.getIdCase(),\r\n\t\t\t\"pguidEntity\": self.properties.guidEntity,\r\n\t\t\t\"idRender\": self.properties.id,\r\n\t\t\t\"xpathContext\": form.properties.xpathContext,\r\n\t\t\t\"idPageCache\": form.properties.idPageCache,\r\n\t\t\t\"property\": \"data\",\r\n\t\t\t\"ptags\": self.getTagList(self.properties.tagslist),\r\n\t\t\t\"additionalXpaths\": self.properties.additionalXpath\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t * Send processpropertyvalue in order to execute an Action\r\n\t * This method is used when this control stay in Summary form or Global form\r\n\t * @param action\r\n\t */\r\n\texecuteActionImmediately: function(action) {\r\n\t\tvar self = this;\r\n\t\t//Execute action immediately\r\n\t\tvar form = self.getFormContainer();\r\n\r\n\t\tvar processPropertyValueExecuteConstructor = {\r\n\t\t\t\"idRender\": self.properties.id,\r\n\t\t\t\"xpathContext\": form.properties.xpathContext,\r\n\t\t\t\"idPageCache\": form.properties.idPageCache,\r\n\t\t\t\"property\": \"executeConstructor\",\r\n\t\t\t\"psurrogatedKey\": self.properties.surrogatedKey,\r\n\t\t\t\"pguidConstructor\": action.guidConstructor,\r\n\t\t\t\"pparameters\": JSON.encode({\r\n\t\t\t\t\"idStartScope\": action.idStartScope,\r\n\t\t\t\t\"pactionXpath\": self.properties.xpathActions,\r\n\t\t\t\t\"idPageCache\": action.idPageCache\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tself.dataService.executeActions(processPropertyValueExecuteConstructor).done(function(data) {\r\n\t\t\tself.notifyExecution(data.response, action);\r\n\t\t}).fail(function(error) {\r\n\t\t\t// TODO: Create generic mechanism to send notifications\r\n\t\t\tself.notifyExecution(\"Error\", action);\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * notify action execution status\r\n\t * @param response\r\n\t */\r\n\tnotifyExecution: function(response, actionName) {\r\n\t\t// To override in each device\r\n\t},\r\n\r\n\t/**\r\n\t * Render control in read only mode: properties.editable = false\r\n\t * @return {*}\r\n\t */\r\n\trenderReadOnly: function() {\r\n\t\treturn this.renderControl();\r\n\t},\r\n\r\n\t/**\r\n\t * Make a postrender of readonly control\r\n\t */\r\n\tpostRenderReadOnly: function() {\r\n\t\tthis.properties.readOnly = true;\r\n\t\tthis.postRender();\r\n\t},\r\n\r\n\t/**\r\n\t * Template method to implement in each children to customize each control\r\n\t * @return {string}\r\n\t */\r\n\trenderControl: function() {\r\n\t\tvar self = this;\r\n\t\tvar properties = self.properties;\r\n\t\tvar mode = self.getMode();\r\n\t\tvar template;\r\n\t\tvar html = \"\";\r\n\r\n\t\t// Render template\r\n\t\tif(mode == \"design\") {\r\n\t\t\ttemplate = self.renderFactory.getTemplate(\"render-polymorphicLauncher-design\");\r\n\t\t\tvar params = {\r\n\t\t\t\ttype: properties.type,\r\n\t\t\t\tallowSearch: properties.allowSearch\r\n\t\t\t};\r\n\t\t\thtml = $.fasttmpl(template, params);\r\n\t\t} else if(properties.surrogatedKey) {\r\n\t\t\ttemplate = self.renderFactory.getTemplate(\"render-polymorphicLauncher\");\r\n\t\t\thtml = $.fasttmpl(template);\r\n\t\t}\r\n\t\treturn html;\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Public method to determine if a value is valid or not\r\n\t * @param invalidElements\r\n\t * @return {*}\r\n\t */\r\n\tisValid: function(invalidElements) {\r\n\t\tvar self = this,\r\n\t\t\tproperties = self.properties;\r\n\t\t// Call base\r\n\t\tvar bValid = this._super(invalidElements);\r\n\t\tvar value = self.getValue();\r\n\t\t// TODO: write functionality\r\n\t\treturn bValid;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the value in the rendered control\r\n\t * @param value\r\n\t */\r\n\tsetDisplayValue: function(value) {\r\n\t\tvar self = this;\r\n\t\t// Set internal value\r\n\t\tself.setValue(value, false);\r\n\t},\r\n\r\n\t/**\r\n\t * Process an action\r\n\t * @param action\r\n\t */\r\n\tactionManager: function(action) {\r\n\t\tvar self = this;\r\n\t\tvar guidProcess = action.guidObject || \"\";\r\n\t\tvar def = new $.Deferred();\r\n\r\n        action.recordXpath = self.getFormContainer().properties.recordXpath;\r\n\r\n\t\t/**\r\n\t\t/**\r\n\t\t * Check if action is a process\r\n\t\t */\r\n\t\tswitch(action.actionType) {\r\n\t\t\tcase \"Process\":\r\n\t\t\t\t// Verify if case has startform\r\n\t\t\t\tvar params = {\r\n\t\t\t\t\tguidWFClass: guidProcess\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$.when(self.dataService.hasStartForm(params)).done(function(result) {\r\n\t\t\t\t\tif(result.hasStartForm) {\r\n\t\t\t\t\t\t// Open a dialog with startform and wait for Scope\r\n\t\t\t\t\t\t$.when(self.processStartForm({\r\n\t\t\t\t\t\t\tguidprocess: guidProcess,\r\n\t\t\t\t\t\t\ttitle: action.displayNamee,\r\n                            recordXpath: action.recordXpath\r\n\t\t\t\t\t\t})).done(function(idStartScope) {\r\n\t\t\t\t\t\t\taction.idStartScope = idStartScope;\r\n\t\t\t\t\t\t\tdef.resolve(action);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Just add action to queue to be executed on nextEvent\r\n\t\t\t\t\t\tdef.resolve(action);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Rule\":\r\n\t\t\t\t// Just add action to queue to be executed on nextEvent\r\n\t\t\t\tdef.resolve(action);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Form\":\r\n\t\t\t\t$.when(self.processActionForm(action)).done(function(idStartScope) {\r\n\t\t\t\t\taction.idStartScope = idStartScope;\r\n\t\t\t\t\tdef.resolve(action);\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn def.promise();\r\n\t},\r\n\r\n\t/**\r\n\t * Add actions within value object\r\n\t * @param action\r\n\t */\r\n\taddActionToQueue: function(action) {\r\n\t\tvar self = this;\r\n\t\tvar actionsList = self.getValue();\r\n\t\tvar formParams = self.getFormContainer().getParams();\r\n\t\t\r\n\t\taction.params = action.params || {};\r\n\r\n        var recordXpath = self.properties.xpathContext;\r\n\r\n\t\tswitch(action.actionType) {\r\n\t\t\tcase \"Process\":\r\n\t\t\t\taction.params = {\r\n\t\t\t\t\tadditionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n\t\t\t\t\tidParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n                    recordXpath: recordXpath\r\n\t\t\t\t};\r\n                if (typeof action.idStartScope !== \"undefined\") {\r\n                    action.params.idStartScope = action.idStartScope;\r\n                }\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Form\":\r\n\t\t\t\taction.params = {\r\n\t\t\t\t\tidStartScope: action.idStartScope,\r\n\t\t\t\t\tadditionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n\t\t\t\t\tentityXpath: self.properties.xpathActions,\r\n\t\t\t\t\tidParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n\t\t\t\t\tidEntity: action.idEntity,\r\n\t\t\t\t\tguidEntity: action.guidEntity\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Rule\":\r\n\t\t\t\t//TODO\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tactionsList.push(action);\r\n\t\tself.setValue(actionsList);\r\n\t\tself.setDisplayValue(actionsList);\r\n\t},\r\n\r\n\t/**\r\n\t * Remove action within value object\r\n\t * @param index\r\n\t */\r\n\tremoveActionToQueue: function(index) {\r\n\t\tvar self = this;\r\n\t\tvar value = self.getValue();\r\n\t\tvalue.splice(index, 1);\r\n\t\tself.setValue(value);\r\n\t\tself.setDisplayValue(value);\r\n\t},\r\n\t/**\r\n\t * Add the render data to the given collection in order to send data to the server\r\n\t * @param renderValues\r\n\t */\r\n\tcollectData: function(renderValues) {\r\n\t\tvar self = this;\r\n\t\tif(self.controlValueIsChanged()) {\r\n\t\t\tvar properties = self.properties;\r\n\t\t\tvar xpath = properties.xpath;\r\n\t\t\tvar controlValue = self.getValue();\r\n\t\t\tvar actions = [];\r\n\t\t\t$.each(controlValue, function(index, value) {\r\n\t\t\t\tvar action = {};\r\n\t\t\t\taction.params = value.params || {};\r\n\t\t\t\taction.guidAction = value.guidObject || value.guidAction;\r\n\t\t\t\taction.displayName = value.displayName;\r\n\t\t\t\taction.guidConstructor = value.guidConstructor;\r\n\t\t\t\taction.actionType = value.actionType;\r\n\t\t\t\taction.xpathContext = value.xpathContext;\r\n\t\t\t\taction.guidEntity = value.guidEntity;\r\n\t\t\t\tactions.push(action);\r\n\t\t\t});\r\n\t\t\trenderValues[xpath] = (actions.length == 0) ? \"\" : JSON.encode(actions);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Util to count how many actions are there\r\n\t * @param action\r\n\t * @return {number}\r\n\t */\r\n\tcountSameActions: function(action) {\r\n\t\tvar self = this;\r\n\t\tvar value = self.getValue();\r\n\t\tvar count = 0;\r\n\t\t$.each(value, function(key, value) {\r\n\t\t\tif(value.guidAction == action.guidAction) {\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn count;\r\n\t},\r\n\r\n\t/**\r\n\t * Get list of tags\r\n\t * @param taglist\r\n\t * @return {Array}\r\n\t */\r\n\tgetTagList: function(taglist) {\r\n\t\ttaglist = taglist || [];\r\n\t\tvar result = [];\r\n\r\n\t\tfor(var i = taglist.length; i > 0; i--) {\r\n\t\t\tresult.push(taglist[i - 1].value);\r\n\t\t}\r\n\t\treturn (result.length > 0) ? result : \"\";\r\n\t}\r\n});","/*\r\n *   Name: BizAgi Render Column Decorator Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define basic stuff for Columns\r\n */\r\n\r\nbizagi.rendering.element.extend(\"bizagi.rendering.columns.column\", {}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        this.decoratedClass = params.decorated;\r\n        this.data = params.data;\r\n        if (params.singleInstance) {\r\n            this.decorated = new this.decoratedClass({\r\n                data: this.data,\r\n                parent: this.parent,\r\n                renderFactory: this.renderFactory,\r\n                dataService: this.dataService\r\n            });\r\n            this.decorated.getControl = this.getControl;\r\n            params.decorated = this.decorated;\r\n            this.decorated.properties.isColumn = true;\r\n        } else {\r\n            this.decorateRenders = [];\r\n        }\r\n        this.grid = params.parent;\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n        properties.columnVisible = bizagi.util.parseBoolean(properties.columnVisible) != null ? bizagi.util.parseBoolean(properties.columnVisible) : true;\r\n        properties.align = properties.align || 'center';\r\n        properties.textFormat = properties.textFormat || {};\r\n        properties.submitOnChange = (typeof properties.submitOnChange != \"undefined\") ? bizagi.util.parseBoolean(properties.submitOnChange) : false;\r\n        properties.singleInstance = params.singleInstance;\r\n        properties.editable = (typeof properties.editable != \"undefined\") ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.visible = (typeof properties.visible != \"undefined\") ? bizagi.util.parseBoolean(properties.visible) : true;\r\n        properties.required = (typeof properties.required != \"undefined\") ? bizagi.util.parseBoolean(properties.required) : false;\r\n        properties.showColumn = (typeof properties.showColumn != \"undefined\") ? bizagi.util.parseBoolean(properties.showColumn) : true;\r\n\r\n        // Define if it is editable or not        \r\n        try {\r\n            if (params.parent && typeof params.parent.properties.editable == \"boolean\" && !params.parent.properties.editable) {\r\n                properties.editable = false;\r\n            }\r\n        } catch (e) {\r\n        }\r\n\r\n        // Define if the column is readonly\r\n        this.readonly = properties.readonly !== undefined ? properties.readonly : false;\r\n        if (this.readonly) properties.editable = required = false;\r\n\r\n        // Save original properties\r\n        this.originalProperties = JSON.parse(JSON.encode(properties));\r\n    },\r\n\r\n    /*\r\n    *   Return true if the column is read-only, so we can make a quick render\r\n    */\r\n    isReadonly: function () {\r\n        return false;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Method to retrieve the decorated control\r\n    */\r\n    getControl: function () {\r\n        var self = this;\r\n        return $(\".ui-bizagi-render-control\", self.element || self.observableElement);\r\n    },\r\n    /*\r\n    *   Returns the decorated cell instance to use\r\n    */\r\n    getDecorated: function (surrogateKey) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (properties.singleInstance) {\r\n            return self.decorated;\r\n        }\r\n        else {\r\n            var decorated = self.decorateRenders[surrogateKey];\r\n            if (decorated == undefined) {\r\n                if (typeof self.decorateRenders != \"object\") {\r\n                    self.decorateRenders = [];\r\n                }\r\n                var instanceDecoratedClass = new this.decoratedClass({\r\n                    data: bizagi.clone(this.data),\r\n                    parent: this.parent,\r\n                    renderFactory: this.renderFactory,\r\n                    dataService: this.dataService\r\n                });\r\n                decorated = instanceDecoratedClass;\r\n                self.decorateRenders[surrogateKey] = instanceDecoratedClass;\r\n\r\n                // Set surrogate key to all controls\r\n                decorated.surrogateKey = surrogateKey;\r\n\r\n                // Execute decorated overrides\r\n                self.applyOverrides(decorated);\r\n\r\n                // Also override setDisplayValue on summary row for non numeric columns\r\n                if (surrogateKey == \"summary\" && decorated.properties.type != \"columnMoney\" && decorated.properties.type != \"columnNumber\") {\r\n\r\n                    decorated.setDisplayValue = function (value) {\r\n                        var control = this.getControl();\r\n\r\n                        // Replace line breaks for html line breaks\r\n                        control.html(value);\r\n                    };\r\n                }\r\n            }\r\n            return decorated;\r\n        }\r\n    },\r\n    /*\r\n    *   Set a ready function to execute when the render has been inserted in the dom\r\n    */\r\n    ready: function () {\r\n        return this.readyDeferred.promise();\r\n    },\r\n    /*\r\n    *   Load stuff needed for the column\r\n    *   It could return a promise if the column need to load async stuff\r\n    */\r\n    initialize: function () {\r\n        // Override to do any stuff needed here\r\n    },\r\n    /* \r\n    *  Method to determine if the render value can be sent to the server or not\r\n    */\r\n    canBeSent: function (surrogateKey, cellOverrides) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n\r\n        if (cellOverrides) {\r\n            decorated.properties.visible = cellOverrides.visible;\r\n            decorated.properties.editable = cellOverrides.editable;\r\n        }\r\n        return decorated.canBeSent() || (!self.properties.editable && self.hasChanged()) || (!decorated.properties.editable && self.hasChanged()) || (decorated.properties.editabilityEnabled);\r\n    },\r\n    /*\r\n    *   Method to check if a value is valid or not in this render\r\n    */\r\n    isValueValid: function (surrogateKey, value, messages, propertyOverrides) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var invalidElements = [];\r\n\r\n        if (propertyOverrides.visible) {\r\n            self.setValue(surrogateKey, value);\r\n\r\n            // Override properties\r\n            decorated.properties = $.extend(decorated.properties, propertyOverrides);\r\n\r\n            if (self.grid && typeof(decorated.grid) === \"undefined\") {\r\n                decorated.grid = self.grid;\r\n            }\r\n\r\n            // Validate field\r\n            decorated.isValid(invalidElements);\r\n        }\r\n\r\n        if (invalidElements.length > 0) {\r\n            $.each(invalidElements, function (i, invalidElement) {\r\n                messages.push(invalidElement.message);\r\n            });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    },\r\n    /*\r\n    *   Apply custom overrides to each decorated instance\r\n    */\r\n    applyOverrides: function (decorated) {\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        // Set grid and id references to the control in order to render the content\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        decorated.grid = self.grid;\r\n        decorated.column = this;\r\n        decorated.surrogateKey = surrogateKey;\r\n\r\n        // Set cell value\r\n        self.setValue(surrogateKey, value);\r\n\r\n        // Override render properties\r\n        self.overrideDecoratedRenderProperties(surrogateKey);\r\n\r\n        // Set flag to check when a render has changed\r\n        self.changed = false;\r\n\r\n        // If the render is not editable return the readonly version of the column\r\n        //Fix: Uncaught RangeError: Maximum call stack size exceeded\r\n        if (!properties.editable && arguments[3] !== \"CALLER_RENDER_READ_ONLY_COLUMNSLINK\")\r\n            return self.renderReadOnly.apply(self, arguments);\r\n\r\n        // Returns the decorated render inside a custom layout for columns\r\n        self.readyDeferred = new $.Deferred();\r\n        var cell = decorated.render(\"cell\");\r\n\r\n        // If the render changes set the flag on\r\n        decorated.bind(\"renderchange\", function () {\r\n            self.changed = true;\r\n        });\r\n\r\n        self.bind(\"rendered\", function () {\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n        return cell;\r\n    },\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRender: function (surrogateKey, cell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        decorated.postRenderElement(cell);\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element when the element is read-only\r\n    */\r\n    renderReadOnly: function (surrogateKey, value) {\r\n        var self = this;\r\n        // Set grid and id references to the control in order to render the content\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        decorated.grid = self.grid;\r\n        decorated.column = this;\r\n        decorated.surrogateKey = surrogateKey;\r\n\r\n        // Set cell value\r\n        self.setValue(surrogateKey, value);\r\n\r\n        // Override render properties\r\n        self.overrideDecoratedRenderProperties(surrogateKey);\r\n\r\n        // Changes editable to false to render read-only\r\n        decorated.properties.editable = false;\r\n\r\n        // Perform the internal render\r\n        self.readyDeferred = new $.Deferred();\r\n        var result = decorated.render(\"cell.readonly\");\r\n\r\n        self.bind(\"rendered\", function () {\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n        // Returns the decorated render inside a custom layout for columns\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *  Returns the html template to draw the summary cell\r\n    */\r\n    renderSummary: function (key, value) {\r\n        var self = this;\r\n        var result = self.renderFactory.getTemplate(\"cell.summary\")\r\n        return $.tmpl(result).html();\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRenderReadOnly: function (surrogateKey, cell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var editable = self.properties.editable;\r\n        decorated.properties.editable = false;\r\n        if (self.properties.singleInstance) {\r\n            decorated.element = cell;\r\n        }\r\n        decorated.postRenderElement(cell);\r\n        decorated.properties.editable = editable;\r\n    },\r\n\r\n    /*\r\n    * Return false to all columns that doesn't need special treatment (like number or currency)\r\n    */\r\n    postRenderSummary: function () {\r\n        return false;\r\n    },\r\n\r\n    /*\r\n    *   Returns the cell html to be inserted in the table\r\n    */\r\n    getCell: function () {\r\n        return this.decorated.getDisplayValue();\r\n    },\r\n    /*\r\n    *   Sets the surrogate key for this row\r\n    */\r\n    setSurrogateKey: function (key) {\r\n        this.surrogateKey = key;\r\n    },\r\n    /*\r\n    *   Sets the internal value, only must be called internally\r\n    */\r\n    setValue: function (surrogateKey, value) {\r\n        var self = this;\r\n\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated != \"undefined\" && decorated != null) {\r\n\r\n            decorated.properties.originalValue = value;\r\n            decorated.properties.previousValue = value;\r\n\r\n             if ((value === null || value === undefined) && (self.properties.defaultvalue !== undefined || self.properties.defaultValue !== undefined) && decorated.grid != undefined) {\r\n                value = self.setDefaultValue(surrogateKey, decorated);\r\n            }\r\n\r\n            decorated.properties.value = value;\r\n            decorated.setValue(value, false);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Set the cell default value and make this action as a change to send it to server\r\n    */\r\n    setDefaultValue: function (surrogateKey, decorated) {\r\n        var self = this;\r\n        var value = self.properties.defaultvalue || self.properties.defaultValue;\r\n\r\n        decorated.grid.changes[surrogateKey] = decorated.grid.changes[surrogateKey] || {};\r\n        decorated.grid.changes[surrogateKey][self.properties.xpath] = value;\r\n\r\n        return value;\r\n    },\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        return decorated.getValue();\r\n    },\r\n    /*\r\n    *   Gets the composite value (applies for non-standard render values)\r\n    */\r\n    getCompositeValue: function (surrogateKey) {\r\n        return this.getValue(surrogateKey);\r\n    },\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () {\r\n        return bizagi.rendering.element.ELEMENT_TYPE_COLUMN;\r\n    },\r\n    /*\r\n    *   Determines if a render has changed its value\r\n    */\r\n    hasChanged: function () {\r\n        return this.changed;\r\n    },\r\n    /*\r\n    *   Triggers an event inside the control\r\n    */\r\n    trigger: function (eventType, data) {\r\n        if (this.decorated)\r\n            this.decorated.trigger(eventType, data);\r\n    },\r\n    /*\r\n    *   Triggers an event handler inside the control\r\n    */\r\n    triggerHandler: function (eventType, data) {\r\n        if (this.decorated)\r\n            this.decorated.triggerHandler(eventType, data);\r\n    },\r\n    /*\r\n    *   Binds to an event\r\n    */\r\n    bind: function (eventType, fn) {\r\n        if (this.decorated)\r\n            this.decorated.bind(eventType, fn);\r\n    },\r\n    /*\r\n    *   Unbinds to an event\r\n    */\r\n    unbind: function (eventType, fn) {\r\n        if (this.decorated)\r\n            this.decorated.unbind(eventType, fn);\r\n    },\r\n    /*\r\n    *   Override decorated properties\r\n    */\r\n    overrideDecoratedRenderProperties: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n\r\n        // Override decorated control properties\r\n        decorated.properties.editable = this.properties.editable;\r\n        decorated.properties.visible = this.properties.visible;\r\n        decorated.properties.required = this.properties.required;\r\n    },\r\n\r\n    overrideProperties: function (properties) {\r\n        var self = this;\r\n\r\n        self.properties.editable = properties.editable || self.properties.editable;\r\n        self.properties.visible = properties.visible || self.properties.visible;\r\n        self.properties.required = properties.required || self.properties.required;\r\n    },\r\n\r\n    /*\r\n    *   Returns the xpath used to sort the grid\r\n    */\r\n    getSortName: function () {\r\n        var self = this;\r\n\r\n        // Check if there is an override for the default behaviour \r\n        var decorated = self.getAnyDecoratedInstance();\r\n        if (decorated && decorated.getSortColumn) {\r\n            return decorated.getSortColumn();\r\n        }\r\n\r\n        // Default behaviour\r\n        return self.properties.xpath;\r\n    },\r\n\r\n    /*\r\n    *   Returns any of the decorated instances, if there are none, return null\r\n    */\r\n    getAnyDecoratedInstance: function () {\r\n        var self = this;\r\n        var first;\r\n\r\n        // Get the first key for the hash\r\n        for (first in this.decorateRenders) break;\r\n\r\n        // Return the first decorated render\r\n        if (first) return this.decorateRenders[first];\r\n\r\n        return null;\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self.decorated) {\r\n                self.decorated.unbind(\"renderchange\");\r\n                self.decorated.dispose();\r\n            }\r\n        \r\n            if (self.decorateRenders) {\r\n                bizagi.util.arrayEach(self.decorateRenders, function (key, render) {\r\n                    if (render) {\r\n                        render.unbind(\"renderchange\");\r\n                        render.dispose();\r\n                    }\r\n                });\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n        \r\n        // Call base\r\n        self._super();\r\n    }\r\n});\r\n\r\n","/*\r\n *   Name: BizAgi Render Column ReadOnlyDecorator Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define basic stuff for readonly-columns\r\n */\r\n\r\n// Extends itself\r\n$.Class.extend(\"bizagi.rendering.columns.readonly\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n\r\n        // Define the column as readonly\r\n        properties.editable = required = false;\r\n    },\r\n\r\n    /*\r\n    *   Return true if the column is read-only, so we can make a quick render\r\n    */\r\n    isReadonly: function () {\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value) {\r\n        if (typeof value === \"string\") {\r\n            value = bizagi.util.sanitizeHTML(value);\r\n            var valueToDisplay = value.replaceAll(\"\\\\n\", \"<br/>\").replaceAll(\"\\n\", \"<br/>\");\r\n            return valueToDisplay;\r\n        }\r\n        else if (value === null){\r\n            return \"\";\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRender: function (surrogateKey, cell) {\r\n        // DON'T DO ANYTHING\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element when the element is read-only\r\n    */\r\n    renderReadOnly: function (surrogateKey, value) {\r\n        return this.render(surrogateKey, value);\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRenderReadOnly: function (surrogateKey, cell) {\r\n        // DON'T DO ANYTHING\r\n    },\r\n    \r\n    /*\r\n    *   Method to check if a value is valid or not in this render\r\n    */\r\n    isValueValid: function () {\r\n        // It is always valid because the column is readonly\r\n        return true;\r\n    }\r\n});\r\n\r\n","/*\r\n*   Name: BizAgi Render Combo Column Decorator Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for Combo Columns\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.combo\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n        properties.recalculate = bizagi.util.parseBoolean(properties.recalculate) || false;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Apply custom overrides to each decorated instance\r\n    */\r\n    applyOverrides: function (decorated) {\r\n        var properties = this.properties;\r\n\r\n        this._super(decorated);\r\n\r\n        if (!properties.recalculate) {\r\n            decorated.originalGetData = decorated.getData;\r\n            decorated.getData = this.getDataForAllCells;\r\n            decorated.findDataById = this.findDataById;\r\n        }\r\n    },\r\n\r\n    findDataById: function (id) {\r\n        var self = this;\r\n        var result = {};\r\n        if (this.column && this.column.comboData) {\r\n            $.each(this.column.comboData, function (key, value) {\r\n                if (value.id == id) {\r\n                    result = value;\r\n                }\r\n            });\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Single data fetch for all the cells\r\n    */\r\n    getDataForAllCells: function (params) {\r\n        var column = this.column;\r\n        if (column.comboData) return column.comboData;\r\n        if (column.fetchingData) return column.dataPromise;\r\n\r\n        // Start fetching\r\n        column.fetchingData = true;\r\n        column.dataPromise = $.when(this.originalGetData(params))\r\n        .pipe(function (result) {\r\n            column.comboData = result;\r\n            column.fetchingData = false;\r\n            return result;\r\n        });\r\n\r\n        return column.dataPromise;\r\n    },\r\n\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function(surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated === null) {\r\n            return;\r\n        }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey == \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if (value && bizagi.util.isString(value)) {        \r\n            self._super(surrogateKey, value);\r\n        } else if (value && value.length > 0) {\r\n            // Create the value property\r\n            var newValue = {\r\n                id: value[0][0],\r\n                value: value[0].length > 2 ? $.grep(value[0], function(item, i) { return i != 0; }) : value[0][1]\r\n            };\r\n            // Call base\r\n            self._super(surrogateKey, newValue);\r\n            decorated.selectedValue = newValue.value;\r\n        } else if (value && value.id && value.value) {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.value;\r\n        } else if (self.properties.type == \"columnRadio\") {\r\n            self._super(surrogateKey, null);\r\n            decorated.selectedValue = value;\r\n        } else if (value && typeof (value) == \"number\") {\r\n            self._super(surrogateKey, value);\r\n        } else {\r\n            // Set null values when the entry array is null\r\n            self._super(surrogateKey, null);\r\n            decorated.selectedValue = \"\";\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Set the cell default value and make this action as a change to send it to server\r\n    */\r\n   setDefaultValue: function (surrogateKey, decorated) {\r\n        var self = this;\r\n        var value = self.properties.defaultValue[0];\r\n\r\n        decorated.grid.changes[surrogateKey] = decorated.grid.changes[surrogateKey] || {};\r\n        decorated.grid.changes[surrogateKey][self.properties.xpath] = value.id;\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getCompositeValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var value = decorated.getValue();\r\n        var label = decorated.getSelectedValue();\r\n\r\n        // Build value for grid data\r\n        var valueForGrid = [];\r\n        if (value && (value.id > 0 || bizagi.util.isString(value.id))) {\r\n            valueForGrid.push([]);\r\n            valueForGrid[0].push(value.id);\r\n            valueForGrid[0].push(label);\r\n        } else {\r\n            valueForGrid.push([]);\r\n        }\r\n\r\n        return valueForGrid;\r\n    },\r\n\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var value = decorated.getValue();\r\n        if (value) return value.id;\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value, tableCell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var properties = self.properties;\r\n\r\n        // If the control needs to recalculate data, reset it on the decorated render\r\n        if (properties.recalculate) {\r\n            decorated.resetData();\r\n        }\r\n\r\n        // Change the xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + surrogateKey + \"]\" : self.grid.properties.xpath + \"[id=\" + surrogateKey + \"]\";\r\n        decorated.properties.xpathContext = xpathContext;\r\n\r\n        // Render the control\r\n        var result = this._super(surrogateKey, value, tableCell);\r\n\r\n        return result;\r\n    },\r\n\r\n    renderReadOnly: function (key, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(key);\r\n        var properties = self.properties;\r\n\r\n        // Change the xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + key + \"]\" : self.grid.properties.xpath + \"[id=\" + key + \"]\";\r\n        decorated.properties.xpathContext = xpathContext;\r\n\r\n        // Render the control\r\n        var result = this._super(key, value);\r\n\r\n        return result;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Render Date Column Decorator Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for Date Columns\r\n*/\r\n\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.date\", {}, {\r\n\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function (surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated === null) return;\r\n\r\n        self._super(surrogateKey, value);\r\n        if ((value === null || value === undefined) && self.properties.defaultvalue !== undefined) {\r\n            value = self.setDefaultValue(surrogateKey, decorated);\r\n        }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey === \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if (value == null) {\r\n            decorated.setValue(value, false);\r\n            decorated.properties.displayValue = \"\";\r\n        }\r\n\r\n        var date = bizagi.util.dateFormatter.getDateFromInvariant(value, decorated.properties.showTime);\r\n\r\n        if (date === 0) {\r\n            // force another attempt in order to check invariant format for the value with time or without time (reverse option)\r\n            date = bizagi.util.dateFormatter.getDateFromInvariant(value, !decorated.properties.showTime);\r\n        }\r\n        // Format date to current format\r\n        if (date !== 0) {\r\n            var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n            var formattedDate = bizagi.util.dateFormatter.formatDate(date, decorated.properties.fullFormat, datePickerRegional);\r\n\r\n            // Set formatted value in display value property\r\n            decorated.properties.displayValue = formattedDate;\r\n\r\n            // Send original value to decorated control, because it must be with invariant format\r\n            decorated.setValue(value, false);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Set the cell default value and make this action as a change to send it to server\r\n    */\r\n    setDefaultValue: function (surrogateKey, decorated) {\r\n        var self = this;\r\n        var value = self.properties.defaultvalue;\r\n\r\n        decorated.grid.changes[surrogateKey] = decorated.grid.changes[surrogateKey] || {};\r\n\r\n        value = bizagi.util.dateFormatter.getDateFromInvariant(value, decorated.properties.showTime || false);\r\n\r\n        value = bizagi.util.dateFormatter.formatInvariant(value, true);\r\n        decorated.grid.changes[surrogateKey][self.properties.xpath] = value;\r\n\r\n        return value;\r\n    }\r\n});\r\n\r\n","/**\r\n *   Name: BizAgi Render Combo Column Decorator Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define basic stuff for Combo Columns\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.search\", {}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n\r\n        if (properties.advancedSearch && this.getMode() === \"execution\") {\r\n            properties.submitOnChange = bizagi.util.parseBoolean(properties.submitOnChange) || false;\r\n            properties.submitOnChange = (properties.submitVersion || 1) > 1 ? properties.submitOnChange : true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Apply custom overrides to each decorated instance\r\n     * @param decorated\r\n     */\r\n    applyOverrides: function (decorated) {\r\n        this._super(decorated);\r\n\r\n        // Change the xpath context\r\n        var xpathContext;\r\n\r\n        if (this.properties.xpathContext.length > 0) {\r\n            xpathContext = this.properties.xpathContext + \".\" + this.grid.properties.xpath + \"[id=\" + decorated.surrogateKey + \"]\";\r\n        } else {\r\n            xpathContext = this.grid.properties.xpath + \"[id=\" + decorated.surrogateKey + \"]\";\r\n        }\r\n\r\n        decorated.properties.xpathContext = xpathContext;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value, tableCell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var properties = self.properties;\r\n\r\n        // If the control needs to recalculate data, reset it on the decorated render\r\n        if (properties.recalculate) {\r\n            decorated.resetData();\r\n        }\r\n\r\n        // Render the control\r\n        var result = this._super(surrogateKey, value, tableCell);\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var value = decorated.getValue();\r\n        if (value && typeof (value) == \"object\") return value.id;\r\n\r\n        return value;\r\n    },\r\n\r\n    setValue: function (surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated === null) {\r\n            return;\r\n        }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey == \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if (value && value.length > 0) {\r\n            // Create the value property\r\n            var newValue = {\r\n                id: value[0][0],\r\n                value: value[0].length > 2 ? $.grep(value[0], function (item, i) {\r\n                    return i != 0;\r\n                }) : value[0][1]\r\n            };\r\n            // Call base\r\n            self._super(surrogateKey, newValue);\r\n            decorated.selectedValue = newValue.value;\r\n        } else if (value && value.id && value.value) {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.value;\r\n        } else if (value && value.id && value.label) {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.label;\r\n        } else {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = \"\";\r\n        }\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: Bizagi Base Render Factory\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define an abstract render factory in order to do common stuff for all device factories\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.base.factory\", {}, {\r\n    /* \r\n    *   Constructor\r\n    */\r\n    init: function (dataService) {\r\n        this.templates = {};\r\n        this.dataService = dataService;        \r\n    },\r\n\r\n    /**\r\n    * Load client resources in order to override a default behavior\r\n    */\r\n    loadOverrides: function () {\r\n    },\r\n    /*\r\n    *   This function will load asynchronous stuff needed in the module\r\n    */\r\n    initAsyncStuff: function() {\r\n        return $.when.apply($, [this.loadOverrides(), this.loadTemplates()]);\r\n    },\r\n    /*\r\n    *   Load all the templates used for rendering\r\n    */\r\n    loadTemplates: function () {\r\n    },\r\n    /*\r\n    *   Load one template and save it internally\r\n    */\r\n    loadTemplate: function(template, templateDestination) {\r\n        var self = this;\r\n\r\n        // Go fetch the template\r\n        return bizagi.templateService.getTemplate(templateDestination, template)\r\n                .done(function (resolvedTemplate) {\r\n                self.templates[template] = resolvedTemplate;\r\n            });\r\n    },\r\n    /*\r\n    * Returns a common  used template for the framework\r\n    */\r\n    getCommonTemplate: function (template) {        \r\n        return this.templates[template];\r\n    },\r\n    /*\r\n    *   Returns the appropiate container based on the container type\r\n    */\r\n    getContainer: function (params) {\r\n        // TODO: REMOVE IMPLEMENTATION\r\n\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var containerParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"form\") {\r\n            return new bizagi.rendering.form(containerParams);\r\n        }\r\n\r\n        if (type == \"mobileform\") {\r\n            return new bizagi.rendering.mobileform(containerParams);\r\n        }\r\n\r\n        if (type == \"template\") {\r\n            return new bizagi.rendering.formTemplate(containerParams);\r\n        }\r\n\r\n        if (type == \"queryForm\") {\r\n            return new bizagi.rendering.queryForm(containerParams);\r\n        }\r\n\r\n        if (type == \"layout\") {\r\n            return new bizagi.rendering.layout(containerParams);\r\n        }\r\n\r\n        if (type == \"usersForm\") {\r\n            return new bizagi.rendering.usersForm(containerParams);\r\n        }\r\n\r\n        if (type == \"panel\") {\r\n            return new bizagi.rendering.panel(containerParams);\r\n        }\r\n\r\n        if (type == \"contentPanel\" || type == \"contentpanel\") {\r\n            return new bizagi.rendering.contentPanel(containerParams);\r\n        }\r\n\r\n        if (type.toLowerCase() == \"nestedform\") {\r\n            return new bizagi.rendering.nestedForm(containerParams);\r\n        }\r\n\r\n        if (type == \"tab\") {\r\n            return new bizagi.rendering.tab(containerParams);\r\n        }\r\n\r\n        if (type == \"tabItem\" || type == \"tabitem\") {\r\n            return new bizagi.rendering.tabItem(containerParams);\r\n        }\r\n\r\n        if (type == \"horizontal\") {\r\n            return new bizagi.rendering.horizontal(containerParams);\r\n        }\r\n\r\n        if (type == \"accordion\") {\r\n            return new bizagi.rendering.accordion(containerParams);\r\n        }\r\n\r\n        if (type == \"accordionItem\") {\r\n            return new bizagi.rendering.accordionItem(containerParams);\r\n        }\r\n\r\n        if (type == \"group\") {\r\n            return new bizagi.rendering.group(containerParams);\r\n        }\r\n\r\n        if (type == \"mobilegroup\") {\r\n            return new bizagi.rendering.mobilegroup(containerParams);\r\n        }\r\n\r\n        if (type == \"searchForm\") {\r\n            containerParams.context = \"search\";\r\n            containerParams.contexttype = \"metadata\";\r\n            return new bizagi.rendering.searchForm(containerParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate render based on the render type\r\n    */\r\n    getRender: function (params) {\r\n\r\n        // TODO: REMOVE IMPLEMENTATION\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var renderParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (!type)\r\n            type = \"label\";\r\n\r\n        if (type == \"text\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                return new bizagi.rendering.extendedText(renderParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.text(renderParams);\r\n        }\r\n        if (type == \"mobiletext\") {\r\n            return new bizagi.rendering.mobiletext(renderParams);\r\n        }\r\n\r\n        if (type == \"association\") {\r\n            return new bizagi.rendering.association(renderParams);\r\n        }\r\n\r\n        if (type == \"label\") {\r\n            return new bizagi.rendering.label(renderParams);\r\n        }\r\n\r\n        if (type == \"hidden\") {\r\n            return new bizagi.rendering.hidden(renderParams);\r\n        }\r\n\r\n        if (type == \"number\") {\r\n            return new bizagi.rendering.number(renderParams);\r\n        }\r\n\r\n        if (type == \"money\") {\r\n            return new bizagi.rendering.money(renderParams);\r\n        }\r\n\r\n        if (type == \"date\") {\r\n            return new bizagi.rendering.date(renderParams);\r\n        }\r\n\r\n        if (type == \"boolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                return new bizagi.rendering.check(renderParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.yesno(renderParams);\r\n        }\r\n\r\n        if (type == \"combo\") {\r\n            return new bizagi.rendering.combo(renderParams);\r\n        }\r\n\r\n        if (/^cascadingcombo$/i.test(type)) {\r\n            return new bizagi.rendering.cascadingCombo(renderParams);\r\n        }\r\n\r\n        if (type == \"list\") {\r\n            return new bizagi.rendering.list(renderParams);\r\n        }\r\n\r\n        if (type == \"multiSelect\") {\r\n            return new bizagi.rendering.multiSelect(renderParams);\r\n        }\r\n\r\n        if (type == \"radio\") {\r\n            return new bizagi.rendering.radio(renderParams);\r\n        }\r\n\r\n        if (type == \"image\") {\r\n            // Override for test purposes\r\n            return new bizagi.rendering.image(renderParams);\r\n        }\r\n        if (type == \"uploadecm\") {\r\n            // Check if its ECM file            \r\n            return new bizagi.rendering.ecm(renderParams);\r\n        }\r\n\r\n        if (type == \"upload\") {\r\n            return new bizagi.rendering.upload(renderParams);\r\n        }\r\n        if (type == \"grid\") {\r\n            return new bizagi.rendering.grid(renderParams);\r\n        }\r\n\r\n        if (type == \"groupedgrid\") {\r\n            return new bizagi.rendering.grid(renderParams);\r\n        }\r\n\r\n        if (type == \"search\") {\r\n            return new bizagi.rendering.search(renderParams);\r\n        }\r\n\r\n        if (type == \"suggest\") {\r\n            renderParams.data.properties.enableQuerySuggestBehavior = true;\r\n            return new bizagi.rendering.search(renderParams);\r\n        }\r\n\r\n        if (type == \"searchList\") {\r\n            return new bizagi.rendering.searchList(renderParams);\r\n        }\r\n\r\n        if (type == \"letter\") {\r\n            return new bizagi.rendering.letter(renderParams);\r\n        }\r\n\r\n        if (type == \"button\") {\r\n            return new bizagi.rendering.button(renderParams);\r\n        }\r\n\r\n        if (type == \"formLink\") {\r\n            return new bizagi.rendering.formLink(renderParams);\r\n        }\r\n\r\n        if (type == \"link\") {\r\n            return new bizagi.rendering.link(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutImage\") {\r\n            return new bizagi.rendering.layoutImage(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutLink\") {\r\n            return new bizagi.rendering.layoutLink(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutLabel\") {\r\n            return new bizagi.rendering.layoutLabel(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutText\") {\r\n            return new bizagi.rendering.layoutText(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutDateTime\") {\r\n            return new bizagi.rendering.layoutDateTime(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutNumber\") {\r\n            return new bizagi.rendering.layoutNumber(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutMoney\") {\r\n            return new bizagi.rendering.layoutMoney(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutPlaceholder\") {\r\n            return new bizagi.rendering.layoutPlaceholder(renderParams);\r\n        }\r\n\r\n        if (type == \"actionLauncher\") {\r\n            return new bizagi.rendering.actionLauncher(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutBoolean\") {\r\n            return new bizagi.rendering.layoutBoolean(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutUpload\") {\r\n            return new bizagi.rendering.layoutUpload(renderParams);\r\n        }\r\n\r\n        if (type == \"entityTemplate\") {\r\n            return new bizagi.rendering.entityTemplate(renderParams);\r\n        }\r\n\r\n        if (type == \"polymorphicLauncher\") {\r\n            return new bizagi.rendering.polymorphicLauncher(renderParams);\r\n        }\r\n\r\n        if (type == \"userfield\") {\r\n            return new bizagi.rendering.userfieldWrapper(renderParams);\r\n        }\r\n\r\n        // Check search renders (starts with \"search\")\r\n        if (type.indexOf(\"search\") == 0) {\r\n            return this.getSearchRender(params);\r\n        }\r\n\r\n        if (type.indexOf(\"query\") == 0) {\r\n            return this.getQueryRender(params);\r\n        }\r\n\r\n        if (type == \"document\") {\r\n            return new bizagi.rendering.document(renderParams);\r\n        }\r\n\r\n        if (type == \"image\") {\r\n            return new bizagi.rendering.image(renderParams);\r\n        }\r\n        if (type == \"fileprint\") {\r\n            return new bizagi.rendering.fileprint(renderParams);\r\n        }\r\n        if (type == \"geolocation\") {\r\n            return new bizagi.rendering.geolocation(renderParams);\r\n        }\r\n\r\n        if (type == \"collectionnavigator\") {\r\n            return new bizagi.rendering.collectionnavigator(renderParams);\r\n        }\r\n\r\n        if (type == \"getUser\") {\r\n            return new bizagi.rendering.getUser(renderParams);\r\n        }\r\n\r\n        if (type == \"rangeDate\") {\r\n            return new bizagi.rendering.rangeDate(renderParams);\r\n        }\r\n\r\n        if (type == \"rangeMoney\") {\r\n            return new bizagi.rendering.rangeMoney(renderParams);\r\n        }\r\n\r\n        if (type == \"rangeNumber\") {\r\n            return new bizagi.rendering.rangeNumber(renderParams);\r\n        }\r\n\r\n        if (type == \"activityCheckList\") {\r\n            return new bizagi.rendering.activityCheckList(renderParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate column based on the render type\r\n    */\r\n    getColumn: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var columnParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService,\r\n            singleInstance: bizagi.util.isEmpty(params.singleInstance) ? true : params.singleInstance\r\n        });\r\n\r\n        if (type == \"columnText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                columnParams.decorated = bizagi.rendering.extendedText;\r\n            } else {\r\n                // Creates one normal text render\r\n                columnParams.decorated = bizagi.rendering.text;\r\n            }\r\n            return new bizagi.rendering.columns.text(columnParams);\r\n        }\r\n\r\n        if (type == \"columnSearchList\") {\r\n            columnParams.decorated = bizagi.rendering.searchList;\r\n            return new bizagi.rendering.columns.searchList(columnParams);\r\n        }\r\n\r\n        if (type == \"columnNumber\") {\r\n            columnParams.decorated = bizagi.rendering.number;\r\n            return new bizagi.rendering.columns.number(columnParams);\r\n        }\r\n\r\n        if (type == \"columnMoney\") {\r\n            columnParams.decorated = bizagi.rendering.money;\r\n            return new bizagi.rendering.columns.number(columnParams);\r\n        }\r\n\r\n        if (type == \"columnDate\") {\r\n            columnParams.decorated = bizagi.rendering.date;\r\n            return new bizagi.rendering.columns.date(columnParams);\r\n        }\r\n\r\n        if (type == \"columnBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                columnParams.decorated = bizagi.rendering.check;\r\n                if (params.data.properties.isExclusive) {\r\n                    return new bizagi.rendering.columns.exclusiveCheck(columnParams);\r\n                }\r\n            } else {\r\n                // Creates one yes-no render\r\n                columnParams.decorated = bizagi.rendering.yesno;\r\n            }\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnCombo\") {\r\n            columnParams.decorated = bizagi.rendering.combo;\r\n            return new bizagi.rendering.columns.combo(columnParams);\r\n        }\r\n\r\n        if (type == \"columnRadio\") {\r\n            columnParams.decorated = bizagi.rendering.radio;\r\n            return new bizagi.rendering.columns.radio(columnParams);\r\n        }\r\n\r\n        if (type == \"columnList\") {\r\n            columnParams.decorated = bizagi.rendering.list;\r\n            return new bizagi.rendering.columns.list(columnParams);\r\n        }\r\n\r\n        if (type == \"columnHidden\") {\r\n            columnParams.decorated = bizagi.rendering.hidden;\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUpload\") {\r\n            columnParams.decorated = bizagi.rendering.upload;\r\n            return new bizagi.rendering.columns.upload(columnParams);\r\n        }\r\n\r\n        if (type == \"columnImage\") {\r\n            columnParams.decorated = bizagi.rendering.image;\r\n            return new bizagi.rendering.columns.image(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUploadEcm\") {\r\n            columnParams.decorated = bizagi.rendering.ecm;\r\n            return new bizagi.rendering.columns.uploadecm(columnParams);\r\n        }\r\n        if (type == \"columnLink\") {\r\n            columnParams.decorated = bizagi.rendering.link;\r\n            return new bizagi.rendering.columns.link(columnParams);\r\n        }\r\n\r\n        if (type == \"columnFormLink\") {\r\n            columnParams.decorated = bizagi.rendering.formLink;\r\n            return new bizagi.rendering.columns.link(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUserfield\") {\r\n            columnParams.decorated = bizagi.rendering.userfieldWrapper;\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnSearch\") {\r\n            columnParams.decorated = bizagi.rendering.search;\r\n            return new bizagi.rendering.columns.search(columnParams);\r\n        }\r\n\r\n        if (type == \"columnLabel\") {\r\n            columnParams.decorated = bizagi.rendering.label;\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnReadonly\") {\r\n            columnParams.decorated = bizagi.rendering.label;\r\n            return new bizagi.rendering.columns.readonly(columnParams);\r\n        }\r\n\r\n        if (type == \"columnDocument\") {\r\n            columnParams.decorated = bizagi.rendering.document;\r\n            return new bizagi.rendering.columns.document(columnParams);\r\n        }\r\n\r\n        if (type == \"columnLetter\") {\r\n            columnParams.decorated = bizagi.rendering.letter;\r\n            return new bizagi.rendering.columns.letter(columnParams);\r\n        }\r\n\r\n        if (type == \"columnButton\") {\r\n            columnParams.decorated = bizagi.rendering.button;\r\n            return new bizagi.rendering.columns.button(columnParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate search render based on the type\r\n    */\r\n    getSearchRender: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var searchParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"searchText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                return new bizagi.rendering.extendedText(searchParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.text(searchParams);\r\n        }\r\n\r\n        if (type == \"searchBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                return new bizagi.rendering.check(searchParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.yesno(searchParams);\r\n        }\r\n\r\n        if (type == \"searchNumber\") {\r\n            if (data.properties.dataType == 29) {\r\n                //Creates a Scientific Notation render\r\n                return new bizagi.rendering.numberScientificNotation(searchParams);\r\n            }\r\n            return new bizagi.rendering.number(searchParams);\r\n        }\r\n\r\n        if (type == \"searchMoney\") {\r\n            return new bizagi.rendering.money(searchParams);\r\n        }\r\n\r\n        if (type == \"searchDate\") {\r\n            return new bizagi.rendering.date(searchParams);\r\n        }\r\n\r\n        if (type == \"searchCombo\") {\r\n            return new bizagi.rendering.combo(searchParams);\r\n        }\r\n\r\n        if (type == \"searchSuggest\") {\r\n            return new bizagi.rendering.search(searchParams);\r\n        }\r\n\r\n        if (type == \"searchLabel\") {\r\n            return new bizagi.rendering.label(searchParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate search render based on the type\r\n    */\r\n    getQueryRender: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var searchParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"queryText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                return new bizagi.rendering.queryExtendedText(searchParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.queryText(searchParams);\r\n        }\r\n\r\n        if (type == \"queryBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                return new bizagi.rendering.queryCheck(searchParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.queryYesNo(searchParams);\r\n        }\r\n\r\n        if (type == \"queryNumber\") {\r\n\r\n            return new bizagi.rendering.queryNumber(searchParams);\r\n        }\r\n\r\n        if (type == \"queryMoney\") {\r\n            return new bizagi.rendering.queryMoney(searchParams);\r\n        }\r\n\r\n        if (type == \"queryDate\") {\r\n            return new bizagi.rendering.queryDate(searchParams);\r\n        }\r\n\r\n        if (type == \"queryCombo\") {\r\n            return new bizagi.rendering.queryCombo(searchParams);\r\n        }\r\n\r\n        if (type == \"queryCascadingCombo\") {\r\n            return new bizagi.rendering.queryCascadingCombo(searchParams);\r\n        }\r\n\r\n        if (type == \"querySuggest\") {\r\n            return new bizagi.rendering.querySuggest(searchParams);\r\n        }\r\n\r\n        if (type == \"queryLabel\") {\r\n            return new bizagi.rendering.queryLabel(searchParams);\r\n        }\r\n\r\n        if (type == \"queryList\") {\r\n            return new bizagi.rendering.queryList(searchParams);\r\n        }\r\n        \r\n        if (type == \"queryMultiSelect\") {\r\n            return new bizagi.rendering.queryMultiSelect(searchParams);\r\n        }\r\n\r\n        if (type == \"querySearch\") {\r\n            return new bizagi.rendering.querySearch(searchParams);\r\n        }\r\n\r\n        if (type == \"queryRadio\") {\r\n            return new bizagi.rendering.queryRadio(searchParams);\r\n        }\r\n\r\n        if (type == \"queryState\") {\r\n            return new bizagi.rendering.queryState(searchParams);\r\n        }\r\n\r\n        if (type == \"queryCaseState\") {\r\n            return new bizagi.rendering.queryCaseState(searchParams);\r\n        }\r\n\r\n        if (type == \"queryProcess\") {\r\n            return new bizagi.rendering.queryProcess(searchParams);\r\n        }\r\n\r\n        if (type == \"querySearchUser\") {\r\n            return new bizagi.rendering.querySearchUser(searchParams);\r\n        }\r\n\r\n        if (type == \"queryHidden\") {\r\n            return new bizagi.rendering.hidden(searchParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Method to fetch templates from a private dictionary\r\n    */\r\n    getTemplate: function (template) {\r\n        var self = this;\r\n        return self.templates[template];\r\n    }\r\n});\r\n","/*\r\n*   Name: Bizagi Device Render Factory\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will detect the current device and then will load the appropriate factory on demand\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.device.factory\", {}, {\r\n\r\n    /**\r\n     * Constructor, detects the device\r\n     * @param params\r\n     */\r\n    init: function (params) {\r\n        this.execution_device = bizagi.util.detectDevice();\r\n        this.cachedFactory = {};\r\n    },\r\n\r\n    /**\r\n     * Returns the appropriate render factory based on the device detection\r\n     * Because it loads the scripts on demand it must return a promise\r\n     * @param dataService\r\n     * @param device\r\n     * @returns {*}\r\n     */\r\n    getRenderFactory: function (dataService, device) {\r\n        var self = this;\r\n        device = device || \"desktop\";\r\n        var defer = new $.Deferred();\r\n\r\n        if (typeof self.cachedFactory[device] !== \"undefined\") {\r\n            // Reset print version value\r\n            self.cachedFactory[device].printVersion = false;\r\n            // Resolve with cached factory                \r\n            defer.resolve(self.cachedFactory[device]);\r\n        } else {\r\n            // If factory is not cached then build it\r\n            if (device === \"print\") {\r\n\r\n                // Load print version references\r\n                self.cachedFactory[device] = new bizagi.rendering.print.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n\r\n            } else if (device === \"desktop\") {\r\n\r\n                // Load desktop references\r\n                self.cachedFactory[device] = new bizagi.rendering.desktop.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n\r\n            } else if (bizagi.util.isTabletDevice(device)) {\r\n\r\n                // Load tablet references\r\n                self.cachedFactory[device] = new bizagi.rendering.tablet.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n            } else if (bizagi.util.isSmartphoneDevice(device)) {\r\n\r\n                // Load tablet references\r\n                self.cachedFactory[device] = new bizagi.rendering.smartphone.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n            } else {\r\n                // if no device suuported\r\n                bizagi.showMessageBox(\"Not supported device: \" + device);\r\n                defer.reject(\"Not supported device: \" + device);\r\n            }\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Returns the current data service being used\r\n     * @returns {*}\r\n     */\r\n    getDataService: function () {\r\n        return this.dataService;\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: BizAgi Rendering\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will process a rendering page by calling an ajax service to retrieve the model,\r\n *       and then process it to create base layout, and then call the device render factory\r\n */\r\n\r\n// Define BizAgi Rendering namespace\r\nbizagi.rendering = bizagi.rendering || {};\r\n\r\n/*\r\n *   This class will define a method to process the page\r\n *   1. Fetch the data\r\n *   2. Call the device factory to appropriately render the content\r\n */\r\n$.Class.extend(\"bizagi.rendering.facade\", {\r\n    form: undefined,\r\n    executionDeferred: new $.Deferred()\r\n}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        params = params || {};\r\n\r\n        // Set observable element\r\n        this.observableElement = $({});\r\n\r\n        // Injection of Device, only for print version purpose\r\n        var device = params.device || \"\";\r\n\r\n        // Defines a device factory for all rendering\r\n        this.deviceFactory = new bizagi.rendering.device.factory();\r\n\r\n        // Creates a data service instance\r\n        this.dataService = new bizagi.render.services.service(params);\r\n\r\n        // Retrieves the render factory\r\n        this.renderFactory = this.deviceFactory.getRenderFactory(this.dataService, device);\r\n    },\r\n    getFactory: function () {\r\n        var self = this;\r\n        return {\r\n            deviceFactory: self.deviceFactory,\r\n            dataService: self.dataService,\r\n            renderFactory: self.renderFactory\r\n        };\r\n    },\r\n    /*\r\n    *   Subscribe method\r\n    */\r\n    subscribe: function () {\r\n        this.observableElement.bind.apply(this.observableElement, arguments);\r\n    },\r\n    /*\r\n    *   Unsubscribe method\r\n    */\r\n    unsubscribe: function () {\r\n        this.observableElement.unbind.apply(this.observableElement, arguments);\r\n    },\r\n    /*\r\n    *   Publish method\r\n    */\r\n    publish: function () {\r\n        return this.observableElement.triggerHandler.apply(this.observableElement, arguments);\r\n    },\r\n    /*\r\n    *   This method will re-execute the process\r\n    */\r\n    update: function (params) {\r\n        var self = this;\r\n\r\n        // Update rendering mode\r\n        if (params.mode)\r\n            self.mode = params.mode;\r\n\r\n        // Enable form buttons on desktop view\r\n        return self.execute($.extend({\r\n            canvas: self.canvas,\r\n            mode: self.mode\r\n        }, params));\r\n    },\r\n    /*\r\n    *   Start point method to use in the main javascript pages\r\n    *   This method will process everything and attach the html directly to the dom\r\n    */\r\n    execute: function (params) {\r\n        var self = this;\r\n        var doc = this.ownerDocument;\r\n        var body = $(\"body\", doc);\r\n        params = params || {};\r\n\r\n        // Creates ready deferred\r\n        if (self.executionDeferred && self.executionDeferred.state) {\r\n            if (self.executionDeferred.state() == \"resolved\") {\r\n                self.executionDeferred = $.Deferred();\r\n            }\r\n        } else {\r\n            self.executionDeferred = $.Deferred();\r\n        }\r\n\r\n        // Performance measurement stuff\r\n        bizagi.chrono.initAndStart(\"rendering+data\", true);\r\n        bizagi.rendering.render.startOptimization();\r\n\r\n        // Override mode\r\n        if (typeof (params.mode) === \"undefined\") {\r\n            if (!bizagi.util.isEmpty(window.location.search)) {\r\n                var queryString = bizagi.util.getQueryString();\r\n                params.mode = queryString[\"mode\"];\r\n            }\r\n        }\r\n\r\n        // If the canvas is not given, we need to create one\r\n        var canvas = self.canvas = params.canvas = params.canvas || $(\"<div />\").appendTo(body);\r\n        self.mode = params.mode;\r\n\r\n        self.process(params).done(function (form) {\r\n\r\n            // Clear canvas    \r\n            if (!params.refreshing) {\r\n                canvas.empty();\r\n            }\r\n\r\n            // Append content\r\n            canvas.append(form.container);\r\n\r\n            // Include process path\r\n            $(form.pathProcess).insertBefore(form.container);\r\n\r\n            // Keep reference in class\r\n            self.form = form;\r\n            self.form.setSize({width: self.lastWidth, height: self.lastHeight});\r\n\r\n            // Save window size variables\r\n            setTimeout(function () {\r\n                self.lastWidth = $(window).width();\r\n                self.lastHeight = $(window).height();\r\n                if (window.self !== window.top)\r\n                    self.resizeInPopUpHTML();\r\n            }, 2000);\r\n\r\n            // Publish an event to check if the form has been set in the DOM\r\n            form.triggerHandler(\"ondomincluded\");\r\n\r\n            // Notify to module users that the form has been rendered\r\n            self.publish(\"rendering-formRendered\", {});\r\n\r\n            // Configure handlers\r\n            self.configureRefresh(form, canvas);\r\n            self.configureRouting(form, canvas);\r\n            self.configureRenderError(form, canvas);\r\n            self.configureResize(form);\r\n            self.configureGlobalHandlers(form);\r\n\r\n            // Check if it is a summary form\r\n            if (params.summaryForm) {\r\n                form.container.addClass(\"ui-bizagi-summary-form\");\r\n            }\r\n\r\n            // Ends main timer and log everything\r\n            bizagi.chrono.stopAndLog(\"rendering\");\r\n            bizagi.chrono.stopAndLog(\"rendering+data\");\r\n            bizagi.chrono.stopAndLog(\"submitForm\");\r\n            bizagi.chrono.stopAndLog(\"submitForm-ajax\");\r\n            bizagi.chrono.stopAndLog(\"waiting\");\r\n\r\n            // Resolves deferred\r\n            bizagi.rendering.render.stopOptimization();\r\n\r\n            // Expose public reference of form\r\n            if (bizagi.override.enableE2EInterface) {\r\n                self.Class.form = self.form;\r\n                self.Class.executionDeferred.resolve(self.form);\r\n            }\r\n\r\n            self.executionDeferred.resolve(self.form);\r\n\r\n        }).fail(function (message, errorType) {\r\n\r\n            $.when(self.renderFactory)\r\n                .done(function (renderFactory) {\r\n\r\n                    if (typeof message === \"undefined\" || message === \"\") {\r\n                        message = bizagi.localization.getResource(\"render-error-unknown\");\r\n                    }\r\n\r\n                    var errorTemplate = renderFactory.getCommonTemplate(\"form-error\");\r\n                    // Fill canvas\r\n                    canvas.empty();\r\n                    canvas.append($.tmpl(errorTemplate, {\r\n                        message: message\r\n                    }));\r\n                    self.publish(\"rendering-formRenderedError\", message);\r\n                    self.canvas.triggerHandler(\"errorform\", message);\r\n                    // Ends main timer and log everything\r\n                    bizagi.chrono.stopAndLog(\"rendering\");\r\n                    bizagi.chrono.stopAndLog(\"rendering+data\");\r\n\r\n                    self.executionDeferred.reject();\r\n                });\r\n        });\r\n\r\n        return self.executionDeferred.promise();\r\n    },\r\n    /*\r\n    *   Returns the execution deferred to determine if the component is ready or not\r\n    */\r\n    ready: function () {\r\n        return this.executionDeferred.promise();\r\n    },\r\n    /*\r\n    *   Loads data and render factory in order to process the form\r\n    *   Returns a deferred to set callbacks when the process is done\r\n    */\r\n    process: function (params) {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        // Call get form data service\r\n        var dataPromise = self.dataService.getFormData(params);\r\n\r\n        var canvas = self.canvas || params.canvas;\r\n\r\n        bizagi.showErrorAlertDialog = false;\r\n        // Set callback when requests have been done\r\n        $.when(dataPromise, self.renderFactory)\r\n            .done(function (data, renderFactory) {\r\n                bizagi.showErrorAlertDialog = true;\r\n\r\n                // When there is no data trigger an event\r\n                if (bizagi.util.isEmpty(data)) {\r\n                    self.publish(\"no-data-found\");\r\n                    defer.fail();\r\n                    return;\r\n                }\r\n\r\n                if (data && data.type == \"reload\") {\r\n                    var form = self.form;\r\n                    if (form) {\r\n                        form.endLoading();\r\n                        form.dispose();\r\n                    }\r\n                    // Trigger handler on canvas\r\n                    canvas.triggerHandler(\"routing\");\r\n\r\n                } else if (data && data.type == \"suspended\") {\r\n                    var errorTemplate = renderFactory.getTemplate(\"info-message\");\r\n                    var message = bizagi.localization.getResource(\"render-case-suspended\");\r\n                    var errorHtml = $.tmpl(errorTemplate, {\r\n                        message: message\r\n                    });\r\n                    // Remove loading icon from summary container\r\n                    errorHtml.appendTo(canvas);\r\n\r\n                    defer.fail();\r\n\r\n                } else if (data && data.type != \"error\") {\r\n                    if (params.hasOwnProperty('printversion')) {\r\n                        data = self.transformGridControl(data);\r\n                        data.form.properties.editable = \"False\";\r\n                    }\r\n\r\n                    bizagi.chrono.initAndStart(\"rendering\");\r\n                    params.type = (data.form && data.form.properties.type) || params.type;\r\n                    var form = self.processForm(data.form, renderFactory, params);\r\n\r\n                    // Resolve deferred\r\n                    defer.resolve(form);\r\n\r\n                } else {\r\n                    self.getFailDeferred(data, defer);\r\n                }\r\n            }).fail(function (errorMessage) {\r\n            self.getFailDeferred(errorMessage, defer);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n    /**\r\n     * In the print version widget when grid control was rendered, the main render has broken\r\n     * Is necesary change id of grid control to fixed these  problems\r\n     */\r\n    transformGridControl: function (data) {\r\n        var self = this;\r\n        if (data == null) {\r\n            return data;\r\n        }\r\n\r\n        if (data.hasOwnProperty('type') && data.type == 'grid') {\r\n            data.id = data.id + \"-print\";\r\n            data.allowAdd = \"False\";\r\n            data.allowDelete = \"False\";\r\n            data.allowEdit = \"False\";\r\n            data.allowGrouping = \"False\";\r\n            data.allowMore = \"False\";\r\n            data.allowSearch = \"False\";\r\n        } else {\r\n            $.each(data, function (key, value) {\r\n                if (typeof (value) == 'object') {\r\n                    data[key] = self.transformGridControl(data[key]);\r\n                }\r\n            });\r\n        }\r\n        return data;\r\n    },\r\n    /**\r\n     * Resolve deferred\r\n     */\r\n    getFailDeferred: function (errorMessage, defer) {\r\n        var self = this;\r\n        var message = \"\";\r\n        var jsonErrorMessage = {};\r\n        try {\r\n            jsonErrorMessage = JSON.parse(errorMessage.responseText);\r\n        } catch (e) {\r\n            jsonErrorMessage = {message: errorMessage.responseText, errorType: \"ERRORUNKNOWN\"};\r\n        }\r\n\r\n\r\n        if (jsonErrorMessage.message) {\r\n            message += \"<br>Error Type: \" + jsonErrorMessage.errorType;\r\n            message += \"<br>Error Message: \" + jsonErrorMessage.message;\r\n        } else {\r\n            if (jsonErrorMessage.errorType == \"JSharpNotSupportedException\") {\r\n                message += \"<br>Error Message: \" + bizagi.localization.getResource(\"jsharp-required\");\r\n            }\r\n        }\r\n\r\n        // Error in metadata InvalidFormMetadata\r\n        if (jsonErrorMessage.errorType == 'ERRORUNKNOWN') {\r\n            defer.reject(message, jsonErrorMessage.errorType);\r\n        } else {\r\n\r\n            defer.reject(message);\r\n        }\r\n    },\r\n    /*\r\n    *   Process the form\r\n    */\r\n    processForm: function (data, renderFactory, params) {\r\n        var form = renderFactory.getContainer($.extend(params, {\r\n            type: params.type || \"form\",\r\n            data: data\r\n        }));\r\n\r\n        //Orientation RTL - OrderButtons\r\n        if (typeof BIZAGI_ORIENTATION != \"undefined\") {\r\n            if ((form.properties.orientation == \"rtl\" || BIZAGI_ORIENTATION == 'rtl') && form.buttons.length > 0) {\r\n                var buttonsForm = form.buttons[0];\r\n\r\n                form.buttons.splice(0, 1);\r\n                form.buttons.push(buttonsForm);\r\n            }\r\n        }\r\n\r\n        // Render the full form\r\n        form.render();\r\n\r\n        return form;\r\n    },\r\n    /*\r\n    *   Performs a resize\r\n    */\r\n    resize: function (args) {\r\n        var self = this;\r\n        if (self.form) {\r\n            self.form.trigger(\"renderresize\", args);\r\n        }\r\n    },\r\n    /*\r\n    *   Binds a refresh handler to detect when the whole form needs to fetch all data from server\r\n    */\r\n    configureRefresh: function (form, canvas) {\r\n        var self = this;\r\n\r\n        // Attach a refresh handler to recreate all the form\r\n        form.bind(\"refresh\", function (_, refreshParams) {\r\n\r\n            // Find the scroll top\r\n            var parent = form.container.parent();\r\n            parent = bizagi.util.scrollTop(parent);\r\n            var scrollTop = parent.scrollTop();\r\n\r\n            $(self.form).trigger(\"onRefreshStarted\");\r\n\r\n            //Dispose current form\r\n            form.dispose(refreshParams);\r\n            canvas.fastEmpty();\r\n            var canvasParent = canvas.parent();\r\n            if (canvasParent.find(\".ui-bizagi-button-container\").length > 0) {\r\n                canvasParent.find(\".ui-bizagi-button-container\").remove();\r\n            }\r\n\r\n            if (self.executionDeferred && self.executionDeferred.state) {\r\n                if (self.executionDeferred.state() == \"resolved\") {\r\n                    self.executionDeferred = $.Deferred();\r\n                }\r\n            }\r\n\r\n            var formParams = self.form.getParams();\r\n            // Re-execute process\r\n            $.when(self.execute($.extend(refreshParams, {\r\n                canvas: canvas,\r\n                refreshing: true,\r\n                idCase: formParams.idCase,\r\n                displayName: formParams.displayName\r\n            }))).done(function () {\r\n\r\n                // Restore scroll at same position\r\n                setTimeout(function () {\r\n                    parent.scrollTop(scrollTop);\r\n                    $(self.form).trigger(\"onRefreshFinished\");\r\n                }, 100);\r\n            });\r\n\r\n            return self.executionDeferred.promise();\r\n        });\r\n    },\r\n    /*\r\n    *   Binds a resize hanlder to configure the resize behaviour\r\n    */\r\n    configureResize: function (form) {\r\n        var self = this;\r\n\r\n        // Attach resize handler\r\n        form.bind(\"renderresize\", function (_, args) {\r\n            args = args || {};\r\n            // Just allow one resize at a time\r\n            if (self.resizeTimeout)\r\n                return;\r\n            var resizeFn = function () {\r\n                // Call resize event in form\r\n                var width = $(window).width();\r\n                var height = $(window).height();\r\n                if (args.forceResize || width != self.lastWidth) {\r\n\r\n                    // Logging stuff\r\n                    bizagi.chrono.initAndStart(\"resize\");\r\n\r\n                    // Perform resize\r\n                    form.resize({\r\n                        width: width,\r\n                        height: height\r\n                    });\r\n                    self.lastWidth = width;\r\n                    self.lastHeight = height;\r\n\r\n                    // Logging stuff\r\n                    bizagi.chrono.stopAndLog(\"resize\");\r\n                    bizagi.chrono.log(\"resize\");\r\n                }\r\n\r\n                self.resizeTimeout = null;\r\n                clearTimeout(self.resizeTimeout);\r\n            };\r\n            self.resizeTimeout = setTimeout(resizeFn, 0);\r\n\r\n        });\r\n        self.resize();\r\n    },\r\n    /*\r\n    *   Binds a routing handler to detect when the workportal need to enroute the case\r\n    */\r\n    configureRouting: function (form, canvas) {\r\n        // Attach a routing handler to notify to the caller\r\n        form.bind(\"routing\", function (context, triggerParams) {\r\n            //Dispose current form\r\n            form.dispose();\r\n\r\n            // Trigger handler on canvas\r\n            canvas.triggerHandler(\"routing\", triggerParams);\r\n        });\r\n    },\r\n    /*\r\n    *   Binds a generic handler that will be replicated to facade instantiators\r\n    */\r\n    configureGlobalHandlers: function (form) {\r\n        var self = this;\r\n\r\n        // Attach a routing handler to notify to the caller\r\n        form.bind(\"globalHandler\", function (_, args) {\r\n            // Trigger handler on canvas\r\n            return self.publish(args.eventType, args.data);\r\n        });\r\n    },\r\n    /*\r\n    * Binds error form handler to detect when the render element nop posible get information or error in server\r\n    */\r\n    configureRenderError: function (form, canvas) {\r\n        var self = this;\r\n\r\n        form.bind(\"formRenderingError\", function (event, errorMessage) {\r\n            $.when(self.renderFactory)\r\n                .done(function (renderFactory) {\r\n                    var message = \"<br>Error: \";\r\n\r\n                    errorMessage = errorMessage.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\r\n\r\n                    var jsonErrorMessage = JSON.parse(errorMessage);\r\n                    if (jsonErrorMessage.message) {\r\n                        message += jsonErrorMessage.message;\r\n                        message += \"<br>Error Type: \" + jsonErrorMessage.errorType;\r\n                    }\r\n                    var errorTemplate = renderFactory.getCommonTemplate(\"form-error\");\r\n                    // Fill canvas\r\n                    canvas.empty();\r\n                    canvas.append($.tmpl(errorTemplate, {\r\n                        message: message\r\n                    }));\r\n                    //send the type error to differentiate between a form and an item for render\r\n                    self.canvas.triggerHandler(\"errorform\", \"renderItemError\");\r\n                    // Ends main timer and log everything\r\n                    bizagi.chrono.stopAndLog(\"rendering+data\");\r\n                    bizagi.chrono.stopAndLog(\"rendering\");\r\n                });\r\n        });\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n        if (self.form) {\r\n            self.form.dispose();\r\n        }\r\n        bizagi.util.dispose(self);\r\n    },\r\n\r\n    resizeInPopUpHTML: function () {\r\n        if ($(\".activitiFormContainer\").length > 0 && bizagi.util.getQueryString().type != \"cases\") {\r\n            var heightActivitiFormContainer = $(\".activitiFormContainer\").height() || 0;\r\n            var renderForm = $(\".activitiFormContainer #ui-bizagi-webpart-render-container\");\r\n            var buttonContainer = $(\".ui-bizagi-button-container\", \".activitiFormContainer\");\r\n            var heightButtonContainer = buttonContainer.outerHeight() || 0;\r\n            var renderBehavior = bizagi.util.getQueryString().renderBehavior || \"\";\r\n            renderBehavior = renderBehavior.replace(\"#\", \"\");\r\n\r\n            if (renderBehavior == \"PopUp\") {\r\n                if (typeof (self.postMessageSocket) == \"undefined\") {\r\n                    var heightCanvas = $(\".activitiFormContainer\").height() - 50 || 396;\r\n                    $(\"#render-canvas\").height(heightCanvas);\r\n                    $(\"#render-canvas\").css(\"overflowY\", \"scroll\");\r\n                } else $(\".activitiFormContainer\").height($(\".activitiFormContainer\").height() + $(\".ui-bizagi-button-container\").height() + 30);\r\n                $(\".ui-bizagi-button-container\").css(\"position\", \"absolute\");\r\n                $(\".ui-bizagi-button-container\").appendTo(\".activitiFormContainer\");\r\n                if ($(\".ui-bizagi-button-container\").length > 1) {\r\n                    $(\".ui-bizagi-button-container:first\").hide();\r\n                    renderForm.css(\"marginTop\", \"-17px\");\r\n                }\r\n            }\r\n            if (buttonContainer.length > 0) {\r\n                //display buttons\r\n                renderForm.height(heightActivitiFormContainer - 97 - heightButtonContainer);\r\n            }\r\n            if ($(\".ui-bizagi-button-container\").children().length == 0)\r\n                $(\"#render-canvas\").height($(\"#render-canvas\").height() + heightButtonContainer);\r\n            else {\r\n                buttonContainer.width(\"100%\");\r\n                buttonContainer.css(\"marginLeft\", 0);\r\n                buttonContainer.css(\"bottom\", 0);\r\n            }\r\n        } else if (bizagi.util.getQueryString().type == \"render\") {\r\n            $(\"html\").css(\"overflowX\", \"hidden\");\r\n            ($(\"#render\").height() <= window.innerHeight + 5) ? $(\"html\").css(\"overflowY\", \"hidden\")\r\n                : $(\"html\").css(\"overflowY\", \"scroll\");\r\n            $(\".ui-widget-overlay\").height(650);\r\n        }\r\n    }\r\n\r\n});"]}