{"version":3,"sources":["jquery/workportal/desktop/widget/project.dashboard.menu.plan/bizagi.workportal.desktop.widgets.project.dashboard.menu.plan.js","jquery/workportal/desktop/widget/project.content.dashboard/bizagi.workportal.desktop.widgets.project.content.dashboard.js","jquery/workportal/desktop/widget/project.plan.activities/bizagi.workportal.desktop.project.plan.activities.js","jquery/workportal/desktop/widget/project.plan.sidebar/bizagi.workportal.desktop.widgets.project.plan.sidebar.js","jquery/workportal/desktop/widget/project.plan.action/bizagi.workportal.desktop.widgets.project.plan.action.js","jquery/workportal/desktop/widget/project.plan.state/bizagi.workportal.desktop.widgets.project.plan.state.js","jquery/workportal/desktop/widget/project.plan.progress/bizagi.workportal.desktop.widgets.project.plan.progress.js","jquery/workportal/desktop/widget/project.plan.time/bizagi.workportal.desktop.widgets.project.plan.time.js","jquery/workportal/desktop/widget/project.plan.parent/bizagi.workportal.desktop.widgets.project.plan.parent.js","jquery/workportal/desktop/widget/project.plan.users/bizagi.workportal.desktop.widgets.project.plan.users.js"],"names":["bizagi","workportal","widgets","widget","extend","init","workportalFacade","dataService","projectDashboard","params","self","this","_super","loadTemplates","project-dashboard-menu","getTemplate","concat","renderContent","content","$","postRender","contextsLeftSidebarCaseDashboard","forEach","context","sub","proxy","updateView","event","args","clean","$content","getContent","empty","template","menuPlanDashboard","menuDashboard","planState","getPlanState","plan","planChild","argsTemplate","showCommentsOptionMenu","showFilesOptionMenu","showTimeLineOptionMenu","isVisibleShowTimeLine","render","appendTo","showContextByMenuDashboard","toUpperCase","addClass","siblings","removeClass","handlerEvents","currentState","extraValidationShowTimeLine","loadContentById","preventDefault","$item","target","closest","data","backParentPlan","hasClass","pub","type","subMenuHandler","$comments","$files","$timeline","on","toggle","getLevelNavigator","currentLevelNavigator","parseInt","getParamsByBackFromPlan","typeContext","paramsNotify","off","unsub","injector","register","project","dashboard","menu","project-content-dashboard","setTimeout","window","trigger","base","notifier","serviceOrderActivitiesByTransitions","PENDING_PLAN","EXECUTING_PLAN","CONTEXT_PLANACTIVITIES","CONTEXT_PLANOVERVIEW","CONTEXT_PLANCREATE","plugins","fromIndexEnabledSortingActivities","idActivityEditing","_statePlan","userPictures","refresh","refreshAllWidgets","plan-activities-main","plan-activities-item","onNotifySummaryProgressPlan","onNotifyUpdatePlan","renderWidgetByStatePlan","refreshActivityRow","collapseSidebars","state","isEnableEventsOnActivitiesByCurrentContext","enableEventsOnActivitiesByCurrentContext","auxCountActivitiesFinished","activities","filter","activity","finishDate","length","statePlan","statePendingPlan","stateExecutingPlan","contextPlanActivities","showFormAddActivityByNotFinishedAllActivities","currentUserGuid","currentUser","userGuid","sortablelist","initializeSortableList","addEventHandlers","setContentWrapper","onClickEditActivity","onClickDeleteActivity","onClickWorkonItActivity","onClickChangeParallel","onExecutePlan","onClosePlan","renderActivities","updateTransitions","getCopyObjectPlan","id","name","description","dueDate","waitForCompletion","parentWorkItem","creationDate","startDate","idUserCreator","contextualized","currentContext","text","kendoSortable","hint","element","$clone","clone","width","append","change","onChangePosition","disabled","end","e","newIndex","oldIndex","movePositionActivity","$liActivityGoDown","eq","canChangeToParallelActivity","parallel","defer","Deferred","idPlan","transitions","getActualTransitions","when","changeTransitions","always","response","responseText","xhr","status","showErrorMessage","localization","getResource","orderActivitiesByTransitions","resolve","promise","getActivitiesByTransitions","auxOrderTransitions","getActualTransitionsByActivities","transition","undefined","onCreateActivity","idUserAssigned","val","userAssigned","idUser","replace","progress","duration","allowEdition","estimatedFinishDate","parent","util","isEmpty","guidActivity","paramsDetailActivity","idActivity","getActivity","done","createPlanActivity","reset","responseActivity","activityNew","items","numTotalItems","numResolvedItems","push","$activityList","activityParallel","$wrapperArrow","currentTarget","$liActivitySelected","idActivitySelected","prop","changeActivityProperties","result","idLastParallelActivity","getLastParallelActivityIsRunningOrClose","prev","$target","activityToShow","isEditableFormActivity","workItemState","idActivityToShow","activityGuid","activityPropertiesToUpdate","iActivity","lengthActivities","focus","$list","tmpl","$element","show","hide","arrayActivities","currentUserId","classEnabledActionActivities","isRunning","runningActivity","map","decodeHtmlEntities","loadAndShowImagesUsers","listActivities","csvguidUsers","a","seen","out","len","j","i","item","removeDuplicateItemsFromArray","join","getDataUsers","then","renderUserProfilesAndImages","iUser","html","getInitials","picture","attr","usersGuids","height","getUsersData","array","splice","arrayUnique","onCancelActivityForm","closeSidebar","$contentWrapper","stopPropagation","css","showConfirmationBox","deleteActivityPlan","next","find","publish","action","actions","BIZAGI_WORKPORTAL_ACTION_ROUTING","idCase","idWorkItem","putExecutePlan","getDateServer","sendNotification","callUpdatePlan","radNumber","getCaseByPlan","printf","activitiesAreCompleted","closePlan","callClosePlan","fail","updatePlan","showSucessMessage","lastIndexParallelInExecution","parallelActivitiesInRunning","$selectedActivity","displayName","assignee","activityEdited","services","preferences","getPreference","serviceloadDataPlan","supportNav","project-plan-sidebar","areTemplatedLoaded","loadData","subscribe","loadedWithDataActivities","loadedWithDataFirstParent","unsubscribe","sidebar","planTemplateCreate","planPopupEdit","CLOSED_PLAN","CONTEXT_ACTIVITYPLAN","CONTEXT_ACTIVITYPLANOVERVIEW","CONTEXT_ACTIVITYPLANCREATE","showActionsPlan","plan-action-main","stateClosedPlan","currentStatePlan","$contentWidget","initilizeActionMenu","onNotifyLoadInfoSummaryPlan","clearAlertsOnFocus","setNamePlan","onNotifyExpandedRightSidebar","setStatePlan","namePlan","onSelectMenu","ui","onClickMenuOpenEdition","onClickMenuDeletePlan","onClickMenuSaveAsTemplate","planSelected","showPopup","showPopupAddTemplatePlan","callDeletePlan","onSubmitFormPlan","select","focusout","deletePlan","plan-state-main","renderWidget","plan-progress-main","valuePercentBarComplete","calculateProgress","colorBar","$barRemainingDate","widthNumberDays","toString","completedActivities","totalActivities","percentProgress","Math","round","datePickerRegional","plan-time-main","updateWidget","planDatesToStamp","Date","getTime","closedDate","getClosedDatePlan","getIntervalOnMinutes","relativeTime","dateFormatter","getRelativeTime","now","minutesToShowTime","messageUnitTimeCalculated","keywordResourceDescriptionDifference","getKeywordDifferenceDates","messageDescripionDifference","valueOfTimeCalculated","auxToDate","getSecondDate","auxPercentBar","getWidthBar","auxColorBar","getColorBarByPercent","fromDate","getFormattedDate","getFirstDate","toDate","percentBar","getLastActivity","JSON","parse","stringify","sort","activityA","activityB","getDifferenceBetweenDates","firstDate","secondDate","callGetEffectiveDuration","difference","minutes","minutesNowToDueDate","minutesCreateToNow","minutesDueDateToCreate","minutesCreateToDueDate","minutesStartToNow","minutesDueDateToNow","minutesStartToDueDate","milliseconds","intervalMinutes","differenceStartDateToCurrentDate","totalInterval","valuePercentInterval","ceil","differenceStartDateToClosedDate","percent","d","getEffectiveDuration","dateObj","monthNames","getMonth","formatDate","time","plan-parent-main","getPlanParent","planParent","idParent","nameParent","idWorkflow","idTask","processName","process","planName","goToParentCase","msg","onClickGoToParentCase","routingExecute","usersMap","usersInformation","globalHandlersService","get","usersAssignees","plan-users-main","auxNoRepeatTypesUser","hashTypesUser","assigned","owner","cvsGuidUsers","activitiesUsers","ownerUserGuid","ownerUserId","userType","guid","each","index","userId","userAssignedGuid","inArray","user","guidUser","justAssignees","label","initilizeTooltip","addEventHandlersModal","callGetDataUsers","showCreatorInformation","allUsers","usersAssignee","indexOf","isOwner","isAssignee","usersAdapter","createJsonUserInfo","userCreator","userInfo","username","email","userinformation","obj","$li","console","log","getUsersAssignees","activityRunning","res_user","getUserAssignee","tasks","types","actUser","not","ev","id_userSelected","task","userParam","usertooltip","click","widgetName","BIZAGI_WORKPORTAL_WIDGET_USERS_MODAL","closeVisible","maximize","modalParameters","title","refreshInbox","users"],"mappings":"AAKAA,OAAOC,WAAWC,QAAQC,OAAOC,OAAO,4DAKrCC,KAAM,SAAUC,EAAkBC,EAAaC,EAAkBC,GAC9D,IAAIC,EAAOC,KACXD,EAAKD,OAASA,MACdC,EAAKF,iBAAmBA,EAGxBE,EAAKE,OAAON,EAAkBC,EAAaE,GAG3CC,EAAKG,eACFC,yBAA0Bd,OAAOe,YAAY,iEAAiEC,OAAO,8BAO3HC,cAAe,WAGZ,OAFWN,KACNO,QAAUC,EAAE,eADNR,KAECO,SAOfE,WAAY,WACT,IAAIV,EAAOC,KAERD,EAAKD,QAAUC,EAAKD,OAAOY,kCAC3BX,EAAKD,OAAOY,iCAAiCC,QAAQ,SAASC,GAC3Db,EAAKc,IAAID,EAASJ,EAAEM,MAAMf,EAAKgB,WAAYhB,OAOpDgB,WAAY,SAAUC,EAAOlB,GAC1B,IAAIC,EAAOC,KACXD,EAAKD,OAASU,EAAEf,OAAOM,EAAKD,OAAQA,EAAOmB,MAC3ClB,EAAKmB,QACL,IAAIC,EAAWpB,EAAKqB,aAAaC,QAE7BC,EAAWvB,EAAKK,YAAY,0BAChCL,EAAKD,OAAOyB,kBAAoBxB,EAAKD,OAAOyB,sBAC5Cf,EAAEf,OAAOM,EAAKD,OAAOyB,kBAAmBxB,EAAKD,OAAO0B,eAEpDzB,EAAK0B,UAAY1B,EAAK2B,aAAa3B,EAAKD,OAAO6B,KAAM5B,EAAKD,OAAO8B,WACjE,IAAIC,GACDJ,UAAW1B,EAAK0B,UAChBK,uBAAwB/B,EAAKD,OAAOyB,kBAAkBO,uBACtDC,oBAAqBhC,EAAKD,OAAOyB,kBAAkBQ,oBACnDC,uBAAwBjC,EAAKD,OAAOyB,kBAAkBS,wBAA0BjC,EAAKkC,sBAAsBlC,EAAK0B,YAEnHH,EAASY,OAAOL,GAAcM,SAAShB,GAEvCX,EAAE,oBAAsBT,EAAKD,OAAOsC,2BAA2BC,cAAgB,KAAMtC,EAAKQ,SAAS+B,SAAS,UAAUC,WAAWC,YAAY,UAE7IzC,EAAK0C,iBASPf,aAAc,SAASC,EAAMC,GACzB,IAAIc,EAOJ,OANGd,GAAaA,EAAUc,aACtBA,EAAed,EAAUc,aAErBf,GAAQA,EAAKe,eACjBA,EAAef,EAAKe,cAEjBA,GAMXT,sBAAuB,SAASR,GAC5B,IACIkB,GAA8B,EAIlC,MAHiB,YAAdlB,IACCkB,GAA8B,GAE3BA,GAMZC,gBAAiB,SAAU5B,GACxB,IAAIjB,EAAOC,KACXgB,EAAM6B,iBACN,IAAIC,EAAQtC,EAAEQ,EAAM+B,QAAQC,QAAQ,MAEpC,GAA8B,aAA1BF,EAAMG,KAAK,WACZlD,EAAKmD,sBAGL,IAAKJ,EAAMK,SAAS,UAAW,CAC5B,IAAIf,EAA6BU,EAAMG,KAAK,WACxCb,IAEDrC,EAAKqD,IAAI,UACNC,KAAMjB,EAA2BC,cACjCpB,KAAMT,EAAEf,OAAOM,EAAKD,QAAQsC,2BAA4BA,MAE3D5B,EAAE,oBAAsBT,EAAKD,OAAOsC,2BAA2BC,cAAgB,KAAMtC,EAAKQ,SAAS+B,SAAS,UAAUC,WAAWC,YAAY,aAMzJc,eAAgB,WACb,IAAIvD,EAAOC,KACPO,EAAUR,EAAKqB,aACfmC,EAAY/C,EAAE,gCAAiCD,GAC/CiD,EAAShD,EAAE,6BAA8BD,GACzCkD,EAAYjD,EAAE,gCAAiCD,GAEnDC,EAAE,sCAAuCD,GAASmD,GAAG,QAAS,WAC3DH,EAAUI,SACVH,EAAOG,SACJ5D,EAAKkC,sBAAsBlC,EAAK0B,YAChCgC,EAAUE,YAKnBT,eAAgB,WACb,IAAInD,EAAOC,KAEP4D,EAAoB7D,EAAKqD,IAAI,UAAYC,KAAM,uBAC/CQ,EAAwBC,SAASF,EAAkB,IACnD9D,EAASC,EAAKF,iBAAiBkE,wBAAwBhE,EAAKD,OAAQ+D,GAExE9D,EAAKqD,IAAI,UACNC,KAAMvD,EAAOkE,YACb/C,KAAMT,EAAEf,OAAOM,EAAKD,OAAQA,EAAOmE,iBAKzCxB,cAAe,WACZ,IAAI1C,EAAOC,KACPO,EAAUR,EAAKqB,aAEnBrB,EAAKuD,iBAEL9C,EAAE,oCAAqCD,GAASmD,GAAG,QAAUlD,EAAEM,MAAMf,EAAK6C,gBAAiB7C,KAG9FmB,MAAO,WACJ,IAAInB,EAAOC,KACPO,EAAUR,EAAKqB,aAEnBZ,EAAE,oCAAqCD,GAAS2D,MAE7CnE,EAAKD,QAAUC,EAAKD,OAAOY,kCAC3BX,EAAKD,OAAOY,iCAAiCC,QAAQ,SAASC,GAC3Db,EAAKoE,MAAMvD,EAASJ,EAAEM,MAAMf,EAAKgB,WAAYhB,SAMzDV,OAAO+E,SAASC,SAAS,yDAA0D,mBAAoB,cAAe,wDAAyDhF,OAAOC,WAAWC,QAAQ+E,QAAQC,UAAUC,KAAK7C,OAAO,GChLvOtC,OAAOC,WAAWC,QAAQC,OAAOC,OAAO,0DAKrCC,KAAM,SAAUC,EAAkBC,EAAaE,GACjCE,KAGNC,OAAON,EAAkBC,EAAaE,GAHhCE,KAMNE,eACFuE,4BAA6BpF,OAAOe,YAAY,8DAA8DC,OAAO,sCAQ3HC,cAAe,WACZ,IAAIP,EAAOC,KAEPsB,EAAWvB,EAAKK,YAAY,6BAGhC,OAFAL,EAAKQ,QAAUe,EAASY,WAEjBnC,EAAKQ,SAEfE,WAAY,WAGTiE,WAAW,WACRlE,EAAEmE,QAAQC,QAAQ,WAClB,QAMTvF,OAAO+E,SAASC,SAAS,uDAAwD,mBAAoB,cAAehF,OAAOC,WAAWC,QAAQ+E,QAAQ/D,QAAQgE,YAAY,GCxC1KlF,OAAOC,WAAWC,QAAQ+E,QAAQO,KAAKpF,OAAO,wDAK1CC,KAAM,SAAUC,EAAkBC,EAAakF,EAAUC,EAAqCjF,GAC1F,IAAIC,EAAOC,KAGXD,EAAKE,OAAON,EAAkBC,EAAaE,GAE3CC,EAAKgF,oCAAsCA,EAG3ChF,EAAKiF,aAAe,eACpBjF,EAAKkF,eAAiB,iBACtBlF,EAAKmF,uBAAyB,iBAC9BnF,EAAKoF,qBAAuB,eAC5BpF,EAAKqF,mBAAqB,aAE1BrF,EAAKsF,WACLtF,EAAKuF,kCAAoC,EACzCvF,EAAKwF,kBAAoB,GACzBxF,EAAKsF,QAAQP,SAAWA,EAGxB/E,EAAKyF,WAAazF,EAAKiF,aAEvBjF,EAAK0F,gBACL1F,EAAK2F,QAAU5F,EAAO6F,kBAGtB5F,EAAKG,eACD0F,uBAAwBvG,OAAOe,YAAY,6DAA6DC,OAAO,4BAC/GwF,uBAAwBxG,OAAOe,YAAY,6DAA6DC,OAAO,oCAIvHC,cAAe,WAGX,OAFWN,KACNO,QAAUC,EAAE,eADNR,KAECO,SAGhBE,WAAY,WACR,IAAIV,EAAOC,KACXD,EAAKc,IAAI,kCAAmCL,EAAEM,MAAMf,EAAK+F,4BAA6B/F,IACtFA,EAAKc,IAAI,mBAAoBL,EAAEM,MAAMf,EAAKgG,mBAAoBhG,IAC9DA,EAAKc,IAAI,yBAA0BL,EAAEM,MAAMf,EAAKiG,wBAAyBjG,IACzEA,EAAKc,IAAI,uBAAwBL,EAAEM,MAAMf,EAAKkG,mBAAoBlG,IAC9DA,EAAK2F,SACL3F,EAAKmG,oBAIbJ,4BAA6B,SAAS9E,EAAOlB,GACzC,IAAIC,EAAOC,KACXD,EAAKD,OAASU,EAAEf,OAAOM,EAAKD,OAAQA,EAAOmB,MAE3C,IAAIkF,EAAQpG,EAAKD,OAAO6B,KAAKe,aAC7B3C,EAAKyF,WAAaW,EAAQ,QAE1BpG,EAAKiG,wBAAwBhF,EAAMqC,OAIvC2C,wBAAyB,SAAShF,GAC9B,IAAIjB,EAAOC,KACXD,EAAKwF,kBAAoB,GACzB,IAAIpE,EAAWpB,EAAKqB,aAAaC,QAE7B+E,EAA6CrG,EAAKsG,yCAAyCtG,EAAKD,OAAOsC,4BAEvGkE,EAA6BvG,EAAKD,OAAO6B,KAAK4E,WAAWC,OAAO,SAASC,GACzE,OAAOA,EAASC,aACjBC,OAEC9E,GACAO,2BAA4BrC,EAAKD,OAAOsC,2BACxCwE,UAAW7G,EAAKyF,WAChBqB,iBAAkB9G,EAAKiF,aACvB8B,mBAAoB/G,EAAKkF,eACzB8B,sBAAuBhH,EAAKmF,uBAC5BvD,KAAM5B,EAAKD,OAAO6B,KAClBqF,8CAAgDV,IAA+BvG,EAAKD,OAAO6B,KAAK4E,WAAWI,OAC3GM,gBAAiB5H,OAAO6H,YAAYC,UAGlBpH,EAAKK,YAAY,wBAEnC8B,OAAO1B,EAAEf,OAAOM,EAAKD,OAAQ+B,IAC7BM,SAAShB,GAETpB,EAAKyF,aAAezF,EAAKiF,cAAgBjF,EAAKyF,aAAezF,EAAKkF,iBAAmBmB,IACrFrG,EAAKsF,QAAQ+B,aAAerH,EAAKsH,yBACjCtH,EAAKuH,oBAGTvH,EAAKwH,kBAAkBpG,GAEvBX,EAAE,8BAA+BW,GAAUuC,GAAG,QAAS,KAAMlD,EAAEM,MAAMf,EAAKyH,oBAAqBzH,IAE/FS,EAAE,8BAA+BW,GAAUuC,GAAG,QAAS,oBAAqBlD,EAAEM,MAAMf,EAAKyH,oBAAqBzH,IAE9GS,EAAE,8BAA+BW,GAAUuC,GAAG,QAAS,4BAA6BlD,EAAEM,MAAMf,EAAK0H,sBAAuB1H,IAExHS,EAAE,8BAA+BW,GAAUuC,GAAG,QAAS,2BAA4BlD,EAAEM,MAAMf,EAAK2H,wBAAyB3H,IAEtHA,EAAKD,OAAOsC,6BAA+BrC,EAAKmF,wBAC/C1E,EAAE,8BAA+BW,GAAUuC,GAAG,QAAS,sCAAuClD,EAAEM,MAAMf,EAAK4H,sBAAuB5H,IAGlIA,EAAKyF,aAAezF,EAAKiF,aACzBxE,EAAE,oBAAqBW,GAAUuC,GAAG,QAASlD,EAAEM,MAAMf,EAAK6H,cAAe7H,IAC9C,gBAApBA,EAAKyF,YACZhF,EAAE,kBAAmBW,GAAUuC,GAAG,QAASlD,EAAEM,MAAMf,EAAK8H,YAAa9H,IAGzEA,EAAK+H,mBACF9G,GACmB,2BAAfA,EAAMqC,MACLtD,EAAKgI,qBAKjBC,kBAAmB,WACf,IAAIjI,EAAOC,KACX,OACIiI,GAAIlI,EAAKD,OAAO6B,KAAKsG,GACrBC,KAAMnI,EAAKD,OAAO6B,KAAKuG,KACvBC,YAAapI,EAAKD,OAAO6B,KAAKwG,YAC9BC,QAASrI,EAAKD,OAAO6B,KAAKyG,QAC1BC,kBAAmBtI,EAAKD,OAAO6B,KAAK0G,kBACpC3F,aAAc3C,EAAKD,OAAO6B,KAAKe,aAC/B4F,eAAgBvI,EAAKD,OAAO6B,KAAK2G,eACjCC,aAAcxI,EAAKD,OAAO6B,KAAK4G,aAC/BC,UAAWzI,EAAKD,OAAO6B,KAAK6G,UAC5BC,cAAe1I,EAAKD,OAAO6B,KAAK8G,cAChCC,eAAgB3I,EAAKD,OAAO6B,KAAK+G,eACjCnC,WAAYxG,EAAKD,OAAO6B,KAAK4E,aAIrCF,yCAA0C,SAASsC,GAE/C,OAAOA,IADI3I,KACoBkF,wBAGnCa,mBAAoB,WAChB,IAAIhG,EAAOC,KACRD,EAAKD,OAAOsC,6BAA+BrC,EAAKoF,uBAC/C3E,EAAE,kDAAmDT,EAAKQ,SAASqI,KAAK7I,EAAKD,OAAO6B,KAAKuG,MACzF1H,EAAE,iDAAkDT,EAAKQ,SAASqI,KAAK7I,EAAKD,OAAO6B,KAAKwG,eAKhGd,uBAAwB,WACrB,IAAItH,EAAOC,KACX,OAAOQ,EAAE,8BAA+BT,EAAKQ,SAASsI,eACjDC,KAAM,SAAUC,GACZ,IAAIC,EAASD,EAAQE,QAAQC,MAAMH,EAAQG,SAC3C,OAAO1I,EAAE,oEAAoE2I,OAAOH,IAExFI,OAAQ5I,EAAEM,MAAMf,EAAKsJ,iBAAkBtJ,GACvCuJ,SAAU,YACVC,IAAK,SAASC,GACX,GAAGA,EAAEC,SAAW1J,EAAKuF,kCACjBkE,EAAE3G,sBAGD,GAAG2G,EAAEE,WAAaF,EAAEC,SAAS,CACzB1J,EAAKgF,oCAAoC4E,qBAAqB5J,EAAKD,OAAO6B,KAAK4E,WAAYiD,EAAEE,SAAUF,EAAEC,UAEzG,IAAIG,EAAoBpJ,EAAE,iCAAkCT,EAAKQ,SAASsJ,GAAGL,EAAEC,UAE/E,IAAI1J,EAAK+J,4BAA4B/J,EAAKD,OAAO6B,KAAK4E,WAAYqD,GAAmB,CACjF7J,EAAKD,OAAO6B,KAAK4E,WAAWiD,EAAEC,UAAUM,UAAW,EASlCP,EAAEC,SANf/E,WAAW,WAEPlE,EAAE,sDAAuDT,EAAKQ,SAASsJ,GAAG,GACtErH,YAAY,+BAA+BF,SAAS,+BACzD,SAWzBW,KAAK,kBAQX8E,kBAAmB,WACf,IAAIhI,EAAOC,KACPgK,EAAQxJ,EAAEyJ,WACVnK,GACAoK,OAAQnK,EAAKD,OAAO6B,KAAKsG,GACzBkC,YAAapK,EAAKqK,wBAUtB,OAPA5J,EAAE6J,KAAKtK,EAAKH,YAAY0K,kBAAkBxK,IAASyK,OAAO,SAAUC,EAAUC,EAAcC,GACrE,MAAfA,EAAIC,QACJ5K,EAAKsF,QAAQP,SAAS8F,iBAAiBvL,OAAOwL,aAAaC,YAAY,gDAAiD,SAE5H/K,EAAKD,OAAO6B,KAAK4E,WAAaxG,EAAKgL,6BAA6BhL,EAAKD,OAAO6B,KAAK4E,WAAYzG,EAAOqK,aACpGH,EAAMgB,YAEHhB,EAAMiB,WAGjBF,6BAA8B,SAASxE,EAAY4D,GAE/C,OADWnK,KACC+E,oCACRmG,2BAA2B3E,EAAY4D,IAG/CC,qBAAsB,WAClB,IAAIrK,EAAOC,KACPmL,EAAsBpL,EAAKgF,oCAC3BqG,iCAAiCrL,EAAKD,OAAO6B,KAAK4E,YAOtD,OALA4E,EAAoBxK,QAAQ,SAAS0K,GACjCA,EAAWpD,QAAKqD,EAChBD,EAAWnB,OAASnK,EAAKD,OAAO6B,KAAKsG,KAGlCkD,GAGX9B,iBAAkB,WACHrJ,KACN+H,qBAGTwD,iBAAkB,SAASvK,GACvBA,EAAM6B,iBAEN,IAII2I,EAJAzL,EAAOC,KAEPkI,EADS1H,EAAE,gCAAiCA,EAAEQ,EAAM+B,SACtC0I,MAUlB,GANID,EADDzL,EAAKD,OAAO6B,KAAK4E,WAAWI,OAAS,EACnB5G,EAAKD,OAAO6B,KAAK4E,WAAWxG,EAAKD,OAAO6B,KAAK4E,WAAWI,OAAS,GAAG+E,aAGpErM,OAAO6H,YAAYyE,OAGR,KAA5BzD,EAAK0D,QAAQ,MAAO,IAAY,CAEhC,IAAI9L,GACA+L,SAAU,EACV5D,GAAI,GACJO,UAAW,KACXsD,SAAU,KACVJ,aAAcF,EACdO,cAAc,EACd5D,YAAa,KACbD,KAAMA,EACNgC,OAAQnK,EAAKD,OAAO6B,KAAKsG,GACzB+D,oBAAqB,KACrBtF,WAAY,MAGhB,GAAG3G,EAAKD,OAAO6B,KAAKsK,SAAW5M,OAAO6M,KAAKC,QAAQpM,EAAKD,OAAO6B,KAAKsK,OAAOG,cAAc,CACrF,IAAIC,GACAnC,OAAQnK,EAAKD,OAAO6B,KAAKsG,GACzBqE,WAAYvM,EAAKD,OAAO6B,KAAKsK,OAAOG,cAExC5L,EAAE6J,KAAKtK,EAAKH,YAAY2M,YAAYF,IAAuBG,KAAK,SAAUhC,GACtE1K,EAAOiM,aAAevB,EAASuB,aAC/BhM,EAAK0M,mBAAmB3M,UAI5BC,EAAK0M,mBAAmB3M,GAMhCkB,EAAM+B,OAAO2J,QAEb1L,EAAM6B,kBAEV4J,mBAAoB,SAAS3M,GACzB,IAAIC,EAAOC,KACXQ,EAAE6J,KAAKtK,EAAKH,YAAY6M,mBAAmB3M,IAASyK,OAAO,SAAUC,EAAUC,EAAcC,GAEzF,GAAmB,MAAfA,EAAIC,OAAgB,CACpB,IAAI0B,GACAnC,OAAQpK,EAAOoK,OACfoC,WAAY9B,EAASvC,IAEzBzH,EAAE6J,KAAKtK,EAAKH,YAAY2M,YAAYF,IAAuB9B,OAAO,SAAUoC,GACxE,IAAIC,EAAcpM,EAAEf,OAAOkN,GAC3B1E,GAAIuC,EAASvC,GACb4E,SACAC,cAAe,EACfC,iBAAkB,EAClBhD,UAAU,IAGdhK,EAAK+H,kBAAkB8E,IACvB7M,EAAKD,OAAO6B,KAAK4E,WAAWyG,KAAKJ,GAEjC,IAAIK,EAAgBzM,EAAE,8BAA+BT,EAAKQ,SAC1DC,EAAE,kCAAmCyM,GAAerI,QAAQ,SAE5D7E,EAAKgI,2BAEsB,MAApByC,EAASG,QAChB5K,EAAKsF,QAAQP,SAAS8F,iBAAiBvL,OAAOwL,aAAaC,YAAY,kDAAmD,YAItInD,sBAAuB,SAAS3G,GAC5BA,EAAM6B,iBACN,IAUQqK,EATJC,EAAgB3M,EAAE,qBAAsBQ,EAAMoM,eAE9CC,EAAsBF,EAAcnK,QAAQ,MAC5CsK,EAAqBD,EAAoBpK,KAAK,MAJvCjD,KAMH8J,4BANG9J,KAM8BF,OAAO6B,KAAK4E,WAAY8G,KAK1D7M,EAAE,IAAK2M,GAAehK,SAAS,+BAC9B+J,GAAmB,EACnB1M,EAAE,IAAK2M,GAAe3K,YAAY,8BAA8BF,SAAS,+BACrEiL,KAAK,QAASlO,OAAOwL,aAAaC,YAAY,gDAGlDoC,GAAmB,EACnB1M,EAAE,IAAK2M,GAAe3K,YAAY,+BAA+BF,SAAS,8BACtEiL,KAAK,QAASlO,OAAOwL,aAAaC,YAAY,iDAnB/C9K,KAyBFwN,yBAAyBF,GAAsBvD,SAAUmD,IAzBvDlN,KA2BF+H,sBAIb+B,4BAA6B,SAASvD,EAAY8G,GAC9C,IACII,GAAS,EACTC,EAFO1N,KAEuB2N,wCAAwCpH,GACvEmH,IAGIA,IAFsBL,EAAoBO,OACF3K,KAAK,QAE5CwK,GAAS,IAGjB,OAAOA,GAGXjG,oBAAqB,SAAUxG,GAC3B,IAgBoCsM,EAhBhCvN,EAAOC,KACP6N,EAAUrN,EAAEQ,EAAMoM,eAMlBE,EAAqBO,EAAQ5K,KAAK,MAElC6K,EAAiB/N,EAAKD,OAAO6B,KAAK4E,WAAWC,OAAO,SAAUC,GAC9D,OAAOA,EAASwB,KAAOqF,IACxB,GAECS,EAA6C,gBAApBhO,EAAKyF,YAAiE,cAAjCsI,EAAeE,cAEjF,GAAIjO,EAAKD,OAAOsC,6BAA+BrC,EAAKmF,uBAAwB,CACxCoI,EAmBTA,EAlBhBvN,EAAKwF,oBAAsB+H,IAC1BvN,EAAKD,OAAO6B,KAAK2L,mBAAqBA,EAEtCO,EAAQ7K,QAAQ,MAAMV,SAAS,YAAYC,WAAWC,YAAY,YAClEzC,EAAKwF,kBAAoB+H,EACzBvN,EAAKqD,IAAI,UACLC,KAAM,eACNpC,KAAMT,EAAEf,OAAOM,EAAKD,QAChBiO,uBAAwBA,EACxBE,iBAAkBX,MAG1BvN,EAAKqD,IAAI,UACLC,KAAM,0BAS1BmK,yBAA0B,SAASU,EAAcC,GAE7C,IADA,IACQC,EAAY,EAAGC,EADZrO,KACoCF,OAAO6B,KAAK4E,WAAWI,OAAQyH,EAAYC,EAAkBD,GAAa,EACrH,GAFOpO,KAECF,OAAO6B,KAAK4E,WAAW6H,GAAWnG,KAAOiG,EAAa,CAC1D1N,EAAEf,OAHCO,KAGWF,OAAO6B,KAAK4E,WAAW6H,GAAYD,GACjD,QAKZ7G,iBAAkB,WAGd9G,EAAE,oCAFSR,KAEiCO,SAASmD,GAAG,SAAUlD,EAAEM,MAFzDd,KAEoEuL,iBAFpEvL,OAGXQ,EAAE,gCAHSR,KAG6BO,SAAS+N,SAMrDxG,iBAAkB,SAASvB,GACvB,IAAIxG,EAAOC,KACPuO,EAAQ/N,EAAE,8BAA+BT,EAAKQ,SAC9CiO,EAAOzO,EAAKK,YAAY,wBAEzBL,EAAKD,OAAOsC,6BAA+BrC,EAAKmF,wBAC/CqJ,EAAMjM,SAAS,mBAGnB,IAAImM,EAA6C,YAAlC1O,EAAKD,OAAO6B,KAAKe,aAA6BlC,EAAE,oBAAqBT,EAAKQ,SAAWC,EAAE,kBAAmBT,EAAKQ,SAC1HgG,GAAcxG,EAAKD,OAAO6B,KAAK4E,WAAWI,OAAS,EACnD8H,EAASC,OAETD,EAASE,OAGb,IAAIC,EAAkBrI,GAAcxG,EAAKD,OAAO6B,KAAK4E,WAEjD1E,GACA+E,UAAW7G,EAAKyF,WAChBqB,iBAAkB9G,EAAKiF,aACvB8B,mBAAoB/G,EAAKkF,eACzBrE,QAASb,EAAKD,OAAOsC,2BACrBmE,WAAYA,GAAcxG,EAAKD,OAAO6B,KAAK4E,WAC3CsI,cAAexP,OAAO6H,YAAYyE,QAGnC5L,EAAKyF,aAAezF,EAAKkF,gBACxB2J,EAAgBjO,QAAQ,SAAS8F,GAC1BA,EAAS+B,UACR/B,EAASqI,6BAA+B,WAGxCrI,EAASqI,6BAAgC/O,EAAKD,OAAOsC,6BAA+BrC,EAAKmF,uBAAyB,UAAY,WAGlIuB,EAASsI,UAAYhP,EAAKiP,gBAAgBvI,KAMlD5E,EAAa0E,WAAa1E,EAAa0E,WAAW0I,IAAI,SAAUxI,GAG5D,OAFAA,EAASyB,KAAO7I,OAAO6M,KAAKgD,mBAAmBzI,EAASyB,MACxDzB,EAAS0B,YAAc9I,OAAO6M,KAAKgD,mBAAmBzI,EAAS0B,aACxD1B,IAGX,IAAI3D,EAAQ0L,EAAKtM,OAAOL,GACxB0M,EAAMpF,OAAOrG,GAEb/C,EAAKuF,kCAAoCvF,EAAKD,OAAO6B,KAAK4E,WAAWC,OAAO,SAASC,GACjF,MAAiD,aAA1CA,EAASqI,+BACjBnI,OAEH5G,EAAKoP,uBAAuBpP,EAAKD,OAAO6B,KAAK4E,aAQjDyI,gBAAiB,SAASvI,GAEtB,MAAkC,WAA3BA,EAASuH,eAAyD,aAA3BvH,EAASuH,eAG3DmB,uBAAwB,SAASC,GAC7B,IAAIrP,EAAOC,KAqBX,IAAIqP,EAfJ,SAAuCC,GAKnC,IAJA,IAAIC,KACAC,KACAC,EAAMH,EAAE3I,OACR+I,EAAI,EACCC,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAC1B,IAAIC,EAAON,EAAEK,GACM,IAAfJ,EAAKK,KACLL,EAAKK,GAAQ,EACbJ,EAAIE,KAAOE,GAGnB,OAAOJ,EAGQK,CAnBHrP,EAAEyO,IAAIG,EAAgB,SAAUrG,GAC5C,OAAOA,EAAQ2C,eAkBwCrL,OAAOhB,OAAO6H,YAAYC,WAAW2I,KAAK,KAErG/P,EAAKgQ,aAAaV,GAAcW,KAAK,WACjCjQ,EAAKkQ,iCAIbA,4BAA6B,WAKzB,IAJA,IAAIlQ,EAAOC,KAIFkQ,EAAQ,EAAGA,EAAQnQ,EAAK0F,aAAakB,OAAQuJ,GAAS,EAC3D1P,EAAE,oBAAsBT,EAAK0F,aAAayK,GAAOjI,GAAK,oCAAoCkI,KAAKpQ,EAAK0F,aAAayK,GAAOhI,KAAKkI,eACzHrQ,EAAK0F,aAAayK,GAAOG,UACzB7P,EAAE,oBAAsBT,EAAK0F,aAAayK,GAAOjI,GAAK,WAAWyG,OACjElO,EAAE,oBAAsBT,EAAK0F,aAAayK,GAAOjI,GAAK,oCAAoC0G,OAC1FnO,EAAE,oBAAsBT,EAAK0F,aAAayK,GAAOjI,GAAK,WAAWqI,KAAK,MAP3D,yBAOiFvQ,EAAK0F,aAAayK,GAAOG,WAYjIN,aAAc,SAAUV,GACpB,IAAItP,EAAOC,KACRgK,EAAQxJ,EAAEyJ,WAETnK,GACAyQ,WAAYlB,EACZnG,MAAO,GACPsH,OAAQ,IAsBZ,OAnBAzQ,EAAKH,YAAY6Q,aAAa3Q,GAAQyK,OAAO,SAAUC,GAenDzK,EAAK0F,aAbL,SAAqBiL,GAEjB,IADA,IAAIpB,EAAIoB,EAAMrQ,SACLsP,EAAI,EAAGA,EAAIL,EAAE3I,SAAUgJ,EAC5B,IAAK,IAAID,EAAIC,EAAI,EAAGD,EAAIJ,EAAE3I,SAAU+I,EAC5BJ,EAAEK,KAAOL,EAAEI,IACXJ,EAAEqB,OAAOjB,GAAK,EAAG,GAK7B,OAAOJ,EAGSsB,CAAY7Q,EAAK0F,aAAapF,OAAOmK,IACzDR,EAAMgB,QAAQR,KAGXR,EAAMiB,WAMjB4F,qBAAsB,WACP7Q,KACN8Q,eADM9Q,KAENoD,IAAI,UACLC,KAAM,cACNpC,KAJOjB,KAIIF,UAInByH,kBAAmB,SAAUhH,GACzB,IACIwQ,EAAkBvQ,EAAE,gCAAiCD,GACzDwQ,EAAgBrN,GAAG,QAASlD,EAAEM,MAFnBd,KAE8B6Q,qBAF9B7Q,OAGQQ,EAAE,mCAAoCD,GAC5CmD,GAAG,QAAS,SAAS8F,GAAKA,EAAEwH,oBACzC,IACIR,EADehQ,EAAEmE,QAAQ6L,SACD,IAC5BO,EAAgBE,IAAI,SAAUT,EAAS,OAG3C/I,sBAAuB,SAAUzG,GAC7BA,EAAMgQ,kBACN,IAAIjR,EAAOC,KACPsN,EAAqB9M,EAAEQ,EAAMoM,eAAenK,KAAK,MACjDnD,GACAoK,OAAQnK,EAAKD,OAAO6B,KAAKsG,GACzBA,GAAIqF,GAER9M,EAAE6J,KAAKhL,OAAO6R,oBAAoB7R,OAAOwL,aAAaC,YAAY,wDAAyD,GAAI,SAAS0B,KAAK,WACzIhM,EAAE6J,KAAKtK,EAAKH,YAAYuR,mBAAmBrR,IAAS0M,KAAK,WACrDzM,EAAK+Q,eAEL,IAAI,IAAI1C,EAAY,EAAGC,EAAmBtO,EAAKD,OAAO6B,KAAK4E,WAAWI,OAAQyH,EAAYC,EAAkBD,GAAa,EAClHrO,EAAKD,OAAO6B,KAAK4E,WAAW6H,GAAWnG,KAAOqF,GAE1Ce,EAAmBD,EAAY,GAAKA,EAAY,GAC5CrO,EAAKD,OAAO6B,KAAK4E,WAAW6H,EAAY,GAAGrE,UAAYhK,EAAKD,OAAO6B,KAAK4E,WAAW6H,EAAY,GAAGrE,WACjGhK,EAAKD,OAAO6B,KAAK4E,WAAW6H,EAAY,GAAGrE,UAAW,EACtDvJ,EAAE,2CAA6CT,EAAKD,OAAO6B,KAAK4E,WAAW6H,GAAWnG,GAAK,KAAMlI,EAAKQ,SAClG6Q,OAAOC,KAAK,wBAAwB7O,YAAY,+BAA+BF,SAAS,+BAO5GvC,EAAKD,OAAO6B,KAAK4E,WAAaxG,EAAKD,OAAO6B,KAAK4E,WAAWC,OAAO,SAAUC,GACvE,OAAOA,EAASwB,KAAOqF,IAG3B9M,EAAE6J,KAAKtK,EAAKgI,qBAAqByE,KAAK,WAClCzM,EAAKiG,0BAELjG,EAAKqD,IAAI,UACLC,KAAM,cACNpC,KAAMlB,EAAKD,gBAU/B4H,wBAAyB,SAAS1G,GAC9BA,EAAM6B,iBACN,IACIyK,EAAqB9M,EAAEQ,EAAM+B,QAAQC,QAAQ,MAAMC,KAAK,MACxDwD,EAFOzG,KAESF,OAAO6B,KAAK4E,WAAWC,OAAO,SAAUC,GACxD,OAAOA,EAASwB,KAAOqF,IACxB,GAJQtN,KAMNsR,QAAQ,iBACTC,OAAQlS,OAAOC,WAAWkS,QAAQD,OAAOE,iCACzCC,OAAQjL,EAASiL,OACjBC,WAAYlL,EAASkL,cAI7B/J,cAAe,SAAU5G,GACrBA,EAAM6B,iBACN,IAAI9C,EAAOC,KAIX,GAF8BD,EAAKD,OAAO6B,KAAK4E,WAAWI,OAE5B,GAC1B,IAAKnG,EAAEQ,EAAM+B,QAAQC,QAAQ,KAAKG,SAAS,YAAa,CACpDpD,EAAKD,OAAO6B,KAAKe,aAAe,YAChClC,EAAEQ,EAAM+B,QAAQC,QAAQ,KAAKV,SAAS,YACtC,IAAIxC,GACAoK,OAAQnK,EAAKD,OAAO6B,KAAKsG,IAG7BzH,EAAE6J,KAAKtK,EAAKH,YAAYgS,eAAe9R,IAAS0M,KAAK,WACjD,IAAI1M,EAASU,EAAEf,OAAOM,EAAKiI,qBAAuBQ,UAAWzI,EAAK8R,kBAKlE,SAASC,EAAiBhS,GACnBC,EAAKD,OAAO8B,YACX7B,EAAKD,OAAO8B,UAAUc,aAAe3C,EAAKD,OAAO6B,KAAKe,cAG1D3C,EAAKqD,IAAI,UACLC,KAAM,iBACNpC,KAAMT,EAAEf,OAAOK,GAAU6F,mBAAmB,MAXpD5F,EAAKgS,eAAejS,GAEpBU,EAAEQ,EAAM+B,QAAQC,QAAQ,KAAKR,YAAY,iBAaZ,IAAnBzC,EAAKiS,UACXxR,EAAE6J,KAAKtK,EAAKH,YAAYqS,eAAgB/H,OAAQnK,EAAKD,OAAO6B,KAAKsG,MAAOuE,KAAK,SAAShC,GAClFzK,EAAKD,OAAO4R,OAASlH,EAASvC,GAC9B6J,EAAiB/R,EAAKD,UAI1BgS,EAAiB/R,EAAKD,gBASlCC,EAAKsF,QAAQP,SAAS8F,iBAAiBsH,OAAO7S,OAAOwL,aAAaC,YAAY,sEAAuE,MAI7JjD,YAAa,SAAU7G,GACnB,IAAIjB,EAAOC,KACXgB,EAAM6B,iBACF9C,EAAKoS,uBAAuBpS,EAAKD,OAAO6B,KAAK4E,YAC7CxG,EAAKqS,YAEL5R,EAAE6J,KAAKhL,OAAO6R,oBAAoB7R,OAAOwL,aAAaC,YAAY,oEAAqE,GAAI,SAAS0B,KAAK,WACrJzM,EAAKqS,eAKjBA,UAAW,WACP,IAAIrS,EAAOC,KACPF,EAASU,EAAEf,OAAOM,EAAKiI,qBAAuBtF,aAAc,WAChElC,EAAE6J,KAAKtK,EAAKgS,eAAejS,IAAS0M,KAAK,WACrChM,EAAE6J,KAAKtK,EAAKsS,eAAgBnI,OAAQpK,EAAOmI,MAAOuE,KAAK,WACnDzM,EAAKD,OAAO6B,KAAO7B,EACnBC,EAAKqD,IAAI,UACLC,KAAM,yBACNpC,KAAMlB,EAAKD,SAGfC,EAAKqD,IAAI,UACLC,KAAM,kCACNpC,KAAMlB,EAAKD,WAEhBwS,KAAK,WACJvS,EAAK+E,SAAS8F,iBAAiBsH,OAAO7S,OAAOwL,aAAaC,YAAY,sCAAuC,SAElHwH,KAAK,WACJvS,EAAK+E,SAAS8F,iBAAiBsH,OAAO7S,OAAOwL,aAAaC,YAAY,sCAAuC,QAIrHiH,eAAgB,SAAUjS,GACtB,IAAIC,EAAOC,KACX,OAAOQ,EAAE6J,KAAKtK,EAAKH,YAAY2S,WAAWzS,IAAS0M,KAAK,WACpDhM,EAAEf,OAAOM,EAAKD,OAAO6B,KAAM7B,MAInCuS,cAAe,SAAUvS,GACrB,IAAIC,EAAOC,KACX,OAAOQ,EAAE6J,KAAKtK,EAAKH,YAAYwS,UAAUtS,IAAS0M,KAAK,WACnDhM,EAAEf,OAAOM,EAAKD,OAAO6B,KAAM7B,GAC3BC,EAAKsF,QAAQP,SAAS0N,kBAAkBN,OAAO7S,OAAOwL,aAAaC,YAAY,yCAA0C,QAIjIqH,uBAAwB,SAAU5L,GAK9B,OAJqBA,OACuBC,OAAO,SAAUC,GACzD,OAAOA,EAASC,aACjBC,SAC+BJ,EAAWI,QAGjDgH,wCAAyC,SAASpH,GAC9C,IAAIkM,GAAgC,EAChCC,EAA8BnM,EAAWC,OAAO,SAASC,GACzD,GAA0B,OAAvBA,EAAS+B,WAAsB/B,EAASsD,SAEvC,OADA0I,GAAgC,GACzB,IAGf,OAAGA,GAAgC,GAAKA,EAA+B,IAAMlM,EAAWI,OAC7E+L,EAA4BA,EAA4B/L,OAAS,GAAGsB,GAGpE,MAIfhC,mBAAoB,SAAUjF,EAAOlB,GACjC,IACI6S,EAAoBnS,EAAE,2CAE1B,GADIV,EAAOmB,KAAK2R,aAAapS,EAAE,SAAUmS,GAAmB/J,KAAK9I,EAAOmB,KAAK2R,aACzE9S,EAAOmB,KAAK4R,SAAU,CAEtB,IAAIvF,EAAqB9M,EAAEmS,GAAmB1P,KAAK,MAC/C6P,EANG9S,KAMmBF,OAAO6B,KAAK4E,WAAWC,OAAO,SAAUC,GAC9D,OAAOA,EAASwB,KAAOqF,IACxB,GAEAxN,EAAOmB,KAAK4R,WAAaxT,OAAO6H,YAAYyE,QAA4C,WAAjCmH,EAAe9E,eAA+D,aAAjC8E,EAAe9E,cAIlHxN,EAAE,wBAAyBmS,GAAmBhE,OAH9CnO,EAAE,wBAAyBmS,GAAmBjE,OAX3C1O,KAiBF+P,cAAcjQ,EAAOmB,KAAK4R,UAAU/C,QAAQE,KAAK,SAAUxF,GAG5D,GAFAhK,EAAE,6CAA8CmS,GAAmBxC,KAAK3F,EAAS,GAAGtC,KAAKkI,eACzF5P,EAAE,8DAA+DmS,GAAmBrC,KAAK,cAAexQ,EAAOmB,KAAK4R,UAChHrI,EAAS,GAAG6F,QAAS,CAErB7P,EAAE,oBAAqBmS,GAAmBjE,OAC1ClO,EAAE,8CAA+CmS,GAAmBhE,OACpEnO,EAAE,oBAAqBmS,GAAmBrC,KAAK,MAH5B,yBAGkD9F,EAAS,GAAG6F,cAGjF7P,EAAE,oBAAqBmS,GAAmBhE,OAC1CnO,EAAE,8CAA+CmS,GAAmBjE,WAMpFoC,aAAc,WAEPzR,OAAO0T,SAASC,cAAcC,cAAc,6BAAuH,QAAxFzS,EAAE,oEAAoEyQ,IAAI,YAAwBzQ,EAAE,wBAAwBmG,OAAS,GADxM3G,KAEFoD,IAAI,UACLC,KAAM,yBAKlB6C,iBAAkB,WACX7G,OAAO0T,SAASC,cAAcC,cAAc,8BAC3CzS,EAAE,yCAAyC8B,SAAS,4CACpD9B,EAAE,yCAAyCgC,YAAY,wCACvDhC,EAAE,0BAA0B8B,SAAS,mBAErC9B,EAAE,yCAAyC8B,SAAS,2CACpD9B,EAAE,yCAAyCgC,YAAY,uCACvDhC,EAAE,yBAAyB8B,SAAS,uBAMhDjD,OAAO+E,SAASC,SAAS,qDAAsD,mBAAoB,cAAe,WAAY,oEAAqEhF,OAAOC,WAAWC,QAAQ+E,QAAQ3C,KAAK4E,aAAa,GCr1BvPlH,OAAOC,WAAWC,QAAQ+E,QAAQO,KAAKpF,OAAO,qDAK3CC,KAAM,SAAUC,EAAkBC,EAAasT,EAAqBpT,GACtDE,KAGNC,OAAON,EAAkBC,EAAaE,GAHhCE,KAKNkT,oBAAsBA,EALhBlT,KAMNF,OAASA,MACdA,EAAOqT,YAAa,EAPTnT,KAUNE,eACFkT,uBAAwB/T,OAAOe,YAAY,yDAAyDC,OAAO,4BAQhHC,cAAe,WACX,IAAIP,EAAOC,KACPsB,EAAWvB,EAAKK,YAAY,wBAYhC,OAXAL,EAAKQ,QAAUe,EAASY,WACxB1B,EAAE6J,KAAKtK,EAAKsT,sBACH7G,KAAK,WACF,IAAI1M,GAAUoK,OAAQnK,EAAKD,OAAO6B,KAAKsG,IACnClI,EAAKD,OAAO8B,WAAa7B,EAAKD,OAAO8B,UAAUqG,KAC/CnI,EAAOoK,OAASnK,EAAKD,OAAO8B,UAAUqG,IAE1ClI,EAAKmT,oBAAoBI,SAASxT,EAAQC,EAAK8R,cAAe9R,EAAKD,QACnEC,EAAKmT,oBAAoBK,UAAU,2BAA4B/S,EAAEM,MAAMf,EAAKyT,yBAA0BzT,IACtGA,EAAKmT,oBAAoBK,UAAU,4BAA6B/S,EAAEM,MAAMf,EAAK0T,0BAA2B1T,MAE7GA,EAAKQ,SAGhBiT,yBAA0B,WACtB,IAAIzT,EAAOC,KACXD,EAAKqD,IAAI,UACLC,KAAM,yBACNpC,KAAMlB,EAAKD,SAEfC,EAAKqD,IAAI,UACLC,KAAM,mBACNpC,KAAMlB,EAAKD,SAEfC,EAAKqD,IAAI,UACLC,KAAM,kCACNpC,KAAMlB,EAAKD,SAEfC,EAAKqD,IAAI,UACLC,KAAM,4BACNpC,KAAMlB,EAAKD,UAInB2T,0BAA2B,WACZzT,KACNoD,IAAI,UACLC,KAAM,yBACNpC,KAHOjB,KAGIF,UAInBoB,MAAO,WACH,IAAInB,EAAOC,KACRD,EAAKmT,sBACJnT,EAAKmT,oBAAoBQ,YAAY,2BAA4BlT,EAAEM,MAAMf,EAAKyT,yBAA0BzT,IACxGA,EAAKmT,oBAAoBQ,YAAY,4BAA6BlT,EAAEM,MAAMf,EAAK0T,0BAA2B1T,QAMtHV,OAAO+E,SAASC,SAAS,kDAAmD,mBAAoB,cAAe,oDAAqDhF,OAAOC,WAAWC,QAAQ+E,QAAQ3C,KAAKgS,UAAU,GChFrNtU,OAAOC,WAAWC,QAAQ+E,QAAQO,KAAKpF,OAAO,oDAK1CC,KAAM,SAAUC,EAAkBC,EAAaC,EAAkBiF,EAAU8O,EAAoBC,EAAe/T,GAC1G,IAAIC,EAAOC,KAGXD,EAAKE,OAAON,EAAkBC,EAAaE,GAE3CC,EAAKiF,aAAe,UACpBjF,EAAKkF,eAAiB,YACtBlF,EAAK+T,YAAc,SAEnB/T,EAAKgU,qBAAuB,eAC5BhU,EAAKiU,6BAA+B,uBACpCjU,EAAKqF,mBAAqB,aAC1BrF,EAAKkU,2BAA6B,qBAElClU,EAAKmU,iBAAkB,EACvBnU,EAAKF,iBAAmBA,EACxBE,EAAK+E,SAAWA,EAChB/E,EAAK6T,mBAAqBA,EAC1B7T,EAAK8T,cAAgBA,EAGrB9T,EAAKG,eACDiU,mBAAoB9U,OAAOe,YAAY,iDAAiDC,OAAO,2BAIvGC,cAAe,WACX,IAAIP,EAAOC,KACPwO,EAAOzO,EAAKK,YAAY,oBAiB5B,OAfAL,EAAKmU,gBAAmBnU,EAAKD,OAAOsC,6BAA+BrC,EAAKgU,sBACpEhU,EAAKD,OAAOsC,6BAA+BrC,EAAKiU,6BAEpDjU,EAAKsF,WACLtF,EAAKQ,QAAUiO,EAAKtM,QAChBP,KAAM5B,EAAKD,OAAO6B,KAAKuG,KACvBkM,gBAAiBrU,EAAK+T,YACtBO,iBAAkBtU,EAAKD,OAAO6B,KAAKe,aACnCwR,gBAAiBnU,EAAKmU,kBAGtBnU,EAAKmU,kBACLnU,EAAKD,OAAO6B,KAAK+G,oBAA4D,IAApC3I,EAAKD,OAAO6B,KAAmB,gBAA0B5B,EAAKD,OAAO6B,KAAK+G,gBAGhH3I,EAAKQ,SAGhBE,WAAY,WAER,IAAIV,EAAOC,KACPsU,EAAiBvU,EAAKqB,aAEvBrB,EAAKmU,kBACJnU,EAAKwU,sBACL/T,EAAE,kBAAmB8T,GAAgB5Q,GAAG,QAASlD,EAAEM,MAAMf,EAAK8H,YAAa9H,KAG/EA,EAAKc,IAAI,yBAA0BL,EAAEM,MAAMf,EAAKyU,4BAA6BzU,IAC7EA,EAAK0U,qBAEL1U,EAAK6T,mBAAmB/S,IAAI,6BAA8B,WACtDd,EAAK+E,SAAS0N,kBACVN,OAAO7S,OAAOwL,aAAaC,YAAY,mDAAoD,OAEnG/K,EAAK6T,mBAAmB/S,IAAI,4BAA6B,WACrDd,EAAK+E,SAAS8F,iBACVsH,OAAO7S,OAAOwL,aAAaC,YAAY,gDAAiD,OAGhG/K,EAAK8T,cAAchT,IAAI,oBAAqB,WACxCd,EAAK2U,YAAY3U,EAAKD,OAAO6B,KAAKuG,MAElCnI,EAAKqD,IAAI,UACLC,KAAM,qBAGVtD,EAAKqD,IAAI,UACLC,KAAM,yBACNpC,KAAMlB,EAAKD,SAGfC,EAAK+E,SAAS0N,kBACVN,OAAO7S,OAAOwL,aAAaC,YAAY,wCAAyC,OAGxF/K,EAAK8T,cAAchT,IAAI,mBAAoB,WACvCd,EAAK+E,SAAS8F,iBACVsH,OAAO7S,OAAOwL,aAAaC,YAAY,qCAAsC,OAGrF/K,EAAKc,IAAI,yBAA0BL,EAAEM,MAAMf,EAAK4U,6BAA8B5U,KAGlF4U,6BAA8B,WACf3U,KACHkU,iBADGlU,KAEFuU,uBAQbC,4BAA6B,WACdxU,KACN4U,aADM5U,KACYF,OAAO6B,KAAKe,cADxB1C,KAEN0U,YAFM1U,KAEWF,OAAO6B,KAAKuG,OAOtC0M,aAAc,SAAUhO,GAEpB,GAAIA,EACA,OAAQA,EAAUvE,eACd,IAAK,UACD7B,EAAE,sBAJHR,KAI+BO,SAASmO,OAAOnM,WAAWoM,OACzD,MACJ,IAAK,YACDnO,EAAE,wBAPHR,KAOiCO,SAASmO,OAAOnM,WAAWoM,OAC3D,MACJ,IAAK,SACDnO,EAAE,qBAVHR,KAU8BO,SAASmO,OAAOnM,WAAWoM,SAMxE+F,YAAa,SAASG,GAElBrU,EAAE,mDADSR,KACgDO,SAASqI,KAAKvJ,OAAO6M,KAAKgD,mBAAmB2F,KAM5GC,aAAc,SAAU9T,EAAO+T,GAE3B,GAA+C,IAA5CvU,EAAEQ,EAAMoM,eAAeiE,KAAK,KAAK1K,OAGhC,OAFWnG,EAAEuU,EAAGnF,MAAM3M,KAAK,SAGvB,IAAK,OALFjD,KAMMgV,yBACL,MACJ,IAAK,SARFhV,KASMiV,wBACL,MACJ,IAAK,aAXFjV,KAYMkV,8BAOrBF,uBAAwB,WACpB,IACIG,EADOnV,KACaF,OAAO6B,KADpB3B,KAEN6T,cAAcuB,UAFRpV,KAEuBF,OAFvBE,KAEoCJ,YAAauV,IAGhED,0BAA2B,WACvB,IAAInV,EAAOC,KACXD,EAAK6T,mBAAmByB,yBAAyBtV,EAAKD,OAClDC,EAAKH,YAAaG,EAAKD,OAAO6B,KAAK+G,eAAgB3I,EAAKD,OAAO6B,KAAKsG,KAG5EgN,sBAAuB,WACnB,IAAIlV,EAAOC,KAEXQ,EAAE6J,KAAKhL,OAAO6R,oBAAoB7R,OAAOwL,aAAaC,YAAY,sDAAuD,GAAI,SAAS0B,KAAK,WACvI,IAAI1M,GAAWmI,GAAIlI,EAAKD,OAAO6B,KAAKsG,IAEpCzH,EAAE6J,KAAKtK,EAAKuV,eAAexV,IAASyK,OAAO,SAASC,GAChD,GAAwB,MAApBA,EAASG,aAA+C,IAArBH,EAAe,OAAmB,CACrEhK,EAAEf,OAAOM,EAAKD,OAAO6B,KAAM7B,GAC3BC,EAAK+E,SAAS0N,kBACVN,OAAO7S,OAAOwL,aAAaC,YAAY,0CAA2C,KAGtF,IAAIlH,EAAoB7D,EAAKqD,IAAI,UAAYC,KAAM,uBAC/CQ,EAAwBC,SAASF,EAAkB,IACnD9D,EAASC,EAAKF,iBAAiBkE,wBAAwBhE,EAAKD,OAAQ+D,GAAuB,GAE/F9D,EAAKqD,IAAI,UACLC,KAAMvD,EAAOkE,YACb/C,KAAMT,EAAEf,OAAOM,EAAKD,OAAQA,EAAOmE,qBAIvClE,EAAK+E,SAAS8F,iBACVsH,OAAO7S,OAAOwL,aAAaC,YAAY,uCAAwC,UAMnGyK,iBAAkB,SAAUvU,GACxBA,EAAM6B,kBAGV0R,oBAAqB,WAEjB/T,EAAE,yCADSR,KACsCO,SAASiE,MACtDgR,OAAQhV,EAAEM,MAFHd,KAEc8U,aAFd9U,QAGRwC,YAAY,sBAQnBiS,mBAAoB,WAChBjU,EAAE,yHAAyH8N,MAAM,WAC7H9N,EAAER,MAAMiM,SAASoF,KAAK,kBAAkB1C,SACzC8G,SAAS,WACJjV,EAAER,MAAMyL,MAAM9E,OAAS,GACvBnG,EAAER,MAAMiM,SAASoF,KAAK,kBAAkB3C,UAmDpD4G,eAAgB,SAASxV,GAErB,OAAOU,EAAE6J,KADErK,KACQJ,YAAY8V,WAAW5V,KAG9CoB,MAAO,WACH,IAAInB,EAAOC,KACXD,EAAK6T,mBAAmBzP,MAAM,8BAC9BpE,EAAK6T,mBAAmBzP,MAAM,6BAC9BpE,EAAK8T,cAAc1P,MAAM,qBACzBpE,EAAK8T,cAAc1P,MAAM,oBAEzBpE,EAAKoE,MAAM,yBAA0B3D,EAAEM,MAAMf,EAAK4U,6BAA8B5U,OAIxFV,OAAO+E,SAASC,SAAS,iDAAkD,mBAAoB,cAC3F,wDAAyD,WACzD,yDACA,8CACAhF,OAAOC,WAAWC,QAAQ+E,QAAQ3C,KAAK4P,SAAS,GC5SpDlS,OAAOC,WAAWC,QAAQC,OAAOC,OAAO,mDAKrCC,KAAM,SAAUC,EAAkBC,EAAaE,GACjCE,KAGNC,OAAON,EAAkBC,EAAaE,GAHhCE,KAMNE,eACFyV,kBAAmBtW,OAAOe,YAAY,gDAAgDC,OAAO,0BAInGC,cAAe,WAGZ,OAFWN,KACNO,QAAUC,EAAE,eADNR,KAECO,SAGfE,WAAY,WACET,KACNa,IAAI,yBAA0BL,EAAEM,MAD1Bd,KACqCwU,4BADrCxU,QAQdwU,4BAA6B,SAAUxT,EAAOlB,GAC3C,IAAIC,EAAOC,KAEP4V,EADO7V,EAAKK,YAAY,mBACJ8B,WAKvB,OAJDnC,EAAKD,OAASU,EAAEf,OAAOM,EAAKD,OAAQA,EAAOmB,MAE9BlB,EAAKD,OAAO6B,KAAKe,aAEfL,eACZ,IAAK,UACF7B,EAAE,iBAAkBoV,GAAclH,OAAOnM,WAAWoM,OACpD,MACH,IAAK,YACFnO,EAAE,mBAAoBoV,GAAclH,OAAOnM,WAAWoM,OACtD,MACH,IAAK,SACFnO,EAAE,gBAAiBoV,GAAclH,OAAOnM,WAAWoM,OAGzD5O,EAAKQ,QAAQc,QAAQ8H,OAAOyM,MAMlCvW,OAAO+E,SAASC,SAAS,gDAAiD,mBAAoB,cAAehF,OAAOC,WAAWC,QAAQ+E,QAAQ3C,KAAKwE,QAAQ,GCzD5J9G,OAAOC,WAAWC,QAAQC,OAAOC,OAAO,sDAKrCC,KAAM,SAAUC,EAAkBC,EAAaE,GACjCE,KAGNC,OAAON,EAAkBC,EAAaE,GAHhCE,KAMNE,eACF2V,qBAAsBxW,OAAOe,YAAY,mDAAmDC,OAAO,6BAIzGC,cAAe,WAGZ,OAFWN,KACNO,QAAUC,EAAE,eADNR,KAECO,SAGfE,WAAY,WACET,KAENa,IAAI,kCAAmCL,EAAEM,MAFnCd,KAE8CwU,4BAF9CxU,QASdwU,4BAA6B,SAAUxT,EAAOlB,GAC3C,IAAIC,EAAOC,KACXD,EAAKD,OAASU,EAAEf,OAAOM,EAAKD,OAAQA,EAAOmB,MAE3C,IAAIE,EAAWpB,EAAKqB,aAAaC,QAE7ByU,EAA0B/V,EAAKgW,oBAE/BlU,KACJA,EAAagK,SAAWiK,EAErBjU,EAAagK,SAAW,GACxBhK,EAAamU,SAAW,MAEnBnU,EAAagK,SAAW,GAC7BhK,EAAamU,SAAW,SAGxBnU,EAAamU,SAAW,QAILjW,EAAKK,YAAY,sBAEnC8B,OAAOL,GACPM,SAAShB,GAGb,IAAI8U,EAAoBzV,EAAE,kCAAmCW,GACzD+U,EAAkB1V,EAAE,wBAAyBW,GAAU+H,QAC3D+M,EAAkBhF,IAAI,gBAAiBiF,EAAkB,GAAGC,WAAa,OAM5EJ,kBAAmB,WAChB,IAEIK,EAAsB,EACtBC,EAHOrW,KAGgBF,OAAO6B,KAAK4E,WAAWI,OAC9C2P,EAAkB,EAUtB,OARuB,IAApBD,IANQrW,KAOHF,OAAO6B,KAAK4E,WAAW5F,QAAQ,SAAS8F,GACV,cAA3BA,EAASuH,eACXoI,MAGNE,EAAkBC,KAAKC,MAAOJ,EAAsBC,EAAmB,MAEnEC,KAIbjX,OAAO+E,SAASC,SAAS,mDAAoD,mBAAoB,cAAehF,OAAOC,WAAWC,QAAQ+E,QAAQ3C,KAAKkK,WAAW,GCxFlKxM,OAAOC,WAAWC,QAAQC,OAAOC,OAAO,kDAKrCC,KAAM,SAAUC,EAAkBC,EAAaE,GAC5C,IAAIC,EAAOC,KAGXD,EAAKE,OAAON,EAAkBC,EAAaE,GAE3CC,EAAKiF,aAAe,UACpBjF,EAAKkF,eAAiB,YACtBlF,EAAK+T,YAAc,SAGnB/T,EAAK0W,mBAAqBpX,OAAOwL,aAAaC,YAAY,sBAG1D/K,EAAKG,eACFwW,iBAAkBrX,OAAOe,YAAY,+CAA+CC,OAAO,yBAIjGC,cAAe,WAGZ,OAFWN,KACNO,QAAUC,EAAE,eADNR,KAECO,SAGfE,WAAY,WACET,KAENa,IAAI,yBAA0BL,EAAEM,MAF1Bd,KAEqCwU,4BAFrCxU,QASdwU,4BAA6B,SAAUxT,EAAOlB,GAC3C,IAAIC,EAAOC,KACXD,EAAKD,OAASU,EAAEf,OAAOM,EAAKD,OAAQA,EAAOmB,MAExClB,EAAKD,OAAO6B,OACT5B,EAAKD,OAAO6B,KAAKyG,QACdrI,EAAKD,OAAO6B,KAAKe,eAAiB3C,EAAKiF,cAAgBjF,EAAKD,OAAO6B,KAAKe,eAAiB3C,EAAKkF,eAC9FlF,EAAK4W,aAAa3V,EAAOlB,GAGzBC,EAAKc,IAAI,yBAA0BL,EAAEM,MAAMf,EAAK4W,aAAc5W,IAIjEA,EAAKqB,aAAaC,UAU3BuV,iBAAiB,SAAUjV,GACrBA,EAAK4E,YACL5E,EAAK4E,WAAW0I,IAAI,SAASK,GACvBA,EAAEtD,sBAAoBsD,EAAEtD,oBAAoB,IAAI6K,KAAKvH,EAAEtD,qBAAqB8K,WAC5ExH,EAAE9G,YAAU8G,EAAE9G,UAAU,IAAIqO,KAAKvH,EAAE9G,WAAWsO,WAC9CxH,EAAE5I,aAAW4I,EAAE5I,WAAW,IAAImQ,KAAKvH,EAAE5I,YAAYoQ,aAEvDnV,EAAKyG,UAAQzG,EAAKyG,QAAQ,IAAIyO,KAAKlV,EAAKyG,SAAS0O,WACjDnV,EAAK4G,eAAa5G,EAAK4G,aAAa,IAAIsO,KAAKlV,EAAK4G,cAAcuO,WAChEnV,EAAK6G,YAAU7G,EAAK6G,UAAU,IAAIqO,KAAKlV,EAAK6G,WAAWsO,WACvDnV,EAAKoV,aAAWpV,EAAKoV,WAAW,IAAIF,KAAKlV,EAAKoV,YAAYD,WAC1DnV,EAAK+E,aAAW/E,EAAK+E,WAAW,IAAImQ,KAAKlV,EAAK+E,YAAYoQ,YAEhEH,aAAc,SAAS3V,EAAOlB,GAC3B,IAAIC,EAAOC,KACXD,EAAKD,OAASU,EAAEf,OAAOM,EAAKD,OAAQA,EAAOmB,MAC3ClB,EAAK6W,iBAAiB7W,EAAKD,OAAO6B,MAClC,IAAIR,EAAWpB,EAAKqB,aAAaC,QAC9BtB,EAAKD,OAAO6B,KAAKe,eAAiB3C,EAAK+T,aACvC/T,EAAKiX,kBAAkBjX,EAAKD,OAAO6B,MAEtCnB,EAAE6J,KAAKtK,EAAKkX,qBAAqBlX,EAAKD,OAAO6B,OAAO6K,KAAK,SAAShC,GAC/D,IAAI0M,EAAgB7X,OAAO6M,KAAKiL,cAAcC,gBAAgB,IAAIP,KAAKA,KAAKQ,MAAsC,GAA7B7M,EAAS8M,kBAAyB,KAAQ,MAAM,GAEjIC,EAA4BL,EAAatL,QAAQ,MAAM,IACvD4L,EAAuCzX,EAAK0X,0BAA0B1X,EAAKD,OAAO6B,MAClF+V,EAA8BrY,OAAOwL,aAAaC,YAAY,iCAAmC0M,GACrGE,EAA8BA,EAA4B9L,QAAQ,KAAM2L,GAExE,IAAII,EAAwBT,EAAatL,QAAQ,MAAM,IAEnDgM,EAAY7X,EAAK8X,cAAc9X,EAAKD,OAAO6B,MAC3CmW,EAAgB/X,EAAKgY,YAAYhY,EAAKD,OAAO6B,KAAM6I,GACnDwN,EAAcjY,EAAKkY,qBAAqBH,GACxCjW,GACDqW,SAAWnY,EAAKoY,iBAAiB,IAAItB,KAAK9W,EAAKqY,aAAarY,EAAKD,OAAO6B,QACxE0W,OAAQT,EAAY7X,EAAKoY,iBAAiB,IAAItB,KAAKe,IAAc,KACjED,sBAAuBA,EACvBD,4BAA6BA,EAC7BY,WAAYR,EACZ9B,SAAUgC,GAGSjY,EAAKK,YAAY,kBAEnC8B,OAAOL,GACPM,SAAShB,MAInBiX,aAAc,SAASzW,GAEpB,OAAOA,EAAKe,cACT,KAFQ1C,KAEEgF,aACP,OAAGrD,EAAKyG,QACEzG,EAAKyG,QAGLzG,EAAK4G,aAGlB,KAVQvI,KAUEiF,eACV,KAXQjF,KAWE8T,YACP,OAAOnS,EAAK6G,YAGrBqP,cAAe,SAASlW,GAErB,OAAOA,EAAKe,cACT,KAFQ1C,KAEEgF,aACP,OAAO,KACV,KAJQhF,KAIEiF,eACP,OAAOtD,EAAKyG,QACf,KANQpI,KAME8T,YACP,OAAOnS,EAAKoV,aAGrBwB,gBAAiB,SAAShS,GAEvB,OADqBiS,KAAKC,MAAMD,KAAKE,UAAUnS,IACzBoS,KAAK,SAASC,EAAWC,GAC5C,OAAQD,EAAUlS,WAAamS,EAAUnS,WAAc,GAAK,IAC5D,IAGNsQ,kBAAmB,SAASrV,GAGzB,OADAA,EAAKoV,WADM/W,KACauY,gBAAgB5W,EAAK4E,YAAYG,WAClD/E,EAAKoV,YAGf+B,0BAA2B,SAASC,EAAWC,GAC5C,IACIhP,EAAQxJ,EAAEyJ,WACVnK,GACD6L,OAAQtM,OAAO6H,YAAYyE,OAC3BuM,SAAUa,EACVV,OAAQW,GAMX,OAHAxY,EAAE6J,KARSrK,KAQCiZ,yBAAyBnZ,IAAS0M,KAAK,SAAS0M,GACzDlP,EAAMgB,QAAQkO,EAAWC,WAErBnP,EAAMiB,WAGhBgM,qBAAsB,SAAStV,GAC5B,IAAI5B,EAAOC,KACPgK,EAAQxJ,EAAEyJ,WACd,OAAOtI,EAAKe,cACT,KAAK3C,EAAKiF,aACJrD,EAAKyG,QAAUyO,KAAKQ,MACpB7W,EAAE6J,KAAKtK,EAAK+Y,0BAA0BjC,KAAKQ,MAAO1V,EAAKyG,UAAUoE,KAAK,SAAS4M,GAC3E5Y,EAAE6J,KAAKtK,EAAK+Y,0BAA0BnX,EAAK4G,aAAcsO,KAAKQ,QAAQ7K,KAAK,SAAS6M,GAChFrP,EAAMgB,SAASsM,kBAAmB8B,EAAqBC,mBAAoBA,QAI9E1X,EAAKyG,QAAUzG,EAAK4G,aACzB/H,EAAE6J,KAAKtK,EAAK+Y,0BAA0BnX,EAAKyG,QAAUzG,EAAK4G,eAAeiE,KAAK,SAAS8M,GACnF9Y,EAAE6J,KAAKtK,EAAK+Y,0BAA0BnX,EAAK4G,aAAcsO,KAAKQ,QAAQ7K,KAAK,SAAS6M,GAChFrP,EAAMgB,SAASsM,kBAAmBgC,EAAyBD,EAAoBA,mBAAoBA,QAItG1X,EAAKyG,QAAUzG,EAAK4G,cACxB/H,EAAE6J,KAAKtK,EAAK+Y,0BAA0BnX,EAAK4G,aAAc5G,EAAKyG,UAAUoE,KAAK,SAAS+M,GAClF/Y,EAAE6J,KAAKtK,EAAK+Y,0BAA0BnX,EAAKyG,QAASyO,KAAKQ,QAAQ7K,KAAK,SAAS6M,GAC3ErP,EAAMgB,SAASsM,kBAAmBiC,EAAyBF,EAAoBA,mBAAoBA,QAI/G,MACH,KAAKtZ,EAAKkF,eACJtD,EAAKyG,QACFzG,EAAKyG,QAAUyO,KAAKQ,MACpB7W,EAAE6J,KAAKtK,EAAK+Y,0BAA0BjC,KAAKQ,MAAO1V,EAAKyG,UAAUoE,KAAK,SAAS4M,GAC3E5Y,EAAE6J,KAAKtK,EAAK+Y,0BAA0BnX,EAAK6G,UAAWqO,KAAKQ,QAAQ7K,KAAK,SAASgN,GAC7ExP,EAAMgB,SAASsM,kBAAmB8B,EAAqBI,kBAAmBA,QAKlFhZ,EAAE6J,KAAKtK,EAAK+Y,0BAA0BnX,EAAKyG,QAASyO,KAAKQ,QAAQ7K,KAAK,SAASiN,GAC3EjZ,EAAE6J,KAAKtK,EAAK+Y,0BAA0BnX,EAAK6G,UAAW7G,EAAKyG,UAAUoE,KAAK,SAASkN,GAC/E1P,EAAMgB,SAASsM,kBAAmBmC,EAAqBC,sBAAuBA,QAOzFlZ,EAAE6J,KAAKtK,EAAK+Y,0BAA0BnX,EAAK6G,UAAWqO,KAAKQ,QAAQ7K,KAAK,SAAS2M,GAC9EnP,EAAMgB,SAASsM,kBAAmB6B,MAGxC,MACH,KAAKpZ,EAAK+T,YACPtT,EAAE6J,KAAKtK,EAAK+Y,0BAA0BnX,EAAK6G,UAAW7G,EAAKoV,aAAavK,KAAK,SAAS2M,GACnFnP,EAAMgB,SAASsM,kBAAmB6B,MAI3C,OAAOnP,EAAMiB,WAGhBwM,0BAA2B,SAAS9V,GAEjC,OAAOA,EAAKe,cACT,KAFQ1C,KAEEgF,aACP,OAAGrD,EAAKyG,QAAUyO,KAAKQ,MACb,YAGA,WAGb,KAVQrX,KAUEiF,eACP,OAAGtD,EAAKyG,QACFzG,EAAKyG,QAAUyO,KAAKQ,MACb,YAGA,WAKH,SAGb,KAxBQrX,KAwBE8T,YACP,MAAO,aAIhBsD,gBAAiB,SAASuC,GACvB,OAAOta,OAAO6M,KAAKiL,cAAcC,gBAAgBuC,EAAc,MAAM,IAGxE5B,YAAa,SAASpW,EAAMiY,GACzB,IACGC,KACH,OAAOlY,EAAKe,cACT,KAHQ1C,KAGEgF,aACP,GAAGrD,EAAKyG,QAAQ,CACb,GAAGzG,EAAKyG,QAAUyO,KAAKQ,MACpB,OAAO,EAGN,IAAIyC,EAAgBF,EAAgBP,mBAAqBO,EAAgBtC,kBAEzE,OADAyC,qBAAuBH,EAAgBtC,kBAChCf,KAAKyD,KAA4B,IAAvBD,qBAA6BD,GAIlD,OAAO,EAGb,KAlBQ9Z,KAkBEiF,eACP,GAAGtD,EAAKyG,QAAS,CACd,GAAIzG,EAAKyG,QAAUyO,KAAKQ,MAAO,CACxByC,EAAgBF,EAAgBJ,kBAAoBI,EAAgBtC,kBAExE,OADAyC,qBAAuBH,EAAgBtC,kBAChCf,KAAKyD,KAA4B,IAAvBD,qBAA6BD,GAG9C,OAAO,EAIV,OAAO,EAGb,KAjCQ9Z,KAiCE8T,YACP,GAAGnS,EAAKoV,WAAaF,KAAKQ,MAAM,CAC7B,IAAI4C,EAAkCtY,EAAKoV,WAAapV,EAAK6G,UAE7D,OADAqR,EAAmChD,KAAKQ,MAAQ1V,EAAK6G,UAC9C+N,KAAKyD,KAAwC,IAAnCH,EAAyCI,GAG1D,OAAO,MAOnBhC,qBAAsB,SAASiC,GAC5B,OAAGA,EAAU,GACH,MAEFA,EAAU,GACR,SAGA,SAQbjB,yBAA0B,SAASnZ,GAChC,IACIqa,EAAI3Z,EAAEyJ,WAOV,OALAzJ,EAAE6J,KAHSrK,KAIHJ,YAAYwa,qBAAqBta,IACvC0M,KAAK,SAAUvJ,GACXkX,EAAEnP,QAAQ/H,KAETkX,EAAElP,WAGZkN,iBAAkB,SAAUkC,GAIzB,OAHWra,KACYyW,mBAAmB6D,WACzBD,EAAQE,YACQ,IAAMlb,OAAO6M,KAAKiL,cAAcqD,WAAWH,EAAS,cAAehb,OAAOwL,aAAaC,YAAY,0BAI1IzL,OAAO+E,SAASC,SAAS,+CAAgD,mBAAoB,cAAehF,OAAOC,WAAWC,QAAQ+E,QAAQ3C,KAAK8Y,OAAO,GC3V1Jpb,OAAOC,WAAWC,QAAQC,OAAOC,OAAO,oDAKpCC,KAAM,SAAUC,EAAkBC,EAAaE,GAChCE,KAGNC,OAAON,EAAkBC,EAAaE,GAHhCE,KAMNE,eACDwa,mBAAoBrb,OAAOe,YAAY,iDAAiDC,OAAO,2BAIvGC,cAAe,WAIX,OAFWN,KACNO,QAAUC,EAAE,eADNR,KAECO,SAGhBE,WAAY,WACGT,KACNa,IAAI,yBAA0BL,EAAEM,MAD1Bd,KACqCwU,4BADrCxU,QAOfwU,4BAA6B,SAAUxT,EAAOlB,GAC1C,IAAIC,EAAOC,KACXmB,EAAWpB,EAAKqB,aAAaC,QAC7BtB,EAAKD,OAASU,EAAEf,OAAOM,EAAKD,OAAQA,EAAOmB,MACvClB,EAAKD,OAAO6B,KAAK2G,gBACjB9H,EAAE6J,KAAKtK,EAAKH,YAAY+a,eAAgBzQ,OAAQnK,EAAKD,OAAO6B,KAAKsG,MAAOuE,KAAK,SAASoO,GAGhF,GAFF7a,EAAKD,OAAO6B,KAAKsK,OAAS2O,EAEpB7a,EAAKD,OAAO6B,KAAKsK,OAAQ,CAC3B,IAAIpK,GACAgZ,SAAU9a,EAAKD,OAAO6B,KAAKsK,OAAO+F,UAClC8I,WAAY/a,EAAKD,OAAO6B,KAAKsK,OAAO2G,YACpClB,OAAQ3R,EAAKD,OAAO6B,KAAKsK,OAAOyF,OAChCqJ,WAAYhb,EAAKD,OAAO6B,KAAKsK,OAAO8O,WACpCpJ,WAAY5R,EAAKD,OAAO6B,KAAKsK,OAAO0F,WACpCqJ,OAAQjb,EAAKD,OAAO6B,KAAKsK,OAAO+O,OAChCC,YAAalb,EAAKD,OAAOob,QAAUnb,EAAKD,OAAOob,QAAUnb,EAAKD,OAAO6B,KAAKsK,OAAOkP,UAGrF,GAAG9b,OAAO6M,KAAKC,QAAQpM,EAAKD,OAAO6B,KAAKsK,OAAOG,cAC3CrM,EAAKqb,eAAeja,EAAUU,OAC7B,CACD,IAAIwK,GACAnC,OAAQnK,EAAKD,OAAO6B,KAAKsG,GACzBqE,WAAYvM,EAAKD,OAAO6B,KAAKsK,OAAOG,cAExC5L,EAAE6J,KAAKtK,EAAKH,YAAY2M,YAAYF,IAAuBG,KAAK,SAAUhC,GACtEzK,EAAKD,OAAO6B,KAAKsK,OAAOF,aAAevB,EAASuB,aAChDhM,EAAKqb,eAAeja,EAAUU,SAM3CyQ,KAAK,SAAS+I,OAKzBD,eAAgB,SAAS7a,EAASsB,GAI9BtB,EAAQc,QAHGrB,KAMgBI,YAAY,oBAElC8B,OAAOL,GACPM,SAAS5B,GACdC,EAAE,qBAAsBD,GAASmD,GAAG,QAASlD,EAAEM,MAVpCd,KAU+Csb,sBAV/Ctb,QAYfsb,sBAAuB,SAAUta,GAC7BA,EAAM6B,iBACK7C,KACNub,eAAe/a,EAAEQ,EAAM+B,QAAQC,QAAQ,0BAIpD3D,OAAO+E,SAASC,SAAS,iDAAkD,mBAAoB,cAAehF,OAAOC,WAAWC,QAAQ+E,QAAQ3C,KAAKsK,SAAS,GC3F9J5M,OAAOC,WAAWC,QAAQC,OAAOC,OAAO,mDAKpCC,KAAM,SAAUC,EAAkBC,EAAaE,GAC3C,IAAIC,EAAOC,KACXD,EAAKyb,YACLzb,EAAKsF,WACLtF,EAAK0b,oBACL1b,EAAK2b,sBAAwBrc,OAAO+E,SAASuX,IAAI,yBACjD5b,EAAK6b,kBAEL7b,EAAKE,OAAON,EAAkBC,EAAaE,GAG3CC,EAAKG,eACD2b,kBAAmBxc,OAAOe,YAAY,gDAAgDC,OAAO,yBAGjGN,EAAK+b,wBACL/b,EAAKgc,eACDC,SAAY3c,OAAOwL,aAAaC,YAAY,oCAC5CmR,MAAS5c,OAAOwL,aAAaC,YAAY,mCAIjDxK,cAAe,WAIX,OAFWN,KACNO,QAAUC,EAAE,eADNR,KAECO,SAGhBE,WAAY,WACGT,KACNa,IAAI,4BAA6BL,EAAEM,MAD7Bd,KACwCwU,4BADxCxU,QAOfwU,4BAA6B,SAAUxT,EAAOlB,GAC1C,IAAIC,EAAOC,KACPiB,EAAOnB,EAAOmB,KACdib,KACAC,KACAhb,EAAWpB,EAAKqB,aAAaC,QACzB+a,EAAgBtc,EAAOmB,KAAKU,KAAK8G,cACjC4T,EAAcvc,EAAOmB,KAAKU,KAAK8G,cACvC1I,EAAKD,OAASU,EAAEf,OAAOM,EAAKD,OAAQA,EAAOmB,MAE3Ckb,EAAgBnP,MAAOrB,OAAU0Q,EAAalV,SAAYiV,EAAeE,UAAa,WACtFvc,EAAKyb,SAAS,IAAMa,EAAc,MAC9BhM,QAAS,GACTpI,GAAIoU,EACJE,KAAMH,EACNlU,KAAM,GACNoU,UAAW,UAEfJ,EAAalP,KAAKqP,GAClB7b,EAAEgc,KAAKzc,EAAKD,OAAO6B,KAAK4E,WAAY,SAAUkW,EAAOhW,GACjD,IAAIiW,EAASjW,EAASiF,aAClBvE,EAAWV,EAASkW,iBACC,GAAtBlW,EAASsI,YACJ2N,IAAWL,GACgD,IAAxD7b,EAAEoc,QAAQ,WAAYT,EAAgB,GAAGG,YACxCH,EAAgB,GAAGG,SAAStP,KAAK,YACjCjN,EAAKyb,SAAS,IAAMa,EAAc,KAAKC,SAAStP,KAAK,cAIzDjN,EAAKyb,SAAS,IAAMkB,EAAS,MACzBrM,QAAS,GACTpI,GAAIyU,EACJH,KAAMpV,EACNe,KAAM,GACNoU,UAAW,aAEyE,IAApFH,EAAgB3V,OAAO,SAASqW,GAAQ,OAAOA,EAAKlR,QAAU+Q,IAAW/V,SACzEwV,EAAgBnP,MAAMrB,OAAU+Q,EAAQI,SAAY3V,EAAUmV,UAAa,cAC3EJ,EAAalP,KAAK0P,QAKlC3c,EAAKoc,gBAAkBA,EACvBpc,EAAKD,OAASmB,EAEQlB,EAAKK,YAAY,mBAElC8B,QACG2Q,SAAU9S,EAAKgd,cAAcZ,GAC7Ba,MAAO3d,OAAOwL,aAAaC,YAAY,sCAE1C3I,SAAShB,GACdpB,EAAKkd,mBACLld,EAAKmd,wBACL1c,EAAE6J,KAAKtK,EAAKod,iBAAiBjB,IAAelM,KAAK,WAC7CjQ,EAAKqd,uBAAuBf,GAC5Btc,EAAKkQ,iCAQb8M,cAAe,SAAUM,GACrB,IACIC,KAQJ,OAPmE,IAA9D,SAAU,WAAWC,QAFfvd,KAE4BF,OAAO6B,KAAKe,eAC/C2a,EAASpO,IAAI,SAAS4N,GAClB,IAAIW,GAA0C,IAAlCX,EAAKP,SAASiB,QAAQ,SAC9BE,GAAgD,IAArCZ,EAAKP,SAASiB,QAAQ,YACrCD,EAActQ,KAAK0Q,aAAaC,mBAAmBd,EAAKlR,OAAQ,GAAI,GAAI,GAAI,GAAI,GAAI8R,EAAYD,YAGjGE,aAAaX,cAAcO,IAOtCF,uBAAwB,SAAUf,GAC9B,IACIuB,EADO5d,KACUyb,iBAAiBpK,KAAK,SAASwL,GAChD,OAAOA,EAAK5U,IAAIoU,IAEhBwB,EAAWH,aAAaC,mBACxBC,EAAY3V,GACZ2V,EAAY1V,KACZ0V,EAAYE,SACZF,EAAYvN,QAAQ,yBAAyBuN,EAAYvN,aAAQ/E,EACjEsS,EAAYG,MACZH,EAAY1V,KAAKkI,eACjB,GACA,SAZOpQ,KAgBNO,QAAQ8Q,KAAK,6EAA6E2M,gBAhBpFhe,MAgB4G6c,KAAMgB,KAMjI5N,4BAA6B,WACzB,IAAIlQ,EAAOC,KACXQ,EAAEgc,KAAKzc,EAAKyb,SAAU,SAAU7L,EAAGsO,GAC/B,IAAIC,EAAM1d,EAAE,yCAA2Cyd,EAAIhW,GAAK,IAAKlI,EAAKQ,SAEtD,KAAhB0d,EAAI5N,SACJ6N,EAAI7M,KAAK,OAAO9D,KAAK,MAAO0Q,EAAI5N,SAChC7P,EAAE,sBAAuB0d,GAAKvP,aAGhBrD,IAAX2S,EAAI/V,MACH1H,EAAE,oBAAqB0d,GAAKvP,OAC5BnO,EAAE,sBAAuB0d,GAAK/N,KAAK8N,EAAI/V,KAAKkI,gBAG5C+N,QAAQC,IAAI,4BAU5BjB,iBAAkB,SAAU9N,GACxB,IACIvP,EADAC,EAAOC,KAEPgK,EAAQxJ,EAAEyJ,WAyBd,OAxBAnK,GACIyQ,WAAYlB,EAAaS,OACzB5G,MAAO,GACPsH,OAAQ,IAEZhQ,EAAE6J,KAAKtK,EAAKH,YAAY6Q,aAAa3Q,IAASyK,OAAO,SAAUC,GAC3DzK,EAAK0b,iBAAmBjR,EACxB,IAAK,IAAImF,EAAI,EAAGhJ,EAAS6D,EAAS7D,OAAQgJ,EAAIhJ,EAAQgJ,GAAK,OACrB,IAAtBnF,EAASmF,GAAO,KACxBtQ,OAAO+e,IAAI5T,EAASmF,GAAK,gBAAiBnF,EAAU,SAEjDzK,EAAKyb,SAAS,IAAMhR,EAASmF,GAAG1H,GAAK,MACpClI,EAAKyb,SAAS,IAAMhR,EAASmF,GAAG1H,GAAK,KAAKoI,SAAY7F,EAASmF,GAAU,QAAI,yBAA2BnF,EAASmF,GAAGU,QAAU,GAC9HtQ,EAAKyb,SAAS,IAAMhR,EAASmF,GAAG1H,GAAK,KAAKC,KAAOsC,EAASmF,GAAGzH,MAAQ,IAGrEiW,QAAQC,IAAI,0DAKxBre,EAAKse,oBACLrU,EAAMgB,YAEHhB,EAAMiB,WAMjBqT,gBAAiB,SAAU7X,GACvB,OAA8B,OAAvBA,EAAS+B,WAA8C,OAAxB/B,EAASC,YAGnD2X,kBAAmB,WAEf,IADA,IAAIte,EAAOC,KACH2P,EAAE,EAAGA,EAAE5P,EAAK0b,iBAAiB9U,OAAQgJ,IAAI,CAC7C,IAAI4O,EAASxe,EAAKye,gBAAgBze,EAAKD,OAAO6B,KAAK4E,WAAYxG,EAAK0b,iBAAiB9L,KACtE,IAAX4O,GACAxe,EAAK6b,eAAe5O,KAAKuR,KAWrCC,gBAAiB,SAASjY,EAAYsW,GAClC,IAAI9c,EAAQC,KACRye,EAAQlY,EAAWC,OAAO,SAAUC,GACpC,OAAOA,EAASiF,eAAiBmR,EAAK5U,IAAMlI,EAAKue,gBAAgB7X,KAClEwI,IAAI,SAASK,GACZ,OAASpH,KAAQoH,EAAEpH,QAEvB,GAAiB,GAAduW,EAAM9X,OAAU,OAAO,EAC1BkW,EAAK4B,MAAQA,EACb,IAAIC,EAAQ3e,EAAKoc,gBAAgB9K,KAAK,SAASsN,GAC3C,OAAOA,EAAQhT,QAAUkR,EAAK5U,KAgBlC,OAdA4U,EAAK6B,WAAgBpT,IAARoT,KAAqBA,EAAMpC,SAEpBoB,aAAaC,mBAC7Bd,EAAK5U,GACL4U,EAAK3U,KACL2U,EAAKiB,SACLjB,EAAKxM,QAAU,yBAA2BwM,EAAKxM,aAAU/E,EACzDuR,EAAKkB,MACLlB,EAAK3U,KAAKkI,cACVyM,EAAK6B,MAAMnB,QAAQ,aAAe,EAClCV,EAAK6B,MAAMnB,QAAQ,UAAY,EAC/BV,EAAK4B,WASbxB,iBAAkB,WACd,IAAIld,EAAOC,KAEXQ,EAAE,8BAA+BT,EAAKQ,SAASqe,IAAI,cAAclb,GAAG,aAAc,GAAI,SAAUmb,GAC5F,IAAIhR,EAAUrN,EAAEqe,EAAG9b,QACf+b,EAAgBjR,EAAQ7K,QAAQ,iBAAiBsN,KAAK,eACtDuM,EAAK9c,EAAK0b,iBAAiBpK,KAAK,SAASwL,GACzC,OAAOA,EAAK5U,IAAI6W,IAEhBvY,KAEDsW,EAAK4B,OACJ5B,EAAK4B,MAAMxP,IAAI,SAAS8P,GACpBxY,EAAWyG,KAAK+R,EAAK7W,QAG7B,IAAIwW,EAAQ3e,EAAKoc,gBAAgB9K,KAAK,SAASsN,GAC3C,OAAOA,EAAQhT,QAAUmT,IAE7BjC,EAAK6B,MAAQA,EAAMpC,SAEnBO,EAAKZ,MAAQY,EAAK6B,MAAMrN,KAAK,SAAShO,GAClC,MAAe,SAARA,IAEXwZ,EAAKY,WAAaZ,EAAK6B,MAAMrN,KAAK,SAAShO,GACvC,MAAe,YAARA,IAGX,IAAI2b,EAAWtB,aAAaC,mBAAmBd,EAAK5U,GAAI4U,EAAK3U,KAAM2U,EAAKiB,SAAUjB,EAAKxM,QAAQ,yBAAyBwM,EAAKxM,aAAQ/E,EAAWuR,EAAKkB,MAAQlB,EAAK3U,KAAKkI,cAAeyM,EAAKY,WAAYZ,EAAKZ,MAAO1V,MACnNsH,EAAQ5B,SAASgT,YAAYlf,GAAQgD,OAAQ8K,EAASgP,KAAMmC,OAGpE9B,sBAAuB,WACnB,IAAInd,EAAQC,KACZQ,EAAE,cAAc0e,MAAM,SAASle,GAC3BA,EAAM6B,iBACN7B,EAAMgQ,kBACN,IAAI4K,EAAiB7b,EAAK6b,mBAC1B7b,EAAK2b,sBAAsBpK,QAAQ,oBAC/B6N,WAAY9f,OAAOC,WAAWC,QAAQC,OAAO4f,qCAC7CC,cAAc,EACdpc,KAAM2Y,EACN0D,UAAU,EACVC,iBACIC,MAAOngB,OAAOwL,aAAaC,YAAY,kCAAmC,KAAK8Q,EAAejV,OAAO,IACrGuC,MAAO,IACPsH,OAAQ,IACRiP,cAAc,UASlCpgB,OAAO+E,SAASC,SAAS,gDAAiD,mBAAoB,cAAehF,OAAOC,WAAWC,QAAQ+E,QAAQ3C,KAAK+d,QAAQ","sourcesContent":["/*\r\n *   Name: Bizagi Workportal project Dashboard Menu Plan\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\r\n\r\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.dashboard.menu.plan\", {}, {\r\n\r\n   /*\r\n    *   Constructor\r\n    */\r\n   init: function (workportalFacade, dataService, projectDashboard, params) {\r\n      var self = this;\r\n      self.params = params || {};\r\n      self.projectDashboard = projectDashboard;\r\n\r\n      // Call base\r\n      self._super(workportalFacade, dataService, params);\r\n\r\n      //Load templates\r\n      self.loadTemplates({\r\n         \"project-dashboard-menu\": bizagi.getTemplate(\"bizagi.workportal.desktop.widgets.project.dashboard.menu.plan\").concat(\"#project-dashboard-menu\")\r\n      });\r\n   },\r\n\r\n   /**\r\n    * Renders the template defined in the widget\r\n    */\r\n   renderContent: function () {\r\n      var self = this;\r\n      self.content = $(\"<div></div>\");\r\n      return self.content;\r\n\r\n   },\r\n\r\n   /**\r\n    * links events with handlers\r\n    */\r\n   postRender: function () {\r\n      var self = this;\r\n      //Handlers\r\n      if(self.params && self.params.contextsLeftSidebarCaseDashboard){\r\n         self.params.contextsLeftSidebarCaseDashboard.forEach(function(context){\r\n            self.sub(context, $.proxy(self.updateView, self));\r\n         });\r\n      }\r\n\r\n   },\r\n\r\n\r\n   updateView: function (event, params) {\r\n      var self = this;\r\n      self.params = $.extend(self.params, params.args);\r\n      self.clean();\r\n      var $content = self.getContent().empty();\r\n\r\n      var template = self.getTemplate(\"project-dashboard-menu\");\r\n      self.params.menuPlanDashboard = self.params.menuPlanDashboard || {};\r\n      $.extend(self.params.menuPlanDashboard, self.params.menuDashboard);\r\n\r\n      self.planState = self.getPlanState(self.params.plan, self.params.planChild);\r\n      var argsTemplate = {\r\n         planState: self.planState,\r\n         showCommentsOptionMenu: self.params.menuPlanDashboard.showCommentsOptionMenu,\r\n         showFilesOptionMenu: self.params.menuPlanDashboard.showFilesOptionMenu,\r\n         showTimeLineOptionMenu: self.params.menuPlanDashboard.showTimeLineOptionMenu && self.isVisibleShowTimeLine(self.planState)\r\n      };\r\n      template.render(argsTemplate).appendTo($content);\r\n       \r\n      $(\"li[data-context='\" + self.params.showContextByMenuDashboard.toUpperCase() + \"']\", self.content).addClass(\"active\").siblings().removeClass(\"active\");\r\n\r\n      self.handlerEvents();\r\n   },\r\n\r\n    /**\r\n     * Return planState by plan or planChild\r\n     * @param plan\r\n     * @param planChild\r\n     * @returns {*}\r\n     */\r\n    getPlanState: function(plan, planChild){\r\n        var currentState;\r\n        if(planChild && planChild.currentState){\r\n            currentState = planChild.currentState;\r\n        }\r\n        else if(plan && plan.currentState){\r\n            currentState = plan.currentState;\r\n        }\r\n        return currentState;\r\n    },\r\n\r\n    /**\r\n     * Behavior visible timeline option\r\n     */\r\n    isVisibleShowTimeLine: function(planState){\r\n        var self = this;\r\n        var extraValidationShowTimeLine = true;\r\n        if(planState === \"PENDING\"){\r\n            extraValidationShowTimeLine = false;\r\n        }\r\n        return extraValidationShowTimeLine;\r\n    },\r\n\r\n   /*\r\n    *   Load Content By Id\r\n    */\r\n   loadContentById: function (event) {\r\n      var self = this;\r\n      event.preventDefault();\r\n      var $item = $(event.target).closest(\"li\");\r\n\r\n      if ($item.data(\"context\") === \"PLANBACK\") {\r\n         self.backParentPlan();\r\n      }\r\n      else{\r\n         if (!$item.hasClass(\"active\")) {\r\n            var showContextByMenuDashboard = $item.data(\"context\");\r\n            if (showContextByMenuDashboard) {\r\n\r\n               self.pub(\"notify\", {\r\n                  type: showContextByMenuDashboard.toUpperCase(),\r\n                  args: $.extend(self.params,{showContextByMenuDashboard: showContextByMenuDashboard})\r\n               });\r\n               $(\"li[data-context='\" + self.params.showContextByMenuDashboard.toUpperCase() + \"']\", self.content).addClass(\"active\").siblings().removeClass(\"active\");\r\n            }\r\n         }\r\n      }\r\n   },\r\n\r\n   subMenuHandler: function () {\r\n      var self = this;\r\n      var content = self.getContent();\r\n      var $comments = $(\"[data-context='PLANCOMMENTS']\", content);\r\n      var $files = $(\"[data-context='PLANFILES']\", content);\r\n      var $timeline = $(\"[data-context='PLANTIMELINE']\", content);\r\n\r\n      $(\".ui-bizagi-wp-project-tab-submenu a\", content).on(\"click\", function () {\r\n         $comments.toggle();\r\n         $files.toggle();\r\n         if(self.isVisibleShowTimeLine(self.planState)){\r\n            $timeline.toggle();\r\n         }\r\n      });\r\n   },\r\n\r\n   backParentPlan: function(){\r\n      var self = this;\r\n      //when a plan created from an activity is deleted, not created from a case\r\n      var getLevelNavigator = self.pub(\"notify\", { type: \"NAVIGATOR_GETLEVEL\"});\r\n      var currentLevelNavigator = parseInt(getLevelNavigator[0]);\r\n      var params = self.projectDashboard.getParamsByBackFromPlan(self.params, currentLevelNavigator);\r\n\r\n      self.pub(\"notify\", {\r\n         type: params.typeContext,\r\n         args: $.extend(self.params, params.paramsNotify)\r\n      });\r\n\r\n   },\r\n\r\n   handlerEvents: function(){\r\n      var self = this;\r\n      var content = self.getContent();\r\n\r\n      self.subMenuHandler();\r\n\r\n      $(\".ui-bizagi-wp-project-tab-links a\", content).on(\"click\",  $.proxy(self.loadContentById, self));\r\n   },\r\n\r\n   clean: function(){\r\n      var self = this;\r\n      var content = self.getContent();\r\n\r\n      $(\".ui-bizagi-wp-project-tab-links a\", content).off();\r\n\r\n      if(self.params && self.params.contextsLeftSidebarCaseDashboard){\r\n         self.params.contextsLeftSidebarCaseDashboard.forEach(function(context){\r\n            self.unsub(context, $.proxy(self.updateView, self));\r\n         });\r\n      }\r\n   }\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.project.dashboard.menu.plan\", [\"workportalFacade\", \"dataService\", \"bizagi.workportal.services.behaviors.projectDashboard\", bizagi.workportal.widgets.project.dashboard.menu.plan], true);","/*\r\n *   Name: Bizagi Workportal Project Content Dashboard\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\r\n\r\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.content.dashboard\", {}, {\r\n\r\n   /*\r\n    *   Constructor\r\n    */\r\n   init: function (workportalFacade, dataService, params) {\r\n      var self = this;\r\n\r\n      // Call base\r\n      self._super(workportalFacade, dataService, params);\r\n\r\n      //Load templates\r\n      self.loadTemplates({\r\n         \"project-content-dashboard\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.project.content.dashboard\").concat(\"#project-plan-content-dashboard\")\r\n      });\r\n\r\n   },\r\n\r\n   /*\r\n    * Renders the template defined in the widget\r\n    */\r\n   renderContent: function () {\r\n      var self = this;\r\n\r\n      var template = self.getTemplate(\"project-content-dashboard\");\r\n      self.content = template.render({});\r\n\r\n      return self.content;\r\n   },\r\n   postRender: function(){\r\n      var self = this;\r\n\r\n      setTimeout(function(){\r\n         $(window).trigger(\"resize\"); //Simulate resize for fix when load first time.\r\n      }, 1000);\r\n\r\n   }\r\n\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.project.content.dashboard\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.content.dashboard], true);","/*\r\n*   Name: Bizagi Workportal Desktop Project Plan Activities\r\n*   Author: David Romero Estrada\r\n*/\r\n\r\nbizagi.workportal.widgets.project.base.extend(\"bizagi.workportal.widgets.project.plan.activities\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (workportalFacade, dataService, notifier, serviceOrderActivitiesByTransitions, params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(workportalFacade, dataService, params);\r\n        \r\n        self.serviceOrderActivitiesByTransitions = serviceOrderActivitiesByTransitions;\r\n\r\n        // Modes widget: designed plan or execution plan\r\n        self.PENDING_PLAN = \"PENDING_PLAN\";\r\n        self.EXECUTING_PLAN = \"EXECUTING_PLAN\";\r\n        self.CONTEXT_PLANACTIVITIES = \"PLANACTIVITIES\";\r\n        self.CONTEXT_PLANOVERVIEW = \"PLANOVERVIEW\";\r\n        self.CONTEXT_PLANCREATE = \"PLANCREATE\";\r\n\r\n        self.plugins = {};\r\n        self.fromIndexEnabledSortingActivities = 0;\r\n        self.idActivityEditing = \"\";\r\n        self.plugins.notifier = notifier;\r\n\r\n        //private fields\r\n        self._statePlan = self.PENDING_PLAN;\r\n\r\n        self.userPictures = [];\r\n        self.refresh = params.refreshAllWidgets;\r\n\r\n        // Load templates\r\n        self.loadTemplates({\r\n            \"plan-activities-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.widgets.project.plan.activities\").concat(\"#project-plan-activities\"),\r\n            \"plan-activities-item\": bizagi.getTemplate(\"bizagi.workportal.desktop.widgets.project.plan.activities\").concat(\"#project-plan-activities-item\")\r\n        });\r\n    },\r\n\r\n    renderContent: function () {\r\n        var self = this;\r\n        self.content = $(\"<div></div>\");\r\n        return self.content;\r\n    },\r\n\r\n    postRender: function () {\r\n        var self = this;\r\n        self.sub(\"LOAD_INFO_SUMMARY_PROGRESS_PLAN\", $.proxy(self.onNotifySummaryProgressPlan, self));\r\n        self.sub(\"UPDATE_INFO_PLAN\", $.proxy(self.onNotifyUpdatePlan, self));\r\n        self.sub(\"UPDATE_LIST_ACTIVITIES\", $.proxy(self.renderWidgetByStatePlan, self));\r\n        self.sub(\"UPDATE_ACTIVITY_INFO\", $.proxy(self.refreshActivityRow, self));\r\n        if(!self.refresh){\r\n            self.collapseSidebars();\r\n        }\r\n    },\r\n\r\n    onNotifySummaryProgressPlan: function(event, params) {\r\n        var self = this;\r\n        self.params = $.extend(self.params, params.args);\r\n\r\n        var state = self.params.plan.currentState;\r\n        self._statePlan = state + \"_PLAN\";\r\n        \r\n        self.renderWidgetByStatePlan(event.type);\r\n        \r\n    },\r\n\r\n    renderWidgetByStatePlan: function(event){\r\n        var self = this;\r\n        self.idActivityEditing = \"\";\r\n        var $content = self.getContent().empty();\r\n\r\n        var isEnableEventsOnActivitiesByCurrentContext = self.enableEventsOnActivitiesByCurrentContext(self.params.showContextByMenuDashboard);\r\n\r\n        var auxCountActivitiesFinished = self.params.plan.activities.filter(function(activity){\r\n            return activity.finishDate;\r\n        }).length;\r\n\r\n        var argsTemplate = {\r\n            showContextByMenuDashboard: self.params.showContextByMenuDashboard,\r\n            statePlan: self._statePlan,\r\n            statePendingPlan: self.PENDING_PLAN,\r\n            stateExecutingPlan: self.EXECUTING_PLAN,\r\n            contextPlanActivities: self.CONTEXT_PLANACTIVITIES,\r\n            plan: self.params.plan,\r\n            showFormAddActivityByNotFinishedAllActivities: (auxCountActivitiesFinished !== self.params.plan.activities.length),\r\n            currentUserGuid: bizagi.currentUser.userGuid\r\n        };\r\n\r\n        var contentTemplate = self.getTemplate(\"plan-activities-main\");\r\n        contentTemplate\r\n           .render($.extend(self.params, argsTemplate))\r\n           .appendTo($content);\r\n           \r\n        if((self._statePlan === self.PENDING_PLAN || self._statePlan === self.EXECUTING_PLAN) && isEnableEventsOnActivitiesByCurrentContext){\r\n            self.plugins.sortablelist = self.initializeSortableList();\r\n            self.addEventHandlers();\r\n        }\r\n        \r\n        self.setContentWrapper($content);\r\n\r\n        $(\".project-plan-activity-list\", $content).on(\"click\", \"li\", $.proxy(self.onClickEditActivity, self));\r\n\r\n        $(\".project-plan-activity-list\", $content).on(\"click\", \"li .activity-view\", $.proxy(self.onClickEditActivity, self));\r\n\r\n        $(\".project-plan-activity-list\", $content).on(\"click\", \"li .bz-icon-trash-outline\", $.proxy(self.onClickDeleteActivity, self));\r\n\r\n        $(\".project-plan-activity-list\", $content).on(\"click\", \"li .item-workonit-button\", $.proxy(self.onClickWorkonItActivity, self));\r\n\r\n        if(self.params.showContextByMenuDashboard === self.CONTEXT_PLANACTIVITIES){\r\n            $(\".project-plan-activity-list\", $content).on(\"click\", \"li .ui-bizagi-wrapper-parallel-icon\", $.proxy(self.onClickChangeParallel, self));\r\n        }\r\n\r\n        if (self._statePlan === self.PENDING_PLAN) {\r\n            $(\"a#to-execute-plan\", $content).on(\"click\", $.proxy(self.onExecutePlan, self));\r\n        } else if (self._statePlan !== \"CLOSED_PLAN\") {\r\n            $(\"a#to-close-plan\", $content).on(\"click\", $.proxy(self.onClosePlan, self));\r\n        }\r\n\r\n        self.renderActivities();\r\n        if(event){\r\n            if(event.type === \"UPDATE_LIST_ACTIVITIES\"){\r\n                self.updateTransitions();\r\n            }\r\n        }\r\n    },\r\n\r\n    getCopyObjectPlan: function () {\r\n        var self = this;\r\n        return {\r\n            id: self.params.plan.id,\r\n            name: self.params.plan.name,\r\n            description: self.params.plan.description,\r\n            dueDate: self.params.plan.dueDate,\r\n            waitForCompletion: self.params.plan.waitForCompletion,\r\n            currentState: self.params.plan.currentState,\r\n            parentWorkItem: self.params.plan.parentWorkItem,\r\n            creationDate: self.params.plan.creationDate,\r\n            startDate: self.params.plan.startDate,\r\n            idUserCreator: self.params.plan.idUserCreator,\r\n            contextualized: self.params.plan.contextualized,\r\n            activities: self.params.plan.activities\r\n        };\r\n    },\r\n\r\n    enableEventsOnActivitiesByCurrentContext: function(currentContext){\r\n        var self = this;\r\n        return currentContext === self.CONTEXT_PLANACTIVITIES;\r\n    },\r\n\r\n    onNotifyUpdatePlan: function(){\r\n        var self = this;\r\n        if(self.params.showContextByMenuDashboard === self.CONTEXT_PLANOVERVIEW){\r\n            $(\".ui-bizagi-wp-project-plan-activities-header h3\", self.content).text(self.params.plan.name);\r\n            $(\".ui-bizagi-wp-project-plan-activities-header p\", self.content).text(self.params.plan.description);\r\n        }\r\n\r\n    },\r\n\r\n    initializeSortableList: function () {\r\n       var self = this;\r\n       return $(\".project-plan-activity-list\", self.content).kendoSortable({\r\n            hint: function (element) {\r\n                var $clone = element.clone().width(element.width());\r\n                return $(\"<ol class='project-plan-activity-list ui-bizagi-wp-nolist'></ol>\").append($clone);\r\n            },\r\n            change: $.proxy(self.onChangePosition, self),\r\n            disabled: \".disabled\",\r\n            end: function(e) {\r\n               if(e.newIndex < self.fromIndexEnabledSortingActivities) {\r\n                   e.preventDefault();\r\n               }\r\n                else{\r\n                    if(e.oldIndex !== e.newIndex){\r\n                        self.serviceOrderActivitiesByTransitions.movePositionActivity(self.params.plan.activities, e.oldIndex, e.newIndex);\r\n\r\n                        var $liActivityGoDown = $(\".project-plan-activity-list li\", self.content).eq(e.newIndex);\r\n\r\n                        if(!self.canChangeToParallelActivity(self.params.plan.activities, $liActivityGoDown)){\r\n                            self.params.plan.activities[e.newIndex].parallel = false;\r\n\r\n                            function setSerieActivity(){\r\n                                setTimeout(function(){\r\n                                    //TODO: Update selector when show arrows in all activities\r\n                                    $(\".project-plan-activity-list li .wrapper-arrow-css i\", self.content).eq(0).\r\n                                        removeClass(\"bz-icon-arrow-right-outline\").addClass(\"bz-icon-arrow-down-outline\");\r\n                                }, 50);\r\n                            }\r\n                            setSerieActivity(e.newIndex);\r\n\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n                }\r\n            }\r\n       }).data(\"kendoSortable\");\r\n    },\r\n\r\n    /*initializeNotifier: function(){\r\n        var self = this;\r\n        return $(\"#project-plan-notifier\", self.content).kendoNotification().data(\"kendoNotification\");\r\n    },*/\r\n\r\n    updateTransitions: function(){\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n        var params = {\r\n            idPlan: self.params.plan.id,\r\n            transitions: self.getActualTransitions()\r\n        };\r\n\r\n        $.when(self.dataService.changeTransitions(params)).always(function (response, responseText, xhr) {\r\n            if (xhr.status === 500) {\r\n                self.plugins.notifier.showErrorMessage(bizagi.localization.getResource(\"workportal-project-plan-activities-sorterror\"), \"error\");\r\n            }\r\n            self.params.plan.activities = self.orderActivitiesByTransitions(self.params.plan.activities, params.transitions);\r\n            defer.resolve();\r\n        });\r\n        return defer.promise();\r\n    },\r\n\r\n    orderActivitiesByTransitions: function(activities, transitions){\r\n        var self = this;\r\n        return self.serviceOrderActivitiesByTransitions.\r\n            getActivitiesByTransitions(activities, transitions);\r\n    },\r\n\r\n    getActualTransitions: function(){\r\n        var self = this;\r\n        var auxOrderTransitions = self.serviceOrderActivitiesByTransitions.\r\n            getActualTransitionsByActivities(self.params.plan.activities);\r\n\r\n        auxOrderTransitions.forEach(function(transition){\r\n            transition.id = undefined;\r\n            transition.idPlan = self.params.plan.id;\r\n        });\r\n\r\n        return auxOrderTransitions;\r\n    },\r\n\r\n    onChangePosition: function(){\r\n        var self = this;\r\n        self.updateTransitions();\r\n    },\r\n\r\n    onCreateActivity: function(event) {\r\n        event.preventDefault();\r\n\r\n        var self = this;\r\n        var $input = $(\"#project-plan-activity-create\", $(event.target));\r\n        var name = $input.val();\r\n\r\n        var idUserAssigned;\r\n        if(self.params.plan.activities.length > 0){\r\n            idUserAssigned = self.params.plan.activities[self.params.plan.activities.length - 1].userAssigned;\r\n        }\r\n        else{\r\n            idUserAssigned = bizagi.currentUser.idUser;\r\n        }\r\n\r\n        if (name.replace(/\\s/g, \"\") !== \"\") {\r\n\r\n            var params = {\r\n                progress: 0,\r\n                id: \"\",\r\n                startDate: null,\r\n                duration: null,\r\n                userAssigned: idUserAssigned,\r\n                allowEdition: true,\r\n                description: null,\r\n                name: name,\r\n                idPlan: self.params.plan.id,\r\n                estimatedFinishDate: null,\r\n                finishDate: null\r\n            };\r\n\r\n            if(self.params.plan.parent && !bizagi.util.isEmpty(self.params.plan.parent.guidActivity)){\r\n                var paramsDetailActivity = {\r\n                    idPlan: self.params.plan.id,\r\n                    idActivity: self.params.plan.parent.guidActivity \r\n                };\r\n                $.when(self.dataService.getActivity(paramsDetailActivity)).done(function (response) {\r\n                    params.allowEdition = response.allowEdition;\r\n                    self.createPlanActivity(params);\r\n\r\n                 });\r\n            }else{\r\n                self.createPlanActivity(params);\r\n            }\r\n\r\n            \r\n        }\r\n\r\n        event.target.reset();\r\n\r\n        event.preventDefault();\r\n    },\r\n    createPlanActivity: function(params){\r\n        var self = this;\r\n        $.when(self.dataService.createPlanActivity(params)).always(function (response, responseText, xhr) {\r\n\r\n            if (xhr.status === 201) {\r\n                var paramsDetailActivity = {\r\n                    idPlan: params.idPlan,\r\n                    idActivity: response.id\r\n                };\r\n                $.when(self.dataService.getActivity(paramsDetailActivity)).always(function (responseActivity) {\r\n                    var activityNew = $.extend(responseActivity, {\r\n                    id: response.id,\r\n                    items: [],\r\n                    numTotalItems: 0,\r\n                    numResolvedItems: 0,\r\n                    parallel: false\r\n                });\r\n\r\n                self.renderActivities([activityNew]);\r\n                self.params.plan.activities.push(activityNew);\r\n\r\n                var $activityList = $(\".project-plan-activity-list\", self.content);\r\n                $(\"li:last .bz-icon-pencil-outline\", $activityList).trigger(\"click\");\r\n\r\n                self.updateTransitions();\r\n            });\r\n            } else if (response.status === 500) {\r\n                self.plugins.notifier.showErrorMessage(bizagi.localization.getResource(\"workportal-project-plan-activities-createarror\"), \"error\");\r\n            }\r\n        });\r\n    },\r\n    onClickChangeParallel: function(event){\r\n        event.preventDefault();\r\n        var self = this;\r\n        var $wrapperArrow = $(\".wrapper-arrow-css\", event.currentTarget);\r\n\r\n        var $liActivitySelected = $wrapperArrow.closest(\"li\");\r\n        var idActivitySelected = $liActivitySelected.data(\"id\");\r\n\r\n        if(self.canChangeToParallelActivity(self.params.plan.activities, $liActivitySelected)){\r\n            /**\r\n             * Changes UI\r\n             * */\r\n            var activityParallel;\r\n            if($(\"i\", $wrapperArrow).hasClass(\"bz-icon-arrow-down-outline\")){\r\n                activityParallel = true;\r\n                $(\"i\", $wrapperArrow).removeClass(\"bz-icon-arrow-down-outline\").addClass(\"bz-icon-arrow-right-outline\").\r\n                    prop(\"title\", bizagi.localization.getResource(\"workportal-project-plan-activity-parallel\"));\r\n            }\r\n            else{\r\n                activityParallel = false;\r\n                $(\"i\", $wrapperArrow).removeClass(\"bz-icon-arrow-right-outline\").addClass(\"bz-icon-arrow-down-outline\").\r\n                    prop(\"title\", bizagi.localization.getResource(\"workportal-project-plan-activity-sequential\"));\r\n            }\r\n\r\n            /**\r\n             * Change Activity Data\r\n             */\r\n            self.changeActivityProperties(idActivitySelected, { parallel: activityParallel });\r\n\r\n            self.updateTransitions();\r\n        }\r\n    },\r\n\r\n    canChangeToParallelActivity: function(activities, $liActivitySelected){\r\n        var self = this;\r\n        var result = true;\r\n        var idLastParallelActivity = self.getLastParallelActivityIsRunningOrClose(activities);\r\n        if(idLastParallelActivity){\r\n            var $liPreviusActivity = $liActivitySelected.prev();\r\n            var idPreviusActivity = $liPreviusActivity.data(\"id\");\r\n            if(idLastParallelActivity === idPreviusActivity){\r\n                result = false;\r\n            }\r\n        }\r\n        return result;\r\n    },\r\n\r\n    onClickEditActivity: function (event) {\r\n        var self = this;\r\n        var $target = $(event.currentTarget);\r\n\r\n        /*if(self._statePlan === self.PENDING_PLAN || (!$target.hasClass(\"disabled\") && self._statePlan === self.EXECUTING_PLAN)){\r\n            isEditableFormActivity = true;\r\n        }*/\r\n\r\n        var idActivitySelected = $target.data(\"id\");\r\n\r\n        var activityToShow = self.params.plan.activities.filter(function (activity) {\r\n            return activity.id === idActivitySelected;\r\n        })[0];\r\n\r\n        var isEditableFormActivity = self._statePlan !== \"CLOSED_PLAN\" && activityToShow.workItemState !== \"Completed\";\r\n\r\n        if (self.params.showContextByMenuDashboard === self.CONTEXT_PLANACTIVITIES) {\r\n            function showFormToEditActivity(idActivitySelected){\r\n                if(self.idActivityEditing !== idActivitySelected){\r\n                    self.params.plan.idActivitySelected = idActivitySelected;\r\n\r\n                    $target.closest(\"li\").addClass(\"selected\").siblings().removeClass(\"selected\");\r\n                    self.idActivityEditing = idActivitySelected;\r\n                    self.pub(\"notify\", {\r\n                        type: \"EDITACTIVITY\",\r\n                        args: $.extend(self.params, {\r\n                            isEditableFormActivity: isEditableFormActivity,\r\n                            idActivityToShow: idActivitySelected\r\n                        })\r\n                    });\r\n                    self.pub(\"notify\", {\r\n                        type: \"OPEN_RIGHT_SIDEBAR\"\r\n                    });\r\n                }\r\n            }\r\n\r\n            showFormToEditActivity(idActivitySelected);\r\n        }\r\n    },\r\n\r\n    changeActivityProperties: function(activityGuid, activityPropertiesToUpdate){\r\n        var self = this;\r\n        for(var iActivity = 0, lengthActivities = self.params.plan.activities.length; iActivity < lengthActivities; iActivity += 1){\r\n            if(self.params.plan.activities[iActivity].id === activityGuid){\r\n                $.extend(self.params.plan.activities[iActivity], activityPropertiesToUpdate);\r\n                break;\r\n            }\r\n        }\r\n    },\r\n\r\n    addEventHandlers: function () {\r\n        var self = this;\r\n\r\n        $(\"#project-plan-activity-createform\", self.content).on(\"submit\", $.proxy(self.onCreateActivity, self));\r\n        $(\"#project-plan-activity-create\", self.content).focus();\r\n    },\r\n\r\n    /**\r\n     * UI\r\n     */\r\n    renderActivities: function(activities){\r\n        var self = this;\r\n        var $list = $(\".project-plan-activity-list\", self.content);\r\n        var tmpl = self.getTemplate(\"plan-activities-item\");\r\n\r\n        if(self.params.showContextByMenuDashboard === self.CONTEXT_PLANACTIVITIES){\r\n            $list.addClass(\"enabled-actions\");\r\n        }\r\n\r\n        var $element = self.params.plan.currentState === \"PENDING\" ? $(\"a#to-execute-plan\", self.content) : $(\"a#to-close-plan\", self.content);\r\n        if (activities || self.params.plan.activities.length > 0) {\r\n            $element.show();\r\n        } else {\r\n            $element.hide();\r\n        }\r\n\r\n        var arrayActivities = activities || self.params.plan.activities;\r\n\r\n        var argsTemplate = {\r\n            statePlan: self._statePlan,\r\n            statePendingPlan: self.PENDING_PLAN,\r\n            stateExecutingPlan: self.EXECUTING_PLAN,\r\n            context: self.params.showContextByMenuDashboard,\r\n            activities: activities || self.params.plan.activities,\r\n            currentUserId: bizagi.currentUser.idUser\r\n        };\r\n\r\n        if(self._statePlan === self.EXECUTING_PLAN){\r\n            arrayActivities.forEach(function(activity){\r\n                if(activity.startDate){\r\n                    activity.classEnabledActionActivities = \"disabled\";\r\n                }\r\n                else{\r\n                    activity.classEnabledActionActivities = (self.params.showContextByMenuDashboard === self.CONTEXT_PLANACTIVITIES ? \"enabled\" : \"disabled\");\r\n                }\r\n\r\n                activity.isRunning = self.runningActivity(activity);\r\n\r\n            });\r\n        }\r\n\r\n        // XSS Fix Bug \r\n        argsTemplate.activities = argsTemplate.activities.map(function (activity) {\r\n            activity.name = bizagi.util.decodeHtmlEntities(activity.name);\r\n            activity.description = bizagi.util.decodeHtmlEntities(activity.description);\r\n            return activity;\r\n        });\r\n\r\n        var $item = tmpl.render(argsTemplate);\r\n        $list.append($item);\r\n\r\n        self.fromIndexEnabledSortingActivities = self.params.plan.activities.filter(function(activity){\r\n            return activity.classEnabledActionActivities === \"disabled\";\r\n        }).length;\r\n\r\n        self.loadAndShowImagesUsers(self.params.plan.activities);\r\n    },\r\n\r\n    /**\r\n     * Know if the activity is running\r\n     * @param activity\r\n     * @returns {boolean}\r\n     */\r\n    runningActivity: function(activity){\r\n        //Inactive represent created but user dont access yet\r\n        return activity.workItemState === 'Active' || activity.workItemState === 'Inactive';\r\n    },\r\n\r\n    loadAndShowImagesUsers: function(listActivities){\r\n        var self = this;\r\n\r\n        var guidUsers = $.map(listActivities, function (element) {\r\n            return element.userAssigned;\r\n        });\r\n\r\n        function removeDuplicateItemsFromArray(a) {\r\n            var seen = {};\r\n            var out = [];\r\n            var len = a.length;\r\n            var j = 0;\r\n            for (var i = 0; i < len; i++) {\r\n                var item = a[i];\r\n                if (seen[item] !== 1) {\r\n                    seen[item] = 1;\r\n                    out[j++] = item;\r\n                }\r\n            }\r\n            return out;\r\n        }\r\n\r\n        var csvguidUsers = removeDuplicateItemsFromArray(guidUsers.concat(bizagi.currentUser.userGuid)).join(\",\");\r\n\r\n        self.getDataUsers(csvguidUsers).then(function () {\r\n            self.renderUserProfilesAndImages();\r\n        });\r\n    },\r\n\r\n    renderUserProfilesAndImages: function () {\r\n        var self = this;\r\n\r\n        var base64Prefix = \"data:image/png;base64,\";\r\n\r\n        for (var iUser = 0; iUser < self.userPictures.length; iUser += 1) {\r\n            $(\"div[data-iduser='\" + self.userPictures[iUser].id + \"']  span.ui-bizagi-user-initials\").html(self.userPictures[iUser].name.getInitials());\r\n            if (self.userPictures[iUser].picture) {\r\n                $(\"div[data-iduser='\" + self.userPictures[iUser].id + \"']  img\").show();\r\n                $(\"div[data-iduser='\" + self.userPictures[iUser].id + \"']  span.ui-bizagi-user-initials\").hide();\r\n                $(\"div[data-iduser='\" + self.userPictures[iUser].id + \"']  img\").attr(\"src\", base64Prefix + self.userPictures[iUser].picture);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Call services\r\n     */\r\n\r\n    /*\r\n     *  Get data for users\r\n     */\r\n    getDataUsers: function (csvguidUsers) {\r\n        var self = this,\r\n           defer = $.Deferred();\r\n\r\n        var params = {\r\n            usersGuids: csvguidUsers,\r\n            width: 50,\r\n            height: 50\r\n        };\r\n\r\n        self.dataService.getUsersData(params).always(function (response) {\r\n\r\n            function arrayUnique(array) {\r\n                var a = array.concat();\r\n                for (var i = 0; i < a.length; ++i) {\r\n                    for (var j = i + 1; j < a.length; ++j) {\r\n                        if (a[i] === a[j]){\r\n                            a.splice(j -= 1, 1);\r\n                        }\r\n\r\n                    }\r\n                }\r\n                return a;\r\n            }\r\n\r\n            self.userPictures = arrayUnique(self.userPictures.concat(response));\r\n            defer.resolve(response);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * When cancel form\r\n     */\r\n    onCancelActivityForm: function () {\r\n        var self = this;\r\n        self.closeSidebar();\r\n        self.pub(\"notify\", {\r\n            type: \"PLANSIDEBAR\",\r\n            args: self.params\r\n        });\r\n    },\r\n\r\n    setContentWrapper: function (content) {\r\n        var self = this;\r\n        var $contentWrapper = $(\".project-plan-content-wrapper\", content);\r\n        $contentWrapper.on(\"click\", $.proxy(self.onCancelActivityForm, self));\r\n        var activityArea = $(\"#project-plan-activities-wrapper\", content);\r\n        activityArea.on(\"click\", function(e) { e.stopPropagation(); });\r\n        var windowHeight = $(window).height();\r\n        var height = windowHeight - 156;\r\n        $contentWrapper.css(\"height\", height + \"px\");\r\n    },\r\n\r\n    onClickDeleteActivity: function (event) {\r\n        event.stopPropagation();        \r\n        var self = this;\r\n        var idActivitySelected = $(event.currentTarget).data(\"id\");\r\n        var params = {\r\n            idPlan: self.params.plan.id,\r\n            id: idActivitySelected\r\n        };\r\n        $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(\"workportal-project-plan-activity-delete-confirmation\"), \"\", \"info\")).done(function () {\r\n            $.when(self.dataService.deleteActivityPlan(params)).done(function () {\r\n                self.closeSidebar();\r\n                //The next activity of the deleted, if its parallel, have to set dont parallel\r\n                for(var iActivity = 0, lengthActivities = self.params.plan.activities.length; iActivity < lengthActivities; iActivity += 1){\r\n                    if(self.params.plan.activities[iActivity].id === idActivitySelected){\r\n                        //activity isn't the first or last activity\r\n                        if(lengthActivities > iActivity + 1 && iActivity > 0){\r\n                            if(self.params.plan.activities[iActivity + 1].parallel && self.params.plan.activities[iActivity - 1].parallel){\r\n                                self.params.plan.activities[iActivity + 1].parallel = false;\r\n                                $(\".project-plan-activity-list li[data-id='\" + self.params.plan.activities[iActivity].id + \"']\", self.content).\r\n                                    next().find(\".wrapper-arrow-css i\").removeClass(\"bz-icon-arrow-right-outline\").addClass(\"bz-icon-arrow-down-outline\");\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                //Delete activity\r\n                self.params.plan.activities = self.params.plan.activities.filter(function (activity) {\r\n                    return activity.id !== idActivitySelected;\r\n                });\r\n\r\n                $.when(self.updateTransitions()).done(function(){\r\n                    self.renderWidgetByStatePlan();\r\n\r\n                    self.pub(\"notify\", {\r\n                        type: \"PLANSIDEBAR\",\r\n                        args: self.params\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Go to activity\r\n     */\r\n    onClickWorkonItActivity: function(event){\r\n        event.preventDefault();\r\n        var self = this;\r\n        var idActivitySelected = $(event.target).closest(\"li\").data(\"id\");\r\n        var activity = self.params.plan.activities.filter(function (activity) {\r\n            return activity.id === idActivitySelected;\r\n        })[0];\r\n\r\n        self.publish(\"executeAction\", {\r\n            action: bizagi.workportal.actions.action.BIZAGI_WORKPORTAL_ACTION_ROUTING,\r\n            idCase: activity.idCase,\r\n            idWorkItem: activity.idWorkItem\r\n        });\r\n    },\r\n\r\n    onExecutePlan: function (event) {\r\n        event.preventDefault();\r\n        var self = this;\r\n\r\n        var numberActivitiesCreated = self.params.plan.activities.length;\r\n\r\n        if (numberActivitiesCreated > 0) {\r\n            if (!$(event.target).closest(\"a\").hasClass(\"disabled\")) {\r\n                self.params.plan.currentState = \"EXECUTING\";\r\n                $(event.target).closest(\"a\").addClass(\"disabled\");\r\n                var params = {\r\n                    idPlan: self.params.plan.id\r\n                };\r\n\r\n                $.when(self.dataService.putExecutePlan(params)).done(function () {\r\n                    var params = $.extend(self.getCopyObjectPlan(), { startDate: self.getDateServer() });\r\n                    self.callUpdatePlan(params);\r\n\r\n                    $(event.target).closest(\"a\").removeClass(\"disabled\");\r\n\r\n                    function sendNotification(params){\r\n                        if(self.params.planChild){\r\n                            self.params.planChild.currentState = self.params.plan.currentState;\r\n                        }\r\n\r\n                        self.pub(\"notify\", {\r\n                            type: \"PLANACTIVITIES\",\r\n                            args: $.extend(params, { refreshAllWidgets: true })\r\n                        });\r\n                    }\r\n\r\n                    if(typeof self.radNumber === \"undefined\"){\r\n                        $.when(self.dataService.getCaseByPlan({ idPlan: self.params.plan.id })).done(function(response){\r\n                            self.params.idCase = response.id;\r\n                            sendNotification(self.params);\r\n                        });\r\n                    }\r\n                    else{\r\n                        sendNotification(self.params);\r\n                    }\r\n\r\n\r\n\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            self.plugins.notifier.showErrorMessage(printf(bizagi.localization.getResource(\"workportal-project-plan-action-execute-message-activities-required\"), \"\"));\r\n        }\r\n    },\r\n\r\n    onClosePlan: function (event) {\r\n        var self = this;\r\n        event.preventDefault();\r\n        if (self.activitiesAreCompleted(self.params.plan.activities)) {\r\n            self.closePlan();\r\n        } else {\r\n            $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(\"workportal-project-plan-action-close-message-activities-finished\"), \"\", \"info\")).done(function () {\r\n                self.closePlan();\r\n            });\r\n        }\r\n    },\r\n\r\n    closePlan: function() {\r\n        var self = this;\r\n        var params = $.extend(self.getCopyObjectPlan(), { currentState: \"CLOSED\" });\r\n        $.when(self.callUpdatePlan(params)).done(function(){\r\n            $.when(self.callClosePlan({ idPlan: params.id })).done(function(){\r\n                self.params.plan = params;\r\n                self.pub(\"notify\", {\r\n                    type: \"LOAD_INFO_SUMMARY_PLAN\",\r\n                    args: self.params\r\n                });\r\n\r\n                self.pub(\"notify\", {\r\n                    type: \"LOAD_INFO_SUMMARY_PROGRESS_PLAN\",\r\n                    args: self.params\r\n                });\r\n            }).fail(function(){\r\n                self.notifier.showErrorMessage(printf(bizagi.localization.getResource('workportal-project-plan-close-fail'), ''));\r\n            });\r\n        }).fail(function(){\r\n            self.notifier.showErrorMessage(printf(bizagi.localization.getResource('workportal-project-plan-close-fail'), ''));\r\n        });\r\n    },\r\n\r\n    callUpdatePlan: function (params) {\r\n        var self = this;\r\n        return $.when(self.dataService.updatePlan(params)).done(function () {\r\n            $.extend(self.params.plan, params);\r\n        });\r\n    },\r\n\r\n    callClosePlan: function (params) {\r\n        var self = this;\r\n        return $.when(self.dataService.closePlan(params)).done(function () {\r\n            $.extend(self.params.plan, params);\r\n            self.plugins.notifier.showSucessMessage(printf(bizagi.localization.getResource(\"workportal-project-plan-close-success\"), \"\"));\r\n        });\r\n    },\r\n\r\n    activitiesAreCompleted: function (activities) {\r\n        var listActivities = activities || [];\r\n        var numActivitiesCompleted = listActivities.filter(function (activity) {\r\n            return activity.finishDate;\r\n        }).length;\r\n        return numActivitiesCompleted === activities.length;\r\n    },\r\n\r\n    getLastParallelActivityIsRunningOrClose: function(activities){\r\n        var lastIndexParallelInExecution = -1;\r\n        var parallelActivitiesInRunning = activities.filter(function(activity){\r\n            if(activity.startDate !== null && activity.parallel){\r\n                lastIndexParallelInExecution += 1;\r\n                return true;\r\n            }\r\n        });\r\n        if(lastIndexParallelInExecution >= 0 && lastIndexParallelInExecution + 1 !== activities.length){\r\n            return parallelActivitiesInRunning[parallelActivitiesInRunning.length - 1].id;\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    },\r\n\r\n    refreshActivityRow: function (event, params) {\r\n        var self = this;\r\n        var $selectedActivity = $(\".project-plan-activity-list li.selected\");\r\n        if (params.args.displayName) $(\"p>span\", $selectedActivity).text(params.args.displayName);\r\n        if (params.args.assignee) {\r\n\r\n            var idActivitySelected = $($selectedActivity).data(\"id\");\r\n            var activityEdited = self.params.plan.activities.filter(function (activity) {\r\n                return activity.id === idActivitySelected;\r\n            })[0];\r\n\r\n            if(params.args.assignee === bizagi.currentUser.idUser && (activityEdited.workItemState === \"Active\" || activityEdited.workItemState === \"Inactive\")){\r\n                $(\".item-workonit-button\", $selectedActivity).show();\r\n            }\r\n            else{\r\n                $(\".item-workonit-button\", $selectedActivity).hide();\r\n            }\r\n\r\n            self.getDataUsers([params.args.assignee].join()).then(function (response) {\r\n                $(\".bz-wp-avatar span.ui-bizagi-user-initials\", $selectedActivity).html(response[0].name.getInitials());\r\n                $(\"div.ui-bizagi-wp-project-plan-activity-infobox[data-iduser]\", $selectedActivity).attr(\"data-iduser\", params.args.assignee);\r\n                if (response[0].picture) {\r\n                    var base64Prefix = \"data:image/png;base64,\";\r\n                    $(\".bz-wp-avatar img\", $selectedActivity).show();\r\n                    $(\".bz-wp-avatar  span.ui-bizagi-user-initials\", $selectedActivity).hide();\r\n                    $(\".bz-wp-avatar img\", $selectedActivity).attr(\"src\", base64Prefix + response[0].picture);\r\n                }\r\n                else{\r\n                    $(\".bz-wp-avatar img\", $selectedActivity).hide();\r\n                    $(\".bz-wp-avatar  span.ui-bizagi-user-initials\", $selectedActivity).show();\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    closeSidebar: function(){\r\n        var that = this;\r\n        if(bizagi.services.preferences().getPreference(\"activityCollapseSidebars\") && $(\".ui-bizagi-wp-project-panel-rowicon-right i.bz-icon-left-outline\").css(\"display\") == \"none\" && $(\"li.clearfix.selected\").length > 0){\r\n            that.pub(\"notify\", {\r\n                type: \"CLOSE_RIGHT_SIDEBAR\"\r\n            });\r\n        }\r\n    },\r\n\r\n    collapseSidebars: function() {\r\n        if(bizagi.services.preferences().getPreference(\"activityCollapseSidebars\")){\r\n            $(\"#ui-bizagi-wp-project-homeportal-main\").addClass(\"ui-bizagi-wp-project-collapse-rightpanel\");\r\n            $(\"#ui-bizagi-wp-project-homeportal-main\").removeClass(\"ui-bizagi-wp-project-open-rightpanel\");\r\n            $(\"#right-sidebar-wrapper\").addClass(\"always-collpase\");\r\n\r\n            $(\"#ui-bizagi-wp-project-homeportal-main\").addClass(\"ui-bizagi-wp-project-collapse-leftpanel\");\r\n            $(\"#ui-bizagi-wp-project-homeportal-main\").removeClass(\"ui-bizagi-wp-project-open-leftpanel\");\r\n            $(\"#left-sidebar-wrapper\").addClass(\"always-collpase\");\r\n        }\r\n    }\r\n    \r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.activities\", [\"workportalFacade\", \"dataService\", \"notifier\", \"bizagi.workportal.services.behaviors.orderActivitiesByTransitions\", bizagi.workportal.widgets.project.plan.activities], true);\r\n","/*\r\n *   Name: Bizagi Workportal project Plan Sidebar\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\r\n\r\nbizagi.workportal.widgets.project.base.extend(\"bizagi.workportal.widgets.project.plan.sidebar\", {}, {\r\n\r\n   /*\r\n    *   Constructor\r\n    */\r\n   init: function (workportalFacade, dataService, serviceloadDataPlan, params) {\r\n      var self = this;\r\n\r\n      // Call base\r\n      self._super(workportalFacade, dataService, params);\r\n\r\n      self.serviceloadDataPlan = serviceloadDataPlan;\r\n      self.params = params || {};\r\n      params.supportNav = false;\r\n\r\n      //Load templates\r\n      self.loadTemplates({\r\n         \"project-plan-sidebar\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.project.plan.sidebar\").concat(\"#project-plan-sidebar\")\r\n      });\r\n\r\n   },\r\n\r\n    /*\r\n     * Renders the template defined in the widget\r\n     */\r\n    renderContent: function () {\r\n        var self = this;\r\n        var template = self.getTemplate(\"project-plan-sidebar\");\r\n        self.content = template.render({});\r\n        $.when(self.areTemplatedLoaded())\r\n                .done(function () {\r\n                    var params = {idPlan: self.params.plan.id};\r\n                    if (self.params.planChild && self.params.planChild.id) {\r\n                        params.idPlan = self.params.planChild.id;\r\n                    }\r\n                    self.serviceloadDataPlan.loadData(params, self.getDateServer, self.params);\r\n                    self.serviceloadDataPlan.subscribe(\"loadedWithDataActivities\", $.proxy(self.loadedWithDataActivities, self));\r\n                    self.serviceloadDataPlan.subscribe(\"loadedWithDataFirstParent\", $.proxy(self.loadedWithDataFirstParent, self));\r\n                });\r\n        return self.content;\r\n    },\r\n\r\n    loadedWithDataActivities: function(){\r\n        var self = this;\r\n        self.pub(\"notify\", {\r\n            type: \"LOADED_ACTIVITIES_PLAN\",\r\n            args: self.params\r\n        });\r\n        self.pub(\"notify\", {\r\n            type: \"UPDATE_INFO_PLAN\",\r\n            args: self.params\r\n        });\r\n        self.pub(\"notify\", {\r\n            type: \"LOAD_INFO_SUMMARY_PROGRESS_PLAN\",\r\n            args: self.params\r\n        });\r\n        self.pub(\"notify\", {\r\n            type: \"LOAD_INFO_ACTIVITIES_PLAN\",\r\n            args: self.params\r\n        });\r\n    },\r\n\r\n    loadedWithDataFirstParent: function(){\r\n        var self = this;\r\n        self.pub(\"notify\", {\r\n            type: \"LOAD_INFO_SUMMARY_PLAN\",\r\n            args: self.params\r\n        });\r\n    },\r\n\r\n    clean: function(){\r\n        var self = this;\r\n        if(self.serviceloadDataPlan){\r\n            self.serviceloadDataPlan.unsubscribe(\"loadedWithDataActivities\", $.proxy(self.loadedWithDataActivities, self));\r\n            self.serviceloadDataPlan.unsubscribe(\"loadedWithDataFirstParent\", $.proxy(self.loadedWithDataFirstParent, self));\r\n        }\r\n    }\r\n\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.sidebar\", [\"workportalFacade\", \"dataService\", \"bizagi.workportal.services.behaviors.loadDataPlan\", bizagi.workportal.widgets.project.plan.sidebar], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Action\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\r\n\r\nbizagi.workportal.widgets.project.base.extend(\"bizagi.workportal.widgets.project.plan.action\", {}, {\r\n\r\n    /*\r\n     *   Constructor\r\n     */\r\n    init: function (workportalFacade, dataService, projectDashboard, notifier, planTemplateCreate, planPopupEdit, params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(workportalFacade, dataService, params);\r\n\r\n        self.PENDING_PLAN = \"PENDING\";\r\n        self.EXECUTING_PLAN = \"EXECUTING\";\r\n        self.CLOSED_PLAN = \"CLOSED\";\r\n\r\n        self.CONTEXT_ACTIVITYPLAN = \"ACTIVITYPLAN\";\r\n        self.CONTEXT_ACTIVITYPLANOVERVIEW = \"ACTIVITYPLANOVERVIEW\";\r\n        self.CONTEXT_PLANCREATE = \"PLANCREATE\";\r\n        self.CONTEXT_ACTIVITYPLANCREATE = \"ACTIVITYPLANCREATE\";\r\n\r\n        self.showActionsPlan = false;\r\n        self.projectDashboard = projectDashboard;\r\n        self.notifier = notifier;\r\n        self.planTemplateCreate = planTemplateCreate;\r\n        self.planPopupEdit = planPopupEdit;\r\n\r\n        //Load templates\r\n        self.loadTemplates({\r\n            \"plan-action-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.action\").concat(\"#project-plan-action\")\r\n        });\r\n    },\r\n\r\n    renderContent: function () {\r\n        var self = this;\r\n        var tmpl = self.getTemplate(\"plan-action-main\");\r\n\r\n        self.showActionsPlan =  self.params.showContextByMenuDashboard !== self.CONTEXT_ACTIVITYPLAN &&\r\n            self.params.showContextByMenuDashboard !== self.CONTEXT_ACTIVITYPLANOVERVIEW;\r\n\r\n        self.plugins = {};\r\n        self.content = tmpl.render({\r\n            plan: self.params.plan.name,\r\n            stateClosedPlan: self.CLOSED_PLAN,\r\n            currentStatePlan: self.params.plan.currentState,\r\n            showActionsPlan: self.showActionsPlan\r\n        });\r\n\r\n        if (self.showActionsPlan) {\r\n            self.params.plan.contextualized = typeof(self.params.plan.contextualized) == \"undefined\" ? true : self.params.plan.contextualized;\r\n        }\r\n\r\n        return self.content;\r\n    },\r\n\r\n    postRender: function () {\r\n\r\n        var self = this;\r\n        var $contentWidget = self.getContent();\r\n\r\n        if(self.showActionsPlan){\r\n            self.initilizeActionMenu();\r\n            $(\"a#to-close-plan\", $contentWidget).on(\"click\", $.proxy(self.onClosePlan, self));\r\n        }\r\n\r\n        self.sub(\"LOAD_INFO_SUMMARY_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\r\n        self.clearAlertsOnFocus();\r\n\r\n        self.planTemplateCreate.sub('planTemplateCreatedSuccess', function () {\r\n            self.notifier.showSucessMessage(\r\n                printf(bizagi.localization.getResource('workportal-project-plan-create-template-success'), ''));\r\n        });\r\n        self.planTemplateCreate.sub('planTemplateCreatedFailed', function () {\r\n            self.notifier.showErrorMessage(\r\n                printf(bizagi.localization.getResource('workportal-project-plan-create-template-fail'), ''));\r\n        });\r\n\r\n        self.planPopupEdit.sub('planEditedSuccess', function () {\r\n            self.setNamePlan(self.params.plan.name);\r\n\r\n            self.pub(\"notify\", {\r\n                type: \"UPDATE_INFO_PLAN\"\r\n            });\r\n\r\n            self.pub(\"notify\", {\r\n                type: \"LOAD_INFO_SUMMARY_PLAN\",\r\n                args: self.params\r\n            });\r\n\r\n            self.notifier.showSucessMessage(\r\n                printf(bizagi.localization.getResource('workportal-project-plan-edit-success'), ''));\r\n        });\r\n\r\n        self.planPopupEdit.sub('planEditedFailed', function () {\r\n            self.notifier.showErrorMessage(\r\n                printf(bizagi.localization.getResource('workportal-project-plan-edit-fail'), ''));\r\n        });\r\n\r\n        self.sub(\"EXPANDED_RIGHT_SIDEBAR\", $.proxy(self.onNotifyExpandedRightSidebar, self));\r\n    },\r\n\r\n    onNotifyExpandedRightSidebar: function(){\r\n        var self = this;\r\n        if(self.showActionsPlan){\r\n            self.initilizeActionMenu();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Notifies when an event is raised\r\n     */\r\n\r\n    onNotifyLoadInfoSummaryPlan: function () {\r\n        var self = this;\r\n        self.setStatePlan(self.params.plan.currentState);\r\n        self.setNamePlan(self.params.plan.name);\r\n    },\r\n\r\n    /**\r\n     * UI\r\n     */\r\n\r\n    setStatePlan: function (statePlan) {\r\n        var self = this;\r\n        if (statePlan) {\r\n            switch (statePlan.toUpperCase()) {\r\n                case \"PENDING\":\r\n                    $(\".state-pending-plan\", self.content).show().siblings().hide();\r\n                    break;\r\n                case \"EXECUTING\":\r\n                    $(\".state-executing-plan\", self.content).show().siblings().hide();\r\n                    break;\r\n                case \"CLOSED\":\r\n                    $(\".state-closed-plan\", self.content).show().siblings().hide();\r\n                    break;\r\n            }\r\n        }\r\n    },\r\n\r\n    setNamePlan: function(namePlan){\r\n        var self = this;\r\n        $(\".ui-bizagi-wp-project-plan-header .bz-wp-section\", self.content).text(bizagi.util.decodeHtmlEntities(namePlan));\r\n    },\r\n\r\n    /**\r\n     Events\r\n     */\r\n    onSelectMenu: function (event, ui) {\r\n        var self = this;\r\n        if($(event.currentTarget).find(\"i\").length === 0){\r\n            var item = $(ui.item).data(\"item\");\r\n\r\n            switch (item) {\r\n                case \"edit\":\r\n                    self.onClickMenuOpenEdition();\r\n                    break;\r\n                case \"delete\":\r\n                    self.onClickMenuDeletePlan();\r\n                    break;\r\n                case \"saveastmpl\":\r\n                    self.onClickMenuSaveAsTemplate();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    onClickMenuOpenEdition: function () {\r\n        var self = this;\r\n        var planSelected = self.params.plan;\r\n        self.planPopupEdit.showPopup(self.params, self.dataService, planSelected);\r\n    },\r\n\r\n    onClickMenuSaveAsTemplate: function () {\r\n        var self = this;\r\n        self.planTemplateCreate.showPopupAddTemplatePlan(self.params,\r\n            self.dataService, self.params.plan.contextualized, self.params.plan.id);\r\n    },\r\n\r\n    onClickMenuDeletePlan: function(){\r\n        var self = this;\r\n\r\n        $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(\"workportal-project-plan-action-delete-confirmation\"), \"\", \"info\")).done(function () {\r\n            var params = { id: self.params.plan.id };\r\n\r\n            $.when(self.callDeletePlan(params)).always(function(response){\r\n                if (response.status === 200 || typeof (response.status) === \"undefined\") {\r\n                    $.extend(self.params.plan, params);\r\n                    self.notifier.showSucessMessage(\r\n                        printf(bizagi.localization.getResource(\"workportal-project-plan-delete-success\"), \"\"));\r\n\r\n                    //when a plan created from an activity is deleted, not created from a case\r\n                    var getLevelNavigator = self.pub(\"notify\", { type: \"NAVIGATOR_GETLEVEL\"});\r\n                    var currentLevelNavigator = parseInt(getLevelNavigator[0]);\r\n                    var params = self.projectDashboard.getParamsByBackFromPlan(self.params, currentLevelNavigator, true);\r\n\r\n                    self.pub(\"notify\", {\r\n                        type: params.typeContext,\r\n                        args: $.extend(self.params, params.paramsNotify)\r\n                    });\r\n                }\r\n                else{\r\n                    self.notifier.showErrorMessage(\r\n                        printf(bizagi.localization.getResource('workportal-project-plan-delete-fail'), ''));\r\n                }\r\n            });\r\n        });\r\n    },\r\n\r\n    onSubmitFormPlan: function (event) {\r\n        event.preventDefault();\r\n    },\r\n\r\n    initilizeActionMenu: function () {\r\n        var self = this;\r\n        $(\".ui-bizagi-wp-project-plan-action-menu\", self.content).menu({\r\n            select: $.proxy(self.onSelectMenu, self)\r\n        }).removeClass(\"ui-widget-content\");\r\n    },\r\n\r\n\r\n    /**\r\n     * Initialize edit plugin\r\n     */\r\n\r\n    clearAlertsOnFocus: function () {\r\n        $(\".ui-bizagi-wp-project-container-validator-relative input, .ui-bizagi-wp-project-container-validator-relative textarea\").focus(function () {\r\n            $(this).parent().find(\".k-invalid-msg\").hide();\r\n        }).focusout(function () {\r\n            if ($(this).val().length < 1) {\r\n                $(this).parent().find(\".k-invalid-msg\").show();\r\n            }\r\n        });\r\n    },\r\n\r\n    /*activitiesAreCompleted: function(activities){\r\n        var listActivities = activities || [];\r\n        var numActivitiesCompleted =  listActivities.filter(function(activity){\r\n            return activity.finishDate;\r\n        }).length;\r\n        return numActivitiesCompleted == activities.length;\r\n    },*/\r\n\r\n    /*getCopyObjectPlan: function(){\r\n        var self = this;\r\n        return {\r\n            id: self.params.plan.id,\r\n            name: self.params.plan.name,\r\n            description: self.params.plan.description,\r\n            dueDate: self.params.plan.dueDate,\r\n            waitForCompletion: self.params.plan.waitForCompletion,\r\n            currentState: self.params.plan.currentState,\r\n            parentWorkItem: self.params.plan.parentWorkItem,\r\n            creationDate: self.params.plan.creationDate,\r\n            startDate: self.params.plan.startDate,\r\n            idUserCreator: self.params.plan.idUserCreator,\r\n            contextualized: self.params.plan.contextualized,\r\n            activities: self.params.plan.activities\r\n        };\r\n    },*/\r\n\r\n    /**\r\n     * Call services\r\n     */\r\n    /*callUpdatePlan: function(params){\r\n        var self = this;\r\n        return $.when(self.dataService.updatePlan(params)).done(function () {\r\n            $.extend(self.params.plan, params);\r\n\r\n        });\r\n    },\r\n\r\n    callClosePlan: function(params){\r\n        var self = this;\r\n        return $.when(self.dataService.closePlan(params)).done(function () {\r\n            $.extend(self.params.plan, params);\r\n            self.notifier.showSucessMessage(\r\n                printf(bizagi.localization.getResource(\"workportal-project-plan-close-success\"), \"\"));\r\n        });\r\n    },*/\r\n\r\n    callDeletePlan: function(params){\r\n        var self = this;\r\n        return $.when(self.dataService.deletePlan(params));\r\n    },\r\n\r\n    clean: function(){\r\n        var self = this;\r\n        self.planTemplateCreate.unsub(\"planTemplateCreatedSuccess\");\r\n        self.planTemplateCreate.unsub(\"planTemplateCreatedFailed\");\r\n        self.planPopupEdit.unsub(\"planEditedSuccess\");\r\n        self.planPopupEdit.unsub(\"planEditedFailed\");\r\n\r\n        self.unsub(\"EXPANDED_RIGHT_SIDEBAR\", $.proxy(self.onNotifyExpandedRightSidebar, self));\r\n    }\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.action\", [\"workportalFacade\", \"dataService\",\r\n    \"bizagi.workportal.services.behaviors.projectDashboard\", \"notifier\",\r\n    \"bizagi.workportal.widgets.project.plan.template.create\",\r\n    \"bizagi.workportal.widgets.project.plan.edit\",\r\n    bizagi.workportal.widgets.project.plan.action], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan State\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\r\n\r\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.state\", {}, {\r\n\r\n   /*\r\n    *   Constructor\r\n    */\r\n   init: function (workportalFacade, dataService, params) {\r\n      var self = this;\r\n\r\n      // Call base\r\n      self._super(workportalFacade, dataService, params);\r\n\r\n      //Load templates\r\n      self.loadTemplates({\r\n         \"plan-state-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.state\").concat(\"#project-plan-state\")\r\n      });\r\n   },\r\n\r\n   renderContent: function () {\r\n      var self = this;\r\n      self.content = $(\"<div></div>\");\r\n      return self.content;\r\n   },\r\n\r\n   postRender: function () {\r\n      var self = this;\r\n      self.sub(\"LOAD_INFO_SUMMARY_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\r\n   },\r\n\r\n   /**\r\n    * Notifies when an event is raised\r\n    */\r\n\r\n   onNotifyLoadInfoSummaryPlan: function (event, params) {\r\n      var self = this;\r\n      var tmpl = self.getTemplate(\"plan-state-main\");\r\n      var renderWidget = tmpl.render({});\r\n      self.params = $.extend(self.params, params.args);\r\n\r\n       var state = self.params.plan.currentState;\r\n\r\n       switch (state.toUpperCase()) {\r\n         case \"PENDING\":\r\n            $(\".state-pending\", renderWidget).show().siblings().hide();\r\n            break;\r\n         case \"EXECUTING\":\r\n            $(\".state-executing\", renderWidget).show().siblings().hide();\r\n            break;\r\n         case \"CLOSED\":\r\n            $(\".state-closed\", renderWidget).show().siblings().hide();\r\n            break;\r\n      }\r\n      self.content.empty().append(renderWidget);\r\n\r\n   }\r\n\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.state\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.state], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Progress\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\r\n\r\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.progress\", {}, {\r\n\r\n   /*\r\n    *   Constructor\r\n    */\r\n   init: function (workportalFacade, dataService, params) {\r\n      var self = this;\r\n\r\n      // Call base\r\n      self._super(workportalFacade, dataService, params);\r\n\r\n      //Load templates\r\n      self.loadTemplates({\r\n         \"plan-progress-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.progress\").concat(\"#project-plan-progress\")\r\n      });\r\n   },\r\n\r\n   renderContent: function () {\r\n      var self = this;\r\n      self.content = $(\"<div></div>\");\r\n      return self.content;\r\n   },\r\n\r\n   postRender: function () {\r\n      var self = this;\r\n\r\n      self.sub(\"LOAD_INFO_SUMMARY_PROGRESS_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\r\n   },\r\n\r\n   /**\r\n    * Notifies when an event is raised\r\n    */\r\n\r\n   onNotifyLoadInfoSummaryPlan: function (event, params) {\r\n      var self = this;\r\n      self.params = $.extend(self.params, params.args);\r\n\r\n      var $content = self.getContent().empty();\r\n\r\n      var valuePercentBarComplete = self.calculateProgress();\r\n\r\n      var argsTemplate = {};\r\n      argsTemplate.progress = valuePercentBarComplete;\r\n\r\n      if(argsTemplate.progress < 33){\r\n         argsTemplate.colorBar = \"Red\";\r\n      }\r\n      else if(argsTemplate.progress < 66){\r\n         argsTemplate.colorBar = \"Yellow\";\r\n      }\r\n      else{\r\n         argsTemplate.colorBar = \"Green\";\r\n      }\r\n\r\n      //Update widget\r\n      var contentTemplate = self.getTemplate(\"plan-progress-main\");\r\n      contentTemplate\r\n         .render(argsTemplate)\r\n         .appendTo($content);\r\n\r\n      //Begin Adjust status bar next to the number days\r\n      var $barRemainingDate = $(\".remaining-days .time-remaining\", $content);\r\n      var widthNumberDays = $(\".remaining-days .days\", $content).width();\r\n      $barRemainingDate.css(\"padding-left\", (widthNumberDays + 7).toString() + \"px\");\r\n      //End Adjust status bar next to the number days\r\n\r\n\r\n   },\r\n\r\n   calculateProgress: function(){\r\n      var self = this;\r\n\r\n      var completedActivities = 0;\r\n      var totalActivities = self.params.plan.activities.length;\r\n      var percentProgress = 0;\r\n      \r\n      if(totalActivities !== 0){\r\n         self.params.plan.activities.forEach(function(activity){\r\n             if (activity.workItemState === \"Completed\") {\r\n               completedActivities++;\r\n            }\r\n         });\r\n         percentProgress = Math.round((completedActivities / totalActivities) * 100);\r\n      }\r\n      return percentProgress;\r\n   }\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.progress\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.progress], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Time\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\r\n\r\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.time\", {}, {\r\n\r\n   /*\r\n    *   Constructor\r\n    */\r\n   init: function (workportalFacade, dataService, params) {\r\n      var self = this;\r\n\r\n      // Call base\r\n      self._super(workportalFacade, dataService, params);\r\n\r\n      self.PENDING_PLAN = \"PENDING\";\r\n      self.EXECUTING_PLAN = \"EXECUTING\";\r\n      self.CLOSED_PLAN = \"CLOSED\";\r\n\r\n      //Regional\r\n      self.datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n\r\n      //Load templates\r\n      self.loadTemplates({\r\n         \"plan-time-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.time\").concat(\"#project-plan-time\")\r\n      });\r\n   },\r\n\r\n   renderContent: function () {\r\n      var self = this;\r\n      self.content = $(\"<div></div>\");\r\n      return self.content;\r\n   },\r\n\r\n   postRender: function () {\r\n      var self = this;\r\n\r\n      self.sub(\"LOAD_INFO_SUMMARY_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\r\n   },\r\n\r\n   /**\r\n    * Notifies when an event is raised\r\n    */\r\n\r\n   onNotifyLoadInfoSummaryPlan: function (event, params) {\r\n      var self = this;\r\n      self.params = $.extend(self.params, params.args);\r\n\r\n      if(self.params.plan){\r\n         if(self.params.plan.dueDate){\r\n            if(self.params.plan.currentState === self.PENDING_PLAN || self.params.plan.currentState === self.EXECUTING_PLAN ){\r\n               self.updateWidget(event, params);\r\n            }\r\n            else{\r\n               self.sub(\"LOADED_ACTIVITIES_PLAN\", $.proxy(self.updateWidget, self));\r\n            }\r\n         }\r\n         else{\r\n            self.getContent().empty();\r\n         }\r\n      }\r\n\r\n   },\r\n   \r\n   /**\r\n    * change the time properties string to timestamp number\r\n    * @param {*} plan \r\n    */\r\n   planDatesToStamp:function (plan) {\r\n      if(plan.activities)\r\n         plan.activities.map(function(a) {\r\n            if(a.estimatedFinishDate)a.estimatedFinishDate=new Date(a.estimatedFinishDate).getTime();\r\n            if(a.startDate)a.startDate=new Date(a.startDate).getTime();\r\n            if(a.finishDate)a.finishDate=new Date(a.finishDate).getTime();\r\n         });\r\n      if(plan.dueDate)plan.dueDate=new Date(plan.dueDate).getTime();\r\n      if(plan.creationDate)plan.creationDate=new Date(plan.creationDate).getTime();\r\n      if(plan.startDate)plan.startDate=new Date(plan.startDate).getTime();\r\n      if(plan.closedDate)plan.closedDate=new Date(plan.closedDate).getTime();\r\n      if(plan.finishDate)plan.finishDate=new Date(plan.finishDate).getTime();\r\n   },\r\n   updateWidget: function(event, params){\r\n      var self = this;\r\n      self.params = $.extend(self.params, params.args);\r\n      self.planDatesToStamp(self.params.plan);\r\n      var $content = self.getContent().empty();\r\n      if(self.params.plan.currentState === self.CLOSED_PLAN){\r\n         self.getClosedDatePlan(self.params.plan);\r\n      }\r\n      $.when(self.getIntervalOnMinutes(self.params.plan)).done(function(response){\r\n         var relativeTime =  bizagi.util.dateFormatter.getRelativeTime(new Date(Date.now() - (response.minutesToShowTime * 60 * 1000)), null, true);\r\n\r\n         var messageUnitTimeCalculated = relativeTime.replace(/\\d/g,\"\");\r\n         var keywordResourceDescriptionDifference = self.getKeywordDifferenceDates(self.params.plan);\r\n         var messageDescripionDifference = bizagi.localization.getResource(\"workportal-project-plan-state-\" + keywordResourceDescriptionDifference);\r\n         messageDescripionDifference = messageDescripionDifference.replace(\"%s\", messageUnitTimeCalculated);\r\n\r\n         var valueOfTimeCalculated = relativeTime.replace(/\\D/g,\"\");\r\n\r\n         var auxToDate = self.getSecondDate(self.params.plan);\r\n         var auxPercentBar = self.getWidthBar(self.params.plan, response);\r\n         var auxColorBar = self.getColorBarByPercent(auxPercentBar);\r\n         var argsTemplate = {\r\n            fromDate:  self.getFormattedDate(new Date(self.getFirstDate(self.params.plan))),\r\n            toDate: auxToDate ? self.getFormattedDate(new Date(auxToDate)) : null,\r\n            valueOfTimeCalculated: valueOfTimeCalculated,\r\n            messageDescripionDifference: messageDescripionDifference,\r\n            percentBar: auxPercentBar,\r\n            colorBar: auxColorBar\r\n         };\r\n\r\n         var contentTemplate = self.getTemplate(\"plan-time-main\");\r\n         contentTemplate\r\n            .render(argsTemplate)\r\n            .appendTo($content);\r\n\r\n      });\r\n   },\r\n   getFirstDate: function(plan){\r\n      var self = this;\r\n      switch(plan.currentState){\r\n         case self.PENDING_PLAN:\r\n            if(plan.dueDate){\r\n               return plan.dueDate;\r\n            }\r\n            else{\r\n               return plan.creationDate;\r\n            }\r\n            break;\r\n         case self.EXECUTING_PLAN:\r\n         case self.CLOSED_PLAN:\r\n            return plan.startDate;\r\n      }\r\n   },\r\n   getSecondDate: function(plan){\r\n      var self = this;\r\n      switch(plan.currentState){\r\n         case self.PENDING_PLAN:\r\n            return null;\r\n         case self.EXECUTING_PLAN:\r\n            return plan.dueDate;\r\n         case self.CLOSED_PLAN:\r\n            return plan.closedDate;\r\n      }\r\n   },\r\n   getLastActivity: function(activities){\r\n      var copyActivities = JSON.parse(JSON.stringify(activities));\r\n      return copyActivities.sort(function(activityA, activityB){\r\n         return (activityA.finishDate < activityB.finishDate) ? 1 : -1;\r\n      })[0];\r\n   },\r\n\r\n   getClosedDatePlan: function(plan){\r\n      var self = this;\r\n      plan.closedDate =  self.getLastActivity(plan.activities).finishDate;\r\n      return plan.closedDate;\r\n   },\r\n\r\n   getDifferenceBetweenDates: function(firstDate, secondDate){\r\n      var self = this;\r\n      var defer = $.Deferred();\r\n      var params = {\r\n         idUser: bizagi.currentUser.idUser,\r\n         fromDate: firstDate,\r\n         toDate: secondDate\r\n\r\n      };\r\n      $.when(self.callGetEffectiveDuration(params)).done(function(difference){\r\n         defer.resolve(difference.minutes);\r\n      });\r\n      return defer.promise();\r\n   },\r\n\r\n   getIntervalOnMinutes: function(plan){\r\n      var self = this;\r\n      var defer = $.Deferred();\r\n      switch(plan.currentState){\r\n         case self.PENDING_PLAN:\r\n            if(plan.dueDate > Date.now()){\r\n               $.when(self.getDifferenceBetweenDates(Date.now(), plan.dueDate)).done(function(minutesNowToDueDate){\r\n                   $.when(self.getDifferenceBetweenDates(plan.creationDate, Date.now())).done(function(minutesCreateToNow){\r\n                       defer.resolve({minutesToShowTime: minutesNowToDueDate, minutesCreateToNow: minutesCreateToNow});\r\n                   });\r\n               });\r\n            }\r\n            else if(plan.dueDate < plan.creationDate){\r\n               $.when(self.getDifferenceBetweenDates(plan.dueDate,  plan.creationDate)).done(function(minutesDueDateToCreate){\r\n                   $.when(self.getDifferenceBetweenDates(plan.creationDate, Date.now())).done(function(minutesCreateToNow){\r\n                       defer.resolve({minutesToShowTime: minutesDueDateToCreate + minutesCreateToNow, minutesCreateToNow: minutesCreateToNow});\r\n                   });\r\n               });\r\n            }\r\n            else if(plan.dueDate > plan.creationDate){\r\n                $.when(self.getDifferenceBetweenDates(plan.creationDate, plan.dueDate)).done(function(minutesCreateToDueDate){\r\n                    $.when(self.getDifferenceBetweenDates(plan.dueDate, Date.now())).done(function(minutesCreateToNow){\r\n                        defer.resolve({minutesToShowTime: minutesCreateToDueDate + minutesCreateToNow, minutesCreateToNow: minutesCreateToNow});\r\n                    });\r\n                });\r\n            }\r\n            break;\r\n         case self.EXECUTING_PLAN:\r\n            if(plan.dueDate){\r\n               if(plan.dueDate > Date.now()){\r\n                  $.when(self.getDifferenceBetweenDates(Date.now(), plan.dueDate)).done(function(minutesNowToDueDate){\r\n                      $.when(self.getDifferenceBetweenDates(plan.startDate, Date.now())).done(function(minutesStartToNow){\r\n                          defer.resolve({minutesToShowTime: minutesNowToDueDate, minutesStartToNow: minutesStartToNow});\r\n                      });\r\n                  });\r\n               }\r\n               else{\r\n                  $.when(self.getDifferenceBetweenDates(plan.dueDate, Date.now())).done(function(minutesDueDateToNow){\r\n                      $.when(self.getDifferenceBetweenDates(plan.startDate, plan.dueDate)).done(function(minutesStartToDueDate){\r\n                          defer.resolve({minutesToShowTime: minutesDueDateToNow, minutesStartToDueDate: minutesStartToDueDate});\r\n                      });\r\n                  });\r\n               }\r\n\r\n            }\r\n            else{\r\n               $.when(self.getDifferenceBetweenDates(plan.startDate, Date.now())).done(function(minutes){\r\n                  defer.resolve({minutesToShowTime: minutes});\r\n               });\r\n            }\r\n            break;\r\n         case self.CLOSED_PLAN:\r\n            $.when(self.getDifferenceBetweenDates(plan.startDate, plan.closedDate)).done(function(minutes){\r\n               defer.resolve({minutesToShowTime: minutes});\r\n            });\r\n\r\n      }\r\n      return defer.promise();\r\n   },\r\n\r\n   getKeywordDifferenceDates: function(plan){\r\n      var self = this;\r\n      switch(plan.currentState){\r\n         case self.PENDING_PLAN:\r\n            if(plan.dueDate > Date.now()){\r\n               return \"remaining\";\r\n            }\r\n            else {\r\n               return \"exceeded\";\r\n            }\r\n            break;\r\n         case self.EXECUTING_PLAN:\r\n            if(plan.dueDate){\r\n               if(plan.dueDate > Date.now()){\r\n                  return \"remaining\";\r\n               }\r\n               else{\r\n                  return \"exceeded\";\r\n               }\r\n\r\n            }\r\n            else{\r\n               return \"opened\";\r\n            }\r\n            break;\r\n         case self.CLOSED_PLAN:\r\n            return \"executed\";\r\n      }\r\n   },\r\n\r\n   getRelativeTime: function(milliseconds){\r\n      return bizagi.util.dateFormatter.getRelativeTime(milliseconds, null, false);\r\n   },\r\n\r\n   getWidthBar: function(plan, intervalMinutes){\r\n      var self = this,\r\n         differenceStartDateToCurrentDate = {};\r\n      switch(plan.currentState) {\r\n         case self.PENDING_PLAN:\r\n            if(plan.dueDate){\r\n               if(plan.dueDate < Date.now()){\r\n                  return 0;\r\n               }\r\n               else{\r\n                   var totalInterval = intervalMinutes.minutesCreateToNow + intervalMinutes.minutesToShowTime;\r\n                   valuePercentInterval = intervalMinutes.minutesToShowTime;\r\n                   return Math.ceil(valuePercentInterval * 100 / totalInterval);\r\n               }\r\n            }\r\n            else{\r\n               return 0;\r\n            }\r\n            break;\r\n         case self.EXECUTING_PLAN:\r\n            if(plan.dueDate) {\r\n               if (plan.dueDate > Date.now()) {\r\n                  var totalInterval = intervalMinutes.minutesStartToNow + intervalMinutes.minutesToShowTime;\r\n                  valuePercentInterval = intervalMinutes.minutesToShowTime;\r\n                  return Math.ceil(valuePercentInterval * 100 / totalInterval);\r\n               }\r\n               else{\r\n                  return 0;\r\n               }\r\n            }\r\n            else{\r\n               return 0;\r\n            }\r\n            break;\r\n         case self.CLOSED_PLAN:\r\n            if(plan.closedDate > Date.now()){\r\n               var differenceStartDateToClosedDate = plan.closedDate - plan.startDate;\r\n               differenceStartDateToCurrentDate = Date.now() - plan.startDate;\r\n               return Math.ceil(differenceStartDateToCurrentDate * 100 / differenceStartDateToClosedDate);\r\n            }\r\n            else{\r\n               return 100;\r\n            }\r\n      }\r\n\r\n\r\n   },\r\n\r\n   getColorBarByPercent: function(percent){\r\n      if(percent < 33){\r\n         return \"Red\";\r\n      }\r\n      else if(percent < 66){\r\n         return \"Yellow\";\r\n      }\r\n      else {\r\n         return \"Green\";\r\n      }\r\n   },\r\n\r\n   /**\r\n    * Call services\r\n    */\r\n\r\n   callGetEffectiveDuration: function(params){\r\n      var self = this;\r\n      var d = $.Deferred();\r\n\r\n      $.when(\r\n         self.dataService.getEffectiveDuration(params)\r\n      ).done(function (data) {\r\n            d.resolve(data);\r\n         });\r\n      return d.promise();\r\n   },\r\n\r\n   getFormattedDate: function (dateObj) {\r\n      var self = this;\r\n      var monthsNames = self.datePickerRegional.monthNames;\r\n      var shortMonth = dateObj.getMonth();\r\n      return monthsNames[shortMonth] + \" \" + bizagi.util.dateFormatter.formatDate(dateObj, \"dd hh:mm tt\", bizagi.localization.getResource(\"datePickerRegional\"));\r\n   }\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.time\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.time], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Parent\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\r\n\r\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.parent\", {}, {\r\n\r\n    /*\r\n     *   Constructor\r\n     */\r\n    init: function (workportalFacade, dataService, params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(workportalFacade, dataService, params);\r\n\r\n        //Load templates\r\n        self.loadTemplates({\r\n            \"plan-parent-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.parent\").concat(\"#project-plan-parent\")\r\n        });\r\n    },\r\n\r\n    renderContent: function () {\r\n\r\n        var self = this;\r\n        self.content = $(\"<div></div>\");\r\n        return self.content;\r\n    },\r\n\r\n    postRender: function () {\r\n        var self = this;\r\n        self.sub(\"LOAD_INFO_SUMMARY_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\r\n    },\r\n\r\n    /**\r\n     * Notifies when an event is raised\r\n     */\r\n    onNotifyLoadInfoSummaryPlan: function (event, params) {\r\n        var self = this,\r\n        $content = self.getContent().empty();\r\n        self.params = $.extend(self.params, params.args);\r\n        if (self.params.plan.parentWorkItem) {\r\n            $.when(self.dataService.getPlanParent({ idPlan: self.params.plan.id })).done(function(planParent) {\r\n                self.params.plan.parent = planParent;\r\n\r\n                  if (self.params.plan.parent) {\r\n                    var argsTemplate = {\r\n                        idParent: self.params.plan.parent.radNumber,\r\n                        nameParent: self.params.plan.parent.displayName,\r\n                        idCase: self.params.plan.parent.idCase,\r\n                        idWorkflow: self.params.plan.parent.idWorkflow,\r\n                        idWorkItem: self.params.plan.parent.idWorkItem,\r\n                        idTask: self.params.plan.parent.idTask,\r\n                        processName: self.params.process ? self.params.process : self.params.plan.parent.planName\r\n                    };\r\n\r\n                    if(bizagi.util.isEmpty(self.params.plan.parent.guidActivity)){\r\n                        self.goToParentCase($content, argsTemplate);\r\n                    }else{\r\n                        var paramsDetailActivity = {\r\n                            idPlan: self.params.plan.id,\r\n                            idActivity: self.params.plan.parent.guidActivity \r\n                        };\r\n                        $.when(self.dataService.getActivity(paramsDetailActivity)).done(function (response) {\r\n                            self.params.plan.parent.allowEdition = response.allowEdition;\r\n                            self.goToParentCase($content, argsTemplate);\r\n                         });\r\n                    }\r\n                    \r\n                }\r\n            \r\n            }).fail(function(msg) {\r\n\r\n            });\r\n        }\r\n    },\r\n    goToParentCase: function(content, argsTemplate){\r\n        var self = this\r\n        //TODO: double call because routing dont release memory and widgets\r\n        //Test with a breakpoint\r\n        content.empty();\r\n\r\n        //Update widget\r\n        var contentTemplate = self.getTemplate(\"plan-parent-main\");\r\n        contentTemplate\r\n            .render(argsTemplate)\r\n            .appendTo(content);\r\n        $(\"#go-to-parent-case\", content).on(\"click\", $.proxy(self.onClickGoToParentCase, self));\r\n    },\r\n    onClickGoToParentCase: function (event) {\r\n        event.preventDefault();\r\n        var self = this;\r\n        self.routingExecute($(event.target).closest(\"#go-to-parent-case\"));\r\n    }\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.parent\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.parent], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Users\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\r\n\r\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.users\", {}, {\r\n\r\n    /*\r\n     *   Constructor\r\n     */\r\n    init: function (workportalFacade, dataService, params) {\r\n        var self = this;\r\n        self.usersMap = {};\r\n        self.plugins = {};\r\n        self.usersInformation=[];\r\n        self.globalHandlersService = bizagi.injector.get('globalHandlersService');\r\n        self.usersAssignees = [];\r\n        // Call base\r\n        self._super(workportalFacade, dataService, params);\r\n\r\n        //Load templates\r\n        self.loadTemplates({\r\n            \"plan-users-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.users\").concat(\"#project-plan-users\")\r\n        });\r\n\r\n        self.auxNoRepeatTypesUser = {};\r\n        self.hashTypesUser = {\r\n            \"assigned\": bizagi.localization.getResource(\"workportal-project-user-assigned\"),\r\n            \"owner\": bizagi.localization.getResource(\"workportal-project-user-owner\")\r\n        };\r\n    },\r\n\r\n    renderContent: function () {\r\n\r\n        var self = this;\r\n        self.content = $(\"<div></div>\");\r\n        return self.content;\r\n    },\r\n\r\n    postRender: function () {\r\n        var self = this;\r\n        self.sub(\"LOAD_INFO_ACTIVITIES_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\r\n    },\r\n\r\n    /**\r\n     * Notifies when an event is raised\r\n     */\r\n    onNotifyLoadInfoSummaryPlan: function (event, params) {\r\n        var self = this,\r\n            args = params.args,\r\n            cvsGuidUsers = [],\r\n            activitiesUsers = [],\r\n            $content = self.getContent().empty();\r\n            var ownerUserGuid = params.args.plan.idUserCreator;\r\n            var ownerUserId = params.args.plan.idUserCreator;\r\n        self.params = $.extend(self.params, params.args);\r\n\r\n        activitiesUsers.push({ \"idUser\": ownerUserId, 'userGuid': ownerUserGuid, \"userType\": [\"owner\"]});\r\n        self.usersMap[\"-\" + ownerUserId + \"-\"] = {\r\n            picture: \"\",\r\n            id: ownerUserId,\r\n            guid: ownerUserGuid,\r\n            name: \"\",\r\n            userType: [\"owner\"]\r\n        };\r\n        cvsGuidUsers.push(ownerUserId);\r\n        $.each(self.params.plan.activities, function (index, activity) {\r\n            var userId = activity.userAssigned;\r\n            var userGuid = activity.userAssignedGuid;\r\n            if(activity.isRunning == true){\r\n                if (userId === ownerUserId) {\r\n                    if($.inArray(\"Assigned\", activitiesUsers[0].userType) === -1){\r\n                        activitiesUsers[0].userType.push(\"Assigned\");\r\n                        self.usersMap[\"-\" + ownerUserId + \"-\"].userType.push(\"Assigned\");\r\n                    }\r\n                }\r\n                else {\r\n                    self.usersMap[\"-\" + userId + \"-\"] = {\r\n                        picture: \"\",\r\n                        id: userId,\r\n                        guid: userGuid,\r\n                        name: \"\",\r\n                        userType: [\"Assigned\"]\r\n                    };\r\n                    if (activitiesUsers.filter(function(user) { return user.idUser == userId; }).length === 0) {\r\n                        activitiesUsers.push({\"idUser\": userId, \"guidUser\": userGuid, \"userType\": [\"Assigned\"]});\r\n                        cvsGuidUsers.push(userId);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        self.activitiesUsers = activitiesUsers;\r\n        self.params = args;\r\n        //Update widget\r\n        var contentTemplate = self.getTemplate(\"plan-users-main\");\r\n        contentTemplate\r\n            .render({\r\n                assignee: self.justAssignees(activitiesUsers),\r\n                label: bizagi.localization.getResource(\"workportal-project-plan-assignee\")\r\n            })\r\n            .appendTo($content);\r\n        self.initilizeTooltip();\r\n        self.addEventHandlersModal();\r\n        $.when(self.callGetDataUsers(cvsGuidUsers)).then(function () {\r\n            self.showCreatorInformation(ownerUserId);\r\n            self.renderUserProfilesAndImages();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * return standar userAdapter information with only assigned users when the plan has started\r\n     * @param {Array} allUsers \r\n     */\r\n    justAssignees: function (allUsers) {\r\n        var self = this;\r\n        var usersAssignee=[];\r\n        if ([\"CLOSED\", \"PENDING\"].indexOf(self.params.plan.currentState)==-1) {\r\n            allUsers.map(function(user) {\r\n                var isOwner=user.userType.indexOf(\"owner\")!==-1;\r\n                var isAssignee=user.userType.indexOf(\"Assigned\")!==-1;\r\n                usersAssignee.push(usersAdapter.createJsonUserInfo(user.idUser, \"\", \"\", \"\", \"\", \"\", isAssignee, isOwner, [], []));\r\n            });\r\n        }\r\n        return usersAdapter.justAssignees(usersAssignee);\r\n    },\r\n\r\n    /**\r\n     * show the information of the creator case\r\n     * @param {string} ownerUserId guid user creator\r\n     */\r\n    showCreatorInformation: function (ownerUserId) {\r\n        var self = this;\r\n        var userCreator=self.usersInformation.find(function(user) {\r\n            return user.id==ownerUserId\r\n        });\r\n        var userInfo = usersAdapter.createJsonUserInfo(\r\n            userCreator.id,\r\n            userCreator.name,\r\n            userCreator.username,\r\n            userCreator.picture?\"data:image/png;base64,\"+userCreator.picture:undefined,\r\n            userCreator.email,\r\n            userCreator.name.getInitials(),\r\n            false,\r\n            true,\r\n            [],\r\n            []\r\n        );\r\n        self.content.find(\".ui-bizagi-wp-project-plan-users .ui-bizagi-wp-project-users-creator-info\").userinformation(self, { user: userInfo });\r\n    },\r\n\r\n    /**\r\n     * UI\r\n     */\r\n    renderUserProfilesAndImages: function () {\r\n        var self = this;\r\n        $.each(self.usersMap, function (i, obj) {\r\n            var $li = $(\".ui-bizagi-wp-userlist li[data-iduser=\" + obj.id + \"]\", self.content);\r\n\r\n            if (obj.picture !== \"\") {\r\n                $li.find(\"img\").prop(\"src\", obj.picture);\r\n                $(\".bz-wp-avatar-label\", $li).hide();\r\n            }\r\n            else {\r\n                if(obj.name!==undefined){\r\n                    $(\".bz-wp-avatar-img\", $li).hide();\r\n                    $(\".bz-wp-avatar-label\", $li).html(obj.name.getInitials());\r\n                }\r\n                else{\r\n                    console.log(\"obj.name is undefined\");\r\n                }\r\n\r\n            }\r\n        });\r\n    },\r\n\r\n    /*\r\n     *  Get data for users\r\n     */\r\n    callGetDataUsers: function (csvguidUsers) {\r\n        var self = this,\r\n            params = {},\r\n            defer = $.Deferred();\r\n        params = {\r\n            usersGuids: csvguidUsers.join(),\r\n            width: 50,\r\n            height: 50\r\n        };\r\n        $.when(self.dataService.getUsersData(params)).always(function (response) {            \r\n            self.usersInformation = response;\r\n            for (var i = 0, length = response.length; i < length; i += 1) {\r\n                if (typeof (response[i].name) === \"undefined\") {\r\n                    bizagi.log(response[i] + \" Id Not Found\", response, \"error\");\r\n                } else {\r\n                    if(self.usersMap[\"-\" + response[i].id + \"-\"]){\r\n                        self.usersMap[\"-\" + response[i].id + \"-\"].picture += (response[i].picture) ? \"data:image/png;base64,\" + response[i].picture : \"\";\r\n                        self.usersMap[\"-\" + response[i].id + \"-\"].name = response[i].name || \"\";\r\n                    }\r\n                    else{\r\n                        console.log(\"self.usersMap['-' + response[i].id + '-'] is undefined\")\r\n                    }\r\n\r\n                }\r\n            }\r\n            self.getUsersAssignees();\r\n            defer.resolve();\r\n        });\r\n        return defer.promise();\r\n    },\r\n    \r\n    /*\r\n    * validate if the activity is running\r\n    */\r\n    activityRunning: function (activity) {\r\n        return activity.startDate !== null && activity.finishDate === null;\r\n    },\r\n\r\n    getUsersAssignees: function(){\r\n        var self = this;\r\n        for(var i=0; i<self.usersInformation.length; i++){\r\n            var res_user=self.getUserAssignee(self.params.plan.activities, self.usersInformation[i]);\r\n            if (res_user!==false) {\r\n                self.usersAssignees.push(res_user);\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * review if the user is assigned to some active activities and return this user, else return false\r\n     * @param {Array} activities all activities of this plan\r\n     * @param {User} user to review\r\n     */\r\n    getUserAssignee: function(activities, user){\r\n        var self =  this;\r\n        var tasks = activities.filter(function (activity) {\r\n            return activity.userAssigned === user.id && self.activityRunning(activity);\r\n        }).map(function(a) {\r\n            return { \"name\": a.name };\r\n        });\r\n        if(tasks.length==0)return false;\r\n        user.tasks = tasks;\r\n        var types = self.activitiesUsers.find(function(actUser) {\r\n            return actUser.idUser == user.id;\r\n        });\r\n        user.types = types===undefined?[]:types.userType;\r\n        \r\n        var userAssignees = usersAdapter.createJsonUserInfo(\r\n            user.id, \r\n            user.name, \r\n            user.username, \r\n            user.picture ? \"data:image/png;base64,\" + user.picture : undefined, \r\n            user.email, \r\n            user.name.getInitials(),\r\n            user.types.indexOf(\"Assigned\") > -1, \r\n            user.types.indexOf(\"owner\") > -1, \r\n            user.tasks, \r\n            []);\r\n\r\n        return userAssignees;\r\n    },\r\n\r\n    /*\r\n     *  Tooltips\r\n     */\r\n    initilizeTooltip: function () {\r\n        var self = this;\r\n\r\n        $(\".ui-bizagi-wp-userlist > li\", self.content).not(\".moreUsers\").on('mouseenter', '', function (ev) {\r\n            var $target = $(ev.target);\r\n            var id_userSelected=$target.closest(\"[data-iduser]\").attr('data-iduser');\r\n            var user=self.usersInformation.find(function(user) {\r\n                return user.id==id_userSelected;\r\n            });\r\n            var activities=[];\r\n\r\n            if(user.tasks)\r\n                user.tasks.map(function(task) {\r\n                    activities.push(task.name);\r\n                });\r\n\r\n            var types = self.activitiesUsers.find(function(actUser) {\r\n                return actUser.idUser == id_userSelected;\r\n            });\r\n            user.types = types.userType;\r\n           \r\n            user.owner = user.types.find(function(type){\r\n                return type == \"owner\";\r\n            });\r\n            user.isAssignee = user.types.find(function(type){\r\n                return type == \"Assigned\";\r\n            });\r\n                \r\n            var userParam= usersAdapter.createJsonUserInfo(user.id, user.name, user.username, user.picture?\"data:image/png;base64,\"+user.picture:undefined, user.email,  user.name.getInitials(), user.isAssignee, user.owner, activities, []);\r\n            $target.parent().usertooltip(self, { target: $target, user: userParam });\r\n        });\r\n    },\r\n    addEventHandlersModal: function () {\r\n        var self =  this;\r\n        $(\".moreUsers\").click(function(event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            var usersAssignees = self.usersAssignees || [];\r\n            self.globalHandlersService.publish(\"showDialogWidget\", {\r\n                widgetName: bizagi.workportal.widgets.widget.BIZAGI_WORKPORTAL_WIDGET_USERS_MODAL,\r\n                closeVisible: true,\r\n                data: usersAssignees,\r\n                maximize: true,\r\n                modalParameters: {\r\n                    title: bizagi.localization.getResource(\"workportal-project-users-title\")+ \" (\"+usersAssignees.length+\")\",\r\n                    width: 790,\r\n                    height: 526,\r\n                    refreshInbox: false\r\n                }\r\n            });\r\n         });\r\n       }\r\n});\r\n\r\n\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.users\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.users], true);"]}