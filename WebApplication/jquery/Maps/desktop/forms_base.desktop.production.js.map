{"version":3,"sources":["jquery/rendering/js/services/bizagi.render.services.endPoints.js","jquery/rendering/js/services/bizagi.render.services.context.js","jquery/rendering/js/services/bizagi.render.services.service.js","jquery/rendering/js/services/bizagi.render.services.multiactionservice.js","jquery/rendering/js/services/bizagi.render.services.metadataMultiactionservice.js","jquery/rendering/js/base/command/bizagi.command.controllers.controller.js","jquery/rendering/js/base/command/bizagi.command.controllers.validation.js","jquery/rendering/js/base/command/bizagi.command.controllers.action.js","jquery/rendering/js/base/bizagi.rendering.element.js","jquery/rendering/js/base/container/bizagi.rendering.container.js","jquery/rendering/js/base/container/bizagi.rendering.form.js","jquery/rendering/js/base/container/bizagi.rendering.formTemplate.js","jquery/rendering/js/base/container/bizagi.rendering.layout.js","jquery/rendering/js/base/container/bizagi.rendering.accordion.js","jquery/rendering/js/base/container/bizagi.rendering.accordionItem.js","jquery/rendering/js/base/container/bizagi.rendering.group.js","jquery/rendering/js/base/container/bizagi.rendering.horizontal.js","jquery/rendering/js/base/container/bizagi.rendering.panel.js","jquery/rendering/js/base/container/bizagi.rendering.contentPanel.js","jquery/rendering/js/base/container/bizagi.rendering.searchForm.js","jquery/rendering/js/base/container/bizagi.rendering.tab.js","jquery/rendering/js/base/container/bizagi.rendering.tabItem.js","jquery/rendering/js/base/render/bizagi.rendering.render.js","jquery/rendering/js/base/render/bizagi.rendering.render.base.js","jquery/rendering/js/base/render/bizagi.rendering.combo.js","jquery/rendering/js/base/render/bizagi.rendering.collectionnavigator.js","jquery/rendering/js/base/render/bizagi.rendering.check.js","jquery/rendering/js/base/render/bizagi.rendering.number.js","jquery/rendering/js/base/render/bizagi.rendering.numberScientificNotation.js","jquery/rendering/js/base/render/bizagi.rendering.date.js","jquery/rendering/js/base/render/bizagi.rendering.extendedText.js","jquery/rendering/js/base/render/bizagi.rendering.grid.js","jquery/rendering/js/base/render/bizagi.rendering.hidden.js","jquery/rendering/js/base/render/bizagi.rendering.label.js","jquery/rendering/js/base/render/bizagi.rendering.search.js","jquery/rendering/js/base/render/bizagi.rendering.text.js","jquery/rendering/js/base/render/bizagi.rendering.button.js","jquery/rendering/js/base/render/bizagi.rendering.fileprint.js","jquery/rendering/js/base/render/bizagi.rendering.link.js","jquery/rendering/js/base/render/bizagi.rendering.checkList.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.render.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.image.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.link.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.label.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.text.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.upload.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.boolean.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.dateTime.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.number.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.money.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.placeholder.js","jquery/rendering/js/base/render/bizagi.rendering.geolocation.js","jquery/rendering/js/base/render/bizagi.rendering.upload.js","jquery/rendering/js/base/render/bizagi.rendering.ecm.js","jquery/rendering/js/base/render/bizagi.rendering.yesno.js","jquery/rendering/js/base/render/bizagi.rendering.letter.js","jquery/rendering/js/base/render/bizagi.rendering.formLink.js","jquery/rendering/js/base/render/bizagi.rendering.document.js","jquery/rendering/js/base/render/bizagi.rendering.cascadingCombo.js","jquery/rendering/js/base/render/bizagi.rendering.list.js","jquery/rendering/js/base/render/bizagi.rendering.multiSelect.js","jquery/rendering/js/base/render/bizagi.rendering.money.js","jquery/rendering/js/base/render/bizagi.rendering.radio.js","jquery/rendering/js/base/render/bizagi.rendering.searchList.js","jquery/rendering/js/base/render/bizagi.rendering.userfield.js","jquery/rendering/js/base/render/bizagi.rendering.image.js","jquery/rendering/js/base/render/bizagi.rendering.association.js","jquery/rendering/js/base/render/bizagi.rendering.getUser.js","jquery/rendering/js/base/render/bizagi.rendering.queryProcess.js","jquery/rendering/js/base/render/bizagi.rendering.querySearchUser.js","jquery/rendering/js/base/render/bizagi.rendering.comboSelected.js","jquery/rendering/js/base/render/bizagi.rendering.userPassword.js","jquery/rendering/js/base/render/bizagi.rendering.stakeholder.js","jquery/rendering/js/base/render/bizagi.rendering.actionLauncher.js","jquery/rendering/js/base/render/bizagi.rendering.range.js","jquery/rendering/js/base/render/bizagi.rendering.rangeDate.js","jquery/rendering/js/base/render/bizagi.rendering.rangeMoney.js","jquery/rendering/js/base/render/bizagi.rendering.rangeNumber.js","jquery/rendering/js/base/render/bizagi.rendering.entityTemplate.js","jquery/rendering/js/base/render/bizagi.rendering.polymorphicLauncher.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.column.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.readonly.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.document.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.letter.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.combo.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.search.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.date.js","jquery/rendering/js/base/bizagi.rendering.base.factory.js","jquery/rendering/js/bizagi.rendering.device.factory.js","jquery/rendering/js/bizagi.rendering.facade.js"],"names":["bizagi","render","services","endPoints","getEndPoints","params","renderHandlerPathRest","renderUploadHandlerPathRest","renderFileHandlerPathRest","letterHandlerPathRest","multiActionHandlerPathRest","metadataHandlerPathRest","context","form-get-data","proxyPrefix","form-submit-data","form-submit-data-upload","render-property-refresh","render-multiaction","render-upload-cancel-image","render-upload-data-url","render-upload-add-url","render-upload-delete-url","render-ecm-upload-url","render-multiaction-metadata","render-grid-edit-url","render-grid-save-url","render-grid-add-url","render-grid-rollback-url","render-grid-commit-url","render-grid-checkpoint-url","render-save-entity","render-stakeholder-associated","render-search-default-image","render-search-form-get-data","render-search-advanced-url","render-letter-notEditable-url","render-letter-content-url","render-letter-save-url","render-letter-content-icons","render-userfield-definition","render-document-generate","render-document-generateAllDocuments","render-processes-startform","render-processes-getstartform","render-entity-layout-image64","render-entity-layout-imageByteArray","getXSRFToken","render-entity-layout-upload-files","case-handler-getCaseSummary","case-handler-getCaseSummaryByGuid","case-handler-getCaseAssignees","case-handler-getWorkItems","case-handler-getWorkItemsByGuid","admin-getUsersList","admin-getUsersList-FromPreferences","admin-getUsersList-ForStakeholders","admin-getUsersForAssignation","admin-users-config","admin-usersform","admin-GenerateDataToSendByEmail","admin-sendUserEmail","alert","sharepointProxyPrefix","$","Class","extend","init","this","util","isEmpty","getUrl","service","setProxyPrefix","BA_ACTION_PARAMETER_PREFIX","BA_CONTEXT_PARAMETER_PREFIX","BA_PAGE_CACHE","serviceLocator","multiactionService","multiactionservice","guid","Math","override","enableECMMetadataMultiaction","multiactionMetadataService","metadatamultiactionservice","userfieldRequests","deviceType","isSmartphoneDevice","deviceEnum","smartphone","isTabletDevice","tablet","desktop","deviceCode","getDeviceCode","multiaction","metadataECMMultiaction","getFormData","self","data","action","idProcess","idForm","idEntity","surrogateKey","idRender","xpathContext","requestedForm","recordXPath","summaryForm","idCase","idWorkitem","idTask","idPageCache","contextType","guidEntity","isRefresh","isActionStartForm","additionalXpaths","idStartScope","readOnlyForm","printversion","recordXpath","downloadOfflineForm","editable","BA_ALL_PARAMETER_PREFIX","prepare","chrono","initAndStart","ajaxParams","url","type","dataType","serviceType","avoidLoader","ajax","pipe","response","stopAndLog","form","properties","transformGridDataToReadOnly","_data","hasOwnProperty","id","allowAdd","allowDelete","allowEdit","allowGrouping","allowMore","allowSearch","each","key","value","e","getSearchFormData","xpath","idSearchForm","processDataValues","o","submitData","resolveData","contexttype","transitions","surrogatekey","forcePlanCompletion","actionType","toString","toUpperCase","debug","name","newName","isEmptyObject","search","substr","getPropertyData","extra","property","sessionId","guidentity","pxpath","prows","ppage","undefined","pfilter","psort","porder","pcaseId","pguidEntity","psurrogatedKey","pactionXpath","ptemplateGuid","pparameters","beforeSend","xhr","status","multiactionConnection","push","getData","getSearchData","term","getCollapseData","collapseState","getGridData","sort","order","page","rows","searchFilter","getGridDataExclusivesSelected","xpathfilter","getUploadCancelImage","pathToBase","getUploadFileUrl","fileId","verifyPathToBase","jQuery","param","getUploadFileEntityUrl","isContextContainerWidgetRender","xpathActions","getUploadAddUrl","getUploadAddFileUrl","isUserPreferences","deleteImage","deleteUploadFile","getECMMetadata","idFileUpload","xPath","idAttrib","interceptor","intercept","source","checkOutFile","cancelCheckOut","deleteECMFile","updateECMFileContent","metaValues","updateECMMetadata","getFileProperties","uploadECMFile","fileUpload","fileName","getECMFileUrl","p_sessionId","isFileOnECM","idUpload","read","editGridRecord","addGridRecord","addGridRecordData","saveGridRecord","disableServerGridValidations","deleteGridRecord","getFlipAssociation","flipstate","parseJSON","rollbackGridAction","getSearchDefaultImage","processDataCriteria","criteria","submitSearch","JSON","encode","allowFullSearch","maxRecords","associateStakeholder","associatedUser","refreshAssociateStakeholder","getLetterNotEditableUrl","getLetterContent","getCanGenerateLetter","saveLetterContent","content","fullUrl","getLetterEditorIconsPath","executeButton","getFilePrintUrl","disposition","editLinkForm","saveLinkForm","rollbackLinkForm","commitLinkForm","commitGridAction","sendCheckpoint","sendCheckpointAction","getUserfieldDefinition","userfield","guidUserfield","device","refreshControl","refreshGridCell","column","typeRender","executeRule","rule","create","executeInterface","interface","executeSAPConnector","guidsap","executeConnector","guidConnector","generateDocumentTemplate","append","h_pageCacheId","contextXpath","xpathcontext","groupMappingId","groupMapping","xpathAttribute","controlId","getAllDocumentsDownloadUrl","idWorkItem","getCaseNumber","replace","isMobile","getCaseAssignees","getWorkitems","onlyUserWorkItems","getGridExportUrl","exportType","sendEmail","to","subject","message","selected","invalidatePageCache","getUsersList","getUsersListFromPreferences","getUsersListForStakeholders","getUsersForAssignation","getUsersForm","generateDataToSendByEmail","idUser","password","sendUserEmail","eMailTo","body","getConfiguration","indexOf","getTemplate","forcePersonalizedColumns","templateType","templateGuid","isDefaultTemplate","detectDevice","hasStartForm","guidWFClass","getStartForm","guidprocess","surrogatedKey","mappingstakeholders","cache","editActionForm","getActions","extendParams","ptags","pmaxitems","executeActions","pguidConstructor","pguidAction","getPolymorphicActions","serializePolymorphicActions","values","actions","getParents","node","parents","fillTree","list","children","child","displayName","hasConstructor","guidObject","guidConstructor","length","getEntityImage64","width","height","entity","getFilesDataForLayoutUploadControl","processUploadFile","verifyMobilePathToBase","formData","contentType","processData","isMashupContext","replaceAll","batch","batchTimer","circularDependencies","replicateServiceMethods","getService","prototype","eval","proxyMethod","method","arguments","apply","add","makeCircularDependenciesError","error","messageTmpl","localization","getResource","printf","dependencyFrom","dependencyTo","deferred","Deferred","h_action","detectCircularDependencies","addNode","clearTimeout","batchTimeout","tag","singleAction","setTimeout","resolveDependencies","resolve","i","multiactionError","reject","fire","promise","item","when","execute","rejectDeferreds","done","responses","result","fail","errorMessage","finalResponse","responseText","parse","THROW_ERROR","dateFormat","buildConditions","conditions","bGridDetected","bCheckEditability","operator","expressions","buildConditionOperator","sJsCondition","expression","simple","bGDetected","searchGridReferenceInCondition","buildSimpleCondition","complex","conditionsOperator","condition","sXpath","sArgument","ensureValueJs","ensureEditable","control","renderId","containerId","gridXpathInfo","processGridXpath","gridXpath","remainingXpath","detectedArgumentType","detectConditionArgumentType","argumentType","buildXpath","boolean","argument","buildArgument","getRender","getRenderById","Error","getColumn","renderType","normalizeType","isRelatedEntityRender","showTime","includes","test","number","toLowerCase","Number","NaN","date","dateFormatter","getDateFromInvariant","Date","setHours","formatInvariant","setSeconds","setMilliseconds","stringify","isEditable","showRenderNotFoundError","isVisible","visible","isParentVisible","parent","evalGridXpath","evalXpath","grid","gridColumn","cellValue","getCellCurrentValue","index","isString","display","renderToEval","renders","getRenders","rendersToEval","bIsGrid","getValue","isFileUploaded","isValidEmail","match","RegExp","isButtonPressed","pressed","isGridButtonPressed","arrGridXpath","columns","isChanged","grep","onDeletedGridRow","rowDeleted","idMatches","exec","showContainerNotFoundError","getCurrentDate","currentDate","matches","searchForGridReference","commands","command","searchForGridReferenceInCommand","substring","bGridReferenceFound","searchGridReferenceInXpath","getGridControl","getControlCell","controllers","controller","validations","mainForm","enableDebug","_super","container","validationBox","appendTo","widget","ui","bizagi_notifications","expand","triggerGlobalHandler","collapse","hide","itemIcon","minimized","clearEnabled","title","orientation","bind","onNotificationClick","buildValidations","fnValidations","buildAllValidations","showErrorMessage","showErrorAlertDialog","showValidationMessage","showAlertMessage","showInfoMessage","focus","icon","itemAdditionalClass","performValidationFn","clearValidationMessages","lastActionButton","getLastActionButton","validating","performValidations","countValidationMessages","hideValidationMessages","setValidationMessage","isIE8","one","not","showValidationMessages","expandNotificationBox","autofocus","isExpandedNotificationBox","invalidElements","bRendersValid","validateRenders","bFormValid","triggerHandler","sJSCode","enabled","buildValidation","validationCommand","logError","sStatement","evalValidation","sJsValidation","gridReference","tokens","sGridStatement","bValid","isValid","forEach","element","showValidationMessageById","console","log","globalDependencies","initialCallFunctions","funtionsToExecuteARefreshCommand","initialCallFunctionsDeferred","buildActions","internalSubmitActions","initialCallTimeout","initialCallIncrements","actionsHistory","period","processInternalSubmitAction","buildAction","isSummaryOrGlobalForm","typeForm","evalClientAction","serverCommand","concat","elseCommands","isClientAction","dontExecute","len","hashes","displayAsReadOnly","executeOnlyClientActions","hash","md5","hashC","unbindActions","unbind","handle","refreshActions","newActions","_","dependencies","dependenciesId","j","dependencyAlreadyAdded","renderById","inArray","fn","buildFunction","actionDependecies","commandDependencies","map","commandNames","hasDependency","hasRefreshCommand","args","actionDependeciesIntance","ev","changed","gridColumns","searchGridColumns","tryToExecuteFunction","enableExecuteRefreshAction","sJsAction","sJsElseAction","bAutomaticRestore","bCondition","queueAction","isServerCommand","buildCommand","buildRestoreCommand","elseCommand","commandType","isRecentAction","prefix","runAction","detectCommandArgumentType","commandGridDetected","controlType","parseBoolean","ruleObj","guidRule","xpathContextRow","interfaceObj","guidInterface","connectorObj","restoreRender","originalProperties","textFormat","changeRenderBackground","background","changeRenderForeground","color","changeRenderVisibility","changeRenderEditability","changeRenderRequired","required","restoreContainer","getContainer","changeContainerBackground","backgroundColor","changeContainerVisibility","toogleContainer","changeContainerEditability","isGridComponent","ready","lenIndex","indexes","getIndexes","changeCellBackgroundColor","changeBackgroundColor","changeButtonBackground","getButton","css","addClass","style","setProperty","changeCellColor","changeColor","changeButtonForeground","changeCellVisibility","renderingDeferred","changeVisibility","changeButtonVisibility","show","isValidRender","changeCellEditability","changeEditability","changeButtonEditability","removeAttr","attr","triggerClick","trigger","changeCellRequired","changeRequired","changeRenderValue","fromAction","changeCellValue","asyncRenderDeferred","setDisplayValue","changeRenderMinValue","changeCellMinValue","changeMinValue","changeRenderMaxValue","changeCellMaxValue","changeMaxValue","executeCalculatedField","runFormula","queue","bizagiQueue","refreshContainer","def","internalQueue","addParallel","refreshCell","submitFormData","submitRender","submitOnChange","cleanRenderData","cleanCellData","cleanData","changeActiveItem","loadingDeferred","setAsActiveContainer","changeFormButtonVisibility","buttons","findIndex","navigation","getNavigation","setNavigationButtons","ELEMENT_TYPE_CONTAINER","ELEMENT_TYPE_RENDER","ELEMENT_TYPE_COLUMN","renderFactory","dataService","resources","observableElement","disposed","initializeData","subscribers","getXpathContext","getPageCache","getFormContainer","getElementType","resize","size","layout","isScrolledIntoView","effect","eventType","event","getRenderedElement","getMode","getParams","getFormType","isReadyToSave","getCustomHandlers","dispose","off","disposeTime","isDisposed","processFailMessage","isOfflineForm","errorType","validationController","code","startLoading","endLoading","beforeToRefresh","afterToRefresh","rendering","TYPE_QUERY_FORM","uniqueId","ceil","random","childrenHash","elements","createRenderElement","createContainerElement","createFormElement","originalElement","inlineEdit","retype","clone","mode","processDuplicateRender","registerRender","isDesign","getElement","getElementsByType","clonedElement","isClone","cloneRender","internalRender","applyContainerDefaults","html","renderContainerHtml","postRenderContainer","renderContainer","isRendered","replaceTag","replaceSelector","replaceChildrenTag","replaceChildrenHtml","replaceFirstWithoutPatterns","executeChildrenPostRender","configureHandlers","applyPlaceHolderPolyfill","configureDesignView","configureLayoutView","config","window","placeHolderConfig","forceApply","Placeholders","enable","childrenElements","childElement","postRenderElement","renderChildrenHtml","temp","renderElement","collectRenderValues","renderValues","canBeSent","collectData","hasChanged","collectRenderValuesQueryForm","canBeSentQueryForm","collectDataQueryForm","firstChild","getRendersByXpath","hasValidGrids","childrenPromises","getFocus","getCustomHandler","customHandlers","unregisterChildren","removeActions","currentContainer","replaceWith","triggerChildrenActions","always","refreshDesignContainer","messageValidation","l","triggerRenderChange","registerActions","actionController","unregisterRender","replaceChild","splice","getChildById","rendersById","rendersByXpath","rendersByXpathId","rendersByType","pageCacheId","userConfirmationMessage","hasRule","paramsRender","processPath","breadCrumb","split","allowValidateAndSaveAction","enableActionValidateAndSave","initializeButtons","originalProcessButton","processButton","isRoutingDisabled","applicationParent","isOfflineFormsV2Supported","isMobileDevice","button","caption","ordinal","next","nextWithoutValidations","cancel","back","createnewcase","validate","save","routing","refresh","buildButtonStyle","useCustomButtons","unshift","setParam","xpathId","isArray","listRendesByType","getRenderByType","listRendesByTypeLength","renderKey","listRender","getGridByColumn","grids","columnsIds","template","fasttmpl","helptext","helpText","queryForm","globalForm","complexGatewayContainer","hasClass","activeTransitions","processButtons","validation","readyDeferred","find","checkboxLabel","transitionId","removeClass","format","newFontSize","bold","isIE","italic","underline","strikethru","strStyle","getContextType","getEndPointAction","formtype","getButtons","on","preventDefault","stopImmediatePropagation","buttonProperties","routingDisabled","prop","propagateExternalEvents","processDefer","contains","document","documentElement","get","preProcessButton","postProcessButton","setLoaderDeferred","loaderDeferred","deleteLoaderDeferred","isLoaderDeferredSet","useOrSetLoaderDeferred","getLoaderPromise","appendWaitForLoader","then","getResolveOrReject","defer","getAllTabs","getAllTabsLength","innerTabsLoading","needsUserConfirmation","showConfirmationBox","submitForm","customHandler","validateForm","saveForm","isNativeMobileDevice","allowOnlineActions","collectRenderValuesForSubmit","deferredsToWait","deferreds","saveParams","offlineType","internalSubmitFormOffline","internalSubmitForm","checkWidgetsData","isComplexGatewayPainted","countProps","showMessageBox","isSaveForDraft","online","loading","start","tryPushResponsePromise","responsePromise","stop","offlineAction","IdCase","caseNumber","CaseNumber","recreateNativeButtons","isValidResource","showNotification","text","bHasValidations","alertMessage","propertiesToDisplayMessages","validationToDisplayMessages","messages","modalError","failHandler","animate","scrollTop","submitDataAction","executeButtonAction","performAction","checkpointAction","commitAction","waitingDeferreds","prepareCheckpointAction","prepareCommitAction","getButtonAction","flowControlDeferred","sendRollbackAction","refreshForm","jqxhrList","abortAll","messageType","addValidationMessage","validationMessage","addErrorMessage","options","selectedTabs","getSelectedTabs","tabContainers","tabs","tabContainer","tab","activeTab","addSubmitAction","waitingTemplate","waitingOverlay","waitingMessage","tmpl","isSharePoint","canvas","getSize","position","getOffset","top","min-height","min-width","outerHeight","left","outerWidth","remove","getFocusedElement","setFocusedElement","errorJson","setSize","offset","updateOriginalValue","clearOnlyServer","join","internalSubmitOnChange","bRefreshForm","notCollect","cancelPreviousRequest","focusIdentifier","idCaseObject","IdScope","objMessage","strMessage","connection","pop","abort","buttonId","checkpointUrl","commitUrl","rollbackUrl","getFloatingButton","evt","click","configureNetworkHandlers","isConnected","BIZAGI_ENVIRONMENT","handleConnectionChange","contextEvent","processTemplate","controls","processedTemplate","g1","g2","string","parameters","layoutCollection","getCss","layoutGuid","layoutguid","loadStyle","getContextEvent","stripslashes","activate","active","cssclass","expandedIcon","getExpandedIcon","collapsedIcon","getCollapsedIcon","expandedClassIcon","bImmediate","cssClass","panel","renderResult","performSearch","searchParams","refreshResults","getRemoteData","collectSearchValues","isMapEmpty","maxRows","dataUrl","records","totalPages","deviceMaxRecordsExceeded","onSearchFinished","errorObject","submitArray","operation","getCriteriaOperation","criteriaData","typeSearch","parseAdditionalProperties","tabItems","counter","tooltip","tabOrientation","getActiveTab","loadOnDemand","formParams","containsFocusedElement","setActiveTab","selectedTab","renderTabContent","postRenderTimeout","maxRendersPerScreen","rendersExecuted","renderOptimization","startOptimization","stopOptimization","included","includedInResult","maxLength","trim","valueFormat","isHidden","editabilityEnabled","labelAlign","valueAlign","originalValue","previousValue","calculateInitialLayoutProperties","displayType","getDefaultLabelAlign","getDefaultValueAlign","getRTLAlign","renderWidth","calculateRenderWidth","labelWidth","valueWidth","label","layoutType","renderTemplateName","renderTemplate","isFullRender","parseFloat","isExtendedText","isExtended","displayOptionClass","getDisplayOptionClass","labelAlignClass","getAlignClass","valueAlignClass","stringLabelWidth","stringValueWidth","printVersion","showFullRender","internalRenderControl","state","replaceControlHtml","resolveResult","renderControl","renderReadOnly","configureSubmitOnChange","isLabelFormat","executePostRender","_element","internalPostRender","getControl","emptyControlByAsyncRenderDeferred","processLayout","postRenderPrintVersion","postRender","postRenderReadOnly","performExecutionModeMethods","performDesignModeMethods","configureHandlersQueryForm","configureHandlersReadOnly","internalSetInitialValue","internalSetInitialValueFlag","inlineAdd","hasValue","isQueryForm","filter","messageData","isQuery","val","columnEditable","isNumeric","controlValueIsChanged","changeFontBold","changeFontItalic","changeFontUnderline","changeFontStrikethru","changeFontSize","setValue","triggerEvents","identicalObjects","checkRequired","changeRequiredLabel","triggerRenderValidate","validateInputRetype","enableCheck","displayValue","getDisplayValue","sanitizeHTML","getLabel","mustImplement","getControlFiller","readOnlyValue","isObject","decodedDisplayValue","changeDisplayOption","changeLabelAlign","alignType","changeValueAlign","customizeRenderWidth","getElementsToStylize","originalColor","currentStyle","getFormattingLabel","compareValue","baseValue","defaultValue","forceCollectData","compareValueObj","_findAction","targetObj","guidAction","objectValue","valuestrikethru","valueunderline","empty","emptyControlByChangeEditability","changeEditabilityCellControl","renderColumn","decorated","getDecorated","onCellChange","labelElement","controlElement","prepend","controlFiller","currentElement","refreshDesignControl","clearDisplayValue","input","change","is","queryValue","searchType","rangeQuery","newParameter","orderType","displayXpath","force","displayOnly","time","defaultControl","first","innerControl","autoScrollBottom","align","submitOnChangexpathContext","getCacheIdCase","percent2Number","getIdCase","getIdWorkitem","getidTask","getSessionId","backgroundImage","needBGPaint","background-color","background-image","closest","startActionExecution","actionExecutionDeferred","endActionExecution","readyActionExecution","isFromCreatedRow","isNewRow","submitInvalidatePageCacheRequest","pageCacheToInvalidate","isDesignMode","isExecutionMode","preventDefaultForAnchorTag","isSharepointContext","processLabelLayout","processControlLayout","warm","$label","changeFontColor","changeTextDecoration","$control","$elements","$element","textDecoration","hasLocalData","enableTyping","complementData","isDependant","getParentCombo","valueControl","renderCombo","renderComboTemplate","dataPromise","getTemplateName","emptyValue","emptyLabelForCombo","getTemplateParams","unique","randomNumber","items","formatItem","showEmpty","showCurrentData","getDummyData","remoteDataLoaded","recalculate","allowActions","msgObj","auxMsg","resetData","combo","getSelectedValue","currentValue","parseAdditionalValues","newItem","hidden","bCurrentDataFound","emptyFound","dataValue","Object","comboData","isExtraItem","escapeValue","mapValue","validateValue","translated","findDataValueById","withAddForm","withEditForm","allowDetail","keys","getKeys","pointer","totalRows","inlineAddRecords","row","showPreview","drawControls","drawActions","drawControl","drawForms","drawPreview","templateItem","hasData","getTotalRows","getRow","getNextRow","getPreviousRow","getFirstRow","getLastRow","setPointer","isTherePendingInlineRow","addKey","newId","removeKey","navigationform","getParameters","submitAddRequest","addUrl","submitEditRequest","editUrl","submitDeleteRequest","deleteUrl","submitSaveRequest","saveUrl","dataFail","submitRollbackRequest","validateControls","showLetters","randomId","allowDecimals","getDefaultAllowDecimals","numDecimals","BIZAGI_DEFAULT_CURRENCY_INFO","decimalDigits","symbol","positiveFormat","negativeFormat","decimalSymbol","decimalSeparator","digitGroupSymbol","groupSeparator","groupDigits","setGroupDigits","colorize","colorizeOnNegative","dataTypeMinValue","calculateMinValue","dataTypeMaxValue","calculateMaxValue","isAndroidDevice","numericInput","numeric","attachRetypeDouble","attachFormatCurrency","removeValidations","formatCurrency","regions","language","blur","digitGroupSeparator","minValue","getMinValue","maxValue","getMaxValue","percentage","inputValue","inputLength","oldVal","isInvalidFormat","tempValue","isNaN","asNumber","messageToShow","isValidRenderMessage","parseInt","executeFormatCurrencyPlugin","tmpData","isIE11","clipboardData","originalEvent","totalVal","keydown","keyUnicode","charCode","keyCode","formatTimeout","floatPart","selectionStart","selectionEnd","currentPosition","keyup","keypress","character","String","fromCharCode","roundToDecimalPlace","removeTrailingZeros","positive","regExp","re","validMessage","getDefaultGroupDigits","thousands","newValue","createTooltip","currentTitle","toolTipZindex","getMaxZindex","zIndex","numericSN","timeFormat","fullFormat","datePickerRegional","formatDate","indexDateTimeSeparation","lastIndexOf","uppercaseDatePlaceholder","rtl","intHandler","isNow","dateControl","getDateControl","timeControl","getTimeControl","mask","onChangeHandler","updatingTime","hasMaxLines","maxLines","regularExpressionExpression","regularExpressionMessage","regularExpression","isEmptyField","textarea","validationMessages","regEx","decodedValue","decodeURI","valueToDisplay","originalData","areThereEditableColumns","areThereTotalizedColumns","initProperties","enabledChecks","exclusiveChanges","originalEnabledChecks","columnProperties","groupBy","isExclusive","hasExclusiveCheck","columnRender","singleInstance","totalize","reverse","showSummary","rowsPerPage","keyColumn","skipInitialLoad","allowFilter","groupSummary","groupText","groupCollapsed","groupOrder","formShowMode","floatingHeader","sortBy","sortOrder","addLabel","editLabel","deleteLabel","exportOptionsLabel","detailLabel","tableCssClass","alreadySaved","overrideGetRemoteData","changes","cellOverrides","isRTL","changeOrderData","rowKey","reverseDataRows","shift","removeRemainingColumns","numColumns","remainingColumns","getColumnType","columnIndex","getGridTemplate","applyTemplate","columnInitializers","initialize","encodeXpath","sortType","spliceRowData","spliceIndex","spliceRowDataVisible","spliceRowDataEditable","rowTemplate","total","buildCellXpathFilter","dataResp","collectGridChange","isPressed","configureColumnSubmitOnChange","keysToDelete","columnExclusiveChanges","columnEnabledChecks","columnXpath","canColumnBeSent","checkedObject","v","cellOverride","getCellOverride","getCellValue","setError","changeCellProperties","saveGrid","tmpEditable","changeColumnsEditability","saveInlineAddedRows","cell","getDepthData","target","isBoolean","updateAffectedCellManually","canBeExported","hasErrors","newRows","getDataNewRows","merge","uniqueMessages","isValueValid","k","messagesLength","gridValidationMessage","setCellOverrides","len_v","newRecords","submitForGridChange","getEnabledChecks","cleanNewRecords","hasColorHeader","headerFormat","isRTLOrientation","canBeExport","getExclusiveChangeByRow","idRow","obj","el","allowDinamiclabel","bindingValue","configureHelpText","searchForms","advancedSearch","allowSuggest","allowTyping","allowClear","searchLength","enableLocalStorage","expireCache","submitVersion","h_contexttype","enableQuerySuggestBehavior","regexC","hideStatus","selectedValue","regex","showDesignValidations","isNull","submitOnChangexpathContextRow","runButtonAction","error_obj","getErrorFormatted","$context","filesCount","horizontal","checkListGroup","vertical","templateUri","useDefaultImage","getImage64","getImageUri","replaceMultiple","allowSendInMail","getValueFilesByData","dataFiles","valueAuxFiles","getDataFilesWithoutScope","valueResult","err","warn","formContainer","files","getUploadXpath","indexHour","dateObj","INVARIANT_FORMAT","i18n","formattedDateTime","showsymbol","currencySymbol","geolocation","navigator","allowUpdate","getCurrentPosition","succes_callback","fail_callback","getErrorMessage","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","performPrecision","latitude","longitude","toPrecision","maxFileSizeOfProperty","maxSize","maxFileSizeOfUser","BIZAGI_SETTINGS","UploadMaxFileSize","maxfiles","validExtensions","singleExtensions","defExtensions","haveFiles","noFiles","file","renderUploadItem","replaceFilesHtml","itemTemplate","getTemplateItemName","buildItemUrl","filename","deleteUploadItem","fileItem","newRow","buildAddParams","BIZAGI_SESSION_NAME","setRenderRequired","maxFiles","q_xpath","showMetadata","listControl","fileProperties","getFileExtension","isImage","lengthValues","renderFileLayout","loader","productBuildToAbout","replaceItemHtml","metadataTemplate","metaData","ecm_ecmStatus","ecmStatus","ecm_isVisible","ecm_allowUpdateMetadata","allowUpdateMetadata","ecm_allowDelete","ecm_allowUpdateContent","allowUpdateContent","ecm_allowView","allowView","ecm_allowCheckOut","allowCheckOut","ecm_allowCancelCheckOut","allowCancelCheckOut","ecm_allowEdit","idFileUploads","extension","cookie","lockUploadItem","unlockUploadItem","isEmptyValue","letterOpened","getXpath","getContextXpath","maximized","likeButton","getFormLinkXpath","executeSubmitOnChange","submitCommitRequest","submitCheckpointRequest","submitDataRequest","downloadalldocuments","allowGenerate","preRenderControl","downloadAllDocuments","documents","getControlHtml","renderDocumentsHtml","renderActionsHtml","noActivateButton","allowgenerate","activateButton","getDocumentXpath","renderDocumentItem","getTemplateItem","joined","buildAllDocumentsUrl","caseId","workitemId","htmlControl","updateControlForPrintMode","validateContainer","replaceActionsHtml","buttonExecuted","generateLink","isPropagationStopped","stopPropagation","documentTemplateGenerate","showDocumentPreview","deleteDocumentTemplate","resolveDeleteDocumentTemplate","resolveDocumentTemplateGenerate","messageText","autoOpenDocuments","returnCssTypeFile","lenght","redrawDocuments","documentContainer","renderAllDocumentDownload","removeDeleteButton","startIndex","restOfWord","finishIndex","downloadAllDocumentsLink","getErrorTemplate","getTemplateDownload","getTemplateReadonly","dependants","parentCombo","initializingCascadingCombo","bindDependantCombo","configureReadOnlyHandlers","isInitialValue","deferredVisible","dependantCombo","onChangeFunction","refreshDependantCombo","focusDependant","cleanInput","isEventBinded","unbindDependantCombo","dependant","parentValue","inputCombo","parentLength","parentArray","slice","configured","itemSelected","listSize","Array","normalizeData","getDataValue","addElement","removeElement","idToRemove","markAsChecked","some","found","isChecked","canAddMoreItems","$tagsContainer","toArray","reduce","acc","getElementWidth","MORE_OPTION_WIDTH","styles","getComputedStyle","filterList","query","$container","stringContainer","stringToSearch","addSelectedElements","findItemById","hasSearchForm","removeLastElement","getListItems","getFileDependencies","fileDependencies","loadFile","renderUserfieldControl","extendedData","userEditableControl","getEditableControl","renderComplex","loadUserfieldReadOnly","userReadOnlyControl","getReadonlyControl","getReadonlyValue","setEditableValue","getEditableValue","getPropertyValue","propertyName","jqXHR","textStatus","errorThrown","getRenderElements","getServerResourceURL","resource","userfieldGuid","getRenderValue","showDialog","showPopup","initialParams","userfieldName","getUserfieldControl","isColumn","getControlXpathContext","getUserFieldInstance","replicateUserfieldMethods","userfieldInstance","isUserPreference","isAutoWidth","isAutoHeight","currentUser","charAt","buildItemUrlOffline","getFormParams","loadImageFromForm","imageId","offlineImageId","getOfflineImage","imageValue","getDataUrl","saveImageOffline","path","blobPromise","isNative","media","getImagePath","normalizeIOSFilePath","errorHandler","resolveLocalFileSystemURL","fileEntry","reader","FileReader","onloadend","blob","Blob","readAsArrayBuffer","blobImage","operationType","saveOfflineImage","blobError","buildFullItemUrl","allowFlip","flipped","leftData","rightData","processPropertyValue","flip","makeJsonBase","getColumnData","getRightAssociation","formatJson","associationData","leftId","association","idRight","checked","rightId","removeValue","leftXpath","rightXpath","leftFactName","rightFactName","allowDelegatedUser","loadtemplates","getUserData","leftValues","filterData","rightValues","dataList","orderArraySelected","a","b","nA","nB","dataListArray","renderControlReadOnly","valuePassword","userName","userNames","entities","valueXpath","currentPage","refreshStakeholderList","deferredActions","engine","templateEngine","autoGenerateData","selecttemplate","processPropertyValueArgs","tagslist","maxItems","processPropertyValueDataTmplArgs","defaultAllowActions","allowactions","isHorizontal","templatetype","executeActionImmediately","processPropertyValueExecuteAction","notifyExecution","actionName","readOnly","templateDefined","actionManager","guidProcess","processStartForm","processActionFormCollection","processActionForm","addActionToQueue","actionsList","additionalXpath","idParentWorkitem","entityXpath","newValueActionsList","removeActionToQueue","controlValue","countSameActions","count","getPropertiesActionLaucher","actionsLaucher","setRanageControls","minControl","maxControl","$maxCanvas","$minCanvas","renderRangeControl","min","max","$canvas","defineRangeControl","dateMin","suscribe","observer","notify","dateMax","getRenderProperties","typeRangeControl","renderProperties","moneyMin","money","moneyMax","numberMin","numberMax","getTagList","processPropertyValueExecuteConstructor","displayNamee","taglist","decoratedClass","decorateRenders","columnVisible","showColumn","readonly","isReadonly","instanceDecoratedClass","applyOverrides","propertyOverrides","invalidElement","overrideDecoratedRenderProperties","renderSummary","postRenderSummary","getCell","setSurrogateKey","defaultvalue","setDefaultValue","getCompositeValue","overrideProperties","getSortName","getAnyDecoratedInstance","getSortColumn","arrayEach","originalGetData","getDataForAllCells","findDataById","fetchingData","valueForGrid","tableCell","formattedDate","templates","loadOverrides","initAsyncStuff","loadTemplates","loadTemplate","templateDestination","templateService","resolvedTemplate","getCommonTemplate","containerParams","mobileform","formTemplate","usersForm","contentPanel","nestedForm","tabItem","accordion","accordionItem","group","mobilegroup","searchForm","renderParams","extendedText","mobiletext","check","yesno","cascadingCombo","multiSelect","radio","image","ecm","upload","searchList","letter","formLink","link","layoutImage","layoutLink","layoutLabel","layoutText","layoutDateTime","layoutNumber","layoutMoney","layoutPlaceholder","actionLauncher","layoutBoolean","layoutUpload","entityTemplate","polymorphicLauncher","userfieldWrapper","getSearchRender","getQueryRender","fileprint","collectionnavigator","getUser","rangeDate","rangeMoney","rangeNumber","activityCheckList","columnParams","exclusiveCheck","uploadecm","numberScientificNotation","queryExtendedText","queryText","queryCheck","queryYesNo","queryNumber","queryMoney","queryDate","queryCombo","queryCascadingCombo","querySuggest","queryLabel","queryList","queryMultiSelect","querySearch","queryRadio","queryState","queryCaseState","queryProcess","querySearchUser","execution_device","cachedFactory","getRenderFactory","print","factory","getDataService","executionDeferred","deviceFactory","getFactory","subscribe","unsubscribe","publish","update","doc","ownerDocument","location","queryString","getQueryString","process","refreshing","pathProcess","insertBefore","lastWidth","lastHeight","resizeInPopUpHTML","configureRefresh","configureRouting","configureRenderError","configureResize","configureGlobalHandlers","enableE2EInterface","errorTemplate","transformGridControl","processForm","getFailDeferred","jsonErrorMessage","BIZAGI_ORIENTATION","buttonsForm","refreshParams","fastEmpty","canvasParent","resizeTimeout","forceResize","triggerParams","heightActivitiFormContainer","renderForm","buttonContainer","heightButtonContainer","renderBehavior","heightCanvas","innerHeight"],"mappings":"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","sourcesContent":["/*\r\n*   Name: BizAgi Services Rendering End Points\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script defines all the end-points used to retrieve ajax stuff\r\n*   -   All urls must be relative to the base application\r\n*/\r\n\r\n// Create or define namespace\r\nbizagi.render = (typeof (bizagi.render) !== \"undefined\") ? bizagi.render : {};\r\nbizagi.render.services = (typeof (bizagi.render.services) !== \"undefined\") ? bizagi.render.services : {};\r\nbizagi.render.services.endPoints = [];\r\n\r\n// Creates a endpoint hash factory to resolve custom requirements\r\nbizagi.render.services.getEndPoints = function (params) {\r\n\r\n    var renderHandlerPathRest = \"Rest/Handlers/Render\";\r\n    var renderUploadHandlerPathRest = \"Rest/Handlers/Render/Upload\";\r\n    var renderFileHandlerPathRest = \"Rest/Handlers/RenderFile\";\r\n    var letterHandlerPathRest = \"Rest/Handlers/Letter\";\r\n    var multiActionHandlerPathRest = \"Rest/Handlers/MultiAction\";\r\n    var metadataHandlerPathRest = \"Rest/Handlers/Metadata\";\r\n    var metadataMultiactionHandlerPathRest = \"Rest/Handlers/MetadataMultiAction\";\r\n    // Default workportal end-points\r\n    if (params.context == \"workflow\") {\r\n        return {\r\n            \"form-get-data\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"form-submit-data\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"form-submit-data-upload\": params.proxyPrefix + renderUploadHandlerPathRest,\r\n            \"render-property-refresh\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-multiaction\": params.proxyPrefix + multiActionHandlerPathRest,\r\n            \"render-upload-cancel-image\": params.proxyPrefix + \"jquery/rendering/css/desktop/plugins/other/images/upload-cancel.png\",\r\n            \"render-upload-data-url\": params.proxyPrefix + renderFileHandlerPathRest,\r\n            \"render-upload-add-url\": params.proxyPrefix + renderUploadHandlerPathRest,\r\n            \"render-upload-delete-url\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-ecm-upload-url\": params.proxyPrefix + metadataHandlerPathRest,\r\n            \"render-multiaction-metadata\": params.proxyPrefix + metadataMultiactionHandlerPathRest,\r\n            \"render-grid-edit-url\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-save-url\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-add-url\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-rollback-url\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-commit-url\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-checkpoint-url\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-save-entity\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-stakeholder-associated\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-search-default-image\": params.proxyPrefix + \"jquery/rendering/css/desktop/images/bizagi_xpress.png\",\r\n            \"render-search-form-get-data\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-search-advanced-url\": params.proxyPrefix + \"Rest/Handlers/Query\",\r\n            \"render-letter-notEditable-url\": params.proxyPrefix + letterHandlerPathRest,\r\n            \"render-letter-content-url\": params.proxyPrefix + letterHandlerPathRest,\r\n            \"render-letter-save-url\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-letter-content-icons\": params.proxyPrefix + \"jquery/rendering/css/desktop/plugins/other/images/nicEditorIcons.gif\",\r\n            \"render-userfield-definition\": params.proxyPrefix + \"Rest/Userfields/{guidUserfield}/UserfieldDependency/{device}\",\r\n            \"render-document-generate\": params.proxyPrefix + \"Rest/DocumentTemplates/CaseTemplates\",\r\n            \"render-document-generateAllDocuments\": params.proxyPrefix + \"Rest/DocumentTemplates/TemplatesConcatFilesToPDF\",\r\n            \"render-processes-startform\": params.proxyPrefix + \"Rest/Processes/HasStartForm\",\r\n            \"render-processes-getstartform\": params.proxyPrefix + \"Rest/Processes/HasStartForm\",\r\n            \"render-entity-layout-image64\": params.proxyPrefix + \"Api/Entities/{entity}/Picture/{surrogateKey}/Base64\",\r\n            \"render-entity-layout-imageByteArray\": params.proxyPrefix + \"Api/Entities/{entity}/Picture/{surrogateKey}/Array?xpath={xpath}&width={width}&height={height}&idcase={idcase}&idworkitem={idworkitem}&contextxpath={contextxpath}&h_={hash}\" + \"&xsrf=\" + bizagi.getXSRFToken(),\r\n            \"render-entity-layout-upload-files\": params.proxyPrefix + \"Api/Entities/{entity}/Files/{surrogateKey}/Array?xpath={xpath}\",\r\n            \"case-handler-getCaseSummary\": params.proxyPrefix + \"Rest/Cases/{idCase}/SummaryGuid\",\r\n            \"case-handler-getCaseSummaryByGuid\": params.proxyPrefix + \"Rest/Cases/{guid}/SummaryByGuid\",\r\n            \"case-handler-getCaseAssignees\": params.proxyPrefix + \"Rest/Cases/{idCase}/AssigneesGuid\",\r\n            \"case-handler-getWorkItems\": params.proxyPrefix + \"Rest/Cases/{idCase}/WorkItems\",\r\n            \"case-handler-getWorkItemsByGuid\": params.proxyPrefix + \"Rest/Cases/{guid}/WorkItemsByGuid\",\r\n            \"admin-getUsersList\": params.proxyPrefix + \"Rest/Users/SearchUsers\",\r\n            \"admin-getUsersList-FromPreferences\": params.proxyPrefix + \"Rest/Users/SearchUsersFromPreferences\",\r\n            \"admin-getUsersList-ForStakeholders\": params.proxyPrefix + \"Rest/Users/SearchUsersForStakeholders\",\r\n            \"admin-getUsersForAssignation\": params.proxyPrefix + \"Rest/Users/UsersForAssignation\",\r\n            \"admin-users-config\": params.proxyPrefix + \"Api/Authentication/BizagiConfig\",\r\n            //users administration\r\n            \"admin-usersform\": params.proxyPrefix + \"Rest/Handlers/Render\",\r\n            \"admin-GenerateDataToSendByEmail\": params.proxyPrefix + \"Rest/Users/GenerateDataToSendByEmail\",\r\n            \"admin-sendUserEmail\": params.proxyPrefix + \"Rest/Users/SendUserEmail\"\r\n        };\r\n    }\r\n    // Sharepoint end-points (must be customized for each project)\r\n    if (params.context == \"sharepoint\" || params.context == \"portal\") {\r\n        if (typeof (params.sharepointProxyPrefix) === \"undefined\") alert(\"sharepointProxyPrefix param is requiered to build endpoints when context is 'sharepoint'\");\r\n        return {\r\n            \"form-get-data\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"form-submit-data\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"form-submit-data-upload\": params.sharepointProxyPrefix + renderUploadHandlerPathRest,\r\n            \"render-property-refresh\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-multiaction\": params.sharepointProxyPrefix + multiActionHandlerPathRest,\r\n            \"render-upload-cancel-image\": \"jquery/rendering/css/desktop/plugins/other/images/upload-cancel.png\",\r\n            \"render-upload-data-url\": params.sharepointProxyPrefix + renderFileHandlerPathRest,\r\n            \"render-upload-add-url\": params.sharepointProxyPrefix + renderUploadHandlerPathRest,\r\n            \"render-upload-delete-url\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-ecm-upload-url\": params.sharepointProxyPrefix + metadataHandlerPathRest,\r\n            \"render-grid-edit-url\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-save-url\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-add-url\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-rollback-url\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-commit-url\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-checkpoint-url\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-save-entity\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-stakeholder-associated\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-search-default-image\": \"jquery/css/bizagi/desktop/images/bizagi_xpress.png\",\r\n            \"render-search-form-get-data\": params.sharepointProxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-search-advanced-url\": params.sharepointProxyPrefix + \"Rest/Handlers/Query\",\r\n            \"render-letter-notEditable-url\": params.sharepointProxyPrefix + letterHandlerPathRest,\r\n            \"render-letter-content-url\": params.sharepointProxyPrefix + letterHandlerPathRest,\r\n            \"render-letter-save-url\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-letter-content-icons\": \"jquery/css/plugins/other/images/nicEditorIcons.gif\",\r\n            \"render-userfield-definition\": params.sharepointProxyPrefix + \"Rest/Userfields/{guidUserfield}/UserfieldDependency/{device}\",\r\n            \"render-document-generate\": params.sharepointProxyPrefix + \"Rest/DocumentTemplates/CaseTemplates\",\r\n            \"render-document-generateAllDocuments\": params.sharepointProxyPrefix + \"Rest/DocumentTemplates/TemplatesConcatFilesToPDF\",\r\n            \"render-processes-startform\": params.proxyPrefix + \"Rest/Processes/HasStartForm\",\r\n            \"render-processes-getstartform\": params.proxyPrefix + \"Rest/Processes/HasStartForm\",\r\n            \"render-entity-layout-image64\": params.proxyPrefix + \"Api/Entities/{entity}/Picture/{surrogateKey}/Base64\",\r\n            \"render-entity-layout-imageByteArray\": params.proxyPrefix + \"Api/Entities/{entity}/Picture/{surrogateKey}/Array?xpath={xpath}&width={width}&height={height}&idcase={idcase}&idworkitem={idworkitem}&contextxpath={contextxpath}&h_={hash}\" + \"&xsrf=\" + bizagi.getXSRFToken(),\r\n            \"case-handler-getCaseSummary\": params.sharepointProxyPrefix + \"Rest/Cases/{idCase}/Summary\",\r\n            \"case-handler-getCaseSummaryByGuid\": params.sharepointProxyPrefix + \"Rest/Cases/{guid}/SummaryByGuid\",\r\n            \"case-handler-getWorkItems\": params.sharepointProxyPrefix + \"Rest/Cases/{idCase}/WorkItems\",\r\n            \"case-handler-getWorkItemsByGuid\": params.proxyPrefix + \"Rest/Cases/{guid}/WorkItemsByGuid\"\r\n        };\r\n    }\r\n\r\n    if (params.context == \"entitymanagement\") {\r\n        return {\r\n            \"form-get-data\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"form-submit-data\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"form-submit-data-upload\": params.proxyPrefix + renderUploadHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-property-refresh\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-upload-cancel-image\": \"jquery/rendering/css/desktop/plugins/other/images/upload-cancel.png\",\r\n            \"render-upload-data-url\": params.proxyPrefix + renderFileHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-upload-add-url\": params.proxyPrefix + renderUploadHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-upload-delete-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-grid-edit-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-grid-save-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-grid-add-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-grid-rollback-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-grid-commit-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-grid-checkpoint-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-search-default-image\": \"jquery/rendering/css/desktop/images/bizagi_xpress.png\",\r\n            \"render-search-form-get-data\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-search-advanced-url\": params.proxyPrefix + \"Rest/Handlers/Query\" + \"?h_contexttype=entity\",\r\n            \"render-letter-notEditable-url\": params.proxyPrefix + letterHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-letter-content-url\": params.proxyPrefix + letterHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-letter-save-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-letter-content-icons\": \"jquery/rendering/css/desktop/plugins/other/images/nicEditorIcons.gif\"\r\n        };\r\n    }\r\n\r\n    if (params.context == \"search\") {\r\n        return {\r\n            \"form-get-data\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"form-submit-data\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"form-submit-data-upload\": params.proxyPrefix + renderUploadHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-property-refresh\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-upload-cancel-image\": \"jquery/rendering/css/desktop/plugins/other/images/upload-cancel.png\",\r\n            \"render-upload-data-url\": params.proxyPrefix + renderFileHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-upload-add-url\": params.proxyPrefix + renderUploadHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-upload-delete-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-grid-edit-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-grid-save-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-grid-add-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-grid-rollback-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-grid-commit-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-grid-checkpoint-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-search-default-image\": \"jquery/rendering/css/desktop/images/bizagi_xpress.png\",\r\n            \"render-search-form-get-data\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-search-advanced-url\": params.proxyPrefix + \"Rest/Handlers/Query\" + \"?h_contexttype=metadata\",\r\n            \"render-letter-notEditable-url\": params.proxyPrefix + letterHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-letter-content-url\": params.proxyPrefix + letterHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-letter-save-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-letter-content-icons\": \"jquery/rendering/css/desktop/plugins/other/images/nicEditorIcons.gif\"\r\n        };\r\n    }\r\n\r\n    return {};\r\n};\r\n","/*\r\n*   Name: BizAgi Rendering Service Context Factory\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define the endpoints to be used based on the given context\r\n*/\r\n\r\n$.Class.extend(\"bizagi.render.services.context\", {}, {\r\n    /* \r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        this.context = params.context;\r\n        this.endPoints = bizagi.render.services.getEndPoints(params);\r\n        this.proxyPrefix = !bizagi.util.isEmpty(params.proxyPrefix) ? params.proxyPrefix : \"\";\r\n    },\r\n\r\n    /*\r\n    *   Returns the given url for a specified service\r\n    */\r\n    getUrl: function (service) {\r\n        if (this.endPoints[service] == null) {\r\n            alert(\"No endpoint defined for: \" + service);\r\n        }\r\n        return this.endPoints[service];\r\n    },\r\n\r\n    setProxyPrefix: function(params){\r\n        this.proxyPrefix = !bizagi.util.isEmpty(params.proxyPrefix) ? params.proxyPrefix : \"\";\r\n        this.endPoints = bizagi.render.services.getEndPoints(params);\r\n    }\r\n});","/*\r\n *   Name: BizAgi Rendering Services\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This class will provide a facade to access to rendering REST services\r\n */\r\n\r\n$.Class.extend(\"bizagi.render.services.service\",\r\n    {\r\n        // Statics\r\n        BA_ACTION_PARAMETER_PREFIX: \"p_\",\r\n        BA_CONTEXT_PARAMETER_PREFIX: \"h_\",\r\n        BA_PAGE_CACHE: \"pageCacheId\"\r\n    },\r\n    {\r\n        /*\r\n         *   Constructor\r\n         */\r\n        init: function(params) {\r\n            params = params || {};\r\n            params.context = params.context || \"workflow\";\r\n            params.proxyPrefix = !bizagi.util.isEmpty(params.proxyPrefix) ? params.proxyPrefix : \"\";\r\n            this.serviceLocator = new bizagi.render.services.context(params);\r\n            this.multiactionService = new bizagi.render.services.multiactionservice(this);\r\n            this.guid = Math.guid();\r\n\r\n            if (bizagi.override.enableECMMetadataMultiaction) {\r\n                this.multiactionMetadataService = new bizagi.render.services.metadatamultiactionservice(this);\r\n            }\r\n\r\n            // Userfield definitions mini-cache\r\n            this.userfieldRequests = {};\r\n\r\n            this.deviceType = params.deviceType || (bizagi.util.isSmartphoneDevice() ? bizagi.deviceEnum.smartphone: (bizagi.util.isTabletDevice() ? bizagi.deviceEnum.tablet: bizagi.deviceEnum.desktop));\r\n            this.deviceCode = bizagi.util.getDeviceCode();\r\n        },\r\n        /*\r\n         *   Return the multiaction-service\r\n         */\r\n        multiaction: function() {\r\n            return this.multiactionService;\r\n        },\r\n\r\n        metadataECMMultiaction: function () {\r\n            return bizagi.override.enableECMMetadataMultiaction ? this.multiactionMetadataService: this;\r\n        },\r\n        /*\r\n         *   SINGLE SERVICES METHODS\r\n         */\r\n\r\n        /*\r\n         *   Gets form data\r\n         *   Returns a promise of the data being retrieved\r\n         */\r\n        getFormData: function(params) {\r\n            var self = this;\r\n\r\n            // Check if the params contains mocked data\r\n            if (params && params.data) {\r\n                return params.data;\r\n            }\r\n\r\n            // Define data\r\n            params = params || {};\r\n            var data = {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = params.action || \"LOADFORM\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"devicetype\"] = self.deviceType;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"devicecode\"] = self.deviceCode;\r\n\r\n            if (params.idProcess)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idProcess\"] = params.idProcess;\r\n            if (params.idForm)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idForm\"] = params.idForm;\r\n            if (params.idEntity)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idEntity\"] = params.idEntity;\r\n            if (params.surrogateKey)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"surrogateKey\"] = params.surrogateKey;\r\n            if (params.idRender)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            if (params.xpathContext)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            if (params.requestedForm)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"requestedForm\"] = params.requestedForm;\r\n            if (params.recordXPath)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"recordXPath\"] = params.recordXPath;\r\n            if (params.summaryForm)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"summaryForm\"] = params.summaryForm;\r\n            if (params.idCase)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idCase\"] = params.idCase;\r\n            if (params.idWorkitem)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idWorkitem\"] = params.idWorkitem;\r\n            if (params.idTask)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idTask\"] = params.idTask;\r\n            if (params.idPageCache)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            if (params.contextType)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contextType;\r\n            if (params.guidEntity)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidEntity\"] = params.guidEntity;\r\n            if (!bizagi.util.isEmpty(params.isRefresh))\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"isRefresh\"] = params.isRefresh;\r\n            if (params.isActionStartForm)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"isActionStartForm\"] = params.isActionStartForm;\r\n            if (params.additionalXpaths)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"additionalXpaths\"] = params.additionalXpaths;\r\n            if (params.idStartScope)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idStartScope\"] = params.idStartScope;\r\n            if (typeof params.readOnlyForm !== \"undefined\")\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"readonlyform\"] = params.readOnlyForm;\r\n            if (typeof params.printversion !== \"undefined\")\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"printForm\"] = params.printversion;\r\n            if (typeof params.recordXpath !== \"undefined\")\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"recordlauncherxpath\"] = params.recordXpath;\r\n            if (params.guid)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guid\"] = params.guid;\r\n            if (params.downloadOfflineForm)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"downloadofflineform\"] = 1;\r\n\r\n            if (params.editable === false) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"DisplayFormAsReadOnly\"] = true;\r\n            }\r\n\r\n            // Support parameter from ui\r\n            // Parameters that affects all the same attributes of render\r\n            if (params.printversion) {\r\n                //Print limit grid rows\r\n                var BA_ALL_PARAMETER_PREFIX = \"all_\";\r\n\r\n                if (params[self.Class.BA_ACTION_PARAMETER_PREFIX + BA_ALL_PARAMETER_PREFIX + \"rows\"]) {\r\n                    data[self.Class.BA_ACTION_PARAMETER_PREFIX + BA_ALL_PARAMETER_PREFIX + \"rows\"] = params[self.Class.BA_ACTION_PARAMETER_PREFIX + BA_ALL_PARAMETER_PREFIX + \"rows\"];\r\n                }\r\n            }\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n\r\n            // Call ajax and returns promise\r\n            bizagi.chrono.initAndStart(\"data\");\r\n            var ajaxParams = {\r\n                url: params.url || self.serviceLocator.getUrl(\"form-get-data\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: params.action || \"LOAD\"\r\n            };\r\n            if (params.downloadOfflineForm){\r\n                ajaxParams.avoidLoader = true;\r\n            }\r\n            return $.ajax(ajaxParams)\r\n                .pipe(function(response) {\r\n                    bizagi.chrono.stopAndLog(\"data\");\r\n\r\n                    // Transform data for read only version\r\n                    if (params.printversion) {\r\n                        try {\r\n                            response.form.properties.editable = \"False\";\r\n\r\n                            var transformGridDataToReadOnly = function(_data) {\r\n                                if (_data == null) {\r\n                                    return _data;\r\n                                }\r\n                                if (_data.hasOwnProperty('type') && _data.type == 'grid') {\r\n                                    _data.id = data.id + \"-print\";\r\n                                    _data.allowAdd = \"False\";\r\n                                    _data.allowDelete = \"False\";\r\n                                    _data.allowEdit = \"False\";\r\n                                    _data.allowGrouping = \"False\";\r\n                                    _data.allowMore = \"False\";\r\n                                    _data.allowSearch = \"False\";\r\n                                } else {\r\n                                    $.each(data, function(key, value) {\r\n                                        if (typeof (value) == 'object') {\r\n                                            _data[key] = transformGridDataToReadOnly(_data[key]);\r\n                                        }\r\n                                    });\r\n                                }\r\n                                return _data;\r\n                            };\r\n                            response = transformGridDataToReadOnly(response);\r\n                        } catch (e) {\r\n                        }\r\n                    }\r\n\r\n                    return response;\r\n                });\r\n        },\r\n        /*\r\n         *   Gets a search form data\r\n         *   Returns a promise of the data being retrieved\r\n         */\r\n        getSearchFormData: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            params = params || {};\r\n            var data = {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"SEARCHFORM\";\r\n            if (params.xpath)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            if (params.idRender)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            if (params.xpathContext)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            if (params.idSearchForm)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"searchForm\"] = params.idSearchForm;\r\n            if (params.idPageCache)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-search-form-get-data\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"SEARCHFORM\"\r\n            });\r\n        },\r\n\r\n        processDataValues: function(data) {\r\n            var o;\r\n            data = $.extend(true, {}, data);\r\n            for (o in data) {\r\n                if (data.hasOwnProperty(o) && $.type(data[o]) == \"object\") {\r\n                    // for search\r\n                    if (data[o].hasOwnProperty(\"id\")) {\r\n                        data[o] = data[o].id;\r\n                    }\r\n                }\r\n            }\r\n            return data;\r\n        },\r\n        /*\r\n         *   Sends a form action to the server\r\n         */\r\n        submitData: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            data = self.resolveData(params.data || {}, params.xpathContext);\r\n            data = self.processDataValues(data);\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = params.action;\r\n\r\n            // Fill optional parameters\r\n            params = params || {};\r\n            if (params.xpath)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            if (params.idRender)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            if (params.xpathContext)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            if (params.idPageCache)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            if (params.guidEntity)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidEntity\"] = params.guidEntity;\r\n            if (params.contexttype)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            if (params.transitions)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"transitions\"] = params.transitions;\r\n            if (params.surrogatekey)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"surrogateKey\"] = params.surrogatekey;\r\n            if (params.forcePlanCompletion)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"forcePlanCompletion\"] = params.forcePlanCompletion;\r\n\r\n            /* if (params.isActionStartForm)\r\n             data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"isActionStartForm\"] = params.isActionStartForm;\r\n             */\r\n            var actionType = params.action.toString().toUpperCase();\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Data sent\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"form-submit-data\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: actionType\r\n            });\r\n        },\r\n        /*\r\n         * Get data processing xpathcontext\r\n         */\r\n        resolveData: function(data, xpathContext) {\r\n            var name, newName, value;\r\n            if (!$.isEmptyObject(data) && xpathContext) {\r\n                if (xpathContext.search(/\\[id=\\d+\\]/) !== -1) {\r\n                    for (name in data) {\r\n                        if (name.search(/\\[id=\\d+\\]/) !== -1 && xpathContext == name.substr(0, name.search(/\\]/) + 1)) {\r\n                            newName = name.substr(name.search(/\\]/) + 2);\r\n                            value = data[name];\r\n                            data[newName] = value;\r\n                            delete data[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return data;\r\n        },\r\n        /*\r\n         *   Fetch a property from the server\r\n         *   Params:\r\n         *   -   xpath\r\n         *   -   idRender\r\n         *   -   xpathContext\r\n         *   -   property\r\n         */\r\n        getPropertyData: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"PROCESSPROPERTYVALUE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"propertyName\"] = params.property;\r\n\r\n            if (params.sessionId)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = params.sessionId;\r\n            if (params.contexttype)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            if (params.guidentity)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidEntity\"] = params.guidentity;\r\n            if (params.surrogatekey)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"surrogateKey\"] = params.surrogatekey;\r\n            if (params.pxpath)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"xpath\"] = params.pxpath;\r\n            if (params.prows)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"rows\"] = params.prows;\r\n            if (params.ppage)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"page\"] = params.ppage;\r\n            if (params.pfilter != undefined && params.pfilter != null)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"filter\"] = params.pfilter;\r\n            /*else\r\n             data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"filter\"] = \"\";*/\r\n            if (params.psort != undefined && params.psort != null)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sort\"] = params.psort;\r\n            if (params.porder)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"order\"] = params.porder;\r\n            if (params.pcaseId)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"caseId\"] = params.pcaseId;\r\n            if (params.pguidEntity)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"guidEntity\"] = params.pguidEntity;\r\n            if (params.psurrogatedKey) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"surrogatedKey\"] = params.psurrogatedKey;\r\n            }\r\n            if (params.pactionXpath) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"actionXpath\"] = params.pactionXpath;\r\n            }\r\n            if (params.ptemplateGuid) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"templateGuid\"] = params.ptemplateGuid;\r\n            }\r\n            if (params.pparameters) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"parameters\"] = params.pparameters;\r\n            }\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Property refresh for '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            // TODO: change REST library in order to support extra HTTP parameters\r\n            // Please be careful with dataType parameter\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-property-refresh\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: params.dataType || \"json\",\r\n                serviceType: \"PROCESSPROPERTYVALUE\",\r\n                beforeSend: function(xhr, status) {\r\n                    bizagi.multiactionConnection = bizagi.multiactionConnection || [];\r\n                    bizagi.multiactionConnection.push(xhr);\r\n                }\r\n            });\r\n\r\n        },\r\n        /*\r\n         *   Refresh the data property from the server\r\n         *   Params:\r\n         *   -   xpath\r\n         *   -   idRender\r\n         *   -   xpathContext\r\n         */\r\n        getData: function(params) {\r\n            return this.getPropertyData($.extend(params, {\r\n                property: \"data\"\r\n            }));\r\n        },\r\n        /*\r\n         *   Refresh the data property from the server\r\n         *   This version is to fetch search data\r\n         *   Params:\r\n         *   -   xpath\r\n         *   -   idRender\r\n         *   -   xpathContext\r\n         *   -   term\r\n         */\r\n        getSearchData: function(params) {\r\n            var self = this;\r\n            params.extra = params.extra || {};\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"term\"] = params.term;\r\n\r\n            return this.getPropertyData($.extend(params, {\r\n                property: \"data\"\r\n            }));\r\n        },\r\n\r\n        /*\r\n         * Refresh tha data property from the server\r\n         * Params:\r\n         *   -   collapsestate\r\n         */\r\n        getCollapseData: function(params) {\r\n            var self = this;\r\n            params.extra = params.extra || {};\r\n\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"collapseState\"] = params.collapseState;\r\n\r\n            return this.getPropertyData($.extend(params, {\r\n                property: \"collapseState\"\r\n            }));\r\n        },\r\n\r\n        /*\r\n         *   Refresh the data property from the server\r\n         *   This version is to fetch grid data\r\n         *   Params:\r\n         *   -   xpath\r\n         *   -   idRender\r\n         *   -   xpathContext\r\n         *   -   sort\r\n         *   -   page\r\n         *   -   rows\r\n         */\r\n        getGridData: function(params) {\r\n            var self = this;\r\n            params.extra = params.extra || {};\r\n\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sort\"] = params.sort;\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"order\"] = params.order;\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"page\"] = params.page;\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"rows\"] = params.rows;\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"searchFilter\"] = params.searchFilter;\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"value\"] = params.value;\r\n\r\n            return this.getPropertyData($.extend(params, {\r\n                property: \"data\"\r\n            }));\r\n        },\r\n\r\n        getGridDataExclusivesSelected: function(params) {\r\n            var self = this;\r\n            params.extra = params.extra || {};\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"rows\"] = params.rows;\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"value\"] = params.value;\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"xpathfilter\"] = params.xpathfilter;\r\n            return this.getPropertyData($.extend(params, {\r\n                property: \"exclusivesSelected\"\r\n            }));\r\n        },\r\n\r\n        /*\r\n         *   Returns the upload plugin cancel image\r\n         */\r\n        getUploadCancelImage: function() {\r\n            return bizagi.services.ajax.pathToBase + this.serviceLocator.getUrl(\"render-upload-cancel-image\");\r\n        },\r\n        /*\r\n         *   Returns the upload file url for each file\r\n         */\r\n        getUploadFileUrl: function(params) {\r\n            var self = this;\r\n            var url = this.serviceLocator.getUrl(\"render-upload-data-url\");\r\n            var data = {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"PROCESSPROPERTYVALUE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"propertyName\"] = \"fileContent\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"fileId\"] = params.fileId;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = params.sessionId;\r\n            (params.contexttype) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype : \"\";\r\n            return self.verifyPathToBase(bizagi.services.ajax.pathToBase, url) + \"?\" + jQuery.param(data) + \"&xsrf=\" + bizagi.getXSRFToken();\r\n        },\r\n\r\n        getUploadFileEntityUrl: function(params) {\r\n            var self = this;\r\n            var url = this.serviceLocator.getUrl(\"render-upload-data-url\");\r\n            var data = {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"PROCESSPROPERTYVALUETEMPLATE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"propertyName\"] = \"fileContent\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"fileId\"] = params.fileId;\r\n            if (params.isContextContainerWidgetRender) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = params.sessionId;\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"xpathactions\"] = params.xpathActions;\r\n            } else {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"surrogateKey\"] = params.surrogatekey;\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidEntity\"] = params.guidentity;\r\n            }\r\n\r\n            return self.verifyPathToBase(bizagi.services.ajax.pathToBase, url) + \"?\" + jQuery.param(data) + \"&xsrf=\" + bizagi.getXSRFToken();\r\n        },\r\n\r\n        /*\r\n         *   Returns the upload add url\r\n         */\r\n        getUploadAddUrl: function() {\r\n            var self = this;\r\n            var url = this.serviceLocator.getUrl(\"render-upload-add-url\");\r\n            var data = {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"ADDFILE\";\r\n\r\n            return self.verifyPathToBase(bizagi.services.ajax.pathToBase, url) + \"?\" + jQuery.param(data);\r\n        },\r\n        /*\r\n         *   Returns the upload add url\r\n         */\r\n        getUploadAddFileUrl: function(isUserPreferences) {\r\n            var self = this;\r\n            var url = this.serviceLocator.getUrl(\"form-submit-data-upload\");\r\n            var data = {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = (isUserPreferences === true) ? \"SAVEUSERIMAGE\" : \"savefile\";\r\n\r\n            return self.verifyPathToBase(bizagi.services.ajax.pathToBase, url) + \"?\" + jQuery.param(data);\r\n        },\r\n\r\n        deleteImage: function(params) {\r\n            var self = this;\r\n\r\n            var data = params.extra || {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"DELETEUSERIMAGE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            (params.contexttype) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype : \"\";\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Removing image '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-upload-delete-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n\r\n        /*\r\n         *   Returns the upload add url\r\n         */\r\n        deleteUploadFile: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"REMOVERELATION\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            (params.contexttype) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype : \"\";\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Removing file in upload '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-upload-delete-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n\r\n            });\r\n        },\r\n        /*\r\n         * Return file meta data\r\n         */\r\n        getECMMetadata: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data.action = \"getECMMetadata\";\r\n            data.idFileUpload = params.idFileUpload;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data.xpathContext = params.xpathContext;\r\n            data.xPath = params.xPath;\r\n            data.idAttrib = params.idAttrib;\r\n            if (params.sessionId) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = params.sessionId;\r\n            }\r\n            // Log submit data\r\n            bizagi.debug(\"Get file metadata '\" + params.xPath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-ecm-upload-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                interceptor: {\r\n                    intercept: true,\r\n                    source: \"rendering_\" + self.guid,\r\n                }\r\n            });\r\n\r\n        },\r\n        /*\r\n         * Checkout a file\r\n         **/\r\n        checkOutFile: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data.action = \"checkOutFile\";\r\n            data.idFileUpload = params.idFileUpload;\r\n            data.xPath = params.xPath;\r\n            data.idAttrib = params.idAttrib;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data.xpathContext = params.xpathContext;\r\n\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"file checkout '\" + params.xPath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-ecm-upload-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n        /*\r\n         * cancelCheckOut\r\n         **/\r\n        cancelCheckOut: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data.action = \"cancelCheckOut\";\r\n            data.idFileUpload = params.idFileUpload;\r\n            data.xPath = params.xPath;\r\n            data.idAttrib = params.idAttrib;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data.xpathContext = params.xpathContext;\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"file checkout '\" + params.xPath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-ecm-upload-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n        /*\r\n         * Checkout a file\r\n         **/\r\n        deleteECMFile: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data.action = \"delete\";\r\n            data.idFileUpload = params.idFileUpload;\r\n            data.xPath = params.xPath;\r\n            data.idAttrib = params.idAttrib;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data.xpathContext = params.xpathContext;\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"delete file'\" + params.xPath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-ecm-upload-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n        /*\r\n         *  Update ECM file content\r\n         **/\r\n        updateECMFileContent: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data.action = \"updateECMFileContent\";\r\n            data.idFileUpload = params.idFileUpload;\r\n            data.xPath = params.xPath;\r\n            data.idAttrib = params.idAttrib;\r\n\r\n            data.metaValues = params.metaValues;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data.xpathContext = params.xpathContext;\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Update file content '\" + params.xPath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-ecm-upload-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n        /*\r\n         *  Update file content\r\n         **/\r\n        updateECMMetadata: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data.action = \"updateECMMetadata\";\r\n            data.idFileUpload = params.idFileUpload;\r\n            data.xPath = params.xPath;\r\n            data.idAttrib = params.idAttrib;\r\n\r\n            data.metaValues = params.metaValues;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data.xpathContext = params.xpathContext;\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Update file meta data '\" + params.xPath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-ecm-upload-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n        getFileProperties: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data.action = \"getFileProperties\";\r\n            data.idFileUpload = params.idFileUpload;\r\n            data.xPath = params.xPath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data.xpathContext = params.xpathContext;\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Get file properties '\" + params.xPath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-ecm-upload-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                interceptor: {\r\n                    intercept: true,\r\n                    source: \"rendering_\" + self.guid,\r\n                }\r\n            });\r\n        },\r\n        uploadECMFile: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data.action = \"uploadECMFile\";\r\n            data.fileUpload = params.fileUpload; // Content of file\r\n            data.xPath = params.xPath;\r\n\r\n            data.idAttrib = params.idAttrib;\r\n            data.fileName = params.fileName;\r\n            data.metaValues = params.metaValues;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data.xpathContext = params.xpathContext;\r\n\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Upload ECM file '\" + params.xPath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-ecm-upload-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n        getECMFileUrl: function(params) {\r\n            var self = this;\r\n            var url = params.url || self.serviceLocator.getUrl(\"render-ecm-upload-url\") + \"File\";\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data.action = \"viewECMFile\";\r\n            data.idFileUpload = params.idFileUpload;\r\n            data.xPath = params.xPath;\r\n            data.idAttrib = params.idAttrib;\r\n\r\n            data.fileName = params.fileName;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data.xpathContext = params.xpathContext;\r\n            if (params.sessionId) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = params.sessionId;\r\n            }\r\n            if (params.p_sessionId) {\r\n                data.p_sessionId = params.p_sessionId;\r\n            }\r\n\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"View uploaded file '\" + params.xPath + \"'\", data);\r\n\r\n            return self.verifyPathToBase(bizagi.services.ajax.pathToBase, url) + \"?\" + jQuery.param(data) + \"&xsrf=\" + bizagi.getXSRFToken();\r\n        },\r\n        /*\r\n         *\r\n         */\r\n        isFileOnECM: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = {};\r\n            data[\"action\"] = \"isFileOnECM\";\r\n            data[\"idUpload\"] = params.idUpload;\r\n\r\n            // Call ajax and returns promise\r\n            return $.read(self.serviceLocator.getUrl(\"render-ecm-upload-url\"), data);\r\n        },\r\n        /*\r\n         *   Start a grid record edition\r\n         */\r\n        editGridRecord: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"EDITRELATION\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Sending edit request for relation '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-grid-edit-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"EDITRELATION\"\r\n            });\r\n        },\r\n        /*\r\n         *   Sends a grid request to add a new row\r\n         *   The server returns the new row in json\r\n         */\r\n        addGridRecord: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"ADDRELATION\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Sending add request for grid '\" + params.xpath + \"'\", data);\r\n\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-grid-add-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"ADDRELATION\"\r\n            });\r\n        },\r\n        /*\r\n         *   Sends a grid request to add a new row, and sending the data at the same time\r\n         *   The server returns the new row in json\r\n         */\r\n        addGridRecordData: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"ADDRELATIONWITHDATA\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n\r\n            // Build data to submit\r\n            var submitData = params.submitData || {};\r\n            for (key in submitData) {\r\n                data[key] = submitData[key];\r\n            }\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Sending add request for grid '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-grid-add-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"ADDRELATIONWITHDATA\"\r\n            });\r\n        },\r\n        /*\r\n         *   Submits the grid record data to the server\r\n         */\r\n        saveGridRecord: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"SAVERELATION\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"disableServerGridValidations\"] = params.disableServerGridValidations || false;\r\n\r\n            // Send the submitted data page cache because it cointains the grid's form page cache\r\n            if (params.submitData.idPageCache) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.submitData.idPageCache;\r\n                delete params.submitData.idPageCache;\r\n            }\r\n\r\n            var submitData = params.submitData || {};\r\n\r\n            // Build data to submit\r\n            submitData = self.processDataValues(submitData);\r\n\r\n            for (key in submitData) {\r\n                data[key] = submitData[key];\r\n            }\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Sending save request for grid '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-grid-save-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"SAVERELATION\"\r\n            });\r\n        },\r\n        /*\r\n         *   Deletes a grid record in the server\r\n         */\r\n        deleteGridRecord: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"REMOVERELATION\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Sending delete request for grid '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-grid-save-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"REMOVERELATION\"\r\n            });\r\n        },\r\n\r\n        /*\r\n         * Get association flipped status\r\n         */\r\n        getFlipAssociation: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"PROCESSPROPERTYVALUE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.id;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"propertyName\"] = \"flipped\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"flipstate\"] = params.flipstate;\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n\r\n            // Log request data\r\n            bizagi.debug(\"Sending request for flip association control '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-property-refresh\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"text\"\r\n            }).pipe(function(response) {\r\n                try {\r\n                    // Try to attempt to parse JSON\r\n                    return bizagi.services.ajax.parseJSON(response);\r\n                } catch (e) {\r\n                    // If JSON is not valid we need to return the original text response\r\n                    return response;\r\n                }\r\n            });\r\n        },\r\n        /*\r\n         *   Cancels an add or edit request for a grid\r\n         */\r\n        rollbackGridAction: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"ROLLBACK\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Sending rollback request for grid '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-grid-rollback-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"ROLLBACK\"\r\n            });\r\n        },\r\n        /*\r\n         *   Returns the search render default image\r\n         */\r\n        getSearchDefaultImage: function() {\r\n            return bizagi.services.ajax.pathToBase + this.serviceLocator.getUrl(\"render-search-default-image\");\r\n        },\r\n\r\n        processDataCriteria: function(criteria) {\r\n            var o;\r\n            criteria = $.extend(true, [], criteria);\r\n            for (o in criteria) {\r\n                if (criteria.hasOwnProperty(o) && criteria[o].hasOwnProperty(\"value\") && $.type(criteria[o].value) == \"object\") {\r\n                    // for search\r\n                    if (criteria[o].value.hasOwnProperty(\"id\") && criteria[o].value.hasOwnProperty(\"label\")) {\r\n                        criteria[o].value = criteria[o].value.id;\r\n                    }\r\n                }\r\n            }\r\n            return criteria;\r\n        },\r\n\r\n        /*\r\n         *   Perform entity search in the server\r\n         */\r\n        submitSearch: function(params) {\r\n            var self = this, criteria;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            var sort = params.sort && params.sort !== \"\" ? params.sort : \"\";\r\n\r\n            if (params.order && params.order !== \"\" && sort !== \"\")\r\n                sort += \" \" + params.order;\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"SEARCHENTITYFORRENDER\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"searchForm\"] = params.idSearchForm;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sort\"] = sort;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"page\"] = params.page;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"pageSize\"] = params.rows;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"searchFilter\"] = params.searchFilter;\r\n\r\n            criteria = self.processDataCriteria(params.criteria);\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"searchCriteria\"] = JSON.encode(criteria);\r\n\r\n            // Optional search params\r\n            if (params.allowFullSearch)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"allowFullSearch\"] = params.allowFullSearch;\r\n            if (params.maxRecords)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"maxRowsAllowed\"] = params.maxRecords;\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Performing advanced search\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-search-advanced-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"SEARCHENTITYFORRENDER\"\r\n            });\r\n        },\r\n\r\n        /*\r\n         *   Submits the stakeholder associated\r\n         */\r\n        associateStakeholder: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"SAVE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"surrogateKey\"] = params.surrogateKey;\r\n            data[\"associatedUser\"] = params.associatedUser;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidEntity\"] = params.guidentity;\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Property refresh for '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            // TODO: change REST library in order to support extra HTTP parameters\r\n            // Please be careful with dataType parameter\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-stakeholder-associated\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: params.dataType || \"json\"\r\n            });\r\n        },\r\n\r\n        /*\r\n         *   Refresh the stakeholder associated list\r\n         */\r\n        refreshAssociateStakeholder: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"PROCESSPROPERTYVALUE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"propertyName\"] = params.property;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Property refresh for '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            // TODO: change REST library in order to support extra HTTP parameters\r\n            // Please be careful with dataType parameter\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-stakeholder-associated\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: params.dataType || \"json\",\r\n                serviceType: \"PROCESSPROPERTYVALUE\"\r\n            });\r\n        },\r\n\r\n        /*\r\n         *   Gets the link to the letter\r\n         */\r\n        getLetterNotEditableUrl: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"GETLETTER\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            // Call ajax and returns promise\r\n            var url = params.url || self.serviceLocator.getUrl(\"render-letter-notEditable-url\");\r\n            return self.verifyPathToBase(bizagi.services.ajax.pathToBase, url) + \"?\" + jQuery.param(data);\r\n        },\r\n        /*\r\n         *   Gets the content for editable letters\r\n         */\r\n        getLetterContent: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"GETLETTER\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-letter-content-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"html\"\r\n            }).pipe(function(response) {\r\n                try {\r\n                    return bizagi.services.ajax.parseJSON(response);\r\n                } catch (e) {\r\n                    return response;\r\n                }\r\n            });\r\n        },\r\n        /*\r\n         *   Get the can generate letter flag\r\n         */\r\n        getCanGenerateLetter: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"CANGENERATELETTER\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: self.serviceLocator.getUrl(\"render-letter-content-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n        /*\r\n         *   Saves the content for editable letters\r\n         */\r\n        saveLetterContent: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"UPDATELETTER\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            // Define content\r\n            var content = params.content || \"\";\r\n\r\n            // Define url\r\n            var url = params.url || (self.serviceLocator.getUrl(\"render-letter-save-url\"));\r\n            var fullUrl = url + \"?\" + jQuery.param(data);\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Save request for letter sent to: \" + fullUrl, content);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: fullUrl,\r\n                data: content,\r\n                type: \"POST\",\r\n                dataType: \"html\"\r\n            });\r\n        },\r\n        /*\r\n         *   Returns the icons path for the letter plugin\r\n         */\r\n        getLetterEditorIconsPath: function() {\r\n            return bizagi.services.ajax.pathToBase + this.serviceLocator.getUrl(\"render-letter-content-icons\");\r\n        },\r\n        /*\r\n         *   Executes a button action in the server\r\n         */\r\n        executeButton: function(params) {\r\n            return this.getPropertyData($.extend(params, {\r\n                property: \"buttonRule\"\r\n            }));\r\n        },\r\n        /*\r\n         *   Executes a fileprint action in the server\r\n         */\r\n        getFilePrintUrl: function(params) {\r\n\r\n            var self = this;\r\n            var url = this.serviceLocator.getUrl(\"render-upload-data-url\");\r\n            var data = {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"PROCESSPROPERTYVALUE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"propertyName\"] = \"data\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"disposition\"] = params.disposition;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = params.sessionId;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            (params.contexttype) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype : \"\";\r\n\r\n            return self.verifyPathToBase(bizagi.services.ajax.pathToBase, url) + \"?\" + jQuery.param(data);\r\n\r\n        },\r\n        /*\r\n         *   Start a link form edition\r\n         */\r\n        editLinkForm: function(params) {\r\n            // Actually it does the same than edit grid records\r\n            return this.editGridRecord(params);\r\n        },\r\n        /*\r\n         *   Saves the content of the link form\r\n         */\r\n        saveLinkForm: function(params) {\r\n            // Actually it does the same than edit grid records\r\n            //return this.saveGridRecord(params);\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"SAVEFORMLINKRELATION\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n\r\n            // Send the submitted data page cache because it cointains the grid's form page cache\r\n            if (params.submitData.idPageCache) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.submitData.idPageCache;\r\n                delete params.submitData.idPageCache;\r\n            }\r\n\r\n            var submitData = params.submitData || {};\r\n\r\n            // Build data to submit\r\n            submitData = self.processDataValues(submitData);\r\n\r\n            for (key in submitData) {\r\n                data[key] = submitData[key];\r\n            }\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Sending save request for grid '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-grid-save-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"SAVEFORMLINKRELATION\"\r\n            });\r\n        },\r\n        /*\r\n         *   Rollbacks the link form edition\r\n         */\r\n        rollbackLinkForm: function(params) {\r\n            // Actually it does the same than rollback grid records\r\n            return this.rollbackGridAction(params);\r\n        },\r\n        /*   Commit the link form edition\r\n         */\r\n        commitLinkForm: function(params) {\r\n            // Actually it does the same than rollback grid records\r\n            return this.commitGridAction(params);\r\n        },\r\n        /*   Sends schekpoint action\r\n         */\r\n        sendCheckpoint: function(params) {\r\n            // Actually it does the same than rollback grid records\r\n            return this.sendCheckpointAction(params);\r\n        },\r\n        /*\r\n         *   Loads the userfield definition\r\n         */\r\n        getUserfieldDefinition: function(params) {\r\n            var self = this;\r\n            params = params || {};\r\n\r\n            // Check in deferreds cache\r\n            if (self.userfieldRequests[params.userfield])\r\n                return self.userfieldRequests[params.userfield];\r\n\r\n            // Required params: idCase\r\n            self.userfieldRequests[params.userfield] = $.read(self.serviceLocator.getUrl(\"render-userfield-definition\"),\r\n                {\r\n                    guidUserfield: params.userfield,\r\n                    device: (params.device || \"desktop\")\r\n                }\r\n            );\r\n\r\n            // Return deferred\r\n            return self.userfieldRequests[params.userfield];\r\n        },\r\n        /**\r\n         *  Get render json for one render o container\r\n         *  @param {object} params object with idRender,idPageCache\r\n         */\r\n        refreshControl: function(params) {\r\n            var self = this;\r\n            params = params || {};\r\n\r\n            var data = {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"REFRESH\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            (params.xpathContext) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext : \"\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            (params.contexttype) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype : \"\";\r\n            (params.idForm) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idForm\"] = params.idForm : \"\";\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"form-get-data\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"PARTIALREFRESH\"\r\n            });\r\n        },\r\n        /**\r\n         *  Get render json for one render o container\r\n         *  @param {object} params object with idRender,idPageCache\r\n         */\r\n        refreshGridCell: function(params) {\r\n            var self = this;\r\n            params = params || {};\r\n\r\n            var data = {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"REFRESHGRIDCELL\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidcolumn\"] = params.column;\r\n            (params.xpathContext) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext : \"\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            (params.idForm) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idForm\"] = params.idForm : \"\";\r\n            (params.typeRender) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"typeRender\"] = params.typeRender : \"\";\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"form-get-data\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n        /**\r\n         * Request to execute rule on server\r\n         * @param {object} params h_pageCacheId, guidrule\r\n         */\r\n        executeRule: function(params) {\r\n            var self = this;\r\n\r\n\r\n            var data = {};\r\n            params = params || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"EXECUTERULE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidrule\"] = params.rule || \"\";\r\n            (params.xpathContext) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext : \"\";\r\n            (params.contexttype) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype : \"\";\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            return $.create(self.serviceLocator.getUrl(\"form-submit-data\"), data);\r\n        },\r\n        /**\r\n         * Request to execute interface on server\r\n         * @param {object} params h_pageCacheId, guidinterface\r\n         */\r\n        executeInterface: function(params) {\r\n            var self = this;\r\n            var data = {};\r\n            params = params || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"EXECUTEINTERFACE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidinterface\"] = params.interface || \"\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext || \"\";\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            return $.create(self.serviceLocator.getUrl(\"form-submit-data\"), data);\r\n        },\r\n        /**\r\n         * Request to execute SAP Connecor\r\n         * @param {object} params h_pageCacheId, guidinterface\r\n         */\r\n        executeSAPConnector: function(params) {\r\n            var self = this;\r\n            var data = {};\r\n            params = params || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"EXECUTESAP\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidsap\"] = params.guidsap || \"\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext || \"\";\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            return $.create(self.serviceLocator.getUrl(\"form-submit-data\"), data);\r\n        },\r\n        /**\r\n         * Request to execute a Bizagi connector\r\n         * @param params\r\n         * @return {{}}\r\n         */\r\n        executeConnector: function(params) {\r\n            var self = this;\r\n            var data = {};\r\n            params = params || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"EXECUTECONNECTOR\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidConnector\"] = params.guidConnector || \"\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext || \"\";\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            return $.create(self.serviceLocator.getUrl(\"form-submit-data\"), data);\r\n        },\r\n        /*\r\n         *   Document Templates generate rest service\r\n         */\r\n        generateDocumentTemplate: function(params) {\r\n            var self = this;\r\n            params = params || {};\r\n            params.append = params.append ? params.append : false;\r\n\r\n            return $.create(\r\n                self.serviceLocator.getUrl(\"render-document-generate\"),\r\n                {\r\n                    h_pageCacheId: params.idPageCache,\r\n                    contextXpath: params.xpathcontext,\r\n                    groupMappingId: params.groupMapping,\r\n                    xpathAttribute: params.xpath,\r\n                    append: params.append,\r\n                    controlId: params.id\r\n                }\r\n            );\r\n        },\r\n        /*\r\n         *   Document Templates generate rest service\r\n         */\r\n        getAllDocumentsDownloadUrl: function(params) {\r\n            var self = this;\r\n            var url = this.serviceLocator.getUrl(\"render-document-generateAllDocuments\");\r\n            var data = {};\r\n            data[\"h_pageCacheId\"] = params.idPageCache;\r\n            data[\"contextXpath\"] = params.xpathContext;\r\n            data[\"xpathAttribute\"] = params.xpath;\r\n            data[\"idCase\"] = params.idCase;\r\n            data[\"idWorkItem\"] = params.idWorkItem;\r\n            data[\"p_sessionId\"] = params.sessionId;\r\n\r\n            return self.verifyPathToBase(bizagi.services.ajax.pathToBase, url) + \"?\" + jQuery.param(data) + \"&xsrf=\" + bizagi.getXSRFToken();\r\n\r\n        },\r\n\r\n\r\n        getCaseNumber: function(params) {\r\n            var self = this;\r\n            //this function use sendEMail\r\n            //and not possible use dat ain ajax\r\n            //this is workaround (rhonyp)\r\n            return $.ajax({\r\n                url: self.serviceLocator.getUrl(\"case-handler-getCaseSummary\").replace(\"{idCase}\", params.idCase) + \"?eventAsTasks=false&onlyUserWorkItems=true&mobileDevice=\" + bizagi.isMobile(),\r\n                type: \"GET\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n\r\n        getCaseAssignees: function(params) {\r\n            var self = this;\r\n            params = params || {};\r\n\r\n            // Required params: idCase\r\n            return $.read(\r\n                self.serviceLocator.getUrl(\"case-handler-getCaseAssignees\"), {\r\n                    idCase: params.idCase\r\n                }\r\n            ).pipe(function(response) {\r\n                    return response;\r\n                });\r\n        },\r\n\r\n        getWorkitems: function(params) {\r\n            var self = this;\r\n            params = params || {};\r\n\r\n            return $.read(self.serviceLocator.getUrl(\"case-handler-getWorkItems\"), {\r\n                idCase: params.idCase,\r\n                onlyUserWorkItems: params.onlyUserWorkItems || \"\"\r\n            });\r\n        },\r\n        /*\r\n         *   Executes a grid export action in the server\r\n         */\r\n        getGridExportUrl: function(params) {\r\n\r\n            var self = this,\r\n                url = this.serviceLocator.getUrl(\"render-upload-data-url\"),\r\n                data = {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"PROCESSPROPERTYVALUE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"propertyName\"] = params.exportType; //\"data\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"disposition\"] = params.disposition;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sort\"] = params.sort;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = params.sessionId;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"idForm\"] = params.idForm;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            (params.contexttype) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype : \"\";\r\n\r\n            return self.verifyPathToBase(bizagi.services.ajax.pathToBase, url) + \"?\" + jQuery.param(data) + \"&xsrf=\" + bizagi.getXSRFToken();\r\n        },\r\n\r\n        /*\r\n         * Executes a send email action in the server\r\n         */\r\n        sendEmail: function(params) {\r\n            var self = this;\r\n            params = params || {};\r\n\r\n            var data = {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"PROCESSPROPERTYVALUE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"propertyName\"] = params.property || \"sendEmail\";\r\n            (params.xpathContext) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext : \"\";\r\n\r\n            // Email parameters\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"to\"] = params.to;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"subject\"] = params.subject;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"message\"] = params.message;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"selected\"] = JSON.encode(params.selected);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            var url = params.url || self.serviceLocator.getUrl(\"form-get-data\");\r\n\r\n            return $.create(url, data);\r\n        },\r\n\r\n        /*\r\n         * Request to invalidates page cache in server, since it is no needed anymore\r\n         */\r\n        invalidatePageCache: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"INVALIDATEPAGECACHE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"form-submit-data\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"INVALIDATEPAGECACHE\"\r\n            });\r\n        },\r\n\r\n        /*\r\n         * Search users usign parameters suchs as userName, fullName, domain and organization\r\n         * @params { domain: (string), userName: (string), fullName: (string), organization: (string), page: (int), pageSize: (int) }\r\n         * @return {deferred} ajax object with JSON content\r\n         */\r\n        getUsersList: function(params) {\r\n            var self = this;\r\n\r\n            return $.read(self.serviceLocator.getUrl(\"admin-getUsersList\"), params);\r\n        },\r\n        /*\r\n         * Search users for preferences usign parameters suchs as userName, fullName, domain and organization\r\n         * @params { domain: (string), userName: (string), fullName: (string), organization: (string), page: (int), pageSize: (int) }\r\n         * @return {deferred} ajax object with JSON content\r\n         */\r\n        getUsersListFromPreferences: function(params) {\r\n            return $.read(this.serviceLocator.getUrl(\"admin-getUsersList-FromPreferences\"), params);\r\n        },\r\n\r\n        /*\r\n         * Search users for Stakeholders\r\n         * @params { domain: (string), userName: (string), fullName: (string), organization: (string), page: (int), pageSize: (int) }\r\n         * @return {deferred} ajax object with JSON content\r\n         */\r\n        getUsersListForStakeholders: function(params) {\r\n            return $.read(this.serviceLocator.getUrl(\"admin-getUsersList-ForStakeholders\"), params);\r\n        },\r\n\r\n        /*\r\n         * Search users usign parameters suchs as userName, fullName, domain and organization\r\n         * @params { domain: (string), userName: (string), fullName: (string), organization: (string), page: (int), pageSize: (int) }\r\n         * @return {deferred} ajax object with JSON content\r\n         */\r\n        getUsersForAssignation: function(params) {\r\n            var self = this;\r\n\r\n            return $.read(self.serviceLocator.getUrl(\"admin-getUsersForAssignation\"), params);\r\n        },\r\n\r\n        /**\r\n         * Get Users Creation/Edition Form\r\n         */\r\n        getUsersForm: function(params) {\r\n            var self = this;\r\n            return $.create(self.serviceLocator.getUrl(\"admin-usersform\"), params);\r\n        },\r\n        /**\r\n         *   Return generate Data To Send By Email\r\n         */\r\n        generateDataToSendByEmail: function(params) {\r\n            var self = this;\r\n            params = params || {};\r\n            var data = {\r\n                action: \"GenerateDataToSendByEmail\",\r\n                idUser: params.idUser,\r\n                password: params.password\r\n            };\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: self.serviceLocator.getUrl(\"admin-GenerateDataToSendByEmail\"),\r\n                data: params,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n        /**\r\n         * Return generate Send user password Mail\r\n         */\r\n        sendUserEmail: function(params) {\r\n            var self = this;\r\n            params = params || {};\r\n            var data = {\r\n                action: \"SendUserEmail\",\r\n                emailTo: params.eMailTo,\r\n                subject: params.subject,\r\n                body: params.body\r\n            };\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: self.serviceLocator.getUrl(\"admin-sendUserEmail\"),\r\n                data: params,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get bizagi configuration\r\n         * @param {Function}   type callback function when the file load is succed\r\n         * @return {deferred} ajax object with JSON content\r\n         */\r\n        getConfiguration: function() {\r\n            var self = this;\r\n            var url = self.serviceLocator.getUrl(\"admin-users-config\");\r\n\r\n            return $.read(url);\r\n        },\r\n\r\n        /**\r\n         * Validate if url has 'http' string, in that case is not necesary add the pathToBase prefix\r\n         */\r\n        verifyPathToBase: function(pathToBase, url) {\r\n\r\n            if (url.indexOf(\"http\") != -1 && pathToBase != \"\") {\r\n                return url;\r\n            } else {\r\n                return pathToBase + url;\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * Get template of entity\r\n         * @param params { guid, prepare}\r\n         */\r\n        getTemplate: function(params) {\r\n            var self = this;\r\n            var data = {};\r\n            params = params || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"LOADTEMPLATE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = \"entity\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidEntity\"] = params.guid;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"isProcessData\"] = params.forcePersonalizedColumns;\r\n\r\n            if (params.templateType) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"templatetype\"] = params.templateType;\r\n            }\r\n\r\n            if (params.templateGuid) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"templateguid\"] = params.templateGuid;\r\n            }\r\n\r\n            if (params.isDefaultTemplate != undefined) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"isDefaultTemplate\"] = params.isDefaultTemplate;\r\n            }\r\n\r\n            // Fix device type since on mobility there are tablet_ios, tablet_android, smartphone_ios, smartphone_ios\r\n            // and the service recives either tablet or smartphone\r\n            var deviceType = bizagi.util.detectDevice();\r\n            if (bizagi.util.isTabletDevice()) {\r\n                deviceType = \"tablet\";\r\n            } else if (bizagi.util.isSmartphoneDevice()) {\r\n                deviceType = \"mobile\";\r\n            }\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"devicetype\"] = deviceType;\r\n\r\n            // When prepare is true just return data, this feature is used by multiaction service\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            return $.create(self.serviceLocator.getUrl(\"form-get-data\"), data);\r\n        },\r\n\r\n        /**\r\n         * Chek if an entity has startform\r\n         * @param params\r\n         * @return {*}\r\n         */\r\n        hasStartForm: function(params) {\r\n            var self = this;\r\n            var data = {};\r\n\r\n            if (params.guidWFClass) {\r\n                data.guidWFClass = params.guidWFClass;\r\n            }\r\n\r\n            return $.read(self.serviceLocator.getUrl(\"render-processes-startform\"), data);\r\n        },\r\n\r\n        /**\r\n         * Get the start form of the case\r\n         * @param params\r\n         * @return {*}\r\n         */\r\n        getStartForm: function(params) {\r\n            var self = this;\r\n            var data = {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"LOADSTARTFORM\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidprocess\"] = params.guidprocess;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"isActionStartForm\"] = true;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"devicetype\"] = self.deviceType;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"devicecode\"] = self.deviceCode;\r\n\r\n            if (params.idStartScope) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idStartScope\"] = params.idStartScope;\r\n            }\r\n            if (params.idCase) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idCase\"] = params.idCase;\r\n            }\r\n            if (params.idStartScope) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idStartScope\"] = params.idStartScope;\r\n            }\r\n            if (params.idWorkitem) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idWorkitem\"] = params.idWorkitem;\r\n            }\r\n            if (params.additionalXpaths) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"additionalXpaths\"] = params.additionalXpaths;\r\n            }\r\n            if (params.surrogatedKey) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"surrogatedKey\"] = params.surrogatedKey;\r\n            }\r\n            if (params.recordXpath) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"recordlauncherxpath\"] = params.recordXpath;\r\n            }\r\n            if (params.mappingstakeholders) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"mappingstakeholders\"] = params.mappingstakeholders;\r\n            }\r\n\r\n            return $.ajax({\r\n                url: self.serviceLocator.getUrl(\"form-get-data\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                cache: true\r\n            });\r\n        },\r\n        /*\r\n         *   Start a link form edition\r\n         */\r\n        editActionForm: function(params) {\r\n            // Actually it does the same than edit grid records\r\n            return this.editGridRecord(params);\r\n        },\r\n\r\n        /**\r\n         * Get list of actions in action launcher\r\n         * @param params\r\n         * @return {*}\r\n         */\r\n        getActions: function(params) {\r\n            var self = this;\r\n            var extendParams = $.extend(params, { prepare: true });\r\n\r\n            var data = self.getPropertyData(extendParams) || [];\r\n\r\n            if (params.ptags) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"tags\"] = params.ptags;\r\n            }\r\n\r\n            if (params.pmaxitems) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"maxitems\"] = params.pmaxitems;\r\n            }\r\n\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-property-refresh\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: params.dataType || \"json\",\r\n                serviceType: \"PROCESSPROPERTYVALUE\",\r\n                beforeSend: function(xhr, status) {\r\n                    bizagi.multiactionConnection = bizagi.multiactionConnection || [];\r\n                    bizagi.multiactionConnection.push(xhr);\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        /**\r\n         * Execute actions or constructors\r\n         * @param params\r\n         */\r\n        executeActions: function(params) {\r\n            var self = this;\r\n            var extendParams = $.extend({}, params, { prepare: true });\r\n            var data = self.getPropertyData(extendParams) || [];\r\n\r\n            if (params.pguidConstructor) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"guidConstructor\"] = params.pguidConstructor;\r\n            }\r\n\r\n            if (params.pguidAction) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"guidAction\"] = params.pguidAction;\r\n            }\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-property-refresh\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: params.dataType || \"json\",\r\n                serviceType: \"PROCESSPROPERTYVALUE\"\r\n            });\r\n\r\n        },\r\n\r\n        /**\r\n         * Get list of actions in action launcher\r\n         * @param params\r\n         * @return {*}\r\n         */\r\n        getPolymorphicActions: function(params) {\r\n            var self = this;\r\n            var extendParams = $.extend(params, { prepare: true });\r\n            var data = self.getPropertyData(extendParams) || [];\r\n\r\n            if (params.ptags) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"tags\"] = params.ptags;\r\n            }\r\n\r\n            if (params.additionalXpaths) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"additionalXpaths\"] = params.additionalXpaths;\r\n            }\r\n\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-property-refresh\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: params.dataType || \"json\",\r\n                serviceType: \"PROCESSPROPERTYVALUE\"\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Make a JSON tree of polymorphic constructors categories\r\n         * @param values\r\n         * @return {Array}\r\n         */\r\n        serializePolymorphicActions: function(values) {\r\n            // json serializer\r\n            var actions = [];\r\n            var GUID_ENTITY = 0, DISPLAY_NAME = 1, XPATHCONTEXT = 2, TYPE = 3, GUID_OBJECT = 4, GUID_CONSTRUCTOR = 5, GUID_PARENT_ENTITY = 6;\r\n\r\n            /**\r\n             * Get children by guid of entity\r\n             * @param guid\r\n             * @return {Array}\r\n             */\r\n            var getChildren = function(guid) {\r\n                var children = [];\r\n                guid = guid || \"\";\r\n\r\n                $.each(values, function(key, value) {\r\n                    if (value[GUID_PARENT_ENTITY] == guid) {\r\n                        children.push(value);\r\n                    }\r\n                });\r\n                return children;\r\n            };\r\n\r\n            /**\r\n             * Get parents by action object\r\n             * @param node\r\n             * @return {string}\r\n             */\r\n            var getParents = function(node) {\r\n                node = node || {};\r\n                var parents = \"\";\r\n\r\n                $.each(values, function(key, value) {\r\n                    if (value[GUID_ENTITY] == node[GUID_PARENT_ENTITY]) {\r\n                        parents += getParents(value) + value[DISPLAY_NAME] + \" > \";\r\n                    }\r\n                });\r\n                return parents;\r\n            };\r\n\r\n\r\n            /**\r\n             * Make a tree of actions\r\n             * @param list\r\n             * @param guid\r\n             * @return {*}\r\n             */\r\n            var fillTree = function(list, guid) {\r\n                var node;\r\n                var children = getChildren(guid);\r\n                $.each(children, function(key, value) {\r\n                    var child = fillTree([], value[GUID_ENTITY]);\r\n                    node = {\r\n                        \"guidEntity\": value[GUID_ENTITY],\r\n                        \"displayName\": value[DISPLAY_NAME],\r\n                        \"hasConstructor\": (value[GUID_CONSTRUCTOR]) ? true : false,\r\n                        \"type\": value[TYPE],\r\n                        \"guidObject\": value[GUID_OBJECT],\r\n                        \"guidConstructor\": value[GUID_CONSTRUCTOR],\r\n                        \"xpathContext\": value[XPATHCONTEXT],\r\n                        \"children\": child,\r\n                        \"parents\": getParents(value)\r\n                    };\r\n                    if (node.guidConstructor !== \"\" || node.children.length > 0) {\r\n                        list.push(node);\r\n                    }\r\n                });\r\n\r\n                return list;\r\n            };\r\n            fillTree(actions, \"\");\r\n            return actions;\r\n        },\r\n\r\n        /**\r\n         * Gets the image for an entity xpath\r\n         * @param params\r\n         */\r\n        getEntityImage64: function(params) {\r\n            var self = this,\r\n                data = {\r\n                    width: params.data,\r\n                    height: params.height,\r\n                    xpath: params.xpath\r\n                },\r\n                url = self.serviceLocator.getUrl(\"render-entity-layout-image64\").replace(\"{entity}\", params.entity).replace(\"{surrogateKey}\", params.surrogateKey);\r\n\r\n            return $.ajax({\r\n                url: url,\r\n                data: data\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get data files when user access from my stuff, because there is no scope\r\n         */\r\n        getFilesDataForLayoutUploadControl: function(params) {\r\n            var self = this;\r\n            return $.read(self.serviceLocator.getUrl(\"render-entity-layout-upload-files\"), params);\r\n        },\r\n\r\n        /**\r\n         * Process an upload file into the server\r\n         * @param {} params\r\n         * @returns {}\r\n         */\r\n        processUploadFile: function(params) {                \r\n            return $.ajax({\r\n                url: this.verifyMobilePathToBase(bizagi.services.ajax.pathToBase || \"\", params.url),\r\n                data: params.formData,\r\n                type: \"POST\",\r\n                contentType: false,\r\n                processData: false\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Commit an add or edit request for a grid\r\n         * @param params\r\n         * @returns {*}\r\n         */\r\n        commitGridAction: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"COMMIT\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Sending rollback request for grid '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-grid-commit-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"COMMIT\"\r\n            });\r\n        },\r\n        /*\r\n         *   Commit an add or edit request for a grid\r\n         */\r\n        sendCheckpointAction: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"CHECKPOINT\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Sending checkpoint request for grid '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-grid-checkpoint-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"CHECKPOINT\"\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Validate if url has 'http' string, in that case is not necesary add the pathToBase prefix\r\n         */\r\n        verifyMobilePathToBase: function(pathToBase, url) {\r\n            return bizagi.util.isMashupContext() ? (url || \"\").replaceAll(pathToBase, \"\"): url;                \r\n        }\r\n\r\n    });\r\n","/*\r\n *   Name: BizAgi Rendering Services\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This class will provide a facade to access to multiaction rendering REST services\r\n */\r\n$.Class.extend(\"bizagi.render.services.multiactionservice\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: \"p_\",\r\n    BA_CONTEXT_PARAMETER_PREFIX: \"h_\",\r\n    BA_PAGE_CACHE: \"pageCacheId\"\r\n}, {\r\n\r\n    /* \r\n    *   Constructor\r\n    */\r\n    init: function (service) {\r\n        this.service = service;\r\n        this.serviceLocator = service.serviceLocator;\r\n\r\n        // Multiaction - batch stuff\r\n        this.batch = {};\r\n        this.batchTimer = 50;\r\n        this.circularDependencies = new bizagi.circularDependencies();\r\n\r\n        // Create proxyed version of methods\r\n        this.replicateServiceMethods();\r\n    },\r\n\r\n    /*\r\n    *   Returns the internal service\r\n    */\r\n    getService: function () {\r\n        return this.service;\r\n    },\r\n\r\n    /*\r\n    *   Create a proxied multiaction version for service calls\r\n    */\r\n    replicateServiceMethods: function () {\r\n        var self = this;\r\n        for (var key in this.service.Class.prototype) {\r\n            // Omit the folowing methods\r\n            if (key == \"init\" || key == \"constructor\" || key == \"Class\" || key == \"multiaction\") continue;\r\n\r\n            // Replicate instance methods\r\n            self[key] = eval('var tmp = function(){ return this.proxyMethod(this.getService().' + key + ', arguments);};tmp');\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Perform the proxy call for each service method\r\n    */\r\n    proxyMethod: function (method, arguments) {\r\n        var service = this.service;\r\n\r\n        // Check if has only one argument, else execute directly\r\n        if (!arguments || arguments.length != 1) {\r\n            return method.apply(service, arguments);\r\n        }\r\n\r\n        // Check if the argument is object, else execute directly\r\n        if (typeof (arguments[0]) != \"object\") {\r\n            return method.apply(service, arguments);\r\n        }\r\n\r\n        var params = arguments[0];\r\n\r\n        // If the caller is requesting a prepare call, just execute the method with the current arguments\r\n        if (params.prepare == true) return method.apply(service, arguments);\r\n\r\n        // Prepare the ajax instead of sending it\r\n        params.prepare = true;\r\n        var action = method.apply(service, arguments);\r\n\r\n        return this.add(action);\r\n    },\r\n\r\n    /**\r\n    * This method make a standard error message\r\n    */\r\n    makeCircularDependenciesError: function (error) {\r\n        var messageTmpl = bizagi.localization.getResource(\"render-actions-loop-validation\");\r\n\r\n        return printf(messageTmpl, error.dependencyFrom, error.dependencyTo);\r\n    },\r\n\r\n\r\n    /*\r\n    *   Add an action to be performed in a multiaction, and be resolved later\r\n    *   returns a deferred\r\n    */\r\n    add: function (action) {\r\n        var self = this;\r\n        var deferred = new $.Deferred();\r\n\r\n        var name = action.h_action || \"unnamed\";\r\n\r\n        // Put here all actions to ignore in circular dependencies\r\n        var exceptionActions = [\"PROCESSPROPERTYVALUE\", \"LOADTEMPLATE\", \"ADDRELATIONWITHDATA\"];\r\n\r\n        if (exceptionActions.indexOf(name) < 0 && bizagi.override.detectCircularDependencies) {\r\n            self.circularDependencies.addNode(name, action);\r\n        }\r\n\r\n        // First clear previous timeout\r\n        clearTimeout(self.batchTimeout);\r\n        var tag = action.tag = Math.guid();\r\n        var singleAction = { action: action, deferred: deferred };\r\n        self.batch[tag] = singleAction;\r\n\r\n        // Start a new timeout\r\n        self.batchTimeout = setTimeout(function () {\r\n            var resolveDependencies = self.circularDependencies.resolve();\r\n\r\n            if (resolveDependencies.error) {\r\n                // Reset Queue\r\n                for (var i in self.batch) {\r\n                    var message = resolveDependencies.error.multiactionError;\r\n                    self.batch[i].deferred.reject(message);\r\n                }\r\n                self.batch = {};\r\n            } else {\r\n                self.fire();\r\n            }\r\n        }, self.batchTimer);\r\n\r\n        return deferred.promise();\r\n    },\r\n    /*\r\n    *   Fires up the multiaction\r\n    */\r\n    fire: function () {\r\n        var self = this;\r\n        var batch = {};\r\n\r\n        // Prepare actions and clone batch manually\r\n        var actions = [];\r\n        $.each(self.batch, function (tag, item) {\r\n            actions.push(item.action);\r\n            batch[tag] = item;\r\n        });\r\n\r\n        // Reset batch\r\n        self.batch = {};\r\n\r\n        // Fire ajax \r\n        $.when(self.execute({ actions: actions, rejectDeferreds: false }))\r\n                .done(function (responses) {\r\n\r\n                    // Process each response\r\n                    $.each(responses, function (i, response) {\r\n                        var tag = response.tag;\r\n                        if (!response.error) {\r\n                            batch[tag].deferred.resolve(response.result);\r\n                        } else {\r\n                            batch[tag].deferred.reject(response.error, response, response.error.message);\r\n                        }\r\n\r\n                        // Remove paired tag from collection\r\n                        delete batch[tag];\r\n                    });\r\n\r\n                    // Check if there are unpaired actions so we need to trigger fail deferred\r\n                    $.each(batch, function (i, item) {\r\n                        item.deferred.reject({ type: \"not-processed\", message: \"Operation didn't executed\" }, '', \"Operation didn't executed\");\r\n                    });\r\n                }).fail(function (xhr, type, error) {\r\n\r\n                    // Check if there are unpaired actions so we need to trigger fail deferred\r\n                    var errorMessage = typeof (error) !== \"undefined\" ? error.message : (error || \"Operation didn't executed\");\r\n                    $.each(batch, function (i, item) {\r\n                        item.deferred.reject({ type: \"not-processed\", message: errorMessage }, '', \"Operation didn't executed\");\r\n                    });\r\n                });\r\n    },\r\n    /*\r\n    *   Sends a multiaction to the server\r\n    */\r\n    execute: function (params) {\r\n        var self = this;\r\n\r\n        // Define data\r\n        var data = {};\r\n        var rejectDeferreds = params.rejectDeferreds !== undefined ? params.rejectDeferreds : true;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"multiaction\";\r\n\r\n        // Check action tag\r\n        $.each(params.actions, function (i, action) {\r\n            action[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"tag\"] = action.tag || i;\r\n            delete action.tag;\r\n        });\r\n\r\n        // Fill optional parameters\r\n        params = params || {};\r\n        if (params.actions) {\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"actions\"] = JSON.encode(params.actions);\r\n        }\r\n\r\n        // Log submit data\r\n        bizagi.debug(\"Performing multi-action\", data);\r\n\r\n        // Call ajax and returns promise\r\n        var deferred = new $.Deferred();\r\n        $.ajax({\r\n            url: self.serviceLocator.getUrl(\"render-multiaction\"),\r\n            data: data,\r\n            type: \"POST\",\r\n            dataType: \"json\",\r\n            serviceType: \"MULTIACTION\",\r\n            beforeSend: function (xhr, status) {\r\n                bizagi.multiactionConnection = bizagi.multiactionConnection || [];\r\n                bizagi.multiactionConnection.push(xhr);\r\n            }\r\n\r\n        }).done(function (responses) {\r\n            for (i in responses) {\r\n                if (typeof responses[i] !== \"function\") {\r\n                    var response = responses[i];\r\n                    if (response.error) {\r\n                        if (rejectDeferreds) {\r\n                            deferred.reject(this, \"servererror\", response);\r\n                            return;\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n            deferred.resolve(responses);\r\n\r\n        }).fail(function (xhr) {\r\n            var response = xhr.responseText || xhr;\r\n            var finalResponse;\r\n            // Try to parse the response\r\n            try {\r\n                finalResponse = JSON.parse(response);\r\n            } catch (e) { }\r\n            deferred.reject(xhr, \"servererror\", finalResponse);\r\n        });\r\n\r\n        return deferred.promise();\r\n    }\r\n});\r\n","/*\r\n *   Name: BizAgi Rendering Services\r\n *   Author: Einer Perez\r\n *   Comments:\r\n *   -   This class will provide a facade to access to multiaction rendering REST services\r\n */\r\nbizagi.render.services.multiactionservice.extend(\"bizagi.render.services.metadatamultiactionservice\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: \"p_\",\r\n    BA_CONTEXT_PARAMETER_PREFIX: \"h_\",\r\n    BA_PAGE_CACHE: \"h_pageCacheId\"\r\n}, {\r\n\r\n    /*\r\n    *   Sends a multiaction to the server\r\n    */\r\n    execute: function (params) {\r\n        var self = this;\r\n\r\n        // Define data\r\n        var data = {};\r\n        var rejectDeferreds = params.rejectDeferreds !== undefined ? params.rejectDeferreds : true;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"multiaction\";\r\n\r\n        // Check action tag\r\n        $.each(params.actions, function (i, action) {\r\n            action[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"tag\"] = action.tag || i;\r\n            if (action[self.Class.BA_PAGE_CACHE]) {\r\n                data[self.Class.BA_PAGE_CACHE] = action[self.Class.BA_PAGE_CACHE];\r\n            }\r\n            delete action[self.Class.BA_PAGE_CACHE];\r\n            delete action.tag;\r\n        });\r\n\r\n        // Fill optional parameters\r\n        params = params || {};\r\n        if (params.actions) {\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"actions\"] = JSON.encode(params.actions);\r\n        }\r\n\r\n        // Log submit data\r\n        bizagi.debug(\"Performing multi-action metadata\", data);\r\n\r\n        // Call ajax and returns promise\r\n        var deferred = new $.Deferred();\r\n        $.ajax({\r\n            url: self.serviceLocator.getUrl(\"render-multiaction-metadata\"),\r\n            data: data,\r\n            type: \"POST\",\r\n            dataType: \"json\",\r\n            serviceType: \"MULTIACTION\",\r\n            beforeSend: function (xhr, status) {\r\n                bizagi.multiactionConnection = bizagi.multiactionConnection || [];\r\n                bizagi.multiactionConnection.push(xhr);\r\n            }\r\n\r\n        }).done(function (responses) {\r\n            for (i in responses) {\r\n                if (typeof responses[i] !== \"function\") {\r\n                    var response = responses[i];\r\n                    if (response.error) {\r\n                        if (rejectDeferreds) {\r\n                            deferred.reject(this, \"servererror\", response);\r\n                            return;\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n            deferred.resolve(responses);\r\n\r\n        }).fail(function (xhr) {\r\n            var response = xhr.responseText || xhr;\r\n            var finalResponse;\r\n            // Try to parse the response\r\n            try {\r\n                finalResponse = JSON.parse(response);\r\n            } catch (e) { }\r\n            deferred.reject(xhr, \"servererror\", finalResponse);\r\n        });\r\n\r\n        return deferred.promise();\r\n    }\r\n});\r\n","/*\r\n *   Name: BizAgi Rendering Command controller \r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define basic stuff for action and validation controllers\r\n */\r\n\r\n$.Class.extend(\"bizagi.command.controllers.controller\", {\r\n    /* \r\n    *   Set to true in order to debug\r\n    */\r\n    THROW_ERROR: true\r\n\r\n}, {\r\n    /*  \r\n    *   Constructor\r\n    */ \r\n    init: function (form) {\r\n        this.form = form;\r\n        this.dateFormat = form.getResource(\"dateFormat\");\r\n    },\r\n    /*\r\n    *   Returns the condition in JS\r\n    */\r\n    buildConditions: function (conditions, bGridDetected, bCheckEditability) {\r\n        var self = this;\r\n        var operator = conditions.expressions && conditions.expressions.length > 1 ? self.buildConditionOperator(conditions.operator) : conditions.operator;\r\n\r\n        // Define if a grid has been detected\r\n        bGridDetected = bGridDetected || false;\r\n        bCheckEditability = bCheckEditability || false;\r\n\r\n        //  Validate trtue and false conditions\r\n        if (operator == \"true\")\r\n            return \"true\";\r\n        if (operator == \"false\")\r\n            return \"false\";\r\n\r\n        var sJsCondition = \"\";\r\n\r\n        for (var i = 0; i < conditions.expressions.length; i++) {\r\n            var expression = conditions.expressions[i];\r\n\r\n            if (expression.simple) {\r\n                var bGDetected = self.searchGridReferenceInCondition(expression.simple);\r\n                sJsCondition += self.buildSimpleCondition(expression.simple, bGDetected, bCheckEditability);\r\n\r\n            } else if (expression.complex) {\r\n                sJsCondition += \"(\" + self.buildConditions(expression.complex, bGridDetected, bCheckEditability) + \") \";\r\n            }\r\n\r\n            // Adds operator\r\n            sJsCondition += (i < conditions.expressions.length - 1 ? operator : \"\");\r\n        }\r\n\r\n        return sJsCondition;\r\n    },\r\n    /*\r\n    *   Builds the condition operator\r\n    */\r\n    buildConditionOperator: function (conditionsOperator) {\r\n        if (conditionsOperator == \"and\")\r\n            return \" && \";\r\n        if (conditionsOperator == \"or\")\r\n            return \" || \";\r\n        return conditionsOperator;\r\n    },\r\n    /*\r\n    *   Builds a simple condition\r\n    */\r\n    buildSimpleCondition: function (condition, bGridDetected, bCheckEditability) {\r\n        var self = this;\r\n        var sXpath;\r\n        var xpath;\r\n        var sArgument = \"\";\r\n        var operator = condition.operator;\r\n        var ensureValueJs = \"\";\r\n        var ensureEditable = \"\";\r\n\r\n        // Define if a grid has been detected\r\n        bGridDetected = bGridDetected || false;\r\n        bCheckEditability = bCheckEditability || false;\r\n\r\n        // List of controls excluded to editability validation\r\n        // Just keep empty the value of element\r\n        var excludeEditabilityRule = { \"boolean\": \"\" };\r\n        var control =  (condition.xpath && condition.renderId) ? \r\n                        condition.xpath + '.' + condition.renderId : \r\n                        condition.xpath || condition.renderId;                       \r\n\r\n        \r\n        if (bGridDetected && condition.containerId){\r\n            var gridXpathInfo = self.processGridXpath(condition.xpath)            \r\n            control = gridXpathInfo.gridXpath + \".\" + condition.containerId + \"[].\" + gridXpathInfo.remainingXpath + \".\" + condition.renderId;            \r\n        }\r\n\r\n\r\n        var detectedArgumentType = self.detectConditionArgumentType(control, condition.argumentType);\r\n\r\n        // Build xpath\r\n        sXpath = self.buildXpath(control, detectedArgumentType, bGridDetected);\r\n        if (detectedArgumentType != \"boolean\") {\r\n            ensureValueJs += \"!bizagi.util.isEmpty(\" + sXpath + \") && \";\r\n        }\r\n\r\n        // Check if the render is editable, only when the parameter is provided\r\n        if (bCheckEditability && control && control.length > 0 && !excludeEditabilityRule.hasOwnProperty(detectedArgumentType)) {\r\n            ensureEditable = \"self.isVisible('\" + control + \"') && self.isEditable('\" + control + \"') && \";\r\n        }\r\n\r\n        // Build argument\r\n        if (!bizagi.util.isEmpty(condition.argument)) {\r\n            sArgument = self.buildArgument(condition.argument, detectedArgumentType, bGridDetected);\r\n\r\n            // If the argument is xpath it must be filled to for some operators\r\n            if (detectedArgumentType == \"xpath\") {\r\n                ensureValueJs += \"!bizagi.util.isEmpty(\" + sArgument + \") && \";\r\n            }\r\n\r\n        } else if (condition.argument === \"\") {\r\n            // Also check the case when the argument is empty\r\n            sArgument = \"\\\"\\\"\";\r\n        }\r\n\r\n        // Build condition\r\n\r\n        if (operator == \"includes\") {\r\n            return ensureEditable + ensureValueJs + \"self.includes(\" + sXpath + \",\" + sArgument + \") \";\r\n        }\r\n        //if (operator == \"changes\") return \"true\";\r\n        if (operator == \"changes\") {\r\n            return \"self.isChanged(\" + sXpath + \", params.changed)\";\r\n        }\r\n        if (operator == \"equals\")\r\n            return ensureEditable + ensureValueJs + sXpath + \" == \" + sArgument;\r\n        if (operator == \"not-equals\")\r\n            return ensureEditable + sXpath + \" != \" + sArgument;\r\n        if (operator == \"less-than\")\r\n            return ensureEditable + ensureValueJs + sXpath + \" < \" + sArgument;\r\n        if (operator == \"less-equals-than\")\r\n            return ensureEditable + ensureValueJs + sXpath + \" <= \" + sArgument;\r\n        if (operator == \"greater-than\")\r\n            return ensureEditable + ensureValueJs + sXpath + \" > \" + sArgument;\r\n        if (operator == \"greater-equals-than\")\r\n            return ensureEditable + ensureValueJs + sXpath + \" >= \" + sArgument;\r\n        if (operator == \"like\")\r\n            return ensureEditable + ensureValueJs + sXpath + \".toString().indexOf(\" + sArgument + \") >= 0 \";\r\n        if (operator == \"is-empty\") {\r\n            if (detectedArgumentType != \"entity\") {\r\n                return ensureEditable + \"bizagi.util.isEmpty(\" + sXpath + \")\";\r\n            } else {\r\n                return ensureEditable + \"(\" + sXpath + \" == 0 || bizagi.util.isEmpty(\" + sXpath + \"))\";\r\n            }\r\n        }\r\n        if (operator == \"is-not-empty\") {\r\n            if (detectedArgumentType != \"entity\") {\r\n                return ensureEditable + \"!bizagi.util.isEmpty(\" + sXpath + \")\";\r\n            } else {\r\n                return ensureEditable + \"(\" + sXpath + \" != 0 && !bizagi.util.isEmpty(\" + sXpath + \"))\";\r\n            }\r\n        }\r\n        if (operator == \"is-true\")\r\n            return ensureEditable + \"( \" + sXpath + \" == true || \" + sXpath + \" == 'true' )\";\r\n        if (operator == \"is-false\")\r\n            return ensureEditable + \"( \" + sXpath + \" == false || \" + sXpath + \" == 'false' || \" + sXpath + \" == 'False' )\";\r\n        if (operator == \"does-not-contain\")\r\n            return ensureEditable + ensureValueJs + sXpath + \".toString().indexOf(\" + sArgument + \") < 0 \";\r\n        if (operator == \"contains\")\r\n            return ensureEditable + ensureValueJs + sXpath + \".toString().indexOf(\" + sArgument + \") >= 0 \";\r\n        if (operator == \"begins-with\")\r\n            return ensureEditable + ensureValueJs + sXpath + \".toString().startsWith(\" + sArgument + \") == true \";\r\n        if (operator == \"does-not-begins-with\")\r\n            return ensureEditable + ensureValueJs + sXpath + \".toString().startsWith(\" + sArgument + \") == false \";\r\n        if (operator == \"file-uploaded\") {\r\n            xpath = control;\r\n            if (bGridDetected && xpath) {\r\n                xpath = xpath.replaceAll(\"[]\", \"[' + i + ']\");\r\n            }\r\n            return ensureEditable + \"self.isFileUploaded('\" + xpath + \"') \";\r\n        }\r\n        if (operator == \"file-not-uploaded\") {\r\n            xpath = control;\r\n            if (bGridDetected && xpath) {\r\n                xpath = xpath.replaceAll(\"[]\", \"[' + i + ']\");\r\n            }\r\n            return ensureEditable + \"!self.isFileUploaded('\" + xpath + \"') \";\r\n        }\r\n        if (operator == \"is-invalid-email\")\r\n            return ensureEditable + \"!self.isValidEmail(\" + sXpath + \") \";\r\n        if (operator == \"letter-edited\")\r\n            return \"false\"; //TODO\r\n        if (operator == \"letter-not-edited\")\r\n            return \"false\"; //TODO\r\n        if (operator == \"cell-change\")\r\n            return \"column == \" + sArgument;\r\n\r\n        if (operator == \"on-press\") {\r\n            if (bGridDetected) {\r\n                var id = self.buildXpath(control, \"id\", bGridDetected);\r\n                return \"self.isGridButtonPressed(\" + id + \", params.pressed)\";\r\n            } else {\r\n                return \"self.isButtonPressed('\" + control + \"', params.pressed)\";\r\n            }\r\n        }\r\n\r\n        // ondelete behavior on grid control  \r\n        if (operator == 'on-deleted-row') {\r\n            xpath = control || \"\";\r\n            return \"self.onDeletedGridRow('\" + xpath + \"', params.rowDeleted)\";\r\n        }\r\n\r\n        // If there is another operator code throw exception\r\n        throw new \"There is no implementation for operator code \" + operator;\r\n    },\r\n    /*\r\n    *   Detects the argument type based on the render\r\n    */\r\n    detectConditionArgumentType: function (control, argumentType) {\r\n        var self = this;\r\n\r\n        if (argumentType === undefined || argumentType == \"const\") {\r\n\r\n            // Search render\r\n            var form = self.form;\r\n            var render = form.getRender(control) || form.getRenderById(control);\r\n\r\n            // Check if exists the render\r\n            if (render == null) {\r\n                throw new Error(\"RenderNotFoundException in method detectConditionArgumentType of bizagi.command.controllers.controller\");\r\n            }\r\n\r\n            // Check if the render is a grid\r\n            if (render.properties.type == \"grid\") {\r\n                var gridXpath = self.processGridXpath(control);\r\n\r\n                if (gridXpath.remainingXpath === \"\") {\r\n                    // The target is the grid\r\n                    return \"xpath\";\r\n                } else {\r\n                    render = render.getColumn(gridXpath.remainingXpath);\r\n                    if (render == null) {\r\n                        throw new Error(\"RenderNotFoundException in method detectConditionArgumentType of bizagi.command.controllers.controller\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            var dataType = render.properties.dataType;\r\n            var renderType = bizagi.util.normalizeType(render.properties.type);\r\n\r\n            if (self.isRelatedEntityRender(renderType)) {\r\n                return 'entity';\r\n            }\r\n\r\n            // Number\r\n            if (dataType == 1 || dataType == 2 || dataType == 3 || dataType == 4 || dataType == 6 || dataType == 7 || dataType == 10 || dataType == 11) {\r\n                return 'number';\r\n            }\r\n\r\n            // Money\r\n            if (dataType == 8) {\r\n                return 'money';\r\n            }\r\n\r\n            // Date\r\n            if (dataType == 12 || dataType == 13) {\r\n                if (render.properties.showTime == true) {\r\n                    return 'datetime';\r\n                } else {\r\n                    return 'date';\r\n                }\r\n            }\r\n\r\n            // Boolean\r\n            if (dataType == 5) {\r\n                return 'boolean';\r\n            }\r\n\r\n            // Button\r\n            if (renderType == \"button\") {\r\n                return \"button\";\r\n            }\r\n\r\n            // Default\r\n            return 'text';\r\n\r\n        } else if (argumentType == \"xpath\" || argumentType == \"function\" || argumentType == \"entity\") {\r\n            return argumentType;\r\n        }\r\n\r\n        // Default return text\r\n        return 'text';\r\n    },\r\n    /*\r\n    *   Detects if a render type must be binded to a xpath with related entity\r\n    */\r\n    isRelatedEntityRender: function (renderType) {\r\n        return [\"combo\", \"list\", \"radio\", \"search\", \"searchCombo\", \"columnCombo\"].includes(renderType) || /^cascadingcombo$/i.test(renderType);\r\n    },\r\n\r\n    buildXpath: function (xpath, argumentType, bGridDetected) {\r\n        var self = this;\r\n\r\n        // Define if a grid has been detected\r\n        bGridDetected = bGridDetected || false;\r\n\r\n        // Process grid xpaths\r\n        if (bGridDetected) {\r\n            xpath = xpath.replaceAll(\"[]\", \"[' + i + ']\");\r\n        }\r\n\r\n        if (argumentType == 'xpath' && !bGridDetected) {\r\n            return \"self.evalXpath('\" + xpath + \"', '\" + self.detectConditionArgumentType(xpath, \"const\") + \"')\";\r\n        } else if (argumentType == 'id') {\r\n            return \"'\" + xpath + \"'\";\r\n        } else if (argumentType == 'function') {\r\n            var xpathArgumentType = self.detectConditionArgumentType(xpath, \"const\");\r\n            return \"self.evalXpath('\" + xpath + \"', '\" + xpathArgumentType + \"')\";\r\n        } else if (bGridDetected){\r\n            return \"self.evalGridXpath(params, '\" + xpath + \"', '\" + argumentType + \"')\";      \r\n        }\r\n\r\n        return \"self.evalXpath('\" + xpath + \"', '\" + argumentType + \"')\";\r\n    },\r\n    buildArgument: function (argument, argumentType, bGridDetected, xpathContext) {\r\n        var self = this;\r\n        var number;\r\n\r\n        // Define if a grid has been detected\r\n        bGridDetected = bGridDetected || false;\r\n\r\n        if (argumentType == 'text') {\r\n            // Text\r\n            argument = (argument == null) ? \"\" : argument;\r\n            argument = (typeof argument != 'string') ? argument.toString() : argument;\r\n            if (argument.indexOf(\"'\") != -1)\r\n                argument = argument.replaceAll(\"'\", \"\\\\'\");\r\n\r\n            // Remove line breaks because they will fail with the eval command\r\n            if (argument.indexOf(\"\\n\") != -1)\r\n                argument = argument.replaceAll(\"\\n\", \"\");\r\n\r\n            return \"'\" + argument.toString() + \"'\";\r\n        }\r\n        if (argumentType == 'boolean') {\r\n            // Boolean\r\n            if (typeof (argument) == \"string\") {\r\n                return argument == \"Default\" ? argument : (eval(argument.toLowerCase()) == true ? \"true\" : \"false\");\r\n            } else {\r\n                return (eval(argument) == true ? \"true\" : \"false\");\r\n            }\r\n        }\r\n        if (argumentType == 'number') {\r\n            // Number\r\n            number = new Number(argument);\r\n            if (number == NaN)\r\n                return \"-99999999\";\r\n            return number.toString();\r\n        }\r\n        if (argumentType == 'money') {\r\n            // MONEY\r\n            number = new Number(argument);\r\n            if (number == NaN)\r\n                return \"-99999999\";\r\n            return number.toString();\r\n        }\r\n        if (argumentType == 'date') {\r\n            //Date\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(argument);\r\n            if (!date || date == 0)\r\n                date = new Date(0);\r\n\r\n            // Remove time\r\n            date.setHours(0, 0, 0, 0);\r\n\r\n            return \"bizagi.util.dateFormatter.getDateFromInvariant('\" + bizagi.util.dateFormatter.formatInvariant(date) + \"').getTime()\";\r\n        }\r\n        if (argumentType == 'datetime') {\r\n            //Date\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(argument, true);\r\n            if (!date || date == 0) {\r\n                date = new Date(0);\r\n            }\r\n            \r\n            date.setSeconds(0);\r\n            date.setMilliseconds(0);\r\n\r\n            return \"bizagi.util.dateFormatter.getDateFromInvariant('\" + bizagi.util.dateFormatter.formatInvariant(date, true) + \"', true).getTime()\";\r\n        }\r\n        if (argumentType == 'color') {\r\n            // Color\r\n            return \"'\" + argument.toString() + \"'\";\r\n        }\r\n        if (argumentType == 'entity') {\r\n\r\n            if (bizagi.util.isEmpty(argument)) {\r\n                return null;\r\n            }\r\n            try {\r\n                argument = typeof (argument) != \"object\" ? JSON.parse(argument) : argument;\r\n            } catch (e) {\r\n                argument = argument || {};\r\n            }\r\n\r\n\r\n            // Entity value\r\n            var result = argument.id || argument;\r\n            return JSON.stringify(result);\r\n        }\r\n        if (argumentType == 'xpath') {\r\n            // Xpath value\r\n            var xpath = argument.toString();\r\n\r\n            // Process grid xpaths\r\n            if (bGridDetected) {\r\n                xpath = xpath.replaceAll(\"[]\", \"[' + i + ']\");\r\n            }\r\n\r\n            if (xpathContext) {\r\n                xpath = xpathContext + \".\" + xpath;\r\n            }\r\n\r\n            return self.buildXpath(xpath, argumentType, bGridDetected);\r\n        }\r\n        if (argumentType == 'json') {\r\n            // Xpath value\r\n            return JSON.encode(argument);\r\n        }\r\n        if (argumentType == 'function') {\r\n            if (argument == \"BANow\") {\r\n                return \"self.getCurrentDate()\";\r\n            }\r\n            // If there is another function type code throw exception\r\n            throw \"There is no implementation for function \" + argument;\r\n        }\r\n\r\n        if (argumentType == undefined) {\r\n            return null;\r\n        }\r\n\r\n        // If there is another argument type code throw exception\r\n        throw \"There is no implementation for argument type \" + argumentType;\r\n    },\r\n    /*\r\n    *   Evals if an xpath is editable\r\n    */\r\n    isEditable: function (xpath) {\r\n        var self = this;\r\n        // For the submit action we need only one render to perform the server action\r\n        var render = self.getRender(xpath);\r\n        if (render == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        return render.properties.editable;\r\n    },\r\n\r\n    isVisible: function (xpath) {\r\n        var self = this;\r\n\r\n        var render = self.getRender(xpath);\r\n        if (render == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (render.properties.visible) {\r\n            return self.isParentVisible(render.parent);\r\n        } else {\r\n            var renderType = bizagi.util.normalizeType(render.properties.type);\r\n            if (/^hidden$/i.test(renderType)) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    },\r\n\r\n    isParentVisible: function (render) {\r\n        var self = this;\r\n        if (render.parent) {\r\n            if (render.properties.visible) {\r\n                return self.isParentVisible(render.parent);\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return render.properties.visible;\r\n        }\r\n    },\r\n\r\n    /* \r\n    *   Evals an xpath to find a render and return its value\r\n    */\r\n    evalGridXpath: function(params, xpath, argumentType) {\r\n        var self = this;\r\n        \r\n        if (params === undefined){\r\n            return this.evalXpath(xpath, argumentType);\r\n        }\r\n\r\n        var grid = params.grid;\r\n\r\n        if (grid === undefined || grid === null){\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return null;    \r\n        }\r\n\r\n        // Grid renders\r\n        var gridXpath = self.processGridXpath(xpath);\r\n\r\n        // Return the value\r\n        var gridColumn = grid.getColumn(gridXpath.remainingXpath);\r\n\r\n        if (!gridColumn) {\r\n            return false;\r\n            //throw \"There is no a valid render for xpath \" + xpath;\r\n        }\r\n\r\n        var cellValue = grid.getCellCurrentValue(gridXpath.index, gridXpath.remainingXpath);\r\n\r\n        if (gridColumn.properties.type == \"columnRadio\") {\r\n            if (cellValue && !bizagi.util.isString(cellValue)) {\r\n                if (cellValue.length > 0 && cellValue[0].length > 0)\r\n                    cellValue = cellValue[0][0];\r\n                else\r\n                    cellValue = cellValue.id;\r\n            }\r\n            else if(!bizagi.util.isString(cellValue))\r\n                cellValue = 0;\r\n        }\r\n\r\n        if (gridColumn.properties.type == \"columnCombo\") {\r\n            cellValue = (cellValue && cellValue.id) ? cellValue.id : 0;\r\n        }\r\n\r\n        if (gridColumn.properties.type == \"columnSearch\") {\r\n            cellValue = (cellValue && cellValue.id) ? cellValue.id : 0;\r\n        }\r\n\r\n        // Parse empty values\r\n        if (bizagi.util.isEmpty(cellValue)) {\r\n            // If the render is a boolean return false for actions\r\n            if (argumentType == \"boolean\") {\r\n                if (gridColumn.properties.display == \"check\") {\r\n                    return false;\r\n                } else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Parse boolean and non-empty date types\r\n        if ((argumentType == \"boolean\") || (argumentType == \"date\" && !bizagi.util.isEmpty(self.getRender(xpath, argumentType).value))) {\r\n            return eval(self.buildArgument(cellValue, argumentType));\r\n        }\r\n\r\n        if (typeof (gridColumn) != \"undefined\" && typeof (gridColumn.properties) != \"undefined\" && typeof (gridColumn.properties.type) != \"undefined\" && gridColumn.properties.type == \"columnDate\")\r\n            cellValue = bizagi.util.dateFormatter.getDateFromInvariant(cellValue);\r\n\r\n        return cellValue;\r\n    },\r\n\r\n    /* \r\n    *   Evals an xpath to find a render and return its value\r\n    */\r\n    evalXpath: function (xpath, argumentType) {\r\n        var self = this, i, renderToEval;\r\n\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        var rendersToEval = [];\r\n        $.each(renders, function (i, render) {\r\n            if (render.properties.editable) {\r\n                rendersToEval.push(render);\r\n            }\r\n        });\r\n\r\n        // If no render has been found skip editable validation\r\n        if (rendersToEval.length === 0) {\r\n            $.each(renders, function (i, render) {\r\n                rendersToEval.push(render);\r\n            });\r\n        }\r\n\r\n        i = 0;\r\n        while (i < rendersToEval.length) {\r\n            renderToEval = rendersToEval[i++];\r\n            var bIsGrid = (renderToEval.properties.type == 'grid');\r\n            if (!bIsGrid) {\r\n                // Normal renders\r\n                var value = renderToEval.getValue();\r\n                var renderType = bizagi.util.normalizeType(renderToEval.properties.type || \"\");\r\n\r\n                if (argumentType === undefined || argumentType === \"undefined\") {\r\n                    return value;\r\n                }\r\n\r\n                // If the render is a combo and the value is null return 0 for validations and actions\r\n                if ([\"combo\", \"list\", \"search\", \"radio\"].includes(renderType) || /^cascadingcombo$/i.test(renderType)) {\r\n                    if (bizagi.util.isEmpty(value) || value.id == \"\") {\r\n                        value = 0;\r\n                    }\r\n                }\r\n\r\n                if (renderType === \"comboSelected\") {\r\n                    return (typeof value === \"string\") ? JSON.parse(value).value : value;\r\n                }\r\n\r\n                if (bizagi.util.isEmpty(value)) {\r\n                    // If the render is a check and the value is null return false for validations and actions\r\n                    if (renderType === \"boolean\" && renderToEval.properties.display === \"check\") {\r\n                        return false;\r\n                    }\r\n\r\n                    if (bizagi.util.isEmpty(value)) {\r\n                        // If the render is a check and the value is null return false for validations and actions\r\n                        if (renderType === \"boolean\" && renderToEval.properties.display === \"check\") {\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    return value;\r\n                }\r\n\r\n                if (argumentType === \"xpath\") {\r\n                    return eval(self.buildArgument(xpath, argumentType));\r\n                } else {\r\n                    return eval(self.buildArgument(value, argumentType));\r\n                }                \r\n            } else {\r\n\r\n                // Grid renders\r\n                var gridXpath = self.processGridXpath(xpath);\r\n\r\n                // Return the value\r\n                var gridColumn = renderToEval.getColumn(gridXpath.remainingXpath);\r\n\r\n                if (!gridColumn) {\r\n                    continue;\r\n                }\r\n\r\n                var cellValue = renderToEval.getCellCurrentValue(gridXpath.index, gridXpath.remainingXpath);\r\n\r\n                if (gridColumn.properties.type == \"columnRadio\") {\r\n                    if (cellValue && !bizagi.util.isString(cellValue)) {\r\n                        if (cellValue.length > 0 && cellValue[0].length > 0)\r\n                            cellValue = cellValue[0][0];\r\n                        else\r\n                            cellValue = cellValue.id;\r\n                    }\r\n                    else if(!bizagi.util.isString(cellValue))\r\n                        cellValue = 0;\r\n                }\r\n\r\n                if (gridColumn.properties.type == \"columnCombo\" || gridColumn.properties.type == \"columnSearch\" || gridColumn.properties.type == \"columnList\") {\r\n                    if(cellValue && cellValue.id)\r\n                        cellValue = cellValue.id;\r\n                    else if(typeof (cellValue) != \"number\" && typeof (cellValue) != \"string\")\r\n                        cellValue = 0;\r\n                }\r\n\r\n                // Parse empty values\r\n                if (bizagi.util.isEmpty(cellValue)) {\r\n                    // If the render is a boolean return false for actions\r\n                    if (argumentType == \"boolean\") {\r\n                        if (gridColumn.properties.display == \"check\") {\r\n                            return false;\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Parse boolean and non-empty date types\r\n                if ((argumentType == \"boolean\") || (argumentType == \"date\" && !bizagi.util.isEmpty(self.getRender(xpath, argumentType).value))) {\r\n                    return eval(self.buildArgument(cellValue, argumentType));\r\n                }\r\n\r\n                if (typeof (gridColumn) != \"undefined\" && typeof (gridColumn.properties) != \"undefined\" && typeof (gridColumn.properties.type) != \"undefined\" && gridColumn.properties.type == \"columnDate\")\r\n                    cellValue = bizagi.util.dateFormatter.getDateFromInvariant(cellValue);\r\n\r\n                return cellValue;\r\n            }\r\n\r\n            throw \"There is no a valid render for xpath \" + xpath;\r\n        }\r\n\r\n\r\n    },\r\n    /*\r\n    *   Check if the upload render has any files uploaded\r\n    */\r\n    isFileUploaded: function (xpath) {\r\n        var self = this;\r\n\r\n        var value = self.evalXpath(xpath);\r\n\r\n        if (value && value.length) {\r\n            if (value.length > 0)\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    },\r\n    /*\r\n    *   Check if a render has a valid email value\r\n    */\r\n    isValidEmail: function (value) {\r\n        var regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/gi;\r\n        if (value && value.match(new RegExp(regex))) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    /**\r\n    * Compare two elements, data of html and renderId to action\r\n    */\r\n    isButtonPressed: function (control, pressed) {\r\n        // Check if the control is a button\r\n        var render = this.getRenderById(control);\r\n        if (render === null || render.properties.type != \"button\") return false;\r\n\r\n        return pressed;\r\n    },\r\n    /*\r\n    * Compare two elements, data of html and renderId to action\r\n    */\r\n    isGridButtonPressed: function (control, pressed) {\r\n        // Check if the control is a button\r\n        var arrGridXpath = this.processGridXpath(control);\r\n        var gridXpath = arrGridXpath.gridXpath;\r\n        var render = this.getRender(gridXpath);\r\n        var column = arrGridXpath.remainingXpath || \"\";\r\n\r\n\r\n        if (pressed && render && render.columns) {\r\n            $.each(render.columns, function (key, value) {\r\n                if ((value.properties.xpath === column || value.properties.id === column) && value.properties.type === \"columnButton\") {\r\n                    pressed = true;\r\n                }\r\n            });\r\n        }\r\n        return pressed;\r\n    },\r\n\r\n    /**\r\n    * Check if a control has been changed\r\n    */\r\n    isChanged: function (value, isChanged) {\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n        return isChanged;\r\n    },\r\n\r\n    /**\r\n    * Check if a control has the item\r\n    */\r\n    includes: function (value, argument) {\r\n        if (typeof value == \"undefined\" || value === null) {\r\n            return false;\r\n        }\r\n        if (typeof argument == \"undefined\" || argument === null) {\r\n            return false;\r\n        }\r\n        var inArray = $.grep(value, function (e) {\r\n            return e.id == argument;\r\n        });\r\n        if (inArray.length > 0) {\r\n            return true;\r\n        }\r\n        return false\r\n    },\r\n\r\n    /**\r\n    *  Check if the grid has been deleted a row\r\n    */\r\n    onDeletedGridRow: function (xpath, rowDeleted) {\r\n        var self = this;\r\n        var grid = self.getRender(xpath) || {};\r\n\r\n        if (grid && rowDeleted) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Wrapper for get renders, return null if no renders have been found\r\n    */\r\n    getRenders: function (xpath) {\r\n        var self = this,\r\n            form = self.form,\r\n            regex = /id=([\\w-]+)/gi;\r\n        var renders = null;\r\n\r\n        // Check if the xpath is an id\r\n        var idMatches = regex.exec(xpath);\r\n        if (idMatches && idMatches.length > 1) {\r\n            var render = self.getRenderById(idMatches[1]);\r\n            if (render) {\r\n                if (render.length == 0)\r\n                    return null;\r\n                else {\r\n                    renders = [];\r\n                    renders.push(render);\r\n                    return renders;\r\n                }\r\n            } else {\r\n                return null;\r\n            }\r\n\r\n        }\r\n\r\n        renders = form.getRenders(xpath);\r\n        if (renders.length == 0)\r\n            return null;\r\n        return renders;\r\n    },\r\n    /*\r\n    *   Wrapper for get only one editable render\r\n    */\r\n    getRender: function (xpath) {\r\n        var self = this,\r\n            form = self.form;\r\n\r\n        return form.getRender(xpath);\r\n    },\r\n    /*\r\n    *   Wrapper to get a render by id\r\n    */\r\n    getRenderById: function (id) {\r\n        var self = this,\r\n            form = self.form;\r\n\r\n        return form.getRenderById(id);\r\n    },\r\n    /* \r\n    *   Helper function to detect metadata errors\r\n    */\r\n    showRenderNotFoundError: function (xpath) {\r\n        bizagi.debug(\"Cannot find render in DOM: \" + xpath);\r\n    },\r\n    /* \r\n    *   Helper function to detect metadata errors\r\n    */\r\n    showContainerNotFoundError: function (containerId) {\r\n        bizagi.debug(\"Cannot find container in DOM: \" + containerId);\r\n    },\r\n    /*\r\n    *   Returns the current date\r\n    */\r\n    getCurrentDate: function () {\r\n        var currentDate = new Date();\r\n\r\n        // Remove time\r\n        currentDate.setHours(0, 0, 0, 0);\r\n        return currentDate;\r\n    },\r\n    /*\r\n    *   Return the grid xpath parts\r\n    */\r\n    processGridXpath: function (xpath) {        \r\n        // Eval using regular expressions\r\n        var regex = new RegExp(/([\\w\\.-]*)\\[(\\d*)\\]\\.([\\w\\.|\\w-\\.]*)/g);\r\n        var matches = regex.exec(xpath);\r\n        var index, remainingXpath, gridXpath;\r\n        if (matches) {\r\n            gridXpath = matches[1];\r\n            index = matches[2];\r\n            remainingXpath = matches[3];\r\n        } else {\r\n            index = \"\";\r\n            remainingXpath = \"\";\r\n        }\r\n\r\n        return { xpath: xpath, index: index, remainingXpath: remainingXpath, gridXpath: gridXpath };\r\n    },\r\n    /*\r\n    *   Check if an action/validation contains reference to a grid\r\n    */\r\n    searchForGridReference: function (conditions, commands) {\r\n        var self = this;\r\n        var i;\r\n        // Check in conditions\r\n        if (conditions) {\r\n            return self.searchGridReferenceInCondition(conditions);\r\n        }\r\n\r\n        // Check in commands\r\n        if (commands) {\r\n            for (i in commands) {\r\n                var command = commands[i];\r\n                return self.searchForGridReferenceInCommand(command);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    },\r\n    /*\r\n     *   Check if an action/validation contains reference to a grid\r\n     */\r\n    searchForGridReferenceInCommand: function(command){\r\n        if (command.xpath && command.xpath.indexOf(\"[]\") > 0) {\r\n            return command.xpath.substring(0, command.xpath.indexOf(\"[]\"));\r\n        }\r\n\r\n        // Check in argument if argumentType is xpath\r\n        if (command.argumentType == 'xpath') {\r\n            if (command.argument.indexOf(\"[]\") > 0) {\r\n                return command.argument.substring(0, command.argument.indexOf(\"[]\"));\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Check if a condition contains reference to a grid\r\n    */\r\n    searchGridReferenceInCondition: function (condition) {\r\n        var self = this;\r\n        var bGridReferenceFound;\r\n        if (typeof (condition) === \"string\" || typeof (condition) === \"boolean\")\r\n            return null;\r\n        if (condition.expressions) {\r\n            for (i in condition.expressions) {\r\n                if(condition.expressions.hasOwnProperty(i)) {\r\n                    bGridReferenceFound = self.searchGridReferenceInCondition(condition.expressions[i]);\r\n                    if (bGridReferenceFound)\r\n                        return bGridReferenceFound;\r\n                }\r\n            }\r\n\r\n        } else if (condition.simple) {\r\n            return self.searchGridReferenceInCondition(condition.simple);\r\n\r\n        } else if (condition.complex) {\r\n            return self.searchGridReferenceInCondition(condition.complex);\r\n        } else {\r\n            // Looking for grid reference within xpath\r\n            if (condition.xpath || condition.renderId) {\r\n                // Check in condition.xpath\r\n                bGridReferenceFound = self.searchGridReferenceInXpath(condition.xpath) || self.searchGridReferenceInXpath(condition.renderId);\r\n                if (bGridReferenceFound)\r\n                    return bGridReferenceFound;\r\n\r\n                // Check in argument if argumentType is xpath\r\n                if (condition.argumentType == 'xpath') {\r\n                    bGridReferenceFound = self.searchGridReferenceInXpath(condition.argument);\r\n                    if (bGridReferenceFound)\r\n                        return bGridReferenceFound;\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    },\r\n    /*\r\n    *   Check if a xpath contains a grid reference\r\n    */\r\n    searchGridReferenceInXpath: function (xpath) {\r\n        // Check in condition.xpath\r\n        if (xpath && xpath.indexOf(\"[]\") > 0) {\r\n            return xpath.substring(0, xpath.indexOf(\"[]\"));\r\n        }\r\n        return null;\r\n    },\r\n    getGridControl: function (xpath, surrogateKey) {\r\n        var self = this;\r\n        var remainingXpath = self.processGridXpath(xpath).remainingXpath;\r\n        var grid = self.getRender(xpath);\r\n        var column = grid.getControlCell(surrogateKey, remainingXpath);\r\n\r\n        return column;\r\n\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Rendering Validation controller\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will parse and execute all the validations defined for the form\r\n */\r\n\r\nbizagi.command.controllers.controller.extend(\"bizagi.command.controllers.validation\", {}, {\r\n\r\n    /* \r\n    *   Constructor\r\n    */\r\n    init: function (form, validations, mainForm) {\r\n        var self = this;\r\n\r\n        // Enable evalValidation function with console log trace\r\n        self.enableDebug = false;\r\n\r\n        // Call base\r\n        this._super(form);\r\n\r\n        var container = mainForm != undefined ? mainForm.container : form.container;\r\n\r\n        var validationBox = $('<div />').appendTo(container);\r\n\r\n        //Notifies that a modal view appear/disappear\r\n        $.widget( \"ui.bizagi_notifications\", $.ui.bizagi_notifications, {\r\n            expand: function() {\r\n                this._super();\r\n                self.form.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n            },\r\n            collapse: function() {\r\n                this._super();\r\n                self.form.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n            },\r\n            hide: function() {\r\n                this._super();\r\n                self.form.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n            }\r\n        });\r\n\r\n        // Apply plugin\r\n        validationBox.bizagi_notifications({\r\n            itemIcon: \"ui-icon-circle-close\",\r\n            minimized: false,\r\n            clearEnabled: false,\r\n            title: form.getResource(\"render-form-validations-header-text\"),\r\n            device: bizagi.util.detectDevice(),\r\n            orientation: form.properties.orientation\r\n        });\r\n\r\n        // Bind click\r\n        validationBox.bind(\"itemClick\", function (e, ui) {\r\n            self.onNotificationClick(ui.data);\r\n        });\r\n\r\n        // Build validations\r\n        if (validations)\r\n            self.buildValidations(validations);\r\n\r\n        // Keep references\r\n        self.validationBox = validationBox;\r\n        self.validations = validations || [];\r\n    },\r\n\r\n\r\n    /* \r\n    *   Method to incorporate automatic validation rules \r\n    */\r\n    buildValidations: function (validations) {\r\n        var self = this;\r\n        var fnValidations = self.buildAllValidations(validations);\r\n\t\r\n        self.form.bind(\"rendervalidate\", function () {\r\n            return fnValidations(self);\r\n        });\r\n    },\r\n\r\n    /* \r\n    *   Method to add a simple error message in the validation box\r\n    */\r\n    showErrorMessage: function (message) {\r\n        bizagi.showErrorAlertDialog = false;\r\n        this.showValidationMessage(message, null, \"ui-icon-circle-close\", \"ui-state-error\");\r\n    },\r\n\r\n    /* \r\n    *   Method to add a simple alert message in the validation box\r\n    */\r\n    showAlertMessage: function (message) {\r\n        this.showValidationMessage(message, null, \"ui-icon-alert\", \"ui-state-highlight\");\r\n    },\r\n\r\n    /* \r\n    *   Method to add a simple info message in the validation box\r\n    */\r\n    showInfoMessage: function (message) {\r\n        this.showValidationMessage(message, null, \"ui-icon-info\", \"ui-state-highlight\");\r\n    },\r\n\r\n    /* \r\n    *   Method to add a simple validation message in the validation box\r\n    */\r\n    showValidationMessage: function (message, focus, icon, itemAdditionalClass, type, renderId) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var render = null;\r\n\r\n        if (renderId) {\r\n            render = form.getRenderById(renderId) || null;\r\n        } else {\r\n            render = focus ? form.getRender(focus) : null;\r\n        }\r\n\r\n        bizagi.showErrorAlertDialog = false;\r\n\r\n        // Method to perform validations after the render has been changed, or the notifications has been clicked\r\n        var performValidationFn = function () {\r\n            // First hide and clear validation box\r\n            self.clearValidationMessages();\r\n\r\n            var lastActionButton = form ? form.getLastActionButton() : {};\r\n            var skipValidation = lastActionButton && lastActionButton.action === \"nextWithoutValidations\";\r\n\r\n            if (!skipValidation) {\r\n                // Run validations\r\n                self.validating = true;\r\n                self.performValidations();\r\n                self.validating = false;\r\n            }\r\n\r\n            // Attempt to hide if there are no validations\r\n            if (self.countValidationMessages() == 0) {\r\n                self.hideValidationMessages();\r\n                self.form.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n            } else {\r\n                self.form.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n            }\r\n\r\n            //form.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n        };\r\n        self.form.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n        // Add message\r\n        self.validationBox.bizagi_notifications(\"addNotification\", message, focus, icon, itemAdditionalClass, performValidationFn, type, renderId);\r\n\r\n        if (render) {\r\n            // Add error message to render\r\n            render.setValidationMessage(message);\r\n\r\n            if (!bizagi.util.isIE8()) {\r\n\r\n                // Bind event when render change\r\n                if (!self.validating) render.one(\"rendervalidate\", performValidationFn);\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Count the number of validation messages\r\n    */\r\n    countValidationMessages: function () {\r\n        return this.validationBox.bizagi_notifications(\"count\");\r\n    },\r\n\r\n    /*\r\n    *   Remove all the validations\r\n    */\r\n    clearValidationMessages: function (params) {\r\n        var validationsBoxes = $(\".ui-bizagi-notifications-container\", \"body\").not(\".ui-bizagi-log-container\");\r\n\r\n        return validationsBoxes.bizagi_notifications(\"clearAll\", undefined, params);\r\n    },\r\n\r\n    /*\r\n    *   Hide the validation notifications box\r\n    */\r\n    hideValidationMessages: function () {\r\n        return this.validationBox.bizagi_notifications(\"hide\");\r\n    },\r\n\r\n    /*\r\n    *   Show the validation notifications box\r\n    */\r\n    showValidationMessages: function () {\r\n        return this.validationBox.bizagi_notifications(\"show\");\r\n    },\r\n\r\n    /*\r\n    *   Expand the notification box\r\n    */\r\n    expandNotificationBox: function (autofocus) {\r\n        // Select first error and expand notifications\r\n        if (autofocus !== false) this.validationBox.bizagi_notifications(\"autoFocusFirstError\");\r\n        return this.validationBox.bizagi_notifications(\"expand\");\r\n    },\r\n\r\n    isExpandedNotificationBox: function(){        \r\n        return this.validationBox.bizagi_notifications(\"isExpanded\") && this.validationBox.bizagi_notifications(\"isContentVisible\");\r\n    },\r\n\r\n    /*\r\n    *   Run all validation rules in the form container\r\n    */\r\n    performValidations: function (invalidElements) {\r\n        var self = this;\r\n\r\n        // First hide and clear validation box\r\n        self.clearValidationMessages();\r\n        self.validationBox.bizagi_notifications(\"initBatch\");\r\n\r\n        // Run render validations\r\n        var bRendersValid = self.validateRenders(invalidElements);\r\n\r\n        // Run form validations\r\n        var bFormValid = self.validations.length > 0 ? self.form.triggerHandler(\"rendervalidate\") : true;\r\n        self.validationBox.bizagi_notifications(\"endBatch\");\r\n\r\n        // Show validations if invalid\r\n        if (!bFormValid || !bRendersValid) {\r\n            self.validationBox.bizagi_notifications(\"show\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /* PRIVATE METHODS */\r\n\r\n    /*  \r\n    *   Construct validations javascript rules\r\n    */\r\n    buildAllValidations: function (validations) {\r\n        var self = this;\r\n        var sJSCode = \"\";\r\n\r\n        for (var i = 0; i < validations.length; i++) {\r\n\r\n            var isEnabled = (validations[i].enabled != undefined) ? validations[i].enabled : true;\r\n            if (isEnabled) {\r\n                // If validation is not \"valid\" we can omit that instruction\r\n                try {\r\n                    sJSCode += self.buildValidation(validations[i].conditions, validations[i].validationCommand);\r\n                } catch (e) {\r\n                    if (e.message != \"RenderNotFoundException\") {\r\n                        bizagi.logError(\"Validation cannot be parsed: \" + e.message, validations[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Build final function\r\n        var sStatement = \"var baTmpFn = function(self, params){\\r\\n var bValid = true;\\r\\n \" + sJSCode + \"\\r\\n return bValid;}; baTmpFn\";\r\n\r\n        // Return interpreted function\r\n        return self.evalValidation(sStatement);\r\n    },\r\n\r\n    /*\r\n    *   Build a single javascript validation rule\r\n    */\r\n    buildValidation: function (conditions, validationCommand) {\r\n        var self = this;\r\n        var sJsCondition = \"\";\r\n        var sJsValidation = \"\";\r\n\r\n        // Detect grid references\r\n        var gridReference = self.searchForGridReference(conditions);\r\n        var bGridDetected = (gridReference != null);\r\n\r\n        // Build Conditions\r\n        sJsCondition += \"( \" + self.buildConditions(conditions, bGridDetected, true) + \" )\";\r\n\r\n        // Fix message for quotes and break lines\r\n        validationCommand.message = validationCommand.message.replace(/'/g, \"\\\\'\");\r\n        validationCommand.message = validationCommand.message.replace(/\\n/g, \" \");\r\n        \r\n        // Build Message\r\n        var focus = validationCommand.focus || \"\";\r\n        if (bGridDetected) focus = gridReference;\r\n        if (validationCommand.tokens)\r\n            sJsValidation += \"self.showValidationMessage(' \" + validationCommand.message + \"', '\" + focus + \"', JSON.parse('\" + JSON.encode(validationCommand.tokens) + \"')); bValid = false;\\r\\n\";\r\n        else\r\n            sJsValidation += \"self.showValidationMessage(' \" + validationCommand.message + \"', '\" + focus + \"'); bValid = false;\\r\\n\";\r\n\r\n        // Build final statement\r\n        if (!bGridDetected) {\r\n\r\n\r\n            return \"if (\" + sJsCondition + \"){\\r\\n \" + sJsValidation + \" \\r\\n}\";\r\n        } else {\r\n            var sGridStatement = \"var grid = self.form.getRender('\" + gridReference + \"');\\r\\n\";\r\n            sGridStatement += \"if(grid === null) return true;\\r\\n\";\r\n            sGridStatement += \"var data = grid.getIndexes();\\r\\n\";\r\n            sGridStatement += \"var bGridValid = true;\\r\\n\";\r\n            sGridStatement += \"$.each(data, function(_, i) {\\r\\n\";\r\n            sGridStatement += \"if (\" + sJsCondition + \"){\\r\\n bGridValid = false; \\r\\n}\";\r\n            sGridStatement += \"});\\r\\n\";\r\n            sGridStatement += \"if (bGridValid == false){\\r\\n \" + sJsValidation + \"\\r\\n}\";\r\n            return sGridStatement;\r\n        }\r\n    },\r\n\r\n    /* \r\n    *   Method triggered when the validation item has been clicked\r\n    */\r\n    onNotificationClick: function (data) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var xpath = data.focus;\r\n        var renderId = data.id;\r\n\r\n        if (xpath) {\r\n            var render = renderId ? form.getRenderById(renderId) : form.getRender(xpath);\r\n\r\n            if (render) {\r\n                render.focus();\r\n            }\r\n        }\r\n    },\r\n\r\n    /* \r\n    *   Method to loop\r\n    */\r\n    validateRenders: function (invalidElements) {\r\n        var self = this;\r\n        invalidElements = invalidElements || [];\r\n\r\n        // Do a check\r\n        var bValid = self.form.isValid(invalidElements);\r\n        if (!bValid) {\r\n            invalidElements.forEach(function(element){\r\n                if( element.id ) {\r\n                    // Parameters: message, xpath, icon, itemAdditionalClass, type, renderId\r\n                    self.showValidationMessageById(element.message, element.xpath, element.id);\r\n                } else if (element.message || element.xpath) {\r\n                    self.showValidationMessage(element.message, element.xpath);\r\n                }\r\n            });            \r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /*\r\n    *\tEval validation string, for debug purposes\r\n    */\r\n    evalValidation: function (command) {\r\n        var self = this;\r\n\r\n        if (self.enableDebug && console != undefined) {\r\n            console.log(command);\r\n        }\r\n\r\n        return eval(command);\r\n    },\r\n\r\n    /**\r\n     * Method to add a simple validation message in the validation box\r\n     * @param message\r\n     * @param xpath\r\n     * @param renderId\r\n     */\r\n    showValidationMessageById: function (message, xpath, renderId) {\r\n        this.showValidationMessage(message, xpath, undefined, false, undefined, renderId);\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: Bizagi Rendering Validation controller\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will parse and execute all the validations defined for the form\r\n */\r\n\r\nbizagi.command.controllers.controller.extend(\"bizagi.command.controllers.action\", {}, {\r\n    /* \r\n    *   Constructor\r\n    */\r\n    init: function (form, actions) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(form);\r\n\r\n        // Set a new hash containing all the dependencies subscribing the events\r\n        self.globalDependencies = {};\r\n        self.initialCallFunctions = {};\r\n        self.funtionsToExecuteARefreshCommand = [];\r\n        self.initialCallFunctionsDeferred = new $.Deferred();        \r\n\r\n        // Build actions\r\n        if (actions)\r\n            self.buildActions(actions);\r\n\r\n        // Keep references\r\n        self.actions = actions;\r\n        self.internalSubmitActions = {};\r\n\r\n        // Set initial timer to trigger initial functions using a setTimeout, and distributing them in differente timespans\r\n        self.initialCallTimeout = 25;\r\n        self.initialCallIncrements = 25;\r\n        self.actionsHistory = {};\r\n        self.period = 50;\r\n    },\r\n    /*\r\n    *   Adds an internal submit action to be executed with all the given rules\r\n    */\r\n    processInternalSubmitAction: function (xpath, action) {\r\n        var self = this;\r\n\r\n        // if the action is registered, don't add it again\r\n        // only one internal submit action is allowed per control\r\n        if (self.internalSubmitActions[xpath])\r\n            return;\r\n\r\n        // Add to hash and build it\r\n        self.internalSubmitActions[xpath] = action;\r\n        self.buildAction(action, true);\r\n    },\r\n\r\n    isSummaryOrGlobalForm: function () {\r\n        var self = this;\r\n        var result = false;\r\n\r\n        if (self.form.properties.typeForm === \"SummaryForm\" || self.form.properties.typeForm === \"GlobalForm\") result = true;\r\n        return result;\r\n    },\r\n\r\n    evalClientAction: function (action) {\r\n        var self = this, i = 0, serverCommand = false, command;\r\n        var commands = [].concat(action.commands, action.elseCommands);\r\n        var length = commands.length;\r\n\r\n        for (; i < length; i++) {\r\n            command = commands[i];\r\n            if (!self.isClientAction(command)) {\r\n                serverCommand = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (serverCommand) {\r\n            action.enabled = false;\r\n        }\r\n    },\r\n\r\n    /* Process all given  actions*/\r\n    buildActions: function (actions, dontExecute) {\r\n        var self = this, i, len;\r\n        var hashes = {};\r\n        self.funtionsToExecuteARefreshCommand = [];\r\n\r\n        if (self.form.properties.displayAsReadOnly)\r\n            actions = [];\r\n\r\n        var executeOnlyClientActions = self.isSummaryOrGlobalForm();\r\n\r\n        for (i = 0, len = actions.length; i < len; i++) {\r\n            // If action is not \"valid\" we can omit that instruction\r\n            try {\r\n                var action = actions[i];\r\n                var hash = bizagi.util.md5(JSON.stringify(action.conditions));\r\n                var hashC = bizagi.util.md5(JSON.stringify(action.commands));\r\n                if (hashes[hash]) {\r\n                    if (hashes[hash].indexOf(hashC) === -1) {\r\n                        // si la condicion es igual y los comandos diferentes\r\n                        executeOnlyClientActions && self.evalClientAction(action);\r\n                        self.buildAction(action, dontExecute);\r\n                        hashes[hash].push(hashC);\r\n                    }\r\n                } else {\r\n                    executeOnlyClientActions && self.evalClientAction(action);\r\n                    self.buildAction(action, dontExecute);\r\n                    hashes[hash] = [hashC];\r\n                }\r\n            } catch (e) {\r\n                // Handle the exception\r\n                if (e.message !== \"RenderNotFoundException\") {\r\n                    bizagi.logError(\"Action cannot be parsed: \" + e.message, actions[i]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *   Remove all current handlers\r\n    */\r\n    unbindActions: function () {\r\n        var self = this;\r\n\r\n        // Remove all previous handlers\r\n        $.each(self.globalDependencies, function (i, render) {\r\n            render.unbind(\"renderchange.action\");\r\n        });\r\n\r\n        self.globalDependencies = {};\r\n\r\n        // Reset timers and collections\r\n        $.each(self.initialCallFunctions, function (i, handle) {\r\n            clearTimeout(handle);\r\n        });\r\n        self.initialCallFunctions = {};\r\n    },\r\n    /* \r\n    *   Re-execute actions, cleaning the handlers first\r\n    */\r\n    refreshActions: function (newActions) {\r\n        var self = this;\r\n\r\n        self.initialCallTimeout = 25;\r\n        self.initialCallFunctions = {};\r\n\r\n        newActions = newActions || [];\r\n\r\n        // Build the actions again\r\n        self.actions = self.actions.concat(newActions);\r\n        self.buildActions(self.actions, true);\r\n\r\n        // Build internal actions again\r\n        $.each(self.internalSubmitActions, function (_, action) {\r\n            try {\r\n                self.buildAction(action, false);\r\n            } catch (e) {\r\n                // Handle the exception\r\n                if (e.message !== \"RenderNotFoundException\") {\r\n                    bizagi.logError(\"Action cannot be parsed: \" + e.message, action);\r\n                }\r\n            }\r\n        });\r\n    },\r\n    /* Process a single action*/\r\n    buildAction: function (action, dontExecute) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var dependencies = [];\r\n        var dependenciesId = [];\r\n\r\n        var isEnabled = (action.enabled != undefined) ? action.enabled : true;\r\n\r\n        if (!isEnabled) return;\r\n\r\n        // If the condition operator is true, we gotta dig in the actions to check if it modifies a grid\r\n        // To include an auto-dependency, so each time the grid is changed that condition will be executed\r\n        if (action.conditions && action.conditions.operator == \"true\") {\r\n            if (!action.dependencies)\r\n                action.dependencies = [];\r\n            $.each(action.commands, function (_, command) {\r\n                var gridReference = self.searchGridReferenceInXpath(command.xpath);\r\n                if (gridReference) {\r\n                    var dependencyAlreadyAdded = false, j, len;\r\n                    for (j = 0, len = action.dependencies; j < len; j++) {\r\n                        if (action.dependencies[j] == gridReference)\r\n                            dependencyAlreadyAdded = true;\r\n                    }\r\n                    if (!dependencyAlreadyAdded)\r\n                        action.dependencies.push(gridReference);\r\n                }\r\n            });\r\n        }\r\n\r\n        function isValidDependency(type) {\r\n            var notValid = [\"groupedgrid\", \"collectionnavigator\"];\r\n            if (notValid.indexOf(type) === -1) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        // Find dependencies to attach triggers\r\n        if (action.dependencies) {\r\n            for (var i = 0; i < action.dependencies.length; i++) {\r\n                if (typeof action.dependencies[i] != \"undefined\") {\r\n                    var renders = form.getRenders(action.dependencies[i]);\r\n                    if (renders.length === 0) {\r\n                        var renderById = form.getRenderById(action.dependencies[i]);\r\n                        renders = (renderById) ? [renderById] : null;\r\n                    }\r\n\r\n                    if (renders) {\r\n                        $.each(renders, function (_, render) {\r\n                            if ($.inArray(render.properties.id, dependenciesId) < 0) {\r\n                                if (isValidDependency(render.properties.type)) {\r\n                                    dependenciesId.push(render.properties.id);\r\n                                    dependencies.push(render);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Build anonymous function\r\n        var fn = self.buildFunction(action.conditions, action.commands, action.elseCommands);                \r\n                \r\n        var actionDependecies = function(fn){\r\n            this.commandDependencies =  \r\n                action.commands.concat(action.elseCommands).map(function(command){\r\n                    return command.xpath || command.container || command.renderId; \r\n                });\r\n\r\n            this.commandNames =  \r\n                action.commands.concat(action.elseCommands).map(function(command){\r\n                    return command.command; \r\n                });\r\n            \r\n            this.fn = fn;    \r\n        }\r\n        \r\n        actionDependecies.prototype =  {\r\n            hasDependency: function(xpath){\r\n                if (xpath == null)\r\n                    return false;\r\n\r\n                return this.commandDependencies.indexOf(xpath) >= 0;                       \r\n            },\r\n            \r\n            hasRefreshCommand: function(){\r\n                return this.commandNames.indexOf('refresh') >= 0;  \r\n            },\r\n            execute: function(args){\r\n                return fn(self, args);\r\n            }\r\n        }         \r\n      \r\n        self.funtionsToExecuteARefreshCommand = self.funtionsToExecuteARefreshCommand || [];\r\n        var actionDependeciesIntance = new actionDependecies(fn);\r\n        if (!actionDependeciesIntance.hasRefreshCommand()){\r\n            self.funtionsToExecuteARefreshCommand.push(actionDependeciesIntance);\r\n        }\r\n        \r\n        // Attach handlers\r\n        $.each(dependencies, function (_, render) {\r\n            render.bind(\"renderchange.action\", function (ev, args) {\r\n                args = args || {};\r\n\r\n                // Default changed argument to true\r\n                args.changed = args.changed !== undefined ? args.changed : true;\r\n\r\n                // If a grid action has been performed, try to filter it by column, to avoid execute all grid actions each time                \r\n                if (args.column) {\r\n                    for (var j = 0; j < action.gridColumns.length; j++) {\r\n                        if (args.column == action.gridColumns[j]) {\r\n                            // Call function\r\n                            fn(self, args);\r\n                            return;\r\n                        }\r\n                    }\r\n                } else {\r\n                    // Call function\r\n                    fn(self, args);\r\n                }\r\n            });\r\n\r\n            // Add to global dependencies hash\r\n            self.globalDependencies[render.properties.id] = render;\r\n\r\n            // If render is a grid ... trigger function at this point\r\n            if (render.properties.type === 'grid') {\r\n                dontExecute = true;\r\n\r\n                // Search column dependencies\r\n                action.gridColumns = [];\r\n                self.searchGridColumns(action.conditions, action.gridColumns);\r\n            }\r\n        });\r\n\r\n        // Check if it has to execute\r\n        if (dontExecute)\r\n            return;\r\n\r\n        // Execute the action because it must execute when the page loads with pre-defined value\r\n        // Create an async function to trigger it later\r\n        var asyncFn = function (self) {\r\n\r\n            var guid = Math.guid();\r\n            // Create the timeout\r\n            var handle = setTimeout(function () {\r\n                try {\r\n                    // TODO: Define render to set parameter to \"fn\" function\r\n                    fn(self);\r\n                    delete self.initialCallFunctions[guid];\r\n                } catch (e) {\r\n                }\r\n                finally{\r\n                    clearTimeout(handle);\r\n                }\r\n            }, self.initialCallTimeout);\r\n\r\n            // Save a reference\r\n            self.initialCallFunctions[guid] = handle;\r\n            self.initialCallTimeout += self.initialCallIncrements;\r\n        };\r\n\r\n        // Run it\r\n        asyncFn(self);\r\n    },\r\n    \r\n    \r\n    tryToExecuteFunction: function(xpath) {\r\n        if (bizagi.override && bizagi.override.enableExecuteRefreshAction === true) {\r\n            for (var index = 0; index < this.funtionsToExecuteARefreshCommand.length; index++) {\r\n                var fn = this.funtionsToExecuteARefreshCommand[index];\r\n\r\n                if (fn.hasDependency(xpath)) {\r\n                    fn.execute();\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \r\n    /*\r\n    * Creates the function to execute based on the action metadata\r\n    */\r\n    buildFunction: function (conditions, commands, elseCommands) {\r\n        var self = this;\r\n\r\n        var gridReference = self.searchForGridReference(conditions, commands);\r\n        var bGridDetected = (gridReference != null) ? gridReference : false;\r\n        var sJsCondition = \"\";\r\n        var sJsAction = \"\";\r\n        var sStatement;\r\n        var sJsElseAction = \"\";\r\n        var bAutomaticRestore = elseCommands ? false : true;\r\n        var bCondition = conditions ? true : false;\r\n        var i;\r\n\r\n        // Build Condition\r\n        if (bCondition) {\r\n            sJsCondition += self.buildConditions(conditions, bGridDetected);\r\n        }\r\n\r\n        // Build and execute actions\r\n        for (i = 0; i < commands.length; i++) {\r\n            // Parse command\r\n            var queueAction = self.isServerCommand(commands[i]) ? \"addParallel\" : \"add\";\r\n            var command = self.buildCommand(commands[i], bGridDetected);\r\n\r\n            // Check if command ending with semicolon and remove it\r\n            command = (command.indexOf(\";\") >= 1) ? command.replace(\";\", \"\") : command;\r\n            sJsAction += \"actionQueue.\" + queueAction + \"(function(){return \" + command + \" ;}); \\r\\n\";\r\n\r\n            if (bAutomaticRestore) {\r\n                sJsElseAction += self.buildRestoreCommand(commands[i], bGridDetected);\r\n            }\r\n        }\r\n\r\n        // Build non-automatic else commands\r\n        if (!bAutomaticRestore) {\r\n            sJsElseAction += \"var actionQueue = new bizagiQueue(); \\r\\n\";\r\n            sJsElseAction += \"if (params.render){params.render.startActionExecution();} \\r\\n\";\r\n            for (i = 0; i < elseCommands.length; i++) {\r\n                var queueAction = self.isServerCommand(elseCommands[i]) ? \"addParallel\" : \"add\";\r\n                var elseCommand = self.buildCommand(elseCommands[i], bGridDetected);\r\n                // Check if command ending with semicolon and remove it\r\n                elseCommand = (elseCommand.indexOf(\";\") >= 1) ? elseCommand.replace(\";\", \"\") : elseCommand;\r\n                sJsElseAction += \"actionQueue.\" + queueAction + \"(function(){return \" + elseCommand + \" ;}); \\r\\n\";\r\n            }\r\n            sJsElseAction += \"var execute = actionQueue.execute().always(function(){ \\r\\n\";\r\n            sJsElseAction += \"if (params.render){ params.render.endActionExecution();} \\r\\n });\\r\\n\";\r\n            sJsElseAction += \"self.form.appendWaitForLoader({ promise: execute, create: true });\\r\\n\";\r\n        }\r\n\r\n        // Build final function\r\n        //sStatement = \"var baTmpFn = function(self, i, column){ \\r\\n\";\r\n        sStatement = \"var baTmpFn = function(self, params){ \\r\\n\";\r\n        sStatement += \"params = params || {};\\r\\n\";\r\n        if (bGridDetected) {\r\n            sStatement += \"var i = params.key;\\r\\n\";\r\n            sStatement += \"var column = params.column;\\r\\n\";\r\n        }\r\n        if (bCondition) {\r\n            sStatement += \"if (\" + sJsCondition + \"){ \\r\\n\";\r\n        }\r\n\r\n        // Creates defferreds\r\n        sStatement += \"var actionQueue = new bizagiQueue(); \\r\\n\";\r\n        sStatement += \"if (params.render){params.render.startActionExecution();} \\r\\n\";\r\n        sStatement += sJsAction;\r\n        sStatement += \"var execute = actionQueue.execute().always(function(){ \\r\\n\";\r\n        sStatement += \"if (params.render){ params.render.endActionExecution();} \\r\\n });\\r\\n\";\r\n        sStatement += \"self.form.appendWaitForLoader({ promise: execute, create: true });\\r\\n\";\r\n\r\n        if (bCondition) {\r\n            sStatement += \"\\r\\n } \";\r\n            if (sJsElseAction.length > 0) {\r\n                sStatement += \"else { \\r\\n\" + sJsElseAction + \" }\\r\\n\";\r\n            }\r\n        }\r\n\r\n        sStatement += \"};\\r\\n\";\r\n\r\n\r\n        if (!bGridDetected) {\r\n            sStatement += \"baTmpFn\";\r\n        } else {\r\n            var sGridStatement = \"var baGridTmpFn = function(self, args){ \\r\\n\";\r\n            sGridStatement += \"args = args || {};\\r\\n\";\r\n            sGridStatement += \"\\t var grid = args.render || self.form.getRender('\" + gridReference + \"') || []; \\r\\n\";\r\n            sGridStatement += \"\\t grid = grid.grid ? grid : (self.form.getRender('\" + gridReference + \"') || []); \\r\\n\";\r\n            sGridStatement += \"\\t args.grid = grid; \\r\\n\";\r\n            sGridStatement += \"if(args.surrogateKey === undefined){\\r\\n\";\r\n            sGridStatement += \"\\t var data = grid.getIndexes();\\r\\n\";\r\n            sGridStatement += \"\\t $.each(data, function(i, index) {\\r\\n\";\r\n            sGridStatement += \"\\t\\t args.key = index; \\r\\n\";\r\n            sGridStatement += \"\\t\\t baTmpFn(self, args);\\r\\n\";\r\n            sGridStatement += \"\\t });\\r\\n\";\r\n            sGridStatement += \"} else {\\r\\n\";\r\n            sGridStatement += \"\\t args.key = args.surrogateKey; \\r\\n\";\r\n            sGridStatement += \"\\t\\t baTmpFn(self, args ); \\r\\n\";\r\n            sGridStatement += \"}\\r\\n\";\r\n            sGridStatement += \"};\\r\\n\";\r\n            sStatement += sGridStatement;\r\n            sStatement += \"baGridTmpFn\";\r\n        }\r\n\r\n        // Return interpreted function\r\n        return eval(sStatement);\r\n    },\r\n\r\n    /*\r\n    *   This method checks if a command must be performed by the client, or by the server\r\n    */\r\n    isServerCommand: function (command) {\r\n        var commandType = command.command;\r\n\r\n        return [\"refresh\", \"submit-data\", \"execute-rule\", \"execute-interface\", \"execute-sap\", \"execute-connector\", \"execute-excel-bot\"].includes(commandType);\r\n    },\r\n\r\n    isClientAction: function (command) {\r\n        var commandType = command.command;\r\n\r\n        return [\"background-color\", \"forecolor\", \"visible\", \"required\", \"collapse\", \"set-active\"].includes(commandType);\r\n    },\r\n\r\n    isRecentAction: function (prefix, command) {\r\n        var self = this;\r\n        var tag = prefix + \"@\" + command;\r\n        if (self.actionsHistory[tag] != null) {\r\n            return true;\r\n        }\r\n        $.when(self.runAction(prefix, command)).done(function () {\r\n            delete self.actionsHistory[tag];\r\n            bizagi.log(\"resolve \" + tag);\r\n        });\r\n        return false;\r\n    },\r\n\r\n    runAction: function (prefix, command) {\r\n        var self = this;\r\n        var tag = prefix + \"@\" + command;\r\n        self.actionsHistory[tag] = new $.Deferred();\r\n        setTimeout(self.actionsHistory[tag].resolve, self.period);\r\n        return self.actionsHistory[tag].promise();\r\n    },\r\n    /*\r\n    *   Builds the action JS\r\n    */\r\n    buildCommand: function (command, bGridDetected) {\r\n        var self = this;\r\n\r\n        // Define if a grid has been detected\r\n        bGridDetected = bGridDetected || false;\r\n\r\n        var gridReference = bGridDetected;\r\n\r\n        // Parse argument\r\n        var commandType = command.command;\r\n        var detectedArgumentType = self.detectCommandArgumentType(command.argumentType, commandType);\r\n        var argument = self.buildArgument(command.argument, detectedArgumentType, bGridDetected, command.xpathContext);\r\n        var xpath = command.xpath;\r\n\r\n        var commandGridDetected = self.searchForGridReferenceInCommand(command);\r\n        if (commandGridDetected && command.containerId){\r\n            var gridXpathInfo = self.processGridXpath(xpath)            \r\n            xpath = gridXpathInfo.gridXpath + \".\" + command.containerId + \"[].\" + gridXpathInfo.remainingXpath + \".\" + command.renderId;\r\n        }\r\n        else if (xpath && command.renderId){\r\n            xpath = xpath + \".\" + command.renderId;\r\n        }\r\n        // If a render id is given, we use it with priority over only xpath\r\n        else if (command.renderId) {\r\n            xpath = \"id=\" + command.renderId + \"\";\r\n        }\r\n\r\n        // Process grid xpaths\r\n        if (bGridDetected && xpath) {\r\n            xpath = xpath.replaceAll(\"[]\", \"[' + i + ']\");\r\n        }\r\n\r\n        if ((command.xpath && command.xpath.length > 0) || (command.renderId && command.renderId.length > 0)) {\r\n            // Build render command\r\n            switch (commandType) {\r\n                case 'background-color':\r\n                    if (command.controlType === \"activityFlowButton\") {\r\n                        return \"self.changeButtonBackground('\" + xpath + \"', \" + argument + \");\";\r\n                    } else {\r\n                        return \"self.changeRenderBackground('\" + xpath + \"', \" + argument + \");\";\r\n                    }\r\n                    break;\r\n                case 'forecolor':\r\n                    if (command.controlType === \"activityFlowButton\") {\r\n                        return \"self.changeButtonForeground('\" + xpath + \"', \" + argument + \");\";\r\n                    } else {\r\n                        return \"self.changeRenderForeground('\" + xpath + \"', \" + argument + \");\";\r\n                    }\r\n                    break;\r\n                case 'visible':\r\n                    if (command.controlType === \"activityFlowButton\") {\r\n                        return \"self.changeButtonVisibility('\" + xpath + \"', \" + argument + \");\";\r\n                    } else {\r\n                        return \"self.changeRenderVisibility('\" + xpath + \"', \" + argument + \");\";\r\n                    }\r\n                    break;\r\n                case 'readonly':\r\n                    if (command.controlType === \"activityFlowButton\") {\r\n                        return \"self.changeButtonEditability('\" + xpath + \"', \" + argument + \");\";\r\n                    } else {\r\n                        return \"self.changeRenderEditability('\" + xpath + \"', '\" + argument + \"');\";\r\n                    }\r\n                    break;\r\n                case 'required':\r\n                    return \"self.changeRenderRequired('\" + xpath + \"', \" + argument + \");\";\r\n                    break;\r\n                case 'set-value':\r\n                    // Check specific argument type\r\n                    if (bGridDetected && command.argumentType === \"xpath\" && !!command.xpathContext) {\r\n                        // When we are going to evaluate a xpath is necessary add a xpathcontext if it exist\r\n                        if (typeof command.xpathContext !== \"undefined\"){\r\n                            command.argument = command.xpathContext + \".\" + command.argument;\r\n                        }\r\n                        argument = self.buildArgument(command.argument, detectedArgumentType, bGridDetected);\r\n                    }\r\n\r\n                    return \"self.changeRenderValue('\" + xpath + \"', \" + argument + \");\";\r\n                    break;\r\n                case 'set-min':\r\n                    return \"self.changeRenderMinValue('\" + xpath + \"', \" + argument + \");\";\r\n                    break;\r\n                case 'set-max':\r\n                    return \"self.changeRenderMaxValue('\" + xpath + \"', \" + argument + \");\";\r\n                    break;\r\n                case 'calculate':\r\n                    return \"self.executeCalculatedField('\" + xpath + \"');\";\r\n                    break;\r\n                case 'submit-value':\r\n                    return \"self.submitRender('\" + xpath + \"', '\" + argument + \"');\";\r\n                    break;\r\n                case 'clean-data':\r\n                    return \"self.cleanRenderData('\" + xpath + \"');\";\r\n                    break;\r\n\r\n                // New Features                                        \r\n                case 'refresh':\r\n                    commandGridDetected = self.searchForGridReferenceInCommand(command);\r\n\r\n                    if (commandGridDetected) {\r\n                        return \"self.refreshGridCell('\" + xpath + \"', \" + \"'\" + (command.xpathContext || \"\") + \"'\" + \");\";\r\n                    } else {\r\n                        return \"self.refreshControl('\" + xpath + \"', \" + \"'\" + (command.xpathContext || \"\") + \"','\" + commandType + \"');\";\r\n                    }\r\n                    break;\r\n                case 'trigger-click':\r\n                    return \"self.triggerClick('\" + xpath + \"');\";\r\n                    break;\r\n\r\n            }\r\n        } else {\r\n            // Build container command\r\n            switch (commandType) {\r\n                case 'background-color':\r\n                    return \"self.changeContainerBackground('\" + command.container + \"', \" + argument + \");\";\r\n                    break;\r\n                case 'visible':\r\n                    return \"self.changeContainerVisibility('\" + command.container + \"', \" + argument + \");\";\r\n                    break;\r\n                case 'collapse':\r\n                    return \"self.toogleContainer('\" + command.container + \"', \" + !bizagi.util.parseBoolean(argument) + \");\";\r\n                    break;\r\n                case 'set-active':\r\n                    return \"self.changeActiveItem('\" + command.container + \"');\";\r\n                    break;\r\n                case 'readonly':\r\n                    return \"self.changeContainerEditability('\" + command.container + \"', '\" + argument + \"');\";\r\n                    break;\r\n\r\n                // New Features                                        \r\n                case 'refresh':\r\n                    // Set prepare parameter to multiaction purposes \r\n                    return \"self.refreshContainer('\" + command.container + \"', \" + \"'\" + (command.xpathContext || \"\") + \"'\" + \");\";\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // Global  actions without specific target\r\n        if (commandType === 'submit-data') {\r\n            return \"self.submitFormData();\";\r\n        }\r\n\r\n        if (commandType === 'execute-rule') {\r\n            var ruleObj = command.argument || {};\r\n            var guidRule = \"\";\r\n            try {\r\n                guidRule = JSON.parse(ruleObj).guid;\r\n            } catch (e) {\r\n            }\r\n\r\n            var xpathContext = command.xpathContext || \"\";\r\n            if (bGridDetected) {\r\n                var xpathContextRow = gridReference + \"[id=%s]\";\r\n                return \"self.executeRule('\" + guidRule + \"', printf('\" + xpathContextRow + \"',i) ,'\" + commandType + \"');\";\r\n            } else {\r\n                return \"self.executeRule('\" + guidRule + \"','\" + xpathContext + \"','\" + commandType + \"');\";\r\n            }\r\n        }\r\n\r\n        if (commandType === 'execute-interface') {\r\n            var interfaceObj = command.argument || {};\r\n            var guidInterface = \"\";\r\n\r\n            try {\r\n                guidInterface = JSON.parse(interfaceObj).guid;\r\n            } catch (e) {\r\n            }\r\n\r\n            xpathContext = command.xpathContext || \"\";\r\n            if (bGridDetected) {\r\n                xpathContextRow = gridReference + \"[id=%s]\";\r\n                return \"self.executeInterface('\" + guidInterface + \"', printf('\" + xpathContextRow + \"',i));\";\r\n            } else {\r\n                return \"self.executeInterface('\" + guidInterface + \"','\" + xpathContext + \"');\";\r\n            }\r\n        }\r\n\r\n        if (commandType === 'execute-sap') {\r\n            var connectorObj = command.argument || {};\r\n            var guidsap = \"\";\r\n\r\n            try {\r\n                guidsap = JSON.parse(connectorObj).guid;\r\n            } catch (e) {\r\n            }\r\n\r\n            xpathContext = command.xpathContext || \"\";\r\n            if (bGridDetected) {\r\n                xpathContextRow = gridReference + \"[id=%s]\";\r\n                return \"self.executeSAPConnector('\" + guidsap + \"', printf('\" + xpathContextRow + \"',i));\";\r\n            } else {\r\n                return \"self.executeSAPConnector('\" + guidsap + \"','\" + xpathContext + \"');\";\r\n            }\r\n        }\r\n\r\n        if (commandType === 'execute-connector' || commandType === 'execute-excel-bot') {\r\n            var connectorObj = command.argument || {};\r\n            var guidConnector = \"\";\r\n\r\n            try {\r\n                guidConnector = JSON.parse(connectorObj).guid;\r\n            } catch (e) {\r\n            }\r\n\r\n            xpathContext = command.xpathContext || \"\";\r\n            if (bGridDetected) {\r\n                xpathContextRow = gridReference + \"[id=%s]\";\r\n                return \"self.executeConnector('\" + guidConnector + \"', printf('\" + xpathContextRow + \"',i));\";\r\n            } else {\r\n                return \"self.executeConnector('\" + guidConnector + \"','\" + xpathContext + \"');\";\r\n            }\r\n        }\r\n\r\n        bizagi.log(\"There is no definition for commandType: \" + commandType);\r\n        return \"\";\r\n    },\r\n    /* \r\n    *   Builds the JS command to restore automatically a command when condition is not met\r\n    */\r\n    buildRestoreCommand: function (command, bGridDetected) {\r\n        var xpath = command.xpath;\r\n        var commandType = command.command;\r\n\r\n        // Define if a grid has been detected\r\n        bGridDetected = bGridDetected || false;\r\n\r\n        // If a render id is given, we use it with priority over only xpath\r\n        if (command.renderId) {\r\n            xpath = \"id=\" + command.renderId + \"\";\r\n        }\r\n\r\n        // Process grid xpaths\r\n        if (bGridDetected) {\r\n            xpath = xpath.replaceAll(\"[]\", \"[' + i + ']\");\r\n        }\r\n\r\n        // Build restore action\r\n        if (xpath && xpath.length > 0) {\r\n            return \"self.restoreRender('\" + xpath + \"', '\" + commandType + \"');\";\r\n        } else {\r\n            return \"self.restoreContainer('\" + command.container + \"', '\" + commandType + \"');\";\r\n        }\r\n    },\r\n    /* \r\n    *   Detect the command argument type based on the command type\r\n    */\r\n    detectCommandArgumentType: function (argumentType, commandType) {\r\n        if (argumentType === undefined) {\r\n            return argumentType;\r\n\r\n        } else if (argumentType == \"const\") {\r\n\r\n            if (commandType == 'background-color')\r\n                return 'color';\r\n            if (commandType == 'forecolor')\r\n                return 'color';\r\n            if (commandType == 'visible')\r\n                return 'boolean';\r\n            if (commandType == 'readonly')\r\n                return 'boolean';\r\n            if (commandType == 'required')\r\n                return 'boolean';\r\n            if (commandType == 'set-value')\r\n                return 'text';\r\n            if (commandType == 'collapse')\r\n                return 'boolean';\r\n            if (commandType == 'set-active')\r\n                return 'number';\r\n            if (commandType == 'set-min')\r\n                return 'text';\r\n            if (commandType == 'set-max')\r\n                return 'text';\r\n            if (commandType == 'calculate')\r\n                return undefined;\r\n            if (commandType == 'refresh')\r\n                return undefined;\r\n            if (commandType == 'submit-value')\r\n                return 'json';\r\n\r\n        } else if (argumentType === \"xpath\" || argumentType === \"entity\") {\r\n            return argumentType;\r\n        }\r\n\r\n        bizagi.log(\"There is no definition for commandType: \" + commandType);\r\n        return null;\r\n    },\r\n    /* \r\n    *   Builds the JS command to restore a render when condition is not met\r\n    */\r\n    restoreRender: function (xpath, commandType) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            var properties = render.originalProperties;\r\n            var textFormat = properties.textFormat || {};\r\n            if (commandType == 'background-color')\r\n                self.changeRenderBackground(xpath, textFormat.background || '');\r\n            if (commandType == 'forecolor')\r\n                self.changeRenderForeground(xpath, textFormat.color || 'none');\r\n            if (commandType == 'visible')\r\n                self.changeRenderVisibility(xpath, properties.visible != undefined ? properties.visible : true);\r\n            if (commandType == 'readonly')\r\n                self.changeRenderEditability(xpath, properties.editable != undefined ? properties.editable : true);\r\n            if (commandType == 'required')\r\n                self.changeRenderRequired(xpath, properties.required != undefined ? properties.required : false);\r\n            // NOte: Command 6 does not have restoration\r\n        });\r\n    },\r\n    /* \r\n    *   Builds the JS command to restore a container when condition is not met\r\n    */\r\n    restoreContainer: function (containerId, commandType) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var container = form.getContainer(containerId);\r\n        if (container == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showContainerNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        var properties = container.originalProperties;\r\n        if (commandType == 'background-color')\r\n            self.changeContainerBackground(containerId, properties.backgroundColor || 'none');\r\n        if (commandType == 'visible')\r\n            self.changeContainerVisibility(containerId, properties.visible != undefined ? properties.visible : true);\r\n        if (commandType == 'collapse')\r\n            self.toogleContainer(containerId, true);\r\n        // NOte: Command 8 does not have restoration\r\n        if (commandType == 'readonly')\r\n            self.changeContainerEditability(containerId, properties.editable != undefined ? properties.editable : true);\r\n    },\r\n    /* \r\n    *   Sets a new color for the background of the render\r\n    *   Applies also to grid cells!\r\n    */\r\n    changeRenderBackground: function (xpath, argument) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            //Detects if is the grid component, and set the desired properties\r\n            if (!self.isGridComponent(render, xpath)) {\r\n                // Normal renders\r\n                $.when(render.ready()).done(function () {\r\n                    render.changeBackgroundColor(argument);\r\n                });\r\n\r\n            } else {\r\n                // Grid renders\r\n                var gridXpath = self.processGridXpath(xpath);\r\n                $.when(render.ready()).done(function () {\r\n                    if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                        render.changeCellBackgroundColor(gridXpath.index, gridXpath.remainingXpath, argument);\r\n\r\n                    } else {\r\n                        var indexes = render.getIndexes(), j, lenIndex;\r\n                        for (j = 0, lenIndex = indexes.length; j < lenIndex; j++) {\r\n                            render.changeCellBackgroundColor(indexes[j], gridXpath.remainingXpath, argument);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    },\r\n    /*\r\n     *   Sets a new color for the background of the button\r\n     *   Applies also to grid cells!\r\n     */\r\n    changeButtonBackground: function (xpath, argument) {\r\n        var self = this;\r\n        var guid = xpath.substring(3);\r\n        var element = self.form.getButton(guid);\r\n\r\n        element.css(\"background-image\", \"none\");\r\n        element.addClass(\"ui-fast-transition\");\r\n\r\n        if (typeof (element[0]) !== \"undefined\") {\r\n            element[0].style.setProperty(\"background-color\", argument, \"important\");\r\n        }\r\n    },\r\n\r\n    /* \r\n    *   Sets a new color for the foreground of the render\r\n    */\r\n    changeRenderForeground: function (xpath, argument) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            //Detects if is the grid component, and set the desired properties\r\n            if (!self.isGridComponent(render, xpath)) {\r\n                // Normal renders\r\n                $.when(render.ready()).done(function () {\r\n                    render.changeColor(argument);\r\n                });\r\n\r\n            } else {\r\n                // Grid renders\r\n                var gridXpath = self.processGridXpath(xpath);\r\n                $.when(render.ready()).done(function () {\r\n                    if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                        render.changeCellColor(gridXpath.index, gridXpath.remainingXpath, argument);\r\n\r\n                    } else {\r\n                        var indexes = render.getIndexes(), j, lenIndex;\r\n                        for (j = 0, lenIndex = indexes.length; j < lenIndex; j++) {\r\n                            render.changeCellColor(indexes[j], gridXpath.remainingXpath, argument);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    },\r\n    /*\r\n     *   Sets a new color for the foreground of the render\r\n     */\r\n    changeButtonForeground: function (xpath, argument) {\r\n        var self = this;\r\n        var guid = xpath.substring(3);\r\n        var element = self.form.getButton(guid);\r\n        element.css(\"color\", argument, \"!important\");\r\n    },\r\n    /* \r\n    *   Changes the visibility of the render\r\n    */\r\n    changeRenderVisibility: function (xpath, argument) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            //Detects if is the grid component, and set the desired properties\r\n            if (!self.isGridComponent(render, xpath)) {\r\n                // Normal renders\r\n                $.when(render.ready()).done(function () {\r\n                    $.when(render.renderingDeferred).done(function () {\r\n                        render.changeVisibility(argument);\r\n                    });\r\n                });\r\n            } else {\r\n                // Grid renders\r\n                var gridXpath = self.processGridXpath(xpath);\r\n                $.when(render.ready()).done(function () {\r\n                    if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                        render.changeCellVisibility(gridXpath.index, gridXpath.remainingXpath, argument);\r\n\r\n                    } else {\r\n                        var indexes = render.getIndexes(), j, lenIndex;\r\n                        for (j = 0, lenIndex = indexes.length; j < lenIndex; j++) {\r\n                            render.changeCellVisibility(indexes[j], gridXpath.remainingXpath, argument);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    },\r\n    /*\r\n     *   Changes the visibility of the button\r\n     */\r\n    changeButtonVisibility: function (xpath, argument) {\r\n        var self = this;\r\n        var guid = xpath.substring(3);\r\n        var element = self.form.getButton(guid);\r\n        if (bizagi.util.parseBoolean(argument) == true) {\r\n            element.show();\r\n            element.css(\"display\", \"\");\r\n        } else {\r\n            element.hide();\r\n        }\r\n    },\r\n    /* \r\n    *   Changes the editability of the render\r\n    */\r\n    changeRenderEditability: function (xpath, argument) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            // execute commands over valid renders\r\n            if (self.isValidRender(render)) {\r\n                //Detects if is the grid component, and set the desired properties\r\n                if (!self.isGridComponent(render, xpath)) {\r\n                    // Normal renders\r\n                    $.when(render.ready()).done(function () {\r\n                        $.when(render.renderingDeferred).done(function () {\r\n                            render.changeEditability(argument);\r\n                        });\r\n                    });\r\n                } else {\r\n                    // Grid renders\r\n                    var gridXpath = self.processGridXpath(xpath);\r\n                    $.when(render.ready()).done(function () {\r\n                        if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                            render.changeCellEditability(gridXpath.index, gridXpath.remainingXpath, argument);\r\n\r\n                        } else {\r\n                            var indexes = render.getIndexes(), j, lenIndex;\r\n                            for (j = 0, lenIndex = indexes.length; j < lenIndex; j++) {\r\n                                render.changeCellEditability(indexes[j], gridXpath.remainingXpath, argument);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    },\r\n    /*\r\n     *   Changes the editability of the button\r\n     */\r\n    changeButtonEditability: function (xpath, argument) {\r\n        var self = this;\r\n        var guid = xpath.substring(3);\r\n        var element = self.form.getButton(guid);\r\n        if (bizagi.util.parseBoolean(argument) == true) {\r\n            element.removeAttr(\"disabled\");\r\n        } else {\r\n            element.attr(\"disabled\", \"disabled\");\r\n        }\r\n    },\r\n    /*\r\n     *  trigger Click button\r\n     */\r\n    triggerClick: function (xpath) {\r\n        var self = this;\r\n        var guid = xpath.substring(3);\r\n        var element = self.form.getButton(guid);\r\n        element.trigger(\"click\");\r\n    },\r\n\r\n    /* \r\n    *   Changes the required value of the render\r\n    */\r\n    changeRenderRequired: function (xpath, argument) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        var rendersToEval = [];\r\n\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            if (bizagi.util.parseBoolean(render.properties.editable)) {\r\n                rendersToEval.push(render);\r\n            }\r\n        });\r\n\r\n        if (rendersToEval.length === 0) {\r\n            rendersToEval = renders;\r\n        }\r\n\r\n        $.each(rendersToEval, function (i, render) {\r\n            // execute commands over valid renders\r\n            if (self.isValidRender(render)) {\r\n                //Detects if is the grid component, and set the desired properties\r\n                if (!self.isGridComponent(render, xpath)) {\r\n                    // Normal renders\r\n                    $.when(render.ready()).done(function () {\r\n                        $.when(render.renderingDeferred).done(function () {\r\n                            render.changeRequired(argument);\r\n                        });\r\n                    });\r\n                } else {\r\n                    // Grid renders\r\n                    var gridXpath = self.processGridXpath(xpath);\r\n                    $.when(render.ready()).done(function () {\r\n                        if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                            render.changeCellRequired(gridXpath.index, gridXpath.remainingXpath, argument);\r\n\r\n                        } else {\r\n                            var indexes = render.getIndexes(), j, lenIndex;\r\n                            for (j = 0, lenIndex = indexes.length; j < lenIndex; j++) {\r\n                                render.changeCellRequired(indexes[j], gridXpath.remainingXpath, argument);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    },\r\n    /* \r\n    *   Changes the render internal value\r\n    */\r\n    changeRenderValue: function (xpath, argument) {\r\n        var self = this;\r\n\r\n        if (argument != null && typeof argument === \"object\" ){\r\n            argument = $.extend(argument, {fromAction: true});\r\n        }\r\n\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Eval only an editable render\r\n        var rendersToEval = [];\r\n        $.each(renders, function (i, render) {\r\n            if (render.properties.editable) {\r\n                rendersToEval.push(render);\r\n            }\r\n        });\r\n\r\n        // If no render has been found skip editable validation\r\n        if (rendersToEval.length == 0) {\r\n            $.each(renders, function (i, render) {\r\n                rendersToEval.push(render);\r\n            });\r\n        }\r\n\r\n        $.each(rendersToEval, function (i, render) {\r\n            //Detects if is the grid component, and set the desired properties\r\n            if (!self.isGridComponent(render, xpath)) {\r\n                // Normal renders\r\n                $.when(render.ready()).done(function () {\r\n                    if (render.asyncRenderDeferred) {\r\n                        $.when(render.asyncRenderDeferred).done(function () {\r\n                            render.setDisplayValue(argument);\r\n                        });\r\n                    } else {\r\n                        render.setDisplayValue(argument);\r\n                    }\r\n                });\r\n            } else {\r\n                // Grid renders\r\n                var gridXpath = self.processGridXpath(xpath);\r\n                $.when(render.ready()).done(function () {\r\n                    if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                        render.changeCellValue(gridXpath.index, gridXpath.remainingXpath, argument);\r\n\r\n                    } else {\r\n                        var indexes = render.getIndexes(), j, lenIndex;\r\n                        for (j = 0, lenIndex = indexes.length; j < lenIndex; j++) {\r\n                            render.changeCellValue(indexes[j], gridXpath.remainingXpath, argument);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    },\r\n    /* \r\n    *   Changes the render minimum value\r\n    */\r\n    changeRenderMinValue: function (xpath, argument) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            //Detects if is the grid component, and set the desired properties\r\n            if (!self.isGridComponent(render, xpath)) {\r\n                // Normal renders\r\n                $.when(render.ready()).done(function () {\r\n                    var renderType = render.properties.type;\r\n                    if (renderType === \"number\" || renderType === \"date\" || renderType === \"money\") {\r\n                        render.changeMinValue(argument);\r\n                    }\r\n                });\r\n\r\n            } else {\r\n                // Grid renders\r\n                var gridXpath = self.processGridXpath(xpath);\r\n                $.when(render.ready()).done(function () {\r\n                    if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                        render.changeCellMinValue(gridXpath.index, gridXpath.remainingXpath, argument);\r\n\r\n                    } else {\r\n                        var indexes = render.getIndexes(), j, lenIndex;\r\n                        for (j = 0, lenIndex = indexes.length; j < lenIndex; j++) {\r\n                            render.changeCellMinValue(indexes[j], gridXpath.remainingXpath, argument);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    },\r\n    /* \r\n    *   Changes the render max value\r\n    */\r\n    changeRenderMaxValue: function (xpath, argument) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            //Detects if is the grid component, and set the desired properties\r\n            if (!self.isGridComponent(render, xpath)) {\r\n                // Normal renders\r\n                $.when(render.ready()).done(function () {\r\n                    render.changeMaxValue(argument);\r\n                });\r\n\r\n            } else {\r\n                // Grid renders\r\n                var gridXpath = self.processGridXpath(xpath);\r\n                $.when(render.ready()).done(function () {\r\n                    if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                        render.changeCellMaxValue(gridXpath.index, gridXpath.remainingXpath, argument);\r\n\r\n                    } else {\r\n                        var indexes = render.getIndexes(), j, lenIndex;\r\n                        for (j = 0, lenIndex = indexes.length; j < lenIndex; j++) {\r\n                            render.changeCellMaxValue(indexes[j], gridXpath.remainingXpath, argument);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    },\r\n    /* \r\n    *   Changes the render max value\r\n    */\r\n    executeCalculatedField: function (xpath) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            $.when(render.ready()).done(function () {\r\n                render.runFormula();\r\n            });\r\n        });\r\n    },\r\n    /* \r\n    *   Refresh the render internal value using ajax\r\n    */\r\n    refreshControl: function (xpath, xpathContext, commandType) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath) || self.form.getContainer(xpath);\r\n        var queue = new bizagiQueue();\r\n\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Process matching renders\r\n        $.each(renders, function (i, render) {\r\n            queue.add(render.ready().pipe(function () {\r\n                return render.refreshControl({xpath: xpath, xpathContext: xpathContext});\r\n            }));\r\n        });\r\n\r\n        // Return queue deferred\r\n        return queue.execute();\r\n    },\r\n    /* \r\n    *   Refresh the render internal value using ajax\r\n    */\r\n    refreshContainer: function (containerId, xpathContext) {\r\n        var self = this;\r\n        var container = self.form.getContainer(containerId);\r\n\r\n        if (container == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(containerId);\r\n            }\r\n            return;\r\n        }\r\n\r\n        return $.when(container.ready())\r\n            .pipe(function () {\r\n                return container.refreshContainer({xpathContext: xpathContext});\r\n            });\r\n    },\r\n    /**\r\n     * Refresh a cell of grid\r\n     */\r\n    refreshGridCell: function (xpath, xpathContext) {\r\n        var self = this;\r\n        var queue = new bizagiQueue();\r\n        var def = new $.Deferred();\r\n        var renders = self.getRenders(xpath) || self.form.getContainer(xpath);\r\n\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        // Eval only an editable render\r\n        var rendersToEval = [];\r\n        $.each(renders, function (i, render) {\r\n            if (render.properties.editable) {\r\n                rendersToEval.push(render);\r\n                return false;\r\n            }\r\n        });\r\n\r\n        // If no render has been found skip editable validation\r\n        if (rendersToEval.length == 0) {\r\n            $.each(renders, function (i, render) {\r\n                rendersToEval.push(render);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (rendersToEval.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // Check xpathContext of the form (addForm or editForm)\r\n        if (self.form && self.form.properties.xpathContext !== \"\") {\r\n            xpathContext = (xpathContext !== \"\") ? self.form.properties.xpathContext + \".\" + xpathContext : self.form.properties.xpathContext;\r\n        }\r\n\r\n        queue.add(def.promise());\r\n\r\n        $.when.apply($, $.map(rendersToEval, function (grid) {\r\n            grid.ready();\r\n        }))\r\n            .done(function () {\r\n                var len = rendersToEval.length;\r\n                var internalQueue = new bizagiQueue();\r\n                for (var i = 0; i < len; i++) {\r\n                    var grid = rendersToEval[i];\r\n\r\n                    var gridXpath = self.processGridXpath(xpath);\r\n                    if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                        // Process a specific row\r\n                        internalQueue.add(grid.refreshCell({\r\n                            key: gridXpath.index,\r\n                            column: gridXpath.remainingXpath,\r\n                            xpathContext: xpathContext\r\n                        }));\r\n                    } else {\r\n                        // Process all rows\r\n                        var indexes = grid.getIndexes();\r\n                        var lenIndex = indexes.length;\r\n                        for (var j = 0; j < lenIndex; j++) {\r\n                            internalQueue.addParallel(grid.refreshCell({\r\n                                key: indexes[j],\r\n                                column: gridXpath.remainingXpath,\r\n                                xpathContext: xpathContext\r\n                            }));\r\n                        }\r\n                    }\r\n                }\r\n\r\n                $.when(internalQueue.execute())\r\n                    .done(function () {\r\n                        def.resolve();\r\n                    });\r\n            });\r\n\r\n\r\n        return queue.execute();\r\n    },\r\n    /**\r\n     * This function execute action to save all data of render, but\r\n     * the server service dont execute any rule on the server\r\n     */\r\n    submitFormData: function (params) {\r\n        var self = this;\r\n\r\n        // For the submit action we need only the whole form to perform the server action\r\n        var form = self.form;\r\n\r\n        // Process the action\r\n        return $.when(form.ready())\r\n            .pipe(function () {\r\n                return form.submitData(params);\r\n            });\r\n    },\r\n    /**\r\n     * This function send a request to the server to execute a rule\r\n     */\r\n    executeRule: function (rule, xpathContext, commandType) {\r\n        var self = this;\r\n        // For the execute rule  action we need only the whole form to perform the server action\r\n        var form = self.form;\r\n        var prefix = rule + \".\" + xpathContext;\r\n        if (self.isRecentAction(prefix, commandType)) {\r\n            return;\r\n        } else {\r\n            // Process the action\r\n            return $.when(form.ready())\r\n                .pipe(function () {\r\n                    return form.executeRule({rule: rule, xpathContext: xpathContext});\r\n                });\r\n        }\r\n    },\r\n    executeInterface: function (interface, xpathContext) {\r\n        var self = this;\r\n        // For the execute rule  action we need only the whole form to perform the server action\r\n        var form = self.form;\r\n\r\n        // Process the action\r\n        return $.when(form.ready())\r\n            .pipe(function () {\r\n                return form.executeInterface({interface: interface, xpathContext: xpathContext});\r\n            });\r\n    },\r\n\r\n\r\n    executeSAPConnector: function (guidsap, xpathContext) {\r\n        var self = this;\r\n        var form = self.form;\r\n        return $.when(form.ready).pipe(function () {\r\n            return form.executeSAPConnector({guidsap: guidsap, xpathContext: xpathContext});\r\n        });\r\n    },\r\n\r\n    executeConnector: function (guidConnector, xpathContext) {\r\n        var self = this;\r\n        var form = self.form;\r\n        return $.when(form.ready).pipe(function () {\r\n            return form.executeConnector({guidConnector: guidConnector, xpathContext: xpathContext});\r\n        });\r\n    },\r\n    /*\r\n    *   Submit the given render and refresh dependencies after that\r\n    */\r\n    submitRender: function (xpath, argument) {\r\n        var self = this;\r\n        // For the submit action we need only one render to perform the server action\r\n        var render = self.getRender(xpath);\r\n        if (render == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Process the action in the render\r\n        return $.when(render.ready()).pipe(function () {\r\n            return render.submitOnChange();\r\n        });\r\n    },\r\n    /*\r\n    * Cleans current value\r\n    */\r\n    cleanRenderData: function (xpath) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            //Detects if is the grid component, and set the desired properties\r\n            if (!self.isGridComponent(render, xpath)) {\r\n                // Normal renders\r\n                $.when(render.ready()).done(function () {\r\n                    $.when(render.renderingDeferred).done(function () {\r\n                        render.cleanData();\r\n                        self.changeRenderRequired(xpath, render.properties.required != undefined ? render.properties.required : false);\r\n                    });\r\n                });\r\n            } else {\r\n                // Grid renders\r\n                var gridXpath = self.processGridXpath(xpath);\r\n                $.when(render.ready()).done(function () {\r\n                    if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                        render.cleanCellData(gridXpath.index, gridXpath.remainingXpath);\r\n                    } else {\r\n                        var indexes = render.getIndexes(), j, lenIndex;\r\n                        for (j = 0, lenIndex = indexes.length; j < lenIndex; j++) {\r\n                            render.cleanCellData(indexes[j], gridXpath.remainingXpath);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    },\r\n    /* \r\n    *   Changes container background color\r\n    */\r\n    changeContainerBackground: function (containerId, argument) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var container = form.getContainer(containerId);\r\n        if (container == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showContainerNotFoundError(containerId);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.when(container.ready()).done(function () {\r\n            container.changeBackgroundColor(argument);\r\n        });\r\n    },\r\n    /* \r\n    *   Shows or hides a container\r\n    */\r\n    changeContainerVisibility: function (containerId, argument) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var container = form.getContainer(containerId);\r\n        if (container == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showContainerNotFoundError(containerId);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.when(container.ready(true)).done(function () {\r\n            $.when(container.renderingDeferred).done(function () {\r\n                container.changeVisibility(argument);\r\n            });\r\n        });\r\n    },\r\n    /* \r\n    *   Expand or collapse a group container\r\n    */\r\n    toogleContainer: function (containerId, argument) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var container = form.getContainer(containerId);\r\n        if (container == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showContainerNotFoundError(containerId);\r\n            }\r\n            return;\r\n        }\r\n        if (container.properties.type !== \"group\")\r\n            return;\r\n\r\n        $.when(container.ready()).done(function () {\r\n            container.toogleContainer(argument);\r\n        });\r\n    },\r\n    /* \r\n    *   Select a determinate sub-container in a tab or an accordion\r\n    */\r\n    changeActiveItem: function (containerId) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var container = form.getContainer(containerId);\r\n        if (container == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showContainerNotFoundError(containerId);\r\n            }\r\n            return;\r\n        }\r\n        if (container.properties.type === \"tabItem\" && container.loadingDeferred) {\r\n            container.loadingDeferred.resolve();\r\n        }\r\n        $.when(container.ready()).done(function () {\r\n            container.setAsActiveContainer();\r\n        });\r\n    },\r\n    /* \r\n    *   Changes container editability\r\n    */\r\n    changeContainerEditability: function (containerId, argument) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var container = form.getContainer(containerId);\r\n        if (container == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showContainerNotFoundError(containerId);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.when(container.ready()).done(function () {\r\n            container.changeEditability(argument);\r\n        });\r\n    },\r\n    /*\r\n    *   Search for grid columns\r\n    */\r\n    searchGridColumns: function (condition, gridColumns) {\r\n        var self = this;\r\n        var column;\r\n        if (typeof (condition) === \"string\" || typeof (condition) === \"boolean\")\r\n            return null;\r\n        if (condition.expressions) {\r\n            var j, lenIndex;\r\n            for (j = 0, lenIndex = condition.expressions.length; j < lenIndex; j++) {\r\n                self.searchGridColumns(condition.expressions[j], gridColumns);\r\n            }\r\n\r\n        } else if (condition.simple) {\r\n            return self.searchGridColumns(condition.simple, gridColumns);\r\n\r\n        } else if (condition.complex) {\r\n            return self.searchGridColumns(condition.complex, gridColumns);\r\n        } else {\r\n            var xpath = condition.xpath || condition.renderId;\r\n            if (xpath) {\r\n                // Check in condition.xpath\r\n                if (xpath && xpath.indexOf(\"[]\") > 0) {\r\n                    column = xpath.substring(xpath.indexOf(\"[]\") + 3);\r\n                    gridColumns.push(column);\r\n                }\r\n\r\n                // Check in argument if argumentType is xpath\r\n                if (condition.argumentType === 'xpath') {\r\n                    if (condition.argument.indexOf(\"[]\") > 0) {\r\n                        column = condition.argument.substring(condition.argument.indexOf(\"[]\") + 3);\r\n                        gridColumns.push(column);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    },\r\n    /**/\r\n\r\n    isGridComponent: function (render, xpath) {\r\n        return (render.properties.type === 'grid' && xpath.indexOf('[') >= 0);\r\n    },\r\n    /**/\r\n\r\n    isValidRender: function (render) {\r\n        var notValid = [\"collectionnavigator\"];\r\n\r\n        return notValid.indexOf(render.properties.type) === -1;\r\n    },\r\n\r\n    /**\r\n     * Helper to override the visibility and editability. TODO: Apply to mobile with formButtons\r\n     * @param {} xpath\r\n     * @param {} status\r\n     * @returns {}\r\n     */\r\n    changeFormButtonVisibility: function(xpath, visible) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var guid = xpath.substring(3);\r\n\r\n        var buttons = form.buttons && form.buttons.length ? form.buttons : form.properties.buttons || [];\r\n        var isVisible = bizagi.util.parseBoolean(visible) !== false;\r\n        var index = buttons.findIndex(function(item) { return item.id === guid; });\r\n        var navigation = form.getNavigation();\r\n\r\n        if (index !== -1)\r\n            buttons[index].visible = isVisible;\r\n\r\n        form.buttons = buttons || [];\r\n        navigation.setNavigationButtons(form);\r\n    }\r\n});","/*\r\n*   Name: BizAgi Element Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a base class with common stuff related to all renders and containers\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.element\", {\r\n    ELEMENT_TYPE_CONTAINER: 1,\r\n    ELEMENT_TYPE_RENDER: 2,\r\n    ELEMENT_TYPE_COLUMN: 3\r\n}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Set render factory\r\n        this.renderFactory = params.renderFactory;\r\n\r\n        // Set data service\r\n        this.dataService = params.dataService;\r\n\r\n        // Set reference to parent\r\n        this.parent = params.parent;\r\n\r\n        // Set l10n service\r\n        this.resources = bizagi.localization;\r\n\r\n        // Set the observable element\r\n        this.observableElement = $(\"<div />\");\r\n\r\n        // Set the dispose flag\r\n        this.disposed = false;\r\n\r\n        // Update data\r\n        this.initializeData(params.data);\r\n\r\n        // Define an object to hold the subscribe collection\r\n        this.subscribers = [];\r\n    },\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Set the internal data\r\n        this.properties = {};\r\n        if (data && data.properties) this.properties = data.properties;\r\n\r\n        // Set xpath context\r\n        this.properties.xpathContext = this.getXpathContext();\r\n\r\n        // Set page cache\r\n        this.properties.idPageCache = this.getPageCache();\r\n    },\r\n\r\n    /*\r\n    *   Returns the xpath context of the element\r\n    */\r\n    getXpathContext: function () {\r\n        // By default return parent's xpath context\r\n        // This method is overriden in form container which contains the real xpath context\r\n\r\n        return (this.parent != undefined && typeof this.parent.getXpathContext == \"function\") ? this.parent.getXpathContext() : \"\";\r\n    },\r\n\r\n    /*\r\n    *   Returns the page cache for the current element\r\n    */\r\n    getPageCache: function () {\r\n        // By default return parent's page cache\r\n        // This method is overriden in form container which contains the real page cache\r\n\r\n        return (this.parent != undefined && typeof this.parent.getPageCache == \"function\") ? this.parent.getPageCache() : \"\";\r\n    },\r\n\r\n    /*\r\n    *   Returns the form containing the element\r\n    */\r\n    getFormContainer: function () {\r\n        // By default return parent's form container\r\n        // This method is overriden in form container which returns itself\r\n        if (typeof (this.parent) != \"undefined\")\r\n        return this.parent.getFormContainer();\r\n    },\r\n\r\n\r\n    /*\r\n    *   Returns the mapped resource\r\n    */\r\n    getResource: function (key) {\r\n        return this.resources.getResource(key);\r\n    },\r\n\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () { },\r\n\r\n    /* \r\n    *   Resizes the element \r\n    */\r\n    resize: function (size) {\r\n\r\n    },\r\n\r\n    /*\r\n    *   Focus on the current element\r\n    */\r\n    focus: function () {\r\n\r\n        if (this.properties.required) {\r\n            var layout = $(\"#ui-bizagi-wp-app-render-form-content\");\r\n            // Check if element is visible into scroll\r\n            if (!bizagi.util.isScrolledIntoView(this.element, layout)) {\r\n                $(this.element).attr('tabindex', -1).focus();\r\n            }\r\n            if (this.element) {\r\n                this.element.effect('highlight', 2000);\r\n            }\r\n        }\r\n\r\n        //Check if the element has parent\r\n        if (this.parent && typeof this.parent.focus == 'function') {\r\n            this.parent.focus();\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Publish a global event that the facade will replicate\r\n    */\r\n    triggerGlobalHandler: function (eventType, data) {\r\n        if (this.disposed) return null;\r\n        if (this.parent) return this.parent.triggerGlobalHandler(eventType, data);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Triggers an event inside the control\r\n    */\r\n    trigger: function (eventType, data) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.trigger(eventType, data);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Triggers an event handler inside the control\r\n    */\r\n    triggerHandler: function (eventType, data) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.triggerHandler(eventType, data);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Binds to an event\r\n    */\r\n    bind: function (eventType, fn) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.bind(eventType, fn);\r\n        this.subscribers.push({ event: eventType });\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Un-binds to an event\r\n    */\r\n    unbind: function (eventType, fn) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.unbind(eventType, fn);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Binds a one time event\r\n    */\r\n    one: function (eventType, fn) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.one(eventType, fn);\r\n        this.subscribers.push({ event: eventType });\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Return the rendered element\r\n    */\r\n    getRenderedElement: function () { },\r\n\r\n    /*\r\n    *   Get current rendering mode\r\n    */\r\n    getMode: function () {\r\n        if (this.parent) return this.parent.getMode();\r\n    },\r\n\r\n    /*\r\n    *   Get current rendering params\r\n    */\r\n    getParams: function () {\r\n        if (this.parent) return this.parent.getParams();\r\n    },\r\n\r\n    /*\r\n    * Get current form type (ex. queryform, form)\r\n    */\r\n    getFormType: function () {\r\n        var self = this;\r\n\r\n        var form = self.getFormContainer();\r\n        return form.properties.type || \"form\";\r\n    },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () { },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready to save\r\n    */\r\n    isReadyToSave: function () { },\r\n\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Dispose the class so we can detect when a class is invalid already\r\n    */\r\n    dispose: function () {\r\n        var self = this;\r\n        self.disposed = true;\r\n\r\n        setTimeout(function () {\r\n            if (self.subscribers != null) {\r\n                // Remove all subcriptions\r\n                $.each(self.subscribers, function (i, item) {\r\n                    self.unbind(item.event);\r\n                });\r\n            }\r\n            delete self.subscribers;\r\n\r\n            if (self.observableElement) self.observableElement.off();\r\n            bizagi.util.dispose(self);\r\n        }, bizagi.override.disposeTime || 50);\r\n    },\r\n\r\n    /*\r\n    *   Check if the current object is disposed\r\n    */\r\n    isDisposed: function () {\r\n        return this.disposed;\r\n    },\r\n\r\n    /*\r\n    *   This method process the error or alert messages coming from the server, and adds them to the validation controller\r\n    */\r\n    processFailMessage: function(message) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        if (message.errorType === \"CustomMessageException\") {\r\n            // Clear previous validations\r\n            form.validationController.clearValidationMessages();\r\n            var error = bizagi.localization.getResource(message.message);\r\n            form.validationController.showErrorMessage(error);\r\n        } else if (message.errorType === \"InvalidCaseStateException\") {\r\n            var params = form.getParams()\r\n\r\n            form.validationController.clearValidationMessages();\r\n           \r\n            // Redirection Here\r\n            form.container.trigger(\"routing\", { idCase: params.idCase || bizagi.context.idCase });\r\n        } else {\r\n            var message = message || {};\r\n            message = typeof (message) == \"string\" ? JSON.parse(message) : message;\r\n            var type = message.type || \"error\";\r\n            var code = message.code || \"code\";\r\n            message = message.responseText || (message.message || message);\r\n\r\n            // Omit processing when the ajax didn't process\r\n            if (type === \"not-processed\") return;\r\n            if (type === \"not-shown\") return;\r\n            if (isOfflineForm && code === \"AUTH_ERROR\") return;\r\n\r\n            // Clear previous validations\r\n            form.validationController.clearValidationMessages();\r\n            if (type == \"alert\") {\r\n                form.validationController.showAlertMessage(message);\r\n            } else {\r\n                form.validationController.showErrorMessage(message);\r\n            }\r\n        }\r\n\r\n        return message;\r\n    },\r\n\r\n    /*\r\n    *   Sets a waiting overlay above the current element\r\n    */\r\n    startLoading: function () {  /* Override in implementations */ },\r\n\r\n    /*\r\n    *   Removes the waiting overlay\r\n    */\r\n    endLoading: function () { /* Override in implementations */ },\r\n\r\n    /**\r\n    *   Prepare control to remove it from the render, that allows to\r\n    *   clean all elements of the control or to do any stuff before to remove\r\n    */\r\n    beforeToRefresh: function () { /* Implement in each render and container if you need */ },\r\n\r\n    /**\r\n    *   Run before that the control has been refreshed\r\n    */\r\n    afterToRefresh: function () { \r\n        /* Implement in each render and container if you need */ \r\n        var formContainer = this.getFormContainer();\r\n        formContainer.tryToExecuteFunction(this.properties.xpath || this.properties.id); \r\n    }\r\n});\r\n\r\n","/*\r\n *   Name: BizAgi Container Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define a base container class with common stuff related to all containers\r\n */\r\n\r\nbizagi.rendering.element.extend(\"bizagi.rendering.container\", {\r\n    TYPE_QUERY_FORM: \"queryForm\"\r\n}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Set defaults\r\n        var properties = self.properties;\r\n        properties.uniqueId = Math.ceil(Math.random() * 1000000);\r\n        properties.editable = (typeof properties.editable != \"undefined\") ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.visible = (typeof properties.visible != \"undefined\") ? bizagi.util.parseBoolean(properties.visible) : true;\r\n\r\n        // Override orientation from parent if not set\r\n        properties.orientation = properties.orientation || \"auto\";\r\n\r\n        // Save original properties\r\n        this.originalProperties = JSON.parse(JSON.encode(properties));\r\n\r\n        // Create children\r\n        this.children = [];\r\n        this.childrenHash = {};\r\n\r\n        if (data.elements) {\r\n            $.each(data.elements, function(i, element) {\r\n                if (element.render) {\r\n                    self.createRenderElement(element);\r\n                } else if (element.container) {\r\n                    self.createContainerElement(element);\r\n                } else if (element.form) {\r\n                    self.createFormElement(element);\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Creates a render element\r\n    */\r\n    createRenderElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var originalElement;\r\n\r\n        // Replicate editable property when container is not editable\r\n        if (properties.editable == false) {\r\n            element.render.properties.editable = properties.editable;\r\n            if (element.render.properties.type == \"grid\")\r\n                element.render.properties.inlineEdit = false;\r\n        }\r\n\r\n        // Replicate required property when container is not required\r\n        if (properties.required === false) {\r\n            element.render.properties.required = properties.required;\r\n        }\r\n\r\n        //clone originalElement to apply duplicate render properties correctly\r\n        if (element.render.properties.retype == \"duplicate\") {\r\n            originalElement = bizagi.clone(element);\r\n        }\r\n\r\n        var render = self.renderFactory.getRender({\r\n            type: element.render.properties.type,\r\n            data: element.render,\r\n            dataService: self.dataService,\r\n            parent: self,\r\n            mode: self.getMode()\r\n        });\r\n\r\n        // Add to children\r\n        self.children.push(render);\r\n\r\n        // Check for duplicate\r\n        if (element.render.properties.retype == \"duplicate\") {\r\n            self.processDuplicateRender(render, originalElement);\r\n        }\r\n\r\n        //TODO: at this point not posible add the retype double at this point not exist input\r\n\r\n        // Register in form container\r\n        self.getFormContainer().registerRender(render);\r\n    },\r\n    /*\r\n    *   Creates a container element\r\n    */\r\n    createContainerElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Replicate editable property when container is not editable\r\n        if (properties.editable == false) {\r\n            element.container.properties.editable = properties.editable;\r\n        }\r\n\r\n        // Replicate required property when container is not required\r\n        if (properties.required === false) {\r\n            element.container.properties.required = properties.required;\r\n        }\r\n\r\n        var container = self.renderFactory.getContainer({\r\n            type: element.container.properties.type,\r\n            data: element.container,\r\n            parent: self,\r\n            dataService: self.dataService,\r\n            mode: self.getMode(),\r\n            isDesign: self.getMode() === \"design\"\r\n        });\r\n\r\n        self.children.push(container);\r\n\r\n        // Register in form container\r\n        self.getFormContainer().registerRender(container);\r\n    },\r\n    /*\r\n    *   Creates a form element\r\n    */\r\n    createFormElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Replicate editable property when container is not editable\r\n        if (properties.editable == false) {\r\n            element.container.properties.editable = properties.editable;\r\n        }\r\n\r\n        var form = self.renderFactory.getContainer({\r\n            type: (element.form.properties.type || \"form\"),\r\n            data: element.form,\r\n            parent: self,\r\n            dataService: self.dataService,\r\n            mode: self.getMode()\r\n        });\r\n        self.children.push(form);\r\n    },\r\n    /* \r\n    *   Gets the current container \r\n    */\r\n    getElement: function () {\r\n        var self = this;\r\n        return self.container;\r\n    },\r\n    /* \r\n    *   Gets a collection for all elements matching a type \r\n    */\r\n    getElementsByType: function (type, elements) {\r\n        elements = elements || [];\r\n        var self = this;\r\n\r\n        // Iterate through elements\r\n        $.each(self.children, function (i, child) {\r\n            if (child.properties.type == type) {\r\n                elements.push(child);\r\n            }\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.getElementsByType(type, elements);\r\n            }\r\n        });\r\n\r\n        return elements;\r\n    },\r\n    /*\r\n    *   Process renders with duplicate property\r\n    */\r\n    processDuplicateRender: function (render, element) {\r\n        var self = this;\r\n        var clonedElement = JSON.parse(JSON.encode(element.render));\r\n\r\n        // Changes properties\r\n        clonedElement.properties.displayName = clonedElement.properties.displayName + \" \" + self.getResource(\"render-text-duplicate-label-sufix\");\r\n        clonedElement.properties.xpath = clonedElement.properties.xpath + \".clone\";\r\n        clonedElement.properties.isClone = true;\r\n\r\n        // Creates clone\r\n        var clone = self.renderFactory.getRender({\r\n            type: clonedElement.properties.type,\r\n            data: clonedElement,\r\n            parent: self,\r\n            mode: self.getMode()\r\n        });\r\n\r\n        // Associates with main render\r\n        render.cloneRender = clone;\r\n\r\n        // Add to collection\r\n        self.children.push(clone);\r\n    },\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () {\r\n        return bizagi.rendering.element.ELEMENT_TYPE_CONTAINER;\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    */\r\n    render: function () {\r\n        var self = this,\r\n            mode = self.getMode(),\r\n            result;\r\n\r\n        // Render container\r\n        result = self.internalRender();\r\n\r\n        // Apply container defaults\r\n        self.applyContainerDefaults();\r\n\r\n        // Add container id\r\n        result.attr(\"data-container-id\", self.properties.id);\r\n\r\n        //Add container tag property\r\n        if (self.properties.tag) {\r\n            result.attr(\"data-tag\", self.properties.tag);\r\n        }\r\n\r\n        //Add class to the requested form, to specify if is add form, edit form, or detail form\r\n        if (self.params)\r\n            if (self.params.requestedForm)\r\n                result.addClass(self.params.requestedForm);\r\n\r\n        return result;\r\n    },\r\n    /*\r\n    *   Internal  rendering\r\n    */\r\n    internalRender: function () {\r\n        var self = this;\r\n\r\n        // Render the container\r\n        var html = self.renderContainerHtml();\r\n\r\n        // Convert html string to jquery object\r\n        var container = self.container = $(html);\r\n\r\n        // Post-render\r\n        self.postRenderContainer(container);\r\n\r\n        return self.container;\r\n    },\r\n    /*\r\n    *   Renders container html\r\n    */\r\n    renderContainerHtml: function () {\r\n        var self = this;\r\n        // Start rendering deferred\r\n        self.renderingDeferred = self.renderingDeferred || new $.Deferred();\r\n\r\n        return this.renderContainer();\r\n    },\r\n    /*\r\n    *   Check if the jquery element is ready or not\r\n    */\r\n    isRendered: function () {\r\n        var self = this;\r\n        if (!self.renderingDeferred)\r\n            return false;\r\n        return self.renderingDeferred.promise();\r\n    },\r\n    /*\r\n    *   Return the rendered element\r\n    */\r\n    getRenderedElement: function () {\r\n        if (bizagi.util.isEmpty(this.container))\r\n            alert(\"container hasn't been rendered!\");\r\n\r\n        return this.container;\r\n    },\r\n    /* \r\n    *   Set container defaults\r\n    */\r\n    applyContainerDefaults: function () {\r\n        var self = this,\r\n                properties = self.properties;\r\n\r\n        // Set customizations\r\n        if (properties.backgroundColor)\r\n            self.changeBackgroundColor(properties.backgroundColor);\r\n\r\n        // Set editability and visiblity\r\n        if (!properties.visible)\r\n            self.changeVisibility(properties.visible);\r\n    },\r\n    /* \r\n    *  Changes background color \r\n    */\r\n    changeBackgroundColor: function (color) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        properties.backgroundColor = color;\r\n\r\n        // Iterate through elements\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.changeBackgroundColor(color);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                child.changeBackgroundColor(color);\r\n            }\r\n        });\r\n    },\r\n    /* \r\n    *   Hides / Show container \r\n    */\r\n    changeVisibility: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Store in properties\r\n        properties.visible = bizagi.util.parseBoolean(argument);\r\n\r\n        // Hide - show the render\r\n        if (properties.visible) {\r\n            self.container.show();\r\n\r\n        } else {\r\n            self.container.hide();\r\n        }\r\n    },\r\n    /* Changes editability */\r\n    changeEditability: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Store in properties\r\n        properties.editable = argument == \"Default\" ? self.originalProperties.editable: bizagi.util.parseBoolean(argument);\r\n\r\n        // Iterate through elements\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.changeEditability(argument);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                child.changeEditability(argument);\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Replaces a <x/> tag in the container for the specified \"replace\" element\r\n    */\r\n    replaceTag: function (container, tag, replace) {\r\n        bizagi.util.replaceSelector(container, tag, replace);\r\n    },\r\n    /*\r\n    *   Replaces a <children/> tag in the container for the specified \"replace\" element\r\n    */\r\n    replaceChildrenTag: function (container, replace) {\r\n        this.replaceTag(container, \".children\", replace);\r\n    },\r\n    /*\r\n    *   Replaces a {{children}} string in the specified element\r\n    */\r\n    replaceChildrenHtml: function (html, replace) {\r\n        return html.replaceFirstWithoutPatterns(\"{{children}}\", replace);\r\n    },\r\n    /*\r\n    *   Template method to render the container layout, returns a string with all the builded html,\r\n    *   must be overriden in all children\r\n    */\r\n    renderContainer: function () {\r\n    },\r\n    /*\r\n    *   Template method to process each jquery object\r\n    *   must be overriden in each container\r\n    */\r\n    postRenderContainer: function (container) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n\r\n        // Resolve rendering deferred\r\n        if (self.renderingDeferred)\r\n            self.renderingDeferred.resolve();\r\n\r\n        // Process children elements\r\n        self.container = container;\r\n        self.executeChildrenPostRender(container);\r\n\r\n        if (mode == \"execution\") {\r\n            // Apply handlers\r\n            self.configureHandlers();\r\n            self.applyPlaceHolderPolyfill();\r\n\r\n        }\r\n        if (mode == \"design\") {\r\n            // Configure view\r\n            self.configureDesignView();\r\n        }\r\n        if (mode == \"layout\") {\r\n            // Configure view\r\n            self.configureDesignView();\r\n            self.configureLayoutView();\r\n        }\r\n    },\r\n\r\n    applyPlaceHolderPolyfill: function () {\r\n        var self = this;\r\n        var config = window.placeHolderConfig || {};\r\n        if (('placeholder' in $('<input>')[0] || 'placeHolder' in $('<input>')[0]) && !config.forceApply) {\r\n            // don't run the polyfill when the browser has native support\r\n            return;\r\n        }\r\n        Placeholders.enable();\r\n    },\r\n    /*\r\n    *   Process container children\r\n    */\r\n    executeChildrenPostRender: function (container) {\r\n        var self = this;\r\n        var childrenElements = container.children();\r\n\r\n        $.each(childrenElements, function (i, childElement) {\r\n            childElement = $(childElement);\r\n            var id = Number(childElement.data(\"unique-id\"));\r\n            if (id) {\r\n                var child = self.childrenHash[id];\r\n                if (child) {\r\n                    var type = child.getElementType();\r\n                    if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER)\r\n                        child.postRenderElement(childElement);\r\n                    if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER)\r\n                        child.postRenderContainer(childElement);\r\n                }\r\n            } else {\r\n                self.executeChildrenPostRender(childElement);\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour when rendering in design mode\r\n    */\r\n    configureDesignView: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to show layout\r\n    */\r\n    configureLayoutView: function () {\r\n\r\n    },\r\n    /**\r\n    *   Renders all children html\r\n    */\r\n    renderChildrenHtml: function () {\r\n        var self = this;\r\n        var temp = \"\";\r\n\r\n        $.each(self.children, function (i, child) {\r\n            var type = child.getElementType();\r\n            if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER)\r\n                temp += child.renderElement();\r\n            if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER)\r\n                temp += child.renderContainerHtml();\r\n            self.childrenHash[child.properties.uniqueId] = child;\r\n        });\r\n\r\n        return temp;\r\n    },\r\n    /*\r\n    *   Iterate through all the renders in the container and fills the hashtable\r\n    */\r\n    collectRenderValues: function (renderValues) {\r\n        var self = this;\r\n        if (self.children) {\r\n            $.each(self.children, function (i, child) {\r\n                if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                    // Go though container\r\n                    child.collectRenderValues(renderValues);\r\n\r\n                } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                    // Check if the render can be sent to the server\r\n                    if (child.canBeSent()) {\r\n                        child.collectData(renderValues);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Iterate through all the renders and check if has changed\r\n    */\r\n    hasChanged: function (result) {\r\n        var self = this;\r\n        result = result || [];\r\n\r\n        if (!result.length) {\r\n            if(self.children){\r\n                $.each(self.children, function (i, child) {\r\n                    if (result.length || child.hasChanged(result)) {\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            return result;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *    Creates a json array parameters to search result\r\n    */\r\n    collectRenderValuesQueryForm: function (renderValues) {\r\n        var self = this;\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                // Go though container\r\n                child.collectRenderValuesQueryForm(renderValues);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                // Check if the render can be sent to the server\r\n                if (child.canBeSentQueryForm()) {\r\n                    child.collectDataQueryForm(renderValues);\r\n                }\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Gets the first child\r\n    */\r\n    firstChild: function () {\r\n        return this.children[0];\r\n    },\r\n    /*\r\n    *   Method to find all the renders matching an xpath inside the container\r\n    */\r\n    getRenders: function (xpath, renders) {\r\n        var self = this;\r\n\r\n        renders = renders || [];\r\n\r\n        // Remove [] filters for grid columns xpaths to fully identify the grid as the xpath target\r\n        if (xpath.indexOf(\"[\") > 0) {\r\n            xpath = xpath.substring(0, xpath.indexOf(\"[\"));\r\n        }\r\n\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                // Go though container\r\n                child.getRenders(xpath, renders);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                if (xpath == child.properties.xpath) {\r\n                    renders.push(child);\r\n                }\r\n            }\r\n        });\r\n\r\n        return renders;\r\n    },\r\n    /* \r\n    *   Gets the first editable render \r\n    */\r\n    getRender: function (xpath) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        var result = null;\r\n        $.each(renders, function (i, render) {\r\n            if (render.properties.editable) {\r\n                if (result == null)\r\n                    result = render;\r\n            }\r\n        });\r\n\r\n        // if no render has been found, skip editable condition\r\n        if (result == null) {\r\n            $.each(renders, function (i, render) {\r\n                result = render;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n     *   Gets all renders by xpath\r\n     */\r\n    getRendersByXpath: function (xpath) {\r\n        var self = this;\r\n        return self.getRenders(xpath);\r\n    },\r\n\r\n    /* \r\n    *   Gets a container by the id\r\n    */\r\n    getContainer: function (id) {\r\n        var self = this;\r\n\r\n        if (self.properties.id == id)\r\n            return this;\r\n\r\n        var result;\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                // Go though container\r\n                var o = child.getContainer(id);\r\n                if (o != null) {\r\n                    result = o;\r\n                    return false;\r\n                }\r\n            }\r\n        });\r\n\r\n        return result;\r\n    },\r\n    /* \r\n    *   Validate all renders in the container \r\n    */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n\r\n        if (self.children) {\r\n            $.each(self.children, function (i, child) {\r\n                if (child.properties.visible) {\r\n                    if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                        // Go though container\r\n                        child.isValid(invalidElements);\r\n                    } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                        // Go to the render\r\n                        child.isValid(invalidElements);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        return invalidElements.length == 0;\r\n    },\r\n\r\n    /*\r\n   *   Validate all grids in the container\r\n   */\r\n    hasValidGrids: function (invalidElements) {\r\n        var self = this;\r\n\r\n        $.each(self.children, function (i, child) {\r\n            if (child.properties.visible) {\r\n                if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                    // Go though container\r\n                    child.hasValidGrids(invalidElements);\r\n\r\n                } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER && typeof (child.grid) != \"undefined\") {\r\n                    // Go to the render\r\n                    child.isValid(invalidElements);\r\n                }\r\n            }\r\n        });\r\n\r\n        return invalidElements.length == 0;\r\n    },\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n        return $.when(self.parent.ready(), self.isRendered());\r\n    },\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready to save\r\n    */\r\n    isReadyToSave: function () {\r\n        var self = this;\r\n        var childrenPromises = $.map(self.children, function (child) {\r\n            return child.isReadyToSave();\r\n        });\r\n        return $.when.apply($, childrenPromises);\r\n    },\r\n    /*  \r\n    *   Return the current focuses container\r\n    */\r\n    getFocus: function () {\r\n        var self = this;\r\n        var focus;\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                var result = child.getFocus();\r\n                if (!bizagi.util.isEmpty(result)) {\r\n                    focus = result;\r\n                }\r\n            }\r\n        });\r\n\r\n        return focus;\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n\r\n        if (form) {\r\n            return form.getCustomHandlers();\r\n        }\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandler: function (key) {\r\n        var self = this;\r\n        var customHandlers = self.getCustomHandlers();\r\n\r\n        if (customHandlers) {\r\n            return customHandlers[key];\r\n        }\r\n    },\r\n    /*\r\n    *   Dispose the class so we can detect when a class is invalid already\r\n    */\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        // Iterate through elements\r\n        setTimeout(function () {\r\n            if (self.children) {\r\n                $.each(self.children, function (i, child) {\r\n                    child.dispose();\r\n                });\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    },\r\n\r\n    /*\r\n    *   Refresh the current container\r\n    */\r\n    refreshContainer: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n\r\n        // Start waiting\r\n        self.startLoading();\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh();\r\n\r\n        // Call the service\r\n        return $.when(self.dataService.multiaction().refreshControl({\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: (properties.xpathContext || args.xpathContext),\r\n            contexttype: self.properties.contexttype || \"\",\r\n            idForm: (form && form.properties && form.properties.id) ? form.properties.id : \"\" //To fix BA56877.\r\n        })).done(function (data) {\r\n\r\n            if (!self.isDisposed()) {\r\n\r\n                // Unregister children of container to replace in hash self.rendersById and self.rendersByXpath\r\n                self.unregisterChildren();\r\n                delete self.children;\r\n                delete self.childrenHash;\r\n\r\n                self.getFormContainer().removeActions();\r\n\r\n                // update editable\r\n                if (self.properties.editable === false) {\r\n                    data.container && data.container.properties ? (data.container.properties.editable = false) : \"\";\r\n                }\r\n\r\n                // Update the data\r\n                self.initializeData(data.container);\r\n\r\n                // Render the container again\r\n                var currentContainer = self.container;\r\n                var result = self.render();\r\n\r\n                if (self.properties.type == \"tabItem\") {\r\n                    $(result).addClass(\"childrenActive\");\r\n                }\r\n\r\n                currentContainer.replaceWith(result);\r\n\r\n                // Rebind the actions\r\n                var actions = data.container && data.container.actions ? data.container.actions : [];\r\n                self.getFormContainer().refreshActions(actions);\r\n\r\n                self.triggerChildrenActions();\r\n\r\n                // Execute personalized stuff after to refresh it\r\n                self.afterToRefresh();\r\n\r\n            }\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n\r\n        }).always(function () {\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Refresh the current container\r\n     */\r\n    refreshDesignContainer: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh(data);\r\n        //self.setActiveTab(data.elements);\r\n\r\n        $.extend(data.properties, {\r\n            editable: properties.editable,\r\n            contexttype: (properties.contexttype || \"\"),\r\n            idPageCache: properties.idPageCache,\r\n            idRender: properties.id,\r\n            messageValidation: properties.messageValidation,\r\n            uniqueId: properties.uniqueId,\r\n            visible:properties.visible,\r\n            xpath: properties.xpath,\r\n            mode: \"design\",\r\n            xpathContext: properties.xpathContext || \"\"\r\n        });\r\n\r\n\r\n        if (!self.isDisposed()) {\r\n            // Unregister children of container to replace in hash self.rendersById and self.rendersByXpath\r\n            self.unregisterChildren();\r\n            delete self.children;\r\n            delete self.childrenHash;\r\n\r\n            // update editable\r\n            if (self.properties.editable === false) {\r\n                data.container && data.container.properties ? (data.container.properties.editable = false) : \"\";\r\n            }\r\n\r\n            // Update the data\r\n            self.initializeData(data.container);\r\n\r\n            // Render the container again\r\n            var currentContainer = self.container;\r\n            var result = self.render();\r\n\r\n            if (self.properties.type == \"tabItem\") {\r\n                $(result).addClass(\"childrenActive\");\r\n            }\r\n\r\n            currentContainer && currentContainer.replaceWith(result);\r\n\r\n            // Execute personalized stuff after to refresh it\r\n            self.afterToRefresh();\r\n        }\r\n    },\r\n\r\n    beforeToRefresh: function () {\r\n        var self = this;\r\n\r\n        // Call beforeToRefresh of each children\r\n        for (var i = 0; i < self.children.length; i++) {\r\n            self.children[i].beforeToRefresh();\r\n        }\r\n    },\r\n\r\n    afterToRefresh: function () {\r\n        var self = this;\r\n\r\n        var formContainer = self.getFormContainer();\r\n        formContainer.tryToExecuteFunction(self.properties.id);\r\n\r\n        // Call beforeToRefresh of each children\r\n        for (var i = 0; i < self.children.length; i++) {\r\n            self.children[i].afterToRefresh();\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Re-execute children actions\r\n    */\r\n    triggerChildrenActions: function () {\r\n        var self = this;\r\n\r\n        var form = self.getFormContainer();\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n            var type = child.getElementType();\r\n\r\n            if (type === bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.triggerChildrenActions();\r\n            }\r\n            else if (type === bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                child.triggerRenderChange({ changed: false });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /*\r\n    * register actions container\r\n    */\r\n    registerActions: function (actions) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n\r\n        if (actions) {\r\n            form.actionController.buildActions(actions);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * unregister children container\r\n    */\r\n    unregisterChildren: function () {\r\n        var self = this;\r\n\r\n        var form = self.getFormContainer();\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n            var type = child.getElementType();\r\n\r\n            if (type === bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.unregisterChildren();\r\n            }\r\n            else if (type === bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                form.unregisterRender(child);\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * Replace child\r\n    */\r\n    replaceChild: function (element) {\r\n        var self = this;\r\n\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n\r\n            if (child.properties.uniqueId == element.properties.uniqueId) {\r\n                children.splice(i, 1);\r\n                children.splice(i, 0, element);\r\n                break;\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * Gets child\r\n    */\r\n    getChildById: function (id) {\r\n\r\n        var self = this;\r\n\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n\r\n            if (child.properties.id == id) {\r\n                return child;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Form Container Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a form container class that defines basic stuff regarding the device\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.form\", {}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n        var data = params.data;\r\n        var device = bizagi.util.detectDevice();\r\n\r\n        // Creates a hashtable to maintain references by id\r\n        self.rendersById = {};\r\n        self.rendersByXpath = {};\r\n        self.rendersByXpathId = {};\r\n        self.rendersByType = {};\r\n\r\n        // Set page cache id\r\n        self.idPageCache = data.pageCacheId;\r\n\r\n        // Set default mode\r\n        self.mode = params.mode || \"execution\";\r\n        self.focus = params.focus;\r\n\r\n        // Set rendering params\r\n        self.params = params;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Define confirmation message \r\n        var message = \"\";\r\n\r\n        if (device !== \"desktop\") {\r\n            message = this.getResource(\"render-form-user-confirmation-message\").replace(/<br(\\/| \\/)>/g, \"\\n\");\r\n        } else {\r\n            message = this.getResource(\"render-form-user-confirmation-message\");\r\n        }\r\n\r\n        // Default properties\r\n        var properties = self.properties;\r\n        properties.sessionId = data.sessionId;\r\n        properties.displayAsReadOnly = bizagi.util.parseBoolean(data.displayAsReadOnly) || false;\r\n        properties.userConfirmationMessage = properties.userConfirmationMessage || message;\r\n        properties.orientation = properties.orientation || \"ltr\";\r\n        properties.hasRule = bizagi.util.parseBoolean(properties.hasRule) || false;\r\n        properties.contexttype = params.contexttype || \"\";\r\n        properties.paramsRender = params.paramsRender || {};\r\n        properties.processPath = params.data.processPath ? params.data.processPath.replaceAll(\"|/|\", \"  &rsaquo;  \") : \"\";\r\n        properties.breadCrumb = params.data.processPath ? params.data.processPath.split(\"|/|\") : [];\r\n\r\n        // Set validations & actions\r\n        this.validations = data.validations;\r\n        this.actions = data.actions;\r\n\r\n        // Enable the \"Validate and Save\" action for Form Buttons\r\n        self.allowValidateAndSaveAction = bizagi.override && bizagi.override.enableActionValidateAndSave === true;\r\n\r\n        // Initialize buttons\r\n        self.initializeButtons(data);\r\n\r\n        // Define transitions to Complex Gateway\r\n        if (data.transitions) {\r\n            self.transitions = data.transitions;\r\n        }\r\n\r\n        this.originalProcessButton = this.processButton;\r\n\r\n        //Custom behaviour for application parent activated.\r\n        self.isRoutingDisabled = false;\r\n        if (params.applicationParent) {\r\n            switch (params.applicationParent) {\r\n                case 'NEWWORKPORTAL':\r\n                    self.isRoutingDisabled = true;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        self.isOfflineFormsV2Supported = bizagi.util.isMobileDevice() && bizagi.util.isOfflineFormsV2Supported();\r\n        self.isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n    },\r\n\r\n    /*\r\n    *   Initializes button metadata\r\n    */\r\n    initializeButtons: function (data) {\r\n        var self = this;\r\n\r\n        self.buttons = [];\r\n\r\n        // Process buttons\r\n        if (data.buttons) {\r\n            $.each(data.buttons, function (i, item) {\r\n                var button = item.button.properties;\r\n\r\n                // Process caption\r\n                button.caption = !bizagi.util.isEmpty(button.caption) && self.getResource(button.caption) != button.caption ? self.getResource(button.caption) : button.caption;\r\n\r\n                // Process actions\r\n                if (button.actions) {\r\n                    $.each(button.actions, function (i, action) {\r\n                        button[action] = true;\r\n                    });\r\n                }\r\n\r\n                // Add other properties\r\n                button.ordinal = i;\r\n                button.action = button.next ? \"next\" :\r\n                    button.nextWithoutValidations ? \"nextWithoutValidations\" :\r\n                        button.submitData ? \"save\" :\r\n                            button.cancel ? \"cancel\" :\r\n                                button.back ? \"back\" :\r\n                                    button.createnewcase ? \"createnewcase\" :\r\n                                        button.validate ? \"validate\" : \"\";\r\n\r\n                // Explicit add save operation\r\n                button.save = (button.action === \"save\");\r\n\r\n                // Add inherent behaviours\r\n                if (button.next || button.back || button.nextWithoutValidations) {\r\n                    button.routing = true;\r\n                }\r\n\r\n                if (button.hasRule) {\r\n                    button.executeRule = true;\r\n                }\r\n\r\n                if (self.allowValidateAndSaveAction && button.validate) {\r\n                    button.submitData = true;\r\n                    button.refresh = true;\r\n                    button.save = true;\r\n                    if (button.action === \"next\" || button.action === \"createnewcase\") {\r\n                        button.refresh = false;\r\n                    }\r\n                }\r\n\r\n                // Prepare button style\r\n                button.style = self.buildButtonStyle(button);\r\n\r\n                // Add to button array\r\n                if (self.properties.orientation === \"rtl\" && !self.properties.useCustomButtons) {\r\n                    self.buttons.unshift(button);\r\n                } else {\r\n                    self.buttons.push(button);\r\n                }\r\n\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Get the original params used to fetch the form\r\n    */\r\n    getParams: function () {\r\n        return this.params;\r\n    },\r\n\r\n    setParam: function (property, value) {\r\n        if (this.params) {\r\n            this.params[property] = value;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Get current rendering mode\r\n    */\r\n    getMode: function () {\r\n        return this.mode;\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        var self = this;\r\n        if (self.params) {\r\n            return self.params.customHandlers;\r\n        }\r\n    },\r\n    /*\r\n    * Method to index renders\r\n    */\r\n    registerRender: function (render) {\r\n        var self = this;\r\n        var xpath = render.properties.xpath;\r\n        var id = render.properties.id;\r\n        var type = render.properties.type;\r\n        var xpathId = xpath ? xpath + \".\" + id : undefined;\r\n\r\n        self.rendersById[id] = render;\r\n        if (xpath) {\r\n            if (!self.rendersByXpath[xpath]) {\r\n                self.rendersByXpath[xpath] = [];\r\n            }\r\n            self.rendersByXpath[xpath].push(render);\r\n        }\r\n\r\n        if (xpathId) {\r\n            if (!self.rendersByXpathId[xpathId]) {\r\n                self.rendersByXpathId[xpathId] = [];\r\n            }\r\n            self.rendersByXpathId[xpathId].push(render);\r\n        }\r\n\r\n        if (!self.rendersByType[type]) {\r\n            self.rendersByType[type] = [];\r\n        }\r\n        self.rendersByType[type].push(render);\r\n    },\r\n    /*\r\n    * Method to unregister render\r\n    */\r\n    unregisterRender: function (render) {\r\n        var self = this;\r\n\r\n        if (self.rendersById[render.properties.id]) {\r\n            delete self.rendersById[render.properties.id];\r\n        }\r\n\r\n        if (render.properties.xpath) {\r\n            if ($.isArray(self.rendersByXpath[render.properties.xpath])\r\n                && self.rendersByXpath[render.properties.xpath].length > 1) {\r\n                for (var i = 0, l = self.rendersByXpath[render.properties.xpath].length; i < l; i++) {\r\n                    var element = self.rendersByXpath[render.properties.xpath][i];\r\n                    if (element.properties.id === render.properties.id) {\r\n                        self.rendersByXpath[render.properties.xpath].splice(i, 1);\r\n                        self.rendersByXpathId[render.properties.xpath + '.' + render.properties.id].splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                delete self.rendersByXpath[render.properties.xpath];\r\n            }\r\n        }\r\n\r\n        // Unregister from renders by type\r\n        if (render.properties.type) {\r\n            var listRendesByType = self.getRenderByType(render.properties.type);\r\n            var listRendesByTypeLength = listRendesByType.length;\r\n            var renderKey = render.properties.id || render.properties.xpath;\r\n\r\n            for (var i = 0; i < listRendesByTypeLength; i++) {\r\n                var listRender = listRendesByType[i];\r\n                if ((typeof listRender.properties.id != \"undefined\" && listRender.properties.id == renderKey) ||\r\n                    (typeof listRender.properties.xpath != \"undefined\" && listRender.properties.xpath == renderKey)) {\r\n                    // Unregister element\r\n                    self.rendersByType[render.properties.type].splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * Method to access a render by id\r\n    */\r\n    getRenderById: function (id) {\r\n        var self = this;\r\n\r\n        return self.rendersById[id];\r\n    },\r\n\r\n    getGridByColumn: function (id) {\r\n        var self = this;\r\n        var grids = self.getRenderByType('grid');\r\n        var i = 0, columnIndex;\r\n\r\n        for (; i < grids.length; i++) {\r\n            columnIndex = grids[i].columnsIds.indexOf(id);\r\n            if (columnIndex != -1) {\r\n                return grids[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Method to find all the renders matching an xpath inside the container\r\n    */\r\n    getRenders: function (xpath) {\r\n        var self = this;\r\n\r\n        // Remove [] filters for grid columns xpaths to fully identify the grid as the xpath target\r\n        if (xpath && xpath.indexOf)\r\n            if (xpath.indexOf(\"[\") > 0) {\r\n                xpath = xpath.substring(0, xpath.indexOf(\"[\"));\r\n            }\r\n\r\n        return self.rendersByXpathId[xpath] ?\r\n            self.rendersByXpathId[xpath] : self.rendersByXpath[xpath] ?\r\n                self.rendersByXpath[xpath] : [];\r\n    },\r\n    /**\r\n     * Get all render with the same type\r\n     */\r\n    getRenderByType: function (type) {\r\n        var self = this;\r\n\r\n        // Check that type is defined\r\n        if (typeof type == \"string\" && type.length > 0) {\r\n            // Search controls by type\r\n            return (self.rendersByType[type]) ? self.rendersByType[type] : [];\r\n        }\r\n        return [];\r\n    },\r\n\r\n    /*\r\n    *   Build the container html\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"form\");\r\n        var idCase = \"\";\r\n\r\n        // Render the form\r\n        var html = $.fasttmpl(template, {\r\n            buttons: self.buttons,\r\n            transitions: self.transitions,\r\n            uniqueId: properties.uniqueId,\r\n            helptext: properties.helpText,\r\n            mode: self.getMode(),\r\n            queryForm: self.getFormType() == \"queryForm\",\r\n            summaryForm: self.params.summaryForm || false,\r\n            globalForm: self.properties.displayAsReadOnly || false,\r\n            idCase: idCase,\r\n            displayName: self.params.displayName || idCase,\r\n            processPath: properties.processPath,\r\n            breadCrumb: properties.breadCrumb,\r\n            orientation: properties.orientation\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n    /*\r\n    *   Process the html rendering object\r\n    */\r\n    postRenderContainer: function (form) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        // Add a mode class\r\n        form.addClass(\"ui-bizagi-rendering-mode-\" + mode);\r\n\r\n        // Call base\r\n        this._super(form);\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var complexGatewayContainer;\r\n        var form = self.container;\r\n\r\n        if (form.length > 1) {\r\n            $(form).each(function () {\r\n                if ($(this).hasClass('ui-bizagi-container-complexgateway')) {\r\n                    complexGatewayContainer = this;\r\n                }\r\n            });\r\n        } else {\r\n            complexGatewayContainer = $(\".ui-bizagi-container-complexgateway\", form);\r\n        }\r\n\r\n        // activeTransitions is used to store ids of activities in Complex Gateway\r\n        self.activeTransitions = {};\r\n\r\n        // Process buttons\r\n        self.processButtons(form);\r\n\r\n        // Check for dom included event\r\n        self.bind(\"ondomincluded\", function (e, mainForm) {\r\n            // Creates validation controller after the form is ready\r\n            self.validationController = new bizagi.command.controllers.validation(self, self.validations, mainForm);\r\n            // Creates action controller after the form is ready\r\n            self.actionController = new bizagi.command.controllers.action(self, self.actions);\r\n\r\n            // Resolve this deferred to start executing DOM dependant plugins\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n        // Set events for complex gateway interface\r\n        $(complexGatewayContainer).find(\".ui-checkbox\").bind(\"click\", function () {\r\n            var checkboxLabel = $(\"label\", this);\r\n\r\n            var transitionId = checkboxLabel.data(\"value\") || \"\";\r\n            if (typeof self.activeTransitions[transitionId] == \"undefined\") {\r\n                self.activeTransitions[transitionId] = false;\r\n            }\r\n\r\n            if (bizagi.util.parseBoolean(checkboxLabel.data(\"checked\"))) {\r\n                // Uncheck element\r\n                checkboxLabel.removeClass(\"ui-checkbox-state-checked\");\r\n                checkboxLabel.removeClass(\"bz-check\").addClass(\"bz-full-ball\");\r\n                checkboxLabel.data(\"checked\", false);\r\n                self.activeTransitions[transitionId] = false;\r\n            } else {\r\n                // Check element\r\n                checkboxLabel.addClass(\"ui-checkbox-state-checked\");\r\n                checkboxLabel.addClass(\"bz-mo-icon\").addClass(\"bz-check\").removeClass(\"bz-full-ball\");\r\n                checkboxLabel.data(\"checked\", true);\r\n                self.activeTransitions[transitionId] = true;\r\n            }\r\n        });\r\n\r\n\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour when rendering in design mode\r\n    */\r\n    configureDesignView: function () {\r\n        var self = this;\r\n\r\n\r\n        // Check for dom included event\r\n        self.bind(\"ondomincluded\", function () {\r\n            // Resolve this deferred to start executing DOM dependant plugins\r\n            self.readyDeferred.resolve();\r\n        });\r\n    },\r\n    /*\r\n    *   Format form buttons to allow further customization\r\n    */\r\n    buildButtonStyle: function (button) {\r\n\r\n        var style = {};\r\n        if (button.format) {\r\n            if (button.format.size) {\r\n                if (button.format.size != \"0\") {\r\n                    var newFontSize = (100 + Number(button.format.size) * 10) + \"%\";\r\n                    style[\"font-size\"] = newFontSize + \" !important\";\r\n                }\r\n            }\r\n            if (button.format.bold) {\r\n                style[\"font-weight\"] = \"bold !important\";\r\n                if (bizagi.util.isIE()) {\r\n                    style[\"font-family\"] = \"'Open Sans', 'Helvetica Neue', Arial, Helvetica, sans-serif !important\";\r\n                }\r\n            }\r\n            if (button.format.italic) {\r\n                style[\"font-style\"] = \"italic !important\";\r\n            }\r\n            if (button.format.underline || button.format.strikethru) {\r\n                var strikethru = bizagi.util.parseBoolean(button.format.strikethru) ? \"line-through \" : \"\";\r\n                var underline = bizagi.util.parseBoolean(button.format.underline) ? \"underline \" : \"\";\r\n                style[\"text-decoration\"] = strikethru + underline + \" !important\";\r\n            }\r\n            if (button.format.background) {\r\n                style[\"background-color\"] = button.format.background + \" !important\";\r\n                style[\"background-image\"] = \"none !important\";\r\n            }\r\n            if (button.format.color) {\r\n                style[\"color\"] = button.format.color + \" !important\";\r\n            }\r\n        }\r\n\r\n        var strStyle = \"\";\r\n        for (key in style) {\r\n            strStyle += key + \":\" + style[key] + \";\";\r\n        }\r\n        return strStyle;\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    *   Returns a promise\r\n    */\r\n    render: function () {\r\n        var self = this;\r\n\r\n        // Creates a deferred, so we can check when form has been included in dom\r\n        if (!self.readyDeferred)\r\n            self.readyDeferred = new $.Deferred();\r\n\r\n        // Call base\r\n        var result = this._super();\r\n\r\n        return result;\r\n    },\r\n    /*\r\n    *   Sets a promise that the form will be included in the DOM\r\n    *   so we can apply some tedious plugins that require that\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n\r\n        return self.readyDeferred.promise();\r\n    },\r\n    /*\r\n    *   Returns the xpath context of the element\r\n    */\r\n    getXpathContext: function () {\r\n        return this.properties.xpathContext || \"\";\r\n    },\r\n    /*\r\n    *  Return context type, when the parent form is entity\r\n    */\r\n    getContextType: function () {\r\n        return this.properties.contexttype || \"\";\r\n    },\r\n\r\n    /*\r\n    * Return the endpoint action, when the form will be refresh\r\n    */\r\n    getEndPointAction: function () {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        if (properties.formtype == \"startform\")\r\n            return \"LOADSTARTFORM\";\r\n\r\n        return undefined;\r\n\r\n    },\r\n\r\n    /*\r\n    *   Returns the page cache id for the element\r\n    */\r\n    getPageCache: function () {\r\n        return this.idPageCache;\r\n    },\r\n    /*\r\n    *   Returns the form containing the element\r\n    */\r\n    getFormContainer: function () {\r\n        return this;\r\n    },\r\n    /*\r\n    *   Method to process button actions in the form\r\n    */\r\n    processButtons: function () {\r\n        var self = this;\r\n        var buttons = self.getButtons();\r\n\r\n        // Don't process buttons if they are undefined in the template\r\n        if (!buttons || buttons.length == 0) {\r\n            return;\r\n        }\r\n\r\n        // Attach a handler for each button\r\n        buttons.on(\"click\", function (e) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n\r\n            self.startLoading();\r\n\r\n            var button = $(this);\r\n            var ordinal = button.attr(\"ordinal\");\r\n            var buttonProperties = self.buttons[ordinal];\r\n\r\n            self.lastActionButton = buttonProperties;\r\n            if (buttonProperties.action === \"next\") {\r\n                buttonProperties.routingDisabled = self.isRoutingDisabled;\r\n            }\r\n\r\n            button.prop(\"disabled\", true); //disable button to prevent multiple click actions\r\n\r\n            if (button.hasOwnProperty('disabled')) {\r\n                button.button(\"disable\"); //Setting styles\r\n            }\r\n\r\n            // External Events\r\n            self.propagateExternalEvents(e);\r\n\r\n            // Execute button\r\n            //QAF-1418 - add setTimeout\r\n            setTimeout(function () {\r\n                $.when(self.processButton(buttonProperties)).always(function () {\r\n                    self.processDefer = undefined;\r\n                    self.endLoading();\r\n                    if ($.contains(document.documentElement, button.get(0))) { //check if button is still in DOM\r\n                        button.prop(\"disabled\", false);  //enable button\r\n\r\n                        if (button.hasOwnProperty('enable')) {\r\n                            button.button(\"enable\"); //Setting styles\r\n                        }\r\n                    }\r\n                });\r\n            }, 100);\r\n        });\r\n    },\r\n    /*\r\n    * Execute codes just before sending information to server\r\n    */\r\n    preProcessButton: function (buttonProperties) {\r\n        return true;\r\n    },\r\n    /*\r\n    * Execute codes just after sending information to server\r\n    */\r\n    postProcessButton: function (responses, buttonProperties) {\r\n        return true; // true means continue\r\n    },\r\n\r\n    setLoaderDeferred: function () {\r\n        var self = this;\r\n\r\n        self.loaderDeferred = $.Deferred().resolve();\r\n    },\r\n\r\n    deleteLoaderDeferred: function () {\r\n        var self = this;\r\n\r\n        if (self.isLoaderDeferredSet()) {\r\n            $.when(self.loaderDeferred.promise()).done(function () {\r\n                delete self.loaderDeferred;\r\n            }).fail(function () {\r\n                delete self.loaderDeferred;\r\n            });\r\n        }\r\n    },\r\n\r\n    useOrSetLoaderDeferred: function () {\r\n        var self = this;\r\n\r\n        if (!self.isLoaderDeferredSet()) {\r\n            self.setLoaderDeferred();\r\n        }\r\n    },\r\n\r\n    getLoaderPromise: function () {\r\n        var self = this;\r\n\r\n        if (self.isLoaderDeferredSet()) {\r\n            return self.loaderDeferred.promise();\r\n        } else {\r\n            return;\r\n        }\r\n    },\r\n\r\n    isLoaderDeferredSet: function () {\r\n        var self = this;\r\n\r\n        if (self.loaderDeferred) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    appendWaitForLoader: function (params) {\r\n        var self = this;\r\n        var promise = params.promise;\r\n        var create = params.create || false;\r\n\r\n        if (!self.isLoaderDeferredSet()) {\r\n            if (create) {\r\n                self.setLoaderDeferred();\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n\r\n        self.loaderDeferred = self.loaderDeferred.then(function () {\r\n            return (function () {\r\n                return promise;\r\n            })();\r\n        });\r\n    },\r\n\r\n    getResolveOrReject: function () {\r\n        var self = this;\r\n        var deferred = $.Deferred();\r\n\r\n        if (self.isLoaderDeferredSet()) {\r\n            $.when(self.loaderDeferred.promise()).done(function () {\r\n                deferred.resolve();\r\n            }).fail(function () {\r\n                deferred.resolve();\r\n            });\r\n        } else {\r\n            deferred.resolve();\r\n        }\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n\r\n    /*\r\n    *   Executes a single button action\r\n    */\r\n    processButton: function (buttonProperties) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n        var properties = self.properties;\r\n        if (!buttonProperties.routing) {\r\n            bizagi.chrono.initAndStart(\"submitForm\");\r\n        }\r\n        bizagi.chrono.init(\"waiting\");\r\n\r\n        // First hide and clear validation box\r\n        self.validationController.clearValidationMessages();\r\n\r\n        // Resolve asynchronous tabItems\r\n        var form = self.getFormContainer();\r\n        var getAllTabs = form.getRenderByType(\"tabItem\");\r\n        var getAllTabsLength = getAllTabs.length;\r\n\r\n        form.innerTabsLoading = true;\r\n\r\n        self.useOrSetLoaderDeferred();\r\n\r\n        // Check\r\n        for (var i = 0; i < getAllTabsLength; i++) {\r\n            var render = getAllTabs[i];\r\n            // Resolve internal deferred\r\n            if (render.loadingDeferred && render.parent.container) {\r\n                render.loadingDeferred.resolve();\r\n            }\r\n        }\r\n\r\n        delete form.innerTabsLoading;\r\n\r\n        $.when(self.ready(), self.getResolveOrReject()).done(function () {\r\n            self.deleteLoaderDeferred();\r\n            // Validate the form\r\n            var valid = bizagi.util.parseBoolean(buttonProperties.validate) ? self.validationController.performValidations() : true;\r\n            if (valid) {\r\n\r\n                if ([\"save\", \"next\", \"back\", \"createnewcase\", \"nextWithoutValidations\"].includes(buttonProperties.action)) {\r\n                    $(document).data('auto-save', '');\r\n                }\r\n\r\n                // Check for user confirmation if configured and the button is configured to enroute\r\n                if (bizagi.util.parseBoolean(self.properties.needsUserConfirmation) && bizagi.util.parseBoolean(buttonProperties.routing)) {\r\n                    self.endLoading();\r\n                    $.when(bizagi.showConfirmationBox(properties.userConfirmationMessage, null, false)).done(function () {\r\n                        // Submits the form\r\n                        if (self.preProcessButton(buttonProperties)) {\r\n                            //Trigger the event after ProcessButton\r\n                            self.triggerGlobalHandler(\"renderActionButton\", buttonProperties);\r\n                            $.when(self.submitForm(buttonProperties)).done(function () {\r\n                                defer.resolve();\r\n                            }).fail(function () {\r\n                                defer.reject(arguments);\r\n                            });\r\n                        }\r\n                    }).fail(function () {\r\n                        defer.reject();\r\n                    });\r\n\r\n                } else {\r\n                    if (self.preProcessButton(buttonProperties)) {\r\n                        //Trigger the event after ProcessButton\r\n                        self.triggerGlobalHandler(\"renderActionButton\", buttonProperties);\r\n                        $.when(self.submitForm(buttonProperties)).done(function () {\r\n                            $(document).trigger(\"FORMACTION\", buttonProperties);\r\n                            defer.resolve();\r\n                        }).fail(function () {\r\n                            defer.reject(arguments);\r\n                        });\r\n                    }\r\n                }\r\n\r\n            } else {\r\n\r\n                self.endLoading();\r\n                if (buttonProperties.submitData) {\r\n                    $.when(self.submitData()).done(function () {\r\n                        defer.reject();\r\n                    });\r\n                } else {\r\n                    defer.reject();\r\n                }\r\n\r\n                self.validationController.expandNotificationBox();\r\n            }\r\n\r\n            var customHandler = self.getCustomHandler(\"afterFormButtonClick\");\r\n            if (customHandler) {\r\n                customHandler(buttonProperties);\r\n            }\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n    /*\r\n    *   Public method to perform validations externally\r\n    */\r\n    validateForm: function () {\r\n        var self = this;\r\n\r\n        // First hide and clear validation box\r\n        self.validationController.clearValidationMessages();\r\n\r\n        // Validate the form\r\n        return self.validationController.performValidations();\r\n    },\r\n    /*\r\n    *   Submits all the form to the server and returns a deferred to check when the process finishes\r\n    */\r\n    saveForm: function () {\r\n        var self = this;\r\n\r\n        // Avoid the execution of server actions for mobile offline\r\n        if(bizagi.util.isNativeMobileDevice() && !this.allowOnlineActions()){\r\n            return $.when(function() {\r\n                return null;\r\n            });\r\n        }\r\n\r\n        // Check is offline form        \r\n        var isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n\r\n        // Collect data\r\n        var data = self.collectRenderValuesForSubmit();\r\n\r\n        // Check if there are deferreds to wait\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        // Wait for deferreds\r\n        return $.when(deferredsToWait).pipe(function () {\r\n            self.startLoading();\r\n            \r\n            var saveParams = {\r\n                action: \"SAVE\",\r\n                data: data,\r\n                idCase: self.params.idCase,\r\n                idWorkitem: self.params.idWorkitem,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                isOfflineForm: isOfflineForm || false\r\n            };\r\n\r\n            if (isOfflineForm){\r\n                saveParams.offlineType = self.params.offlineType;\r\n            }\r\n\r\n            // Submit the form\r\n            return $.when(self.dataService.submitData(saveParams))\r\n            .always(function () {\r\n                self.endLoading();\r\n            });\r\n        });\r\n    },\r\n    /*\r\n    *   Creates a json array with key values to send to the server\r\n    */\r\n    submitForm: function (buttonProperties) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n\r\n        // Check is offline form                \r\n        var isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n\r\n        $.when(self.isReadyToSave())\r\n            .done(function () {\r\n                if (isOfflineForm) {\r\n                    self.internalSubmitFormOffline(buttonProperties);\r\n                    return;\r\n                }\r\n                $.when(self.internalSubmitForm(buttonProperties)).done(function () {\r\n                    defer.resolve();\r\n                }).fail(function () {\r\n                    defer.reject(arguments);\r\n                });\r\n\r\n            }).fail(function () {\r\n            self.endLoading();\r\n            bizagi.log(\"The form is not saved, no changes were found\");\r\n            defer.reject();\r\n        });\r\n        return defer.promise();\r\n    },\r\n    checkWidgetsData: function () {\r\n        //\r\n    },\r\n    isComplexGatewayPainted: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Get last action button\r\n     * @returns {*}\r\n     */\r\n    getLastActionButton: function () {\r\n        return this.lastActionButton;\r\n    },\r\n\r\n    /**\r\n     * Internal - Creates a json array with key values to send to the database\r\n     * @param {} buttonProperties\r\n     * @returns {}\r\n     */\r\n    internalSubmitFormOffline: function (buttonProperties) {\r\n        var self = this;\r\n        var message = \"\";\r\n        var data;\r\n\r\n        // Check is offline form                \r\n        var isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n\r\n        if (isOfflineForm && (self.properties && !self.properties.idPageCache)) {\r\n            self.properties.idPageCache = \"\";\r\n        }\r\n\r\n        // Fill data hash\r\n        if (buttonProperties.submitData || buttonProperties.executeRule) {\r\n            // Collect data\r\n            data = self.collectRenderValuesForSubmit();\r\n        }\r\n\r\n        if (self.transitions) {\r\n            var transitions = [];\r\n            $.each(this.activeTransitions, function (key, value) {\r\n                (value) ? transitions.push(key) : \"\";\r\n            });\r\n\r\n            if (bizagi.util.countProps(transitions) == 0) {\r\n                bizagi.showMessageBox(\r\n                    bizagi.localization.getResource(\"render-widget-complexgateway-path\"),\r\n                    bizagi.localization.getResource(\"render-widget-complexgateway-error\"), \"info\", false\r\n                );\r\n                self.endLoading();\r\n                return \"\";\r\n            }\r\n        }\r\n\r\n        $.when(self.dataService.submitData({\r\n            action: buttonProperties.action,\r\n            data: data,\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache,\r\n            idForm: self.properties.id,\r\n            prepare: true,\r\n            transitions: transitions || \"\",\r\n            idCase: self.params.idCase,\r\n            idWorkitem: self.params.idWorkitem,\r\n            isOfflineForm: isOfflineForm || false,\r\n            offlineType: self.params.offlineType || \"\"\r\n        })).done(function (responses) {\r\n\r\n            if (!self.postProcessButton(responses, buttonProperties)) {\r\n                return;\r\n            }\r\n\r\n            //Offline action stored\r\n            var isSaveForDraft = self.params.offlineType !== \"task\" && buttonProperties.action === \"save\";\r\n            if (self.online && self.isOfflineFormsV2Supported && !isSaveForDraft) {\r\n                bizagi.loading.start();\r\n                var tryPushResponsePromise = new $.Deferred();\r\n                self.params.responsePromise = tryPushResponsePromise;\r\n                $(document).trigger(\"tryPushCase.offline\", self.params);\r\n            }\r\n            //Backward comp\r\n            if (!self.isOfflineFormsV2Supported) {\r\n                $(document).trigger(\"tryPushData.offline\");\r\n            }\r\n\r\n\r\n            $.when(tryPushResponsePromise)\r\n                .then(function (result) {\r\n                    bizagi.loading.stop();\r\n                    if (buttonProperties.routing) {\r\n                        if (!self.online && self.isOfflineFormsV2Supported) {\r\n                            self.triggerHandler(\"routing\", {\r\n                                offlineAction: buttonProperties.action,\r\n                                idCase: self.params.idCase,\r\n                                idWorkitem: self.params.idWorkitem\r\n                            });\r\n                        } else {\r\n                            self.triggerHandler(\"routing\", {\r\n                                idCase: result.IdCase,\r\n                                caseNumber: result.CaseNumber\r\n                            });\r\n                        }\r\n                    } else {\r\n                        if(self.online && isSaveForDraft){\r\n                            bizagi.util.recreateNativeButtons(self);\r\n                        }\r\n                        message = bizagi.util.isValidResource(\"workportal-mobile-offline-form-successful\")\r\n                            ? bizagi.localization.getResource(\"workportal-mobile-offline-form-successful\")\r\n                            : \"Saved\";\r\n\r\n                        bizagi.util.showNotification({text: message, type: \"success\"});\r\n                    }\r\n                })\r\n                .fail(function (error) {\r\n                    bizagi.loading.stop();\r\n                    bizagi.util.recreateNativeButtons(self);\r\n                    if ($.isArray(error)) {\r\n                        var responses = error;\r\n                        var bHasValidations;\r\n                        var alertMessage = \"\";\r\n                        $.each(responses, function (i, response) {\r\n                            var propertiesToDisplayMessages = self.validationToDisplayMessages(bHasValidations, response.result.type, response.result.messages, alertMessage);\r\n                            bHasValidations = propertiesToDisplayMessages.bHasValidations;\r\n                            alertMessage = propertiesToDisplayMessages.alertMessage;\r\n                        });\r\n                        if (bHasValidations && alertMessage !== \"\") {\r\n                            bizagi.modalError.show(alertMessage, 'workportal-general-word-information', false);\r\n                        }\r\n                    }\r\n                    self.failHandler(error);\r\n                });\r\n\r\n        }).fail(function (error) {\r\n            message = bizagi.util.isValidResource(\"workportal-mobile-offline-successful-fail\")\r\n                ? bizagi.localization.getResource(\"workportal-mobile-offline-successful-fail\")\r\n                : \"Not saved\";\r\n\r\n            bizagi.util.showNotification({text: message, type: \"error\"});\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Internal - Creates a json array with key values to send to the server\r\n    */\r\n    internalSubmitForm: function (buttonProperties) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n        var data = {};\r\n\r\n        // Fill data hash\r\n        if (buttonProperties.submitData || buttonProperties.executeRule || buttonProperties.createnewcase || buttonProperties.back) {\r\n            // Collect data\r\n            data = self.collectRenderValuesForSubmit();\r\n        }\r\n\r\n        // Start asynchronous operation\r\n        $.when(self.startLoading()).done(function () {\r\n            $('html, body').animate({scrollTop: $('.ui-bizagi-loading-icon')}, 'slow');\r\n        });\r\n\r\n        var submitDataAction = null;\r\n        var executeButtonAction = null;\r\n        var performAction = null;\r\n        var checkpointAction = null;\r\n        var commitAction = null;\r\n        var waitingDeferreds = [];\r\n        var deferredsToWait = null;\r\n\r\n        // Prepare actions\r\n        if (buttonProperties.executeRule) {  // When the button has to execute any rule (MUST SUBMIT DATA BEFORE ALWAYS)\r\n\r\n            if (data.deferreds) {\r\n                deferredsToWait = $.when.apply($, data.deferreds);\r\n                waitingDeferreds.push(deferredsToWait);\r\n                delete data.deferreds;\r\n            }\r\n\r\n            submitDataAction = self.dataService.submitData({\r\n                action: \"SUBMITDATA\",\r\n                data: data,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true\r\n            });\r\n            submitDataAction.tag = \"submitData\";\r\n\r\n            checkpointAction = self.prepareCheckpointAction(buttonProperties.id);\r\n\r\n            // Reset data because when an execute rule operation has been performed, it saved already all the data\r\n            data = {};\r\n            executeButtonAction = self.dataService.executeButton({\r\n                idRender: buttonProperties.id,\r\n                xpathContext: self.properties.xpathContext || \"\",\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true\r\n            });\r\n            executeButtonAction.tag = \"executeRule\";\r\n\r\n            commitAction = self.prepareCommitAction(buttonProperties.id);\r\n        }\r\n\r\n        if (buttonProperties.next || buttonProperties.back || buttonProperties.save || buttonProperties.createnewcase || buttonProperties.nextWithoutValidations) {\r\n            // Verify transitions\r\n            if (self.transitions) {\r\n                var transitions = [];\r\n                $.each(this.activeTransitions, function (key, value) {\r\n                    (value) ? transitions.push(key) : \"\";\r\n                });\r\n\r\n                if (bizagi.util.countProps(transitions) == 0) {\r\n                    bizagi.showMessageBox(bizagi.localization.getResource(\"render-widget-complexgateway-path\"), bizagi\r\n                        .localization.getResource(\"render-widget-complexgateway-error\"), \"info\", false);\r\n                    self.endLoading();\r\n                    defer.reject();\r\n                    return defer.promise();\r\n                }\r\n            }\r\n\r\n            if (data && data.deferreds) {\r\n                deferredsToWait = $.when.apply($, data.deferreds);\r\n                waitingDeferreds.push(deferredsToWait);\r\n                delete data.deferreds;\r\n            }\r\n\r\n\r\n            performAction = self.dataService.submitData({\r\n                action: self.getButtonAction(buttonProperties.action),\r\n                forcePlanCompletion: buttonProperties.forcePlanCompletion,\r\n                data: data,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true,\r\n                transitions: transitions || \"\",\r\n                contexttype: self.properties.contextType,\r\n                surrogatekey: self.properties.surrogateKey\r\n            });\r\n            performAction.tag = \"performAction\";\r\n        }\r\n\r\n        // Assemble the actions\r\n        var actions = [];\r\n\r\n        if (executeButtonAction) {\r\n            actions.push(submitDataAction);\r\n            actions.push(checkpointAction);\r\n            actions.push(executeButtonAction);\r\n            actions.push(commitAction);\r\n        }\r\n\r\n        if (performAction) {\r\n            actions.push(performAction);\r\n        }\r\n\r\n        // Execute the batch\r\n        bizagi.chrono.initAndStart(\"submitForm-ajax\");\r\n\r\n\r\n        //Evaluate if there are deferreds to evaluate, like inline add in grid, that must send a ADDRELATIONWITHDATA before to savedata\r\n        var flowControlDeferred = new $.Deferred();\r\n        if (data && data.deferreds) {\r\n            $.when.apply(this, data.deferreds)\r\n                .done(function (response) {\r\n                    flowControlDeferred.resolve(response);\r\n                })\r\n                .fail(function () {\r\n                    flowControlDeferred.reject();\r\n                    console.log(\"Error: It was not possible resolve async actions on form \")\r\n                })\r\n        } else {\r\n            flowControlDeferred.resolve();\r\n        }\r\n\r\n        waitingDeferreds.push(flowControlDeferred);\r\n\r\n        $.when.apply($, waitingDeferreds).done(function () {\r\n            $.when(self.dataService.multiaction().execute({actions: actions})).done(function (responses) {\r\n                bizagi.chrono.stop(\"submitForm-ajax\");\r\n                // End asynchronous operation\r\n                self.endLoading();\r\n                // Find validations\r\n                var bHasValidations;\r\n                var alertMessage = \"\";\r\n                $.each(responses, function (i, response) {\r\n\r\n                    var propertiesToDisplayMessages = self.validationToDisplayMessages(bHasValidations, response.result.type, response.result.messages, alertMessage);\r\n                    bHasValidations = propertiesToDisplayMessages.bHasValidations;\r\n                    alertMessage = propertiesToDisplayMessages.alertMessage;\r\n\r\n                });\r\n\r\n                if (!bHasValidations) {\r\n                    // Everything went ok .. succesfully response from the server\r\n                    if (!self.postProcessButton(responses, buttonProperties)) {\r\n                        return;\r\n                    }\r\n\r\n                    // After successfully response refresh the form\r\n                    if (buttonProperties.refresh) {\r\n                        self.refreshForm();\r\n                    }\r\n\r\n                    // If needs routing publish an event\r\n                    if (buttonProperties.routing) {\r\n                        bizagi.jqxhrList.abortAll(\"rendering_\" + self.dataService.guid);\r\n                        self.triggerHandler(\"routing\", {\r\n                            idCase: self.params.idCase,\r\n                            routingDisabled: buttonProperties.routingDisabled\r\n                        });\r\n                    }\r\n\r\n                    // Create case\r\n                    if (buttonProperties.createnewcase) {\r\n                        if (responses.length > 0) {\r\n                            bizagi.jqxhrList.abortAll(\"rendering_\" + self.dataService.guid);\r\n                            self.triggerHandler(\"routing\", {\r\n                                idCase: responses[0].result.IdCase,\r\n                                caseNumber: responses[0].result.CaseNumber\r\n                            });\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (alertMessage !== \"\") { /*If there is an alertMessage show in a modal error*/\r\n                        bizagi.modalError.show(alertMessage, 'workportal-general-word-information', false);\r\n                    }\r\n                    if (buttonProperties.executeRule) {\r\n                        self.sendRollbackAction(buttonProperties.id);\r\n                    }\r\n                }\r\n\r\n                defer.resolve();\r\n            }).fail(function (_, _, response) {\r\n                if (buttonProperties.executeRule) {\r\n                    self.sendRollbackAction(buttonProperties.id);\r\n                }\r\n\r\n                if (response && response.error && (response.error.errorType === \"WaitForCompletionPlanException\" ||\r\n                    response.error.errorType === \"InvalidPlanStateException\" || response.error.errorType === \"CustomMessageException\")) {\r\n                    self.endLoading();\r\n                    $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(response.error.message), null, false)).then(function () {\r\n                        return $.when(self.internalSubmitForm($.extend({}, buttonProperties, {forcePlanCompletion: true})));\r\n                    }).done(function () {\r\n                        defer.resolve();\r\n                    }).fail(function () {\r\n                        defer.reject();\r\n                    });\r\n                } else {\r\n                    self.failHandler(response);\r\n                    defer.reject(response);\r\n                }\r\n            });\r\n        });\r\n        return defer.promise();\r\n    },\r\n    validationToDisplayMessages: function (bHasValidations, messageType, message, alertMessage) {\r\n        var self = this;\r\n\r\n        if (messageType == \"validationMessages\") {\r\n            // Something went wrong, we gotta display messages in notifications grid\r\n            self.addValidationMessage(message);\r\n            bHasValidations = true;\r\n        }\r\n        if (bizagi.detectDevice() == \"desktop\" && messageType == \"alertMessages\") {\r\n            // Something went wrong, we gotta display alert message\r\n            if (alertMessage === \"\") {\r\n                alertMessage = message;\r\n            } else {\r\n                alertMessage = alertMessage + \"\\n\\n\" + message;\r\n            }\r\n\r\n            bHasValidations = true;\r\n        }\r\n\r\n        return {\"bHasValidations\": bHasValidations, \"alertMessage\": alertMessage};\r\n    },\r\n\r\n    /*\r\n    *   Add a validation message to the form\r\n    */\r\n    addValidationMessage: function (validationMessage, focus, icon, itemAdditionalClass, autofocus, type) {\r\n        var self = this;\r\n\r\n        // Clean messages for mobile offline\r\n        if (bizagi.util.isNativeMobileDevice() && !this.allowOnlineActions())\r\n            this.clearValidationMessages();\r\n\r\n        if (!self.validationController) {\r\n            self.validationController = new bizagi.command.controllers.validation(self);\r\n        }\r\n\r\n        if (typeof (validationMessage) == \"string\") {\r\n            self.validationController.showValidationMessage(validationMessage, focus, icon, itemAdditionalClass, type);\r\n        } else {\r\n            $.each(validationMessage, function (i, message) {\r\n                self.validationController.showValidationMessage(message, focus, icon, itemAdditionalClass, type);\r\n            });\r\n        }\r\n        self.validationController.expandNotificationBox(autofocus);\r\n    },\r\n    /*\r\n    *   Public method to perform validations externally\r\n    */\r\n    clearValidationMessages: function (params) {\r\n        var self = this;\r\n\r\n        // First hide and clear validation box\r\n        if (self.validationController) {\r\n            self.validationController.clearValidationMessages(params);\r\n        }\r\n\r\n    },\r\n    /*\r\n    *   Add an error message to the form\r\n    */\r\n    addErrorMessage: function (errorMessage) {\r\n        var self = this;\r\n\r\n        // Clean messages for mobile offline\r\n        if (bizagi.util.isNativeMobileDevice() && !this.allowOnlineActions())\r\n            this.clearValidationMessages();\r\n\r\n        self.validationController.showErrorMessage(errorMessage);\r\n        self.validationController.expandNotificationBox();\r\n    },\r\n    /*\r\n    *   Refresh the current form\r\n    */\r\n    refreshForm: function (focus) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var deferred = $.Deferred();\r\n\r\n        focus = focus || self.getFocus();\r\n\r\n        // Normalize new focus structure if not present\r\n        if (focus && !focus.id) {\r\n            focus = {\r\n                id: focus\r\n            };\r\n        }\r\n\r\n        var options = {\r\n            idCase: self.params.idCase || \"\",\r\n            idWorkitem: self.params.idWorkitem || \"\",\r\n            idTask: self.params.idTask || \"\",\r\n            focus: focus,\r\n            selectedTabs: self.getSelectedTabs(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            isRefresh: true,\r\n            contextType: self.getContextType() || \"\",\r\n            action: self.getEndPointAction(),\r\n            idStartScope: self.properties.idStartScope || \"\"\r\n        };\r\n\r\n        // Notify the refresh event so the consumer takes the decision about what to do\r\n        self.startLoading();\r\n        $.when(self.triggerHandler(\"refresh\", options)).done(function () {\r\n            self.endLoading();\r\n            deferred.resolve();\r\n        }).fail(function () {\r\n            self.endLoading();\r\n            deferred.reject();\r\n        });\r\n        return deferred.promise();\r\n    },\r\n    /*\r\n    *   Get opened tabs configuration\r\n    */\r\n    getSelectedTabs: function () {\r\n        var self = this;\r\n        var tabContainers = self.getElementsByType(\"tab\");\r\n        var tabs = $.map(tabContainers, function (tabContainer) {\r\n            return {tab: tabContainer.properties.id, selected: tabContainer.activeTab};\r\n        });\r\n        var selectedTabs = {};\r\n        for (var i = 0, length = tabs.length; i < length; i++) {\r\n            selectedTabs[tabs[i].tab] = tabs[i].selected;\r\n        }\r\n        return selectedTabs;\r\n    },\r\n    /*\r\n    *   Template method to get the buttons objects\r\n    */\r\n    getButtons: function () {\r\n    },\r\n    /*\r\n    *   Adds an action on the fly to process the submit on change\r\n    */\r\n    addSubmitAction: function (xpath, action) {\r\n        var self = this;\r\n        self.actionController.processInternalSubmitAction(xpath, action);\r\n    },\r\n    /**\r\n     *   Adds an overlay to the form, and sets a waiting message\r\n     *\r\n     *   @argument {bool} delay Apply delay\r\n     */\r\n    startLoading: function () {\r\n        var self = this;\r\n        var waitingTemplate = self.renderFactory.getTemplate(\"form-waiting\");\r\n\r\n        if (self.waitingOverlay && self.waitingMessage)\r\n            return;\r\n\r\n        // This hack is only for desktop\r\n        if (!bizagi.util.isTabletDevice()) {\r\n            // Detect canvas parent with scroll\r\n            var isSharePoint = self.params.context === \"sharepoint\";\r\n            var canvas = self.params.canvas;\r\n            if (isSharePoint) {\r\n                canvas = bizagi.util.scrollTop(canvas);\r\n\r\n                if (!!!canvas.context) {\r\n                    canvas = $(\"body\", $(document));\r\n                }\r\n            } else {\r\n                canvas = $(\"body\", $(document));\r\n            }\r\n\r\n            // Configures overlay\r\n            var size = this.getSize();\r\n            var position = this.getOffset();\r\n            if (size.height == $(window).height()) {\r\n                position.top = 0;\r\n            }\r\n            self.waitingOverlay = $('<div class=\"ui-widget-overlay\" />').appendTo(canvas);\r\n            self.waitingMessage = $.tmpl(waitingTemplate).appendTo(canvas);\r\n            self.waitingOverlay.css({\r\n                \"height\": \"100%\",\r\n                \"width\": \"100%\",\r\n                \"min-height\": size.height,\r\n                \"min-width\": size.width\r\n            });\r\n            self.waitingMessage.css({\r\n                \"top\": (position.top + Math.ceil((size.height - self.waitingMessage.outerHeight()) / 2)) + \"px\",\r\n                \"left\": (Math.ceil((size.width - self.waitingMessage.outerWidth()) / 2)) + \"px\"\r\n            });\r\n            canvas.css(\"position\", \"relative\");\r\n\r\n        } else {\r\n            // Configures overlay\r\n            self.waitingOverlay = $('<div class=\"ui-widget-overlay\" />').appendTo(\"body\", $(document));\r\n            self.waitingMessage = $.tmpl(waitingTemplate).appendTo(\"body\", $(document));\r\n        }\r\n    },\r\n    /*\r\n    *   Removes the overlay and restores the form edition\r\n    */\r\n    endLoading: function () {\r\n        var self = this;\r\n        if (self.waitingOverlay && self.waitingMessage) {\r\n            self.waitingOverlay.remove();\r\n            self.waitingMessage.remove();\r\n            self.waitingOverlay = null;\r\n            self.waitingMessage = null;\r\n\r\n            var canvas = self.params.canvas;\r\n\r\n            if (canvas != undefined)\r\n                canvas.css(\"position\", \"\");\r\n        }\r\n    },\r\n    /*\r\n    *   Get the focused render in the current request\r\n    */\r\n    getFocusedElement: function () {\r\n        var self = this;\r\n        return self.focus;\r\n    },\r\n    /*\r\n    *   Set the focused render in the current request\r\n    */\r\n    setFocusedElement: function (focus) {\r\n        var self = this;\r\n        self.focus = focus;\r\n    },\r\n    /*\r\n    *   Publish a global event that the facade will replicate\r\n    */\r\n    triggerGlobalHandler: function (eventType, data) {\r\n        return this.triggerHandler(\"globalHandler\", {eventType: eventType, data: data});\r\n    },\r\n    /*\r\n    *   Generic handler to attach fail workflow for some operations\r\n    */\r\n    failHandler: function (error) {\r\n        var self = this;\r\n\r\n        // Check if the error is in multiaction format\r\n        try {\r\n            error = JSON.parse(error);\r\n        } catch (e) {\r\n        }\r\n\r\n        //This double validation has the purpose to get the real error object from two different levels ( error.error or error.error.error )\r\n        if (error & error.length && error.length > 1) error = error[0];\r\n        if (error.error) error = error.error;\r\n        if (error.error) error = error.error;\r\n\r\n        // Handle normal messages\r\n        if (typeof error == \"object\" && error.message) {\r\n            if (error.errorType === \"WaitForCompletionPlanException\" || error.errorType === \"InvalidPlanStateException\" || error.errorType === \"CustomMessageException\") {\r\n                error = bizagi.localization.getResource(error.message);\r\n            } else {\r\n                error = error.message;\r\n            }\r\n\r\n        } else if (typeof error == \"string\") {\r\n            // Parse to json\r\n            try {\r\n                var errorJson = JSON.parse(error);\r\n                if (errorJson.errorType === \"WaitForCompletionPlanException\" || errorJson.errorType === \"InvalidPlanStateException\" || error.errorType === \"CustomMessageException\") {\r\n                    errorJson.message = bizagi.localization.getResource(errorJson.message);\r\n                }\r\n                error = errorJson.message;\r\n            } catch (e) {\r\n            }\r\n        }\r\n\r\n        // Workflow engine error, we gotta show it with error\r\n        self.addErrorMessage(error);\r\n        self.endLoading();\r\n    },\r\n    /* \r\n    *   Resizes the element\r\n    */\r\n    resize: function (size) {\r\n        // Just save the size, for reference\r\n        this.setSize(size);\r\n    },\r\n    /*\r\n    *   Sets the internal size for the form\r\n    */\r\n    setSize: function (size) {\r\n        this.size = size;\r\n    },\r\n    /*\r\n    *   Gets the internal size for the form\r\n    */\r\n    getSize: function () {\r\n        if (this.size) {\r\n            return this.size;\r\n        }\r\n        var canvas = (this.params.canvas) ? this.params.canvas : this.getFormContainer().container;\r\n\r\n        var canvasWidth = canvas.width();\r\n        var canvasHeight = canvas.height();\r\n\r\n        return {\r\n            width: canvasWidth,\r\n            height: canvasHeight\r\n        };\r\n    },\r\n    getOffset: function () {\r\n        var canvas = this.getFormContainer().container;\r\n\r\n        return canvas.offset();\r\n    },\r\n\r\n    /**\r\n     * This function execute action to save all data of render, but\r\n     * the server service dont execute any rule on the server\r\n     */\r\n    submitData: function (args) {\r\n        var self = this;\r\n\r\n        // Avoid the execution of server actions for mobile offline\r\n        if (bizagi.util.isNativeMobileDevice() && !this.allowOnlineActions())\r\n            return;\r\n\r\n        // Collect data\r\n        var data = self.collectRenderValuesForSubmit();\r\n\r\n        // Check is offline form        \r\n        var isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n        if (isOfflineForm && (self.properties && !self.properties.idPageCache)) {\r\n            self.properties.idPageCache = \"\";\r\n        }\r\n\r\n        // Mark data collected as original values\r\n        $.each(data, function (key, value) {\r\n            var renders = self.getRenders(key);\r\n            $.each(renders, function (i, render) {\r\n                render.updateOriginalValue();\r\n            });\r\n        });\r\n\r\n        // Don't do anything if there is no data\r\n        if ($.isEmptyObject(data)) {\r\n            return;\r\n        }\r\n\r\n        // Call the service\r\n        if (isOfflineForm) {\r\n            return $.when(self.dataService.submitData({\r\n                action: \"save\",\r\n                data: data,\r\n                xpathContext: self.properties.xpathContext,\r\n                contexttype: self.properties.contexttype || \"\",\r\n                isOfflineForm: isOfflineForm,\r\n                offlineType: self.params.offlineType,\r\n                idCase: self.params.idCase,\r\n                idWorkitem: self.params.idWorkitem\r\n            })).fail(function (message) {\r\n                message = self.processFailMessage(message);\r\n            });\r\n        } else {\r\n            return $.when(self.dataService.multiaction().submitData({\r\n                action: \"SUBMITDATA\",\r\n                data: data,\r\n                idPageCache: self.properties.idPageCache,\r\n                xpathContext: self.properties.xpathContext,\r\n                contexttype: self.properties.contexttype || \"\"\r\n            })).fail(function (message) {\r\n                message = self.processFailMessage(message);\r\n            });\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * This function send a request to the server to execute a rule\r\n     */\r\n    executeRule: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n        var deferred = $.Deferred();\r\n\r\n        // Concat inheritance context\r\n        if (properties.xpathContext !== \"\") {\r\n            xpathContext = (xpathContext !== \"\") ? properties.xpathContext + \".\" + xpathContext : properties.xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        $.when(self.dataService.multiaction().executeRule({\r\n            idPageCache: properties.idPageCache,\r\n            rule: args.rule,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            var type = message && message.type ? message.type : \"\";\r\n            var form = self.getFormContainer();\r\n\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages({clearOnlyServer: true});\r\n\r\n            if ([\"validationMessages\", \"alertMessages\"].includes(type)) {\r\n                if (type === \"alertMessages\") {\r\n                    bizagi.modalError && bizagi.modalError.show(message.messages.join(\"\\n\\n\"), 'workportal-general-word-information', false);\r\n                } else {\r\n                    form.addValidationMessage.apply(self, [message.messages, undefined, undefined, undefined, false, \"serverMessage\"]);\r\n                }\r\n\r\n                deferred.reject(message);\r\n            } else {\r\n                deferred.resolve(message);\r\n            }\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n            deferred.reject(message);\r\n        });\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    /**\r\n     * This function send a request to the server to execute an interface\r\n     */\r\n    executeInterface: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties.xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeInterface({\r\n            idPageCache: properties.idPageCache,\r\n            interface: args.interface,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages();\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage(message.messages);\r\n            }\r\n\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n    },\r\n    executeSAPConnector: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties.xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeSAPConnector({\r\n            idPageCache: properties.idPageCache,\r\n            guidsap: args.guidsap,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages();\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage(message.messages);\r\n            }\r\n\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n\r\n    },\r\n\r\n    executeConnector: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties\r\n                .xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeConnector({\r\n            idPageCache: properties.idPageCache,\r\n            guidConnector: args.guidConnector,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages();\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage(message.messages);\r\n            }\r\n\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n\r\n    },\r\n\r\n    /*\r\n    *   Re-binds pending actions that could not be set because the renders did not exist when the form loaded\r\n    */\r\n    refreshActions: function (actions) {\r\n        var self = this;\r\n        self.actionController.refreshActions(actions);\r\n    },\r\n\r\n    /***/\r\n    tryToExecuteFunction: function(xpath){\r\n        if (this.getMode() == \"execution\"){\r\n            this.actionController && this.actionController.tryToExecuteFunction(xpath);\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Re-binds pending actions that could not be set because the renders did not exist when the form loaded\r\n    */\r\n    removeActions: function () {\r\n        var self = this;\r\n        self.actionController.unbindActions();\r\n    },\r\n    /*\r\n    *   Iterate through all renders and collect the data to send, then update original values for each render\r\n    */\r\n    collectRenderValuesForSubmit: function (data) {\r\n        var self = this;\r\n        data = data || {};\r\n\r\n        // Collect data\r\n        self.collectRenderValues(data);\r\n\r\n        // Mark data collected as original values\r\n        $.each(data, function (key, value) {\r\n            var renders = self.getRenders(key);\r\n            $.each(renders, function (i, render) {\r\n                render.updateOriginalValue();\r\n            });\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param params {data, bRefreshForm,properties}\r\n     * @returns {*}\r\n     */\r\n    internalSubmitOnChange: function (params) {\r\n        params = params || {};\r\n        var self = this;\r\n        var properties = params.properties;\r\n        var defer = new $.Deferred();\r\n        var data = params.data || {};\r\n        var bRefreshForm = typeof (params.bRefreshForm) != \"undefined\" ? params.bRefreshForm : true;\r\n        var notCollect = params.notCollect ? params.notCollect : undefined;\r\n\r\n        // Collect data\r\n        if (!(notCollect && !$.isEmptyObject(data))) {\r\n            self.collectRenderValuesForSubmit(data);\r\n        }\r\n\r\n        self.startLoading();\r\n\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        $.when(deferredsToWait).then(function () {\r\n            // Submit the form\r\n            self.dataService.multiaction().submitData({\r\n                action: \"SUBMITONCHANGE\",\r\n                data: data,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: properties.idPageCache,\r\n                contexttype: properties.contexttype\r\n            }).done(function (response) {\r\n                // Cancel previous multiactions and process property value\r\n                self.cancelPreviousRequest();\r\n                // After successfully response refresh the form\r\n                self.endLoading();\r\n                // If response message has error in validation, do not refresh the form\r\n                // and show validation message\r\n                if (response && response.type == \"validationMessages\") {\r\n                    if (typeof self.clearValidationMessages == \"function\") {\r\n                        self.clearValidationMessages();\r\n                    }\r\n\r\n                    self.addValidationMessage(response.messages);\r\n                    defer.resolve();\r\n                } else if (bRefreshForm) {\r\n                    var focusIdentifier = {\r\n                        id: properties.id,\r\n                        xpath: properties.xpath\r\n                    };\r\n                    if (properties.idCase !== undefined) {\r\n                        $.extend(focusIdentifier, {\r\n                            idCaseObject: bizagi.cache.idCaseObject\r\n                        });\r\n                    }\r\n                    if (response.IdScope) {\r\n                        self.properties.idStartScope = response.IdScope;\r\n                    }\r\n                    $.when(self.refreshForm(focusIdentifier)).done(function () {\r\n                        defer.resolve();\r\n                    }).fail(function () {\r\n                        defer.resolve();\r\n                    });\r\n                } else {\r\n                    defer.resolve();\r\n                }\r\n            }).fail(function (message) {\r\n                self.endLoading();\r\n                var objMessage = typeof message == 'object' ? message.responseText ? JSON.parse(message.responseText) : message : {};\r\n                var strMessage = objMessage.message || message;\r\n                // Clear previous validations\r\n                self.validationController.clearValidationMessages();\r\n                if (objMessage.type == \"alert\") {\r\n                    self.validationController.showAlertMessage(strMessage);\r\n                } else {\r\n                    self.validationController.showErrorMessage(strMessage);\r\n                }\r\n                defer.resolve();\r\n            });\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    cancelPreviousRequest: function () {\r\n        if (bizagi.multiactionConnection && bizagi.multiactionConnection.length) {\r\n            var length = bizagi.multiactionConnection.length;\r\n            var i = 0, connection;\r\n            for (; i < length; i++) {\r\n                connection = bizagi.multiactionConnection.pop();\r\n                if (connection && connection.abort) {\r\n                    bizagi.showErrorAlertDialog = false;\r\n                    connection.abort();\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    prepareCheckpointAction: function (buttonId) {\r\n        var self = this;\r\n\r\n        var checkpointAction = self.dataService.sendCheckpoint({\r\n            url: self.properties.checkpointUrl,\r\n            idRender: buttonId,\r\n            xpath: \"\",\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache,\r\n            prepare: true\r\n        });\r\n\r\n        checkpointAction.tag = \"checkpoint\";\r\n\r\n        return checkpointAction;\r\n    },\r\n\r\n    prepareCommitAction: function (buttonId) {\r\n        var self = this;\r\n\r\n        var commitAction = self.dataService.commitLinkForm({\r\n            url: self.properties.commitUrl,\r\n            idRender: buttonId,\r\n            xpath: \"\",\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache,\r\n            prepare: true\r\n        });\r\n\r\n        commitAction.tag = \"commit\";\r\n\r\n        return commitAction;\r\n    },\r\n\r\n    sendRollbackAction: function (buttonId) {\r\n        var self = this;\r\n\r\n        self.dataService.rollbackLinkForm({\r\n            url: self.properties.rollbackUrl,\r\n            idRender: buttonId,\r\n            xpath: \"\",\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache\r\n        });\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n        self.endLoading();\r\n\r\n        setTimeout(function () {\r\n            if (self.params) {\r\n                delete self.params.canvas;\r\n            }\r\n            delete self.params;\r\n            delete self.control;\r\n            if (self.validationController) {\r\n                self.unbind(\"rendervalidate\");\r\n                delete self.validationController;\r\n            }\r\n\r\n            if (self.actionController) {\r\n                self.actionController.unbindActions();\r\n                delete self.actionController;\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    },\r\n    getButton: function (guid) {\r\n        return $(\".ui-bizagi-button[data-id='\" + guid + \"']\", this.container);\r\n    },\r\n\r\n    getFloatingButton: function (guid) {\r\n        return $(\"li[data-id='\" + guid + \"']\", this.container);\r\n    },\r\n\r\n    propagateExternalEvents: function (evt) {\r\n        // Menu-Overflow\r\n        var $menuOverflow = $(\".bz-overflow-menu\");\r\n        if ($menuOverflow)\r\n            $(document).trigger('click.overflow');\r\n\r\n        // ECM with preview image\r\n        var zoomIsOpen = $(\".jquery-image-zoom\") && $(\".jquery-image-zoom\").css(\"display\") == \"block\";\r\n\r\n        if (zoomIsOpen)\r\n            $(\"div.jquery-image-zoom a\").click();\r\n    },\r\n\r\n    getButtonAction: function (action) {\r\n        return this.allowValidateAndSaveAction && action === \"validate\" ? \"save\" : action;\r\n    },\r\n\r\n    /**\r\n     * Add handlers to network management\r\n     */\r\n    configureNetworkHandlers: function () {\r\n        var self = this;\r\n        self.online = bizagi.util.isConnected();\r\n        if(self.isOfflineForm && (bizagi.util.isMobileDevice() && (\"\" + BIZAGI_ENVIRONMENT).toLowerCase() === \"debug\")){\r\n            self.online = false;\r\n        }\r\n\r\n        // Update the online status based on connectivity\r\n        if (bizagi.util.isNativeMobileDevice() || (bizagi.util.isMobileDevice() && (\"\" + BIZAGI_ENVIRONMENT).toLowerCase() === \"debug\")) {\r\n            $(document).off(\"online.form\");\r\n            $(document).on(\"online.form\", this.handleConnectionChange.bind(self));\r\n\r\n            $(document).off(\"offline.form\");\r\n            $(document).on(\"offline.form\", this.handleConnectionChange.bind(self));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Event handler\r\n     * @param event\r\n     */\r\n    handleConnectionChange: function (event) {\r\n        var form = this.getFormContainer();\r\n        if (bizagi.util.isMobileDevice() && (\"\" + BIZAGI_ENVIRONMENT).toLowerCase() === \"debug\"){\r\n            this.online = event.type === \"online\";\r\n        }\r\n        else{\r\n            this.online = bizagi.util.isConnected();\r\n        }\r\n\r\n        // You lost connection.\r\n        if (event.type === \"offline\") {\r\n            form.triggerHandler(\"offlineForm\");\r\n        }\r\n\r\n        // You are now back online.\r\n        if (event.type === \"online\") {\r\n            form.triggerHandler(\"onlineForm\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if allow to call the button actions\r\n     * @returns {boolean|*}\r\n     */\r\n    allowOnlineActions: function () {\r\n        if (typeof (this.online) === \"undefined\") return true;\r\n        return this.online || (!this.online && this.isOfflineForm);\r\n    }\r\n\r\n});\r\n","/**\r\n * Render a new type of form called template\r\n *\r\n * @author Edward Morales\r\n */\r\n$.Class.extend(\"bizagi.rendering.formTemplate\", {\r\n\r\n    /**\r\n     *   Constructor\r\n     */\r\n    init: function (params) {\r\n        this._super(params);\r\n        if(params.paramsRender && params.paramsRender.contextEvent){\r\n            self.contextEvent = params.paramsRender.contextEvent;\r\n        }\r\n    },\r\n\r\n\t/**\r\n\t * Process controls on template\r\n\t * @param template\r\n\t * @param controls\r\n\t * @return {*}\r\n\t */\r\n\tprocessTemplate: function(template, controls) {\r\n\t    var regexControl = /\\{\\{([\\w:]*)\\s*(\\{[\"':,-\\[\\]\\w\\s]*\\})\\}\\}/g;\r\n\t\tvar regexRepeater = /\\{\\{(((repeater)\\s*(\\{[\"':,-\\[\\]\\w\\s]*\\}))|([\\/repeater]+:item)|(\\/repeater)|(repeater)|(separator))\\}\\}/g;\r\n\r\n\t\t// Remove all repeaters key words\r\n\t\tvar processedTemplate = template.replace(regexRepeater, \"\");\r\n\r\n\t\t// replace controls\r\n\t\tprocessedTemplate = processedTemplate.replace(regexControl, function(match, g1, g2, offset, string) {\r\n\t\t    var parameters = JSON.parse(g2);\r\n            \r\n\t\t\treturn controls[parameters.id] || '';\r\n\t\t});\r\n\r\n\t    processedTemplate = processedTemplate.replace(/{{([\\w:]*)\\s*}}/g, function() {\r\n\t        return '';\r\n\t    });\r\n\r\n\r\n\t\treturn processedTemplate;\r\n\t},\r\n\r\n\t/**\r\n\t * Render layout container\r\n\t * @return {*}\r\n\t */\r\n\trenderContainer: function() {\r\n\t\tvar self = this;\r\n\t\tvar layoutCollection = self.getRenderByType(\"layout\");\r\n\t\tvar layout = (layoutCollection.length > 0) ? layoutCollection[0] : {};\r\n\t\tvar template = (typeof layout.getTemplate == \"function\") ? layout.getTemplate() : \"\";\r\n\t\tvar css = (typeof layout.getCss == \"function\") ? layout.getCss() : \"\";\r\n\t\tvar mode = self.getMode();\r\n\t\tvar layoutGuid = self.properties.layoutguid || Math.guid();\r\n\r\n\t\tvar controls = {};\r\n\r\n\t\t/**\r\n\t\t * Render all elements within first layout container\r\n\t\t */\r\n\t\tif(layout.children) {\r\n\t\t\t$.each(layout.children, function(i, child) {\r\n\t\t\t    // ignore layoutPlaceholder control in execution\r\n\t\t\t    if (!(mode == 'execution' && child.properties.type == 'layoutPlaceholder')) {\r\n\r\n\t\t\t        var type = child.getElementType();\r\n\t\t\t        if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n\t\t\t            controls[child.properties.id] = child.renderElement();\r\n\t\t\t        }\r\n\t\t\t        if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n\t\t\t            controls[child.properties.id] = child.renderContainerHtml();\r\n\t\t\t        }\r\n\t\t\t        self.childrenHash[child.properties.uniqueId] = child;\r\n\t\t\t    }\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Load css\r\n\t\tbizagi.util.loadStyle(css, layoutGuid);\r\n\r\n\t\treturn self.processTemplate(template, controls);\r\n\t},\r\n\r\n    /**\r\n     * Get the context in which loads the formTemplate\r\n     *\r\n     */\r\n    getContextEvent: function(){\r\n        return self.contextEvent;\r\n    }\r\n});\r\n","$.Class.extend(\"bizagi.rendering.layout\", {}, {\r\n\r\n\t/**\r\n\t * Get html template\r\n\t * @return {*}\r\n\t */\r\n\tgetTemplate: function() {\r\n\t    var self = this;\r\n\t    var mode = self.getMode();\r\n\t    var html = self.properties.html || \"\";\r\n\r\n        // Add a container, this is important in design to calculate the scroll \r\n\t    if (mode == 'design' && html) {\r\n            html = \"<div class='bz-design-template'>\" + html + \"</div>\"\r\n\t    }\r\n\t\t\r\n\t\treturn bizagi.util.stripslashes(html);\r\n\t},\r\n\r\n\t/**\r\n\t * Get string css of layout container\r\n\t * @return {*}\r\n\t */\r\n\tgetCss: function() {\r\n\t    var self = this;\r\n\t\tvar css = self.properties.css || \"\";\r\n\r\n\t\tvar mode = self.getMode();\r\n\t\tif (mode == \"design\") {\r\n\t\t    css = css && css.desktop;\r\n\t\t}\r\n\r\n\t\treturn bizagi.util.stripslashes(css);\r\n\t},\r\n\r\n\r\n\t/*\r\n\t *   Template method to process each jquery object\r\n\t *   must be overriden in each container\r\n\t */\r\n\tpostRenderContainer: function(container) {\r\n\t\tvar self = this;\r\n\t\tvar mode = self.getMode();\r\n\r\n\t\t// Resolve rendering deferred\r\n\t\tif(self.renderingDeferred)\r\n\t\t\tself.renderingDeferred.resolve();\r\n\r\n\t\t// Process children elements\r\n\t\tself.container = container;\r\n\t\tself.executeChildrenPostRender(container);\r\n\r\n\t\tif(mode == \"execution\") {\r\n\t\t\t// Apply handlers\r\n\t\t\tself.configureHandlers();\r\n\t\t}\r\n\t\tif(mode == \"design\") {\r\n\t\t\t// Configure view\r\n\t\t\tself.configureDesignView();\r\n\t\t}\r\n\t\tif(mode == \"layout\") {\r\n\t\t\t// Configure view\r\n\t\t\tself.configureDesignView();\r\n\t\t\tself.configureLayoutView();\r\n\t\t}\r\n\t}\r\n});","/*\r\n*   Name: BizAgi Accordion Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a accordion container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.accordion\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Enumerate the children appending a property\r\n        $.each(self.children, function (i, child) {\r\n            child.properties.ordinal = i;\r\n        });\r\n    },\r\n\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"accordion\");\r\n\r\n        // Render the accordion\r\n        var html = $.fasttmpl(template, {\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Accordion Item Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a accordion item class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.accordionItem\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"accordionItem\");\r\n\r\n        // Render the accordionItem\r\n        var html = $.fasttmpl(template, {\r\n            id: properties.id,\r\n            ordinal: properties.ordinal,\r\n            displayName: properties.displayName,\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Fires when the accordionItem is selected \r\n    */\r\n    activate: function () {\r\n        var self = this;\r\n        self.active = true;\r\n    },\r\n\r\n    /*  \r\n    *   Return the current focuses container\r\n    */\r\n    getFocus: function () {\r\n        var self = this;\r\n        var focus = self._super();\r\n        if (bizagi.util.isEmpty(focus) && self.active) {\r\n            focus = self.properties.id;\r\n        }\r\n\r\n        return focus;\r\n    }\r\n\r\n\r\n});\r\n\r\n","/*\r\n*   Name: Bizagi Group Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a group container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.group\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Default properties\r\n        var properties = self.properties;\r\n\r\n        properties.helpText = properties.helpText || properties.displayName;\r\n\r\n        // Extend css property \r\n        properties.cssclass = properties.cssclass || \"cssClassContainer\";\r\n\r\n        properties.collapse = (typeof properties.collapse != \"undefined\" && bizagi.util.parseBoolean(properties.collapse)) ? true : false;\r\n    },\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"group\");\r\n\r\n        // Define icons\r\n        self.expandedIcon = self.getExpandedIcon();\r\n        self.collapsedIcon = self.getCollapsedIcon();\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            expandedClassIcon: self.expandedIcon,\r\n            displayName: properties.displayName,\r\n            editable: properties.editable,\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            collapse: properties.collapse,\r\n            isDesign: (self.getMode() !== \"execution\"),            \r\n            messageValidation: properties.messageValidation,\r\n            cssclass: properties.cssclass,\r\n            guid: properties.guid\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Returns the expanded icon\r\n    */\r\n    getExpandedIcon: function () { },\r\n\r\n    /*\r\n    *   Returns the collapsed icon\r\n    */\r\n    getCollapsedIcon: function () { },\r\n\r\n    /* \r\n    *   Expands or collapse the container \r\n    */\r\n    toogleContainer: function (argument, bImmediate) { }\r\n\r\n});","/*\r\n*   Name: BizAgi Horizontal Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a tab item class for all devices\r\n*/\r\n\r\n\r\n$.Class.extend(\"bizagi.rendering.horizontal\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"horizontal\");\r\n\r\n        // Render the container\r\n        var html = $.fasttmpl(template, {\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Panel Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a panel container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.panel\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function(params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Override properties\r\n        var properties = self.properties;\r\n        properties.displayName = properties.displayName || \"\";\r\n    },\r\n\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function() {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"panel\");\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            displayName: properties.displayName,\r\n            loading: properties.loading,\r\n            message: properties.message,\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            cssClass: properties.cssclass\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Process the html rendering object\r\n    */\r\n    postRenderContainer: function(panel) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set height\r\n        if (properties.height) {\r\n            panel.height(properties.height);\r\n        }\r\n\r\n        // Call base\r\n        self._super(panel);\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Panel Container Class\r\n*   Author: David Romero\r\n*   Comments:\r\n*   -   This script will define a panel container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.contentPanel\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Override properties\r\n        var properties = self.properties;\r\n        properties.displayName = properties.displayName || \"\";\r\n    },\r\n\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"contentPanel\");\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            displayName: properties.displayName,\r\n            mode: self.getMode(),\r\n            uniqueId: properties.uniqueId,\r\n            isDesign: self.getMode() === \"design\",\r\n            messageValidation: properties.messageValidation,\r\n            cssClass: properties.cssclass,\r\n            guid: properties.guid\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Process the html rendering object\r\n    */\r\n    postRenderContainer: function (panel) {\r\n        // Call base\r\n        this._super(panel);\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Panel Container Class\r\n *   Author: Bizagi UI Forms\r\n *   Comments:\r\n *   -   This script will define a panel container class for all devices\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.searchForm\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"searchForm\");\r\n\r\n        if (properties.contexttype !== \"entity\" && self.parent) {\r\n            properties.contexttype = (typeof self.parent.getContextType == 'function') ? self.parent.getContextType() : \"\";\r\n        }\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            displayName: properties.displayName,\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n\r\n        // Render result\r\n        html = html.replaceFirstWithoutPatterns(\"{{result}}\", self.renderResult());\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Perform a search and render the results\r\n    */\r\n    performSearch: function (searchParams) {\r\n        var properties = this.properties;\r\n\r\n        // Set parameter to search\r\n        properties.searchParams = searchParams;\r\n\r\n        // Submit the search to the server\r\n        this.submitSearch();\r\n    },\r\n\r\n    /*\r\n    *   Submits the query to the server\r\n    */\r\n    submitSearch: function () {\r\n        // Makes the results to update its contents\r\n        this.refreshResults();\r\n    },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        return this.parent.ready();\r\n    },\r\n\r\n    /*\r\n    *   Method to fill the result data\r\n    *   (THIS IS CALLED WITHIN GRID RENDER SCOPE)\r\n    */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        // Collect data\r\n        var data = self.collectSearchValues();\r\n\r\n        if (bizagi.util.isMapEmpty(data)) {\r\n            bizagi.showMessageBox(this.getResource(\"render-search-advanced-no-filters\"), this.getResource(\"render-form-dialog-box-search\"), \"error\");\r\n            return null;\r\n        }\r\n\r\n        params.rows = (properties.searchParams && properties.searchParams.maxRecords && properties.searchParams.maxRecords > 0) ? properties.searchParams.maxRecords : params.rows;\r\n\r\n        // The Grid only support one row per page in smartphone (DRAGON-41733 / QAF-3916)         \r\n        if (properties.searchParams && typeof (properties.searchParams.maxRows) !== \"undefined\") {\r\n            params.rows = properties.searchParams.maxRows || params.rows;\r\n        }\r\n\r\n        // Resolve with remote data\r\n        self.dataService.submitSearch($.extend(params, {\r\n            url: properties.dataUrl,\r\n            idRender: properties.idRender,\r\n            idPageCache: properties.idPageCache,\r\n            idSearchForm: properties.id,\r\n            allowFullSearch: (properties.searchParams.allowFullSearch ? properties.searchParams.allowFullSearch : null),\r\n            maxRecords: (properties.searchParams.maxRecords > 0 ? properties.searchParams.maxRecords : null),\r\n            criteria: data\r\n\r\n        })).done(function (response) {\r\n\r\n            // Resolve with fetched data    \r\n            properties.page = response.page;\r\n            properties.records = response.records;\r\n            properties.totalPages = response.totalPages || 0;\r\n\r\n            //In tablets are allowed about 10000 records as maximum\r\n            if (response.records > 10000) {\r\n                properties.deviceMaxRecordsExceeded = true;\r\n                response.deviceMaxRecordsExceeded = true;\r\n            } else {\r\n                delete properties.deviceMaxRecordsExceeded;\r\n            }\r\n\r\n            defer.resolve(response);\r\n\r\n            // Call virtual method\r\n            self.onSearchFinished();\r\n        }).fail(function (errorObject) {\r\n            bizagi.showErrorAlertDialog = false;\r\n            if (errorObject.responseText) {\r\n                try {\r\n                    var message = JSON.parse(errorObject.responseText).message;\r\n                    bizagi.showMessageBox(message, \"\", \"error\");\r\n                } catch (e) {\r\n                }\r\n            }\r\n            defer.reject();\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Iterate through all the renders in the container and fills the hashtable\r\n    *   - Overriden because server needs this in array\r\n    */\r\n    collectSearchValues: function () {\r\n        var self = this;\r\n\r\n        // Collect data\r\n        var data = {};\r\n        this.collectRenderValues(data);\r\n\r\n        // Changes to array\r\n        var submitArray = [];\r\n        for (key in data) {\r\n            var xpath = key;\r\n            var value = data[key];\r\n            var operation = self.getCriteriaOperation(self.getRender(xpath));\r\n            var criteriaData = {};\r\n            if (!bizagi.util.isEmpty(value)) {\r\n                criteriaData[\"xpath\"] = xpath;\r\n                criteriaData[\"value\"] = value;\r\n                criteriaData[\"operation\"] = operation;\r\n                submitArray.push(criteriaData);\r\n            }\r\n        }\r\n\r\n        return submitArray;\r\n    },\r\n\r\n    /*\r\n    *   This method find out the criterial operation to be executed according to\r\n    *   data type. Text renders use LIKE operation, but other data types such like\r\n    *   numerics use exact match operatiors\r\n    */\r\n    getCriteriaOperation: function (render) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var operation = \"EQUALS\";\r\n        if (render.properties.dataType == \"15\") {\r\n            if (typeof render.properties.typeSearch === \"undefined\" || render.properties.typeSearch === \"approx\") {\r\n                if (properties.allowFullSearch) {\r\n                    operation = \"FULLLIKE\";\r\n                } else {\r\n                    operation = \"LIKE\";\r\n                }\r\n            }\r\n        }\r\n        return operation;\r\n    },\r\n\r\n    /*\r\n    *   Render the result controls for the query\r\n    *   Resolved in each device\r\n    */\r\n    renderResult: function () {\r\n    },\r\n\r\n    /*\r\n    *   Refresh the result panel, making it to query data with current criteria\r\n    */\r\n    refreshResults: function () {\r\n    },\r\n\r\n    /*\r\n    *   Function to parse the dataType\r\n    */\r\n    parseAdditionalProperties: function (dataType) {\r\n\r\n        // Number\r\n        if (dataType == 1 || dataType == 2 || dataType == 3 ||\r\n            dataType == 4 || dataType == 6 || dataType == 7 ||\r\n            dataType == 10 || dataType == 11) {\r\n            return {type: \"columnNumber\"};\r\n        }\r\n\r\n        // Oracle Number\r\n        if (dataType == 29) {\r\n            return {type: \"columnNumberScientificNotation\"};\r\n        }\r\n\r\n        // Money\r\n        if (dataType == 8) {\r\n            return {type: \"columnMoney\"};\r\n        }\r\n\r\n        // Date\r\n        if (dataType == 12 || dataType == 13) {\r\n            return {type: \"columnDate\"};\r\n        }\r\n\r\n        // Boolean\r\n        if (dataType == 5) {\r\n            return {type: \"columnBoolean\"};\r\n        }\r\n\r\n        // Text\r\n        return {type: \"columnText\"};\r\n    },\r\n\r\n    /*\r\n    *\r\n    */\r\n    onSearchFinished: function () {\r\n        // Empty function, overrided for Tablet version for now\r\n    }\r\n\r\n\r\n});\r\n\r\n","/*\r\n *   Name: BizAgi Tab Container Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define a tab container class for all devices\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.tab\", {}, {\r\n\r\n    /*\r\n     *   Constructor\r\n     */\r\n    initializeData: function(params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Default properties\r\n        var properties = self.properties;\r\n        properties.helpText = properties.helpText || properties.displayName;\r\n\r\n        // Extend css property\r\n        properties.cssclass = properties.cssclass || \"\";\r\n    },\r\n\r\n    /*\r\n     *   Render the container layout\r\n     */\r\n    renderContainer: function() {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var tabItems = $.map(self.children, function(child, key) {\r\n            child.properties.counter = key;\r\n            child.properties.tooltip =  child.properties.tooltip || child.properties.displayName || \"\";\r\n            return child.properties;\r\n        });\r\n        var template = self.renderFactory.getTemplate(\"tab\");\r\n        var mode = self.getMode();\r\n\r\n        // Render the tab\r\n        var html = $.fasttmpl(template, {\r\n            id: properties.id,\r\n            tabs: tabItems,\r\n            mode: mode,\r\n            isDesign: (self.getMode() !== \"execution\"),\r\n            editable: properties.editable,\r\n            tabOrientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            cssclass: properties.cssclass\r\n        });\r\n\r\n        // Get active container based on focus\r\n        var activeTab = self.activeTab = self.getActiveTab();\r\n\r\n        // Render children\r\n        for (var i = 0, length = self.children.length; i < length; i++) {\r\n            // Load on demand other tabs besides the first one\r\n            self.children[i].properties.loadOnDemand = (i != activeTab);\r\n        }\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     *   Return the active tab containing the focus, or the first tab\r\n     */\r\n    getActiveTab: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var formParams = this.getFormContainer().getParams();\r\n        var mode = self.getMode();\r\n\r\n        if (mode === \"execution\") {\r\n            if (!formParams.isRefresh && properties.activeTab) {\r\n                self.getFormContainer().setFocusedElement(properties.activeTab);\r\n            }\r\n        }\r\n\r\n        var selectedTabs = formParams && formParams.selectedTabs ? formParams.selectedTabs : {};\r\n\r\n        // Fetch from selected tabs collection\r\n        if (selectedTabs[self.properties.id] >= 0) {\r\n            return selectedTabs[self.properties.id];\r\n        }\r\n\r\n        // Check for focused elements\r\n        for (var i = 0, length = self.children.length; i < length; i++) {\r\n            // Load on demand other tabs besides the first one\r\n            if (self.children[i].containsFocusedElement()) return i;\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    /**\r\n     * Update position of tab\r\n     * @param index\r\n     */\r\n    setActiveTab: function (index) {\r\n        var self = this;\r\n\r\n        self.triggerHandler(\"selected\", { index: index, tab: self.children[index] });\r\n\r\n        if (self.children[index]) {\r\n            var form = self.getFormContainer();\r\n\r\n            self.children[index].activate();\r\n            self.activeTab = index;\r\n\r\n            var selectedTab = {};\r\n            selectedTab[self.children[index].parent.properties.id] = index;\r\n            form.setParam(\"selectedTabs\", selectedTab);\r\n        }\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tab Item Container Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a tab item class for all devices\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.tabItem\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"tabItem\");\r\n\r\n        // Render the tabItem\r\n        var html = $.fasttmpl(template, {\r\n            id: properties.id,\r\n            uniqueId: properties.uniqueId,\r\n            counter: properties.counter,\r\n            tabOrientation: properties.orientation,\r\n            isDesign: (self.getMode() !== \"execution\")\r\n        });\r\n\r\n        // Render content\r\n        html = self.renderTabContent(html);\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    * Renders the tab content\r\n    */\r\n    renderTabContent: function (html) {\r\n        // Render children\r\n        return this.replaceChildrenHtml(html, this.renderChildrenHtml());\r\n    },\r\n\r\n    /*\r\n    *   Fires when the tab is selected \r\n    */\r\n    activate: function () {\r\n        this.active = true;\r\n    },\r\n\r\n    /*  \r\n    *   Return the current focuses container\r\n    */\r\n    getFocus: function () {\r\n        var self = this;\r\n        var focus = self._super();\r\n        if (bizagi.util.isEmpty(focus) && self.active) {\r\n            focus = self.properties.id;\r\n        }\r\n\r\n        return focus;\r\n    },\r\n\r\n    /*\r\n    *   Return true if this tab contains the active focused element\r\n    */\r\n    containsFocusedElement: function () {\r\n        var self = this;\r\n        var focus = self.getFormContainer().getFocusedElement();\r\n\r\n        if (focus) {\r\n\r\n            // Locate element\r\n            if (focus.xpath) {\r\n                // Search by xpath and id\r\n                var elements = self.getFormContainer().getRenders(focus.xpath);\r\n                var element;\r\n\r\n                $.each(elements, function (i, item) {\r\n                    // Just select editable control\r\n                    if (item.properties.id == focus.id && item.properties.editable) {\r\n                        element = item;\r\n                    }\r\n                });\r\n            } else {\r\n                // Search just using id\r\n                var element = self.getFormContainer().getContainer(focus) || self.getFormContainer().getRenderById(focus);\r\n            }\r\n\r\n            // Search element parent\r\n            if (element) {\r\n                while (element.parent) {\r\n                    if (element.properties.id == self.properties.id || element.parent.properties.id == self.properties.id) return true;\r\n                    element = element.parent;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n});\r\n\r\n","/*\r\n *   Name: Bizagi Render Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a base render class with common stuff related to all renders\r\n */\r\n\r\nbizagi.rendering.element.extend(\"bizagi.rendering.render\", {\r\n    postRenderTimeout: 0,\r\n    maxRendersPerScreen: 50,\r\n    rendersExecuted: 0,\r\n    renderOptimization: false,\r\n    TYPE_QUERY_FORM: \"queryForm\",\r\n    startOptimization: function () {\r\n        bizagi.rendering.render.postRenderTimeout = 500;\r\n        bizagi.rendering.render.rendersExecuted = 0;\r\n        // Cancelled optimization temporally, because its on experimental stage\r\n        bizagi.rendering.render.renderOptimization = false;\r\n    },\r\n    stopOptimization: function () {\r\n        bizagi.rendering.render.postRenderTimeout = 0;\r\n        bizagi.rendering.render.rendersExecuted = 0;\r\n        bizagi.rendering.render.renderOptimization = false;\r\n    }\r\n}, {\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        var form = self.getFormContainer();\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n\r\n        properties.included = (typeof properties.included != \"undefined\") ? bizagi.util.parseBoolean(properties.included) : false;\r\n        properties.uniqueId = Math.ceil(Math.random() * 1000000);\r\n        properties.displayName = properties.displayName || \"\";\r\n        properties.editable = (typeof properties.editable != \"undefined\") ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.visible = (typeof properties.visible != \"undefined\") ? bizagi.util.parseBoolean(properties.visible) : true;\r\n        properties.includedInResult = (typeof properties.includedInResult != \"undefined\") ? bizagi.util.parseBoolean(properties.includedInResult) : false;\r\n\r\n        var renderType = bizagi.util.normalizeType(properties.type);\r\n        if (/^hidden$/i.test(renderType)) {\r\n            properties.visible = false;\r\n        }\r\n\r\n        properties.required = (typeof properties.required != \"undefined\") ? bizagi.util.parseBoolean(properties.required) : false;\r\n        properties.submitOnChange = (typeof properties.submitOnChange != \"undefined\") ? bizagi.util.parseBoolean(properties.submitOnChange) : false;\r\n        properties.maxLength = properties.maxLength || 0;\r\n        properties.helpText = bizagi.util.trim(properties.helpText) || \"\";\r\n        properties.textFormat = properties.textFormat || {};\r\n        properties.valueFormat = properties.valueFormat || {};\r\n        properties.isHidden = (typeof properties.isHidden != \"undefined\") ? bizagi.util.parseBoolean(properties.isHidden) : false;\r\n        properties.visible = (properties.isHidden) ? false : properties.visible;\r\n        //BUG 26867 -    Verify if the control was editable in sometime. Apply only in the column grid (canBeSent). \r\n        //Change the value property on changeEditability, changeEditabilityCellControl\r\n        properties.editabilityEnabled = false;\r\n\r\n        // Old color and background color\r\n        if (properties.color) {\r\n            properties.textFormat.color = properties.color;\r\n        }\r\n\r\n        if (properties.backgroundColor) {\r\n            properties.textFormat.backgroundColor = properties.backgroundColor;\r\n        }\r\n\r\n        // Non-editable fields cannot be required\r\n        properties.required = properties.editable ? properties.required : false;\r\n\r\n        // Override orientation from parent if not set\r\n        properties.orientation = properties.orientation || \"auto\";\r\n\r\n        // Check contexttype\r\n        properties.contexttype = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : \"\";\r\n\r\n        // Save original properties\r\n        self.originalProperties = {\r\n            textFormat: {\r\n                color: properties.textFormat.color,\r\n                backgroundColor: properties.textFormat.backgroundColor\r\n            },\r\n            valueFormat: {\r\n                color: properties.textFormat.color,\r\n                backgroundColor: properties.textFormat.backgroundColor\r\n            },\r\n            visible: properties.visible,\r\n            editable: properties.editable,\r\n            required: properties.required,\r\n            labelAlign: properties.labelAlign,\r\n            valueAlign: properties.valueAlign\r\n        };\r\n\r\n        // Create value property\r\n        self.value = typeof (properties.value) !== \"undefined\" ? properties.value : null;\r\n\r\n        // Register original value property\r\n        self.properties.originalValue = self.value;\r\n        self.properties.previousValue = self.value;\r\n\r\n        // Calculate layout properties\r\n        self.calculateInitialLayoutProperties();\r\n    },\r\n    /*\r\n    *   Calculate aligns, display types, rtl and widths\r\n    */\r\n    calculateInitialLayoutProperties: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set visual defaults\r\n        properties.displayType = properties.displayType || \"normal\";\r\n        properties.labelAlign = properties.labelAlign || self.getDefaultLabelAlign(properties.displayType);\r\n        properties.valueAlign = properties.valueAlign || self.getDefaultValueAlign(properties.displayType);\r\n\r\n        // Check rtl orientation\r\n        if (properties.orientation === \"rtl\") {\r\n            properties.labelAlign = self.getRTLAlign(properties.labelAlign);\r\n            properties.valueAlign = self.getRTLAlign(properties.valueAlign);\r\n        }\r\n\r\n        // Calculate render with\r\n        var renderWidth = self.calculateRenderWidth(properties.labelWidth, properties.valueWidth, properties.displayType);\r\n        properties.labelWidth = renderWidth.label;\r\n        properties.valueWidth = renderWidth.control;\r\n\r\n        if (properties.layoutType === \"percentage\") {\r\n            properties.valueWidth = renderWidth.control;\r\n        }\r\n\r\n        if (properties.labelWidth == 0) {\r\n            properties.displayType = \"value\";\r\n            properties.valueWidth = renderWidth.control;\r\n        }\r\n\r\n        if (properties.valueWidth == 0) {\r\n            properties.displayType = \"label\";\r\n        }\r\n\r\n        if (properties.type === \"userfield\") {\r\n            if (properties.displayType === \"both\") {\r\n                properties.valueWidth = properties.valueWidth || 50;\r\n                properties.labelWidth = properties.labelWidth || 50;\r\n            } else if (properties.displayType === \"vertical\") {\r\n                properties.valueWidth = 100;\r\n                properties.labelWidth = 100;\r\n            } else {\r\n                properties.valueWidth = 100;\r\n                properties.labelWidth = 0;\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () {\r\n        return bizagi.rendering.element.ELEMENT_TYPE_RENDER;\r\n    },\r\n    /*\r\n    *   Returns the html templated element\r\n    */\r\n    render: function (renderTemplateName) {\r\n        return this.renderElement(renderTemplateName);\r\n    },\r\n    /*\r\n    *   Returns the html templated element\r\n    */\r\n    renderElement: function (renderTemplateName) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        // Start rendering deferred\r\n        self.renderingDeferred = new $.Deferred();\r\n\r\n        // Set render template\r\n        renderTemplateName = renderTemplateName || \"render\";\r\n        var renderTemplate = self.renderFactory.getTemplate(renderTemplateName);\r\n\r\n        // Resolve render label\r\n        var label = properties.displayName;\r\n        if (typeof label == \"string\") {\r\n            label = label.replaceAll(\"&\", \"&amp;\");\r\n            label = label.replaceAll(\"$\", \"&#36;\");\r\n            label = label.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\r\n            label = label.replaceAll(\"\\\"\", \"&#34;\").replaceAll(\"'\", \"&#39;\").replaceAll(\"/\", \"&#47;\");\r\n            label = label.replaceAll(\"\\\\n\", \"<br/>\");\r\n            label = label.replaceAll(\"\\n\", \"<br/>\");\r\n        }\r\n\r\n        var isFullRender = bizagi.util.detectDevice() !== \"desktop\" && (properties.type === \"association\" || properties.type === \"uploadecm\" || ((properties.type === \"actionLauncher\" || properties.type === \"polymorphicLauncher\") && bizagi.util.isTabletDevice()) || (properties.type === \"grid\" && !bizagi.util.isTabletDevice()));\r\n        var labelWidth = parseFloat(properties.labelWidth);\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(renderTemplate, {\r\n            label: label, helpText: properties.helpText,\r\n            editable: properties.editable,\r\n            isExtendedText: (properties.type == \"text\" && properties.isExtended),\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            tag: properties.tag,\r\n            displayType: properties.displayType,\r\n            displayOptionClass: self.getDisplayOptionClass(properties.displayType),\r\n            labelAlignClass: self.getAlignClass(properties.labelAlign),\r\n            valueAlignClass: self.getAlignClass(properties.valueAlign),\r\n            labelWidth: labelWidth,\r\n            stringLabelWidth: labelWidth + (properties.layoutType == 'pixels' ? 'px' : '%'),\r\n            valueWidth: parseFloat(properties.valueWidth),\r\n            stringValueWidth: parseFloat(properties.valueWidth) + (properties.layoutType == 'pixels' ? 'px' : '%'),\r\n            layoutType: properties.layoutType,\r\n            isDesign: self.getMode() === \"design\",\r\n            messageValidation: properties.messageValidation,\r\n            printVersion: form.params.printversion,\r\n            cssClass: properties.cssclass || \"\",\r\n            includedInResult: properties.includedInResult,\r\n            included: properties.included,\r\n            type: properties.type,\r\n            showFullRender: isFullRender,\r\n            required: properties.required,\r\n            helpText: properties.helpText\r\n        });\r\n\r\n        // Render internal control html\r\n        var result = self.internalRenderControl();\r\n        if (!result) {\r\n            result = \"\";\r\n        }\r\n\r\n        // Check if this is an async element or not\r\n        var async = typeof (result) === \"object\" && result.done;\r\n        if (!async) {\r\n            html = self.replaceControlHtml(html, result);\r\n\r\n        } else {\r\n            if (result.state() === \"resolved\") {\r\n                // Fetch resolved result\r\n                html = self.replaceControlHtml(html, self.resolveResult(result));\r\n                self.asyncRenderDeferred = null;\r\n            } else {\r\n                // Wait for result\r\n                self.asyncRenderDeferred = result;\r\n                html = self.replaceControlHtml(html, \"\");\r\n            }\r\n        }\r\n\r\n        return html;\r\n    },\r\n    /*\r\n    *   Returns the resolved result from a promise when the promise has been executed already\r\n    */\r\n    resolveResult: function (promise) {\r\n        return bizagi.resolveResult(promise);\r\n    },\r\n    /*\r\n    *   Check if the jquery element is ready or not\r\n    */\r\n    isRendered: function () {\r\n        var self = this;\r\n        if (!self.renderingDeferred) {\r\n            return false;\r\n        }\r\n        return self.renderingDeferred.promise();\r\n    },\r\n    /*\r\n    *   Renders the control html\r\n    */\r\n    internalRenderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        self.control = null;\r\n\r\n        if (self.renderFactory.printVersion) {\r\n            properties.editable = false;\r\n            return self.renderControl();\r\n        } else if (properties.editable) {\r\n            return self.renderControl();\r\n        }\r\n\r\n        return self.renderReadOnly();\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    postRenderElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set element variable\r\n        self.element = element;\r\n\r\n        if (properties.submitOnChange)\r\n            self.configureSubmitOnChange();\r\n\r\n        // Process internal layout\r\n        isLabelFormat = true;\r\n\r\n        var executePostRender = function (_element) {\r\n            if (bizagi.rendering.render.renderOptimization &&\r\n                bizagi.rendering.render.rendersExecuted > bizagi.rendering.render.maxRendersPerScreen) {\r\n\r\n                // Execute post-render control\r\n                setTimeout(function () {\r\n                    self.internalPostRender(_element);\r\n                    bizagi.rendering.render.postRenderTimeout += 50;\r\n                }, bizagi.rendering.render.postRenderTimeout);\r\n\r\n            } else {\r\n                self.internalPostRender(_element);\r\n            }\r\n            bizagi.rendering.render.rendersExecuted++;\r\n        };\r\n\r\n        if (self.asyncRenderDeferred) {\r\n            // Wait for async result\r\n            $.when(self.asyncRenderDeferred)\r\n                .done(function (html) {\r\n                    var control = self.getControl();\r\n                    if (typeof self.emptyControlByAsyncRenderDeferred == \"function\") {\r\n                        self.emptyControlByAsyncRenderDeferred();\r\n                    }\r\n                    control.append(html);\r\n\r\n                    // Execute post-render control\r\n                    executePostRender(element);\r\n                    self.processLayout(!isLabelFormat, self.properties.valueFormat || {});\r\n                });\r\n        } else {\r\n            // Execute post-render control\r\n            executePostRender(element);\r\n        }\r\n    },\r\n    /*\r\n    *   Executes the post render handlers\r\n    */\r\n    internalPostRender: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n\r\n        self.control = self.getControl();\r\n\r\n        // Resolve rendering deferred\r\n        if (self.renderingDeferred) {\r\n            self.renderingDeferred.resolve();\r\n        }\r\n\r\n        // Execute post-renders\r\n        if (properties.editable) {\r\n            // Post-render editable version\r\n            if (self.renderFactory.printVersion && self.postRenderPrintVersion) {\r\n                self.postRenderPrintVersion();\r\n            } else {\r\n                self.postRender();\r\n            }\r\n\r\n        } else {\r\n            // Post-render readonly version\r\n            self.postRenderReadOnly(element);\r\n        }\r\n\r\n        // Perform execution mode methods\r\n        if (mode == \"execution\") {\r\n            self.performExecutionModeMethods();\r\n        } else {\r\n            self.performDesignModeMethods();\r\n        }\r\n\r\n        self.processLayout(isLabelFormat, self.properties.textFormat || {});\r\n        self.processLayout(!isLabelFormat, self.properties.valueFormat || {});\r\n    },\r\n    /*\r\n    *   Execute runtime only methods\r\n    */\r\n    performExecutionModeMethods: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (self.getFormType() == self.Class.TYPE_QUERY_FORM) {\r\n            self.configureHandlersQueryForm();\r\n        }\r\n\r\n        // Apply handlers\r\n        if (properties.editable) {\r\n            self.configureHandlers();\r\n        } else {\r\n            self.configureHandlersReadOnly();\r\n        }\r\n\r\n        // Set initial value\r\n        self.internalSetInitialValue();\r\n    },\r\n    /**\r\n     * Execute design only methods\r\n     */\r\n    performDesignModeMethods: function () {\r\n        var self = this;\r\n\r\n        // Execute custom code for each render\r\n        self.configureDesignView();\r\n\r\n        // Set initial value\r\n        self.internalSetInitialValue();\r\n    },\r\n    /*\r\n    *   Replaces a {{control}} string in the specified element\r\n    */\r\n    replaceControlHtml: function (html, replace) {\r\n        html = html || \"\";\r\n        replace = replace || \"\";\r\n        return html.replaceFirstWithoutPatterns(\"{{control}}\", replace);\r\n    },\r\n    /*\r\n    *   Return the rendered element\r\n    */\r\n    getRenderedElement: function () {\r\n        if (bizagi.util.isEmpty(this.element)) {\r\n            bizagi.log(\" render hasn't been rendered!\", this, \"error\");\r\n        }\r\n\r\n        return this.element;\r\n    },\r\n    /*\r\n    *   Sets the initial value for the renders\r\n    */\r\n    internalSetInitialValue: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        self.internalSetInitialValueFlag = true;\r\n\r\n        // Set the initial value\r\n        if (properties.editable) {\r\n            if (!bizagi.util.isEmpty(self.value)) {\r\n                self.setDisplayValue(self.value);\r\n            }\r\n        } else {\r\n            if (!bizagi.util.isEmpty(self.value)) {\r\n                self.setDisplayValue(self.value);\r\n            }\r\n        }\r\n        self.internalSetInitialValueFlag = false;\r\n    },\r\n    /*\r\n    * Public method to determine if a value is valid or not\r\n    */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n        var inlineAdd = self.grid && self.grid.properties && self.grid.properties.inlineAdd;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) === false) {\r\n            return true;\r\n        }\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) === false && !inlineAdd) {\r\n            return true;\r\n        }\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (bizagi.util.parseBoolean(properties.required)) {\r\n            var form = self.getFormContainer();\r\n            var hasValue = false;\r\n            var renders = self.grid ? [self] : form.getRenders(properties.xpath);\r\n            var isQueryForm = /^query/i.test(properties.type);\r\n\t               \r\n            renders.filter(function (render) {\r\n                return render.properties.id == properties.id;\r\n            }).forEach(function (render) {\r\n                if (render.hasValue() && (render.properties.editable || inlineAdd)) {\r\n                    hasValue = true;\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            if (!hasValue && !self.properties.isClone) {\r\n                message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                var messageData = {xpath: properties.xpath, message: message};\r\n\r\n                if (isQueryForm) {\r\n                    messageData = $.extend({}, messageData, {\r\n                        id: properties.id,\r\n                        isQuery: isQueryForm\r\n                    });\r\n                }\r\n\r\n                invalidElements.push(messageData);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // Check retypes\r\n        if (properties.retype == \"duplicate\") {\r\n            // Don't process cloned renders, just originals\r\n            if (self.cloneRender) {\r\n                if (self.cloneRender.getValue() != self.getValue()) {\r\n                    message = self.getResource(\"render-text-retype-error\");\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    return false;\r\n                }\r\n            }\r\n        } else if (properties.retype == \"double\") {\r\n            var control = $(\"input\", self.element);\r\n\r\n            //Waits until the control has the second value written\r\n            if (control && control.data(\"oldValue\")) {\r\n                if (control.val() === \"\") {\r\n\r\n                    message = self.getResource(\"render-text-retype-error\");\r\n                    invalidElements.push({\r\n                        xpath: properties.xpath,\r\n                        message: message\r\n                    });\r\n\r\n                    return false;\r\n                } else if (control.val() != control.data(\"oldValue\")) {\r\n                    message = self.getResource(\"render-text-retype-error\");\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Check maxlength\r\n        var columnEditable = self.grid && self.grid.getColumn ? self.grid.getColumn(self.properties.xpath).properties.editable : true;\r\n        if (properties.type !== \"userPassword\" && properties.maxLength !== undefined && properties.maxLength > 0 && bizagi.util.isNumeric(properties.maxLength)) {\r\n            if (columnEditable || (!columnEditable && self.controlValueIsChanged())) {\r\n                var maxLength = new Number(properties.maxLength);\r\n                var value = self.getValue();\r\n\r\n                if (value && value.toString().length > maxLength) {\r\n                    message = self.getResource(\"render-text-maxLength-error\").replaceAll(\"#maxLength#\", maxLength);\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Check if a render has no value for required validation\r\n    */\r\n    hasValue: function () {\r\n        var self = this;\r\n        // Next line decides if only spaces are accepted as valid texts or not. Anyway the spaces are still saved as self.value has not changed\r\n        var value = self.getValue();\r\n\r\n        if (value && self.properties.type === \"text\") {\r\n            value = typeof (value) === \"string\" ? value.trim() : value;\r\n        }\r\n\r\n        return !bizagi.util.isEmpty(value);\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    postRender: function () {       \r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed in read-only mode\r\n    */\r\n    postRenderReadOnly: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers when the control is readonly\r\n    */\r\n    configureHandlersReadOnly: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour when rendering in design mode\r\n    */\r\n    configureDesignView: function () {\r\n    },\r\n    /*\r\n    *   Method to process the render the layout\r\n    */\r\n    processLayout: function (isLabelFormat, format) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (self.getControl() == null) return;\r\n\r\n        // Set customizations\r\n        format = format || {};\r\n\r\n        if (format.color) {\r\n            self.changeColor(format.color, isLabelFormat);\r\n        }\r\n        if (format.background) {\r\n            self.changeBackgroundColor(format.background);\r\n        }\r\n        //if bold is true in modeler, we receive nothing in execution (!formal.bold)\r\n        if (format.bold || !format.bold || !isLabelFormat) {\r\n            self.changeFontBold(format.bold, isLabelFormat);\r\n        }\r\n        if (format.italic) {\r\n            self.changeFontItalic(format.italic, isLabelFormat);\r\n        }\r\n        if (format.underline) {\r\n            self.changeFontUnderline(format.underline, isLabelFormat);\r\n        }\r\n        if (format.strikethru) {\r\n            self.changeFontStrikethru(format.strikethru, isLabelFormat);\r\n        }\r\n        if (format.size) {\r\n            self.changeFontSize(format.size, isLabelFormat);\r\n        }\r\n\r\n        // Set required and visiblity\r\n        properties.required = properties.required != undefined ? bizagi.util.parseBoolean(properties.required) : false;\r\n        var visible = properties.visible != undefined ? bizagi.util.parseBoolean(properties.visible) : true;\r\n        if (properties.required) {\r\n            self.changeRequired(properties.required);\r\n        }\r\n        if (!visible) {\r\n            if (self.grid) {\r\n                self.changeCellVisibility(visible);\r\n            } else {\r\n                self.changeVisibility(visible);\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        triggerEvents = triggerEvents !== undefined ? triggerEvents : true;\r\n\r\n        if (!(bizagi.util.identicalObjects(value, self.value))) {\r\n            // set previous value\r\n            self.properties.previousValue = self.properties.originalValue = self.value;\r\n\r\n            // Change internal value\r\n            self.value = self.properties.value = value;\r\n            if (self.properties.required && self.getMode() == \"execution\") {\r\n\r\n                if (self.checkRequired([])) {\r\n                    self.changeRequiredLabel(false);\r\n                } else {\r\n                    self.changeRequiredLabel(true);\r\n                }\r\n            }\r\n\r\n            // Trigger events\r\n            if (triggerEvents && !self.internalSetInitialValueFlag) {\r\n                self.triggerRenderChange();\r\n                self.triggerRenderValidate();\r\n            }\r\n        }\r\n    },\r\n\r\n    checkRequired: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (bizagi.util.parseBoolean(properties.required)) {\r\n            if (!self.hasValue()) {\r\n                message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                invalidElements.push({\r\n                    xpath: properties.xpath,\r\n                    message: message\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n\r\n    validateInputRetype: function () {\r\n        var self = this;\r\n        if (self.properties.retype && self.cloneRender) {\r\n            return self.getValue() == self.cloneRender.getValue();\r\n        }\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Triggers the render change event\r\n    */\r\n    triggerRenderChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        params.changed = params.changed !== undefined ? params.changed : true;\r\n        self.triggerHandler(\"renderchange\", {render: self, changed: params.changed});\r\n    },\r\n    /*\r\n    *   Triggers the render validate event\r\n    */\r\n    triggerRenderValidate: function () {\r\n        var self = this;\r\n        self.triggerHandler(\"rendervalidate\", {render: self});\r\n    },\r\n    /*\r\n    *   Sets the value in the rendered control\r\n    */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n\r\n        if (!self.properties.editable && (self.properties.display !== \"check\" || (self.properties.display === \"check\" && bizagi.override.enableCheck === true))) {\r\n            // Render as simple value\r\n            var displayValue = self.getDisplayValue(value);\r\n            if (typeof (displayValue) == \"string\" || typeof (displayValue) == \"number\") {\r\n                displayValue = bizagi.util.sanitizeHTML(displayValue);\r\n                $(control).html(\"<label class='readonly-control'>\" + displayValue + \"</label>\");\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *   Returns the internal value\r\n    */\r\n    getValue: function () {\r\n        return this.value;\r\n    },\r\n    /*\r\n    *   Returns the value to display, ex. non-editable renders\r\n    */\r\n    getDisplayValue: function () {\r\n        return this.getValue();\r\n    },\r\n    /*\r\n    *   Template method to get the label element\r\n    */\r\n    getLabel: function () {\r\n        bizagi.util.mustImplement(\"getLabel\");\r\n    },\r\n    /*\r\n    *   Template method to get the control element\r\n    */\r\n    getControl: function () {\r\n        bizagi.util.mustImplement(\"getControl\");\r\n    },\r\n    /*\r\n    *   Template method to get the control filler element\r\n    */\r\n    getControlFiller: function () {\r\n        bizagi.util.mustImplement(\"getControlFiller\");\r\n    },\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n    },\r\n    /*\r\n    *   Adds a validation message to the render\r\n    */\r\n    setValidationMessage: function (message) {\r\n        this.validationMessage = message;\r\n    },\r\n    /*\r\n    *   Method to render non editable values\r\n    */\r\n    renderReadOnly: function () {\r\n        var result = this.getValue();\r\n        var readOnlyValue = \"\";\r\n\r\n        if (bizagi.util.isObject(result) && typeof (result.value) !== \"undefined\") {\r\n            readOnlyValue = bizagi.util.sanitizeHTML(result.value);\r\n        } else if (!bizagi.util.isEmpty(result)) {\r\n            if (bizagi.util.isString(result)) {\r\n                readOnlyValue = bizagi.util.decodedDisplayValue(result);\r\n            } else {\r\n                readOnlyValue = result;\r\n            }\r\n        }\r\n\r\n        return readOnlyValue;\r\n    },\r\n\r\n    /*\r\n    *  Method to render print version\r\n    */\r\n    postRenderPrintVersion: function () {\r\n    },\r\n\r\n    /*\r\n    *   Customizes render display type with custom css classes\r\n    */\r\n    changeDisplayOption: function (displayType) {\r\n        this.properties.displayType = displayType;\r\n    },\r\n\r\n    /*\r\n    *   Return the right display option class\r\n    */\r\n    getDisplayOptionClass: function (displayType) {\r\n        return \"\";\r\n    },\r\n\r\n    /*\r\n    *   Customizes render label align\r\n    */\r\n    changeLabelAlign: function (alignType) {\r\n        this.properties.labelAlign = alignType;\r\n    },\r\n\r\n    /*\r\n    *   Customizes render value align\r\n    */\r\n    changeValueAlign: function (alignType) {\r\n        this.properties.valueAlign = alignType;\r\n    },\r\n\r\n    /*\r\n    *   Return the right align class\r\n    */\r\n    getAlignClass: function (alignType) {\r\n        return \"\";\r\n    },\r\n\r\n    /*\r\n    *   Customizes render label and value width\r\n    */\r\n    customizeRenderWidth: function () {\r\n    },\r\n\r\n    /* Customizes render color*/\r\n    changeColor: function (color, isLabelFormat) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var label = self.getLabel();\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        if (control && label) {\r\n            if (color != 'none') {\r\n                // Hide - show the render\r\n                if (self.properties.displayType === \"value\" || !isLabelFormat) {\r\n                    self.getElementsToStylize(self.getControl()).css(\"color\", color, \"!important\");\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"color\", color, \"!important\");\r\n                    });\r\n                } else {\r\n                    self.element.each(function () {\r\n                        this.style.setProperty('color', color, 'important');\r\n                    });\r\n\r\n                    if (self.properties.type == \"grid\") {\r\n                        self.getControl().find(\".bz-mobile-grid__header-title\").each(function () {\r\n                            this.style.setProperty('color', color, 'important');\r\n                        });\r\n                    }\r\n\r\n                    self.getLabel().find(\"label\").css(\"color\", color, \"!important\");\r\n                    if (self.properties.editable === false) {\r\n                        self.getElementsToStylize(self.getControl()).css(\"color\", color, \"!important\");\r\n                        self.getElementsToStylize($(\"label\", self.getControl()).css(\"color\", color, \"!important\"));\r\n                    }\r\n                }\r\n            } else {\r\n                self.element.css(\"color\", \"\");\r\n                self.getLabel().find(\"label\").css(\"color\", \"\");\r\n                self.getControl().css(\"color\", \"\");\r\n\r\n                self.getControl().find(\"input, textarea\").each(function (i, element) {\r\n                    var originalColor = $(element).data(\"originalColor\") || \"\";\r\n                    self.getElementsToStylize(element).css(\"color\", originalColor);\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes render background color*/\r\n    changeBackgroundColor: function (color) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var label = self.getLabel();\r\n\r\n        if (control && label) {\r\n            if (color != 'none') {\r\n                self.element.each(function () {\r\n                    this.style.setProperty('background-color', color, 'important');\r\n                });\r\n\r\n                if (typeof (label.find('label').style) !== \"undefined\") {\r\n                    self.getLabel().find(\"label\").style(\"background-color\", color, \"important\");\r\n                } else {\r\n                    self.getLabel().find(\"label\").css(\"background-color\", color, \"!important\");\r\n                }\r\n\r\n                var currentStyle = self.getLabel().attr(\"style\");\r\n                currentStyle += \"; background-color:\" + color + \"!important\";\r\n                self.getLabel().attr(\"style\", currentStyle);\r\n            } else {\r\n                self.element.css(\"background-color\", \"\");\r\n                self.getLabel().find(\"label\").css(\"background-color\", \"\");\r\n                self.getControl().css(\"background-color\", \"\");\r\n                self.getControl().find(\"input, textarea\").each(function (i, element) {\r\n                    var originalColor = $(element).data(\"originalColor\") || \"\";\r\n                    $(element).css(\"background-color\", originalColor);\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Returns the formatting label to be used for bold, italic, underline, strikethrough and size*/\r\n    getFormattingLabel: function () {\r\n        var self = this;\r\n        return self.getLabel().find(\"label\");\r\n    },\r\n\r\n    /* Customizes the font weight */\r\n    changeFontBold: function (bold, isLabelFormat) {\r\n        var self = this;\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(bold) != false && isLabelFormat) {\r\n            self.getFormattingLabel().css(\"font-weight\", \"bold\", \"!important\");\r\n            self.getControl().each(function (i, element) {\r\n                $(element).css(\"font-weight\", \"bold\", \"!important\");\r\n            });\r\n\r\n        } else {\r\n            if (isLabelFormat)\r\n                self.getFormattingLabel().css(\"font-weight\", \"normal\", \"!important\");\r\n        }\r\n        if (!isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(bold) == true) {\r\n                self.getControl().find(\"*\").each(function (i, element) {\r\n                    $(element).css(\"font-weight\", \"bold\", \"!important\");\r\n                });\r\n            } else {\r\n                self.getControl().find(\"*\").each(function (i, element) {\r\n                    $(element).css(\"font-weight\", \"normal\", \"!important\");\r\n                });\r\n                self.getControl().css(\"font-weight\", \"normal\", \"!important\");\r\n            }\r\n        }\r\n    },\r\n\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var value = self.getValue();\r\n        var compareValue = properties.originalValue;\r\n        var baseValue = properties.defaultValue;\r\n        var result = true;\r\n        var renderType = bizagi.util.normalizeType(properties.type);\r\n\r\n        // Flag to force to collect data\r\n        if ($.forceCollectData) {\r\n            return true;\r\n        }\r\n\r\n        // Verify if control has been ready\r\n        if (renderType === \"grid\" && self.ready().state() === \"pending\") {\r\n            return false;\r\n        }\r\n\r\n        if ([\"combo\", \"queryCombo\", \"list\", \"queryList\",\"radio\", \"queryRadio\"].includes(renderType) || /^cascadingcombo$/i.test(renderType)) {\r\n            if (value && value.length !== undefined) {\r\n                value = value[0];\r\n            }\r\n            if (compareValue && compareValue.length !== undefined) {\r\n                compareValue = compareValue[0];\r\n            }\r\n            if (baseValue && baseValue.length !== undefined) {\r\n                baseValue = baseValue[0];\r\n            }\r\n            value = value && value.id ? value.id : value;\r\n            compareValue = compareValue && compareValue.id ? compareValue.id : compareValue;\r\n            baseValue = baseValue && baseValue.id ? baseValue.id : baseValue;\r\n            if (typeof baseValue != \"undefined\" && baseValue != null) {\r\n                result = (compareValue == value) && (compareValue != baseValue) ? false : true;\r\n            } else {\r\n                result = (compareValue == value) ? false : true;\r\n            }\r\n        } else if (renderType === \"boolean\" || renderType === \"queryBoolean\" || renderType === \"queryCheck\") {\r\n            result = (bizagi.util.parseBoolean(compareValue) == bizagi.util.parseBoolean(value)) ? false : true;\r\n        } else if (renderType === \"searchNumber\") {\r\n            result = !!(value);\r\n        } else if (renderType === \"number\") {\r\n            if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue === value) ? false : true;\r\n            }\r\n        } else if (renderType === \"text\") {\r\n            if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue === value) ? false : true;\r\n            }\r\n        } else if (renderType === \"date\") {\r\n            if (!compareValue && !value) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue == value) ? false : true;\r\n            }\r\n        } else if (renderType === \"actionLauncher\") {\r\n            //Object must be an array\r\n            result = false;\r\n            var compareValueObj = [];\r\n            try {\r\n                if (typeof compareValue === \"string\") {\r\n                    compareValueObj = JSON.parse(compareValue);\r\n                } else {\r\n                    compareValueObj = compareValue;\r\n                }\r\n            } catch (e) {\r\n            }\r\n\r\n            var _findAction = function (guid, targetObj) {\r\n                guid = guid || \"\";\r\n                targetObj = targetObj || [];\r\n                var result = false;\r\n                for (var i = 0, l = targetObj.length; i < l; i++) {\r\n                    if (targetObj[i].guidAction == guid) {\r\n                        result = true;\r\n                        break;\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n\r\n            if (compareValueObj.length == value.length) {\r\n                for (var i = 0, l = compareValueObj.length; i < l; i++) {\r\n                    if (!_findAction(compareValueObj[i].guidAction, value)) {\r\n                        result = true;\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                result = true;\r\n            }\r\n        } else if (renderType === \"polymorphicLauncher\" || renderType === \"entityTemplate\") {\r\n            //Object must be an array\r\n            if (compareValue.length != value.length) {\r\n                result = true;\r\n            } else {\r\n                result = (JSON.encode(value) == JSON.encode(compareValue)) ? false : true;\r\n            }\r\n        } else if (renderType === \"image\") {\r\n            if (compareValue == null && value.indexOf(true) < 0) {\r\n                result = false;\r\n            } else {\r\n                result = true;\r\n            }\r\n        } else if (renderType === \"searchList\") {\r\n            var objectValue = {};\r\n            try {\r\n                objectValue = JSON.parse(value);\r\n            } catch (e) {\r\n                console.log(\"Error when detect change value on searchList control\")\r\n            }\r\n            result = (JSON.encode(compareValue) == JSON.encode(objectValue.value)) ? false : true;\r\n        } else {\r\n            result = (compareValue === value) ? false : true;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /* Customizes the font italic style */\r\n    changeFontItalic: function (italic, isLabelFormat) {\r\n        var self = this;\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(italic) == true) {\r\n                if (isLabelFormat)\r\n                    self.getFormattingLabel().css(\"font-style\", \"italic\", \"!important\");\r\n\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"font-style\", \"italic\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"font-style\", \"italic\", \"!important\");\r\n                }\r\n            } else {\r\n                if (isLabelFormat)\r\n                    self.getFormattingLabel().css(\"font-style\", \"normal\", \"!important\");\r\n\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"font-style\", \"normal\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"font-style\", \"normal\", \"!important\");\r\n                }\r\n            }\r\n        } else {\r\n            if (bizagi.util.parseBoolean(italic) == true) {\r\n                self.getFormattingLabel().css(\"font-style\", \"italic\", \"!important\");\r\n            } else {\r\n                self.getFormattingLabel().css(\"font-style\", \"normal\", \"!important\");\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes the font underline */\r\n    changeFontUnderline: function (underline, isLabelFormat) {\r\n        var self = this;\r\n        var textFormat = self.properties.textFormat || {};\r\n        var valueFormat = self.properties.valueFormat || {};\r\n        var strikethru = bizagi.util.parseBoolean(textFormat.strikethru) ? \"line-through \" : \"\";\r\n        var valuestrikethru = bizagi.util.parseBoolean(valueFormat.strikethru) ? \"line-through \" : \"\";\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(underline) == true && isLabelFormat) {\r\n            self.getFormattingLabel().css(\"text-decoration\", strikethru + \"underline\", \"!important\");\r\n            self.getControl().each(function (i, element) {\r\n                self.getElementsToStylize(element).css(\"text-decoration\", strikethru + \"underline\");\r\n            });\r\n        } else {\r\n            if (isLabelFormat)\r\n                self.getFormattingLabel().css(\"text-decoration\", strikethru, \"!important\");\r\n        }\r\n        if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(underline) == true) {\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"text-decoration\", valuestrikethru + \"underline\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"text-decoration\", valuestrikethru + \"underline\", \"!important\");\r\n                }\r\n            } else {\r\n                self.getControl().find(\"*\").each(function (i, element) {\r\n                    self.getElementsToStylize(element).css(\"text-decoration\", valuestrikethru, \"!important\");\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes the font Strikethrough property */\r\n    changeFontStrikethru: function (strikethru, isLabelFormat) {\r\n        var self = this;\r\n        var textFormat = self.properties.textFormat || {};\r\n        var valueFormat = self.properties.valueFormat || {};\r\n        var underline = bizagi.util.parseBoolean(textFormat.underline) ? \"underline \" : \"\";\r\n        var valueunderline = bizagi.util.parseBoolean(valueFormat.underline) ? \"underline \" : \"\";\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(strikethru) == true && isLabelFormat) {\r\n            self.getFormattingLabel().css(\"text-decoration\", underline + \"line-through\", \"!important\");\r\n        } else {\r\n            if (isLabelFormat)\r\n                self.getFormattingLabel().css(\"text-decoration\", underline, \"!important\");\r\n        }\r\n\r\n        if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(strikethru) == true) {\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"text-decoration\", valueunderline + \"line-through\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"text-decoration\", valueunderline + \"line-through\", \"!important\");\r\n                }\r\n            } else {\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"text-decoration\", valueunderline, \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"text-decoration\", valueunderline, \"!important\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes the font size property */\r\n    changeFontSize: function (size, isLabelFormat) {\r\n        var self = this;\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (size != \"0\") {\r\n            var label = self.getFormattingLabel();\r\n            var newFontSize = (100 + Number(size) * 10) + \"%\";\r\n            if (isLabelFormat) {\r\n                label.css(\"font-size\", newFontSize, \"!important\");\r\n            }\r\n            if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n                var control = self.getControl();\r\n                if (typeof control.children() == \"object\" && control.children().length > 0) {\r\n                    self.getElementsToStylize(control.children()).css(\"font-size\", newFontSize, \"!important\");\r\n                } else {\r\n                    self.getElementsToStylize(control).css(\"font-size\", newFontSize, \"!important\");\r\n                    // Next line applies to Cascading combo and combo in order to increase the control space with large value fonts\r\n                    if (self.properties.type.indexOf(\"ombo\") != -1 && size > 4) (\".ui-selectmenu\", control).children(0).height(2 * size + 20);\r\n                }\r\n\r\n                self.getElementsToStylize(control.find(\".ui-bizagi-render-date\")).css(\"line-height\", \"normal\");\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * in mobiles, don't apply styles to icon's elements\r\n     */\r\n    getElementsToStylize: function (context) {\r\n        return $(context);\r\n    },\r\n\r\n    /* Changes the render visibility*/\r\n    changeVisibility: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(argument) == true) {\r\n            if (properties.type !== \"hidden\") {\r\n                self.element.show();\r\n                self.element.css(\"display\", \"\");\r\n\r\n                if (properties.required) {\r\n                    if (!self.hasValue()) {\r\n                        self.changeRequiredLabel(true);\r\n                    }\r\n                }\r\n            }\r\n        } else if (self.element) {\r\n            self.element.hide();\r\n        }\r\n\r\n        // Update properties\r\n        properties.visible = argument;\r\n    },\r\n    /* Changes the render editability*/\r\n    changeEditability: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        // Renders again\r\n        properties.editable = argument == \"Default\" ? self.originalProperties.editable: bizagi.util.parseBoolean(argument);\r\n        properties.editabilityEnabled = properties.editabilityEnabled || properties.editable; \r\n\r\n        // Clears control\r\n        control.empty();\r\n\r\n        if (typeof self.internalRenderControl == \"function\") {\r\n            $.when(self.internalRenderControl()).done(function (html) {\r\n                if (typeof self.emptyControlByChangeEditability == \"function\")\r\n                    self.emptyControlByChangeEditability();\r\n                if (!self.asyncRenderDeferred)\r\n                    control.append(html);\r\n                self.postRenderElement(self.element);\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    * change cell editability and attach bindings\r\n    */\r\n    changeEditabilityCellControl: function (argument, key, xpath) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        var renderColumn = self.grid.getColumn(xpath);\r\n        var decorated = renderColumn.getDecorated(key);\r\n\r\n        // Renders again\r\n        properties.editable = argument == \"Default\" ? self.originalProperties.editable: bizagi.util.parseBoolean(argument);\r\n        properties.editabilityEnabled = properties.editabilityEnabled || properties.editable; \r\n\r\n        // Clears control\r\n        control.empty();\r\n        if (typeof self.internalRenderControl == \"function\") {\r\n            $.when(self.internalRenderControl()).done(function (html) {\r\n                if (!self.asyncRenderDeferred) {\r\n                    control.append(html);\r\n                }\r\n\r\n                self.postRenderElement(self.element);\r\n\r\n                if (properties.editable) {\r\n\r\n                    renderColumn.bind(\"rendered\", function () {\r\n                        renderColumn.readyDeferred.resolve();\r\n                    });\r\n\r\n                    decorated.unbind(\"renderchange\");\r\n\r\n                    // If the render changes set the flag on\r\n                    decorated.bind(\"renderchange\", function (render, args) {\r\n                        renderColumn.changed = true;\r\n                        self.grid.onCellChange(renderColumn, null, key, args);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    changeRequired: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var label = properties.displayName || \"\";\r\n        var labelElement = $(\"label\", self.getLabel());\r\n        var controlElement = self.getControl();\r\n\r\n        // Update properties\r\n        properties.required = argument;\r\n\r\n        // Changes label\r\n        if (self.getMode() == \"execution\" && self.checkRequired([])) {\r\n            self.changeRequiredLabel(false);\r\n        } else if (bizagi.util.parseBoolean(argument) == true && properties.editable) {\r\n            if (self.properties.orientation == \"rtl\") {\r\n                controlElement.prepend('<div class=\"ui-bizagi-render-control-required-rtl\"></div>');\r\n            } else {\r\n                controlElement.addClass('control-required');\r\n                controlElement.prepend('<div class=\"ui-bizagi-render-control-required\"></div>');\r\n            }\r\n        } else {\r\n            // if element has required label and through action change it, remove element.\r\n            if (self.properties.orientation == \"rtl\") {\r\n                $(\".ui-bizagi-render-control-required-rtl\", controlElement).remove();\r\n            } else {\r\n                controlElement.removeClass('control-required');\r\n                $(\".ui-bizagi-render-control-required\", controlElement).remove();\r\n            }\r\n        }\r\n\r\n        // Set text, HTML is more suitable for the content\r\n        labelElement.html(label);\r\n\r\n        // Perform validations again to check if the form is valid after this change\r\n        self.triggerRenderValidate();\r\n    },\r\n    /**\r\n     * This method just make a toggle of red label indicator\r\n     * Does't change internal value of control, if you need it\r\n     * please use changeRequired method\r\n     *\r\n     * @argument {boolean} argument\r\n     */\r\n    changeRequiredLabel: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var label = properties.displayName || \"\";\r\n        var labelElement = $(\"label\", self.getLabel());\r\n        var controlElement = self.getControl();\r\n\r\n        // Changes label\r\n        if (bizagi.util.parseBoolean(argument) == true && properties.editable) {\r\n            if (self.properties.orientation == \"rtl\") {\r\n                controlElement.prepend('<div class=\"ui-bizagi-render-control-required-rtl\"></div>');\r\n            } else {\r\n                controlElement.addClass('control-required');\r\n                controlElement.append('<div class=\"ui-bizagi-render-control-required\"></div>');\r\n            }\r\n        } else {\r\n            // if element has required label and through action change it, remove element.\r\n            if (self.properties.orientation == \"rtl\") {\r\n                $(\".ui-bizagi-render-control-required-rtl\", controlElement).remove();\r\n            } else {\r\n                controlElement.removeClass('control-required');\r\n                $(\".ui-bizagi-render-control-required\", controlElement).remove();\r\n            }\r\n        }\r\n\r\n        // Set text, HTML is more suitable for the content\r\n        labelElement.html(label);\r\n\r\n        // Perform validations again to check if the form is valid after this change\r\n        self.triggerRenderValidate();\r\n    },\r\n    /*\r\n    *   Refresh the control with a new data\r\n    */\r\n    refreshControl: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var originalValue = self.value;\r\n        var form = self.getFormContainer();\r\n        var idForm = form.properties.id || \"\";\r\n\r\n        args = args || {};\r\n\r\n        // Start waiting\r\n        self.startLoading();\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh();\r\n\r\n        // Call the ajax service\r\n        return $.when(self.dataService.multiaction().refreshControl({\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: (properties.xpathContext || args.xpathContext),\r\n            idForm: idForm\r\n        })).pipe(function (data) {\r\n            // Clear variables\r\n            self.control = self.controlFiller = self.label = null;\r\n\r\n            // Update properties data\r\n            var currentElement = self.element;\r\n            self.initializeData(data.render);\r\n\r\n            // Render the control again\r\n            return $.when(self.render()).pipe(function (html) {\r\n                var result = $(html);\r\n                //Dont remove unused rendered var\r\n                var rendered = self.postRenderElement(result);\r\n                self.properties.originalValue = self.value;\r\n                return result;\r\n            }).pipe(function (result) {\r\n                // When the content has been post-renderized, replace it\r\n                currentElement.replaceWith(result);\r\n\r\n                // Prevent multiple refresh on grid\r\n                if (!self.grid) {\r\n                    self.triggerRenderChange({changed: false});\r\n                }\r\n\r\n                // Execute personalized stuff before to refresh it\r\n                self.afterToRefresh();\r\n            });\r\n\r\n        }).fail(function (message) {\r\n            var message = self.processFailMessage(message);\r\n\r\n        }).always(function () {\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Refresh the control with a new data\r\n     */\r\n    refreshDesignControl: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh();\r\n\r\n        // Clear variables\r\n        self.control = self.controlFiller = self.label = null;\r\n\r\n        $.extend(data.render.properties, {\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: (properties.xpathContext || \"form\"),\r\n            idPageCache: properties.idPageCache\r\n        });\r\n\r\n        // Update properties data\r\n        var currentElement = self.element;\r\n        self.initializeData(data.render);\r\n\r\n        // Render the control again\r\n        return $.when(self.render()).pipe(function (html) {\r\n            var result = $(html);\r\n            //Dont remove unused rendered var\r\n            var rendered = self.postRenderElement(result);\r\n            self.properties.originalValue = self.value;\r\n            return result;\r\n        }).pipe(function (result) {\r\n            // When the content has been post-renderized, replace it\r\n            currentElement.replaceWith(result);\r\n            self.triggerRenderChange();\r\n\r\n            // Execute personalized stuff before to refresh it\r\n            self.beforeToRefresh();\r\n        });\r\n    },\r\n\r\n    /*\r\n    * Cleans current value\r\n    */\r\n    cleanData: function () {\r\n        var self = this;\r\n\r\n        self.setValue(\"\");\r\n        self.clearDisplayValue();\r\n    },\r\n\r\n    /*\r\n     *   Sets the value in the rendered control\r\n     */\r\n    clearDisplayValue: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var input = control.find(\"input\");\r\n\r\n        if (input.length > 0) {\r\n            input.val(self.getValue());\r\n        } else if (self.properties.editable === false) {\r\n            $(control).html(\"<label class='readonly-control'></label>\");\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Updates original value for some comparisons\r\n    */\r\n    updateOriginalValue: function () {\r\n        var self = this;\r\n        self.properties.originalValue = self.value;\r\n    },\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            if (!bizagi.util.isEmpty(xpath)) {\r\n                if (!bizagi.util.isEmpty(value)) {\r\n                    renderValues[properties.xpath] = value;\r\n                } else if (value === \"\" || value === null) {\r\n                    renderValues[properties.xpath] = \"\";\r\n                }\r\n            }\r\n        }\r\n\r\n        //Validate if the input has a retype configured and check that both values matches, otherwise delete the original value\r\n        if (!self.validateInputRetype()) {\r\n            renderValues[properties.xpath] = \"\";\r\n        }\r\n    },\r\n\r\n    hasChanged: function (result) {\r\n        var self = this;\r\n        if (self.controlValueIsChanged()) {\r\n            result.push(true);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *  Configure aditional Handlers for queryForm type\r\n    */\r\n    configureHandlersQueryForm: function () {\r\n        var self = this;\r\n        var checkIncluded = self.element.find(\".ui-bizagi-render-control-included\");\r\n        checkIncluded.change(function () {\r\n            self.properties.included = $(this).is(\":checked\");\r\n        });\r\n    },\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectDataQueryForm: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n        var queryValue = null;\r\n        if (!bizagi.util.isEmpty(xpath)) {\r\n            if (value !== null && typeof (value) !== \"undefined\") {\r\n                var isObject = typeof (value.id) !== \"undefined\";\r\n                if (isObject) {\r\n                    queryValue = (!bizagi.util.isEmpty(value.id)) ? [value] : null;\r\n                } else {\r\n                    queryValue = (value !== \"\") ? value : null;\r\n                }\r\n            }\r\n            if (queryValue !== null || properties.included) {\r\n\r\n                if (!(properties.display == \"check\" && properties.value == false)) {\r\n\r\n                    var searchType = self.properties.typeSearch || self.properties.rangeQuery || \"NONE\";\r\n                    searchType = searchType.toUpperCase();\r\n                    var newParameter = {\r\n                        \"value\": queryValue,\r\n                        \"included\": self.properties.included,\r\n                        \"xpath\": properties.xpath,\r\n                        \"searchType\": searchType,\r\n                        \"orderType\": \"NONE\"\r\n                    };\r\n                    if (typeof properties.displayXpath !== \"undefined\" && properties.displayXpath !== \"\") {\r\n                        //newParameter.displayXpath= properties.xpath+\".\"+properties.displayXpath;\r\n                        newParameter.displayXpath = properties.displayXpath;\r\n                    }\r\n                    renderValues.push(newParameter);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *  Method to determine if the render value can be sent to the server or not\r\n    */\r\n    canBeSent: function () {\r\n        var self = this, force;\r\n        var properties = self.properties;\r\n        var displayOnly = bizagi.util.parseBoolean(properties.displayOnly) || false;\r\n        var editable = properties.editable;\r\n\r\n        // The render can be sent if it is editable and is not \"display only\"\r\n        if (!displayOnly && editable) {\r\n            return true;\r\n        }\r\n\r\n        // Don't send the clones\r\n        if (properties.isClone) {\r\n            return false;\r\n        }\r\n\r\n        if (properties.xpath) {\r\n            var form = self.getFormContainer();\r\n            if (form.getRenders(properties.xpath).length == 1) {\r\n                force = $.forceCollectData ? $.forceCollectData.toString() : false;\r\n                $.forceCollectData = force ? undefined : $.forceCollectData;\r\n                if (self.controlValueIsChanged()) {\r\n                    $.forceCollectData = force ? bizagi.util.parseBoolean(force) : $.forceCollectData;\r\n                    return true;\r\n                }\r\n                $.forceCollectData = force ? bizagi.util.parseBoolean(force) : $.forceCollectData;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n    /*\r\n    *  Method to determine if the render value can be sent to search\r\n    */\r\n    canBeSentQueryForm: function () {\r\n        var self = this, force;\r\n        var properties = self.properties;\r\n        // Don't send the clones\r\n        if (properties.isClone) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    /*\r\n    *   Focus on the current element\r\n    */\r\n    focus: function (time) {\r\n        var self = this;\r\n\r\n        // Focus is only allowed when the render is visible\r\n        if (!self.properties.visible) return;\r\n\r\n        // Call base\r\n        this._super();\r\n        var layout = $(\"#ui-bizagi-wp-app-render-form-content\");\r\n\r\n        // Configures effect\r\n        var effect = function () {\r\n            var control = self.getControl();\r\n            var defaultControl = (self.properties.type != \"grid\") ? $(\"input, select, option, textarea\", control) : $(\"input, select, option, textarea\", control).first();\r\n            if (defaultControl.length > 0) {\r\n\r\n                // Focus control\r\n                $.each(defaultControl, function (i) {\r\n                    var innerControl = defaultControl[i];\r\n                    if ($(innerControl).attr(\"type\") != \"hidden\" && $(innerControl).css(\"display\") != \"none\" && $(innerControl).css(\"visibility\") != \"hidden\") {\r\n\r\n                        try {\r\n                            if (!bizagi.util.isIE()) {\r\n                                bizagi.util.autoScrollBottom(layout);\r\n                            }\r\n                            innerControl.focus();\r\n                        } catch (e) {\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        // Wait until the render is ready to apply the focus effect\r\n        $.when(self.ready())\r\n            .done(function () {\r\n                // Run effect\r\n                if (time > 0) {\r\n                    setTimeout(effect, time);\r\n                } else {\r\n                    effect();\r\n                }\r\n            });\r\n    },\r\n\r\n    /*\r\n    *   Resolves default align for each display type\r\n    */\r\n    getDefaultLabelAlign: function (displayType) {\r\n        return \"default\";\r\n    },\r\n\r\n    /*\r\n    *   Resolves default value align for each display type\r\n    */\r\n    getDefaultValueAlign: function (displayType) {\r\n        return \"default\";\r\n    },\r\n    /*\r\n    *   Transform the align type when using RTL orientation\r\n    */\r\n    getRTLAlign: function (align) {\r\n        /* if (align === \"default\"){ \r\n            return \"right\";\r\n        } */\r\n        return align;\r\n    },\r\n\r\n    /*\r\n    *   Enables submit on change feature for the current render\r\n    */\r\n    configureSubmitOnChange: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = \"\";\r\n\r\n        if (!properties.editable) return;\r\n\r\n        // Build action\r\n        properties.dependencies = properties.dependencies || 'all';\r\n\r\n        if (properties.xpath) {\r\n            if (properties.submitOnChangexpathContext) {\r\n                xpath = properties.submitOnChangexpathContext + \".\" + properties.xpath;\r\n            } else {\r\n                xpath = properties.xpath;\r\n            }\r\n        } else {\r\n            if (properties.submitOnChangexpathContext) {\r\n                xpath = properties.submitOnChangexpathContext + \".\" + properties.id;\r\n            } else {\r\n                xpath = properties.id;\r\n            }\r\n        }\r\n\r\n        var action = {\r\n            \"conditions\": {\r\n                \"expressions\": [\r\n                    {\r\n                        \"simple\": {\r\n                            \"xpath\": xpath,\r\n                            \"operator\": \"changes\",\r\n                            \"argumentType\": \"const\"\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            \"commands\": [\r\n                {\r\n                    \"xpath\": xpath,\r\n                    \"command\": 'submit-value',\r\n                    \"argument\": properties.dependencies\r\n                }\r\n            ],\r\n            \"dependencies\": [xpath],\r\n            \"elseCommands\": []\r\n        };\r\n\r\n        // Add action when form ends its rendering\r\n        $.when(self.ready()).done(function () {\r\n            var form = self.getFormContainer();\r\n            form.addSubmitAction(xpath, action);\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Sends all the info to the server then refreshes the form\r\n    *   Returns a deferred\r\n    */\r\n    submitOnChange: function (data, bRefreshForm, notCollect) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n\r\n        // Add context parameter\r\n        if (self.properties.contexttype != \"\" && data) {\r\n            data[self.dataService.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = self.properties.contexttype;\r\n        }\r\n\r\n        $.when(self.isReadyToSave()).done(function () {\r\n            self.internalSubmitOnChange(data, bRefreshForm, notCollect).done(function () {\r\n                defer.resolve();\r\n            }).fail(function () {\r\n                defer.reject();\r\n            });\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    getCacheIdCase: function () {\r\n        var self = this;\r\n        var idCase = self.getParams().idCase;\r\n\r\n        if (bizagi.cache === undefined) {\r\n            bizagi.cache = {};\r\n            bizagi.cache.idCaseObject = {\r\n                idCase: idCase !== undefined ? idCase : (bizagi.cache.idCase !== undefined ? bizagi.cache.idCase : undefined)\r\n            };\r\n        } else {\r\n            if (idCase !== undefined && bizagi.cache.idCaseObject !== undefined) {\r\n                bizagi.cache.idCaseObject.idCase = idCase;\r\n            } else {\r\n                if (idCase !== undefined && bizagi.cache.idCaseObject === undefined) {\r\n                    bizagi.cache.idCaseObject = {};\r\n                    bizagi.cache.idCaseObject.idCase = idCase;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (idCase === undefined) {\r\n            if (bizagi.cache.idCaseObject === undefined) {\r\n                idCase = undefined;\r\n            } else {\r\n                idCase = bizagi.cache.idCaseObject.idCase;\r\n            }\r\n        } else {\r\n            idCase = idCase;\r\n        }\r\n\r\n        return idCase;\r\n    },\r\n    /*\r\n    *   Internal method\r\n    *   Sends all the info to the server then refreshes the form\r\n    *   Returns a deferred\r\n    */\r\n    internalSubmitOnChange: function (data, bRefreshForm, notCollect) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n        var parameters = {\r\n            data: data,\r\n            bRefreshForm: bRefreshForm,\r\n            notCollect: notCollect,\r\n            properties: {\r\n                idCase: self.getCacheIdCase(),\r\n                id: properties.id,\r\n                xpath: properties.xpath,\r\n                idPageCache: properties.idPageCache,\r\n                contexttype: properties.contexttype\r\n            }\r\n        }\r\n\r\n        return form.internalSubmitOnChange(parameters);\r\n    },\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n        return $.when(self.parent.ready(), self.isRendered());\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n\r\n        if (form) {\r\n            return form.getCustomHandlers();\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandler: function (key) {\r\n        var self = this;\r\n        var customHandlers = self.getCustomHandlers();\r\n\r\n        if (customHandlers) {\r\n            return customHandlers[key];\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n    *   Calculates render label and value width\r\n    */\r\n    calculateRenderWidth: function (labelWidth, valueWidth, displayType) {\r\n        var self = this;\r\n        // Read values\r\n        // If the label width or the value width are 0, the BAS means that no value is used, so we need to adjust them to 50%\r\n        if (valueWidth == \"100\" && typeof labelWidth === \"undefined\") {\r\n            labelWidth = \"0\";\r\n        } else {\r\n            labelWidth = labelWidth ? (labelWidth != \"0\" ? labelWidth : \"50\") : \"50%\";\r\n        }\r\n        valueWidth = valueWidth ? (valueWidth != \"0\" ? valueWidth : \"50\") : \"50%\";\r\n\r\n        if (displayType == \"normal\" || displayType == \"both\" || displayType == \"reversed\") {\r\n\r\n            // Special case with lower values, so they want both fields in \"auto\" width\r\n            if (labelWidth && bizagi.util.percent2Number(labelWidth) < 5 &&\r\n                valueWidth && bizagi.util.percent2Number(valueWidth) < 5) {\r\n                return {label: 0, control: 100};\r\n            }\r\n            // Normalize percentages\r\n            if (labelWidth && !valueWidth) {\r\n                labelWidth = bizagi.util.percent2Number(labelWidth);\r\n                valueWidth = 100 - labelWidth;\r\n\r\n            } else if (!labelWidth && valueWidth) {\r\n                valueWidth = bizagi.util.percent2Number(valueWidth);\r\n                labelWidth = 100 - valueWidth;\r\n            } else {\r\n                labelWidth = bizagi.util.percent2Number(labelWidth);\r\n                valueWidth = bizagi.util.percent2Number(valueWidth);\r\n\r\n                // Check 100% percentage\r\n                if ((labelWidth + valueWidth) != 100 && typeof (self.properties) != \"undefined\" && self.properties.layoutType != \"pixels\") {\r\n                    valueWidth = 100 - labelWidth;\r\n                }\r\n            }\r\n        } else {\r\n            labelWidth = 100;\r\n            valueWidth = 100;\r\n        }\r\n\r\n        return {label: labelWidth, control: valueWidth};\r\n    },\r\n    /*\r\n    *   Get param value idCase\r\n    */\r\n    getIdCase: function () {\r\n        var self = this;\r\n        return self.getFormContainer().params.idCase || bizagi.context.idCase;\r\n    },\r\n    /*\r\n    *   Get param value idWorkitem\r\n    */\r\n    getIdWorkitem: function () {\r\n        var self = this;\r\n        return self.getFormContainer().params.idWorkitem || bizagi.context.idWorkitem;\r\n    },\r\n    /*\r\n    *   Get param value idTask\r\n    */\r\n    getidTask: function () {\r\n        var self = this;\r\n        return self.getFormContainer().params.idTask || bizagi.context.idTask;\r\n    },\r\n    /*\r\n    *   Get param value sessionId\r\n    */\r\n    getSessionId: function () {\r\n        var self = this;\r\n        return self.getFormContainer().properties.sessionId;\r\n    },\r\n\r\n    /*\r\n    *   CELL STUFF\r\n    *   TODO: Move to other place\r\n    */\r\n\r\n    /* Customizes cell color*/\r\n    changeCellColor: function (color) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        if (control) {\r\n            if (color != 'none') {\r\n                control.css(\"color\", color);\r\n                control.find(\"input, textarea, label\").each(function (i, element) {\r\n                    $(element).css(\"color\", color);\r\n                });\r\n            } else {\r\n                control.css(\"color\", \"\");\r\n                control.find(\"input, textarea, label\").each(function (i, element) {\r\n                    $(element).css(\"color\", \"\");\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Customizes cell background color\r\n     * @param color\r\n     */\r\n    changeCellBackgroundColor: function (color) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var backgroundColor = \"\";\r\n        var backgroundImage = \"\";\r\n\r\n        if (control) {\r\n            if (color != 'none') {\r\n                backgroundColor = color;\r\n                backgroundImage = \"none\";\r\n            }\r\n\r\n            if (self.properties.editable) {\r\n                var needBGPaint = false;\r\n\r\n                control.find(\"input, textarea, .ui-selectmenu\").each(function (i, element) {\r\n\r\n                    if (((element.type == \"text\") || (element.type == \"textarea\")) && !($(element).hasClass('ui-select-data')))\r\n                        needBGPaint = true;\r\n\r\n                    $(element).css({\r\n                        \"background-color\": backgroundColor,\r\n                        \"background-image\": backgroundImage\r\n                    });\r\n                });\r\n\r\n                if (!needBGPaint) {\r\n                    control.closest(\"td\").each(function (i, element) {\r\n                        $(element).css({\r\n                            \"background-color\": backgroundColor,\r\n                            \"background-image\": backgroundImage\r\n                        });\r\n                    });\r\n                }\r\n\r\n            } else {\r\n                control.each(function (i, element) {\r\n                    //TODO: Validar si se aplican los estilos en tablet aun sin esta linea, cuidado con desktop\r\n                    var item = ($(element).hasClass(\"ui-bizagi-cell-readonly\")) ? control.closest(\"td\") : $(element);\r\n                    item.css({\r\n                        \"background-color\": backgroundColor,\r\n                        \"background-image\": backgroundImage\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n    },\r\n\r\n    /**\r\n     * Changes the cell visibility\r\n     * @param argument\r\n     */\r\n    changeCellVisibility: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        if (control) {\r\n            // Hide - show the render\r\n            if (bizagi.util.parseBoolean(argument) == true) {\r\n                //control.show();\r\n                control.css(\"visibility\", \"visible\");\r\n                control.css(\"display\", \"\");\r\n\r\n                self.element && self.element.show();\r\n            } else {\r\n                //control.hide();\r\n                control.css(\"visibility\", \"hidden\");\r\n            }\r\n        }\r\n\r\n        // Update properties\r\n        properties.visible = argument;\r\n    },\r\n\r\n    /**\r\n     * Changes the cell required\r\n     * @param argument\r\n     */\r\n    changeCellRequired: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        if (control) {\r\n            // Check if argument is true and control donot have any value\r\n            if (bizagi.util.parseBoolean(argument) == true && bizagi.util.isEmpty(self.value)) {\r\n                control.addClass('control-required');\r\n                control.append('<div class=\"ui-bizagi-render-control-required\"></div>');\r\n            } else {\r\n                control.removeClass('control-required');\r\n                $(\".ui-bizagi-render-control-required\", control).remove();\r\n            }\r\n            // Update properties\r\n            properties.required = argument;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to create deferred at the moment to start multiaction\r\n     */\r\n    startActionExecution: function () {\r\n        var self = this;\r\n        self.startLoading();\r\n        self.actionExecutionDeferred = new $.Deferred();\r\n    },\r\n\r\n    /**\r\n     * method to resolve the deferred when multiaction finish\r\n     */\r\n    endActionExecution: function () {\r\n        var self = this;\r\n        self.endLoading();\r\n        if (self.actionExecutionDeferred) self.actionExecutionDeferred.resolve();\r\n        delete self.actionExecutionDeferred;\r\n    },\r\n\r\n    /**\r\n     * Method to return the promise to anyone that needs to know if multiaction ended\r\n     * @returns {*}\r\n     */\r\n    readyActionExecution: function () {\r\n        var self = this;\r\n        if (!self.actionExecutionDeferred) return $.when(true);\r\n        return self.actionExecutionDeferred.promise();\r\n    },\r\n\r\n    /**\r\n     * Verifies is the elements was inside a new row in a grid\r\n     * @returns {boolean}\r\n     */\r\n    isFromCreatedRow: function () {\r\n        var self = this;\r\n\r\n        if (self.grid) {\r\n            var i = self.grid.columns.length;\r\n\r\n            while (i-- > 0) {\r\n                if (self.grid.columns[i].properties.xpath == self.properties.xpath) {\r\n                    if (self.grid.columns[i].isNewRow == true) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    /**\r\n     * Submits a invalidate page cache request\r\n     * @param params\r\n     */\r\n    submitInvalidatePageCacheRequest: function (params) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var pageCacheToInvalidate = params ? params.idPageCache : properties.idPageCache;\r\n\r\n\r\n        self.dataService.invalidatePageCache({idPageCache: pageCacheToInvalidate});\r\n    },\r\n\r\n    /**\r\n     * Check is design mode\r\n     */\r\n    isDesignMode: function () {\r\n        return this.getMode() === \"design\";\r\n    },\r\n\r\n    /**\r\n     * Check is design mode\r\n     */\r\n    isExecutionMode: function () {\r\n        return this.getMode() === \"execution\";\r\n    },\r\n\r\n    /***/\r\n    preventDefaultForAnchorTag: function(){        \r\n        if (bizagi.util.isSharepointContext()){\r\n            $(\"a[href='#']\", this.getControl()).click(function(ev){\r\n                ev.preventDefault();          \r\n            });\r\n        }    \r\n    }\r\n});\r\n","/*\r\n *   Name: Bizagi Render Base Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a base render class with common stuff related to all renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.render.base\", {}, {\r\n\r\n    /**\r\n     * Method to process the render the layout\r\n     * @param {boolean} isLabelFormat\r\n     * @param {string} format\r\n     */\r\n    processLayout: function (isLabelFormat, format) {\r\n        var properties = this.properties;\r\n\r\n        if (typeof isLabelFormat !== \"boolean\") {\r\n            console.warm(\"error calling processLayout, 'isLabelFormat' is not boolean\");\r\n            return;\r\n        }\r\n\r\n        if (isLabelFormat) {\r\n            this.processLabelLayout(format);\r\n        } else {\r\n            this.processControlLayout(format);\r\n\r\n            // Set required and visiblity\r\n            properties.required = typeof (properties.required) !== \"undefined\" ? bizagi.util.parseBoolean(properties.required) : false;\r\n            var visible = typeof (properties.visible) !== \"undefined\" ? bizagi.util.parseBoolean(properties.visible) : true;\r\n\r\n            if (properties.required) {\r\n                this.changeRequired(properties.required);\r\n            }\r\n\r\n            if (!visible) {\r\n                this.changeVisibility(visible);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to process the label in the layout\r\n     * @param {} format\r\n     * @returns {}\r\n     */\r\n    processLabelLayout: function (format) {\r\n        var $label = this.getLabel();\r\n        if ($label == null) return;\r\n\r\n        // Set customizations\r\n        format = format || {};\r\n        if (typeof format.bold === \"undefined\") {\r\n            format.bold = true; // Default value\r\n        }\r\n\r\n        this.changeBackgroundColor(format.background)\r\n            .changeFontColor($label, format.color)\r\n            .changeFontBold($label, format.bold)\r\n            .changeFontSize($label, format.size)\r\n            .changeFontItalic($label, format.italic)\r\n            .changeTextDecoration($label, (format.underline ? \"underline\" : \"\") + (format.strikethru ? \" line-through\" : \"\"));\r\n    },\r\n\r\n    /**\r\n     * Method to process the control in the layout\r\n     * @param {} format\r\n     * @returns {}\r\n     */\r\n    processControlLayout: function (format) {\r\n        var $control = this.getControl();\r\n        var $elements = this.getElementsToStylize($control);\r\n\r\n        // Set customizations\r\n        format = format || {};\r\n\r\n        this.changeFontColor($elements, format.color)\r\n            .changeFontBold($elements, format.bold)\r\n            .changeFontItalic($elements, format.italic)\r\n            .changeFontSize($elements, format.size)\r\n            .changeTextDecoration($elements, (format.underline ? \"underline\" : \"\") + (format.strikethru ? \" line-through\" : \"\"));\r\n    },\r\n\r\n    /**\r\n     * Customizes render color\r\n     * @param {} color\r\n     * @returns {}\r\n     */\r\n    changeColor: function (color) {\r\n        var $label = this.getLabel();\r\n        var $control = this.getControl();\r\n        var $elements = this.getElementsToStylize($control);\r\n\r\n        return this\r\n            .changeFontColor($label, color)\r\n            .changeFontColor($elements, color);\r\n    },\r\n\r\n    /**\r\n     * Customizes render color\r\n     * @param {} $element\r\n     * @param {} color\r\n     * @returns {}\r\n     */\r\n    changeFontColor: function ($element, color) {\r\n        if ($element === undefined) return this;\r\n        if (color === undefined) return this;\r\n\r\n        var style = color !== \"none\" ? color : \"\";\r\n        $element.css(\"color\", style);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font size property\r\n     * @param {} $element\r\n     * @param {} size\r\n     * @returns {}\r\n     */\r\n    changeFontSize: function ($element, size) {\r\n        if (size === undefined) return this;\r\n        if ($element === undefined) return this;\r\n\r\n        if (size !== \"0\") {\r\n            var newFontSize = 100 + Number(size) * 10 + \"%\";\r\n            $element.css(\"font-size\", newFontSize);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font Strikethrough or underline property\r\n     * @param {} $element\r\n     * @param {} textDecoration\r\n     * @returns {}\r\n     */\r\n    changeTextDecoration: function ($element, textDecoration) {\r\n        if (textDecoration === undefined) return this;\r\n        if ($element === undefined) return this;\r\n\r\n        textDecoration && $element.css(\"text-decoration\", textDecoration);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font italic style\r\n     * @param {} $element\r\n     * @param {} italic\r\n     * @returns {}\r\n     */\r\n    changeFontItalic: function ($element, italic) {\r\n        var style = bizagi.util.parseBoolean(italic) ? \"italic\" : \"normal\";\r\n\r\n        $element.css(\"font-style\", style);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font weight\r\n     * @param {} $label\r\n     * @param {} bold\r\n     * @returns {}\r\n     */\r\n    changeFontBold: function ($label, bold) {\r\n        var style = bizagi.util.parseBoolean(bold) ? \"bold\" : \"normal\";\r\n\r\n        $label.css(\"font-weight\", style);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes render background color\r\n     * @param {} color\r\n     * @returns {}\r\n     */\r\n    changeBackgroundColor: function (color) {\r\n        if (typeof color === \"undefined\") return this;\r\n\r\n        if (color !== \"none\") {\r\n            this.element.css(\"background-color\", color);\r\n        } else {\r\n            this.element.css(\"background-color\", \"\");\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * This method just make a toggle of red label indicator\r\n     * @argument {boolean} argument\r\n     */\r\n    changeRequiredLabel: function () {\r\n    },\r\n\r\n    /**\r\n     * Change cell required and attach bindings\r\n     * @param argument\r\n     */\r\n    changeCellRequired: function (argument) {\r\n        this.changeRequired(argument);\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    getRTLAlign: function (align) {\r\n        if (typeof align == \"undefined\" || align == \"\") {\r\n            return \"default\";\r\n        }\r\n        return align;\r\n    },\r\n\r\n    /**\r\n     * TODO: This override should be removed after genome, just because the align shoudnt be depend of the display type\r\n     */\r\n    getDefaultLabelAlign: function(){\r\n        return \"default\";\r\n    },\r\n\r\n    /**\r\n     * TODO: This override should be removed after genome, just because the align shoudnt be depend of the display type\r\n     */\r\n    getDefaultValueAlign: function(){\r\n        return \"default\";\r\n    }\r\n});","/**\r\n *   Name: Bizagi Render Combo Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for combo renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.combo\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        properties.hasLocalData = properties.data || false;\r\n        // TODO: Review additional value in radio control\r\n        properties.value = properties.value && properties.value.length > 0 ? properties.value[0] : (properties.defaultValue && properties.defaultValue.length > 0 ? properties.defaultValue[0] : null);\r\n\r\n        if (typeof (properties.enableTyping) === \"undefined\") properties.enableTyping = true;\r\n        if (properties.value && properties.value.id === undefined) properties.value = null;\r\n        this.value = properties.value;\r\n\r\n        // Add empty node if configured\r\n        if (properties.hasLocalData) {\r\n            properties.data = this.complementData(properties.data);\r\n        }\r\n\r\n        // This line is to set a flag to fetch the data when rendering, or on demand, by default is false, overriding it on desktop implementation\r\n        properties.loadOnDemand = false;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var params = {};\r\n        var renderType = bizagi.util.normalizeType(self.properties.type);\r\n\r\n        if (self.isDependant && self.properties && /^cascadingcombo$/i.test(renderType) && self.getParentCombo) {\r\n            var valueControl = self.getParentCombo().getValue();\r\n            if (valueControl && valueControl.id) {\r\n                params[self.Class.BA_ACTION_PARAMETER_PREFIX + \"parent\"] = valueControl.id;\r\n            }\r\n        }\r\n\r\n        return self.renderCombo(params);\r\n    },\r\n\r\n    /*\r\n    *   Renders the combo\r\n    */\r\n    renderCombo: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (properties.loadOnDemand) {\r\n            // Render the combo without data\r\n            var html = self.renderComboTemplate();\r\n            return html;\r\n        } else {\r\n\r\n            // Set data promise \r\n            var defer = new $.Deferred();\r\n            var dataPromise = self.getData(params);\r\n\r\n            // Attach callback \r\n            $.when(dataPromise).done(function (data) {\r\n                // Render combo\r\n                var html = self.renderComboTemplate(data);\r\n                self.properties.data = data;\r\n                defer.resolve(html);\r\n\r\n            }).fail(function (data) {\r\n                var html = self.renderComboTemplate({});\r\n                defer.resolve(html);\r\n            });\r\n\r\n            // Returns a promise so we can hold post-render method until this is done\r\n            return defer.promise();\r\n        }\r\n    },\r\n\r\n    renderComboTemplate: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(self.getTemplateName());\r\n        var emptyValue = bizagi.override.emptyLabelForCombo || self.getResource(\"render-combo-empty-selection\");\r\n        var value = properties.value ? \"\" : emptyValue;\r\n        data = data || self.properties.data || {};\r\n\r\n        if (self.properties.type === \"columnCombo\" && value === \"\" && typeof properties.value === \"object\" && properties.value.id === \"\" && (properties.value.value === \"\" || properties.value.value === self.getResource(\"render-combo-empty-value\"))) {\r\n            value = self.getResource(\"render-combo-empty-selection\");\r\n        }\r\n\r\n        var html = $.fasttmpl(template, $.extend(self.getTemplateParams(), {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            unique: bizagi.util.randomNumber(10000, 1000000),\r\n            idPageCache: properties.idPageCache,\r\n            items: data,\r\n            align: properties.valueAlign,\r\n            value: value,\r\n            editable: properties.editable\r\n        }));\r\n\r\n\r\n        return html;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed in read-only mode\r\n    */\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n        self._super();\r\n        var item = self.getValue();\r\n        var control = self.getControl();\r\n\r\n        if (self.control && self.control.parent()) {\r\n            self.control.parent().addClass(\"ui-bizagi-noneditable-\" + self.properties.displayType);\r\n        }\r\n        if (item) {\r\n\r\n            if (item.value != null && typeof (item.value) === \"boolean\") {\r\n                if (bizagi.util.parseBoolean(item.value) === true) {\r\n                    item.value = this.getResource(\"render-boolean-yes\");\r\n\r\n                } else if (bizagi.util.parseBoolean(item.value) == false) {\r\n                    item.value = this.getResource(\"render-boolean-no\");\r\n                }\r\n            }\r\n\r\n            // Returns the cached value from the properties to avoid server side fetching\r\n            if (self.getResource(\"render-combo-empty-value\") === item.value || self.getResource(\"render-combo-empty-selection\") === item.value) {\r\n                control.text(\"\");\r\n            } else {\r\n                control.html(\"<label class='readonly-control'>\" + self.formatItem(item.value) + \"</label>\");\r\n            }\r\n        } else {\r\n            // Render empty \r\n            control.text(\"\");\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Gets the template used by the combo render\r\n    *   can be overriden in subclasses to reuse logic and just change the template\r\n    */\r\n    getTemplateName: function () {\r\n        return \"combo\";\r\n    },\r\n\r\n    /*\r\n    *   Determines if we need to show the empty node or not\r\n    *   Can be overriden to change behaviour\r\n    */\r\n    showEmpty: function () {\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Determines if we need to show the current data regardless if it belongs to data or not\r\n    *   Can be overriden to change behaviour\r\n    */\r\n    showCurrentData: function () {\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        var mode = self.getMode();\r\n        var isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n\r\n        // Just execute ajax calls when rendering in execution mode\r\n        if (mode !== \"execution\") return self.getDummyData();\r\n\r\n        if (properties.hasLocalData || isOfflineForm) {\r\n\r\n            // Resolve with local data    \r\n            defer.resolve(properties.data);\r\n\r\n        } else {\r\n            var renderType = bizagi.util.normalizeType(properties.type);\r\n\r\n            // Check if the data has been cached\r\n            if (properties.remoteDataLoaded && !(/^cascadingcombo$/i.test(renderType))) {\r\n                defer.resolve(properties.data);\r\n            } else {\r\n                // Go to server\r\n                self.dataService.multiaction().getData({\r\n                    url: properties.dataUrl,\r\n                    xpath: properties.xpath,\r\n                    idRender: properties.id,\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache,\r\n                    extra: params,\r\n                    contexttype: self.properties.contexttype || null\r\n                }).done(function (data) {\r\n\r\n                    // Resolve the data\r\n                    if (!properties.recalculate) {\r\n                        properties.remoteDataLoaded = true;\r\n                    }\r\n                    properties.data = self.complementData(data);\r\n                    defer.resolve(properties.data);\r\n\r\n                }).fail(function (data) {\r\n\r\n                    var allowActions = true;\r\n                    var form = self.getFormContainer();\r\n\r\n                    if (bizagi.util.isNativeMobileDevice() && typeof (form) !== \"undefined\")\r\n                        allowActions = form.allowOnlineActions();\r\n\r\n                    if (data.type === \"not-processed\" && allowActions)\r\n                        return;\r\n\r\n                    // Show error from server\r\n                    var msgObj = self.properties.displayName + \": \";\r\n\r\n                    if (typeof data === \"string\") {\r\n                        var auxMsg = JSON && JSON.parse(data) || $.parseJSON(data);\r\n                    } else {\r\n                        var auxMsg = data;\r\n                    }\r\n\r\n                    msgObj += auxMsg.message;\r\n\r\n                    form.addValidationMessage(msgObj);\r\n\r\n                    defer.reject(data);\r\n                });\r\n            }\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Creates a set of dummy data in order to display it when rendering in design or layout mode\r\n    */\r\n    getDummyData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (properties.data) {\r\n            return properties.data;\r\n\r\n        } else {\r\n            properties.data = [];\r\n            properties.data = self.complementData(properties.data);\r\n\r\n            // Add another data\r\n            properties.data.push({id: \"\", value: \"Item 1\"});\r\n            properties.data.push({id: \"\", value: \"Item 2\"});\r\n\r\n            return properties.data;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Resets the data in order to fetch it again when needed\r\n    */\r\n    resetData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        properties.hasLocalData = false;\r\n        properties.data = null;\r\n        properties.remoteDataLoaded = false;\r\n    },\r\n\r\n    /* \r\n    *   Gets the display value of the render\r\n    */\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n\r\n        if (self.combo && self.combo.length > 0) {\r\n            // When there is a combo painted, we fetch the selected value from it\r\n            return self.getSelectedValue();\r\n        } else {\r\n            var displayValue = \"\";\r\n            var item = self.getValue();\r\n\r\n            if (item) {\r\n                // Check on cached propert from server first if the key exists\r\n                displayValue = self.formatItem(item.value);\r\n            }\r\n\r\n            return displayValue;\r\n        }\r\n    },\r\n\r\n\r\n    /*\r\n    *   Returns the selected value in the template\r\n    */\r\n    getSelectedValue: function () {\r\n    },\r\n\r\n    /*\r\n    *   Adds custom parameters to process the template\r\n    */\r\n    getTemplateParams: function () {\r\n        return {};\r\n    },\r\n\r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n\r\n        if (value !== undefined && value !== null) {\r\n            if ($.isArray(value)) {\r\n\r\n                for (var i = 0, length = value.length; i < length; i++) {\r\n                    if (value[i] != null && typeof (value[i]) === \"boolean\") {\r\n                        if (bizagi.util.parseBoolean(value[i]) === true) {\r\n                            value[i] = this.getResource(\"render-boolean-yes\");\r\n                        } else if (bizagi.util.parseBoolean(value[i]) === false) {\r\n                            value[i] = this.getResource(\"render-boolean-no\");\r\n                        }\r\n                    }\r\n                }\r\n                return value.join(\" - \");\r\n            } else {\r\n                return value;\r\n            }\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            // Remove empty validation for value for combos        \r\n            if (!bizagi.util.isEmpty(xpath) && value !== null && typeof (value) !== \"undefined\") {\r\n                // Add a validation because sometimes value contains an empty not null object\r\n                if (typeof (value) === \"object\" && (value.id === undefined || value.id === \"\")) {\r\n                    renderValues[properties.xpath] = \"\";\r\n                } else {\r\n                    // Add the value to the server\r\n                    renderValues[properties.xpath] = typeof (value.id) !== \"undefined\" ? value.id : \"\";\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var currentValue = self.getValue();\r\n        var originalValue = properties.originalValue;\r\n        var defaultValue = properties.defaultValue;\r\n\r\n        var result = true;\r\n\r\n        if ($.forceCollectData) {\r\n            return result;\r\n        }\r\n\r\n        currentValue = currentValue && currentValue.length !== undefined ? currentValue[0] : currentValue;\r\n        originalValue = originalValue && originalValue.length !== undefined ? originalValue[0] : originalValue;\r\n        defaultValue = defaultValue && defaultValue.length !== undefined ? defaultValue[0] : defaultValue;\r\n\r\n        currentValue = currentValue && currentValue.id !== undefined ? currentValue.id : currentValue;\r\n        originalValue = originalValue && originalValue.id !== undefined ? originalValue.id : originalValue;\r\n        defaultValue = defaultValue && defaultValue.id !== undefined ? defaultValue.id : defaultValue;\r\n\r\n        if (defaultValue !== undefined) {\r\n            if (defaultValue != originalValue || defaultValue != currentValue) {\r\n                result = true;\r\n            } else {\r\n                result = false;\r\n            }\r\n        } else {\r\n            result = currentValue != originalValue ? true : false;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    * Parses additional values info in order to format them correctly\r\n    */\r\n    parseAdditionalValues: function (data) {\r\n        var self = this;\r\n\r\n        return $.map(data, function (item) {\r\n            var value = item.value ? self.formatItem(item.value) : item;\r\n            var newItem = {id: item.id, value: value};\r\n\r\n            if (item.hidden) newItem.hidden = true;\r\n            return item;\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Complement data from server before control implementation\r\n    */\r\n    complementData: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var bCurrentDataFound = false;\r\n        $.each(data, function (i, item) {\r\n\r\n            if (item.value !== undefined && item.value !== null) {\r\n                item.value = self.formatItem(item.value);\r\n                if (properties.value) {\r\n                    if (item.id == properties.value.id) {\r\n                        bCurrentDataFound = true;\r\n                    }\r\n                }\r\n            } else {\r\n                item.value = \"\";\r\n            }\r\n        });\r\n\r\n        // Add empty node if configured\r\n        if (self.showEmpty()) {\r\n            var emptyFound = false;\r\n            for (var i = 0, length = data.length; i < length; i++) {\r\n                if (data[i].id === \"\") {\r\n                    emptyFound = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!emptyFound) {\r\n                var dataValue = bizagi.override.emptyLabelForCombo || bizagi.localization.getResource(\"render-combo-empty-value\")\r\n                data.unshift({id: \"\", value: dataValue});\r\n            }\r\n        }\r\n\r\n        if (properties.value) {\r\n            if (!bCurrentDataFound && self.showCurrentData()) {\r\n                data.unshift({id: properties.value.id, value: properties.value.value, hidden: true});\r\n            }\r\n        }\r\n\r\n        // Add additional value\r\n        return self.parseAdditionalValues(data);\r\n    },\r\n\r\n    /*\r\n    *   Check if a render has no value for required validation\r\n    */\r\n    hasValue: function () {\r\n        var self = this;\r\n        var currentValue = self.getValue();\r\n\r\n        if (bizagi.util.isEmpty(currentValue)) return false;\r\n        if (Object.prototype.toString.apply(currentValue) === \"[object Object]\" && (bizagi.util.isEmpty(currentValue.id) || currentValue.id == 0)) return false;\r\n\r\n        // Else\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    * Cleans current data\r\n    */\r\n    cleanData: function () {\r\n        var self = this;\r\n        var value = {id: \"\", label: \"\"};\r\n\r\n        self.setDisplayValue(value);\r\n        self.setValue(value, false);\r\n    },\r\n\r\n    beforeToRefresh: function () {\r\n        this.column && !this.column.comboData && this.getData();\r\n    },\r\n\r\n    isExtraItem: function () {\r\n        var self = this;\r\n        var data = self.value || {};\r\n        var value = data.value || \"\";\r\n\r\n        return value === \"\" || value === self.getResource(\"render-combo-empty-selection\") || value === self.getResource(\"render-combo-empty-value\");\r\n    },\r\n\r\n    escapeValue: function (value) {\r\n        if (bizagi.util.isString(value)) {\r\n            var valueToReturn = value.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\r\n            return valueToReturn;\r\n        } else {\r\n            return value;\r\n        }\r\n    },\r\n\r\n    /**\r\n     *  Maps the value, when this one comes from actions\r\n     * @param value\r\n     * @returns {*}\r\n     */\r\n    mapValue: function (value) {\r\n        if (value && value.fromAction) {\r\n            return {\r\n                id: value.value,\r\n                value: value.label,\r\n                label: value.label\r\n            }\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    validateValue: function (value) {\r\n        if ((value.id != undefined) && ((typeof value.id === \"number\" && value.id !== null) || (typeof value.id === \"string\" && value.id.length > 0))) {\r\n            if (value.value !== null && typeof value.value === \"boolean\") {\r\n                translated = true;\r\n                if (bizagi.util.parseBoolean(value.value) === true) {\r\n                    value.value = bizagi.localization.getResource(\"render-boolean-yes\");\r\n                } else if (bizagi.util.parseBoolean(value.value) === false) {\r\n                    value.value = bizagi.localization.getResource(\"render-boolean-no\");\r\n                }\r\n            } else if (value.value != null && typeof value.value === \"object\") {\r\n                for (var i = 0, length = value.value.length; i < length; i++) {\r\n                    if (value.value[i] != null && typeof (value.value[i]) === \"boolean\") {\r\n                        if (bizagi.util.parseBoolean(value.value[i]) === true) {\r\n                            value.value[i] = bizagi.localization.getResource(\"render-boolean-yes\");\r\n                        } else if (bizagi.util.parseBoolean(value.value[i]) === false) {\r\n                            value.value[i] = bizagi.localization.getResource(\"render-boolean-no\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    /**\r\n     * Finds an element in the combo data values by id\r\n     * @param {int} id\r\n     * @returns {Object}\r\n     */\r\n    findDataValueById: function (id) {\r\n        return (this.properties.data || []).find(function (e) {\r\n            return e.id == id;\r\n        });\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Render CollectionNavigator\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define basic stuff for collection navigator renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.collectionnavigator\", {}, {\r\n\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        self._super(params);\r\n\r\n        var properties = self.properties;\r\n        properties.allowAdd = (typeof properties.allowAdd != \"undefined\") ? bizagi.util.parseBoolean(properties.allowAdd) : true;\r\n        properties.withAddForm = properties.withAddForm && properties.allowAdd;\r\n        properties.allowEdit = (typeof properties.allowEdit != \"undefined\") ? bizagi.util.parseBoolean(properties.allowEdit) : true;\r\n        properties.withEditForm = properties.withEditForm && properties.allowEdit;\r\n        properties.allowDetail = (typeof properties.allowDetail != \"undefined\") ? bizagi.util.parseBoolean(properties.allowDetail) : false;\r\n        properties.inlineAdd = (typeof properties.inlineAdd != \"undefined\") ? bizagi.util.parseBoolean(properties.inlineAdd) : true;\r\n        properties.inlineAdd = properties.inlineAdd && properties.allowAdd;\r\n        properties.inlineEdit = (typeof properties.inlineEdit != \"undefined\") ? bizagi.util.parseBoolean(properties.inlineEdit) : true;\r\n        properties.inlineEdit = properties.inlineEdit && properties.allowEdit;\r\n        properties.allowDelete = (typeof properties.allowDelete != \"undefined\") ? bizagi.util.parseBoolean(properties.allowDelete) : true;\r\n\r\n        self.orientation = self.properties.orientation || \"ltr\",\r\n        self.data = self.properties.data;\r\n        self.keys = self.data ? self.getKeys(self.data.rows) : [];\r\n        self.pointer = 0;\r\n        self.totalRows = 0;\r\n        self.inlineAddRecords = [];\r\n\r\n        if (self.data) {\r\n            self.totalRows = self.data.rows.length;\r\n        }\r\n    },\r\n    /*\r\n    * Normalize keys\r\n    */\r\n    getKeys: function (rows) {\r\n        rows = rows || [];\r\n        var keys = [];\r\n\r\n        for (var i = 0, l = rows.length; i < l; i++) {\r\n            var row = rows[i];\r\n            keys.push(row[0]);\r\n        }\r\n        return keys;\r\n    },\r\n\r\n    /*\r\n    *   Render the control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var templateItem = \"collectionnavigator\";\r\n        var template = self.renderFactory.getTemplate(templateItem);\r\n        var mode = self.getMode();\r\n\r\n        // Render the container\r\n        var html = $.fasttmpl(template, {\r\n            uniqueId: properties.uniqueId,\r\n            displayName: properties.displayName ? properties.displayName : \"\",\r\n            id: properties.id,\r\n            guid: properties.guid,\r\n            showPreview: self.showPreview(),\r\n            mode: mode,\r\n            orientation: self.getFormContainer().properties.orientation\r\n        });\r\n\r\n        html = self.drawControls(html);\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    * Render version readonly of control\r\n    */\r\n    renderReadOnly: function () {        \r\n        return this.renderControl();\r\n    },\r\n\r\n    /*\r\n    * Draw navigation controls\r\n    */\r\n    drawControls: function (html) {\r\n\r\n    },\r\n\r\n    /*\r\n    *  render several actions in the navigation palete\r\n    *  ex. save, cancel \r\n    */\r\n    drawActions: function (controls) {\r\n\r\n    },\r\n\r\n    /*\r\n    * Render navigation controls (next, previous, last, first. etc )\r\n    */\r\n    drawControl: function (controls) {\r\n\r\n    },\r\n\r\n    /*\r\n    * Draw forms options (add form, edit form, navigation form)\r\n    */\r\n    drawForms: function (controls) {\r\n\r\n    },\r\n\r\n    /*\r\n    * Draw a preview views, it will be show when the collection hasn't records\r\n    */\r\n    drawPreview: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var templateItem = (mode === \"execution\") ? \"collectionnavigator-execution\" : \"collectionnavigator-preview\";\r\n        var template = self.renderFactory.getTemplate(templateItem);\r\n        var html = $.tmpl(template);\r\n\r\n        self.canvas.append(html);\r\n\r\n    },\r\n\r\n    /*\r\n    * Returns true if the collection has data\r\n    */\r\n    hasData: function () {        \r\n        return this.getTotalRows() > 0;\r\n    },\r\n\r\n    /*\r\n    * Returns the key of current row\r\n    */\r\n    getRow: function () {        \r\n        return this.keys[this.pointer];\r\n    },\r\n\r\n    /*\r\n    * Returns the key of next row\r\n    */\r\n    getNextRow: function () {\r\n        var self = this;\r\n\r\n        if (self.getTotalRows() > (self.pointer + 1))\r\n            self.pointer += 1;\r\n\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the key of previous row\r\n    */\r\n    getPreviousRow: function() {\r\n        var self = this;\r\n\r\n        if (self.pointer > 0)\r\n            self.pointer -= 1;\r\n\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the key of first row\r\n    */\r\n    getFirstRow: function () {\r\n        var self = this;\r\n\r\n        self.pointer = 0;\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the key of last row\r\n    */\r\n    getLastRow: function () {\r\n        var self = this;\r\n\r\n        self.pointer = self.keys.length - 1;\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the total numbers of rows in collection\r\n    */\r\n    getTotalRows: function () {        \r\n        return this.keys.length;\r\n    },\r\n\r\n    getIndexes: function () {        \r\n        return this.properties.data.rows;\r\n    },\r\n\r\n    /*\r\n    * Sets the pointer to a specific position\r\n    */\r\n    setPointer: function (index) {        \r\n        this.pointer = index - 1;\r\n    },\r\n\r\n    /*\r\n    * Returns true is there is a inline row pending to save\r\n    */\r\n    isTherePendingInlineRow: function() {\r\n        return this.inlineAddRecords.length > 0;\r\n    },\r\n\r\n    /*\r\n    * Adds new row to collection\r\n    */\r\n    addKey: function (newId) {        \r\n        this.keys.push(newId);\r\n    },\r\n\r\n    /*\r\n    * Removes row in collection\r\n    */\r\n    removeKey: function () {\r\n        var self = this;\r\n        var index = self.pointer;\r\n\r\n        if (index >= 0) {\r\n            self.keys.splice(index, 1);\r\n\r\n            var totalRows = self.getTotalRows();\r\n            if (totalRows > 0 && index >= totalRows) {\r\n                self.setPointer(totalRows);\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Returns true if the control should show the preview view\r\n    * ex. if the collection is empty \r\n    */\r\n    showPreview: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var properties = self.properties;\r\n\r\n        if (mode == \"execution\") {\r\n            return !self.hasData();\r\n        } else {\r\n            return !bizagi.util.parseBoolean(properties.navigationform);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Returns the parameters needed for the request\r\n    */\r\n    getParameters: function (params) {\r\n        var self = this;\r\n\r\n        var parameters = {};\r\n        var properties = self.properties;\r\n        var recordXpath = properties.xpath + \"[id=\" + params.id + \"]\";\r\n\r\n        parameters.idRender = properties.id;\r\n        parameters.recordXPath = recordXpath;\r\n        parameters.xpathContext = properties.xpathContext;\r\n        parameters.idPageCache = properties.idPageCache;\r\n        parameters.requestedForm = params.requestedForm;\r\n        parameters.contextType = properties.contextType || properties.contexttype;\r\n        parameters.url = params.url;\r\n        parameters.editable = params.editable;\r\n        orientation: properties.orientation || \"ltr\";\r\n\r\n\r\n        return parameters;\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection navigator add record request\r\n    *   Returns a deferred when done, the server returns an id for the new record\r\n    */\r\n    submitAddRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var request = self.dataService.addGridRecord({\r\n            url: properties.addUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType || properties.contexttype,\r\n            idPageCache: properties.idPageCache,\r\n            orientation: properties.orientation || \"ltr\"\r\n        });\r\n\r\n        var filterResponse = request.pipe(function (data) {\r\n            // Parses response\r\n            return data.idEntity;\r\n        });\r\n\r\n        return filterResponse.promise();\r\n    },\r\n\r\n    /*\r\n    *   Submits a edit record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitEditRequest: function (id) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        return self.dataService.editGridRecord({\r\n            url: properties.editUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType || properties.contexttype || '',\r\n            orientation: properties.orientation || \"ltr\"\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection delete record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitDeleteRequest: function (id) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        return self.dataService.deleteGridRecord({\r\n            url: properties.deleteUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType || properties.contexttype\r\n        }).pipe(function (data) {\r\n            if (data.type == \"validationMessages\") {\r\n                var form = self.getFormContainer();\r\n                var message = data.messages.join(\" \");\r\n                form.failHandler({ message: message });\r\n            }\r\n\r\n            return data;\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection navigator edit record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitSaveRequest: function (id, data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = $.Deferred();\r\n\r\n        // Calculate xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + properties.xpath + \"[id=\" + id + \"]\" : properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        $.when(deferredsToWait).then(function() {\r\n\r\n            self.dataService.saveGridRecord({\r\n                url: properties.saveUrl,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: xpathContext,\r\n                contexttype: properties.contextType || properties.contexttype || \"\",\r\n                submitData: data\r\n            }).done(function(response) {\r\n                defer.resolve(response);\r\n            }).fail(function (dataFail) {\r\n                var form = self.getFormContainer();\r\n                var message = (dataFail.responseText) ? dataFail.responseText : ((typeof dataFail == \"string\") ? dataFail : dataFail.toString());\r\n                //Convert String to object\r\n                if (typeof message == \"string\") {\r\n                    try {\r\n                        message = JSON.parse(message).message;\r\n                    } catch (e) {\r\n                        message = message.match(/\"message\":(.*)\",/)[0];\r\n                        message = message.substr(11, message.length - 13);\r\n                    }\r\n    \r\n                } else if (!message.message) {\r\n                    message = dataFail;\r\n                }\r\n                form.validateForm();\r\n                form.clearValidationMessages();\r\n                form.addValidationMessage(message);\r\n            });\r\n\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection navigator rollback request\r\n    *   Returns a deferred when done\r\n    */\r\n    submitRollbackRequest: function (error) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.rollbackGridAction({\r\n            url: properties.rollbackUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: error.idPageCache,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        });\r\n    },\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set params\r\n        params = params || {};\r\n        $.extend(params, {\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType || properties.contexttype,\r\n            idPageCache: properties.idPageCache\r\n\r\n        });\r\n\r\n        return self.dataService.getData(params);\r\n    },\r\n\r\n    isValid: function (invalidElements) {\r\n        var form = this.form;\r\n\r\n        if (typeof (form) !== \"undefined\") {\r\n            (form.children || []).forEach(function (child) {\r\n                if (child.properties.visible) {\r\n                    if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                        // Go though container\r\n                        child.isValid(invalidElements);\r\n\r\n                    } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                        // Go to the render\r\n                        if (!child.isValid(invalidElements)) {\r\n                            var content = invalidElements[invalidElements.length - 1];\r\n                            invalidElements[invalidElements.length - 1] = $.extend(content, {\r\n                                id: child.properties.id\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        return invalidElements.length === 0;\r\n    },\r\n\r\n    validateControls: function(invalidElements) {\r\n        if (!this.form) return false;\r\n        return this.form.validationController.performValidations(invalidElements);\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render Check Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for check renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.check\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.value = typeof (properties.value) != \"undefined\" ? bizagi.util.parseBoolean(properties.value) : null;\r\n\r\n        properties.showLetters = (bizagi.override && bizagi.override.enableCheck === true) && !properties.editable;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"check\");\r\n        var randomId = bizagi.util.randomNumber(100, 10000000);\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            id: randomId,\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Gets the display value of the render\r\n     */\r\n    getDisplayValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.parseBoolean(value) === true) {\r\n            return this.getResource(\"render-boolean-yes\");\r\n        } else if (bizagi.util.parseBoolean(value) === false) {\r\n            return this.getResource(\"render-boolean-no\");\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if a render has no value for required validation\r\n     */\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.isEmpty(value)) return false;\r\n\r\n        var booleanValue = bizagi.util.parseBoolean(value);\r\n\r\n        return !(booleanValue === false && this.properties.required);\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Render Number Class\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define basic stuff for numbers\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.number\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        properties.allowDecimals = (typeof (properties.allowDecimals) !== \"undefined\") ? bizagi.util.parseBoolean(properties.allowDecimals) : this.getDefaultAllowDecimals(properties.dataType);\r\n        properties.numDecimals = properties.allowDecimals ? (properties.numDecimals ? properties.numDecimals : (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalDigits : 2)) : 0;\r\n        properties.symbol = '';\r\n        properties.positiveFormat = format.positiveFormat;\r\n        properties.negativeFormat = format.negativeFormat;\r\n        properties.decimalSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator : format.decimalSymbol;\r\n        properties.digitGroupSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.groupSeparator : format.digitGroupSymbol;\r\n        properties.groupDigits = this.setGroupDigits();\r\n        properties.colorize = properties.colorizeOnNegative || false;\r\n        properties.dataTypeMinValue = this.calculateMinValue(properties.dataType);\r\n        properties.dataTypeMaxValue = this.calculateMaxValue(properties.dataType);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"number\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            editable: self.properties.editable,\r\n            value: bizagi.isMobile() ? self.getDisplayValue() : \"\", // Only apply to mobile because in the template value is required (Bug: 11624)\r\n            type: bizagi.util.isAndroidDevice() ? \"tel\" : \"text\", // Change type control for android device\r\n            isDesign: self.getMode() !== \"execution\"\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n\r\n        self._super();\r\n\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n\r\n        self.numericInput = control.find(\"input\");\r\n\r\n        // Add numeric plugin to avoid invalid keystrokes\r\n        self.numericInput.numeric(self.properties.decimalSymbol);\r\n\r\n        // Attach event for retype double\r\n        if (properties.retype === \"double\") {\r\n            self.attachRetypeDouble();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        // Attach Format Currency Plugin to format the input\r\n        this.attachFormatCurrency();\r\n    },\r\n\r\n    /**\r\n     * Removes Validation Messages\r\n     */\r\n    removeValidations: function () {\r\n        var form = this.getFormContainer().parent || this.getFormContainer();\r\n\r\n        form.clearValidationMessages();\r\n    },\r\n\r\n    /**\r\n     * Function virtual implements on children (desktop,smartphone...).\r\n     * @returns {}\r\n     */\r\n    attachRetypeDouble: function () {\r\n    },\r\n\r\n    /**\r\n     * Adds the format currency plugin\r\n     * @returns {}\r\n     */\r\n    attachFormatCurrency: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message = bizagi.localization.getResource(\"render-number-retype-fail\");\r\n        self.isValidRender = self.isValidRender || true;\r\n\r\n        // Extend formatCurrency language\r\n        if ($.formatCurrency.regions[bizagi.language] == null)\r\n            $.formatCurrency.regions[bizagi.language] = this.getResource(\"numericFormat\");\r\n\r\n        // Attach events\r\n        self.numericInput.blur(function () {\r\n            if (typeof (self.getFormContainer().validationController) == \"undefined\") self.getFormContainer().validationController = new bizagi.command.controllers.validation(self.getFormContainer(), self.validations);\r\n            var validationController = self.getFormContainer().validationController || self.getFormContainer().parent.validationController;\r\n            var decimalSeparator = \".\";\r\n            var digitGroupSeparator = \",\";\r\n            if (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) == \"undefined\") {\r\n                decimalSeparator = self.getResource(\"numericFormat\").decimalSymbol || \".\";\r\n                digitGroupSeparator = self.getResource(\"numericFormat\").digitGroupSymbol || \",\";\r\n            }\r\n            else {\r\n                decimalSeparator = BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator;\r\n                digitGroupSeparator = BIZAGI_DEFAULT_CURRENCY_INFO.groupSeparator;\r\n            }\r\n\r\n            var minValue = self.getMinValue();\r\n            var maxValue = self.getMaxValue();\r\n\r\n            if(properties.percentage)self.numericInput.val(self.numericInput.val().replace(\"%\", \"\"));\r\n            var inputValue = self.numericInput.val();\r\n            inputValue = (decimalSeparator == \",\") ? inputValue.replace(/\\,0+$/, '') : inputValue.replace(/\\.0+$/, '');\r\n            inputValue = inputValue.replace(properties.symbol, \"\");\r\n            //Replace all the ocurrences of the digitGroupSeparator\r\n            inputValue = bizagi.util.replaceAll(inputValue, digitGroupSeparator, \"\");\r\n            if (inputValue.toString().indexOf(decimalSeparator) != -1) {\r\n                if (decimalSeparator == \",\") inputValue = inputValue.replace(/([0-9]+(\\,[0-9]+[1-9])?)(\\,?0+$)/, '$1');\r\n                if (decimalSeparator == \".\") inputValue = inputValue.replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/, '$1');\r\n            }\r\n\r\n            if (inputValue != undefined && inputValue.length > 0) self.numericInput.val(inputValue);\r\n\r\n            if (/(.+)-$/.test(inputValue)) {\r\n                inputValue = inputValue.replace(/(.+)-$/, '-$1');\r\n                self.numericInput.val(inputValue);\r\n            }\r\n\r\n            var inputLength = inputValue.replace(/[^0-9]+/g, \"\").length;\r\n            var xPath = self.properties.xpath;\r\n            var oldVal = self.numericInput.val();\r\n\r\n\r\n            if ((self.isInvalidFormat != null && self.isInvalidFormat == true)\r\n                || (inputValue != \"\" && [\"$\", \"£\", \"€\", \"¥\", properties.symbol].indexOf(inputValue) != -1)) {\r\n                self.setValue(\"\");\r\n                self.getControl().find(\"input\").val(\"\");\r\n                self.numericInput.val(\"\");\r\n                return;\r\n            }\r\n\r\n            if (bizagi.util.trim(inputValue) == \"\") {\r\n                self.setValue(\"\");\r\n                return;\r\n            }\r\n\r\n            //The \",\" is changed to \".\" For the correct operation of \"parseFloat ()\"\r\n            var tempValue = parseFloat(inputValue.replace(\",\", \".\"));\r\n            if (isNaN(tempValue)) {\r\n                tempValue = self.numericInput.asNumber();\r\n            }\r\n\r\n            if (minValue !== undefined && minValue != null && tempValue < minValue) {\r\n                message = bizagi.localization.getResource(\"render-numeric-minimum-validation\")\r\n                    .replaceAll(\"#label#\", properties.displayName + \" (\" + oldVal + \")\")\r\n                    .replaceAll(\"#minValue#\", minValue.toString());\r\n            }\r\n            else if (maxValue !== undefined && maxValue !== null && tempValue > maxValue) {\r\n                message = bizagi.localization.getResource(\"render-numeric-maximum-validation\")\r\n                    .replaceAll(\"#label#\", properties.displayName + \" (\" + oldVal + \")\")\r\n                    .replaceAll(\"#maxValue#\", maxValue.toString());\r\n            } else\r\n                message = message + \" \" + oldVal + \"\";\r\n\r\n\r\n            // Do datatype validations\r\n            if (\r\n                (minValue !== undefined && minValue !== null && tempValue < minValue)\r\n                || (maxValue !== undefined && maxValue !== null && tempValue > maxValue)\r\n                || (self.properties.dataType == 10 && inputLength > 15)\r\n                || (self.properties.dataType == 1 && inputLength > 19)\r\n                || (self.properties.dataType == 11 && inputLength > 7)\r\n                || (self.properties.dataType == 11 && inputLength > 7)\r\n                || (oldVal.match(/[^$£€¥,-.()\\d]/))\r\n            ) {\r\n                if (typeof validationController != \"undefined\" && validationController != null) {\r\n                    self.removeValidations();\r\n\r\n                    var messageToShow = message;\r\n                    if(messageToShow.indexOf(oldVal) === -1){\r\n                        messageToShow = message + \" \" + oldVal + \"\";\r\n                    }\r\n\r\n                    validationController.showValidationMessage(messageToShow, xPath);\r\n                    self.isValidRender = false;\r\n                    self.isValidRenderMessage = messageToShow;\r\n                }\r\n                message = message.replace(oldVal, \"\");\r\n                return;\r\n            }\r\n            else {\r\n                self.isValidRender = true;\r\n                self.isValidRenderMessage = \"\";\r\n            }\r\n\r\n            // Fix decimals specially when it starts with 0 (0000234 -> 234, 00000 -> 0)\r\n            if (this.value.toString().length > 0 && !properties.allowDecimals && !properties.groupDigits) {\r\n                this.value = this.value.toString().replace(/^0+/, '');\r\n                if (properties.symbol.length > 0) this.value = this.value.toString().replace(properties.symbol + \"0\", properties.symbol);\r\n                this.value = this.value.toString().replace(/^0+/, '');\r\n                if (this.value.replaceAll('0', '').length == 0)\r\n                    this.value = properties.symbol + \"0\";\r\n                else if (this.value.toString() == parseInt(this.value)) this.value = properties.symbol + this.value;\r\n            } else {\r\n                //Fix type money when number start with 0 (0000234 -> 234, 00000 -> 0)\r\n                if(self.properties.type === \"money\" || self.properties.type === \"number\" || self.properties.type === \"columnMoney\" || self.properties.type === \"columnNumber\"){\r\n                    this.value = this.value.toString().replace(/^0+/, '');\r\n                    if(this.value === \"\"){\r\n                        this.value = 0;\r\n                    }\r\n                }\r\n            }\r\n            self.executeFormatCurrencyPlugin();\r\n\r\n            // Updates internal value\r\n            self.setValue(self.numericInput.asNumber({\r\n                symbol: properties.symbol,\r\n                positiveFormat: properties.positiveFormat,\r\n                negativeFormat: properties.negativeFormat,\r\n                decimalSymbol: properties.decimalSymbol,\r\n                digitGroupSymbol: properties.digitGroupSymbol,\r\n                groupDigits: properties.groupDigits\r\n            }));\r\n\r\n            if (properties.percentage) {\r\n                if (self.numericInput && self.numericInput.val().indexOf(\"%\") == -1)\r\n                    self.numericInput.val(self.numericInput.val() + '%');\r\n            }\r\n            message = message.replace(oldVal, \"\");\r\n        })\r\n\r\n        // Avoiding pasting invalid characters\r\n            .bind('paste', function (e) {\r\n                try {\r\n                    var tmpData = (bizagi.util.isIE() || bizagi.util.isIE11()) ? window.clipboardData.getData(\"text\") : e.originalEvent.clipboardData.getData(\"Text\");\r\n\r\n\r\n\r\n                    // Next lines checks if there is something different to numbers symbol, decimalSymbol and digitGroupSybol\r\n                    var totalVal = \"/[^0-9\";\r\n                    if (properties.decimalSymbol.length > 0) {\r\n                        totalVal += properties.decimalSymbol;\r\n                    }\r\n                    // Next lines only for currency type\r\n                    if (properties.dataType == 8) {\r\n                        if (properties.symbol.length > 0) {\r\n                            totalVal += properties.symbol;\r\n                        }\r\n                        if (properties.digitGroupSymbol.length > 0) {\r\n                            totalVal += properties.digitGroupSymbol;\r\n                        }\r\n                    }\r\n                    totalVal += \"\\\\-\\\\s]/gi\";\r\n                    try {\r\n                        if (tmpData.replace(eval(totalVal), '').length != tmpData.length)\r\n                            e.preventDefault();\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    bizagi.log(\"Error to pasting content\");\r\n                    self.isInvalidFormat = true;\r\n                }\r\n            })\r\n            // Now we implement keydown instead of keyup in order to include preventDefault\r\n            .keydown(function (e) {\r\n                self.previousValue = this.value;\r\n                e = (window.event && window.event.preventDefault) ? window.event : e;\r\n                var keyUnicode = e.charCode || e.keyCode;\r\n                // Validation for currency info\r\n                if (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) != \"undefined\")\r\n                    if (BIZAGI_DEFAULT_CURRENCY_INFO.decimalDigits == 0) properties.allowDecimals = false;\r\n                if (properties.dataType < 5 || (properties.dataType == 8 && properties.allowDecimals == false))\r\n                    if (keyUnicode == 188 || keyUnicode == 190 || keyUnicode == 110)\r\n                        e.preventDefault();\r\n                if (this.value)\r\n                    if (e !== undefined && this.value.length > 0 && (properties.dataType == 8 || properties.dataType == 10)) {\r\n                        // Just numbers\r\n                        if (keyUnicode > 47 && keyUnicode < 58) {\r\n                            if (self.formatTimeout) {\r\n                                clearTimeout(self.formatTimeout);\r\n                            }\r\n\r\n                            var floatPart = this.value + \"\";\r\n                            //var  floatPart = stringPart.replaceAll(properties.digitGroupSymbol, \"\").replaceAll(properties.symbol,\"\").trim().replaceAll(properties.decimalSymbol,\".\");\r\n                            if (properties.digitGroupSymbol && properties.digitGroupSymbol.length > 0) {\r\n                                floatPart = floatPart.replaceAll(properties.digitGroupSymbol, \"\");\r\n                            }\r\n                            if (properties.symbol.length > 0) {\r\n                                floatPart = floatPart.replaceAll(properties.symbol, \"\");\r\n                            }\r\n\r\n                            floatPart = $.trim(floatPart);\r\n                            if (properties.decimalSymbol && properties.decimalSymbol.length > 0) {\r\n                                floatPart = floatPart.replaceAll(properties.decimalSymbol, \".\");\r\n                            }\r\n                            // If increasing one digit (x10) will overtake the maxValue\r\n                            if (floatPart * 10 > properties.dataTypeMaxValue) {\r\n                                e.preventDefault();\r\n                            }\r\n                        }                  \r\n                        else if (keyUnicode == 109 || keyUnicode == 189) {\r\n                            if (this.selectionStart != 0 || this.selectionEnd != this.value.length) {\r\n                                var currentPosition = this.selectionEnd;\r\n                                this.value = properties.symbol + \"-\" + this.value.replace(properties.symbol, \"\");\r\n                                this.selectionStart = this.selectionEnd = currentPosition + 1;\r\n                            } else if (this.selectionStart == 0 && this.selectionEnd == this.value.length) {\r\n                                this.value = \"-\";\r\n                                this.selectionStart = this.selectionEnd = this.value.length;\r\n                            }\r\n                        }\r\n                    }                    \r\n            })\r\n\r\n            .keyup(function (e) {\r\n                e = window.event || e;\r\n                var keyUnicode = e.charCode || e.keyCode;\r\n                if (e !== undefined) {\r\n                    switch (keyUnicode) {\r\n                        case 16:\r\n                            break; // Shift\r\n                        case 17:\r\n                            break; // Ctrl\r\n                        case 13:\r\n                            break; // Intro\r\n                        case 18:\r\n                            break; // Alt\r\n                        case 27:\r\n                            this.value = '';\r\n                            break; // Esc: clear entry\r\n                        case 35:\r\n                            break; // End\r\n                        case 36:\r\n                            break; // Home\r\n                        case 37:\r\n                            break; // cursor left\r\n                        case 38:\r\n                            break; // cursor up\r\n                        case 39:\r\n                            break; // cursor right\r\n                        case 40:\r\n                            break; // cursor down\r\n                        case 78:\r\n                            break; // N (Opera 9.63+ maps the \".\" from the number key section to the \"N\" key too!) (See: http://unixpapa.com/js/key.html search for \". Del\")\r\n                        case 110:\r\n                            break; // . number block (Opera 9.63+ maps the \".\" from the number block to the \"N\" key (78) !!!)\r\n                        case 188:\r\n                            break; // , comma\r\n                        case 190:\r\n                            break; // .\r\n                        default:\r\n                        {\r\n\r\n                        }\r\n                    }\r\n                }                \r\n            }).keypress(function (e) {\r\n            e = (window.event && window.event.preventDefault) ? window.event : e;\r\n            var keyUnicode = e.charCode || e.keyCode;\r\n            if (typeof (e) !== \"undefined\") {\r\n                if (keyUnicode == 35 || keyUnicode == 37 || keyUnicode == 39) {\r\n                    e.preventDefault();\r\n                } else if (properties.dataType != 8 && keyUnicode == 36) {\r\n                    e.preventDefault();\r\n                }\r\n\r\n                // When no decimals are permited\r\n                var character = String.fromCharCode(keyUnicode);\r\n                if (properties.allowDecimals === false && properties.numDecimals === 0 && character === properties.decimalSymbol)\r\n                    e.preventDefault();\r\n            }\r\n        });\r\n\r\n    },\r\n\r\n    executeFormatCurrencyPlugin: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (self.numericInput) {\r\n            self.numericInput.formatCurrency({\r\n                symbol: properties.symbol,\r\n                positiveFormat: properties.positiveFormat,\r\n                negativeFormat: properties.negativeFormat,\r\n                decimalSymbol: properties.decimalSymbol,\r\n                digitGroupSymbol: properties.digitGroupSymbol,\r\n                groupDigits: properties.groupDigits,\r\n                roundToDecimalPlace: properties.numDecimals,\r\n                colorize: properties.colorize\r\n            });\r\n        }\r\n\r\n        if (properties.dataType !== 8 && bizagi.override.removeTrailingZeros === true) {\r\n            var value = self.numericInput.val();\r\n            var positive = true;\r\n\r\n            if (value.indexOf(\")\") !== -1) {\r\n                positive = false;\r\n                value = value.replace(\"(\", \"\").replace(\")\", \"\")\r\n            }\r\n\r\n            var regExp = new RegExp(\"(\" + properties.decimalSymbol + \"\\\\d*?[1-9])0+$\", \"g\");\r\n            value = value.replace(regExp, \"$1\")\r\n\r\n            regExp = new RegExp(\"\\\\\" + properties.decimalSymbol + \"0+$\", \"g\");\r\n            value = value.replace(regExp, \"\");\r\n            self.numericInput.val(value);\r\n\r\n            if (!positive) self.numericInput.val(\"(\" + value + \")\");\r\n        }\r\n\r\n        if (properties.percentage)\r\n            self.numericInput.val(self.numericInput.val() + '%');\r\n    },\r\n\r\n    /**\r\n     * Returns the display value of the render\r\n     * @returns {*}\r\n     */\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n        var value = self.getValue() !== undefined ? self.getValue() : $(\"input\", control).val() || \"\";\r\n\r\n        // Workaround to get the display value by the format currency plugin, because it requires a control\r\n        var label = $('<label/>').html(value);\r\n\r\n        label.formatCurrency({\r\n            symbol: properties.symbol,\r\n            positiveFormat: properties.positiveFormat,\r\n            negativeFormat: properties.negativeFormat,\r\n            decimalSymbol: properties.decimalSymbol,\r\n            digitGroupSymbol: properties.digitGroupSymbol,\r\n            groupDigits: properties.groupDigits,\r\n            roundToDecimalPlace: properties.numDecimals,\r\n            colorize: properties.colorize\r\n        });\r\n\r\n        if (properties.percentage)\r\n            label = $('<label/>').html(label.text() + '%');\r\n\r\n        // Removing unrequired zeros as requested by BA26331\r\n        if (!properties.editable && properties.dataType !== 8 && bizagi.override.removeTrailingZeros === true) {\r\n            value = label.text();\r\n            var positive = true;\r\n\r\n            if (value.toString().indexOf(\")\") !== -1) {\r\n                positive = false;\r\n                value = value.replace(\"(\", \"\").replace(\")\", \"\");\r\n            }\r\n\r\n            var re = new RegExp(\"(\" + properties.decimalSymbol + \"\\\\d*?[1-9])0+$\", \"g\");\r\n            value = value.replace(re, \"$1\");\r\n\r\n            re = new RegExp(\"\\\\\" + properties.decimalSymbol + \"0+$\", \"g\");\r\n            value = value.replace(re, \"\");\r\n\r\n            if (!positive) value = \"(\" + value + \")\";\r\n            return value;\r\n        }\r\n\r\n        return label.text();\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @returns {*}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        var message;\r\n        var minValue = self.getMinValue();\r\n        var maxValue = self.getMaxValue();\r\n\r\n        if (typeof (value) == \"string\" && value != \"\") {\r\n            value = Number(value);\r\n        }\r\n\r\n        // Check min value\r\n        if (self.hasValue()) {\r\n            if (!bizagi.util.isEmpty(minValue)) {\r\n                if (value < minValue) {\r\n                    message = this.getResource(\"render-numeric-minimum-validation\").replaceAll(\"#label#\", properties.displayName.toString() + \" (\" + value + \")\").replaceAll(\"#minValue#\", minValue.toString());\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n            // Check max value\r\n            if (!bizagi.util.isEmpty(maxValue)) {\r\n                if (value > maxValue) {\r\n                    message = this.getResource(\"render-numeric-maximum-validation\").replaceAll(\"#label#\", properties.displayName.toString() + \" (\" + value + \")\").replaceAll(\"#maxValue#\", maxValue.toString());\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (self.isValidRender === false && !(bValid && bizagi.util.isMobileDevice())) {\r\n            bValid = false;\r\n            var validMessage = self.isValidRenderMessage ? self.isValidRenderMessage : \"error\";\r\n            invalidElements.push({xpath: properties.xpath, message: validMessage});\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Get minimum value\r\n     * @returns {*}\r\n     */\r\n    getMinValue: function () {\r\n        var minValue = this.properties.minValue;\r\n\r\n        if (minValue !== undefined && minValue !== null)\r\n            return minValue;\r\n\r\n        return this.properties.dataTypeMinValue;\r\n    },\r\n\r\n    /**\r\n     * Get maximum value\r\n     * @returns {*}\r\n     */\r\n    getMaxValue: function () {\r\n        var maxValue = this.properties.maxValue;\r\n\r\n        if (maxValue !== undefined && maxValue !== null)\r\n            return maxValue;\r\n\r\n        return this.properties.dataTypeMaxValue;\r\n    },\r\n\r\n    /**\r\n     * Return the allow decimals default property based on the datatype\r\n     * @param dataType\r\n     * @returns {boolean}\r\n     */\r\n    getDefaultAllowDecimals: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType === 1 || dataType === 2 || dataType === 3 || dataType === 4 || dataType === 7) {\r\n                return false;\r\n            }\r\n            // Decimal and money data types\r\n            if (dataType === 6 || dataType === 8 || dataType === 10 || dataType === 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    /**\r\n     * Return the group digits default property based on the datatype\r\n     * @param dataType\r\n     * @returns {boolean}\r\n     */\r\n    getDefaultGroupDigits: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType === 1 || dataType === 2 || dataType === 3 || dataType === 4 || dataType === 7) {\r\n                return false;\r\n            }\r\n\r\n            // Decimal data types\r\n            if (dataType === 6 || dataType === 8 || dataType === 10 || dataType === 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Return the group digits default property based on digitGroupSymbol\r\n     * @returns {*}\r\n     */\r\n    setGroupDigits: function () {\r\n        var self = this;\r\n        if (typeof (self.properties.thousands) !== \"undefined\") {\r\n            if (self.properties.digitGroupSymbol) { //some cultures\r\n                return bizagi.util.parseBoolean(self.properties.thousands);\r\n            } else {\r\n                return false;\r\n            }\r\n        } else if (self.properties.digitGroupSymbol) { //some cultures\r\n            return this.getDefaultGroupDigits(self.properties.dataType);\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Calculate Minimum Value\r\n     * @param dataType\r\n     * @returns {*}\r\n     */\r\n    calculateMinValue: function (dataType) {\r\n        if (dataType === 8 || dataType === 10) {\r\n            return -922337203685477; // Money\r\n        }\r\n        if (dataType === 4) {\r\n            return 0; // tinyint\r\n        }\r\n        if (dataType === 3) {\r\n            return -32768; // smallint\r\n        }\r\n        if (dataType === 2) {\r\n            return -2147483648; // int\r\n        }\r\n        if (dataType === 1) {\r\n            return -999999999999999; // bigint\r\n        }\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * Calculate Maximum Value\r\n     * @param dataType\r\n     * @returns {*}\r\n     */\r\n    calculateMaxValue: function (dataType) {\r\n        if (dataType === 8 || dataType === 10) {\r\n            return 922337203685477; // Money\r\n        }\r\n        if (dataType === 4) {\r\n            return 255; // tinyint\r\n        }\r\n        if (dataType === 3) {\r\n            return 32767; // smallint\r\n        }\r\n        if (dataType === 2) {\r\n            return 2147483647; // int\r\n        }\r\n        if (dataType === 1) {\r\n            return 999999999999999; // bigint\r\n        }\r\n        return null;\r\n    },\r\n\r\n    changeMinValue: function (value) {\r\n        var self = this;\r\n        var newValue = Number(value);\r\n\r\n        self.properties.minValue = self.properties.dataTypeMinValue = Number.isNaN(newValue) ? self.calculateMinValue(self.properties.dataType) : newValue;\r\n    },\r\n\r\n    changeMaxValue: function (value) {\r\n        var newValue = Number(value);\r\n\r\n        this.properties.maxValue = this.properties.dataTypeMaxValue = Number.isNaN(newValue) ? this.calculateMaxValue(this.properties.dataType) : newValue;\r\n    },\r\n\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        control.data(\"oldValue\", currentValue);\r\n        control.val(\"\");\r\n\r\n        try {\r\n            // Destroy tooltips\r\n            control.tooltip(\"destroy\");\r\n        } catch (e) {\r\n        }\r\n\r\n        control.attr(\"title\", currentTitle);\r\n        control.tooltip();\r\n\r\n        var toolTipZindex = $.getMaxZindex();\r\n        control.tooltip().on(\"tooltipopen\", function (event, ui) {\r\n            ui.tooltip.zIndex(toolTipZindex);\r\n        });\r\n\r\n        // Create new tooltip\r\n        control.tooltip(\"open\");\r\n\r\n        setTimeout(function () {\r\n            control.focus();\r\n        }, 100);\r\n    }\r\n});\r\n\r\n","\r\n/*\r\n*   Name: Bizagi Render Number Scientific notation Class\r\n*   Author: Laura Ariza\r\n*   Comments:\r\n*   -   This script will define basic stuff for scientific notation numbers\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.numberScientificNotation\", {\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n\r\n        properties.decimalSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\"\r\n            ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator : format.decimalSymbol;\r\n    },\r\n\r\n    renderControl: function() {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"numberScientificNotation\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {});\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function() {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        self.numericInput = control.find(\"input\");\r\n        // Add numeric plugin to avoid invalid keystrokes\r\n        self.numericInput.numericSN(self.properties.decimalSymbol);\r\n\r\n    },\r\n\r\n    getDisplayValue: function() {\r\n        var self = this;\r\n        return self.getValue().replace('.', self.properties.decimalSymbol);\r\n    },\r\n\r\n    setValue: function(value) {\r\n        var self = this;\r\n        value = (value || '').toString().replace(self.properties.decimalSymbol, '.');\r\n        self._super(value);\r\n    },\r\n    controlValueIsChanged: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var value = self.getValue() || \"\";\r\n        var compareValue = properties.originalValue || \"\";\r\n        var result = true;\r\n\r\n        // Flag to force to collect data\r\n        if ($.forceCollectData) {\r\n            return true;\r\n        }\r\n        result = (compareValue.toLowerCase() == value.toLowerCase()) ? false : true;\r\n        return result;\r\n    }\r\n\r\n});","/*\r\n*   Name: BizAgi Render Date Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for date renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.date\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var dateFormat = this.getResource(\"dateFormat\");\r\n        var timeFormat = this.getResource(\"timeFormat\");\r\n\r\n        // We will hold here the value to display\r\n        properties.displayValue = \"\";\r\n        properties.showTime = properties.showTime !== undefined ? bizagi.util.parseBoolean(properties.showTime) : false;\r\n        properties.dateFormat = properties.dateFormat || dateFormat;\r\n        properties.timeFormat = properties.timeFormat || timeFormat;\r\n        properties.fullFormat = properties.dateFormat;\r\n\r\n        // Check if it has the showtime property\r\n        if (properties.showTime) {\r\n            if (properties.fullFormat.search(/[h|H]+/ig) === -1) {\r\n                properties.fullFormat = properties.fullFormat + ' ' + properties.timeFormat;\r\n            }\r\n        }\r\n\r\n        // Read always parameter from server in invariant format\r\n        if (properties.value) {\r\n\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(properties.value, properties.showTime);\r\n            // Format date to current format\r\n            if (date != 0) {\r\n                // Value must always hold the value with invariant format\r\n                self.value = properties.value;\r\n                var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n                properties.displayValue = bizagi.util.dateFormatter.formatDate(date, properties.fullFormat, datePickerRegional);\r\n            } else {\r\n                self.value = null;\r\n            }\r\n        }\r\n    },\r\n    \r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"date\");\r\n        var indexDateTimeSeparation = properties.dateFormat.substring(0, properties.dateFormat.indexOf(\":\")).lastIndexOf(\" \");\r\n        var dateFormat = (indexDateTimeSeparation > 0) ? properties.dateFormat.substring(0, indexDateTimeSeparation) : properties.dateFormat;\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            showTime: properties.showTime,\r\n            value: properties.value,\r\n            editable: properties.editable,\r\n            dateFormat: bizagi.override && bizagi.override.uppercaseDatePlaceholder === true ? dateFormat.toUpperCase() : dateFormat,\r\n            timeFormat: (properties.showTime && indexDateTimeSeparation > 0) ? properties.dateFormat.substring(indexDateTimeSeparation) : \"\",\r\n            rtl: (properties.orientation == \"rtl\")\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n    */\r\n    configureHandlers: function (intHandler, isNow) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set control references\r\n        var dateControl = self.getDateControl();\r\n        var timeControl = self.getTimeControl();\r\n\r\n        // Set mask\r\n        if (properties.mask) {\r\n            dateControl.mask({\r\n                mask: properties.mask\r\n            });\r\n        }\r\n\r\n        // Attach change event\r\n        dateControl.bind(\"change\", function () {\r\n            self.onChangeHandler();\r\n        });\r\n        if (properties.showTime) {\r\n            timeControl.bind(\"change\", function (e, isNow) {\r\n                if (self.updatingTime) {\r\n                    delete self.updatingTime;\r\n                    return;\r\n                }\r\n                self.onChangeHandler(isNow);\r\n            });\r\n        }\r\n    },\r\n\r\n    /* \r\n    *   Formats the date time value to the hidden control\r\n    */\r\n    onChangeHandler: function () {\r\n    },\r\n\r\n    getDisplayValue: function (value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var displayValue;\r\n\r\n        if (!properties.displayValue && value) {\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(value, properties.showTime);\r\n            var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n            displayValue = bizagi.util.dateFormatter.formatDate(date, properties.fullFormat, datePickerRegional);\r\n        } else {\r\n            displayValue = \"\";\r\n        }\r\n\r\n        // We can return the display value isntance\r\n        return properties.displayValue || displayValue || \"\";\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            if (!bizagi.util.isEmpty(xpath)) {\r\n                if (!bizagi.util.isEmpty(value)) {\r\n                    // Formats the value in full invariant (with time) in order to send to the server\r\n                    var date = bizagi.util.dateFormatter.getDateFromInvariant(value, properties.showTime);\r\n                    if (typeof (date) != \"undefined\")\r\n                        if (date !== 0) {\r\n                            if (!properties.showTime) {\r\n                                date.setHours(0, 0, 0, 0);\r\n                            }\r\n                            renderValues[properties.xpath] = bizagi.util.dateFormatter.formatInvariant(date, true);\r\n                        }\r\n                } else if (value === \"\") {\r\n                    renderValues[properties.xpath] = \"\";\r\n                }\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Gets the date control\r\n    */\r\n    getDateControl: function () { },\r\n\r\n    /*\r\n    *   Gets the time control\r\n    */\r\n    getTimeControl: function () { },\r\n\r\n    /* \r\n    * Public method to determine if a value is valid or not\r\n    */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n        properties = self.properties;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        if (value) {\r\n            if (bizagi.util.parseBoolean(properties.editable) === true) {\r\n                value = bizagi.util.dateFormatter.getDateFromInvariant(value, properties.showTime);\r\n                var message;\r\n\r\n                // Check that we have a valid data\r\n                if (value != 0) {\r\n                    // Clear seconds and milliseconds for validations\r\n                    value.setSeconds(0);\r\n                    value.setMilliseconds(0);\r\n\r\n                    // Check min value\r\n                    if (properties.minValue && (typeof properties.minValue === 'string' || typeof properties.minValue == 'number')) {\r\n                        var minValue = typeof properties.minValue == 'string' ? bizagi.util.dateFormatter.getDateFromInvariant(properties.minValue, properties.showTime) : new Date(properties.minValue);\r\n                        minValue.setSeconds(0);\r\n                        minValue.setMilliseconds(0);\r\n\r\n                        if (value < minValue) {\r\n                            message = this.getResource(\"render-date-minimum-validation\").replaceAll(\"#label#\", properties.displayName).replaceAll(\"#minValue#\", bizagi.util.dateFormatter.formatDate(minValue, properties.fullFormat));\r\n                            invalidElements.push({\r\n                                xpath: properties.xpath,\r\n                                message: message\r\n                            });\r\n                            bValid = false;\r\n                        }\r\n                    }\r\n\r\n                    // Check max value\r\n                    if (properties.maxValue && (typeof properties.maxValue == 'string' || typeof properties.maxValue == 'number')) {\r\n                        var maxValue = typeof properties.maxValue == 'string' ? bizagi.util.dateFormatter.getDateFromInvariant(properties.maxValue, properties.showTime) : new Date(properties.maxValue);\r\n                        maxValue.setSeconds(0);\r\n                        maxValue.setMilliseconds(0);\r\n\r\n                        if (value > maxValue) {\r\n                            message = this.getResource(\"render-date-maximum-validation\").replaceAll(\"#label#\", properties.displayName).replaceAll(\"#maxValue#\", bizagi.util.dateFormatter.formatDate(maxValue, properties.fullFormat));\r\n                            invalidElements.push({\r\n                                xpath: properties.xpath,\r\n                                message: message\r\n                            });\r\n                            bValid = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Check that both controls (data and time) are filled out\r\n        if (properties.showTime) {\r\n            if (bizagi.util.parseBoolean(properties.editable) === true) {\r\n                // Check required\r\n                if (properties.required && self.hasValue()) {\r\n\r\n                    // Check both controls\r\n                    var dateControl = self.getDateControl();\r\n                    var timeControl = self.getTimeControl();\r\n\r\n                    // If date is filled but time is not ... show validation\r\n                    if (dateControl.length > 0 && timeControl.length > 0) {\r\n                        if (dateControl.val().length > 0 && timeControl.val().length == 0) {\r\n                            message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                            invalidElements.push({\r\n                                xpath: properties.xpath,\r\n                                message: message\r\n                            });\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Text Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for text renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.extendedText\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Check if offline forms is supported\r\n        this.isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n        this.hasMaxLines = this.properties.maxLines ? true : false;\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        // Fill default properties\r\n        properties.maxLines = this.properties.maxLines || 6;\r\n\r\n        if (properties.regularExpressionExpression) {\r\n            var message = properties.regularExpressionMessage || self.getResource(\"render-text-regular-expression-default-message\");\r\n\r\n            properties.regularExpression = {\"expression\": properties.regularExpressionExpression, \"message\": message};\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"extendedText\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            isEmptyField: typeof (this.properties.value) === \"undefined\",\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        self._super();\r\n\r\n        var control = self.getControl();\r\n        self.textarea = control.find(\"textarea\");\r\n\r\n        // If is textarea, then enable resize element.\r\n        if (self.textarea) {\r\n            self.textarea.css({resize: \"both\"});\r\n        } else {\r\n            self.textarea.css({resize: \"none\"});\r\n        }\r\n\r\n        // Attach event for retype double\r\n        if (self.properties.retype === \"double\")\r\n            self.attachRetypeDouble();\r\n    },\r\n\r\n    /**\r\n     * Function virtual implements on children (desktop,samrtphone...).\r\n     */\r\n    attachRetypeDouble: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set the default maxlength for the input if is 0 or undefined set to infinity\r\n        // this resolve issue with scope strings that don't have maxlength\r\n        if (properties.maxLength)\r\n            self.textarea.prop('maxlength', properties.maxLength);\r\n\r\n        if (properties.maxLines) {\r\n            self.textarea.prop('rows', properties.maxLines)\r\n        } else {\r\n            self.textarea.prop('rows', 6);\r\n        }\r\n\r\n        // Attach change event\r\n        self.textarea.bind(\"change\", function () {\r\n\r\n            // Updates internal value\r\n            self.setValue(self.textarea.val());\r\n\r\n            // Check that the value is valid\r\n            var validationMessages = [];\r\n            if (properties.retype !== \"duplicate\") {\r\n                if (self.isValid(validationMessages) || typeof (properties.regularExpression) === \"undefined\") {\r\n                    // Update value again triggering handlers\r\n                    self.setValue(self.textarea.val(), true);\r\n                } else {\r\n                    // Set error message\r\n                    var message = validationMessages[0].message;\r\n                    bizagi.showMessageBox(message, \"Bizagi\", \"error\");\r\n                }\r\n            }\r\n        });\r\n\r\n        // Attach blur event\r\n        self.textarea.bind(\"blur\", function () {\r\n            // Updates internal value\r\n            self.setValue(self.textarea.val());\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param {} invalidElements\r\n     * @returns {}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        var regEx = new RegExp(\".*?(<|\\\\u003C)(.+?)(>|\\\\u003E)(.?)|eval\\\\(|eval\\\\u0028\", \"g\");\r\n\r\n        // Offline capability\r\n        if (this.isOfflineForm && bizagi.util.isMobileDevice()) {\r\n            value = value && typeof (value) === \"object\" && value.value ? value.value : value;\r\n        }\r\n\r\n        // Check regular expression\r\n        if (properties.regularExpression) {\r\n\r\n            if (value && ((value.match(regEx)) || (!value.match(new RegExp(properties.regularExpression.expression)) && (self.properties && self.properties.xpath === \"userName\")))) {\r\n                message = properties.regularExpression.message;\r\n                invalidElements.push({xpath: properties.xpath, message: message});\r\n                bValid = false;\r\n            } else {\r\n                if (value && ((value.match(regEx)) || (!value.match(new RegExp(properties.regularExpression.expression))))) {\r\n                    message = properties.regularExpression.message;\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n        } else {\r\n            if (value && (value.match(new RegExp(\".*?eval\\\\(\", \"g\"))) && (value.match(new RegExp(\".*?eval\\\\u0028\", \"g\")))) {\r\n                if (properties.editable) {\r\n                    message = this.getResource(\"render-text-regular-expression-default-message\");\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n\r\n        if (self.properties.editable == false) {\r\n            // Render as simple value\r\n            if (typeof (value) == \"string\") {\r\n\r\n                // Replace line breaks for html line breaks\r\n                var valueToDisplay = bizagi.util.decodedDisplayValue(self.getDisplayValue());\r\n\r\n                control.html(valueToDisplay);\r\n            }\r\n        }\r\n\r\n        // Set internal value\r\n        self.setValue(decodedValue, false);\r\n    },\r\n\r\n    /**\r\n     * Add the render data to the given collection in order to send data to the server\r\n     * @param {} renderValues\r\n     * @returns {}\r\n     */\r\n    collectData: function (renderValues) {\r\n        // Call base\r\n        this._super(renderValues);\r\n    },\r\n\r\n    /**\r\n     * Extend setValue to fix all encode data from database\r\n     * More information SUITE-9407\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setValue: function (value) {\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n\r\n        this._super(decodedValue);\r\n    },\r\n\r\n    /**\r\n     * Helptext tooltip\r\n     * @param {} control\r\n     * @param {} currentValue\r\n     * @param {} currentTitle\r\n     */\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        control.data(\"oldValue\", currentValue);\r\n        control.val(\"\");\r\n\r\n        if(control.data('ui-tooltip')) control.tooltip('destroy');  \r\n\r\n        control.attr(\"title\", currentTitle);\r\n        control.tooltip();\r\n\r\n        var toolTipZindex = $.getMaxZindex();\r\n        control.tooltip().on(\"tooltipopen\", function (event, ui) {\r\n            ui.tooltip.zIndex(toolTipZindex);\r\n        });\r\n\r\n        // Create new tooltip\r\n        control.tooltip(\"open\");\r\n\r\n        setTimeout(function () {\r\n            control.focus();\r\n        }, 100);\r\n    },\r\n\r\n    //#region No side effects functions\r\n    /**\r\n     * Gets the string with the correct size\r\n     * @param {string} value String value to validate\r\n     * @param {Int} maxLength Maximum size of the string\r\n     * @returns {string} String value validated\r\n     */\r\n    validateValue: function (value, maxLength) {\r\n        if(maxLength<1 || value.length<=maxLength)return value;\r\n        return value.substr(0, maxLength)\r\n    }\r\n    //#endregion No side effects functions\r\n});\r\n","/*\r\n *   Name: Bizagi Render Grid Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for grids\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.grid\", {}, {\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        self.originalData = bizagi.clone(data.properties);\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        self.initProperties();\r\n\r\n        // Set columns\r\n        var areThereEditableColumns;\r\n        var areThereTotalizedColumns;\r\n        self.columns = [];\r\n        self.columnsIds = [];\r\n        self.enabledChecks = {};\r\n        self.exclusiveChanges = {};\r\n        self.originalEnabledChecks = [];\r\n        $.each(data.elements, function (i, column) {\r\n            var columnProperties = column.render.properties;\r\n\r\n            // the groupby property is taken of column\r\n            if (columnProperties.groupBy) {\r\n                properties.groupBy = columnProperties.xpath || \"\";\r\n                properties.allowGrouping = !bizagi.util.isEmpty(properties.groupBy) ? true : false;\r\n            }\r\n           //if (columnProperties.type === \"columnLabel\") {\r\n                //self.spliceRowData(data.properties.data, i + 1);\r\n            //}\r\n\r\n            if (columnProperties.type === \"columnBoolean\" && columnProperties.isExclusive) {\r\n                properties.hasExclusiveCheck = true;\r\n                self.enabledChecks[columnProperties.xpath] = [];                   \r\n            }\r\n                       \r\n            // If inlineEdit is false then all columns must be read only\r\n            if (!self.properties.inlineEdit) {\r\n                column.render.properties.editable = false;\r\n            }\r\n\r\n            // Create renderColumns\r\n            var columnRender = self.renderFactory.getColumn({\r\n                type: columnProperties.type,\r\n                data: column.render,\r\n                parent: self,\r\n                singleInstance: properties.singleInstance\r\n            });\r\n\r\n            self.columns.push(columnRender);\r\n            self.columnsIds.push(column.render.properties.id);\r\n\r\n            if (columnProperties.editable) {\r\n                areThereEditableColumns = true;\r\n            }\r\n\r\n            if (columnProperties.totalize && columnProperties.totalize.operation) {\r\n                areThereTotalizedColumns = true;\r\n\r\n                // Default summary format\r\n                columnProperties.totalize.format = columnProperties.totalize.format || {};\r\n                columnProperties.totalize.format.bold = columnProperties.totalize.format.bold !== undefined ? columnProperties.totalize.format.bold : true;\r\n            }\r\n        });\r\n\r\n        // Reverse columns when using right to left orientation\r\n        if (properties.orientation === \"rtl\")\r\n            self.columns = self.columns.reverse();\r\n\r\n        // Turn off inline edit if there are any editable columns        \r\n        if (properties.inlineEdit && !areThereEditableColumns) {\r\n            properties.inlineEdit = false;\r\n            properties.allowEdit = false;\r\n        }\r\n\r\n        // Check if the grid has totalizers\r\n        if (areThereTotalizedColumns) {\r\n            properties.showSummary = true;\r\n            properties.rowsPerPage = 0;\r\n        }\r\n    },\r\n\r\n    initProperties: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        /** Edit properties\r\n         * @default editable true\r\n         */\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) || false;\r\n        properties.allowEdit = bizagi.util.parseBoolean(properties.allowEdit) != null ? bizagi.util.parseBoolean(properties.allowEdit) : true;\r\n        properties.inlineEdit = bizagi.util.parseBoolean(properties.inlineEdit) != null ? bizagi.util.parseBoolean(properties.inlineEdit) : true;\r\n        properties.withEditForm = bizagi.util.parseBoolean(properties.withEditForm) != null ? bizagi.util.parseBoolean(properties.withEditForm) : false;\r\n\r\n        /** Add properties\r\n         * @default  allowAdd true\r\n         */\r\n        properties.allowAdd = bizagi.util.parseBoolean(properties.allowAdd) != null ? bizagi.util.parseBoolean(properties.allowAdd) : true;\r\n        properties.inlineAdd = (properties.allowAdd) ? (bizagi.util.parseBoolean(properties.inlineAdd) != null) ? bizagi.util.parseBoolean(properties.inlineAdd) : true : false;\r\n\r\n        /* Define Delete properties */\r\n        properties.allowDelete = bizagi.util.parseBoolean(properties.allowDelete) != null ? bizagi.util.parseBoolean(properties.allowDelete) : true;\r\n\r\n        /* Define details properties*/\r\n        properties.allowDetail = bizagi.util.parseBoolean(properties.allowDetail) != null ? bizagi.util.parseBoolean(properties.allowDetail) : false;\r\n\r\n        /* Define general properties */\r\n        properties.keyColumn = \"\";\r\n        properties.data = properties.data || null;\r\n        properties.displayType = \"value\";\r\n        properties.skipInitialLoad = properties.skipInitialLoad || false;\r\n        properties.allowMore = bizagi.util.parseBoolean(properties.allowMore) || false;\r\n        properties.allowFilter = bizagi.util.parseBoolean(properties.allowFilter) || false;\r\n        properties.allowGrouping = false;\r\n        properties.groupBy = \"\";\r\n        properties.groupSummary = properties.groupSummary || null;\r\n        properties.groupText = this.getResource(\"render-grid-group-text\");\r\n        properties.groupCollapsed = bizagi.util.parseBoolean(properties.groupCollapsed) || false;\r\n        properties.groupOrder = properties.groupOrder || \"asc\";\r\n        properties.formShowMode = bizagi.util.parseBoolean(properties.formShowMode) || \"popup\";\r\n        properties.floatingHeader = bizagi.util.parseBoolean(properties.floatingHeader) || false;\r\n\r\n        properties.sortBy = properties.sortBy ? properties.sortBy : properties.data && properties.data.sort ? properties.data.sort : properties.keyColumn;\r\n        properties.sortOrder = properties.sortOrder !== undefined && properties.sortOrder !== null ? (properties.sortOrder === \"True\" ? \"asc\" : \"desc\") : properties.data && properties.data.order ? properties.data.order : \"asc\";\r\n        properties.sort = properties.sortBy + \" \" + properties.sortOrder;\r\n\r\n        properties.rowsPerPage = properties.allowGrouping ? 1000 : (properties.rowsPerPage || 20);\r\n        properties.page = 1;\r\n        properties.records = 0;\r\n        properties.totalPages = 0;\r\n\r\n        properties.addLabel = properties.addLabel || this.getResource(\"render-grid-add-label\") + properties.displayName;\r\n        properties.editLabel = properties.editLabel || $.trim(this.getResource(\"render-grid-edit-label\")) + \" \" + properties.displayName;\r\n        properties.deleteLabel = properties.deleteLabel || this.getResource(\"render-ecm-confirm-bt-delete\") + \" \" + properties.displayName;\r\n        properties.exportOptionsLabel = properties.exportOptionsLabel || this.getResource(\"render-grid-export-options-label\") + properties.displayName;\r\n        properties.detailLabel = properties.detailLabel || this.getResource(\"render-collection-navigator-details-form\");\r\n\r\n\r\n        // Apply style to entire table\r\n        properties.tableCssClass = properties.cssClass || \"\";\r\n\r\n        properties.alreadySaved = false;\r\n\r\n        // When grid open in modal window and the parent is entity\r\n        if (properties.contexttype != \"entity\") {\r\n            properties.contexttype = (typeof self.parent.getContextType == 'function') ? self.parent.getContextType() : \"\";\r\n        }\r\n\r\n        // Define if it is editable or not        \r\n        /* This part change all cells in the table to no editable,\r\n         * you must use it when the parent container has noeditable property,\r\n         * so this table is noeditable too.\r\n         */\r\n        try {\r\n            if ((self.parent && typeof self.parent.properties.editable == \"boolean\" && !self.parent.properties.editable) || !properties.editable) {\r\n                properties.allowAdd = false;\r\n                properties.allowEdit = false;\r\n                properties.allowDelete = false;\r\n                properties.inlineEdit = false;\r\n                properties.inlineAdd = false;\r\n                properties.editable = false;\r\n            }\r\n        } catch (e) {\r\n        }\r\n\r\n\r\n        // If grid has not allowEdit property in true, all fields within the grid\r\n        // must be no editables, so these lines changes this behavior\r\n        if (!properties.allowEdit || (!properties.inlineEdit && !properties.withEditForm)) {\r\n            properties.editable = false;\r\n        }\r\n\r\n        // Calculate render width\r\n        properties.labelWidth = 0;\r\n        properties.valueWidth = \"100%\";\r\n\r\n        // This property will be used to make custom grids with another data source\r\n        properties.overrideGetRemoteData = properties.overrideGetRemoteData || undefined;\r\n        //this property use to create a single decorated or a array of decorated\r\n        properties.singleInstance = bizagi.util.isEmpty(properties.singleInstance) ? true : properties.singleInstance;\r\n\r\n        // Check if the grid its opened whitin dialog form and has contextType\r\n        properties.contextType = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : null;\r\n\r\n        // Create a collection to collect changes\r\n        self.changes = {};\r\n\r\n        // Create a collection to override properties per cell\r\n        self.cellOverrides = {};\r\n\r\n\r\n        // Check orientation and change order of data if its necesary (rtl)\r\n        if (self.isRTL() && properties.data != null) {\r\n            properties.data.rows = self.changeOrderData(properties.data.rows);\r\n        }\r\n    },\r\n\r\n    /*\r\n   *   Check if a render has no value for required validation\r\n   */\r\n    hasValue: function () {\r\n        return this.properties.data && this.properties.data.rows.length > 0;\r\n    },\r\n\r\n    isRTL: function () {\r\n        var properties = this.properties;\r\n        if (!properties) return true;\r\n        return (typeof properties.orientation == \"string\" && properties.orientation.toUpperCase() == \"RTL\") ? true : false;\r\n    },\r\n    changeOrderData: function (data) {\r\n        var reverseDataRows = [];\r\n        var rows = data || [];\r\n        var rowKey;\r\n\r\n        $.each(rows, function (key, value) {\r\n            // Extract row key\r\n            rowKey = value.shift();\r\n            reverseDataRows = value.reverse();\r\n            // add element in the start\r\n            reverseDataRows.unshift(rowKey);\r\n\r\n            rows[key] = reverseDataRows;\r\n        });\r\n\r\n        return rows;\r\n    },\r\n\r\n    /**\r\n     * Specific fix RTL with localizated\r\n     * @param data\r\n     * @returns {*|Array}\r\n     */\r\n    removeRemainingColumns: function (data, numColumns) {\r\n        var rows = data || [];\r\n        var remainingColumns = 0;\r\n        if (rows.length > 0) {\r\n            // \"- 1\" because the first column represent id row\r\n            remainingColumns = rows[0].length - numColumns - 1;\r\n        }\r\n        if (remainingColumns > 0) {\r\n            $.each(rows, function (key, value) {\r\n                // Remove remaining columns\r\n                for (var i = 0; i < remainingColumns; i++) {\r\n                    value.pop();\r\n                }\r\n            });\r\n        }\r\n        return rows;\r\n    },\r\n\r\n    /* \r\n     *   Gets a column definition by xpath\r\n     */\r\n    getColumn: function (xpath) {\r\n        var self = this;\r\n        var result = null;\r\n        $.each(self.columns, function (i, column) {\r\n            if (\r\n                column.properties.xpath == xpath || \r\n                column.properties.id == xpath ||\r\n                column.properties.xpath + \".\" + column.properties.id == xpath\r\n            ) {\r\n                result = column;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    },\r\n\r\n    getColumnType: function (id) {\r\n        var self = this;\r\n        var columnIndex = self.columnsIds.indexOf(id);\r\n\r\n        if (columnIndex != -1) {\r\n            return self.columns[columnIndex].properties.type;\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    /*\r\n     *   Template method to implement in each children to customize each control\r\n     *   Returns a promise that will be resolved when all the columns has been loaded\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        // Set dummy data when not in execution mode\r\n        var mode = self.getMode();\r\n        if (mode !== \"execution\") {\r\n            properties.data = self.getDummyData();\r\n        }\r\n\r\n        var template = self.getGridTemplate();\r\n\r\n        // Render template\r\n        var html = self.applyTemplate(template);\r\n\r\n        // Initialize columns\r\n        var columnInitializers = [];\r\n        $.each(self.columns, function (i, column) {\r\n\r\n            // Add to column initializer array so we can synch out the promises\r\n            var result = column.initialize();\r\n            if (result)\r\n                columnInitializers.push(result);\r\n        });\r\n\r\n        // Resolve when all columns has been loaded\r\n        $.when.apply($, columnInitializers).done(function () {\r\n            defer.resolve(html);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n    /*\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Call base\r\n        this._super();\r\n\r\n        // Make control to behave as a block container\r\n        // TODO: Move to instances. This does not apply to mobiles\r\n        control.addClass(\"ui-bizagi-render-grid-container\")\r\n            .addClass(\"ui-bizagi-render-display-block\");\r\n    },\r\n\r\n    /*\r\n     *   Returns the grid template to be used\r\n     */\r\n    getGridTemplate: function () {\r\n        return this.renderFactory.getTemplate(\"grid\");\r\n    },\r\n\r\n    /*\r\n     *   Applies the template to the render and returns the resolved element\r\n     */\r\n    applyTemplate: function (template) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        orientation = self.properties.orientation;\r\n\r\n        return $.fasttmpl(template, {\r\n            id: bizagi.util.encodeXpath(properties.xpath),\r\n            displayName: bizagi.util.encodeXpath(properties.displayName),\r\n            allowAdd: properties.allowAdd,\r\n            addLabel: properties.addLabel\r\n        });\r\n    },\r\n    /*\r\n     *   Method to render non editable values\r\n     *   Returns a promise that will be resolved when all the columns has been loaded\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n\r\n        // Override read-only presets\r\n        //  properties.allowAdd = false;\r\n        // Render the same, just change some presets\r\n        return self.renderControl();\r\n    },\r\n    /*\r\n     *   Fetch the data into a deferred\r\n     */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set params\r\n        params = params || {};\r\n        $.extend(params, {\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType,\r\n            idPageCache: properties.idPageCache,\r\n            sort: properties.sortBy,\r\n            order: properties.sortType,\r\n            page: properties.page,\r\n            rows: properties.rowsPerPage,\r\n            searchFilter: properties.searchFilter,\r\n            orientation: properties.orientation || \"ltr\"\r\n        });\r\n\r\n        // Check if a custom method has been given\r\n        if (properties.overrideGetRemoteData) {\r\n            return properties.overrideGetRemoteData(params);\r\n        } else {\r\n            // Resolve with remote data\r\n            return self.dataService.multiaction().getGridData(params).then(function (data) {\r\n                self.originalData = self.originalData || {};\r\n                self.originalData.data = bizagi.clone(data);\r\n\r\n                // Resolve with fetched data\r\n                properties.page = data.page;\r\n                properties.records = data.records;\r\n                properties.totalPages = data.totalPages;\r\n\r\n                return data;\r\n            });\r\n        }\r\n    },\r\n    /*\r\n     insert a blank item in the selected column in the data matrix\r\n     */\r\n    spliceRowData: function (data, index) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        if (mode === \"execution\" && (data && data.rows)) {\r\n            $.each(data.rows, function (key, value) {\r\n                var spliceIndex = index || data.rows[key].length;\r\n                data.rows[key].splice(spliceIndex, 0, \"\");\r\n            });\r\n        }\r\n    },\r\n\r\n    spliceRowDataVisible: function(data, index) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        if (mode === \"execution\" && (data && data.visible)) {\r\n            $.each(data.visible, function (key, value) {\r\n                var spliceIndex = index || data.visible[key].length;\r\n                data.visible[key].splice(spliceIndex, 0, true);\r\n            });\r\n        }\r\n    },\r\n\r\n    spliceRowDataEditable: function(data, index) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        if (mode === \"execution\" && (data && data.editable)) {\r\n            $.each(data.editable, function (key, value) {\r\n                var spliceIndex = index || data.editable[key].length;\r\n                data.editable[key].splice(spliceIndex, 0, true);\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n     *   Creates a set of dummy data in order to display it when rendering in design or layout mode\r\n     */\r\n    getDummyData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (properties.data) {\r\n            return properties.data;\r\n\r\n        } else {\r\n            var rowTemplate = [\"1\"];\r\n\r\n            // Add a value for each column\r\n            for (var i = 0; i < self.columns.length; i++) {\r\n                rowTemplate.push(\"\");\r\n            }\r\n\r\n            var data = {\r\n                \"page\": 1,\r\n                \"total\": 1,\r\n                \"records\": 1,\r\n                \"rows\": [rowTemplate]\r\n            };\r\n\r\n            return data;\r\n        }\r\n    },\r\n    /*\r\n     *   Submits a grid edit record request for the given id\r\n     *   Returns a deferred\r\n     */\r\n    submitEditRequest: function (id) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var xpath = properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n        return self.dataService.editGridRecord({\r\n            url: properties.editUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType\r\n        });\r\n    },\r\n    /*\r\n     *   Submits a grid edit record request for the given id\r\n     *   Returns a deferred\r\n     */\r\n    submitSaveRequest: function (id, data) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        // Check if there are deferreds to wait\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        // Calculate xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + properties.xpath + self.buildCellXpathFilter(id) : properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n        return $.when(deferredsToWait).pipe(function () {\r\n            self.startLoading();\r\n            return self.dataService.saveGridRecord({\r\n                url: properties.saveUrl,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: xpathContext,\r\n                submitData: data,\r\n                contexttype: properties.contextType,\r\n                disableServerGridValidations: data.disableServerGridValidations || false\r\n            }).pipe(function (dataResp) {\r\n                self.endLoading();\r\n                return dataResp;\r\n            }).fail(function (dataFail) {\r\n                var form = self.getFormContainer();\r\n                var message = (dataFail.responseText) ? dataFail.responseText : ((typeof dataFail == \"string\") ? dataFail : dataFail.toString());\r\n                //Convert String to object\r\n                if (typeof message == \"string\") {\r\n                    try {\r\n                        message = JSON.parse(message).message;\r\n                    } catch (e) {\r\n                        message = message.match(/\"message\":(.*)\",/)[0];\r\n                        message = message.substr(11, message.length - 13);\r\n                    }\r\n\r\n                } else if (!message.message) {\r\n                    message = dataFail;\r\n                }\r\n                form.validateForm();\r\n                form.clearValidationMessages();\r\n                form.addValidationMessage(message);\r\n            });\r\n        });\r\n    },\r\n    /*\r\n     *   Submits a grid delete record request for the given id\r\n     *   Returns a deferred\r\n     */\r\n    submitDeleteRequest: function (id) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var xpath = properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n        return self.dataService.deleteGridRecord({\r\n            url: properties.deleteUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType\r\n        }).pipe(function (data) {\r\n            if (data.type == \"validationMessages\") {\r\n                var form = self.getFormContainer();\r\n                var message = data.messages.join(\" \");\r\n                form.failHandler({message: message});\r\n            }\r\n\r\n            return data;\r\n        });\r\n    },\r\n    /*\r\n     *   Submits a grid add record request\r\n     *   Returns a deferred when done, the server returns an id for the new record\r\n     */\r\n    submitAddRequest: function () {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var request = self.dataService.addGridRecord({\r\n            url: properties.addUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType,\r\n            idPageCache: properties.idPageCache\r\n        });\r\n\r\n        var filterResponse = request.pipe(function (data) {\r\n            // Parses response\r\n            return data.idEntity;\r\n        });\r\n\r\n        return filterResponse.promise();\r\n    },\r\n    /*\r\n     *   Submits a grid rollback request\r\n     *   Returns a deferred when done\r\n     */\r\n    submitRollbackRequest: function (params) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        return self.dataService.rollbackGridAction({\r\n            url: properties.rollbackUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: params ? params.idPageCache : properties.idPageCache,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        });\r\n    },\r\n    /*\r\n     *   Collect a single cell change made in the grid to send the data when the user saves the form\r\n     */\r\n    collectGridChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        var id = params.id;\r\n        var xpath = params.xpath;\r\n        var value = params.value;\r\n        var trigger = typeof (params.trigger) !== \"undefined\" ? params.trigger : true;\r\n        var isPressed = params.pressed || false;\r\n\r\n        self.changes[id] = self.changes[id] || {};\r\n        self.changes[id][xpath] = value;\r\n\r\n        if (trigger)\r\n            self.triggerRenderChange({key: id, column: xpath, pressed: isPressed});\r\n    },\r\n    /*\r\n     *   Configures a column to perform a submit on change when the user changes a cell\r\n     */\r\n    configureColumnSubmitOnChange: function (xpath) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Build action\r\n        var action = {\r\n            commands: [{\r\n                xpath: properties.xpath,\r\n                command: 'submit-value',\r\n                argument: 'all'\r\n            }],\r\n            conditions: {\r\n                operator: 'and',\r\n                expressions: [\r\n                    {\r\n                        simple: {\r\n                            operator: 'cell-change',\r\n                            xpath: properties.xpath + '[].' + xpath,\r\n                            argumentType: 'text',\r\n                            argument: xpath\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            dependencies: [properties.xpath]\r\n        };\r\n\r\n        // Add action when form ends its rendering\r\n        $.when(self.ready())\r\n            .done(function () {\r\n                var form = self.getFormContainer();\r\n                form.addSubmitAction(xpath, action);\r\n            });\r\n    },\r\n    /*\r\n     *   Add the render data to the given collection in order to send data to the server\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var keysToDelete = [];\r\n\r\n        if (self.exclusiveChanges) {\r\n            //Add filter to parse all checks in tru to false. DON'T CHANGE CODE ORDER\r\n            for (var xpath in self.exclusiveChanges) {//Brings the xpath columns with changes\r\n                var columnExclusiveChanges = self.exclusiveChanges[xpath];\r\n                var columnEnabledChecks = self.enabledChecks[xpath];\r\n                if (columnExclusiveChanges && columnEnabledChecks) {\r\n                    // If there are any change, its needed to include as a change the filter to set all rows in false\r\n                    var xpathExclusiveFilter = properties.xpath + \"[\" + xpath + \"=true].\" + xpath;\r\n                    renderValues[xpathExclusiveFilter] = false;                    \r\n                }\r\n            }\r\n        }\r\n\r\n        for (var id in self.changes) {\r\n            // Dont collect data from totalizers \r\n            if (id != \"summary\") {\r\n                for (var columnXpath in self.changes[id]) {\r\n                    // Check if the render can submit data\r\n                    if (self.canColumnBeSent(id, columnXpath)) {\r\n                        var xpath = properties.xpath + self.buildCellXpathFilter(id) + \".\" + columnXpath;\r\n                        var value = self.changes[id][columnXpath];\r\n\r\n                        renderValues[xpath] = value;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Clean changes \r\n            keysToDelete.push(id);\r\n\r\n        }\r\n        //If any exclusive check is true, set the new value in renderValues. DON'T CHANGE CODE ORDER\r\n        if (self.exclusiveChanges) {\r\n            for (var xpath in self.exclusiveChanges) {//Brings the xpath columns with changes\r\n                var columnExclusiveChanges = self.exclusiveChanges[xpath];\r\n                var columnEnabledChecks = self.enabledChecks[xpath];\r\n                if (columnExclusiveChanges && columnEnabledChecks) {\r\n                    var checkedObject = self.exclusiveChanges[xpath];                    \r\n                    if (checkedObject && checkedObject.value){\r\n                        var columnSimpleXpathEnabled = properties.xpath + self.buildCellXpathFilter(checkedObject.key) + \".\" + xpath;                                                    \r\n                        renderValues[columnSimpleXpathEnabled] = checkedObject.value;                \r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Clean changes array in order to prevent duplicate data\r\n        // when execute SUBMITDATA in multiaction, that make and error\r\n        // in circular dependencies, specially when we add inline record\r\n        $.each(keysToDelete, function (key, v) {\r\n            delete self.changes[v];\r\n        });\r\n    },\r\n\r\n    hasChanged: function (result) {\r\n        var self = this;\r\n        if (!$.isEmptyObject(self.changes)) {\r\n            result.push(true);\r\n            return true;\r\n        } else {\r\n            if (!$.isEmptyObject(self.exclusiveChanges)) {\r\n                result.push(true);\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n     *   Check if a column data can be sent to the server\r\n     */\r\n    canColumnBeSent: function (id, columnXpath) {\r\n        var self = this, i, j, xpath;\r\n        for (i in self.columns) {\r\n            if (self.columns.hasOwnProperty(i)) {\r\n                var column = self.columns[i];\r\n                if (column.properties.type !== \"columnUserfield\") {\r\n                    if (column.properties.xpath == columnXpath) {\r\n                        var cellOverride = self.getCellOverride(id, column.columnIndex - 1);\r\n                        return column.canBeSent(id, cellOverride);\r\n                    }\r\n                } else {\r\n                    for (j in column.properties) {\r\n                        if (column.properties.hasOwnProperty(j)) {\r\n                            if (Object.prototype.toString.apply(column.properties[j]) === \"[object String]\") {\r\n                                xpath = column.properties[j].substr(column.properties[j].lastIndexOf(\".\") + 1);\r\n                                if (xpath === columnXpath) {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n    /* \r\n     *  Method to determine if the render value can be sent to the server or not\r\n     */\r\n    canBeSent: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var displayOnly = bizagi.util.parseBoolean(properties.displayOnly) || false;\r\n\r\n        // The render can be sent if it is \"display only\" and inline Edit is available\r\n        if (!displayOnly && (properties.inlineEdit || properties.inlineAdd || !$.isEmptyObject(self.changes))) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    /*\r\n     *   Return the value for a requested cell\r\n     */\r\n    getCellValue: function (key, xpath) {\r\n        var self = this;\r\n        var data = self.properties.data.rows;\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (data[i][0] == key) {\r\n                for (var j = 0; j < self.columns.length; j++) {\r\n                    if (self.columns[j].properties.xpath == xpath) {\r\n                        var result = data[i][j + 1];\r\n                        return result;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n     *\r\n     */\r\n    getCellCurrentValue: function (key, xpath) {\r\n        var self = this;\r\n\r\n        var control = self.getControlCell(key, xpath);\r\n        if (control && typeof control.getValue === \"function\") {\r\n            return control.getValue();\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n     *   Gets control\r\n     */\r\n    getControlCell: function (key, xpath) {\r\n        var self = this;\r\n        var control = null;\r\n        if (typeof (self.columns) != \"undefined\")\r\n            for (var j = 0; j < self.columns.length; j++) {\r\n                if (\r\n                    self.columns[j].properties.xpath == xpath || \r\n                    self.columns[j].properties.id == xpath ||\r\n                    self.columns[j].properties.xpath + \".\" + self.columns[j].properties.id == xpath \r\n                ) {\r\n                    control = self.columns[j].getDecorated(key);\r\n                    break;\r\n                }\r\n            }\r\n\r\n\r\n        return control;\r\n    },\r\n\r\n    changeRequired: function (argument) {\r\n        this.properties.required = argument;\r\n        this.changeRequiredLabel(argument);\r\n    },\r\n\r\n    changeRequiredLabel: function (argument) {\r\n        var control = this.getControl();\r\n\r\n        if (control.length > 0) {\r\n            if (this.getMode() !== \"execution\") {\r\n                if (bizagi.util.parseBoolean(argument) == true && this.properties.editable) {\r\n                    control.addClass(\"grid-control-required\");\r\n                } else {\r\n                    control.removeClass(\"grid-control-required\");\r\n                }\r\n            } else {\r\n                if (bizagi.util.parseBoolean(argument) == true && !this.hasValue() && this.properties.editable) {\r\n                    control.addClass(\"grid-control-required\");\r\n                } else {\r\n                    control.removeClass(\"grid-control-required\");\r\n                }\r\n            }\r\n        }\r\n\r\n        this.triggerRenderValidate();\r\n    },\r\n\r\n    /*\r\n     *   Fetch the data again and updates the content\r\n     */\r\n    refresh: function () {\r\n    },\r\n    /*\r\n     *   Sets an error on the cell\r\n     */\r\n    setError: function (key, columnXpath) {\r\n    },\r\n    /*\r\n     *   Changes the background for a cell\r\n     */\r\n    changeCellBackgroundColor: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *   Changes the background for a cell\r\n     */\r\n    changeCellColor: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *   Changes the visibility for a cell\r\n     */\r\n    changeCellVisibility: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *   Changes the editability for a cell\r\n     */\r\n    changeCellEditability: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *  Changes the required for cell\r\n     */\r\n    changeCellRequired: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *  Refresh behaviors of cell\r\n     */\r\n    changeCellProperties: function (key, xpath, argument) {\r\n\r\n    },\r\n    /*\r\n     *  Changes the max value for a cell\r\n     */\r\n    changeCellMaxValue: function (key, xpath, argument) {\r\n\r\n    },\r\n    /*\r\n     *  Changes the min value for a cell\r\n     */\r\n    changeCellMinValue: function (key, xpath, argument) {\r\n\r\n    },\r\n    /*\r\n     *  Clean data of cell\r\n     */\r\n    cleanCellData: function (key, xpath) {\r\n    },\r\n\r\n    changeEditability: function (argument) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        self.saveGrid().done(function () {\r\n\r\n            // Renders again\r\n            var tmpEditable = argument == \"Default\" ? self.originalProperties.editable: bizagi.util.parseBoolean(argument);\r\n            var properties = {properties: $.extend({editable: tmpEditable}, self.originalData)};\r\n\r\n            // Clears control\r\n            control.empty();\r\n\r\n            bizagi.rendering.render.prototype.initializeData.apply(self, [properties]);\r\n\r\n            self.initProperties();\r\n            self.changeColumnsEditability(argument);\r\n\r\n            if (typeof self.internalRenderControl == \"function\") {\r\n                $.when(self.internalRenderControl()).done(function (html) {\r\n                    control.append(html);\r\n                    self.postRenderElement(self.element);\r\n                });\r\n\r\n            }\r\n\r\n        });\r\n\r\n    },\r\n\r\n    saveGrid: function () {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n\r\n        var rows = $(\"[data-bizagi-component=rows]\", self.element).find(\"[data-new-row=true]\");\r\n        if (rows.length > 0) {\r\n            rows = $.map(rows, function (row, i) {\r\n                return $(row).data(\"business-key\");\r\n            });\r\n            self.saveInlineAddedRows(rows).done(function () {\r\n                defer.resolve();\r\n            });\r\n        } else {\r\n            defer.resolve();\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    changeColumnsEditability: function (value) {\r\n        var self = this;\r\n        var columns = self.columns || [];\r\n\r\n        $.each(columns, function (i, column) {\r\n            column.properties.editable = value == \"Default\" ? column.originalProperties.editable :  bizagi.util.parseBoolean(value);\r\n        });\r\n    },\r\n\r\n    /**\r\n     *   Refresh behaviors of cell\r\n     */\r\n    refreshCell: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var key = params.key;\r\n        var column = params.column;\r\n        var xpathContext = (params.xpathContext !== \"\") ? params.xpathContext + \".\" + self.properties.xpath + self.buildCellXpathFilter(key) : self.properties.xpath + self.buildCellXpathFilter(key);\r\n        var cell = self.getControlCell(key, params.column);\r\n        var form = self.getFormContainer();\r\n        var idForm = form.properties.id;\r\n\r\n        if (!cell) {\r\n            return;\r\n        }\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        cell.beforeToRefresh();\r\n\r\n        // Call service\r\n        return $.when(self.dataService.multiaction().refreshGridCell({\r\n            idRender: properties.id,\r\n            column: cell.properties.id,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: xpathContext,\r\n            idForm: idForm,\r\n            typeRender: cell.properties.type\r\n        })).done(function (data) {\r\n            // Extract values\r\n            var getDepthData = function (target) {\r\n                if (target && typeof target == \"object\" && target.length >= 1) {\r\n                    return (target[0].length >= 1) ? target[0][0] : target[0];\r\n                }\r\n                return \"\";\r\n            };\r\n            var newValue = getDepthData(data.rows);\r\n            var editable = getDepthData(data.editable);\r\n            if (!bizagi.util.isBoolean(editable)) {\r\n                editable = editable || true;\r\n            }\r\n            var visible = getDepthData(data.visible);\r\n            if (!bizagi.util.isBoolean(visible)) {\r\n                visible = visible || true;\r\n            }\r\n            \r\n            // Change Visibility & Editability\r\n            self.changeCellVisibility(key, column, visible);\r\n            self.changeCellEditability(key, column, editable);\r\n\r\n            // Change control value\r\n            cell.setValue(newValue);\r\n            cell.setDisplayValue(newValue);\r\n\r\n            // Trigger grid change\r\n            self.triggerRenderChange({key: key, column: column, changed: false});\r\n\r\n            // Update the affected cell manually after a refresh\r\n            //TODO:temporary solution\r\n            //review the DRAGON-5982 \r\n            if (cell.column != undefined && bizagi.util.detectDevice() == \"desktop\") {\r\n                self.updateAffectedCellManually(key, newValue, cell.column.columnIndex);\r\n            }\r\n\r\n            // Execute personalized stuff after to refresh it\r\n            self.afterToRefresh({ action: \"refreshCell\" });\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Triggers the render change event\r\n     */\r\n    triggerRenderChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        // Property to verify exporting updated grids\r\n        if (!bizagi.util.isEmpty(params) && params.changed != false)\r\n            self.properties.canBeExported = false;\r\n        self.triggerHandler(\"renderchange\", {\r\n            render: self,\r\n            surrogateKey: params.key,\r\n            column: params.column,\r\n            changed: params.changed,\r\n            rowDeleted: params.rowDeleted,\r\n            pressed: params.pressed\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Validate the grid\r\n     */\r\n    validate: function () {\r\n        this.isValid([]);\r\n    },\r\n    /* \r\n     * Public method to determine if a value is valid or not\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var bValid = true;\r\n\r\n        // Clear error message\r\n        self.hasErrors = false;\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check for required columns and null values\r\n        if (self.properties.data && self.properties.data.rows) {\r\n            var newRows = self.getDataNewRows();\r\n            // Preserve elements in data.rows\r\n            // Check required\r\n            if (newRows.length == 0 && bizagi.util.parseBoolean(self.properties.required)) {\r\n                if (!self.hasValue()) {\r\n                    message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", self.properties.displayName);\r\n                    invalidElements.push({\r\n                        xpath: self.properties.xpath,\r\n                        message: message\r\n                    });\r\n                    bValid = false;\r\n                }\r\n            }\r\n\r\n            var data = $.merge($.merge([], self.properties.data.rows), newRows);\r\n\r\n            for (var i = 0; i < self.columns.length; i++) {\r\n                var messages = [];\r\n                var uniqueMessages = {};\r\n\r\n                for (var j = 0; j < data.length; j++) {\r\n                    var value = data[j][i + 1];\r\n                    var key = data[j][0];\r\n                    var xpath = self.columns[i].properties.xpath;\r\n                    if (self.changes[key] !== undefined && self.changes[key][self.columns[i].properties.xpath] !== undefined) {\r\n                        value = self.changes[key][self.columns[i].properties.xpath];\r\n                    }\r\n\r\n                    // Check if the column is valid\r\n                    var valueValid = self.columns[i].isValueValid(key, value, messages, self.getCellOverride(key, i));\r\n                    if (!valueValid) {\r\n                        bValid = false;\r\n\r\n                        self.hasErrors = true;\r\n                        self.setError(key, self.columns[i].properties.xpath);\r\n                    }\r\n                }\r\n                for (var k = 0, messagesLength = messages.length; k < messagesLength; k++) {\r\n                    if (uniqueMessages[messages[k]] == null) {\r\n                        uniqueMessages[messages[k]] = messages[k];\r\n                    }\r\n                }\r\n\r\n                if (messages.length > 0) {\r\n                    var gridValidationMessage = self.getResource(\"render-grid-validation\").replaceAll(\"#grid#\", self.properties.displayName);\r\n                    for (key in uniqueMessages) {\r\n                        invalidElements.push({\r\n                            xpath: self.properties.xpath,\r\n                            message: gridValidationMessage + \" \" + key\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n    /*\r\n     *   Enables submit on change feature for the current render\r\n     */\r\n    configureSubmitOnChange: function () {\r\n        // Don't do anything we will trigger submit on change manually only when the grid add or edit form has been edited   \r\n    },\r\n    /*\r\n     *   Get cell override\r\n     */\r\n    getCellOverride: function (key, column) {\r\n        var self = this;\r\n\r\n        // Convert to numbers\r\n        key = Number(key);\r\n        column = Number(column);\r\n\r\n        // Find overrides\r\n        var columnProperties = self.columns[column].properties;\r\n        if (!self.cellOverrides[key])\r\n            self.cellOverrides[key] = {};\r\n        if (!self.cellOverrides[key][column]) {\r\n            self.cellOverrides[key][column] = {\r\n                visible: columnProperties.visible,\r\n                editable: columnProperties.editable,\r\n                required: columnProperties.required\r\n            };\r\n        }\r\n\r\n        return self.cellOverrides[key][column];\r\n    },\r\n\r\n    /*\r\n     * Set cell overrides based on the data\r\n     */\r\n    setCellOverrides: function (data, columns) {\r\n        var self = this;\r\n        var key;\r\n\r\n        // Init visibility overrides\r\n        if (data.visible) {\r\n            for (var i = 0, len = data.visible.length; i < len; i++) {\r\n                key = data.visible[i][0];\r\n                for (var j = 0, len_v = data.visible[i].length; j < len_v; j++) {\r\n                    // Skip key columns\r\n                    if (j > 0)\r\n                        self.getCellOverride(key, j - 1).visible = bizagi.util.parseBoolean(data.visible[i][j]);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Init editability overrides\r\n        if (data.editable) {\r\n            for (var i = 0, len = data.editable.length; i < len; i++) {\r\n                key = data.editable[i][0];\r\n                for (var j = 0, len_v = data.editable[i].length; j < len_v; j++) {\r\n                    // Skip key columns\r\n                    if (j > 0) {\r\n                        var columnEditable = columns ? bizagi.util.parseBoolean(columns[j - 1].properties.editable) : true;\r\n                        self.getCellOverride(key, j - 1).editable = columnEditable ? bizagi.util.parseBoolean(data.editable[i][j]) : false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Init required overrides\r\n        if (data.required) {\r\n            for (var i = 0, len = data.required.length; i < len; i++) {\r\n                key = data.required[i][0];\r\n                for (var j = 0, len_v = data.required[i].length; j < len_v; j++) {\r\n                    // Skip key columns\r\n                    if (j > 0)\r\n                        self.getCellOverride(key, j - 1).required = bizagi.util.parseBoolean(data.required[i][j]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*\r\n     *   Returns the row indexes for the data\r\n     */\r\n    getIndexes: function () {\r\n        var self = this;\r\n        var data = $.merge(self.properties.data.rows, self.getDataNewRows());\r\n        return $.map(data, function (item, i) {\r\n            return item[0];\r\n        });\r\n    },\r\n    /**\r\n     *  Return object with value of all new records unsaved within the grid\r\n     *  @return {object} all new records\r\n     */\r\n    getDataNewRows: function () {\r\n        var self = this;\r\n        var newRows = [];\r\n\r\n        if (typeof self.newRecords == \"object\" && !$.isEmptyObject(self.newRecords)) {\r\n            $.each(self.newRecords, function (rowKey) {\r\n                var cellValue = [];\r\n                cellValue.push(Number(rowKey));\r\n                for (var i = 0, length = self.columns.length; i < length; i++) {\r\n                    cellValue.push(self.getCellCurrentValue(rowKey, self.columns[i].properties.xpath));\r\n                }\r\n                // Add cell value row to new rows\r\n                newRows.push(cellValue);\r\n            });\r\n        }\r\n        return newRows;\r\n    },\r\n\r\n    /*\r\n     * Return the object with the required url to access the exported grid to the desired format\r\n     *  @return {object} render attributes, including id, xpathContext, idPagecache, disposition (inline or attachment), and exportType (XLS or PDF)\r\n     */\r\n    getGridExportUrl: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.getGridExportUrl({\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext || \"\",\r\n            idPageCache: properties.idPageCache,\r\n            disposition: params.disposition,\r\n            exportType: params.exportType,\r\n            sort: properties.sort,\r\n            sessionId: self.getSessionId(),\r\n            idForm: self.getFormContainer().properties.id\r\n\r\n        });\r\n    },\r\n\r\n    submitForGridChange: function () {\r\n        var self = this;\r\n        return self.submitOnChange(null, false);\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self.columns) {\r\n                $.each(self.columns, function (i, column) {\r\n                    column.dispose();\r\n                });\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    },\r\n\r\n    getEnabledChecks: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        params = params || {};\r\n        $.extend(params, {\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType,\r\n            idPageCache: properties.idPageCache,\r\n            rows: properties.rowsPerPage,\r\n            xpathfilter: params.xpath\r\n        });\r\n        // Default ajax call\r\n        var defer = new $.Deferred();\r\n        // Resolve with remote data\r\n        self.dataService.multiaction().getGridDataExclusivesSelected(params).done(function (data) {\r\n            // Resolve with fetched data\r\n            properties.page = data.page;\r\n            properties.records = data.records;\r\n            properties.totalPages = data.totalPages;\r\n\r\n            // Check RTL\r\n            if (self.isRTL()) {\r\n                data.rows = self.changeOrderData(data.rows);\r\n            }\r\n            defer.resolve(data);\r\n        });\r\n        return defer.promise();\r\n    },\r\n\r\n    buildCellXpathFilter: function (key) {\r\n        if (bizagi.util.isNumeric(key)) return \"[id=\" + key + \"]\";\r\n        return \"[id='\" + key + \"']\";\r\n    },\r\n\r\n    cleanNewRecords: function () {\r\n        // Mark it as saved\r\n        this.newRecords = {};\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Customizes render background color\r\n     *\r\n     * This method is called when the backgroud color is setted by Form Designer\r\n     *\r\n     * @param color\r\n     */\r\n    changeBackgroundColor: function (color) {\r\n        this._super(color);\r\n\r\n        var control = this.getControl();\r\n        control.find(\".bz-rn-grid-header-title\").css(\"background-color\", color, \"!important\");\r\n        control.find(\".bz-rn-grid-container-foother\").css(\"background-color\", color, \"!important\");\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Check has header format\r\n     * @returns {boolean}\r\n     */\r\n    hasColorHeader: function () {\r\n        var headerFormat = this.properties.headerFormat || {};\r\n\r\n        return headerFormat ? !bizagi.util.isEmpty(headerFormat.color) : false;\r\n    },\r\n\r\n    /**\r\n     * Check if the orientation is RTL\r\n     * @param parent\r\n     * @param orientation\r\n     * @returns {*|boolean|boolean}\r\n     */\r\n    isRTLOrientation: function(parent, orientation){\r\n        if ((!orientation || orientation === \"auto\") && parent) {\r\n            return this.isRTLOrientation(parent.parent, parent.properties.orientation);\r\n        }\r\n\r\n        return /^rtl$/i.test(orientation);\r\n    },\r\n\r\n    /**\r\n     * Check If has changes for send to server\r\n     * @returns {boolean}\r\n     */\r\n    canBeExport: function () {\r\n        var self = this;\r\n        var renderValues = {};\r\n\r\n        for (var id in self.changes) {\r\n            // Don't collect data from totalizers\r\n            if (id !== \"summary\") {\r\n                for (var columnXpath in self.changes[id]) {\r\n                    // Check if the render can submit data\r\n                    if (self.canColumnBeSent(id, columnXpath)) {\r\n                        var xpath = self.properties.xpath + self.buildCellXpathFilter(id) + \".\" + columnXpath;\r\n                        var value = self.changes[id][columnXpath];\r\n\r\n                        renderValues[xpath] = value;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return Object.keys(renderValues).length === 0;\r\n    }, \r\n    getExclusiveChangeByRow: function(idRow){\r\n        var value = {};\r\n        for (var xpath in this.enabledChecks) {\r\n            if (this.enabledChecks.hasOwnProperty(xpath)) {\r\n                var obj = (this.enabledChecks[xpath] || []).find(function(el){\r\n                    return el.id == idRow && el.changed;\r\n                });\r\n                if (obj){\r\n                    value[xpath] = obj.value;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    },\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Hidden Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for hiddens\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.hidden\", {}, {\r\n\r\n    /**\r\n     * Returns the in-memory processed element\r\n     */\r\n    renderControl: function () {\r\n        if (this.getMode() === \"design\") {\r\n            return \"<div>\" + bizagi.localization.getResource(\"render-hidden-displayName\") + \"</div>\";\r\n        } else {\r\n            return \"<div />\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var properties = this.properties;\r\n\r\n        // Call base\r\n        this._super();\r\n\r\n        // Set the initial value\r\n        if (properties.value !== undefined) {\r\n            this.setDisplayValue(properties.value);\r\n        }\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Label Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for labels\r\n */\r\n$.Class.extend(\"bizagi.rendering.label\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // A label itself is never \"required\" as other controls\r\n        var properties = self.properties;\r\n        properties.required = false;\r\n\r\n        // Set properties\r\n        self.properties.displayType = \"label\";\r\n        //self.properties.labelAlign = self.originalProperties.labelAlign || \"left\";\r\n        self.properties.displayName = data.properties.displayName || \"\";\r\n\r\n        if (bizagi.util.parseBoolean(self.properties.allowDinamiclabel)) {\r\n            this.properties.displayName = data.properties.displayName || bizagi.localization.getResource(\"render-label-default-display-name\");\r\n        }\r\n\r\n        self.bindingValue();\r\n\r\n        // Calculate layout properties\r\n        self.calculateInitialLayoutProperties();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();\r\n        // Just apply display-type: label, align it to the left\r\n        this.changeDisplayOption(\"label\");\r\n        //this.changeLabelAlign(this.properties.labelAlign || \"left\");\r\n\r\n        if (typeof this.configureHelpText == \"function\")\r\n            this.configureHelpText();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this._super();\r\n        // Just apply display-type: label, align it to the left\r\n        this.changeDisplayOption(\"label\");\r\n        this.changeLabelAlign(this.properties.labelAlign || \"left\");\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param {} invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Automatically this render is valid, so we can't check a required label\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    bindingValue: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.allowDinamiclabel && self.properties.value) {\r\n            if (typeof (self.properties.value) === \"object\" && self.properties.value[0]) {\r\n                self.properties.displayName = self.properties.value[0].value;\r\n            } else if (typeof (self.properties.value) === \"string\" && self.properties.value !== \"\") {\r\n                self.properties.displayName = self.properties.value;\r\n            }\r\n        }\r\n    },\r\n\r\n    controlValueIsChanged: function(){\r\n        //Labels never change\r\n        return false;\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: Bizagi Render Search Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for search renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.search\", {}, {\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        properties.searchForms = properties.searchForms || [];\r\n\r\n        // Default maxRecords is 20\r\n        properties.maxRecords = Number(properties.maxRecords) || 20;\r\n        properties.advancedSearch = (bizagi.util.parseBoolean(properties.advancedSearch) === null) ? false : bizagi.util.parseBoolean(properties.advancedSearch);\r\n        properties.allowSuggest = bizagi.util.parseBoolean(properties.allowSuggest) !== null ? bizagi.util.parseBoolean(properties.allowSuggest) : false;\r\n        properties.allowFullSearch = properties.allowFullSearch || false;\r\n        properties.allowAdd = bizagi.util.parseBoolean(properties.allowAdd) || false;\r\n        properties.allowTyping = bizagi.util.parseBoolean(properties.allowTyping) !== null ? bizagi.util.parseBoolean(properties.allowTyping) : false;\r\n        properties.allowTyping = bizagi.util.parseBoolean(properties.allowSuggest) ? true : properties.allowTyping;\r\n        properties.allowClear = bizagi.util.parseBoolean(properties.allowClear) !== null ? bizagi.util.parseBoolean(properties.allowClear) : false;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) !== null ? bizagi.util.parseBoolean(properties.editable) : true;\r\n\r\n        // This length defines the behavior of the suggest, 2 characters are used by default meaning after 2 characters are written the search will take place\r\n        properties.searchLength = properties.searchLength || 2;\r\n\r\n        // Expire local storage cache\r\n        properties.enableLocalStorage = false;\r\n        properties.expireCache = 1000 * 60 * 15; // 15 minutes\r\n\r\n        // QAF-3297 - Compatibility for old versions of advanced search where the \"submitOnChange\" property default is true\r\n        // New \"submitVersion\" property default is 2\r\n        if (properties.advancedSearch && self.getMode() === \"execution\") {\r\n            properties.submitOnChange = bizagi.util.parseBoolean(properties.submitOnChange) || false;\r\n            properties.submitOnChange = (properties.submitVersion || 1) > 1 ? properties.submitOnChange : true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"search\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            allowTyping: properties.allowTyping,\r\n            advancedSearch: properties.advancedSearch,\r\n            allowSuggest: properties.allowSuggest,\r\n            editable: properties.editable,\r\n            allowClear: properties.allowClear,\r\n            hasValue: self.hasValue(),\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Fetch the data into a deferred\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    getData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        var form = self.getFormContainer();\r\n        var contextType = form.getContextType() || form.params.contexttype || false;\r\n\r\n        params = params || {};\r\n\r\n        // Verify context type\r\n        if (self.properties.contexttype) {\r\n            params.h_contexttype = self.properties.contexttype;\r\n        } else if (contextType) {\r\n            params.h_contexttype = contextType;\r\n        }\r\n\r\n        params.h_contexttype = self.properties.enableQuerySuggestBehavior ? \"metadata\" : params.h_contexttype;\r\n\r\n        // QA-471 When the contexttype is metadata it does not send xpathcontext\r\n        if (params && params.h_contexttype && params.h_contexttype === 'metadata') {\r\n            properties.xpathContext = '';\r\n        }\r\n\r\n        // BA35025 - JFA\r\n        if (properties.term.indexOf(\"\\'\") > -1) {\r\n            var regexC = new RegExp(\"\\'\", \"g\");\r\n            properties.term = properties.term.replace(regexC, \"\\\\'\\\\'\");\r\n        }\r\n\r\n        // QAF-6448 - JFA\r\n        if (properties.term.indexOf(\"\\\"\") > -1) {\r\n            var regexC = new RegExp(\"\\\"\", \"g\");\r\n            properties.term = properties.term.replace(regexC, \"\\\"\");\r\n        }\r\n\r\n        // Resolve with remote data\r\n        self.dataService.multiaction().getSearchData({\r\n            url: properties.dataUrl,\r\n            contexttype: params.h_contexttype,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            term: (properties.allowFullSearch) ? \"%\" + properties.term : properties.term,\r\n            extra: params\r\n        }).done(function (data) {\r\n            // Resolve with fetched data\r\n            properties.data = data;\r\n            defer.resolve(properties.data);\r\n        }).fail(function (data) {\r\n            var hideStatus = data.hideStatus || false;\r\n\r\n            defer.resolve({});\r\n\r\n            if (!hideStatus) {\r\n                self.trigger(\"onSearchError\", data);\r\n            }\r\n        });\r\n\r\n        return defer.promise(defer);\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param {} value\r\n     * @param {} triggerEvents\r\n     * @returns {}\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        triggerEvents = triggerEvents !== undefined ? triggerEvents : true;\r\n\r\n        self._super(value, triggerEvents);\r\n\r\n        if (value != undefined) {\r\n            this.value = value;\r\n            this.selectedValue = value.label;\r\n        } else {\r\n            this.value = null;\r\n            this.selectedValue = null;\r\n        }\r\n    },\r\n\r\n    /* Maps the value, when this one comes from actions*/\r\n    mapValue: function (value) {\r\n        if (value && value.fromAction) {\r\n            return {\r\n                id: value.value,\r\n                value: value.label,\r\n                label: value.label\r\n            }\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var xpath = self.properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            // Remove empty validation for value for combos\r\n            if (!bizagi.util.isEmpty(xpath) && value !== null && typeof (value) !== \"undefined\") {\r\n                // Add a validation because sometimes value contains an empty not null object\r\n                if (typeof (value) == \"object\" && value.id === undefined)\r\n                    return;\r\n                // Add the value to the server\r\n                renderValues[xpath] = value;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Submits the selected data to the server in order to be saved\r\n     * @returns {}\r\n     */\r\n    submitData: function () {\r\n        var self = this;\r\n        var data = {};\r\n\r\n        // Add current data\r\n        if (!self.grid) {\r\n            data[self.properties.xpath] = self.getValue();\r\n        }\r\n\r\n        // Executes submit on change\r\n        self.submitOnChange(data, undefined, false);\r\n    },\r\n\r\n    /**\r\n     * Check if control is valid or not\r\n     * @param {} invalidElements\r\n     * @returns {}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        return this._super(invalidElements);\r\n    },\r\n\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (typeof (value) == \"undefined\" || value == null) return false;\r\n\r\n        if (typeof value === \"object\" && value.id !== \"\" && typeof (value.id) !== \"undefined\") return true;\r\n        return !bizagi.util.isEmpty(value);\r\n    },\r\n\r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n        return bizagi.util.formatItem(value);\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Text Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for text renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.text\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        if (properties.regularExpressionExpression) {\r\n            var message = properties.regularExpressionMessage || this.getResource(\"render-text-regular-expression-default-message\");\r\n            properties.regularExpression = {\"expression\": properties.regularExpressionExpression, \"message\": message};\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*}\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"text\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            value: this.properties.value,\r\n            isEmptyField: typeof (this.properties.value) === \"undefined\",\r\n            helpText: this.properties.helpText,\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"text-read-only\");\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.isString(value)) {\r\n            value = value.replaceAll(\"`\", \"&#96;\");\r\n        }\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {value: value, editable: this.properties.editable});\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n\r\n        this.input = this.getControl().find(\"input\");\r\n\r\n        //Attach event for retype double\r\n        if (this.properties.retype === \"double\")\r\n            this.attachRetypeDouble();\r\n    },\r\n\r\n    /**\r\n     * function virtual implements on children (desktop,samrtphone...).\r\n     */\r\n    attachRetypeDouble: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Check mask property\r\n        if (properties.mask)\r\n            self.input.mask({mask: properties.mask});\r\n\r\n        // Attach change event\r\n        self.input.bind(\"change\", function () {\r\n\r\n            // Updates internal value\r\n            self.setValue(self.input.val(), false);\r\n\r\n            // Check that the value is valid\r\n            var validationMessages = [];\r\n            if (properties.retype !== \"duplicate\") {\r\n                if (self.isValid(validationMessages) || typeof (properties.regularExpression) === \"undefined\") {\r\n                    // Update value again triggering handlers\r\n                    self.setValue(self.input.val(), true);\r\n                }\r\n            }\r\n\r\n        }).keypress(function (e) {\r\n            e = window.event || e;\r\n            var keyUnicode = e.charCode || e.keyCode;\r\n\r\n            if (e !== undefined) {\r\n                if (keyUnicode == 13) {\r\n                    $(this).trigger(\"change\");\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @returns {*}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n\r\n        // When the form have big data, block browser executing RegExp. QAF-1418.\r\n        // Check regular expression\r\n        if (typeof value == \"string\") {\r\n            if (properties.regularExpression) {\r\n                var regex = new RegExp(\"\");\r\n                try {\r\n                    regex = new RegExp(properties.regularExpression.expression);\r\n                } catch (e) {\r\n                    if (bizagi.override.showDesignValidations) {\r\n                        bizagi.log(e);\r\n                        invalidElements.push({xpath: properties.xpath, message: e.message});\r\n                        bValid = false;\r\n                    }\r\n                }\r\n\r\n                if (value && ((value.match(new RegExp(\".*?(<|\\\\u003C)(.+?)(>|\\\\u003E)(.?)|eval\\\\(|eval\\\\u0028\", \"g\"))) || (!value.match(regex) && self.properties && self.properties.xpath === \"userName\"))) {\r\n                    var message = properties.regularExpression.message;\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                } else {\r\n                    if (value && ((value.match(new RegExp(\".*?(<|\\\\u003C)(.+?)(>|\\\\u003E)(.?)|eval\\\\(|eval\\\\u0028\", \"g\"))) || (!value.match(regex)))) {\r\n                        var message = properties.regularExpression.message;\r\n                        invalidElements.push({xpath: properties.xpath, message: message});\r\n                        bValid = false;\r\n                    }\r\n                }\r\n            } else {\r\n                // Strange behavior on IE. When matchs are united on IE have is very slow\r\n                // solution, divide matchs\r\n                //.*? means for more information search: \"Lazy matching regexp\"\r\n                if (value && (value.match(new RegExp(\".*?eval\\\\(\", \"g\"))) && (value.match(new RegExp(\".*?eval\\\\u0028\", \"g\")))) {\r\n                    if (properties.editable) {\r\n                        var message = this.getResource(\"render-text-regular-expression-default-message\");\r\n\r\n                        invalidElements.push({xpath: properties.xpath, message: message});\r\n                        bValid = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n\r\n        if (!bizagi.util.parseBoolean(self.properties.editable)) {\r\n            // Render as simple value\r\n            if (typeof (value) === \"string\") {\r\n                // Replace line breaks for html line breaks\r\n                var valueToDisplay = bizagi.util.decodedDisplayValue(self.getDisplayValue());\r\n\r\n                control.html(\"<label class='readonly-control'>\" + valueToDisplay + \"</label>\");\r\n            } else {\r\n                if (bizagi.util.isNull(value)) {\r\n                    control.html(\"\");\r\n                }\r\n            }\r\n        }\r\n\r\n        // Set internal value\r\n        self.setValue(decodedValue, false);\r\n    },\r\n\r\n    /**\r\n     * Extend setValue to fix all encode data from database\r\n     * @param value\r\n     */\r\n    setValue: function (value) {\r\n        this._super(value);\r\n    },\r\n\r\n    /**\r\n     * Helptext tooltip\r\n     * @param {} control\r\n     * @param {} currentValue\r\n     * @param {} currentTitle\r\n     */\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        control.data(\"oldValue\", currentValue);\r\n        control.val(\"\");\r\n        \r\n        if(control.data('ui-tooltip')) control.tooltip('destroy');  \r\n        \r\n        control.attr(\"title\", currentTitle);\r\n        control.tooltip();\r\n\r\n        var toolTipZindex = $.getMaxZindex();\r\n        control.tooltip().on(\"tooltipopen\", function (event, ui) {\r\n            ui.tooltip.zIndex(toolTipZindex);\r\n        });\r\n\r\n        // Create new tooltip\r\n        control.tooltip(\"open\");\r\n\r\n        setTimeout(function () {\r\n            control.focus();\r\n        }, 100);\r\n    },\r\n\r\n\r\n    //#region No side effects funtions    \r\n    /**\r\n     * Gets the string with the correct size\r\n     * @param {string} value String value to validate\r\n     * @param {Int} maxLength Maximum size of the string\r\n     * @returns {string} String value validated\r\n     */\r\n    validateValue: function (value, maxLength) {\r\n        if (maxLength < 1 || value.length <= maxLength) return value;\r\n        return value.substr(0, maxLength)\r\n    }\r\n    //#endregion No side effects funtions\r\n\r\n});","/**\r\n *   Name: Bizagi Render Button Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for button renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.button\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.caption = properties.caption || \"\";\r\n\r\n        // set default value from normal to value\r\n        properties.displayType = \"value\";\r\n\r\n        // A button cannot be required\r\n        properties.required = false;\r\n\r\n        // This flag enable/disable default behaviors of buttons\r\n        // auto save and execute rule\r\n        properties.preventDefault = properties.preventDefault || false;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"button\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {\r\n            caption: self.properties.caption,\r\n            cssClass: self.properties.cssclass || \"\",\r\n            editable: self.properties.editable\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {}\r\n     */\r\n    renderReadOnly: function () {\r\n        // Executes the same template than normal render\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        // call base\r\n        this._super();\r\n\r\n        this.getLabel().addClass('bz-form-label--hidden');\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render behaviour after to be processed\r\n     */\r\n    postRender: function () {\r\n        // call base\r\n        this._super();\r\n\r\n        this.getLabel().addClass('bz-form-label--hidden');\r\n    },\r\n\r\n    /**\r\n     * Saves the form\r\n     * @returns {}\r\n     */\r\n    saveForm: function () {\r\n        var form = this.getFormContainer();\r\n        return form.saveForm();\r\n    },\r\n\r\n    /**\r\n     * Executes the button action\r\n     * @returns {}\r\n     */\r\n    executeButton: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = properties.xpathContext || \"\";\r\n\r\n        if (properties.submitOnChangexpathContextRow) {\r\n            xpathContext = xpathContext ? xpathContext + \".\" + properties.submitOnChangexpathContextRow : properties.submitOnChangexpathContextRow;\r\n        }\r\n\r\n        // Set the loading feedback\r\n        self.getFormContainer().startLoading();\r\n\r\n        return self.dataService.multiaction().executeButton({\r\n            idRender: properties.id,\r\n            xpath: properties.xpath || \"\",\r\n            xpathContext: xpathContext || \"\",\r\n            idPageCache: properties.idPageCache\r\n        }).always(function () {\r\n            self.getFormContainer().endLoading();\r\n            return arguments ? arguments[0] : undefined;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Refresh the current form\r\n     * @returns {}\r\n     */\r\n    refreshForm: function () {\r\n        var form = this.getFormContainer();\r\n        form.refreshForm(this.properties.id);\r\n    },\r\n\r\n    /**\r\n     * Process the button actions workflow\r\n     * @returns {}\r\n     */\r\n    processButton: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.editable) {\r\n            // Save the form prior opening the dialog\r\n            self.runButtonAction();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Triggers the render change event\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    triggerRenderChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n\r\n        var pressed = params.pressed || false;\r\n\r\n        self.triggerHandler(\"renderchange\", {render: self, pressed: pressed});\r\n    },\r\n\r\n    /**\r\n     * Run button actions\r\n     * @returns {}\r\n     */\r\n    runButtonAction: function () {\r\n        var self = this;\r\n\r\n        // Save the form prior opening the dialog\r\n        self.getFormContainer().clearValidationMessages();\r\n\r\n        self.saveForm().pipe(function () {\r\n            return self.executeButton();\r\n        }).done(function (result) {\r\n\r\n            if (result == null || result == true || result.result === \"success\" || result.type === \"success\") {\r\n                return self.refreshForm();\r\n            } else if (result.type === \"validationMessages\") {\r\n                try {\r\n                    // Add validation messages\r\n                    self.getFormContainer().addValidationMessage(result.messages);\r\n                } catch (e) {\r\n                }\r\n            }\r\n        }).fail(function (error) {\r\n\r\n            try {\r\n                // Add error messages\r\n                var error_obj = bizagi.util.getErrorFormatted(error);\r\n                var message = typeof (error_obj) === \"undefined\" ? {\r\n                    \"message\": bizagi.localization.getResource(\"workportal-general-error\")\r\n                } : error_obj;\r\n\r\n                self.getFormContainer().failHandler(message);\r\n            } catch (e) {\r\n            }\r\n\r\n        });\r\n\r\n    },\r\n\r\n    processLayout: function (isLabelFormat, format) {\r\n        if (isLabelFormat) {\r\n            this.changeBackgroundColor(format.background);\r\n            this._super(!isLabelFormat, format);\r\n        }\r\n    },\r\n\r\n    changeBackgroundColor: function (color) {\r\n        if (typeof color === \"undefined\") return this;\r\n\r\n        if (color !== \"none\") {\r\n            this.getElementsToStylize(this.getControl()).style(\"background\", color, \"important\");\r\n        } else {\r\n            this.getElementsToStylize(this.getControl()).css(\"background\", \"\");\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    getElementsToStylize: function ($context) {\r\n        return $(\"input\", $context);\r\n    },\r\n\r\n    /**\r\n     *  Method to determine if the render value can be sent to the server or not\r\n     * @returns {}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Fileprint Class\r\n *   Author: Christian Collazos\r\n *   Comments:\r\n *   -   This script will define basic stuff for fileprint renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.fileprint\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.caption = (properties.caption && properties.caption != \" \")? properties.caption : \"render-fileprint-property-caption\";\r\n        properties.filesCount = properties.filesCount ? properties.filesCount : 0;\r\n\r\n        // set default value from normal to value\r\n        properties.displayType = \"value\";\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n\r\n        // A button cannot be required\r\n        properties.required = false;\r\n    },\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"fileprint\");\r\n\r\n        return $.fasttmpl(template, {\r\n            caption: properties.caption\r\n        });\r\n    },\r\n    /*\r\n    *   Method to render non editable values\r\n    */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n\r\n        // Executes the same template than normal render\r\n        return self.renderControl();\r\n    },\r\n\r\n    /*\r\n    *   get the fileprint url\r\n    */\r\n    getFilePrintUrl: function (disposition) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.getFilePrintUrl({\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext || \"\",\r\n            idPageCache: properties.idPageCache,\r\n            disposition: disposition,\r\n            sessionId: self.getSessionId()\r\n        });\r\n\r\n    },\r\n\r\n    /*\r\n    *   Refresh the current form\r\n    */\r\n    refreshForm: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var form = self.getFormContainer();\r\n        form.refreshForm(properties.id);\r\n    },\r\n\r\n     /*\r\n    *   Saves the form\r\n    */\r\n    saveForm: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        return form.saveForm();\r\n    }\r\n});","/**\r\n *   Name: Bizagi Render Simple Link Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for link renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.link\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Set properties\r\n        var properties = this.properties;\r\n        properties.required = false;\r\n        properties.displayType = \"value\";\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"link\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {\r\n            displayName: self.properties.displayName,\r\n            align: self.properties.valueAlign,\r\n            editable: self.properties.editable\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        // Executes the same template than normal render\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Automatically this render is valid, so we can't check a required link\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Do nothing\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        return false;\r\n    }\r\n\r\n});","/*\r\n *   Name: BizAgi Render Radio Class\r\n *   Author: Ivan Ricardo Taimal Narvaez\r\n *   Comments:\r\n *   -   This script will define basic stuff for radio renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.checkList\", {}, {\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.horizontal = bizagi.util.parseBoolean(properties.horizontal) || false;\r\n        self.setValue(properties.items);\r\n        self.updateOriginalValue();\r\n    },\r\n\r\n    /*\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Call base\r\n        self._super();\r\n        self.checkListGroup = $(\".ui-bizagi-render-checkList .ui-bizagi-render-checkList-item\", control);\r\n    },\r\n\r\n    /*\r\n     *   Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(self.getTemplateName());\r\n        var items = self.properties.items || [];\r\n\r\n        var html = $.fasttmpl(template, $.extend(self.getTemplateParams(), {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            unique: bizagi.util.randomNumber(10000, 1000000),\r\n            idPageCache: properties.idPageCache,\r\n            items: items\r\n        }));\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     *   Gets the template used by the combo render\r\n     *   can be overriden in subclasses to reuse logic and just change the template\r\n     */\r\n    getTemplateName: function () {\r\n        return \"checkList\";\r\n    },\r\n\r\n    /*\r\n     *   Determines if we need to show the empty node or not\r\n     *   Can be overriden to change behaviour\r\n     */\r\n    showEmpty: function () {\r\n        return false;\r\n    },\r\n\r\n    /*\r\n     *   Determines if we need to show the current data regardless if it belongs to data or not\r\n     *   Can be overriden to change behaviour\r\n     */\r\n    showCurrentData: function () {\r\n        return false;\r\n    },\r\n\r\n    /*\r\n     *   Adds custom parameters to process the template\r\n     */\r\n    getTemplateParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return {\r\n            vertical: !properties.horizontal\r\n        };\r\n    },\r\n    /*\r\n     * Cleans current data\r\n     */\r\n    cleanData: function () {\r\n\r\n    },\r\n\r\n    setValue: function (value) {;\r\n        this.value = bizagi.clone(value);\r\n    },\r\n\r\n    getValue: function (data) {;\r\n        return this.value || [];\r\n    }\r\n\r\n});\r\n\r\n","/*\r\n*   Name: BizAgi Render Layout Render Class\r\n*   Author: Andrés Fernando Muñoz\r\n*   Comments:\r\n*   -   This script will define a base layout render class with common stuff related to all renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutRender\", {}, {\r\n\t/*\r\n\t *   Returns the html templated element\r\n\t */\r\n\trenderElement: function (template) {\r\n\t\tvar self = this;\r\n\t\tvar properties = self.properties;\r\n\t\tvar form = self.getFormContainer();\r\n\t\t// Start rendering deferred\r\n\t\tself.renderingDeferred = new $.Deferred();\r\n\r\n\t\t// Set render template\r\n\t\ttemplate = template || \"render-layout\";\r\n\t\tvar renderTemplate = self.renderFactory.getTemplate(template);\r\n\r\n\t\t// Resolve render label\r\n\t\tvar label = properties.displayName;\r\n\t\tif (typeof label == \"string\") {\r\n\t\t\tlabel = label.replaceAll(\"&\", \"&amp;\");\r\n\t\t\tlabel = label.replaceAll(\"$\", \"&#36;\");\r\n\t\t\tlabel = label.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\r\n\t\t\tlabel = label.replaceAll(\"\\\"\", \"&#34;\").replaceAll(\"'\", \"&#39;\").replaceAll(\"/\", \"&#47;\");\r\n\t\t\tlabel = label.replaceAll(\"\\\\n\", \"<br/>\");\r\n\t\t\tlabel = label.replaceAll(\"\\n\", \"<br/>\");\r\n\t\t}\r\n\r\n\t\t// Render template\r\n\t\tvar html = $.fasttmpl(renderTemplate, {\r\n\t\t\tlabel: label,\r\n\t\t\tisExtendedText: (properties.type == \"text\" && properties.isExtended),\r\n\t\t\torientation: properties.orientation,\r\n\t\t\tuniqueId: properties.uniqueId,\r\n\t\t\tid: properties.id,\r\n\t\t\tisDesign: self.getMode() === \"design\",\r\n\t\t\tmessageValidation: properties.messageValidation,\r\n\t\t\tprintVersion: form.params.printversion,\r\n\t\t\tcssClass: properties.cssclass || \"\",\r\n\t\t\thide: properties.hide\r\n\t\t});\r\n\r\n\t\t// Render internal control html\r\n\t\tvar result = self.internalRenderControl();\r\n\t\tif (!result) {\r\n\t\t\tresult = \"\";\r\n\t\t}\r\n\r\n\t\t// Check if this is an async element or not\r\n\t\tvar async = typeof (result) === \"object\" && result.done;\r\n\t\tif (!async) {\r\n\t\t\thtml = self.replaceControlHtml(html, result);\r\n\r\n\t\t} else {\r\n\t\t\tif (result.state() === \"resolved\") {\r\n\t\t\t\t// Fetch resolved result\r\n\t\t\t\thtml = self.replaceControlHtml(html, self.resolveResult(result));\r\n\t\t\t\tself.asyncRenderDeferred = null;\r\n\t\t\t} else {\r\n\t\t\t\t// Wait for result\r\n\t\t\t\tself.asyncRenderDeferred = result;\r\n\t\t\t\thtml = self.replaceControlHtml(html, \"\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t},\r\n\r\n    /*\r\n    *   Template method to get the control element\r\n    */\r\n\tgetControl: function () {\r\n\t\tvar self = this;\r\n\t\tif (!self.control || (self.control instanceof jQuery && self.control.length === 0)) {\r\n\t\t\tself.control = self.element;\r\n\t\t}\r\n\t\tif (!self.control || self.control.length == 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn self.control;\r\n\t},\r\n\r\n    /*\r\n    * Customizes the font italic style *\r\n    */\r\n\tchangeFontItalic: function (italic) {\r\n\t\tif (bizagi.util.parseBoolean(italic)) {\r\n\t\t\tthis.getControl().css(\"font-style\", \"italic\", \"!important\");\r\n\t\t} else {\r\n\t\t\tthis.getControl().css(\"font-style\", \"normal\", \"!important\");\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n    /*\r\n    * Customizes the font underline\r\n    */\r\n\tchangeFontUnderline: function (underline) {\r\n\t\tvar valueFormat = this.properties.valueFormat || {},\r\n\t\t\tvaluestrikethru = bizagi.util.parseBoolean(valueFormat.strikethru) ? \"line-through \" : \"\";\r\n\r\n\t\tif (bizagi.util.parseBoolean(underline)) {\r\n\t\t\tthis.getControl().css(\"text-decoration\", valuestrikethru + \"underline\", \"!important\");\r\n\t\t} else {\r\n\t\t\tthis.getControl().find(\"*\").each(function (i, element) {\r\n\t\t\t\t$(element).css(\"text-decoration\", valuestrikethru, \"!important\");\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n});","/*\r\n*   Name: BizAgi render layout Image Class\r\n*   Author: Andrés Fernando Muñoz\r\n*   Comments:\r\n*   -   This script will define basic stuff for non editable image control inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutImage\", { }, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this,\r\n            mode = self.getMode(),\r\n            useDefaultImage = false,\r\n            valueObj = self.properties.value || {},\r\n            uri= \"\";\r\n\r\n        //\r\n        var templateUri = self.renderFactory.getTemplate(\"layout-image\");\r\n\r\n        //Solucion temporal mientras se ajusta la respuesta del servicio cambiar despues de demo de 21/07/2015\r\n        /*if (value.value && value.value !== \"\" && value.value.length > 100){\r\n            var template64 = self.renderFactory.getTemplate(\"layout-image64\");\r\n            return $.fasttmpl(template64, { url: value.value, useDefaultImage: useDefaultImage });\r\n        }*/\r\n\r\n        /* if (mode === 'execution' && valueObj.value && valueObj.value.length > 0) {\r\n            uri = self.getImageUri();\r\n        }\r\n        else{\r\n            useDefaultImage = true;\r\n        } */\r\n\r\n        return $.fasttmpl(templateUri, {useDefaultImage: true });\r\n    },\r\n\r\n    /**\r\n     * Gets the base 64 image, specify in each device in order to change the size\r\n     */\r\n    getImage64: function () {\r\n        var self = this;\r\n        //Gets the real value of the image\r\n        var params = {\r\n            xpath: self.properties.xpath,\r\n            entity: self.value.guid,\r\n            surrogateKey: self.value.surrogateKey,\r\n            width: 96,\r\n            height: 96\r\n        };\r\n\r\n        return self.dataService.getEntityImage64(params);\r\n    },\r\n\r\n    /**\r\n     * Gets the url to get the array image, specify in each device in order to change the size\r\n     */\r\n    getImageUri: function () {\r\n        var self = this;\r\n\r\n        var map = {\r\n            entity: self.value.guid,\r\n            surrogateKey: self.value.surrogateKey,\r\n            xpath: self.properties.xpath,\r\n            width: 96,\r\n            height: 96,\r\n            hash: self.value.value\r\n        };\r\n\r\n        return self.dataService.serviceLocator.getUrl(\"render-entity-layout-imageByteArray\").replaceMultiple(map);\r\n    }\r\n\r\n});","/*\r\n *   Name: BizAgi Render Layout Simple Link Class\r\n *   Author: Andrés Fernando Muñoz\r\n *   Comments:\r\n *   -   This script will define basic stuff for non editable link renders inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutLink\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-link\");\r\n        // Render template\r\n        var html = $.fasttmpl(template, {displayName: self.properties.displayName});\r\n        return html;\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Layout Label Class\r\n *   Author: Mauricio Sánchez\r\n *   Comments:\r\n *   -   This script will define basic stuff for labels inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutLabel\", {}, {\r\n\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        this.properties.required = false;\r\n\r\n        // Set properties\r\n        this.properties.displayType = \"label\";\r\n        this.properties.labelAlign = this.originalProperties.labelAlign || \"left\";\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n\r\n\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-label\");\r\n        var value = self.properties.displayName || self.properties.value || \"\";\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: value});\r\n        return html;\r\n    }\r\n});\r\n","/*\r\n*   Name: BizAgi Render Layout Text Class\r\n*   Author: Mauricio Sanchez\r\n*   Comments:\r\n*   -   This script will define basic stuff for text renders inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutText\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        //properties.editable = false;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-text\");\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: self.properties.value,editable: self.properties.editable});\r\n        return html;\r\n    },\r\n    /*\r\n     *   Method to render non editable values\r\n     */\r\n    renderReadOnly: function() {\r\n        var self = this;\r\n        // Executes the same template than normal render\r\n        return self.renderControl();\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Layout Simple Upload Class\r\n *   Author: Elkin Fernando Siabato Cruz\r\n *   Comments:\r\n *   -   This script will define basic stuff for non editable upload renders inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutUpload\", {\r\n   // Statics\r\n   BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n   BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\r\n   BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE\r\n}, {\r\n   /**\r\n    * Constructor\r\n    */\r\n   init: function (params) {\r\n      // Call base\r\n      this._super(params);\r\n   },\r\n\r\n   /**\r\n    *   Update or init the element data\r\n    */\r\n   initializeData: function (data) {\r\n      var self = this;\r\n      // Call base\r\n      this._super(data);\r\n\r\n      var form = self.getFormContainer();\r\n\r\n      // Fill default properties\r\n      var properties = this.properties;\r\n\r\n      properties.editable = true;\r\n      properties.allowDelete = true;\r\n\r\n      properties.contexttype = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : \"\";\r\n      properties.allowSendInMail = properties.allowSendInMail || false;\r\n   },\r\n\r\n   /**\r\n    * Get value files by data\r\n    */\r\n   getValueFilesByData: function(properties){\r\n      var self = this;\r\n      var defer = $.Deferred();\r\n      var dataFiles;\r\n      if (properties.value.value) {//Normal entityTemplate in form QAF-2319\r\n          dataFiles = properties.value.value;\r\n      }\r\n      else {//QAF-2210\r\n          dataFiles = properties.value;\r\n      }\r\n      var valueAuxFiles;\r\n      try{\r\n         if(self.isContextContainerWidgetRender()){\r\n            valueAuxFiles = JSON.parse(\"{ \\\"files\\\": \" + dataFiles  + \"}\");\r\n            defer.resolve(properties, valueAuxFiles);\r\n         }\r\n         else{//context: my stuff\r\n            $.when(self.getDataFilesWithoutScope()).done(function(valueResult){\r\n               valueAuxFiles = JSON.parse(\"{ \\\"files\\\": \" + valueResult  + \"}\");\r\n               defer.resolve(properties, valueAuxFiles);\r\n            });\r\n         }\r\n      }\r\n      catch(err){\r\n         valueAuxFiles = JSON.parse(\"{ \\\"files\\\": []}\");\r\n         defer.resolve(properties, valueAuxFiles);\r\n         console.warn(\"Exception converting data files. Error: \", err);\r\n      }\r\n      return defer.promise();\r\n   },\r\n\r\n   isContextContainerWidgetRender: function(){\r\n      var self = this;\r\n\r\n      var formContainer = self.getFormContainer();\r\n      return formContainer.params.paramsRender && formContainer.params.paramsRender.idRender;\r\n   },\r\n\r\n\r\n   /**\r\n    * Get data files when access from My stuff\r\n    */\r\n   getDataFilesWithoutScope: function(){\r\n      var self = this;\r\n      //Gets the real value of the image\r\n      var params = {\r\n         xpath: self.properties.xpath,\r\n         entity: self.value.guid,\r\n         surrogateKey: self.value.surrogateKey\r\n      };\r\n\r\n      return self.dataService.getFilesDataForLayoutUploadControl(params);\r\n   },\r\n\r\n   /**\r\n    *   Returns the internal value\r\n    */\r\n   getValue: function () {\r\n      return this.files;\r\n   },\r\n\r\n   /**\r\n    *   Returns the xpath to be used\r\n    */\r\n   getUploadXpath: function () {\r\n      return this.properties.xpath;\r\n   }\r\n\r\n});","/*\r\n*   Name: BizAgi Render Layout Boolean Class\r\n*   Author: Alexander Mejia\r\n*   Comments:\r\n*   -   This script will define basic stuff for boolean renders inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutBoolean\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.editable = false;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-boolean\");\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: this.properties.value});\r\n        return html;\r\n    },\r\n    /*\r\n     *   Method to render non editable values\r\n     */\r\n    renderReadOnly: function() {\r\n        var self = this;\r\n        // Executes the same template than normal render\r\n        return self.renderControl();\r\n    },\r\n\r\n    setValue: function (value, triggerEvents) {\r\n        if(value === null || value === \"\"){\r\n            this.properties.value = \"\";\r\n        }\r\n        else if (value.toString().toLowerCase() === \"true\" || value.toString().toLowerCase() === \"false\"){\r\n            this.properties.value = bizagi.util.parseBoolean(value) ? this.getResource(\"render-boolean-yes\") : this.getResource(\"render-boolean-no\");\r\n        }\r\n        this._super(this.properties.value, triggerEvents);\r\n    }\r\n});","/**\r\n * Name: BizAgi Render Layout DateTime Class\r\n * Author: Andres Fernando Muñoz\r\n * Comments:\r\n * - This script will define basic stuff for text renders inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutDateTime\", {}, {\r\n    /**\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n        var dateFormat = self.getResource(\"dateFormat\");\r\n        var timeFormat = self.getResource(\"timeFormat\");\r\n\r\n        // We will hold here the value to display\r\n        properties.displayValue = \"\";\r\n        properties.showTime = properties.showTime !== undefined ? bizagi.util.parseBoolean(properties.showTime) : false;\r\n        properties.dateFormat = properties.dateFormat || dateFormat;\r\n        properties.timeFormat = properties.timeFormat || timeFormat;\r\n        properties.fullFormat = properties.dateFormat;\r\n\r\n        // Check if it has the showtime property\r\n        if (properties.showTime) {\r\n            if (properties.fullFormat.search(/[h|H]+/ig) === -1) {\r\n                properties.fullFormat = properties.fullFormat + ' ' + properties.timeFormat;\r\n            }\r\n        }\r\n        else{\r\n            var indexHour = properties.fullFormat.search(/[h|H]+/ig);\r\n            if (indexHour !== -1) {\r\n                properties.fullFormat = properties.fullFormat.substring(0, indexHour - 1);\r\n            }\r\n        }\r\n\r\n        // Read always parameter from server in invariant format\r\n        if (properties.value) {\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(properties.value, properties.showTime);\r\n\r\n            // Format date to current format\r\n            if (date != 0) {\r\n                var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n                self.value = properties.value; // Value must always hold the value with invariant format\r\n                properties.displayValue = bizagi.util.dateFormatter.formatDate(date, properties.fullFormat, datePickerRegional);\r\n            }\r\n            else {\r\n                self.value = null;\r\n            }\r\n        }\r\n        else {\r\n            self.value = null;\r\n            properties.value = \"\";\r\n            properties.displayValue = \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-date-time\");\r\n        var value = (self.properties.value === null || self.properties.value === \"\") ?  \"\" : self.properties.value;\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {value: value});\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this, dateObj;\r\n        var properties = self.properties;\r\n        var dateControl = self.getDateControl();\r\n        var INVARIANT_FORMAT = \"MM/dd/yyyy H:mm:ss\";\r\n        self.i18n = bizagi.localization.getResource(\"datePickerRegional\");\r\n\r\n        if (value.length == INVARIANT_FORMAT.length || value.length == (INVARIANT_FORMAT.length + 1)) {\r\n            dateObj = bizagi.util.dateFormatter.getDateFromInvariant(value, true);\r\n        }\r\n        else {\r\n            dateObj = bizagi.util.dateFormatter.getDateFromInvariant(value);\r\n            if (dateObj && !isNaN(Date.parse(dateObj)) && !$.isNumeric(dateObj)) {\r\n                dateObj.setHours(0, 0, 0, 0);\r\n            }\r\n\r\n        }\r\n        // Set value in input\r\n        if (value && !isNaN(Date.parse(value))) {\r\n            var formattedDateTime = bizagi.util.dateFormatter.formatDate(dateObj, properties.fullFormat, self.i18n);\r\n            dateControl.text(formattedDateTime);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Gets the date control\r\n     */\r\n    getDateControl: function () {\r\n        var self = this;\r\n        self.dateControl = $(\".ui-bizagi-render-date-time\", self.getControl());\r\n        return self.dateControl;\r\n    }\r\n});","/*\r\n*   Name: BizAgi Render Layout number Class\r\n*   Author: Andres Fernando Muñoz\r\n*   Comments:\r\n*   -   This script will define basic stuff for text renders inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutNumber\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        properties.allowDecimals = typeof (properties.allowDecimals) !== \"undefined\" ? bizagi.util.parseBoolean(properties.allowDecimals) : this.getDefaultAllowDecimals(properties.dataType);\r\n        properties.numDecimals = properties.allowDecimals ? (properties.numDecimals ? properties.numDecimals : (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalDigits : 2)) : 0;\r\n        properties.symbol = '';\r\n        properties.positiveFormat = format.positiveFormat;\r\n        properties.negativeFormat = format.negativeFormat;\r\n        properties.decimalSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator : format.decimalSymbol;\r\n        properties.digitGroupSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.groupSeparator : format.digitGroupSymbol;\r\n        properties.groupDigits = this.getDefaultGroupDigits(properties.dataType);\r\n        properties.colorize = properties.colorizeOnNegative || false;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-number\");\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: self.properties.value});\r\n        return html;\r\n    },\r\n    /*\r\n     *   Method to render non editable values\r\n     */\r\n    renderReadOnly: function() {\r\n        var self = this;\r\n        // Executes the same template than normal render\r\n        return self.renderControl();\r\n    },\r\n\r\n    /*\r\n     *   Returns the display value of the render\r\n     */\r\n    getDisplayValue: function (value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        // Workaround to get the display value by the format currency plugin, because it requires a control\r\n        var label = $('<label/>').html(value);\r\n        var regExp2 = /[\\u20AC \\u0024\\u00A3]/;\r\n        if (!value.toString().match(regExp2)) {\r\n            label.formatCurrency(\r\n                {\r\n                    symbol: properties.symbol,\r\n                    positiveFormat: properties.positiveFormat,\r\n                    negativeFormat: properties.negativeFormat,\r\n                    decimalSymbol: properties.decimalSymbol,\r\n                    digitGroupSymbol: properties.digitGroupSymbol,\r\n                    groupDigits: properties.groupDigits,\r\n                    roundToDecimalPlace: properties.numDecimals,\r\n                    colorize: properties.colorize\r\n                });\r\n        }\r\n        return label.text();\r\n    },\r\n\r\n    /*\r\n     *   Return the allow decimals default property based on the datatype\r\n     */\r\n    getDefaultAllowDecimals: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType == 1 || dataType == 2 || dataType == 3 || dataType == 4 || dataType == 7) {\r\n                return false;\r\n            }\r\n            // Decimal data types\r\n            if (dataType == 6 || dataType == 8 || dataType == 10 || dataType == 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    /*\r\n     *   Return the group digits default property based on the datatype\r\n     */\r\n    getDefaultGroupDigits: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType == 1 || dataType == 2 || dataType == 3 || dataType == 4 || dataType == 7) {\r\n                return false;\r\n            }\r\n            // Decimal data types\r\n            if (dataType == 6 || dataType == 8 || dataType == 10 || dataType == 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n});","/*\r\n*   Name: BizAgi Render Layout Money Class\r\n*   Author: Andrés Fernando Muñoz\r\n*   Comments:\r\n*   -   This script will define basic stuff for money renders inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutMoney\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        // Configures symbol\r\n        properties.showsymbol = typeof (properties.showsymbol) !== \"undefined\" ? properties.showsymbol : true;\r\n\r\n        if (properties.showsymbol) {\r\n            properties.symbol = properties.currencySymbol ? properties.currencySymbol :\r\n                (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.symbol : format.symbol);\r\n        }\r\n        else {\r\n            properties.symbol = \"\";\r\n        }\r\n        properties.groupDigits = true;\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Layout Label Class\r\n *   Author: Mauricio Sánchez\r\n *   Comments:\r\n *   -   This script will define basic stuff for labels inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutPlaceholder\", {}, {\r\n\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n                \r\n    },\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n             \r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-placeholder\");\r\n        var value = self.properties.value || self.properties.displayName || \"\";\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: value});\r\n        return html;\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Render Geolocation control\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for geolocation renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.geolocation\", {}, {\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {} data\r\n     */\r\n    init: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n        this.geolocation = window.navigator.geolocation;\r\n\r\n        var properties = this.properties;\r\n        properties.allowUpdate = bizagi.util.parseBoolean(properties.allowUpdate) === true;\r\n\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"geolocation\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, self.properties);\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param {} invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Call base\r\n        return this._super(invalidElements);\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Set internal value\r\n        this.setValue(value, false);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     * @returns {}\r\n     */\r\n    configureHandlers: function () {\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} succes_callback\r\n     * @param {} fail_callback\r\n     */\r\n    getCurrentPosition: function (succes_callback, fail_callback) {\r\n        var self = this;\r\n\r\n        if (typeof (self.geolocation) === \"undefined\") {\r\n            if (fail_callback)\r\n                fail_callback(bizagi.localization.getResource(\"render-control-unsuported-by-browser\").replace(\"{0}\", self.properties.type));\r\n            return;\r\n        }\r\n\r\n        var onSuccess = function (position) {\r\n            if (succes_callback)\r\n                succes_callback(position);\r\n        };\r\n\r\n        var onError = function (error) {\r\n            var strMessage = self.getErrorMessage(error);\r\n\r\n            if (fail_callback)\r\n                fail_callback(strMessage);\r\n        };\r\n\r\n        return self.geolocation.getCurrentPosition(onSuccess, onError);\r\n    },\r\n\r\n    /**\r\n     * Get message of error\r\n     * @param error\r\n     * @returns {*|string}\r\n     */\r\n    getErrorMessage: function (error) {\r\n        var strMessage = \"\";\r\n\r\n        // Check for known errors\r\n        switch (error.code) {\r\n            case error.PERMISSION_DENIED:\r\n            case 1:\r\n                strMessage = bizagi.localization.getResource(\"render-geolocation-permission-denied\");\r\n                break;\r\n            case error.POSITION_UNAVAILABLE:\r\n            case 2:\r\n                strMessage = bizagi.localization.getResource(\"render-geolocation-position-unavailable\");\r\n                break;\r\n            case error.TIMEOUT:\r\n            case 3:\r\n                strMessage = bizagi.localization.getResource(\"render-geolocation-timeout\");\r\n                break;\r\n            default:\r\n                strMessage = \"WD: \" + bizagi.localization.getResource(\"render-geolocation-permission-denied\");\r\n                break;\r\n        }\r\n\r\n        return strMessage;\r\n    },\r\n\r\n    /**\r\n     * Change precision number of coordinates\r\n     * @param data\r\n     * @returns {*}\r\n     */\r\n    performPrecision: function (data) {\r\n        var geolocation = data.split(\" \") || \"\";\r\n\r\n        if (!geolocation) return data;\r\n\r\n        try {\r\n            var latitude = parseFloat(geolocation[0].trim());\r\n            var longitude = parseFloat(geolocation[1].trim());\r\n\r\n            return latitude.toPrecision(10) + \" \" + longitude.toPrecision(10);\r\n        } catch (e) {\r\n            return data;\r\n        }\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Upload Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for uploads\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.upload\", {}, {\r\n    /***\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        var form = self.getFormContainer();\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        var maxFileSizeOfProperty = Number(properties.maxSize) || 0;\r\n        var maxFileSizeOfUser = typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\" ? Number(BIZAGI_SETTINGS.UploadMaxFileSize) : 4091904;\r\n\r\n        properties.maxSize = maxFileSizeOfProperty || maxFileSizeOfUser;\r\n        properties.maxfiles = Number(properties.maxfiles) || 999;\r\n        properties.validExtensions = properties.validExtensions || \"\";\r\n\r\n        if (properties.validExtensions.length > 0 && properties.validExtensions.indexOf(\".\") < 0) {\r\n            var singleExtensions = properties.validExtensions.replace(/\\ /gi, '').split(\";\");\r\n            var defExtensions = [];\r\n\r\n            for (var i = 0; i < singleExtensions.length; i++) {\r\n                if (singleExtensions[i].length > 0) {\r\n                    defExtensions.push(\"*.\" + singleExtensions[i]);\r\n                } else {\r\n                    //Removes the empty element\r\n                    var index = singleExtensions.indexOf(singleExtensions[i]);\r\n                    singleExtensions.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            properties.validExtensions = defExtensions.join(\";\");\r\n        }\r\n\r\n        properties.addUrl = properties.addUrl || self.dataService.getUploadAddUrl();\r\n        properties.deleteUrl = properties.deleteUrl || undefined;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) || false;\r\n        properties.allowDelete = (bizagi.util.parseBoolean(properties.allowDelete) !== null && properties.editable) ? bizagi.util.parseBoolean(properties.allowDelete) : false;\r\n\r\n        properties.contexttype = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : \"\";\r\n        properties.allowSendInMail = properties.allowSendInMail || false;\r\n\r\n        // Set files property\r\n        self.files = properties.value || [];\r\n        self.filesCount = self.files.length;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"upload\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            xpath: bizagi.util.encodeXpath(self.getUploadXpath()),\r\n            editable: properties.editable,\r\n            haveFiles: self.filesCount !== 0,\r\n            noFiles: self.filesCount === 0,\r\n            allowSendInMail: properties.allowSendInMail\r\n        });\r\n\r\n        // Render current children\r\n        var items = \"\";\r\n        for (var i = 0; i < self.filesCount; i++) {\r\n            var file = {id: self.files[i][0], fileName: self.files[i][1]};\r\n            var item = self.renderUploadItem(file);\r\n\r\n            items += item;\r\n        }\r\n\r\n        html = self.replaceFilesHtml(html, items);\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Renders a single upload item\r\n     * @param file\r\n     * @returns {jQuery|*}\r\n     */\r\n    renderUploadItem: function (file) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var itemTemplate = self.getTemplateItemName();\r\n        var template = self.renderFactory.getTemplate(itemTemplate);\r\n\r\n        // Don't render urls when not running in execution mode\r\n        var url = !self.isExecutionMode() ? \"\" : self.buildItemUrl(file); // TODO: Review if need it: javascript:void(0);\r\n\r\n        var html = $.fasttmpl(template, {\r\n            id: file.id,\r\n            mode: mode,\r\n            url: url,\r\n            allowDelete: self.properties.allowDelete,\r\n            filename: file.fileName,\r\n            editable: self.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (file) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n\r\n        return self.dataService.getUploadFileUrl({\r\n            idRender: properties.id,\r\n            xpath: self.getUploadXpath(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            fileId: file.id,\r\n            sessionId: form.properties.sessionId,\r\n            contexttype: properties.contexttype\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{files}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Removes a file from the upload control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    deleteUploadItem: function (item, fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = self.getUploadXpath() + (bizagi.util.isNumeric(fileId) ? \"[id=\" + fileId + \"]\" : \"[id='\" + fileId + \"']\");\r\n\r\n        return self.dataService.deleteUploadFile({\r\n            url: properties.deleteUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contexttype\r\n        }).pipe(function () {\r\n\r\n            // Subtract counter\r\n            self.filesCount = self.filesCount - 1;\r\n\r\n            // Remove from local collection\r\n            self.files = $.grep(self.files, function (fileItem) {\r\n                return fileItem[0] != fileId;\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n\r\n        // Set files property\r\n        self.files = value || []; // Dont remove this line\r\n        self.filesCount = self.files.length;\r\n\r\n        // Call base\r\n        self._super(value, triggerEvents);\r\n    },\r\n\r\n    /**\r\n     * Returns the internal value\r\n     * @returns {*}\r\n     */\r\n    getValue: function () {\r\n        return this.files;\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @returns {boolean}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n        var bValid = true;\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (properties.required && properties.editable) {\r\n            var newRow = self.grid && self.grid.isFromCreatedRow.apply(self);\r\n\r\n            if (self.filesCount <= 0 && !newRow) {\r\n                var inlineEdit = self.grid ? self.grid.properties.inlineEdit : true;\r\n\r\n                if (inlineEdit) {\r\n                    message = self.getResource(\"render-required-upload\").replaceAll(\"#label#\", properties.displayName);\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Build add params to send to the server\r\n     */\r\n    buildAddParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var data = {};\r\n        var prefix = self.Class.BA_CONTEXT_PARAMETER_PREFIX;\r\n\r\n        data[prefix + \"xpath\"] = self.getUploadXpath();\r\n        data[prefix + \"idRender\"] = properties.id;\r\n        data[prefix + \"xpathContext\"] = properties.xpathContext;\r\n        data[prefix + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\r\n        data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = form.properties.sessionId;\r\n        data[prefix + \"contexttype\"] = properties.contexttype;\r\n\r\n        try {\r\n            if (typeof (BIZAGI_SESSION_NAME) !== \"undefined\") {\r\n                data[BIZAGI_SESSION_NAME] = form.properties.sessionId\r\n            } else {\r\n                data[\"JSESSIONID\"] = form.properties.sessionId;\r\n            }\r\n        } catch (e) {\r\n            data[\"JSESSIONID\"] = form.properties.sessionId;\r\n        }\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getUploadXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    checkRequired: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (bizagi.util.parseBoolean(properties.required)) {\r\n            if (self.grid && self.grid.properties.inlineAdd === true) {\r\n                if (!self.hasValue() && !(self.getControl().parents(\"tr\").data(\"new-row\"))) {\r\n                    self.setRenderRequired(invalidElements, properties);\r\n                    return false;\r\n                }\r\n            } else {\r\n                if (!self.hasValue()) {\r\n                    self.setRenderRequired(invalidElements, properties);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    setRenderRequired: function (invalidElements, properties) {\r\n        var self = this;\r\n        var message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n        invalidElements.push({xpath: properties.xpath, message: message});\r\n    },\r\n\r\n    /**\r\n     * Templates\r\n     */\r\n    getTemplateItemName: function () {\r\n        return \"uploadItem\";\r\n    }\r\n});","/**\r\n *   Name: Bizagi Render ECM upload control\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for ECM Control\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.ecm\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        properties.maxSize = Number(properties.maxSize) || (typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\" ? Number(BIZAGI_SETTINGS.UploadMaxFileSize) : properties.maxSize = Number(properties.maxSize) || 4091904);\r\n        properties.maxFiles = Number(properties.maxfiles) || 999;\r\n        properties.validExtensions = properties.validExtensions || \"\";\r\n\r\n        if (properties.validExtensions.length > 0 && properties.validExtensions.indexOf(\".\") < 0) {\r\n            var singleExtensions = properties.validExtensions.split(\";\");\r\n            for (var i = 0; i < singleExtensions.length; i++) {\r\n                singleExtensions[i] = \"*.\" + singleExtensions[i];\r\n            }\r\n            properties.validExtensions = singleExtensions.join(\";\");\r\n        }\r\n\r\n        properties.addUrl = self.dataService.serviceLocator.getUrl(\"render-ecm-upload-url\") + \"?action=uploadECMFile\";\r\n        properties.editUrl = self.dataService.serviceLocator.getUrl(\"render-ecm-upload-url\") + \"?action=updateECMFileContent\";\r\n        properties.deleteUrl = properties.deleteUrl || undefined;\r\n        properties.allowDelete = bizagi.util.parseBoolean(properties.allowDelete) !== null ? bizagi.util.parseBoolean(properties.allowDelete) : true;\r\n        properties.q_xpath = bizagi.util.encodeXpath(properties.xpath);\r\n        properties.showMetadata = properties.showMetadata === undefined || properties.showMetadata === null ? true : bizagi.util.parseBoolean(properties.showMetadata);\r\n\r\n        var dateFormat = this.getResource(\"dateFormat\");\r\n        var timeFormat = this.getResource(\"timeFormat\");\r\n\r\n        // We will hold here the value to display\r\n        properties.displayValue = \"\";\r\n        properties.showTime = properties.showTime !== undefined ? bizagi.util.parseBoolean(properties.showTime) : false;\r\n        properties.dateFormat = properties.dateFormat || dateFormat;\r\n        properties.timeFormat = properties.timeFormat || timeFormat;\r\n        properties.fullFormat = properties.dateFormat;\r\n\r\n        // Set files property\r\n        self.files = properties.value || [];\r\n        self.filesCount = self.files.length;\r\n\r\n        properties.xpathContext = this.parent.properties.xpathContext || properties.xpathContext || \"\";\r\n\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @param listControl\r\n     * @param fileProperties\r\n     * @returns {*}\r\n     */\r\n    renderControl: function (listControl, fileProperties) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"ecm\");\r\n        var mode = self.getMode();\r\n        var defer = new $.Deferred();\r\n\r\n        properties.value = (fileProperties) ? [[fileProperties.idFileUpload, fileProperties.fileName]] : self.value;\r\n        var html = $.fasttmpl(template, properties, {\r\n            getFileExtension: self.getFileExtension,\r\n            isImage: self.isImage\r\n        });\r\n\r\n        if (self.properties.value != undefined) {\r\n\r\n            var lengthValues = self.properties.value.length;\r\n\r\n            if (lengthValues === 0) {\r\n                defer.resolve(html);\r\n            }\r\n\r\n            $.each(self.properties.value, function (key, value) {\r\n                var data = {};\r\n\r\n                data.idFileUpload = value[0];\r\n                data.fileName = value[1];\r\n                data.idPageCache = self.properties.idPageCache;\r\n                data.xpathContext = self.getXpathContext();\r\n                data.xPath = self.properties.xpath;\r\n                data.editable = self.properties.editable;\r\n                data.idAttrib = self.properties.idAttrib;\r\n\r\n                var form = self.getFormContainer();\r\n                if (form && form.properties && form.properties.sessionId) {\r\n                    data.sessionId = form.properties.sessionId;\r\n                }\r\n\r\n                if (mode === \"execution\") {\r\n                    $.when(self.renderFileLayout(data, fileProperties)).done(function (item) {\r\n                        lengthValues--;\r\n\r\n                        if (bizagi.loader.productBuildToAbout && bizagi.loader.productBuildToAbout.indexOf(\"10.4\") === 0) {\r\n                            item = item.replaceAll(\"Handlers/MetadataFile\", \"Handlers/Metadata\");\r\n                        }\r\n\r\n                        html = self.replaceItemHtml(html, self.properties.id + \"-\" + data.idFileUpload, item);\r\n                        if (lengthValues === 0) {\r\n                            defer.resolve(html);\r\n                        }\r\n                    });\r\n\r\n                }\r\n            });\r\n        } else {\r\n            defer.resolve(html);\r\n        }\r\n        return defer.promise();\r\n    },\r\n\r\n    replaceItemHtml: function (html, id, replace) {\r\n        return html.replace(\"{{\" + id + \"}}\", replace);\r\n    },\r\n\r\n    renderFileLayout: function (data, fileProperties) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var metadataTemplate = self.renderFactory.getTemplate(\"ecm-metadata\");\r\n\r\n        var deferred = $.Deferred();\r\n\r\n        $.when(self.dataService.getECMMetadata(data),\r\n            (fileProperties) ? [fileProperties] : self.dataService.getFileProperties(data)\r\n        ).done(function (metaData, fileProperties) {\r\n\r\n            fileProperties[0].data = data;\r\n\r\n            // Make xpath context\r\n            fileProperties[0].xpathContext = fileProperties[0].xpathContext || form.properties.xpathContext || \"\";\r\n            fileProperties[0].xpath = self.properties.xpath;\r\n\r\n            metaData[0].filename = data.fileName;\r\n            metaData[0].url = self.buildItemUrl(fileProperties[0]);\r\n\r\n            // Define File Properties\r\n            metaData[0].ecm_ecmStatus = fileProperties[0].ecmStatus;\r\n            metaData[0].ecm_isVisible = fileProperties[0].isVisible;\r\n            metaData[0].ecm_allowUpdateMetadata = fileProperties[0].allowUpdateMetadata;\r\n            metaData[0].ecm_allowDelete = fileProperties[0].allowDelete;\r\n            metaData[0].ecm_allowUpdateContent = fileProperties[0].allowUpdateContent;\r\n            metaData[0].ecm_allowView = fileProperties[0].allowView;\r\n            metaData[0].ecm_allowCheckOut = fileProperties[0].allowCheckOut;\r\n            metaData[0].ecm_allowCancelCheckOut = fileProperties[0].allowCancelCheckOut;\r\n            metaData[0].ecm_allowEdit = data.editable && fileProperties[0].allowEdit;\r\n            metaData[0].ecm_ecmStatus = fileProperties[0].ecmStatus;\r\n            metaData[0].idFileUploads = fileProperties[0].idFileUpload;\r\n            metaData[0].xpath = fileProperties[0].xpath;\r\n            metaData[0].value = bizagi.util.parseBoolean(fileProperties[0].value);\r\n            metaData[0].deviceType = bizagi.detectDevice();\r\n\r\n            var html = $.fasttmpl(metadataTemplate, metaData[0]);\r\n            deferred.resolve(html);\r\n        });\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    isImage: function (file) {\r\n        var extension = this.getFileExtension(file);\r\n        var image = [\"JPG\", \"JPEG\", \"GIF\", \"PNG\", \"BMP\"];\r\n\r\n        return (image.indexOf(extension.toUpperCase()) > -1) ? true : false;\r\n    },\r\n\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (file) {\r\n        var self = this;\r\n        var p_sessionId = bizagi.cookie(\"JSESSIONID\");\r\n\r\n        if(!file.data) {\r\n            file.data = {fileName: file.fileName, idAttrib: file.idAttrib}\r\n        }\r\n\r\n        return self.dataService.getECMFileUrl({\r\n            idFileUpload: file.idFileUpload,\r\n            xPath: file.xpath || file.xPath,\r\n            xpathContext: file.xpathContext,\r\n            idAttrib: file.data.idAttrib,\r\n            idPageCache: self.properties.idPageCache,\r\n            fileName: file.data.fileName.replace(/ /g, \"_\"),\r\n            p_sessionId: p_sessionId,\r\n            sessionId: file.data.sessionId || \"\"\r\n        });\r\n    },\r\n\r\n    buildAddParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var data = {};\r\n\r\n        // data.fileExt = properties.validExtensions;\r\n        // data.fileDesc = properties.validExtensions ? self.getResource(\"render-upload-allowed-extensions\") + properties.validExtensions : \"\";\r\n        data.xPath = properties.xpath;\r\n        data.idAttrib = properties.idAttrib;\r\n        data.xpathContext = properties.xpathContext;\r\n        data.metaValues = [];\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Get name of file extension\r\n     * @param fileName\r\n     * @returns {*}\r\n     */\r\n    getFileExtension: function (fileName) {\r\n        fileName = fileName || \"\";\r\n        return fileName.split(\".\").pop();\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Call base\r\n        self._super(value, triggerEvents);\r\n\r\n        // Set files property\r\n        self.files = properties.value || [];\r\n        self.filesCount = (self.files.length) ? self.files.length : properties.value;\r\n    },\r\n\r\n    /**\r\n     * Gets xpath context\r\n     * @returns {*|string}\r\n     */\r\n    getXpathContext: function () {\r\n        return this.properties.xpathContext || \"\";\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getUploadXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Removes a file from the ECM control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    deleteUploadItem: function (item, fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var params = {\r\n            idFileUpload: fileId,\r\n            xPath: properties.xpath,\r\n            idAttrib: properties.idAttrib,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: self.getXpathContext()\r\n        };\r\n\r\n        return self.dataService.deleteECMFile(params).pipe(function () {\r\n\r\n            // Subtract counter\r\n            self.filesCount = self.filesCount - 1;\r\n\r\n            // Remove from local collection\r\n            self.files = $.grep(self.files, function (fileItem) {\r\n                return fileItem[0] != fileId;\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Lock a file from the ECM control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    lockUploadItem: function (fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var params = {\r\n            idFileUpload: fileId,\r\n            xPath: properties.xpath,\r\n            idAttrib: properties.idAttrib,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: self.getXpathContext()\r\n        };\r\n\r\n        return self.dataService.checkOutFile(params);\r\n    },\r\n\r\n    /**\r\n     * Unlock a file from the ECM control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    unlockUploadItem: function (fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var params = {\r\n            idFileUpload: fileId,\r\n            xPath: properties.xpath,\r\n            idAttrib: properties.idAttrib,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: self.getXpathContext()\r\n        };\r\n\r\n        return self.dataService.cancelCheckOut(params);\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render Yes-no Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for yes-no renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.yesno\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.value = typeof (properties.value) != \"undefined\" ? bizagi.util.parseBoolean(properties.value) : null;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"yesno\");\r\n        var randomId = bizagi.util.randomNumber(100, 10000000);\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            id: randomId,\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Gets the display value of the render\r\n     */\r\n    getDisplayValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.parseBoolean(value) === true) {\r\n            return this.getResource(\"render-boolean-yes\");\r\n        } else if (bizagi.util.parseBoolean(value) === false) {\r\n            return this.getResource(\"render-boolean-no\");\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if a render has no value for required validation\r\n     * @returns {boolean}\r\n     */\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.isEmptyValue(value)) return false;\r\n        return bizagi.util.parseBoolean(value) !== null;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Letter Class\r\n*   Author: Diego Parra\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for letter renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.letter\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Create a variable to check if the letter has been opened when editable\r\n        this.letterOpened = false;\r\n    },\r\n\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"letter\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template);\r\n    },\r\n\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"letter.readonly\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template);\r\n    },\r\n\r\n    /**\r\n     * Returns the letter content from the server\r\n     */\r\n    getLetterContent: function () {\r\n        // Set flag to true\r\n        this.letterOpened = true;\r\n\r\n        return this.dataService.getLetterContent({\r\n            url: this.properties.getUrl,\r\n            idRender: this.properties.id,\r\n            xpath: this.getXpath(),\r\n            xpathContext: this.getContextXpath(),\r\n            idPageCache: this.properties.idPageCache\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sends the content to the server in order to save\r\n     * @param {} content\r\n     */\r\n    saveLetterContent: function (content) {\r\n        return this.dataService.saveLetterContent({\r\n            url: this.properties.saveUrl,\r\n            idRender: this.properties.id,\r\n            xpath: this.getXpath(),\r\n            xpathContext: this.getContextXpath(),\r\n            idPageCache: this.properties.idPageCache,\r\n            content: content\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Returns the letter content from the server\r\n     */\r\n    getCanGenerateLetter: function () {\r\n        return this.dataService.getCanGenerateLetter({\r\n            idRender: this.properties.id,\r\n            xpath: this.getXpath(),\r\n            xpathContext: this.getContextXpath(),\r\n            idPageCache: this.properties.idPageCache\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Saves the form\r\n     */\r\n    saveForm: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        return form.saveForm();\r\n    },\r\n\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) == false) return true;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) == false) return true;\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (properties.required) {\r\n            if (self.letterOpened == false) {\r\n                message = self.getResource(\"render-letter-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                invalidElements.push({xpath: properties.xpath, message: message});\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns the current xpath\r\n     */\r\n    getXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Returns the current context xpath\r\n     */\r\n    getContextXpath: function () {\r\n        return this.properties.xpathContext;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Form Link Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for form link renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.formLink\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Set properties\r\n        var properties = this.properties;\r\n\r\n        properties.displayType = \"value\";\r\n        properties.maximized = bizagi.util.parseBoolean(this.properties.maximized) != null ? bizagi.util.parseBoolean(this.properties.maximized) : false;\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"formLink\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            align: properties.valueAlign,\r\n            displayName: properties.displayName,\r\n            value: properties.value,\r\n            editable: properties.editable,\r\n            likeButton: bizagi.util.parseBoolean(properties.likeButton) || false\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        // Executes the same template than normal render\r\n        return this.renderControl();\r\n\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Submits a edit request for a link display form\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    submitEditRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Don't send request when the link is not editable\r\n        if (!properties.editable && !properties.value)\r\n            return null;\r\n\r\n        return self.dataService.editLinkForm({\r\n            url: properties.editUrl,\r\n            idRender: properties.id,\r\n            xpath: self.getFormLinkXpath(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Submits a link save request for the displayed form\r\n     * @param data\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    submitSaveRequest: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Don't send request when the link is not editable\r\n        if (!properties.editable && !properties.value)\r\n            return null;\r\n\r\n        var xpath = self.getFormLinkXpath();\r\n        var xpathContext = xpath;\r\n\r\n        if (typeof (properties.xpathContext) !== \"undefined\" && properties.xpathContext !== \"\") {\r\n            xpathContext = xpath ? properties.xpathContext + \".\" + xpath : properties.xpathContext;\r\n        }\r\n\r\n        return self.dataService.saveLinkForm({\r\n            url: properties.saveUrl,\r\n            idRender: properties.id,\r\n            xpathContext: xpathContext,\r\n            submitData: data\r\n        }).done(function (response) {\r\n            var executeSubmitOnChange = true;\r\n\r\n            if (response && response.type === \"validationMessages\")\r\n                executeSubmitOnChange = false;\r\n\r\n            if (executeSubmitOnChange)\r\n                self.submitOnChange({});\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Submits a rollback request\r\n     * @param params\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitRollbackRequest: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function(){\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value){\r\n                return null;\r\n            }\r\n            else{\r\n                return self.dataService.rollbackLinkForm({\r\n                    url: properties.rollbackUrl,\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: params ? params.idPageCache : properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Submits a commit request\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitCommitRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function(){\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value){\r\n                return null;\r\n            } else {\r\n                return self.dataService.commitLinkForm({\r\n                    url: properties.commitUrl,\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Submits a checkpoint request\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitCheckpointRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function(){\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value){\r\n                return null;\r\n            } else {\r\n                return self.dataService.sendCheckpoint({\r\n                    url: properties.checkpointUrl,\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Submits a submitData request\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitDataRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function () {\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value) {\r\n                return null;\r\n            } else {\r\n\r\n\r\n                return self.dataService.submitData({\r\n                    url: properties.checkpointUrl,\r\n                    action: \"SUBMITDATA\",\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Automatically this render is valid, so we can't check a required link\r\n    },\r\n\r\n    /**\r\n     * Get Form Link xpath to use\r\n     * @returns {*}\r\n     */\r\n    getFormLinkXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Don't do anything\r\n    }\r\n\r\n});\r\n\r\n","/**\r\n *   Name: Bizagi Render Document Generator\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for document generator render\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.document\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        var properties = this.properties;\r\n\r\n        properties.validate = bizagi.util.parseBoolean(properties.validate) != null ? bizagi.util.parseBoolean(properties.validate) : false;\r\n        properties.downloadalldocuments = properties.downloadalldocuments ? properties.downloadalldocuments : false;\r\n        properties.allowGenerate = properties.allowGenerate !== undefined ? properties.allowGenerate : true;\r\n        properties.append = properties.append ? properties.append : false;\r\n\r\n        if (properties.caption) {\r\n            properties.caption = bizagi.util.trim(properties.caption);\r\n\r\n            if (properties.caption.length === 0) {\r\n                properties.caption = this.getResource(\"render-documentgenerator-button-label\");\r\n            }\r\n        } else {\r\n            properties.caption = this.getResource(\"render-documentgenerator-button-label\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n\r\n        self.preRenderControl();\r\n\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n        var downloadAllDocuments = properties.downloadalldocuments;\r\n        var allowGenerate = properties.allowGenerate;\r\n        var template = self.renderFactory.getTemplate(self.getTemplate());\r\n        var documents = properties.value || [];\r\n        var noFiles = documents ? (documents.length === 0) : true;\r\n\r\n        // Render template\r\n        var html = self.getControlHtml(template, mode, downloadAllDocuments, allowGenerate, properties, noFiles);\r\n\r\n        // Render current children\r\n        var items = this.renderDocumentsHtml(documents);\r\n        items += this.renderActionsHtml(documents, noFiles, downloadAllDocuments);\r\n\r\n        html = self.replaceFilesHtml(html, items);\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @param template\r\n     * @param mode\r\n     * @param downloadAllDocuments\r\n     * @param allowGenerate\r\n     * @param properties\r\n     * @param noFiles\r\n     * @returns {*|jQuery}\r\n     */\r\n    getControlHtml: function (template, mode, downloadAllDocuments, allowGenerate, properties, noFiles) {\r\n        var self = this;\r\n\r\n        return $.fasttmpl(template, {\r\n            noActivateButton: false,\r\n            editable: mode !== \"execution\",\r\n            mode: mode,\r\n            downloadalldocuments: downloadAllDocuments,\r\n            required: properties.required,\r\n            allowgenerate: allowGenerate,\r\n            xpath: self.getXpath(properties.xpath),\r\n            append: properties.append,\r\n            caption: properties.caption,\r\n            noFiles: noFiles,\r\n            allowSendInMail: properties.allowSendInMail\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @param xpath\r\n     * @returns {*}\r\n     */\r\n    getXpath: function (xpath) {\r\n        return xpath;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    preRenderControl: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {boolean}\r\n     */\r\n    activateButton: function () {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @param xpath\r\n     * @returns {*}\r\n     */\r\n    getDocumentXpath: function (xpath) {\r\n        return xpath;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getContextXpath: function () {\r\n        return this.properties.xpathContext;\r\n    },\r\n\r\n    /**\r\n     * Renders a single document item\r\n     * @param file\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderDocumentItem: function (file) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var template = self.renderFactory.getTemplate(self.getTemplateItem());\r\n        var url = self.buildItemUrl(file);\r\n\r\n        // Don't render urls when not running in execution mode\r\n        if (mode !== \"execution\") url = \"javascript:void(0);\";\r\n\r\n        var html = $.fasttmpl(template, {\r\n            url: url,\r\n            allowDelete: self.properties.allowDelete,\r\n            filename: file.fileName,\r\n            mode: mode,\r\n            editable: self.properties.editable,\r\n            joined: false\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (file) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.getUploadFileUrl({\r\n            idRender: properties.id,\r\n            xpath: self.getDocumentXpath(properties.xpath),\r\n            xpathContext: self.getContextXpath(),\r\n            idPageCache: properties.idPageCache,\r\n            fileId: file.id,\r\n            sessionId: self.getSessionId()\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Builds the download all items item url\r\n     * @returns {*}\r\n     */\r\n    buildAllDocumentsUrl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var returnLink = self.dataService.getAllDocumentsDownloadUrl({\r\n            xpath: self.getDocumentXpath(properties.xpath),\r\n            xpathContext: self.getContextXpath(),\r\n            idPageCache: properties.idPageCache,\r\n            idCase: properties.caseId,\r\n            idWorkItem: properties.workitemId,\r\n            sessionId: self.getSessionId()\r\n        });\r\n\r\n        return returnLink;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed (Virtual method)\r\n     * @returns {string}\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n\r\n        return \"<div></div>\";\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        if (mode !== \"design\") {\r\n            var control = self.getControl();\r\n            var htmlControl = self.renderControl();\r\n\r\n            control.append(htmlControl);\r\n\r\n            self.updateControlForPrintMode(control);\r\n\r\n            // Execute the same as post-render\r\n            self.postRender();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Saves the form before the document generation\r\n     * @returns {*}\r\n     */\r\n    validateContainer: function () {\r\n        // Check if the form is valid, then generate\r\n        var form = this.getFormContainer();\r\n        return form.validateForm();\r\n    },\r\n\r\n    /**\r\n     * Saves the form before the document generation\r\n     * @returns {*}\r\n     */\r\n    save: function () {\r\n        var form = this.getFormContainer();\r\n\r\n        return form.saveForm();\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{files}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{actions}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceActionsHtml: function (html, replace) {\r\n        return html.replace(\"{{actions}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @param invalidElements\r\n     * @returns {boolean}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties,\r\n            message;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) === false) {\r\n            return true;\r\n        }\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) === false) {\r\n            return true;\r\n        }\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (properties.required && !properties.buttonExecuted) {\r\n            if (self.value) {\r\n                if (self.value.length > 0) return true;\r\n                message = self.getResource(\"render-document-required-text\");\r\n                invalidElements.push({xpath: properties.xpath, message: message});\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var mode = self.getMode();\r\n\r\n        // Call base\r\n        self._super();\r\n\r\n        // Attach handler\r\n        var generateLink = $(\".ui-bizagi-button-documentgenerator\", control);\r\n        if (mode === \"execution\") {\r\n            generateLink.click(function (e) {\r\n                if (e.isPropagationStopped()) return;\r\n                e.stopPropagation();\r\n\r\n                self.properties.buttonExecuted = true;\r\n\r\n                if (self.properties.validate) {\r\n                    // Check if the form is valid, then generate\r\n                    var isValid = self.validateContainer();\r\n                    if (isValid) {\r\n                        self.documentTemplateGenerate();\r\n                    }\r\n                } else {\r\n                    // Just generate the form\r\n                    self.documentTemplateGenerate();\r\n                }\r\n\r\n                self.properties.buttonExecuted = false;\r\n            });\r\n        }\r\n\r\n        // Configure preview handler\r\n        $(\".ui-bizagi-document-preview\", control).click(function (e) {\r\n            if (e.isPropagationStopped()) return;\r\n            e.stopPropagation();\r\n\r\n            self.showDocumentPreview($(this).data(\"url\"), $(this).data(\"filename\"));\r\n        });\r\n\r\n        // Configure preview handler\r\n        $(\".ui-bizagi-container-documents-item-delete\", control).click(function (e) {\r\n            if (e.isPropagationStopped()) return;\r\n            e.stopPropagation();\r\n\r\n            self.deleteDocumentTemplate($(this).data(\"filename\"));\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Creates the event of generation of templates.\r\n     * @param filename\r\n     */\r\n    deleteDocumentTemplate: function (filename) {\r\n        var self = this;\r\n        var params = {\r\n            xpath: self.properties.xpath + \"[fileName='\" + filename + \"']\",\r\n            idRender: self.properties.id,\r\n            xpathContext: self.getContextXpath(),\r\n            idPageCache: self.properties.idPageCache\r\n        };\r\n\r\n        self.startLoading();\r\n\r\n        $.when(self.dataService.deleteUploadFile(params))\r\n            .done(function () {\r\n                $.when(self.dataService.multiaction().getPropertyData({\r\n                    xpath: self.properties.xpath,\r\n                    idRender: self.properties.id,\r\n                    xpathContext: self.getContextXpath(),\r\n                    idPageCache: self.properties.idPageCache,\r\n                    property: \"value\"\r\n                })).done(function (documents) {\r\n                    self.resolveDeleteDocumentTemplate(documents, false, self.properties.downloadalldocuments);\r\n\r\n                    // Finish loading\r\n                    self.endLoading();\r\n                });\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Creates the event of generation of templates.\r\n     */\r\n    documentTemplateGenerate: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        self.startLoading();\r\n\r\n        //Get the context xPath\r\n        properties.xpathcontext = self.getContextXpath();\r\n        properties.xpath = self.getDocumentXpath(properties.xpath);\r\n\r\n        self.save().done(function () {\r\n\r\n            bizagi.showErrorAlertDialog = false;\r\n\r\n            $.when(self.dataService.generateDocumentTemplate(properties))\r\n                .done(function () {\r\n\r\n                    // Fetch again the value property\r\n                    $.when(self.dataService.multiaction().getPropertyData({\r\n                        xpath: properties.xpath,\r\n                        idRender: properties.id,\r\n                        xpathContext: self.getContextXpath(),\r\n                        idPageCache: properties.idPageCache,\r\n                        property: \"value\"\r\n                    })).done(function (documents) {\r\n                        self.resolveDocumentTemplateGenerate(documents, false, properties.downloadalldocuments);\r\n\r\n                        // Finish loading\r\n                        self.endLoading();\r\n                    });\r\n\r\n                }).fail(function (error) {\r\n                self.endLoading();\r\n\r\n                // Add error messages\r\n                self.showErrorMessage(error);\r\n            });\r\n        }).fail(function (message) {\r\n            self.endLoading();\r\n\r\n            // Add error messages\r\n            self.showErrorMessage(message);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Show the error message when something went wrong with the service.\r\n     * @param error\r\n     */\r\n    showErrorMessage: function (error) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var messageText = self.resources.getResource('render-upload-alert-maxsize').replace(\"{0}\", BIZAGI_SETTINGS.UploadMaxFileSize);\r\n\r\n        try {\r\n            messageText = error && typeof (error.responseText) !== \"undefined\" ? JSON.parse(error.responseText).message : error;\r\n        } catch (e) {\r\n        }\r\n\r\n        form.addErrorMessage(messageText);\r\n        form.endLoading();\r\n    },\r\n\r\n    /**\r\n     * Shows the document if the flag is set. (virtual Function)\r\n     */\r\n    autoOpenDocuments: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed (Virtual method)\r\n     * @param url\r\n     * @param filename\r\n     */\r\n    showDocumentPreview: function (url, filename) {\r\n    },\r\n\r\n    /**\r\n     * Identifies the extension of the file in a simpler way that ECM does\r\n     * @param file\r\n     * @returns {string}\r\n     */\r\n    returnCssTypeFile: function (file) {\r\n\r\n        if (file == undefined || file.lenght === 0) {\r\n            return \"ui-bizagi-document-upload-item-generic-file\";\r\n        }\r\n\r\n        var extension = file.substr((file.lastIndexOf('.') + 1));\r\n\r\n        switch (extension) {\r\n            case 'docx':\r\n                return \"ui-bizagi-document-upload-item-doc\";\r\n            case 'pdf':\r\n                return \"ui-bizagi-document-upload-item-pdf\";\r\n            case 'xlsx':\r\n                return \"ui-bizagi-document-upload-item-xls\";\r\n            default:\r\n                return \"ui-bizagi-document-upload-item-generic-file\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Redraw documents when needed\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    redrawDocuments: function (documents, noFiles, downloadAllDocuments) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var html = \"\";\r\n        var documentContainer = $(\"[data-component='files']\", control);\r\n\r\n        // Clear current links\r\n        documentContainer.empty();\r\n\r\n        // Draw links again\r\n        html += this.renderDocumentsHtml(documents);\r\n\r\n        // Check if there are documents and the flag to download all are available to show the link.\r\n        html += this.renderActionsHtml(documents, noFiles, downloadAllDocuments);\r\n\r\n        documentContainer.append(html);\r\n\r\n        //Set value\r\n        self.setValue(documents);\r\n    },\r\n\r\n    /**\r\n     * This method must be implemented by the specific class of each device. (Virtual method)\r\n     * @param file\r\n     * @returns {*|*|*}\r\n     */\r\n    renderAllDocumentDownload: function (file) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n\r\n        var template = self.renderFactory.getTemplate(self.getTemplateItem());\r\n        var url = self.buildAllDocumentsUrl();\r\n\r\n        // Don't render urls when not running in execution mode\r\n        if (mode !== \"execution\") url = \"javascript:void(0);\";\r\n\r\n        var html = $.fasttmpl(template, {\r\n            url: url,\r\n            allowDelete: properties.allowDelete,\r\n            filename: file.fileName,\r\n            mode: mode,\r\n            joined: true\r\n        });\r\n\r\n        return self.removeDeleteButton(html);\r\n    },\r\n\r\n    /**\r\n     * removeDeleteButton\r\n     * @param html\r\n     * @returns {*}\r\n     */\r\n    removeDeleteButton: function (html) {\r\n        var startIndex = html.indexOf(\"<span class=\\\"ui-bizagi-container-documents-item-delete\");\r\n\r\n        if (startIndex > 0) {\r\n            var restOfWord = html.substring(startIndex);\r\n            var finishIndex = restOfWord.indexOf(\"</span>\") + 7;\r\n\r\n            return html.substring(0, startIndex) + restOfWord.substring(finishIndex);\r\n        } else {\r\n            return html;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Process request of DeleteDocumentTemplate action\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    resolveDocumentTemplateGenerate: function (documents, noFiles, downloadAllDocuments) {\r\n        // Redraw documents\r\n        this.redrawDocuments(documents, noFiles, downloadAllDocuments);\r\n        this.value = documents;\r\n\r\n        // This does not apply for mobile.\r\n        this.autoOpenDocuments();\r\n        this.configureHandlers();\r\n    },\r\n\r\n    /**\r\n     * Process request of DocumentTemplateGenerate action\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    resolveDeleteDocumentTemplate: function (documents, noFiles, downloadAllDocuments) {\r\n        // Redraw documents\r\n        this.redrawDocuments(documents, noFiles, downloadAllDocuments);\r\n        this.value = documents;\r\n\r\n        // This does not apply for mobile.\r\n        this.configureHandlers();\r\n    },\r\n\r\n    /**\r\n     * Method to renders the documents\r\n     * @param documents\r\n     * @returns {string}\r\n     */\r\n    renderDocumentsHtml: function (documents) {\r\n        var items = \"\";\r\n\r\n        for (var i = 0; i < documents.length; i++) {\r\n            var document = {id: documents[i][0], fileName: documents[i][1]};\r\n            var item = this.renderDocumentItem(document);\r\n\r\n            items += item;\r\n        }\r\n\r\n        return items;\r\n    },\r\n\r\n    /**\r\n     * Methos to renders action of document\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     * @returns {string}\r\n     */\r\n    renderActionsHtml: function (documents, noFiles, downloadAllDocuments) {\r\n        var actions = \"\";\r\n\r\n        if (downloadAllDocuments && (!noFiles && documents.length > 0)) {\r\n            var downloadAllDocumentsLink = {fileName: this.getResource(\"render-document-downloadalldocuments\")};\r\n            var action = this.renderAllDocumentDownload(downloadAllDocumentsLink);\r\n\r\n            actions += action;\r\n        }\r\n\r\n        return actions;\r\n    },\r\n\r\n    getTemplate: function () {\r\n        return \"document\";\r\n    },\r\n\r\n    getTemplateItem: function () {\r\n        return \"document-item\";\r\n    },\r\n\r\n    getErrorTemplate: function () {\r\n        return \"form-error\";\r\n    },\r\n\r\n    getTemplateDownload: function () {\r\n        return \"document-download\";\r\n    },\r\n\r\n    getTemplateReadonly: function () {\r\n        return \"document-readonly\";\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Render Cascading Combo Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for cascading combo renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.cascadingCombo\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX\r\n}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Create dependency collection\r\n        self.dependants = [];\r\n        self.isDependant = false;\r\n    },\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.hasLocalData = bizagi.util.isEmpty(properties.parentCombo) ? properties.hasLocalData : false;\r\n\r\n        if (properties.value && properties.value.id === undefined)\r\n            properties.value = null;\r\n\r\n        self.value = properties.value;\r\n\r\n        // Add empty node if configured\r\n        if (properties.hasLocalData)\r\n            properties.data = self.complementData(properties.data);\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        // Check if this is a dependant combo\r\n        var parentCombo = self.parentCombo = self.getParentCombo();\r\n        if (parentCombo != null) {\r\n            var renderType = bizagi.util.normalizeType(parentCombo.properties.type);\r\n\r\n            if (/^cascadingcombo$/i.test(renderType)) {\r\n                self.isDependant = true;\r\n            }\r\n        }\r\n\r\n        // Apply element plugin, set a flag to avoid dependant combo ajax requests\r\n        self.initializingCascadingCombo = true;\r\n\r\n        // Call base\r\n        var result = this._super();\r\n\r\n        if (mode !== \"execution\") {\r\n            self.initializingCascadingCombo = false;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        self.initializingCascadingCombo = false;\r\n\r\n        // Bind with parent combo\r\n        if (self.isDependant) {\r\n            self.parentCombo.bindDependantCombo(self);\r\n        }\r\n    },\r\n\r\n    configureReadOnlyHandlers: function () {\r\n        var self = this;\r\n        self.initializingCascadingCombo = false;\r\n\r\n        // Bind with parent combo\r\n        if (self.isDependant) {\r\n            self.parentCombo.bindDependantCombo(self);\r\n        }\r\n    },\r\n    /*\r\n    *   Refresh the combo, after it has been painted\r\n    */\r\n    refresh: function (params, isInitialValue) {\r\n        var self = this;\r\n\r\n        // Wait until current element is rendered\r\n        $.when(self.isRendered()).done(function () {\r\n\r\n            // Unbind previous handler\r\n            // self.parentCombo.unbindDependantCombo(self);\r\n\r\n            // Clear current control\r\n            var control = self.getControl();\r\n            var mode = self.getMode();\r\n            control.empty();\r\n\r\n            // Render combo again\r\n            $.when(self.renderCombo(params)).then(function (html) {\r\n                // Append new element\r\n                control.html(html);\r\n\r\n                // Post-render method\r\n                self.postRender();\r\n\r\n                if (mode == \"execution\") {\r\n                    self.configureHandlers();\r\n                }\r\n\r\n                // Set current value\r\n                if (self.getValue() !== undefined) {\r\n                    self.setDisplayValue(self.getValue());\r\n                }\r\n\r\n                if (self.deferredVisible) {\r\n                    self.deferredVisible.resolve();\r\n                }\r\n\r\n                self.trigger(\"select\", [self.value, isInitialValue]);\r\n\r\n            });\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getData: function (params) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        // Just execute ajax calls when rendering in execution mode\r\n        if (mode != \"execution\") return self.getDummyData();\r\n\r\n        // Do not load dependant combos when there are no parent id\r\n        if (self.isDependant) {\r\n            if (self.parentCombo && params) {\r\n                self.properties.remoteDataLoaded = false;\r\n            }\r\n\r\n            // Return an empty array when there are no parent defined when the combo is dependant\r\n\r\n            var parentValue = (self.parentCombo.selectedValue) ? self.parentCombo.selectedValue.id : '';\r\n\r\n            if (parentValue != '') {\r\n                return this._super(params);\r\n            } else {\r\n                return [];\r\n            }\r\n        }\r\n\r\n        return this._super(params);\r\n    },\r\n\r\n\r\n    /* \r\n    *   Bind the combos to create the cascading feature\r\n    */\r\n    bindDependantCombo: function (dependantCombo) {\r\n        var self = this;\r\n        var renderType = bizagi.util.normalizeType(dependantCombo.properties.type);\r\n\r\n        // Check it is a cascading combo\r\n        if (/^cascadingcombo$/i.test(renderType)) {\r\n\r\n            // Append to dependant combos\r\n            self.dependants.push(dependantCombo);\r\n\r\n            // When this combo is selected we need to make the other combo to auto fill with an extra filter\r\n            dependantCombo.onChangeFunction = function (event, item, isInitialValue) {\r\n                // Fill items for next combo\r\n                self.refreshDependantCombo(dependantCombo, item.id, self.focusDependant, isInitialValue);\r\n\r\n                //if initial value is true, it prevents deleting the next combo\r\n                if (!isInitialValue) {\r\n                    // Clean next inputs\r\n                    dependantCombo.cleanInput();\r\n                }\r\n            };\r\n\r\n            if (!self.isEventBinded(\"select\")) {\r\n                self.bind(\"select\", dependantCombo.onChangeFunction);\r\n            }\r\n\r\n            // After the event binding has been made, we need to fill the new dependant render if this instance (the parent) has a value\r\n            if (!bizagi.util.isEmpty(self.getValue())) {\r\n\r\n                // Auto fill dependant items with current value\r\n                if (self.properties.hasLocalData) {\r\n                    self.refreshDependantCombo(dependantCombo, self.getValue().id);\r\n                }\r\n\r\n            }\r\n        }\r\n    },\r\n    isEventBinded: function (event) {\r\n        if (typeof $._data(this.observableElement.get(0), \"events\") === \"undefined\") {\r\n            return false;\r\n        } else {\r\n            if (typeof $._data(this.observableElement.get(0), \"events\")[event] === \"undefined\") {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /* \r\n    *   Unbind the combos that are being redrawn\r\n    */\r\n    unbindDependantCombo: function (dependantCombo) {\r\n        // When this combo is selected we need to make the other combo to auto fill with an extra filter\r\n        this.unbind(\"select\", dependantCombo.onChangeFunction);\r\n    },\r\n\r\n    /*\r\n    *   Fills the next dependant combo based on the given value\r\n    */\r\n    refreshDependantCombo: function (dependant, parentValue, focus, isInitialValue) {\r\n        var self = this;\r\n        var params = {};\r\n        params[self.Class.BA_ACTION_PARAMETER_PREFIX + \"parent\"] = parentValue;\r\n\r\n        dependant.deferredVisible = $.Deferred();\r\n\r\n        if (!isInitialValue) {\r\n            // Clear dependant value\r\n            dependant.setValue(\"\", false);\r\n        }\r\n\r\n        dependant.refresh(params, isInitialValue);\r\n\r\n        if (focus) {\r\n            $.when(dependant.deferredVisible.promise()).done(function () {\r\n                dependant.inputCombo.trigger(\"click\");\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Empty html when render from action\r\n     */\r\n\r\n    emptyControlByChangeEditability: function () {\r\n        var control = this.getControl();\r\n        control.empty();\r\n    },\r\n\r\n    /* \r\n    *   Cleans the combo value\r\n    */\r\n    cleanInput: function () {\r\n        this.triggerHandler(\"select\", {id: 0});\r\n    },\r\n\r\n    /*\r\n    *   Search for the other cascading combo refering this one, by idRender\r\n    */\r\n    getParentCombo: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Check if parentCombo is defined\r\n        if (properties.parentCombo === undefined)\r\n            return null;\r\n\r\n        // Get form reference\r\n        var form = self.getFormContainer();\r\n        var renderType = bizagi.util.normalizeType(self.properties.type);\r\n        var controls = /^cascadingcombo$/i.test(renderType) ? form.getRenderByType(properties.type) : [];\r\n\r\n        var i = 0;\r\n        var j = 0;\r\n        var parents = [];\r\n\r\n        var control = null;\r\n\r\n        for (; i < controls.length; i++) {\r\n            if (properties.parentCombo === controls[i].properties.id) {\r\n                parents.push({control: controls[i], index: i});\r\n            }\r\n        }\r\n\r\n        if (parents.length > 1) {\r\n            var parentLength, parent, xpathParent, parentArray;\r\n\r\n            for (; j < parents.length; j++) {\r\n                parent = parents[j].control;\r\n                xpathParent = parent.properties.xpath;\r\n                parentArray = xpathParent.split(\".\");\r\n                parentLength = parentArray.length;\r\n                xpathParent = parentArray.slice(0, parentLength - 1).join(\".\");\r\n\r\n                if (xpathParent === properties.xpath) {\r\n                    control = controls[parents[j].index];\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            control = form.getRenderById(properties.parentCombo);\r\n        }\r\n\r\n        // Return parent combo\r\n        return control;\r\n    },\r\n\r\n    /* \r\n    *  Method to determine if the render value can be sent to the server or not\r\n    */\r\n    canBeSent: function () {\r\n        var self = this;\r\n\r\n        // If the render has dependants we can't send to the server\r\n        return self._super() && bizagi.util.isMapEmpty(self.dependants);\r\n    },\r\n\r\n    /*\r\n    *   Determines if we need to show the current data regardless if it belongs to data or not\r\n    *   Can be overriden to change behaviour\r\n    */\r\n    showCurrentData: function () {\r\n        var mode = this.getMode();\r\n\r\n        if (mode != \"execution\") return true;\r\n        return false;\r\n    },\r\n\r\n    /*\r\n    *   Enables submit on change feature for the current render\r\n    */\r\n    configureSubmitOnChange: function () {\r\n        var self = this;\r\n\r\n        if (!self.configured) {\r\n            // Call super\r\n            self._super();\r\n            self.configured = true;\r\n        }\r\n    },\r\n\r\n    internalSubmitOnChange: function (data, bRefreshForm) {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        if (self.isDependant && self.canBeSent() && self.itemSelected !== undefined)\r\n            return self._super(data, bRefreshForm);\r\n        return defer.resolve();\r\n    },\r\n    /*\r\n    *   Sets the initial value for the renders\r\n    */\r\n    internalSetInitialValue: function () {\r\n        var self = this;\r\n        // Call original method\r\n        self._super();\r\n\r\n        if (self.value && self.isDependant == false) {\r\n            self.internalSetInitialValueFlag = true;\r\n            self.trigger(\"select\", [self.value, true]);\r\n        }\r\n\r\n        self.internalSetInitialValueFlag = false;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Render List Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for list renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.list\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data \r\n     * @returns {} \r\n     */\r\n    initializeData: function(data) {      \r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.listSize = properties.listSize || 0;\r\n    },\r\n\r\n    /**\r\n     * Gets the template used by the combo render can be overriden in subclasses\r\n     * to reuse logic and just change the template\r\n     * @returns {} \r\n     */\r\n    getTemplateName: function() {\r\n        return \"list\";\r\n    },\r\n\r\n    /**\r\n     * Determines if we need to show the current data regardless if it belongs\r\n     * to data or not Can be overriden to change behaviour    \r\n     * @returns {} \r\n     */\r\n    showCurrentData: function() {\r\n        return false;\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render MultiSelect Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for multiselect renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.multiSelect\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n        if (Array.isArray(this.value)) {\r\n            this.value = this.properties.value = JSON.encode({\"value\": this.value});\r\n            this.properties.originalValue = this.properties.previousValue = this.value;\r\n        }\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) !== null ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.maxRecords = Number(properties.maxRecords) || 20;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"list-multiselect\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            editable: properties.editable,\r\n            align: properties.valueAlign\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"list-multiselect\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            editable: properties.editable,\r\n            align: properties.valueAlign\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Fetch the data into a deferred\r\n     * @returns {*[]}\r\n     */\r\n    getData: function () {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n        var properties = this.properties;\r\n\r\n        // Go to server\r\n        self.dataService.multiaction().getData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contexttype || null,\r\n            idPageCache: properties.idPageCache\r\n        }).done(function (data) {\r\n            properties.data = self.normalizeData(data);\r\n\r\n            defer.resolve(properties.data);\r\n\r\n        }).fail(function (data) {\r\n            if (data.type === \"not-processed\")\r\n                return;\r\n\r\n            // Show error from server\r\n            var auxMsg = \"\";\r\n            var form = self.getFormContainer();\r\n            var msgObj = self.properties.displayName + \": \";\r\n\r\n            if (typeof data == \"string\") {\r\n                auxMsg = JSON && JSON.parse(data) || $.parseJSON(data);\r\n            } else {\r\n                auxMsg = data;\r\n            }\r\n\r\n            msgObj += auxMsg.message;\r\n\r\n            form.addValidationMessage(msgObj);\r\n\r\n            defer.reject(data);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        triggerEvents = triggerEvents !== undefined ? triggerEvents : true;\r\n\r\n        if(Array.isArray(value)){\t\t\r\n\t\t\tvalue = JSON.encode({\"value\": value});\r\n\t\t} else {\r\n\t\t\tvalue = value;\r\n\t\t}\r\n\r\n        this._super(value, triggerEvents);\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns the internal value\r\n     * @returns {*|Array}\r\n     */\r\n    getValue: function () {\r\n        return this.value || [];\r\n    },\r\n\r\n    /**\r\n     * Get list of data\r\n     * @returns {*|Array}\r\n     */\r\n    getDataValue: function () {\r\n        var list;\r\n\r\n        try {\r\n            list = JSON.parse(this.value);\r\n\r\n            return list.value || [];\r\n        } catch (e) {\r\n            return [];\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if a render has no value for required validation\r\n     * @returns {*|Array|boolean}\r\n     */\r\n    hasValue: function () {\r\n        var values = this.getDataValue();\r\n\r\n        return values && values.length > 0;\r\n    },\r\n\r\n    getElementsToStylize: function (context) {\r\n        return $(\".bz-multiselect .bz-multiselect__tag:not(.bz-multiselect__plus)\", context);\r\n    },\r\n\r\n    /**\r\n     * Add elements to global value\r\n     * @param value\r\n     */\r\n    addElement: function (value) {\r\n        var newValue = this.getDataValue();\r\n\r\n        newValue.push(value);\r\n\r\n        this.setValue(newValue);\r\n    },\r\n\r\n    /**\r\n     * Remove elements to global value\r\n     * @param value\r\n     */\r\n    removeElement: function (value) {\r\n        var idToRemove = value.id;\r\n        var newValue = this.getDataValue()\r\n            .filter(function (item) {\r\n                return item.id !== idToRemove;\r\n            });\r\n\r\n        this.setValue(newValue);\r\n    },\r\n\r\n    /**\r\n     * Submit the selected data to the server in order to be saved\r\n     */\r\n    submitData: function () {\r\n        var data = {};\r\n\r\n        // Add current data\r\n        data[this.properties.xpath] = this.getValue();\r\n\r\n        // Executes submit on change\r\n        this.submitOnChange(data);\r\n    },\r\n\r\n    /**\r\n     * Mark a item how checked\r\n     * @param id\r\n     * @returns {*}\r\n     */\r\n    markAsChecked: function (id) {\r\n        var self = this;\r\n\r\n        return self.selected.some(function (item, index) {\r\n            var found = item.id === id;\r\n\r\n            if (found) self.selected.splice(index, 1);\r\n            return found;\r\n        });\r\n    },\r\n\r\n    isChecked: function (values, id) {\r\n        return values.some(function (item) {\r\n            return item.id == id;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to verify if can add more items\r\n     * @param $tagsContainer\r\n     * @returns {boolean}\r\n     */\r\n    canAddMoreItems: function ($tagsContainer) {\r\n        var self = this;\r\n        var containerWidth = parseInt($tagsContainer.css(\"width\"));\r\n        var $children = $tagsContainer.children();\r\n\r\n        var childrenWidth = $children\r\n            .toArray()\r\n            .reduce(function (acc, child) {\r\n                acc += self.getElementWidth(child);\r\n                return acc;\r\n            }, 0);\r\n\r\n        return containerWidth > (childrenWidth + self.Class.MORE_OPTION_WIDTH)\r\n\r\n    },\r\n\r\n    /**\r\n     * getElementWidth\r\n     * @param element\r\n     * @returns {*}\r\n     */\r\n    getElementWidth: function (element) {\r\n        var styles = window.getComputedStyle(element);\r\n        var outerWidth = $(element).outerWidth();\r\n        return outerWidth + [\r\n            \"padding-left\",\r\n            \"padding-right\",\r\n            \"margin-left\",\r\n            \"margin-right\"\r\n        ].reduce(function (acc, property) {\r\n            acc += parseInt(styles[property]);\r\n            return acc;\r\n        }, 0);\r\n    },\r\n\r\n    /**\r\n     * Filtering list of elements\r\n     * @param query\r\n     * @param $container\r\n     */\r\n    filterList: function (query, $container) {\r\n\r\n        $container.filter(function () {\r\n            var stringContainer = $(this).text().toUpperCase();\r\n            var stringToSearch = query.toUpperCase();\r\n\r\n            if (stringContainer.indexOf(stringToSearch) >= 0) {\r\n                return $(this);\r\n            } else {\r\n                $(this).hide();\r\n            }\r\n        }).show();\r\n\r\n    },\r\n\r\n    /**\r\n     * addSelectedElements\r\n     */\r\n    addSelectedElements: function () {\r\n    },\r\n\r\n    /**\r\n     * Find item by id\r\n     * @param id\r\n     * @returns {[]}\r\n     */\r\n    findItemById: function (id) {\r\n        return (this.properties.data || []).find(function (item) {\r\n            return item.id == id;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n        return bizagi.util.formatItem(value);\r\n    },\r\n\r\n    /**\r\n     * Complement data from server before control implementation\r\n     * @param data\r\n     */\r\n    normalizeData: function (data) {\r\n        (data || []).forEach(function (item) {\r\n            item.value = typeof (item.value) !== \"undefined\" && item.value !== null ? item.value : \"\";\r\n        });\r\n\r\n        return data;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Money Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for money numbers\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.money\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        // Configures symbol\r\n        properties.showsymbol = typeof (properties.showsymbol) !== \"undefined\" ? properties.showsymbol : true;\r\n\r\n        if (properties.showsymbol) {\r\n            var symbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.symbol : format.symbol;\r\n            properties.symbol = properties.currencySymbol ? properties.currencySymbol : symbol;\r\n        } else {\r\n            properties.symbol = \"\";\r\n        }\r\n\r\n        properties.groupDigits = true;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Radio Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for radio renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.radio\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.horizontal = bizagi.util.parseBoolean(properties.horizontal) || false;\r\n\r\n        // Set a random identifier to fix a problem when using radio buttons inside grids and the plugin mismatch the elements because all of them have the same name\r\n        properties.unique = bizagi.util.randomNumber(1000, 1000000);\r\n    },\r\n\r\n    /**\r\n     * Gets the template used by the combo render\r\n     * Can be overridden in subclasses to reuse logic and just change the template\r\n     * @returns {string}\r\n     */\r\n    getTemplateName: function () {\r\n        return \"radio\";\r\n    },\r\n\r\n    /**\r\n     * Determines if we need to show the empty node or not\r\n     * Can be overridden to change behaviour\r\n     * @returns {boolean}\r\n     */\r\n    showEmpty: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Determines if we need to show the current data regardless if it belongs to data or not\r\n     * Can be overridden to change behaviour\r\n     * @returns {boolean}\r\n     */\r\n    showCurrentData: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Adds custom parameters to process the template\r\n     * @returns {{vertical: boolean}}\r\n     */\r\n    getTemplateParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return {\r\n            vertical: !properties.horizontal,\r\n            horizontal: properties.horizontal\r\n        };\r\n    },\r\n\r\n    /**\r\n     * Cleans current data\r\n     */\r\n    cleanData: function () {\r\n        var self = this;\r\n        var value = {id: \"\", label: \"\"};\r\n        var selectedItem = self.element.find(\".ui-radio-state-checked\");\r\n\r\n        selectedItem.removeClass(\"ui-radio-state-checked\");\r\n        self.setDisplayValue(value);\r\n        self.setValue(value, false);\r\n        self.clearDisplayValue();\r\n    },\r\n\r\n    /**\r\n     * Check value of control is changed\r\n     * @returns {boolean}\r\n     */\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var value = self.getValue();\r\n        var compareValue = properties.originalValue;\r\n        var baseValue = properties.defaultValue;\r\n\r\n        var result = true;\r\n\r\n        if (value && value.length !== undefined) {\r\n            value = value[0];\r\n        }\r\n        if (compareValue && compareValue.length !== undefined) {\r\n            compareValue = compareValue[0];\r\n        }\r\n        if (baseValue && baseValue.length !== undefined) {\r\n            baseValue = baseValue[0];\r\n        }\r\n\r\n        value = value && value.id !== undefined ? value.id : value;\r\n        compareValue = compareValue && compareValue.id !== undefined ? compareValue.id : compareValue;\r\n        baseValue = baseValue && baseValue.id !== undefined ? baseValue.id : baseValue;\r\n\r\n        if (baseValue !== undefined) {\r\n            if ((baseValue == value) && (value == compareValue)) {\r\n                result = false;\r\n            } else {\r\n                if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                    result = false;\r\n                } else {\r\n                    result = (compareValue == value) ? false : true;\r\n                }\r\n            }\r\n        } else {\r\n            if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue == value) ? false : true;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    },\r\n    /**\r\n     * Clean html because some scenarios render twice\r\n     */\r\n    emptyControlByAsyncRenderDeferred: function () {\r\n        var control = this.getControl();\r\n        control.empty();\r\n    }\r\n});\r\n\r\n","/*\r\n*   Name: Bizagi Render Search List Control\r\n*   Author: UI Forms Team\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.searchList\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data \r\n     * @returns {} \r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.maxRecords = Number(properties.maxRecords) || 20;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) !== null ? bizagi.util.parseBoolean(properties.editable) : true;\r\n\r\n        // Set value\r\n        self.setValue(properties.value);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {} \r\n     */\r\n    renderControl: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"searchList\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            value: properties.value,\r\n            allowTyping: properties.allowTyping,\r\n            items: properties.value,\r\n            hasSearchForm: properties.searchForms ? true : false,\r\n            editable: properties.editable\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {} \r\n     */\r\n    renderReadOnly: function() {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param {} value \r\n     * @returns {} \r\n     */\r\n    setValue: function(value) {\r\n        this.value = JSON.encode({ \"value\": value });\r\n        this.triggerRenderChange();\r\n    },\r\n\r\n    /**\r\n     * Add elements to global value\r\n     * @param value = { id:integer,value:[string || array] }\r\n     * @returns {} \r\n     */\r\n    addElement: function(value) {\r\n        var list = JSON.parse(this.value);\r\n\r\n        list.value.push(value);\r\n\r\n        this.setValue(list.value);\r\n    },\r\n\r\n    /**\r\n     * Remove elements to global value\r\n     * @param value = { id:integer }\r\n     * @returns {} \r\n     */\r\n    removeElement: function(value) {\r\n        var list = JSON.parse(this.value);\r\n        var result = [];\r\n\r\n        $.each(list.value, function(key, val) {\r\n            if (val.id != value.id) {\r\n                result.push({ id: val.id, value: val.value });\r\n            }\r\n        });\r\n\r\n        this.setValue(result);\r\n    },\r\n\r\n    /**\r\n     * Remove last element to global value\r\n     * @returns {} \r\n     */\r\n    removeLastElement: function() {\r\n        var list = JSON.parse(this.value);\r\n\r\n        if (list.value.length > 0) {\r\n            list.value.pop();\r\n            this.setValue(list.value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fetch the data into a deferred\r\n     * @param {} params \r\n     * @returns {} \r\n     */\r\n    getData: function(params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        // Resolve with remote data\r\n        self.dataService.getSearchData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            term: properties.term,\r\n            extra: params\r\n        }).done(function(data) {\r\n            // Resolve with fetched data\r\n            properties.data = data;\r\n            defer.resolve(properties.data);\r\n        }).fail(function(data) {\r\n            var hideStatus = data.hideStatus || false;\r\n\r\n            defer.resolve({});\r\n\r\n            if (!hideStatus) {\r\n                self.trigger(\"onSearchError\", data);\r\n            }\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Submits the selected data to the server in order to be saved\r\n     * @returns {} \r\n     */\r\n    submitData: function() {\r\n        var data = {};\r\n\r\n        // Add current data\r\n        data[this.properties.xpath] = this.getValue();\r\n\r\n        // Executes submit on change\r\n        this.submitOnChange(data);\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {} \r\n     */\r\n    canBeSent: function() {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Check if the control has value\r\n     * @returns {} \r\n     */\r\n    hasValue: function() {\r\n        var list = this.getListItems();\r\n\r\n        return list.length > 0;\r\n    },\r\n\r\n    getListItems: function(){\r\n        var value = this.getValue();\r\n        var finalValue = typeof (value) === \"string\" ? JSON.parse(value).value : value.value;\r\n\r\n        return finalValue || [];\r\n    },\r\n    \r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n        return bizagi.util.formatItem(value);\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi User field render\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define the basic behavior for userfields\r\n*/\r\n$.Class.extend(\"bizagi.rendering.userfieldDefinition\", {}, {\r\n\r\n    /*************************************************************/\r\n    /* Private section of the userfield                          */\r\n    /*************************************************************/\r\n\r\n    /*\r\n    *   Method to be overriden by userfields in order to ensure that custom files are loaded before the execution\r\n    */\r\n    getFileDependencies: function () {\r\n        return null;\r\n    },\r\n\r\n    postRender: function () {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super();\r\n\r\n        var defer = $.Deferred();\r\n        var fileDependencies = self.getFileDependencies();\r\n        if (fileDependencies && fileDependencies.length > 0) {\r\n            bizagi.loader.loadFile(fileDependencies)\r\n\t\t\t.then(function () {\r\n\t\t\t    // After all dependencies has been resolved\r\n\t\t\t    self.internalRenderControl();\r\n\t\t\t    defer.resolve();\r\n\t\t\t});\r\n\r\n        } else {\r\n            $.when( self.renderUserfieldControl()).done(function () {\r\n                defer.resolve();\r\n            });\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    renderUserfieldControl: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n        var def = new $.Deferred();\r\n\r\n        if (properties.extendedData && properties.extendedData.length > 0) {\r\n            self.extendedData = bizagi.services.ajax.parseJSON(properties.extendedData);\r\n        } else {\r\n            self.extendedData = {};\r\n        }\r\n\r\n\r\n        var loadUserfield = function () {\r\n            var userEditableControl = self.getEditableControl();\r\n            if (userEditableControl) {\r\n                self.input = control.html(userEditableControl);\r\n            }\r\n            self.renderComplex();\r\n            def.resolve();\r\n        };\r\n\r\n        \r\n            loadUserfield();\r\n    \r\n        \r\n        return def.promise();\r\n    },\r\n\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n\r\n        if (properties.extendedData && properties.extendedData.length > 0) {\r\n            self.extendedData = bizagi.services.ajax.parseJSON(properties.extendedData);\r\n        } else {\r\n            self.extendedData = {};\r\n        }\r\n\r\n        var loadUserfieldReadOnly = function () {\r\n            try {\r\n                var userReadOnlyControl = self.getReadonlyControl();\r\n                if (userReadOnlyControl) {\r\n                    self.input = control.html(userReadOnlyControl);\r\n                }                                                 \r\n                self.renderComplex();\r\n                \r\n            } catch (error) {\r\n                var displayName = self.properties.displayName || \"Widget\";\r\n                control.html(\"<h6>\" + displayName  + \"</h6>\")\r\n            }\r\n            \r\n        };\r\n\r\n        if (self.ready) {\r\n            self.ready().done(function () {\r\n                loadUserfieldReadOnly();\r\n            });\r\n        } else {\r\n            loadUserfieldReadOnly();\r\n        }\r\n    },\r\n\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n        return self.getReadonlyValue();\r\n    },\r\n\r\n    /*\r\n    *   Sets the value in the rendered control \r\n    */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self.setValue(value);\r\n\r\n        // Set editable value in control\r\n        self.setEditableValue(value);\r\n    },\r\n\r\n    getValue: function () {\r\n        var self = this;\r\n        return self.getEditableValue();\r\n    },\r\n\r\n    getPropertyValue: function (propertyName, params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        self.dataService.multiaction().getPropertyData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            property: propertyName,\r\n            extra: params,\r\n            dataType: params ? params.dataType : null\r\n        }).done(function (data) {\r\n            if (data.type == \"error\") {\r\n                // Workflow engine error, we gotta show it with error\r\n                self.getFormContainer().addErrorMessage(data.message);\r\n                defer.reject(data);\r\n            } else {\r\n                defer.resolve(data);\r\n            }\r\n        }).fail(function (jqXHR, textStatus, errorThrown) {\r\n            defer.reject(jqXHR, textStatus, errorThrown);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Saves the form\r\n    */\r\n    saveForm: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        return form.saveForm();\r\n    },\r\n\r\n    /**\r\n    * Returns all the elements that match the given xpath\r\n    */\r\n    getRenderElements: function (xpath) {\r\n        var self = this;\r\n        var result = $();\r\n        var controls = self.getFormContainer().getRenders(xpath);\r\n        $.each(controls, function (i, item) {\r\n            result = result.add($(item.element));\r\n        });\r\n\r\n        return result;\r\n    },\r\n\r\n    getServerResourceURL: function (resource) {\r\n        var self = this;\r\n        var url = \"Rest/Userfields/{0}/resource/{1}/{2}\";\r\n        url = url.replace(\"{0}\", self.properties.userfieldGuid);\r\n        resource = resource.replace(\"\\\\\", \"__\").replace(\"/\", \"__\");\r\n        var device = bizagi.util.detectDevice();\r\n        url = url.replace(\"{1}\", device);\r\n        url = url.replace(\"{2}\", resource);\r\n        //Rest/Userfields/{0}/resource/desktop/{1}\r\n        return url;\r\n    },\r\n\r\n    /**\r\n    * Returns all the elements that match the given xpath\r\n    */\r\n    getRenderValue: function (xpath) {\r\n        var self = this;\r\n        var controls = self.getFormContainer().getRenders(xpath);\r\n        var control;\r\n        $.each(controls, function (index, item) {\r\n            if (!control || item.properties.editable) {\r\n                control = item;\r\n            }\r\n        });\r\n        if (control) {\r\n            return control.getValue();\r\n        } else {\r\n            return null;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Refresh the current form\r\n    */\r\n    refreshForm: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var form = self.getFormContainer();\r\n        form.refreshForm(properties.id);\r\n    },\r\n\r\n    /*\r\n    * Shows a jquery dialog\r\n    */\r\n    showDialog: function (url, params) {\r\n        bizagi.util.mustImplement(\"Must implement the showDialog method\");\r\n    },\r\n\r\n    /*\r\n    *   Shows a browser popup\r\n    */\r\n    showPopup: function (url, params) {\r\n        bizagi.util.mustImplement(\"Must implement the showPopup method\");\r\n    },\r\n\r\n    updateOriginalValue: function () {\r\n        var self = this;\r\n        self.properties.originalValue = self.value = self.properties.value;\r\n    }\r\n\r\n\r\n});\r\n\r\n\r\n$.Class.extend(\"bizagi.rendering.basicUserField\", {}, {\r\n\r\n    /*************************************************************/\r\n    /* methods to be overriden by the implementations            */\r\n    /*************************************************************/\r\n    getEditableControl: function () {\r\n    },\r\n\r\n    renderComplex: function () {\r\n    },\r\n\r\n    // Returns the value of the control\r\n    getEditableValue: function () {\r\n        return bizagi.rendering.render.prototype.getValue.apply(this, arguments);\r\n    },\r\n\r\n    // \r\n    setEditableValue: function (value) {\r\n        return bizagi.rendering.render.prototype.setValue.apply(this, arguments);\r\n    },\r\n\r\n    getReadonlyControl: function () {\r\n    },\r\n\r\n    getReadonlyValue: function () {\r\n        // if the method is not overriden then call the parent method \r\n        return bizagi.rendering.render.prototype.getDisplayValue.apply(this, arguments);\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super();\r\n    }\r\n\r\n});\r\n\r\n/*\r\n*   This control will wrap any userfield in order to load the code remotely, \r\n*   when executing renderControl, which is an async method\r\n*/\r\n$.Class.extend(\"bizagi.rendering.userfieldWrapper\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n        // Save userfield guid and name\r\n        self.initialParams = params;\r\n        self.userfieldGuid = this.properties.userfieldGuid;\r\n        self.userfieldName = this.properties.control;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    */\r\n    internalPostRender: function () {\r\n        var self = this;\r\n        $.when(self.getUserfieldControl())\r\n        .done(function (control) {\r\n            control.element = self.element;\r\n\r\n            // Add grid and surrogatekey properties if the userfield is a column userfield\r\n            if (self.column) {\r\n                control.isColumn = true;\r\n                control.grid = self.grid;\r\n                control.surrogateKey = self.surrogateKey;\r\n                control.properties.xpathContext = self.getControlXpathContext(control);\r\n                control.getControl = self.column.getControl;\r\n            }\r\n\r\n            return control.internalPostRender();\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Helper for userfields to fetch the xpathContext\r\n    */\r\n    getControlXpathContext: function (control) {\r\n        var self = this;\r\n        var properties = control.properties;\r\n\r\n        if (control.isColumn) {\r\n            return properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + control.grid.properties.xpath + \"[id=\" + control.surrogateKey + \"]\" : control.grid.properties.xpath + \"[id=\" + control.surrogateKey + \"]\";\r\n        }\r\n\r\n        return properties.xpathContext;\r\n    },\r\n\r\n\r\n    getUserFieldInstance: function(params){\r\n        console.log(\"not implemented\");\r\n    },\r\n\r\n    /*\r\n    *   Replicate all userfield methods to this instance in order to create a proxy\r\n    */\r\n    replicateUserfieldMethods: function (control) {\r\n        var self = this;\r\n        for (var key in control.Class.prototype) {\r\n            // Omit the folowing methods\r\n            if (key == \"init\" || key == \"constructor\" || key == \"Class\" || key == \"subscribe\" || key == \"unsubscribe\" ||\r\n                key == \"publish\" || key == \"render\" || key == \"triggerHandler\" || key == \"dispose\") continue;\r\n\r\n            // Replicate instance methods\r\n            self[key] = eval('var tmp = function(){ if (this.userfieldInstance) return this.userfieldInstance.' + key + '.apply(this.userfieldInstance, arguments); return null;};tmp');\r\n        }\r\n\r\n        // Replicate properties and value\r\n        control.properties = self.properties;\r\n        control.value = self.value;\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self.userfieldInstance) {\r\n                self.userfieldInstance.unbind(\"renderchange\");\r\n                self.userfieldInstance.dispose();\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    }\r\n});\r\n\r\n","/**\r\n*   Name: Bizagi Render Image Class\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define basic stuff for image control\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.image\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\r\n    BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE\r\n}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var maxSize = 4091904;\r\n\r\n        if(properties.maxSize) {\r\n            maxSize = Number(properties.maxSize);\r\n        } else if (typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\") {\r\n            maxSize = Number(BIZAGI_SETTINGS.UploadMaxFileSize);\r\n        }\r\n\r\n        properties.maxSize = maxSize;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) === true;\r\n        properties.validExtensions = properties.validExtensions || \"\";\r\n\r\n        if (properties.validExtensions.length > 0 && properties.validExtensions.indexOf(\".\") < 0) {\r\n            var singleExtensions = properties.validExtensions.replace(/\\ /gi, '').split(\";\");\r\n\r\n            for (var i = 0; i < singleExtensions.length; i++) {\r\n                if (singleExtensions[i].length != 0) {\r\n                    singleExtensions[i] = \"*.\" + singleExtensions[i].replaceAll(\" \", \"\");\r\n                } else {\r\n                    //Removes the empty element\r\n                    var index = singleExtensions.indexOf(singleExtensions[i]);\r\n                    singleExtensions.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            properties.validExtensions = singleExtensions.join(\";\");\r\n        }\r\n\r\n        properties.addUrl = properties.addUrl || self.dataService.getUploadAddFileUrl(properties.isUserPreference);\r\n        properties.allowDelete = bizagi.util.parseBoolean(properties.allowDelete) !== null;\r\n\r\n        properties.isAutoWidth = false;\r\n        properties.isAutoHeight = false;\r\n\r\n        if (properties.width === -1) {\r\n            properties.width = \"100%\";\r\n            properties.isAutoWidth = true;\r\n        } else {\r\n            properties.width = properties.width + \"px\";\r\n        }\r\n\r\n        if (properties.height === -1) {\r\n            properties.height = \"auto\";\r\n            properties.isAutoHeight = true;\r\n        } else {\r\n            properties.height = properties.height + \"px\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var def = new $.Deferred(); //design\r\n        var template = self.renderFactory.getTemplate(\"image\");        \r\n\r\n        $.when(self.buildItemUrl()).done(function (dataUrl) {\r\n            if (!self.isDisposed()) {\r\n                self.properties.url = dataUrl !== \"\" ? dataUrl : \"\";\r\n                self.properties.value = self.value = self.properties.url.length > 0 ? [self.properties.url] : null;\r\n                self.setValue(self.properties.value);                \r\n\r\n                var html = $.fasttmpl(template, { url: self.properties.url });\r\n                def.resolve(html);\r\n            }\r\n        }).fail(function (error) {\r\n           def.reject(error)\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"image-readonly\");\r\n        var html = $.fasttmpl(template);\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * This method return the name of template of items, please make a override in each device\r\n     * @returns {*}\r\n     */\r\n    getTemplateItem: function () {\r\n        return this.renderFactory.getTemplate(\"image-item\");\r\n    },\r\n\r\n    /**\r\n     * Renders a single upload item\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    renderUploadItem: function (file) {\r\n        var self = this;\r\n        var mode = self.getMode();        \r\n        var def = new $.Deferred();\r\n        var template = self.getTemplateItem();\r\n\r\n        $.when(self.buildItemUrl()).done(function (dataUrl) {\r\n            var url = dataUrl || \"\";\r\n\r\n            var html = $.fasttmpl(template, {\r\n                url: url,\r\n                allowDelete: self.properties.allowDelete,\r\n                editable: self.properties.editable,\r\n                mode: mode,                \r\n            });\r\n\r\n            self.properties.url = url;\r\n            self.properties.value = url.length > 0 ? [url] : null;\r\n\r\n            def.resolve(html);\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param params\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var def = new $.Deferred();\r\n        var url = \"\";\r\n\r\n        if (!this.isExecutionMode()) {\r\n            url = \"\"; // TODO: Review the use of \"javascript:void(0);\";\r\n            def.resolve(url);\r\n        } else {\r\n            var parameters = {\r\n                url: properties.dataUrl,\r\n                xpath: properties.xpath,\r\n                idRender: properties.id,\r\n                xpathContext: properties.xpathContext,\r\n                idPageCache: properties.idPageCache,\r\n                property: params && params.property ? params.property : \"fileContent\",\r\n                dataType: \"text\"\r\n            };\r\n\r\n            if (properties.contexttype) {\r\n                parameters.contexttype = properties.contexttype;\r\n            }\r\n\r\n            if (properties.isUserPreference) {\r\n                self.currentUser = bizagi.currentUser.idUser;\r\n                parameters.xpathContext = \"@Context.Users[id == \" + self.currentUser + \"]\";\r\n                parameters.contexttype = \"entity\";\r\n                parameters.surrogatekey = self.currentUser;\r\n            }\r\n\r\n            self.dataService.multiaction().getPropertyData(parameters, \"text\")\r\n                .done(function (data) {\r\n                    if (data.charAt(0) === \"\\\"\") {\r\n                        data = data.slice(1, -1);\r\n                    }\r\n\r\n                    if (data !== \"\") {\r\n                        url = \"data:image/png;base64,\" + data;\r\n                    }\r\n\r\n                    def.resolve(url);\r\n                }).fail(function (error) {\r\n                def.reject(error);\r\n            });\r\n        }\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    buildItemUrlOffline: function(parameters){\r\n        var def = new $.Deferred();\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var formParams = self.getFormParams();\r\n        var loadImageFromForm = true;\r\n        var imageId = properties.xpath;\r\n        if( properties.offlineImageId ){\r\n            imageId = properties.offlineImageId;\r\n            loadImageFromForm = false;\r\n        }\r\n        var parameters = {\r\n            idCase: formParams.idCase,\r\n            idWorkitem: formParams.idWorkitem,\r\n            id: imageId,\r\n            offlineType: formParams.offlineType,\r\n            loadImageFromForm: loadImageFromForm\r\n        }\r\n        $.when(self.dataService.getOfflineImage(parameters, \"base64\"))\r\n        .done( function(imageValue){\r\n            properties.value = imageValue;\r\n            def.resolve(bizagi.util.getDataUrl(properties));\r\n        });\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Create an image offline\r\n     * @param path File in Browser or Path in Mobile Devices\r\n     * @param promise Promise to be resolved when save is completed\r\n     */\r\n    saveImageOffline: function (path) {\r\n        var self = this; \r\n        var def = new $.Deferred();       \r\n        var blobPromise = new $.Deferred();\r\n        var offlineImageId = self.properties.xpath + '-' + bizagi.util.randomNumber();\r\n\r\n        if(self.isNative){\r\n            var fileName = self.fileProperties.name;            \r\n            if (!bizagi.util.isAndroidDevice()) {\r\n                path = bizagi.util.media.normalizeIOSFilePath(path);\r\n            }\r\n            else{\r\n                // Fix android 4.4 getting images from recent folder\r\n                path = bizagi.util.media.getImagePath(path);\r\n            }\r\n            \r\n            var errorHandler = function (error) {\r\n                bizagi.log('error converting path to blob', error);  \r\n                blobPromise.reject(error);\r\n            };\r\n    \r\n            window.resolveLocalFileSystemURL(path, function (fileEntry) {\r\n                fileEntry.file(function (file) {    \r\n                    var reader = new FileReader();\r\n                    reader.onloadend = function () {\r\n                        var blob = new Blob([this.result], {type: file.type});\r\n                        blob.name = fileName;\r\n                        blobPromise.resolve(blob);\r\n                    }    \r\n                    reader.readAsArrayBuffer(file);\r\n                }, errorHandler);\r\n            }, errorHandler);\r\n        }\r\n        else {\r\n            blobPromise.resolve(path);\r\n        }        \r\n\r\n        $.when(blobPromise)\r\n        .done( function(blobImage) {\r\n            // Save the image as attachment \r\n            var formParams = self.getFormParams();\r\n            var parameters = {\r\n                idCase: formParams.idCase,\r\n                idWorkitem: formParams.idWorkitem,\r\n                id: offlineImageId,\r\n                operationType: \"edition\",\r\n                offlineType: formParams.offlineType\r\n            }\r\n\r\n            $.when(self.dataService.saveOfflineImage(parameters, blobImage))\r\n            .done( function() {\r\n                self.properties.offlineImageId = offlineImageId;\r\n                def.resolve();\r\n            })\r\n            .fail( function(err){\r\n                def.reject(err);\r\n            });\r\n        })\r\n        .fail( function(blobError){\r\n            def.reject(blobError);\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url in real size\r\n     * @returns {*}\r\n     */\r\n    buildFullItemUrl: function () {\r\n        var def = new $.Deferred();\r\n\r\n        $.when(this.buildItemUrl({\"property\": \"fileFullContent\"}))\r\n            .done(function (dataUrl) {\r\n                def.resolve(dataUrl);\r\n            }).fail(function (error) {\r\n            def.reject(error);\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        // Call base\r\n        this._super(value, triggerEvents);\r\n    },\r\n\r\n    /**\r\n     * Returns the internal value\r\n     * @returns {*|Array}\r\n     */\r\n    getValue: function () {\r\n        return this.properties.value || [];\r\n    },\r\n\r\n    /**\r\n     * Check if control is valid or not\r\n     * @param invalidElements\r\n     * @returns {boolean}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(self.properties.visible) === false) {\r\n            return true;\r\n        }\r\n\r\n        // Don't check non- editable renders\r\n        if (bizagi.util.parseBoolean(self.properties.editable) === false) {\r\n            return true;\r\n        }\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (self.properties.required) {\r\n            var newRow = self.grid && self.grid.isFromCreatedRow.apply(self);\r\n\r\n            if (!newRow) {\r\n                var value = self.getValue();\r\n\r\n                if (value.length === 0) {\r\n                    var message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", self.properties.displayName);\r\n                    invalidElements.push({ xpath: self.properties.xpath, message: message });\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Build add params to send to the server\r\n     */\r\n    buildAddParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var data = {};\r\n\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = self.getUploadXpath();\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = properties.id;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = properties.xpathContext;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\r\n        data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = form.properties.sessionId;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = 'savefile';\r\n\r\n        if (properties.contexttype) {\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = properties.contexttype;\r\n        }\r\n\r\n        try {\r\n            if (typeof (BIZAGI_SESSION_NAME) !== \"undefined\") {\r\n                data[BIZAGI_SESSION_NAME] = form.properties.sessionId;\r\n            } else {\r\n                data[\"JSESSIONID\"] = form.properties.sessionId;\r\n            }\r\n        } catch (e) {\r\n            data[\"JSESSIONID\"] = form.properties.sessionId;\r\n        }\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getUploadXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Clean html because some scenarios render twice\r\n     */\r\n    emptyControlByAsyncRenderDeferred: function () {\r\n        var $control = this.getControl();\r\n        $control.empty();\r\n    }\r\n});","/*\r\n*   Name: BizAgi Render Association Class\r\n*   Author: Edward Morales\r\n*   Comments:\r\n*   -   This script will define basic stuff for association renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.association\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        var properties = self.properties;\r\n\r\n        // Fill default properties\r\n        properties.property = \"flipped\";\r\n        properties.idRender = self.properties.id;\r\n        properties.allowFlip = (typeof properties.allowFlip != \"undefined\") ? bizagi.util.parseBoolean(properties.allowFlip) : true;\r\n        properties.flipped = (typeof properties.flipped != \"undefined\") ? bizagi.util.parseBoolean(properties.flipped) : false;\r\n        properties.flipstate = properties.flipped;\r\n\r\n\r\n        // data of entities (left and right)\r\n        properties.leftData = properties.leftData || [];\r\n        properties.rightData = properties.rightData || [];\r\n\r\n        if (properties.value) {\r\n            self.processPropertyValue();\r\n        }\r\n    },\r\n\r\n\r\n\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"association\");\r\n        var def = new $.Deferred();\r\n\r\n        self.properties.property = \"flipped\";\r\n        self.properties.idRender = self.properties.id;\r\n\r\n        // Define flipped\r\n        $.when(self.getFlipAssociation())\r\n            .done(function (flip) {\r\n\r\n                // Make json base, create self.properties.formatJson\r\n                self.makeJsonBase();\r\n\r\n                self.properties.flipped = bizagi.util.parseBoolean(flip) || false;\r\n\r\n                var html = $.fasttmpl(template, self.properties, {\r\n                    getColumnData: self.getColumnData,\r\n                    getRightAssociation: self.getRightAssociation\r\n                });\r\n\r\n                /* by default need set self.properties.formatJson */\r\n                self.setValue(JSON.encode(self.properties.formatJson));\r\n\r\n                def.resolve(html);\r\n            });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n\r\n    /*\r\n    * Returns the flip state\r\n    */\r\n    getFlipAssociation: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        if (mode == \"execution\")\r\n            return self.dataService.getFlipAssociation(self.properties);\r\n\r\n        return false;\r\n    },\r\n\r\n    /* \r\n    *   Gets the display value of the render\r\n    */\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n        var value = self.getValue();\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Get the template \r\n    */\r\n    getTemplateName: function () {\r\n        return \"association\";\r\n    },\r\n\r\n\r\n    /**\r\n    * Get Left Data, verify if flipper flags sets true\r\n    * \r\n    * @param column {'0'||'1'}\r\n    */\r\n    getColumnData: function () {\r\n        var self = this;\r\n        var properties = self.data;\r\n        var data = [];\r\n        var associationData = properties.flipped ? properties.rightData : properties.leftData;\r\n\r\n        $.each(associationData, function(key, item) {\r\n            data.push({ id: item.id, value: item.value });\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n    * Association of right elements\r\n    */\r\n    getRightAssociation: function (leftId) {\r\n        var self = this;\r\n        var properties = self.data;\r\n        var association = [];\r\n\r\n\r\n        var isChecked = function (leftId, idRight) {\r\n            var checked = false;\r\n            $.each(properties.formatJson.value, function (key, value) {\r\n                if (!checked && value.id == leftId && value.value.indexOf(idRight) >= 0) {\r\n                    checked = true;\r\n                }\r\n            });\r\n\r\n            return checked;\r\n        };\r\n\r\n        // create association and check element\r\n        if (properties.flipped) {\r\n            // left element\r\n            $.each(properties.leftData, function (key, data) {\r\n                association.push({\r\n                    id: data.id,\r\n                    name: data.value,\r\n                    checked: isChecked(data.id, leftId)\r\n                });\r\n\r\n            });\r\n        } else {\r\n            $.each(properties.rightData, function (key, data) {\r\n                association.push({\r\n                    id: data.id,\r\n                    name: data.value,\r\n                    checked: isChecked(leftId, data.id)\r\n                });\r\n            });\r\n        }\r\n\r\n        return association;\r\n    },\r\n\r\n\r\n    removeElement: function (leftId, rightId) {\r\n        var self = this;\r\n\r\n        $.each(self.properties.formatJson.value, function (key, data) {\r\n            if (self.properties.flipped) {\r\n                if (data.id == rightId) {\r\n                    // Remove right element from left panel\r\n                    $.each(self.properties.formatJson.value[key][\"value\"], function (removeKey, removeValue) {\r\n                        if (leftId == removeValue) {\r\n                            // Splice from array\r\n                            self.properties.formatJson.value[key][\"value\"].splice(removeKey, 1);\r\n                        }\r\n                    });\r\n                }\r\n            } else if (data.id == leftId) {\r\n                // Remove right element from left panel\r\n                $.each(self.properties.formatJson.value[key][\"value\"], function (removeKey, removeValue) {\r\n                    if (rightId == removeValue) {\r\n                        // Splice from array\r\n                        self.properties.formatJson.value[key][\"value\"].splice(removeKey, 1);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        self.setValue(JSON.encode(self.properties.formatJson));\r\n    },\r\n\r\n\r\n    addElement: function (leftId, rightId) {\r\n        var self = this;\r\n\r\n        $.each(self.properties.formatJson.value, function (key, data) {\r\n            if (self.properties.flipped) {\r\n                if (data.id == rightId) {\r\n                    // Add right element to left panel\r\n                    self.properties.formatJson.value[key][\"value\"].push(leftId);\r\n                }\r\n            } else if (data.id == leftId) {\r\n                // Add right element to left panel\r\n                self.properties.formatJson.value[key][\"value\"].push(rightId);\r\n            }\r\n        });\r\n        self.setValue(JSON.encode(self.properties.formatJson));\r\n    },\r\n\r\n    makeJsonBase: function () {\r\n        var self = this;\r\n        self.properties.formatJson = self.properties.formatJson || {\r\n            leftXpath: self.properties.leftXpath,\r\n            rightXpath: self.properties.rightXpath,\r\n            leftFactName: self.properties.leftFactName,\r\n            rightFactName: self.properties.rightFactName,\r\n            value: self.properties.value\r\n        };\r\n    },\r\n\r\n\r\n    /*\r\n    *   Check if a render has no value for required validation\r\n    */\r\n    hasValue: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.formatJson) {\r\n            var values = self.properties.formatJson.value;\r\n        } else {            \r\n            values = self.properties.value;\r\n        }\r\n       \r\n\r\n        for (var i = 0, l = values.length; i < l; i++) {\r\n            var data = values[i];\r\n            if (data && data.value.length > 0) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    /*\r\n    * This method process the value.\r\n    * changes the format to send request\r\n    */\r\n    processPropertyValue: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var values = properties.value;\r\n        var result = [];\r\n\r\n        for (var i = 0, l = values.length; i < l; i++) {\r\n            var value = values[i];\r\n            result.push({ id: value[0], value: value[1] });\r\n        }\r\n\r\n        properties.value = result;\r\n    }\r\n});","/**\r\n * Description of control\r\n *\r\n * @author:\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.getUser\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        var properties = this.properties;\r\n        properties.allowDelegatedUser = this.properties.xpath && this.properties.xpath === \"idDelegate\";\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"render-getUser\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {});\r\n        return html;\r\n    },\r\n\r\n    renderReadOnly: function () {\r\n        var result = this._super();\r\n        var html = result;\r\n        if(!bizagi.util.isString(html)){\r\n            html = result[0] && result[0].value ? result[0].value : \"\";\r\n        }\r\n        \r\n        return html;\r\n    },\r\n\r\n    /*\r\n     * Public method to determine if a value is valid or not\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        return bValid;\r\n    }\r\n\r\n});","/*\r\n *   Name: BizAgi Render Query Process\r\n *   Author: Jeison Borja\r\n *   Comments:\r\n *   -   This script will define basic stuff for query process renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.queryProcess\", {}, {\r\n    /*\r\n    * Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n    * Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"queryProcess\");\r\n        var html = $.fasttmpl(template, {});\r\n        return html;\r\n    },\r\n    loadtemplates: function () { }\r\n});","/*\r\n *   Name: BizAgi Render Query Search User\r\n *   Author: Jeison Borja\r\n *   Comments:\r\n *   -   This script will define basic stuff for query search user renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.querySearchUser\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"render-querySearchUser\");\r\n        var html = $.fasttmpl(template, {});\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     *   Fetch the data into a deferred\r\n     */\r\n    getUserData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        var form = self.getFormContainer();\r\n        var contextType = form.getContextType() || false;\r\n        params = params || {};\r\n\r\n        // Verify context type\r\n        if (self.properties.contexttype) {\r\n            params.h_contexttype = self.properties.contexttype;\r\n        } else if (contextType) {\r\n            params.h_contexttype = contextType;\r\n        }\r\n        //GET DATA\r\n        var data = [{\"id\":1,\"value\":\"user1\"},{\"id\":2,\"value\":\"user2\"},{\"id\":3,\"value\":\"user3\"},{\"id\":4,\"value\":\"user4\"},{\"id\":5,\"value\":\"user5\"},{\"id\":6,\"value\":\"user6\"},{\"id\":7,\"value\":\"user7\"},{\"id\":8,\"value\":\"user8\"},{\"id\":9,\"value\":\"user9\"},{\"id\":10,\"value\":\"user10\"}];\r\n        properties.data = data;\r\n        defer.resolve(properties.data);\r\n        return defer.promise(defer);\r\n\r\n    },\r\n\r\n    /*\r\n     *   Sets the value in the rendered control\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var displayValue = self.getDisplayValue();\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n        var decodedDisplayValue = bizagi.util.decodeURI(displayValue);\r\n        if (self.properties.editable == false) {\r\n            // Render as simple value\r\n            if (typeof (value) == \"string\") {\r\n\r\n                // Replace line breaks for html line breaks\r\n                var valueToDisplay = decodedDisplayValue.replaceAll(\"&\", \"&amp;\");\r\n                valueToDisplay = valueToDisplay.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\r\n                valueToDisplay = valueToDisplay.replaceAll(\"\\\"\", \"&#34;\").replaceAll(\"'\", \"&#39;\").replaceAll(\"/\", \"&#47;\");\r\n                valueToDisplay = valueToDisplay.replaceAll(\"\\\\n\", \"<br/>\");\r\n                valueToDisplay = valueToDisplay.replaceAll(\"\\n\", \"<br/>\");\r\n\r\n                control.html(valueToDisplay);\r\n            }\r\n        }\r\n\r\n        // Set internal value\r\n        self.setValue(decodedValue, false);\r\n    },\r\n    /**\r\n     * Extend setValue to fix all encode data from database\r\n     * More information SUITE-9407\r\n     */\r\n    setValue: function (value) {\r\n        /*ISUPP-4116/*\r\n         /*var decodedValue = bizagi.util.decodeURI(value);*/\r\n        var self = this;\r\n        self._super(value);\r\n    }\r\n});","/*\r\n *   Name: Bizagi Render ComboSelected class\r\n *   Author: Paola Herrera\r\n *   Comments:\r\n *   -   This script will define basic stuff for comboSelected renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.comboSelected\", {}, {\r\n    /* \r\n    * Constructor \r\n    */\r\n    init: function (params) {\r\n        // Call base \r\n        this._super(params);\r\n        this.leftValues = this.filterData();\r\n        this.rightValues = JSON.parse(JSON.stringify(this.properties.value));\r\n    },\r\n    /*\r\n    * Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"render-comboSelected\");\r\n        var html = $.fasttmpl(template, { dataList: this.leftValues });\r\n        return html;\r\n    },\r\n\r\n    orderArraySelected: function (dataList) {\r\n        var arrayOrder = dataList;\r\n\r\n        var order = arrayOrder.sort(function (a, b) {\r\n            var nA = a.value === undefined || a.value === null ? \"\" : a.value.toString().toLowerCase();\r\n            var nB = b.value === undefined || b.value === null ? \"\" : b.value.toString().toLowerCase();\r\n            if (nA < nB)\r\n                return -1;\r\n            else if (nA > nB)\r\n                return 1;\r\n            return 0;\r\n        });\r\n\r\n        return order;\r\n    },\r\n\r\n    /*\r\n    * Filter data before set\r\n    */\r\n    filterData: function () {\r\n        var self = this;\r\n        var dataListArray = [];\r\n\r\n        if(self.properties.data) {\r\n            $.each(self.properties.data, function (i, data) {\r\n                var el = $.grep(self.properties.value, function (value, e) {\r\n                    return (self.properties.xpath == \"Organizations\") ? value.id == data.id : value.id === data.id;\r\n                });\r\n    \r\n                if (!el.length) {\r\n                    dataListArray.push(data);\r\n                }\r\n            });\r\n        }\r\n\r\n        return dataListArray;\r\n    },\r\n\r\n    /*\r\n    * Template method to implement in each children to customize each control\r\n    */\r\n    renderControlReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"render-comboSelectedReadOnly\");\r\n        var html = $.fasttmpl(template, {});\r\n        return html;\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render userPassword class\r\n *   Author: Paola Herrera\r\n *   Comments:\r\n *   -   This script will define basic stuff for userPassword render\r\n */\r\n$.Class.extend(\"bizagi.rendering.userPassword\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n        this.properties.value = null;\r\n        self.properties = this.properties;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"render-userPassword\");\r\n        // Render template\r\n        var html = $.fasttmpl(template, {valuePassword: self.properties.value});\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     * Public method to determine if a value is valid or not\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n\r\n        return bValid;\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Stateholder\r\n *   Author: Fabian Moreno\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.stakeholder\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        if (typeof this.properties.value === \"undefined\") {\r\n            this.properties.value = [];\r\n        }\r\n\r\n        if (typeof this.properties.data === \"undefined\") {\r\n            this.properties.data = [];\r\n        }\r\n        self.properties = this.properties;\r\n    },\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"stakeholder\");\r\n\r\n        var params =  {\r\n            currentUser: bizagi.currentUser.userName,\r\n            userNames: (typeof self.properties.value == \"string\") ? JSON.parse(self.properties.value).value: self.properties.value,\r\n            entities: self.properties.data\r\n        };\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, params);\r\n        return html;\r\n    },\r\n\r\n    getData: function (valueXpath, currentPage, filter, sort, order) {\r\n        var self = this;\r\n\r\n        if (typeof currentPage === \"undefined\" || currentPage == null)\r\n            currentPage = \"1\";\r\n\r\n        var params= {\r\n            pxpath:valueXpath,\r\n            prows: \"10\",\r\n            ppage: currentPage.toString(),\r\n            xpath:valueXpath,\r\n            idRender:self.properties.id,\r\n            xpathContext:self.properties.xpathContext,\r\n            idPageCache:self.properties.idPageCache,\r\n            property:\"dataxpath\",\r\n            contexttype:\"entity\",\r\n            pfilter: filter,\r\n            psort: sort\r\n        };\r\n\r\n        if(order) params.porder = order;\r\n\r\n        return self.dataService.multiaction().getPropertyData(params);\r\n    },\r\n\r\n    associatedUser: function (idEntity, guidEntity, idUser) {\r\n        var self = this;\r\n\r\n        return self.dataService.associateStakeholder({\r\n\r\n            idPageCache:self.properties.idPageCache,\r\n            contexttype:\"entity\",\r\n            surrogateKey: parseInt(idEntity),\r\n            associatedUser: JSON.encode({dataType:\"Int\", value:(idUser == \"null\")?idUser:parseInt(idUser)}),\r\n            guidentity: guidEntity\r\n        });\r\n    },\r\n\r\n    refreshStakeholderList: function () {\r\n        var self = this;\r\n\r\n        return self.dataService.refreshAssociateStakeholder({\r\n\r\n            idRender:self.properties.id,\r\n            contexttype:\"entity\",\r\n            property:\"value\",\r\n            idPageCache:self.properties.idPageCache\r\n        });\r\n    }\r\n});","/**\r\n * Base definition of Action Launcher and Entity template controls\r\n *\r\n * @author: Edward Morales\r\n */\r\n$.Class.extend(\"bizagi.rendering.actionLauncher\", {}, {\r\n\r\n    /*\r\n     * Initialize the control with data provided\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n        var form = self.getFormContainer();\r\n        this.typeForm = form.properties.typeForm || \"\";\r\n        var mode = self.getMode();\r\n        var properties = self.properties;\r\n\r\n        self.deferredActions = new $.Deferred();\r\n        self.deferredActions.promise();\r\n\r\n        if (mode == \"execution\") {\r\n            self.engine = new bizagi.templateEngine({\r\n                renderFactory: self.renderFactory,\r\n                cache: true,\r\n                autoGenerateData: false,\r\n                templateGuid: properties.selecttemplate\r\n            });\r\n        }\r\n\r\n        // Data of get process property value\r\n        self.processPropertyValueArgs = {\r\n            \"pcaseId\": self.getIdCase(),\r\n            \"pguidEntity\": self.properties.guidEntity,\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"property\": \"data\",\r\n            \"psurrogatedKey\": self.properties.surrogatedKey,\r\n            \"ptags\": self.properties.tagslist || [],\r\n            \"pmaxitems\": self.properties.maxItems,\r\n            \"pactionXpath\": self.properties.xpathActions\r\n        };\r\n\r\n        self.processPropertyValueDataTmplArgs = {\r\n            \"pactionXpath\": self.properties.xpathActions,\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"ptemplateGuid\": properties.selecttemplate,\r\n            \"property\": \"dataTemplate\",\r\n            \"xpathActions\": self.properties.xpathActions\r\n        };\r\n\r\n        self.properties.valueWidth = 100;\r\n        self.properties.displayType = \"value\";\r\n        var defaultAllowActions = data.properties.type === \"entityTemplate\" ? false : true;\r\n        self.properties.allowactions = (typeof data.properties.allowactions == \"undefined\")\r\n            ? defaultAllowActions : data.properties.allowactions;\r\n        self.properties.isHorizontal = (typeof data.properties.isHorizontal == \"undefined\")\r\n            ? true : data.properties.isHorizontal;\r\n        self.properties.allowSearch = (typeof data.properties.allowSearch == \"undefined\")\r\n            ? false : data.properties.allowSearch;\r\n        self.properties.selecttemplate = (typeof data.properties.selecttemplate == \"undefined\")\r\n            ? \"\" : data.properties.selecttemplate;\r\n        self.properties.templatetype = (typeof properties.templatetype != \"undefined\")\r\n            ? properties.templatetype : 'none';\r\n\r\n        self.properties.sessionId = form.params.data.sessionId;\r\n\r\n        if (!self.properties.value) {\r\n            self.properties.value = self.value = [];\r\n            self.properties.originalValue = [];\r\n        } else if (typeof self.properties.value == \"string\") {\r\n            self.properties.value = self.value = JSON.parse(self.properties.value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Send processpropertyvalue in order to execute an Action\r\n     * This method is used when this control stay in Summary form or Global form\r\n     * @param action\r\n     */\r\n    executeActionImmediately: function (action) {\r\n        var self = this;\r\n        //Execute action immediately\r\n        var form = self.getFormContainer();\r\n\r\n        var processPropertyValueExecuteAction = {\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"property\": \"executeAction\",\r\n            \"psurrogatedKey\": self.properties.surrogatedKey,\r\n            \"pguidAction\": action.guidAction,\r\n            \"pparameters\": JSON.encode({\r\n                \"idStartScope\": action.idStartScope,\r\n                \"pactionXpath\": self.properties.xpathActions,\r\n                \"idPageCache\": action.idPageCache\r\n            })\r\n        };\r\n\r\n        self.dataService.executeActions(processPropertyValueExecuteAction).done(function (data) {\r\n            self.notifyExecution(data, action);\r\n        }).fail(function (error) {\r\n            // TODO: Create generic mechanism to send notifications\r\n            self.notifyExecution(\"Error\", action);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * notify action execution status\r\n     * @param response\r\n     * @param actionName\r\n     */\r\n    notifyExecution: function (response, actionName) {\r\n        // To override in each device\r\n    },\r\n\r\n    /**\r\n     * Render control in read only mode: properties.editable = false\r\n     * @return {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Make a postrender of readonly control\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this.properties.readOnly = true;\r\n        this.postRender();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @return {string}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n        var template;\r\n        var html = \"\";\r\n\r\n        // Render template\r\n        if (mode == \"design\") {\r\n            template = self.renderFactory.getTemplate(\"render-actionLauncher-design\");\r\n            var params = {\r\n                type: properties.type,\r\n                isHorizontal: properties.isHorizontal,\r\n                allowSearch: properties.allowSearch,\r\n                templateDefined: properties.templatetype != 'none',\r\n                allowactions: properties.allowactions\r\n            };\r\n            html = $.fasttmpl(template, params);\r\n        } else if (properties.surrogatedKey) {\r\n            template = self.renderFactory.getTemplate(\"render-actionLauncher\");\r\n            html = $.fasttmpl(template, { allowactions: self.properties.allowactions });\r\n        }\r\n        return html;\r\n    },\r\n\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @return {*}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var value = self.getValue();\r\n        var bValid = false;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) == false) {\r\n            return true;\r\n        }\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) == false) {\r\n            return true;\r\n        }\r\n\r\n        // Check required\r\n        if (properties.required) {\r\n            if (self.value) {\r\n                if (self.value.length > 0)\r\n                    return true;\r\n                message = self.getResource(\"render-required-register-action\");\r\n                invalidElements.push({ xpath: properties.xpath, message: message });\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        // TODO: write functionality\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n    },\r\n\r\n    /**\r\n     * Process an action\r\n     * @param action\r\n     */\r\n    actionManager: function (action) {\r\n        var self = this;\r\n        var guidProcess = action.guidProcess || \"\";\r\n        var def = new $.Deferred();\r\n\r\n        action.recordXpath = self.getFormContainer().properties.recordXpath;\r\n\r\n        /**\r\n         * Check if action is a process\r\n         */\r\n        switch (action.actionType) {\r\n            case \"Process\":\r\n                // Verify if case has startform\r\n                var params = {\r\n                    guidWFClass: guidProcess\r\n                };\r\n\r\n                $.when(self.dataService.hasStartForm(params)).done(function (result) {\r\n                    if (result.hasStartForm) {\r\n                        // Open a dialog with startform and wait for Scope\r\n                        $.when(self.processStartForm({\r\n                            guidprocess: guidProcess,\r\n                            title: action.displayName,\r\n                            recordXpath: action.recordXpath\r\n                        })).done(function (idStartScope) {\r\n                            action.idStartScope = idStartScope;\r\n                            def.resolve(action);\r\n                        });\r\n                    } else {\r\n                        // Just add action to queue to be executed on nextEvent\r\n                        def.resolve(action);\r\n                    }\r\n                });\r\n\r\n                break;\r\n            case \"Rule\":\r\n                // Just add action to queue to be executed on nextEvent\r\n                def.resolve(action);\r\n                break;\r\n            case \"Form\":\r\n                // If it has additional xpath this action is a form of collection\r\n                if (action.xpathContext) {\r\n                    $.when(self.processActionFormCollection(action)).done(function (idStartScope) {\r\n                        action.idStartScope = idStartScope;\r\n                        def.resolve(action);\r\n                    });\r\n                } else {\r\n\r\n                    if (action.actionType === \"Form\") {\r\n                        action.xpathContext = undefined;\r\n                        action.contextType = \"entitytemplate\";\r\n                        action.guidEntity = action.guidEntity || self.properties.guidEntity;\r\n                    }\r\n\r\n                    $.when(self.processActionForm(action)).done(function (idStartScope) {\r\n                        action.idStartScope = idStartScope;\r\n                        def.resolve(action);\r\n                    });\r\n                }\r\n                break;\r\n        }\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Add actions within value object\r\n     * @param action\r\n     */\r\n    addActionToQueue: function (action) {\r\n        var self = this;\r\n        var actionsList = self.getValue();\r\n        var formParams = self.getFormContainer().getParams();\r\n\r\n        action.params = action.params || {};\r\n\r\n        var recordXpath = self.properties.xpathContext;\r\n\r\n        switch (action.actionType) {\r\n            case \"Process\":\r\n                action.params = {\r\n                    idStartScope: action.idStartScope,\r\n                    additionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n                    idParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n                    recordXpath: recordXpath\r\n                };\r\n                break;\r\n            case \"Form\":\r\n                action.params = {\r\n                    idStartScope: action.idStartScope,\r\n                    additionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n                    entityXpath: self.properties.xpathActions,\r\n                    idParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n                    idEntity: action.idEntity\r\n                };\r\n                break;\r\n            case \"Rule\":\r\n                action.params = {\r\n                    xpathActions: action.xpathActions || \"\",\r\n                    recordXpath: recordXpath\r\n                };\r\n                break;\r\n        }\r\n\r\n        var newValueActionsList = bizagi.clone(actionsList);\r\n        newValueActionsList.push(action);\r\n        self.setValue(newValueActionsList);\r\n        self.setDisplayValue(newValueActionsList);\r\n    },\r\n\r\n    /**\r\n     * Remove action within value object\r\n     * @param index\r\n     */\r\n    removeActionToQueue: function (index) {\r\n        var self = this;\r\n        var newValueActionsList = bizagi.clone(self.getValue());\r\n        newValueActionsList.splice(index, 1);\r\n        self.setValue(newValueActionsList);\r\n        self.setDisplayValue(newValueActionsList);\r\n    },\r\n    /**\r\n     * Add the render data to the given collection in order to send data to the server\r\n     * @param renderValues\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        if (self.controlValueIsChanged()) {\r\n            var properties = self.properties;\r\n            var xpath = properties.xpath;\r\n            var controlValue = self.getValue();\r\n            var actions = [];\r\n            $.each(controlValue, function (index, value) {\r\n                var action = {};\r\n                action.params = value.params || {};\r\n                action.guidAction = value.guidAction;\r\n\r\n                actions.push(action);\r\n            });\r\n            renderValues[xpath] = (actions.length == 0) ? \"\" : JSON.encode(actions);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Util to count how many actions are there\r\n     * @param action\r\n     * @return {number}\r\n     */\r\n    countSameActions: function (action) {\r\n        var self = this;\r\n        var value = self.getValue();\r\n        var count = 0;\r\n        $.each(value, function (key, value) {\r\n            if (value.guidAction == action.guidAction) {\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    },\r\n\r\n    /**\r\n    * Normalize action launcher control properties\r\n    * @param actionsLaucher\r\n    * @returns {*}\r\n    */\r\n    getPropertiesActionLaucher: function (actionsLaucher) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        /**\r\n         * The properties of actionLaucher have to 7 properties mandatory\r\n         * 0: guidProcess\r\n         * 1: displayName\r\n         * 2: title\r\n         * 3: actionType\r\n         * 4: guidaction\r\n         * 5: xpathContext\r\n         * 6: readOnlyForm: default: false\r\n         */\r\n        for (var i = 0, length = actionsLaucher.length, j = length; i < j; i += 1) {\r\n            //some ocassions server return 6 or 7 items\r\n            //return 6 properties when launch form action from action launcher control.\r\n            //in this case dont return xpathContext.\r\n            // So, add item position 5, simulate xpathContext empty.\r\n            if (actionsLaucher[i].length === 6) {\r\n                actionsLaucher[i].splice(5, 0, \"\");\r\n\r\n                if (actionsLaucher[i][3] == \"Process\" && form.properties.xpathContext) {\r\n                    actionsLaucher[i][5] = form.properties.xpathContext;\r\n                }\r\n            }\r\n        }\r\n\r\n        return actionsLaucher;\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.range\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function(params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     * Initialize the control with data provided\r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n    },\r\n\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function() {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var template;\r\n        var html = \"\";\r\n        // Render template\r\n        template = self.renderFactory.getTemplate(\"render-range\");\r\n        html = $.fasttmpl(template, {});\r\n        return html;\r\n    },\r\n    /**\r\n     * Sets the range controls in DOM\r\n     * @param minControl: min range control\r\n     * @param maxControl: max range control\r\n     */\r\n    setRanageControls: function (minControl, maxControl){\r\n        var self = this;\r\n        self.minControl = minControl || null;\r\n        self.maxControl = maxControl || null;\r\n        var control = self.getControl();\r\n\r\n        var $maxCanvas = $(\".bz-range-maximum\", control);\r\n        var $minCanvas = $(\".bz-range-minimum\", control);\r\n\r\n        //var $maxCanvas = $('<div>hola</div>');\r\n        //var $minCanvas = $('<div>hola</div>');\r\n\r\n        self.renderRangeControl($minCanvas, minControl);\r\n        self.renderRangeControl($maxCanvas, maxControl);\r\n    },\r\n\r\n    /*\r\n     *   Returns the internal value\r\n     */\r\n    getValue: function () {\r\n        var self = this;\r\n        var minValue = self.minControl.getValue();\r\n        var maxValue = self.maxControl.getValue();\r\n\r\n        var value = {\r\n            min: minValue,\r\n            max: maxValue\r\n        };\r\n        return value;\r\n    },\r\n\r\n    renderRangeControl: function ($canvas, control){\r\n        $.when(control.render(\"render\")).done(function (html) {\r\n            $canvas.empty().append(html);\r\n            control.postRenderElement($canvas);\r\n        });\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range date control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.rangeDate\", {}, {\r\n\r\n    /**\r\n     * Defines de min date an de max date to the range control\r\n     */\r\n    defineRangeControl: function (params) {\r\n        var self = this;\r\n\r\n        var dateMin = bizagi.rendering.date.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1 ; i >= 0; i--) {\r\n                    this.observer[i].changeMinValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var dateMax = bizagi.rendering.date.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1; i >= 0; i--) {\r\n                    this.observer[i].changeMaxValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n\r\n        var minControl = new dateMin(self.getRenderProperties(\"min\"));\r\n        var maxControl = new dateMax(self.getRenderProperties(\"max\"));\r\n\r\n        minControl.suscribe(maxControl);\r\n        maxControl.suscribe(minControl);\r\n\r\n\r\n        self.setRanageControls(minControl, maxControl);\r\n    },\r\n\r\n    getRenderProperties: function (typeRangeControl) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        var renderProperties = {\r\n            data: {\r\n                properties: {\r\n                    \"id\": properties.id,\r\n                    \"xpath\": properties.xpath + \"_\" + typeRangeControl,\r\n                    \"displayType\": \"value\"\r\n                }\r\n            },\r\n            mode: \"execute\",\r\n            parent: form,\r\n            renderFactory: self.renderFactory,\r\n            resources: bizagi.localization,\r\n            dataService: self.dataService\r\n        };\r\n\r\n        if (typeRangeControl === \"min\") {\r\n            renderProperties.data.properties.displayName = \"From\";\r\n        } else {\r\n            renderProperties.data.properties.displayName = \"To\";\r\n        }\r\n\r\n        return renderProperties;\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range money control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.rangeMoney\", {}, {\r\n    \r\n    /**\r\n     * Defines de min money an de max money to the range control\r\n     */\r\n    defineRangeControl: function () {\r\n        var self = this;\r\n\r\n        var moneyMin = bizagi.rendering.money.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1 ; i >= 0; i--) {\r\n                    this.observer[i].changeMinValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var moneyMax = bizagi.rendering.money.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1; i >= 0; i--) {\r\n                    this.observer[i].changeMaxValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var minControl = new moneyMin(self.getRenderProperties(\"min\"));\r\n        var maxControl = new moneyMax(self.getRenderProperties(\"max\"));\r\n\r\n        minControl.suscribe(maxControl);\r\n        maxControl.suscribe(minControl);\r\n\r\n        self.setRanageControls(minControl, maxControl);\r\n    },\r\n\r\n\r\n    getRenderProperties: function (typeRangeControl){\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        var renderProperties = {\r\n            data: {\r\n                properties: {\r\n                    \"id\": properties.id,\r\n                    \"xpath\": properties.xpath + \"_\" + typeRangeControl,\r\n                    \"displayType\": \"value\"\r\n                }\r\n            },\r\n            mode: \"execute\",\r\n            parent: form,\r\n            renderFactory: self.renderFactory,\r\n            resources: bizagi.localization,\r\n            dataService: self.dataService\r\n        };\r\n        return renderProperties;\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range number control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n $.Class.extend(\"bizagi.rendering.rangeNumber\", {}, {\r\n\r\n    /**\r\n    * Defines de min number an de max number to the range control\r\n    */\r\n    defineRangeControl: function () {\r\n        var self = this;\r\n\r\n        var numberMin = bizagi.rendering.number.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1 ; i >= 0; i--) {\r\n                    this.observer[i].changeMinValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var numberMax = bizagi.rendering.number.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1; i >= 0; i--) {\r\n                    this.observer[i].changeMaxValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var minControl = new numberMin(self.getRenderProperties(\"min\"));\r\n        var maxControl = new numberMax(self.getRenderProperties(\"max\"));\r\n\r\n        minControl.suscribe(maxControl);\r\n        maxControl.suscribe(minControl);\r\n\r\n        self.setRanageControls(minControl, maxControl);\r\n    },\r\n\r\n\r\n    getRenderProperties: function (typeRangeControl){\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        var renderProperties = {\r\n            data: {\r\n                properties: {\r\n                    \"id\": properties.id,\r\n                    \"xpath\": properties.xpath + \"_\" + typeRangeControl,\r\n                    \"displayType\": \"value\"\r\n                }\r\n            },\r\n            mode: \"execute\",\r\n            parent: form,\r\n            renderFactory: self.renderFactory,\r\n            resources: bizagi.localization,\r\n            dataService: self.dataService\r\n        };\r\n\r\n        return renderProperties;\r\n    }\r\n});\r\n","/**\r\n * Base definition of entity template\r\n *\r\n * @author: Andres Fernando Muñoz\r\n * based on action launcher control\r\n */\r\n$.Class.extend(\"bizagi.rendering.entityTemplate\", {}, {\r\n    /**\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /**\r\n     * Initialize the control with data provided\r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n        var form = self.getFormContainer();\r\n\r\n        self.deferredActions = new $.Deferred();\r\n        self.deferredActions.promise();\r\n\r\n        // Data of get process property value\r\n        self.processPropertyValueArgs = {\r\n            \"pcaseId\": self.getIdCase(),\r\n            \"pguidEntity\": self.properties.guidEntity,\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"property\": \"data\",\r\n            \"psurrogatedKey\": self.properties.surrogatedKey\r\n        };\r\n\r\n        self.properties.valueWidth = 100;\r\n        self.properties.displayType = \"value\";\r\n        self.properties.allowactions = (typeof data.properties.allowactions == \"undefined\") ? true : data.properties.allowactions;\r\n\r\n        if(!self.properties.value) {\r\n            self.properties.value = self.value = [];\r\n        } else if(typeof self.properties.value == \"string\") {\r\n            self.properties.value = self.value = JSON.parse(self.properties.value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var template;\r\n        var html = \"\";\r\n        // Render template\r\n        if (mode == \"design\") {\r\n            template = self.renderFactory.getTemplate(\"render-entityTemplate-design\");\r\n            html = $.fasttmpl(template, {});\r\n        }\r\n        else if(self.properties.surrogatedKey) {\r\n            template = self.renderFactory.getTemplate(\"render-entityTemplate\");\r\n            html = $.fasttmpl(template, {allowactions: self.properties.allowactions});\r\n        }\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        // TODO: write functionality\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        // TODO: write functionality\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n    }\r\n});","/**\r\n * Base definition of Polymorphic launcher\r\n *\r\n * @author: Edward J Morales\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.polymorphicLauncher\", {}, {\r\n\t/*\r\n\t * Constructor\r\n\t */\r\n\tinit: function(params) {\r\n\t\t// Call base\r\n\t\tthis._super(params);\r\n\t},\r\n\r\n\t/*\r\n\t * Initialize the control with data provided\r\n\t */\r\n\tinitializeData: function(data) {\r\n\t\tvar self = this;\r\n\t\t// Call base\r\n\t\tthis._super(data);\r\n\t\tvar form = self.getFormContainer();\r\n\t\tthis.typeForm = form.properties.typeForm || \"\";\r\n\t\tvar mode = self.getMode();\r\n\r\n\t\tself.deferredActions = new $.Deferred();\r\n\t\tself.deferredActions.promise();\r\n\r\n\t\tself.properties.valueWidth = 100;\r\n\t\tself.properties.displayType = \"value\";\r\n\t\tself.properties.allowSearch = (typeof data.properties.allowSearch == \"undefined\") ? false : data.properties.allowSearch;\r\n\t\tself.properties.additionalXpath = self.properties.additionalXpath || [];\r\n\r\n\t\tif(!self.properties.value) {\r\n\t\t\tself.properties.value = self.value = [];\r\n\t\t\tself.properties.originalValue = [];\r\n\t\t} else if(typeof self.properties.value == \"string\") {\r\n\t\t\tself.properties.value = self.value = JSON.parse(self.properties.value);\r\n\t\t}\r\n\r\n\t\t// Data of get process property value\r\n\t\tself.processPropertyValueArgs = {\r\n\t\t\t\"pcaseId\": self.getIdCase(),\r\n\t\t\t\"pguidEntity\": self.properties.guidEntity,\r\n\t\t\t\"idRender\": self.properties.id,\r\n\t\t\t\"xpathContext\": form.properties.xpathContext,\r\n\t\t\t\"idPageCache\": form.properties.idPageCache,\r\n\t\t\t\"property\": \"data\",\r\n\t\t\t\"ptags\": self.getTagList(self.properties.tagslist),\r\n\t\t\t\"additionalXpaths\": self.properties.additionalXpath\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t * Send processpropertyvalue in order to execute an Action\r\n\t * This method is used when this control stay in Summary form or Global form\r\n\t * @param action\r\n\t */\r\n\texecuteActionImmediately: function(action) {\r\n\t\tvar self = this;\r\n\t\t//Execute action immediately\r\n\t\tvar form = self.getFormContainer();\r\n\r\n\t\tvar processPropertyValueExecuteConstructor = {\r\n\t\t\t\"idRender\": self.properties.id,\r\n\t\t\t\"xpathContext\": form.properties.xpathContext,\r\n\t\t\t\"idPageCache\": form.properties.idPageCache,\r\n\t\t\t\"property\": \"executeConstructor\",\r\n\t\t\t\"psurrogatedKey\": self.properties.surrogatedKey,\r\n\t\t\t\"pguidConstructor\": action.guidConstructor,\r\n\t\t\t\"pparameters\": JSON.encode({\r\n\t\t\t\t\"idStartScope\": action.idStartScope,\r\n\t\t\t\t\"pactionXpath\": self.properties.xpathActions,\r\n\t\t\t\t\"idPageCache\": action.idPageCache\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tself.dataService.executeActions(processPropertyValueExecuteConstructor).done(function(data) {\r\n\t\t\tself.notifyExecution(data.response, action);\r\n\t\t}).fail(function(error) {\r\n\t\t\t// TODO: Create generic mechanism to send notifications\r\n\t\t\tself.notifyExecution(\"Error\", action);\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * notify action execution status\r\n\t * @param response\r\n\t */\r\n\tnotifyExecution: function(response, actionName) {\r\n\t\t// To override in each device\r\n\t},\r\n\r\n\t/**\r\n\t * Render control in read only mode: properties.editable = false\r\n\t * @return {*}\r\n\t */\r\n\trenderReadOnly: function() {\r\n\t\treturn this.renderControl();\r\n\t},\r\n\r\n\t/**\r\n\t * Make a postrender of readonly control\r\n\t */\r\n\tpostRenderReadOnly: function() {\r\n\t\tthis.properties.readOnly = true;\r\n\t\tthis.postRender();\r\n\t},\r\n\r\n\t/**\r\n\t * Template method to implement in each children to customize each control\r\n\t * @return {string}\r\n\t */\r\n\trenderControl: function() {\r\n\t\tvar self = this;\r\n\t\tvar properties = self.properties;\r\n\t\tvar mode = self.getMode();\r\n\t\tvar template;\r\n\t\tvar html = \"\";\r\n\r\n\t\t// Render template\r\n\t\tif(mode == \"design\") {\r\n\t\t\ttemplate = self.renderFactory.getTemplate(\"render-polymorphicLauncher-design\");\r\n\t\t\tvar params = {\r\n\t\t\t\ttype: properties.type,\r\n\t\t\t\tallowSearch: properties.allowSearch\r\n\t\t\t};\r\n\t\t\thtml = $.fasttmpl(template, params);\r\n\t\t} else if(properties.surrogatedKey) {\r\n\t\t\ttemplate = self.renderFactory.getTemplate(\"render-polymorphicLauncher\");\r\n\t\t\thtml = $.fasttmpl(template);\r\n\t\t}\r\n\t\treturn html;\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Public method to determine if a value is valid or not\r\n\t * @param invalidElements\r\n\t * @return {*}\r\n\t */\r\n\tisValid: function(invalidElements) {\r\n\t\tvar self = this,\r\n\t\t\tproperties = self.properties;\r\n\t\t// Call base\r\n\t\tvar bValid = this._super(invalidElements);\r\n\t\tvar value = self.getValue();\r\n\t\t// TODO: write functionality\r\n\t\treturn bValid;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the value in the rendered control\r\n\t * @param value\r\n\t */\r\n\tsetDisplayValue: function(value) {\r\n\t\tvar self = this;\r\n\t\t// Set internal value\r\n\t\tself.setValue(value, false);\r\n\t},\r\n\r\n\t/**\r\n\t * Process an action\r\n\t * @param action\r\n\t */\r\n\tactionManager: function(action) {\r\n\t\tvar self = this;\r\n\t\tvar guidProcess = action.guidObject || \"\";\r\n\t\tvar def = new $.Deferred();\r\n\r\n        action.recordXpath = self.getFormContainer().properties.recordXpath;\r\n\r\n\t\t/**\r\n\t\t/**\r\n\t\t * Check if action is a process\r\n\t\t */\r\n\t\tswitch(action.actionType) {\r\n\t\t\tcase \"Process\":\r\n\t\t\t\t// Verify if case has startform\r\n\t\t\t\tvar params = {\r\n\t\t\t\t\tguidWFClass: guidProcess\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$.when(self.dataService.hasStartForm(params)).done(function(result) {\r\n\t\t\t\t\tif(result.hasStartForm) {\r\n\t\t\t\t\t\t// Open a dialog with startform and wait for Scope\r\n\t\t\t\t\t\t$.when(self.processStartForm({\r\n\t\t\t\t\t\t\tguidprocess: guidProcess,\r\n\t\t\t\t\t\t\ttitle: action.displayNamee,\r\n                            recordXpath: action.recordXpath\r\n\t\t\t\t\t\t})).done(function(idStartScope) {\r\n\t\t\t\t\t\t\taction.idStartScope = idStartScope;\r\n\t\t\t\t\t\t\tdef.resolve(action);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Just add action to queue to be executed on nextEvent\r\n\t\t\t\t\t\tdef.resolve(action);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Rule\":\r\n\t\t\t\t// Just add action to queue to be executed on nextEvent\r\n\t\t\t\tdef.resolve(action);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Form\":\r\n\t\t\t\t$.when(self.processActionForm(action)).done(function(idStartScope) {\r\n\t\t\t\t\taction.idStartScope = idStartScope;\r\n\t\t\t\t\tdef.resolve(action);\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn def.promise();\r\n\t},\r\n\r\n\t/**\r\n\t * Add actions within value object\r\n\t * @param action\r\n\t */\r\n\taddActionToQueue: function(action) {\r\n\t\tvar self = this;\r\n\t\tvar actionsList = self.getValue();\r\n\t\tvar formParams = self.getFormContainer().getParams();\r\n\t\t\r\n\t\taction.params = action.params || {};\r\n\r\n        var recordXpath = self.properties.xpathContext;\r\n\r\n\t\tswitch(action.actionType) {\r\n\t\t\tcase \"Process\":\r\n\t\t\t\taction.params = {\r\n\t\t\t\t\tadditionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n\t\t\t\t\tidParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n                    recordXpath: recordXpath\r\n\t\t\t\t};\r\n                if (typeof action.idStartScope !== \"undefined\") {\r\n                    action.params.idStartScope = action.idStartScope;\r\n                }\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Form\":\r\n\t\t\t\taction.params = {\r\n\t\t\t\t\tidStartScope: action.idStartScope,\r\n\t\t\t\t\tadditionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n\t\t\t\t\tentityXpath: self.properties.xpathActions,\r\n\t\t\t\t\tidParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n\t\t\t\t\tidEntity: action.idEntity,\r\n\t\t\t\t\tguidEntity: action.guidEntity\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Rule\":\r\n\t\t\t\t//TODO\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tactionsList.push(action);\r\n\t\tself.setValue(actionsList);\r\n\t\tself.setDisplayValue(actionsList);\r\n\t},\r\n\r\n\t/**\r\n\t * Remove action within value object\r\n\t * @param index\r\n\t */\r\n\tremoveActionToQueue: function(index) {\r\n\t\tvar self = this;\r\n\t\tvar value = self.getValue();\r\n\t\tvalue.splice(index, 1);\r\n\t\tself.setValue(value);\r\n\t\tself.setDisplayValue(value);\r\n\t},\r\n\t/**\r\n\t * Add the render data to the given collection in order to send data to the server\r\n\t * @param renderValues\r\n\t */\r\n\tcollectData: function(renderValues) {\r\n\t\tvar self = this;\r\n\t\tif(self.controlValueIsChanged()) {\r\n\t\t\tvar properties = self.properties;\r\n\t\t\tvar xpath = properties.xpath;\r\n\t\t\tvar controlValue = self.getValue();\r\n\t\t\tvar actions = [];\r\n\t\t\t$.each(controlValue, function(index, value) {\r\n\t\t\t\tvar action = {};\r\n\t\t\t\taction.params = value.params || {};\r\n\t\t\t\taction.guidAction = value.guidObject || value.guidAction;\r\n\t\t\t\taction.displayName = value.displayName;\r\n\t\t\t\taction.guidConstructor = value.guidConstructor;\r\n\t\t\t\taction.actionType = value.actionType;\r\n\t\t\t\taction.xpathContext = value.xpathContext;\r\n\t\t\t\taction.guidEntity = value.guidEntity;\r\n\t\t\t\tactions.push(action);\r\n\t\t\t});\r\n\t\t\trenderValues[xpath] = (actions.length == 0) ? \"\" : JSON.encode(actions);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Util to count how many actions are there\r\n\t * @param action\r\n\t * @return {number}\r\n\t */\r\n\tcountSameActions: function(action) {\r\n\t\tvar self = this;\r\n\t\tvar value = self.getValue();\r\n\t\tvar count = 0;\r\n\t\t$.each(value, function(key, value) {\r\n\t\t\tif(value.guidAction == action.guidAction) {\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn count;\r\n\t},\r\n\r\n\t/**\r\n\t * Get list of tags\r\n\t * @param taglist\r\n\t * @return {Array}\r\n\t */\r\n\tgetTagList: function(taglist) {\r\n\t\ttaglist = taglist || [];\r\n\t\tvar result = [];\r\n\r\n\t\tfor(var i = taglist.length; i > 0; i--) {\r\n\t\t\tresult.push(taglist[i - 1].value);\r\n\t\t}\r\n\t\treturn (result.length > 0) ? result : \"\";\r\n\t}\r\n});","/*\r\n *   Name: BizAgi Render Column Decorator Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define basic stuff for Columns\r\n */\r\n\r\nbizagi.rendering.element.extend(\"bizagi.rendering.columns.column\", {}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        this.decoratedClass = params.decorated;\r\n        this.data = params.data;\r\n        if (params.singleInstance) {\r\n            this.decorated = new this.decoratedClass({\r\n                data: this.data,\r\n                parent: this.parent,\r\n                renderFactory: this.renderFactory,\r\n                dataService: this.dataService\r\n            });\r\n            this.decorated.getControl = this.getControl;\r\n            params.decorated = this.decorated;\r\n            this.decorated.properties.isColumn = true;\r\n        } else {\r\n            this.decorateRenders = [];\r\n        }\r\n        this.grid = params.parent;\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n        properties.columnVisible = bizagi.util.parseBoolean(properties.columnVisible) != null ? bizagi.util.parseBoolean(properties.columnVisible) : true;\r\n        properties.align = properties.align || 'center';\r\n        properties.textFormat = properties.textFormat || {};\r\n        properties.submitOnChange = (typeof properties.submitOnChange != \"undefined\") ? bizagi.util.parseBoolean(properties.submitOnChange) : false;\r\n        properties.singleInstance = params.singleInstance;\r\n        properties.editable = (typeof properties.editable != \"undefined\") ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.visible = (typeof properties.visible != \"undefined\") ? bizagi.util.parseBoolean(properties.visible) : true;\r\n        properties.required = (typeof properties.required != \"undefined\") ? bizagi.util.parseBoolean(properties.required) : false;\r\n        properties.showColumn = (typeof properties.showColumn != \"undefined\") ? bizagi.util.parseBoolean(properties.showColumn) : true;\r\n\r\n        // Define if it is editable or not        \r\n        try {\r\n            if (params.parent && typeof params.parent.properties.editable == \"boolean\" && !params.parent.properties.editable) {\r\n                properties.editable = false;\r\n            }\r\n        } catch (e) {\r\n        }\r\n\r\n        // Define if the column is readonly\r\n        this.readonly = properties.readonly !== undefined ? properties.readonly : false;\r\n        if (this.readonly) properties.editable = required = false;\r\n\r\n        // Save original properties\r\n        this.originalProperties = JSON.parse(JSON.encode(properties));\r\n    },\r\n\r\n    /*\r\n    *   Return true if the column is read-only, so we can make a quick render\r\n    */\r\n    isReadonly: function () {\r\n        return false;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Method to retrieve the decorated control\r\n    */\r\n    getControl: function () {\r\n        var self = this;\r\n        return $(\".ui-bizagi-render-control\", self.element || self.observableElement);\r\n    },\r\n    /*\r\n    *   Returns the decorated cell instance to use\r\n    */\r\n    getDecorated: function (surrogateKey) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (properties.singleInstance) {\r\n            return self.decorated;\r\n        }\r\n        else {\r\n            var decorated = self.decorateRenders[surrogateKey];\r\n            if (decorated == undefined) {\r\n                if (typeof self.decorateRenders != \"object\") {\r\n                    self.decorateRenders = [];\r\n                }\r\n                var instanceDecoratedClass = new this.decoratedClass({\r\n                    data: bizagi.clone(this.data),\r\n                    parent: this.parent,\r\n                    renderFactory: this.renderFactory,\r\n                    dataService: this.dataService\r\n                });\r\n                decorated = instanceDecoratedClass;\r\n                self.decorateRenders[surrogateKey] = instanceDecoratedClass;\r\n\r\n                // Set surrogate key to all controls\r\n                decorated.surrogateKey = surrogateKey;\r\n\r\n                // Execute decorated overrides\r\n                self.applyOverrides(decorated);\r\n\r\n                // Also override setDisplayValue on summary row for non numeric columns\r\n                if (surrogateKey == \"summary\" && decorated.properties.type != \"columnMoney\" && decorated.properties.type != \"columnNumber\") {\r\n\r\n                    decorated.setDisplayValue = function (value) {\r\n                        var control = this.getControl();\r\n\r\n                        // Replace line breaks for html line breaks\r\n                        control.html(value);\r\n                    };\r\n                }\r\n            }\r\n            return decorated;\r\n        }\r\n    },\r\n    /*\r\n    *   Set a ready function to execute when the render has been inserted in the dom\r\n    */\r\n    ready: function () {\r\n        return this.readyDeferred.promise();\r\n    },\r\n    /*\r\n    *   Load stuff needed for the column\r\n    *   It could return a promise if the column need to load async stuff\r\n    */\r\n    initialize: function () {\r\n        // Override to do any stuff needed here\r\n    },\r\n    /* \r\n    *  Method to determine if the render value can be sent to the server or not\r\n    */\r\n    canBeSent: function (surrogateKey, cellOverrides) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n\r\n        if (cellOverrides) {\r\n            decorated.properties.visible = cellOverrides.visible;\r\n            decorated.properties.editable = cellOverrides.editable;\r\n        }\r\n        return decorated.canBeSent() || (!self.properties.editable && self.hasChanged()) || (!decorated.properties.editable && self.hasChanged()) || (decorated.properties.editabilityEnabled);\r\n    },\r\n    /*\r\n    *   Method to check if a value is valid or not in this render\r\n    */\r\n    isValueValid: function (surrogateKey, value, messages, propertyOverrides) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var invalidElements = [];\r\n\r\n        if (propertyOverrides.visible) {\r\n            self.setValue(surrogateKey, value);\r\n\r\n            // Override properties\r\n            decorated.properties = $.extend(decorated.properties, propertyOverrides);\r\n\r\n            if (self.grid && typeof(decorated.grid) === \"undefined\") {\r\n                decorated.grid = self.grid;\r\n            }\r\n\r\n            // Validate field\r\n            decorated.isValid(invalidElements);\r\n        }\r\n\r\n        if (invalidElements.length > 0) {\r\n            $.each(invalidElements, function (i, invalidElement) {\r\n                messages.push(invalidElement.message);\r\n            });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    },\r\n    /*\r\n    *   Apply custom overrides to each decorated instance\r\n    */\r\n    applyOverrides: function (decorated) {\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        // Set grid and id references to the control in order to render the content\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        decorated.grid = self.grid;\r\n        decorated.column = this;\r\n        decorated.surrogateKey = surrogateKey;\r\n\r\n        // Set cell value\r\n        self.setValue(surrogateKey, value);\r\n\r\n        // Override render properties\r\n        self.overrideDecoratedRenderProperties(surrogateKey);\r\n\r\n        // Set flag to check when a render has changed\r\n        self.changed = false;\r\n\r\n        // If the render is not editable return the readonly version of the column\r\n        //Fix: Uncaught RangeError: Maximum call stack size exceeded\r\n        if (!properties.editable && arguments[3] !== \"CALLER_RENDER_READ_ONLY_COLUMNSLINK\")\r\n            return self.renderReadOnly.apply(self, arguments);\r\n\r\n        // Returns the decorated render inside a custom layout for columns\r\n        self.readyDeferred = new $.Deferred();\r\n        var cell = decorated.render(\"cell\");\r\n\r\n        // If the render changes set the flag on\r\n        decorated.bind(\"renderchange\", function () {\r\n            self.changed = true;\r\n        });\r\n\r\n        self.bind(\"rendered\", function () {\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n        return cell;\r\n    },\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRender: function (surrogateKey, cell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        decorated.postRenderElement(cell);\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element when the element is read-only\r\n    */\r\n    renderReadOnly: function (surrogateKey, value) {\r\n        var self = this;\r\n        // Set grid and id references to the control in order to render the content\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        decorated.grid = self.grid;\r\n        decorated.column = this;\r\n        decorated.surrogateKey = surrogateKey;\r\n\r\n        // Set cell value\r\n        self.setValue(surrogateKey, value);\r\n\r\n        // Override render properties\r\n        self.overrideDecoratedRenderProperties(surrogateKey);\r\n\r\n        // Changes editable to false to render read-only\r\n        decorated.properties.editable = false;\r\n\r\n        // Perform the internal render\r\n        self.readyDeferred = new $.Deferred();\r\n        var result = decorated.render(\"cell.readonly\");\r\n\r\n        self.bind(\"rendered\", function () {\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n        // Returns the decorated render inside a custom layout for columns\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *  Returns the html template to draw the summary cell\r\n    */\r\n    renderSummary: function (key, value) {\r\n        var self = this;\r\n        var result = self.renderFactory.getTemplate(\"cell.summary\")\r\n        return $.tmpl(result).html();\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRenderReadOnly: function (surrogateKey, cell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var editable = self.properties.editable;\r\n        decorated.properties.editable = false;\r\n        if (self.properties.singleInstance) {\r\n            decorated.element = cell;\r\n        }\r\n        decorated.postRenderElement(cell);\r\n        decorated.properties.editable = editable;\r\n    },\r\n\r\n    /*\r\n    * Return false to all columns that doesn't need special treatment (like number or currency)\r\n    */\r\n    postRenderSummary: function () {\r\n        return false;\r\n    },\r\n\r\n    /*\r\n    *   Returns the cell html to be inserted in the table\r\n    */\r\n    getCell: function () {\r\n        return this.decorated.getDisplayValue();\r\n    },\r\n    /*\r\n    *   Sets the surrogate key for this row\r\n    */\r\n    setSurrogateKey: function (key) {\r\n        this.surrogateKey = key;\r\n    },\r\n    /*\r\n    *   Sets the internal value, only must be called internally\r\n    */\r\n    setValue: function (surrogateKey, value) {\r\n        var self = this;\r\n\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated != \"undefined\" && decorated != null) {\r\n\r\n            decorated.properties.originalValue = value;\r\n            decorated.properties.previousValue = value;\r\n\r\n             if ((value === null || value === undefined) && (self.properties.defaultvalue !== undefined || self.properties.defaultValue !== undefined) && decorated.grid != undefined) {\r\n                value = self.setDefaultValue(surrogateKey, decorated);\r\n            }\r\n\r\n            decorated.properties.value = value;\r\n            decorated.setValue(value, false);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Set the cell default value and make this action as a change to send it to server\r\n    */\r\n    setDefaultValue: function (surrogateKey, decorated) {\r\n        var self = this;\r\n        var value = self.properties.defaultvalue || self.properties.defaultValue;\r\n\r\n        decorated.grid.changes[surrogateKey] = decorated.grid.changes[surrogateKey] || {};\r\n        decorated.grid.changes[surrogateKey][self.properties.xpath] = value;\r\n\r\n        return value;\r\n    },\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        return decorated.getValue();\r\n    },\r\n    /*\r\n    *   Gets the composite value (applies for non-standard render values)\r\n    */\r\n    getCompositeValue: function (surrogateKey) {\r\n        return this.getValue(surrogateKey);\r\n    },\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () {\r\n        return bizagi.rendering.element.ELEMENT_TYPE_COLUMN;\r\n    },\r\n    /*\r\n    *   Determines if a render has changed its value\r\n    */\r\n    hasChanged: function () {\r\n        return this.changed;\r\n    },\r\n    /*\r\n    *   Triggers an event inside the control\r\n    */\r\n    trigger: function (eventType, data) {\r\n        if (this.decorated)\r\n            this.decorated.trigger(eventType, data);\r\n    },\r\n    /*\r\n    *   Triggers an event handler inside the control\r\n    */\r\n    triggerHandler: function (eventType, data) {\r\n        if (this.decorated)\r\n            this.decorated.triggerHandler(eventType, data);\r\n    },\r\n    /*\r\n    *   Binds to an event\r\n    */\r\n    bind: function (eventType, fn) {\r\n        if (this.decorated)\r\n            this.decorated.bind(eventType, fn);\r\n    },\r\n    /*\r\n    *   Unbinds to an event\r\n    */\r\n    unbind: function (eventType, fn) {\r\n        if (this.decorated)\r\n            this.decorated.unbind(eventType, fn);\r\n    },\r\n    /*\r\n    *   Override decorated properties\r\n    */\r\n    overrideDecoratedRenderProperties: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n\r\n        // Override decorated control properties\r\n        decorated.properties.editable = this.properties.editable;\r\n        decorated.properties.visible = this.properties.visible;\r\n        decorated.properties.required = this.properties.required;\r\n    },\r\n\r\n    overrideProperties: function (properties) {\r\n        var self = this;\r\n\r\n        self.properties.editable = properties.editable || self.properties.editable;\r\n        self.properties.visible = properties.visible || self.properties.visible;\r\n        self.properties.required = properties.required || self.properties.required;\r\n    },\r\n\r\n    /*\r\n    *   Returns the xpath used to sort the grid\r\n    */\r\n    getSortName: function () {\r\n        var self = this;\r\n\r\n        // Check if there is an override for the default behaviour \r\n        var decorated = self.getAnyDecoratedInstance();\r\n        if (decorated && decorated.getSortColumn) {\r\n            return decorated.getSortColumn();\r\n        }\r\n\r\n        // Default behaviour\r\n        return self.properties.xpath;\r\n    },\r\n\r\n    /*\r\n    *   Returns any of the decorated instances, if there are none, return null\r\n    */\r\n    getAnyDecoratedInstance: function () {\r\n        var self = this;\r\n        var first;\r\n\r\n        // Get the first key for the hash\r\n        for (first in this.decorateRenders) break;\r\n\r\n        // Return the first decorated render\r\n        if (first) return this.decorateRenders[first];\r\n\r\n        return null;\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self.decorated) {\r\n                self.decorated.unbind(\"renderchange\");\r\n                self.decorated.dispose();\r\n            }\r\n        \r\n            if (self.decorateRenders) {\r\n                bizagi.util.arrayEach(self.decorateRenders, function (key, render) {\r\n                    if (render) {\r\n                        render.unbind(\"renderchange\");\r\n                        render.dispose();\r\n                    }\r\n                });\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n        \r\n        // Call base\r\n        self._super();\r\n    }\r\n});\r\n\r\n","/*\r\n *   Name: BizAgi Render Column ReadOnlyDecorator Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define basic stuff for readonly-columns\r\n */\r\n\r\n// Extends itself\r\n$.Class.extend(\"bizagi.rendering.columns.readonly\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n\r\n        // Define the column as readonly\r\n        properties.editable = required = false;\r\n    },\r\n\r\n    /*\r\n    *   Return true if the column is read-only, so we can make a quick render\r\n    */\r\n    isReadonly: function () {\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value) {\r\n        if (typeof value === \"string\") {\r\n            value = bizagi.util.sanitizeHTML(value);\r\n            var valueToDisplay = value.replaceAll(\"\\\\n\", \"<br/>\").replaceAll(\"\\n\", \"<br/>\");\r\n            return valueToDisplay;\r\n        }\r\n        else if (value === null){\r\n            return \"\";\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRender: function (surrogateKey, cell) {\r\n        // DON'T DO ANYTHING\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element when the element is read-only\r\n    */\r\n    renderReadOnly: function (surrogateKey, value) {\r\n        return this.render(surrogateKey, value);\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRenderReadOnly: function (surrogateKey, cell) {\r\n        // DON'T DO ANYTHING\r\n    },\r\n    \r\n    /*\r\n    *   Method to check if a value is valid or not in this render\r\n    */\r\n    isValueValid: function () {\r\n        // It is always valid because the column is readonly\r\n        return true;\r\n    }\r\n});\r\n\r\n","/*\r\n*   Name: BizAgi Render Document Generator\r\n*   Author: Mauricio Gonzalez\r\n*   Comments:\r\n*   -   This script will define basic stuff for document generator render\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.document\", {}, { \r\n});","/*\r\n*   Name: BizAgi Render Letter\r\n*   Author: Alexander Mejia\r\n*   Comments:\r\n*   -   This script will define basic stuff for letter render\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.letter\", {}, {\r\n    \r\n});","/*\r\n*   Name: BizAgi Render Combo Column Decorator Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for Combo Columns\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.combo\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n        properties.recalculate = bizagi.util.parseBoolean(properties.recalculate) || false;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Apply custom overrides to each decorated instance\r\n    */\r\n    applyOverrides: function (decorated) {\r\n        var properties = this.properties;\r\n\r\n        this._super(decorated);\r\n\r\n        if (!properties.recalculate) {\r\n            decorated.originalGetData = decorated.getData;\r\n            decorated.getData = this.getDataForAllCells;\r\n            decorated.findDataById = this.findDataById;\r\n        }\r\n    },\r\n\r\n    findDataById: function (id) {\r\n        var self = this;\r\n        var result = {};\r\n        if (this.column && this.column.comboData) {\r\n            $.each(this.column.comboData, function (key, value) {\r\n                if (value.id == id) {\r\n                    result = value;\r\n                }\r\n            });\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Single data fetch for all the cells\r\n    */\r\n    getDataForAllCells: function (params) {\r\n        var column = this.column;\r\n        if (column.comboData) return column.comboData;\r\n        if (column.fetchingData) return column.dataPromise;\r\n\r\n        // Start fetching\r\n        column.fetchingData = true;\r\n        column.dataPromise = $.when(this.originalGetData(params))\r\n        .pipe(function (result) {\r\n            column.comboData = result;\r\n            column.fetchingData = false;\r\n            return result;\r\n        });\r\n\r\n        return column.dataPromise;\r\n    },\r\n\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function(surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated === null) {\r\n            return;\r\n        }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey == \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if (value && bizagi.util.isString(value)) {        \r\n            self._super(surrogateKey, value);\r\n        } else if (value && value.length > 0) {\r\n            // Create the value property\r\n            var newValue = {\r\n                id: value[0][0],\r\n                value: value[0].length > 2 ? $.grep(value[0], function(item, i) { return i != 0; }) : value[0][1]\r\n            };\r\n            // Call base\r\n            self._super(surrogateKey, newValue);\r\n            decorated.selectedValue = newValue.value;\r\n        } else if (value && value.id && value.value) {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.value;\r\n        } else if (self.properties.type == \"columnRadio\") {\r\n            self._super(surrogateKey, null);\r\n            decorated.selectedValue = value;\r\n        } else if (value && typeof (value) == \"number\") {\r\n            self._super(surrogateKey, value);\r\n        } else {\r\n            // Set null values when the entry array is null\r\n            self._super(surrogateKey, null);\r\n            decorated.selectedValue = \"\";\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Set the cell default value and make this action as a change to send it to server\r\n    */\r\n   setDefaultValue: function (surrogateKey, decorated) {\r\n        var self = this;\r\n        var value = self.properties.defaultValue[0];\r\n\r\n        decorated.grid.changes[surrogateKey] = decorated.grid.changes[surrogateKey] || {};\r\n        decorated.grid.changes[surrogateKey][self.properties.xpath] = value.id;\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getCompositeValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var value = decorated.getValue();\r\n        var label = decorated.getSelectedValue();\r\n\r\n        // Build value for grid data\r\n        var valueForGrid = [];\r\n        if (value && (value.id > 0 || bizagi.util.isString(value.id))) {\r\n            valueForGrid.push([]);\r\n            valueForGrid[0].push(value.id);\r\n            valueForGrid[0].push(label);\r\n        } else {\r\n            valueForGrid.push([]);\r\n        }\r\n\r\n        return valueForGrid;\r\n    },\r\n\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var value = decorated.getValue();\r\n        if (value) return value.id;\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value, tableCell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var properties = self.properties;\r\n\r\n        // If the control needs to recalculate data, reset it on the decorated render\r\n        if (properties.recalculate) {\r\n            decorated.resetData();\r\n        }\r\n\r\n        // Change the xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + surrogateKey + \"]\" : self.grid.properties.xpath + \"[id=\" + surrogateKey + \"]\";\r\n        decorated.properties.xpathContext = xpathContext;\r\n\r\n        // Render the control\r\n        var result = this._super(surrogateKey, value, tableCell);\r\n\r\n        return result;\r\n    },\r\n\r\n    renderReadOnly: function (key, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(key);\r\n        var properties = self.properties;\r\n\r\n        // Change the xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + key + \"]\" : self.grid.properties.xpath + \"[id=\" + key + \"]\";\r\n        decorated.properties.xpathContext = xpathContext;\r\n\r\n        // Render the control\r\n        var result = this._super(key, value);\r\n\r\n        return result;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: BizAgi Render Combo Column Decorator Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define basic stuff for Combo Columns\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.search\", {}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n\r\n        if (properties.advancedSearch && this.getMode() === \"execution\") {\r\n            properties.submitOnChange = bizagi.util.parseBoolean(properties.submitOnChange) || false;\r\n            properties.submitOnChange = (properties.submitVersion || 1) > 1 ? properties.submitOnChange : true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Apply custom overrides to each decorated instance\r\n     * @param decorated\r\n     */\r\n    applyOverrides: function (decorated) {\r\n        this._super(decorated);\r\n\r\n        // Change the xpath context\r\n        var xpathContext;\r\n\r\n        if (this.properties.xpathContext.length > 0) {\r\n            xpathContext = this.properties.xpathContext + \".\" + this.grid.properties.xpath + \"[id=\" + decorated.surrogateKey + \"]\";\r\n        } else {\r\n            xpathContext = this.grid.properties.xpath + \"[id=\" + decorated.surrogateKey + \"]\";\r\n        }\r\n\r\n        decorated.properties.xpathContext = xpathContext;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value, tableCell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var properties = self.properties;\r\n\r\n        // If the control needs to recalculate data, reset it on the decorated render\r\n        if (properties.recalculate) {\r\n            decorated.resetData();\r\n        }\r\n\r\n        // Render the control\r\n        var result = this._super(surrogateKey, value, tableCell);\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var value = decorated.getValue();\r\n        if (value && typeof (value) == \"object\") return value.id;\r\n\r\n        return value;\r\n    },\r\n\r\n    setValue: function (surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated === null) {\r\n            return;\r\n        }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey == \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if (value && value.length > 0) {\r\n            // Create the value property\r\n            var newValue = {\r\n                id: value[0][0],\r\n                value: value[0].length > 2 ? $.grep(value[0], function (item, i) {\r\n                    return i != 0;\r\n                }) : value[0][1]\r\n            };\r\n            // Call base\r\n            self._super(surrogateKey, newValue);\r\n            decorated.selectedValue = newValue.value;\r\n        } else if (value && value.id && value.value) {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.value;\r\n        } else if (value && value.id && value.label) {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.label;\r\n        } else {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = \"\";\r\n        }\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Render Date Column Decorator Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for Date Columns\r\n*/\r\n\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.date\", {}, {\r\n\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function (surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated === null) return;\r\n\r\n        self._super(surrogateKey, value);\r\n        if ((value === null || value === undefined) && self.properties.defaultvalue !== undefined) {\r\n            value = self.setDefaultValue(surrogateKey, decorated);\r\n        }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey === \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if (value == null) {\r\n            decorated.setValue(value, false);\r\n            decorated.properties.displayValue = \"\";\r\n        }\r\n\r\n        var date = bizagi.util.dateFormatter.getDateFromInvariant(value, decorated.properties.showTime);\r\n\r\n        if (date === 0) {\r\n            // force another attempt in order to check invariant format for the value with time or without time (reverse option)\r\n            date = bizagi.util.dateFormatter.getDateFromInvariant(value, !decorated.properties.showTime);\r\n        }\r\n        // Format date to current format\r\n        if (date !== 0) {\r\n            var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n            var formattedDate = bizagi.util.dateFormatter.formatDate(date, decorated.properties.fullFormat, datePickerRegional);\r\n\r\n            // Set formatted value in display value property\r\n            decorated.properties.displayValue = formattedDate;\r\n\r\n            // Send original value to decorated control, because it must be with invariant format\r\n            decorated.setValue(value, false);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Set the cell default value and make this action as a change to send it to server\r\n    */\r\n    setDefaultValue: function (surrogateKey, decorated) {\r\n        var self = this;\r\n        var value = self.properties.defaultvalue;\r\n\r\n        decorated.grid.changes[surrogateKey] = decorated.grid.changes[surrogateKey] || {};\r\n\r\n        value = bizagi.util.dateFormatter.getDateFromInvariant(value, decorated.properties.showTime || false);\r\n\r\n        value = bizagi.util.dateFormatter.formatInvariant(value, true);\r\n        decorated.grid.changes[surrogateKey][self.properties.xpath] = value;\r\n\r\n        return value;\r\n    }\r\n});\r\n\r\n","/*\r\n *   Name: Bizagi Base Render Factory\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define an abstract render factory in order to do common stuff for all device factories\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.base.factory\", {}, {\r\n    /* \r\n    *   Constructor\r\n    */\r\n    init: function (dataService) {\r\n        this.templates = {};\r\n        this.dataService = dataService;        \r\n    },\r\n\r\n    /**\r\n    * Load client resources in order to override a default behavior\r\n    */\r\n    loadOverrides: function () {\r\n    },\r\n    /*\r\n    *   This function will load asynchronous stuff needed in the module\r\n    */\r\n    initAsyncStuff: function() {\r\n        return $.when.apply($, [this.loadOverrides(), this.loadTemplates()]);\r\n    },\r\n    /*\r\n    *   Load all the templates used for rendering\r\n    */\r\n    loadTemplates: function () {\r\n    },\r\n    /*\r\n    *   Load one template and save it internally\r\n    */\r\n    loadTemplate: function(template, templateDestination) {\r\n        var self = this;\r\n\r\n        // Go fetch the template\r\n        return bizagi.templateService.getTemplate(templateDestination, template)\r\n                .done(function (resolvedTemplate) {\r\n                self.templates[template] = resolvedTemplate;\r\n            });\r\n    },\r\n    /*\r\n    * Returns a common  used template for the framework\r\n    */\r\n    getCommonTemplate: function (template) {        \r\n        return this.templates[template];\r\n    },\r\n    /*\r\n    *   Returns the appropiate container based on the container type\r\n    */\r\n    getContainer: function (params) {\r\n        // TODO: REMOVE IMPLEMENTATION\r\n\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var containerParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"form\") {\r\n            return new bizagi.rendering.form(containerParams);\r\n        }\r\n\r\n        if (type == \"mobileform\") {\r\n            return new bizagi.rendering.mobileform(containerParams);\r\n        }\r\n\r\n        if (type == \"template\") {\r\n            return new bizagi.rendering.formTemplate(containerParams);\r\n        }\r\n\r\n        if (type == \"queryForm\") {\r\n            return new bizagi.rendering.queryForm(containerParams);\r\n        }\r\n\r\n        if (type == \"layout\") {\r\n            return new bizagi.rendering.layout(containerParams);\r\n        }\r\n\r\n        if (type == \"usersForm\") {\r\n            return new bizagi.rendering.usersForm(containerParams);\r\n        }\r\n\r\n        if (type == \"panel\") {\r\n            return new bizagi.rendering.panel(containerParams);\r\n        }\r\n\r\n        if (type == \"contentPanel\" || type == \"contentpanel\") {\r\n            return new bizagi.rendering.contentPanel(containerParams);\r\n        }\r\n\r\n        if (type.toLowerCase() == \"nestedform\") {\r\n            return new bizagi.rendering.nestedForm(containerParams);\r\n        }\r\n\r\n        if (type == \"tab\") {\r\n            return new bizagi.rendering.tab(containerParams);\r\n        }\r\n\r\n        if (type == \"tabItem\" || type == \"tabitem\") {\r\n            return new bizagi.rendering.tabItem(containerParams);\r\n        }\r\n\r\n        if (type == \"horizontal\") {\r\n            return new bizagi.rendering.horizontal(containerParams);\r\n        }\r\n\r\n        if (type == \"accordion\") {\r\n            return new bizagi.rendering.accordion(containerParams);\r\n        }\r\n\r\n        if (type == \"accordionItem\") {\r\n            return new bizagi.rendering.accordionItem(containerParams);\r\n        }\r\n\r\n        if (type == \"group\") {\r\n            return new bizagi.rendering.group(containerParams);\r\n        }\r\n\r\n        if (type == \"mobilegroup\") {\r\n            return new bizagi.rendering.mobilegroup(containerParams);\r\n        }\r\n\r\n        if (type == \"searchForm\") {\r\n            containerParams.context = \"search\";\r\n            containerParams.contexttype = \"metadata\";\r\n            return new bizagi.rendering.searchForm(containerParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate render based on the render type\r\n    */\r\n    getRender: function (params) {\r\n\r\n        // TODO: REMOVE IMPLEMENTATION\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var renderParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (!type)\r\n            type = \"label\";\r\n\r\n        if (type == \"text\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                return new bizagi.rendering.extendedText(renderParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.text(renderParams);\r\n        }\r\n        if (type == \"mobiletext\") {\r\n            return new bizagi.rendering.mobiletext(renderParams);\r\n        }\r\n\r\n        if (type == \"association\") {\r\n            return new bizagi.rendering.association(renderParams);\r\n        }\r\n\r\n        if (type == \"label\") {\r\n            return new bizagi.rendering.label(renderParams);\r\n        }\r\n\r\n        if (type == \"hidden\") {\r\n            return new bizagi.rendering.hidden(renderParams);\r\n        }\r\n\r\n        if (type == \"number\") {\r\n            return new bizagi.rendering.number(renderParams);\r\n        }\r\n\r\n        if (type == \"money\") {\r\n            return new bizagi.rendering.money(renderParams);\r\n        }\r\n\r\n        if (type == \"date\") {\r\n            return new bizagi.rendering.date(renderParams);\r\n        }\r\n\r\n        if (type == \"boolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                return new bizagi.rendering.check(renderParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.yesno(renderParams);\r\n        }\r\n\r\n        if (type == \"combo\") {\r\n            return new bizagi.rendering.combo(renderParams);\r\n        }\r\n\r\n        if (/^cascadingcombo$/i.test(type)) {\r\n            return new bizagi.rendering.cascadingCombo(renderParams);\r\n        }\r\n\r\n        if (type == \"list\") {\r\n            return new bizagi.rendering.list(renderParams);\r\n        }\r\n\r\n        if (type == \"multiSelect\") {\r\n            return new bizagi.rendering.multiSelect(renderParams);\r\n        }\r\n\r\n        if (type == \"radio\") {\r\n            return new bizagi.rendering.radio(renderParams);\r\n        }\r\n\r\n        if (type == \"image\") {\r\n            // Override for test purposes\r\n            return new bizagi.rendering.image(renderParams);\r\n        }\r\n        if (type == \"uploadecm\") {\r\n            // Check if its ECM file            \r\n            return new bizagi.rendering.ecm(renderParams);\r\n        }\r\n\r\n        if (type == \"upload\") {\r\n            return new bizagi.rendering.upload(renderParams);\r\n        }\r\n        if (type == \"grid\") {\r\n            return new bizagi.rendering.grid(renderParams);\r\n        }\r\n\r\n        if (type == \"groupedgrid\") {\r\n            return new bizagi.rendering.grid(renderParams);\r\n        }\r\n\r\n        if (type == \"search\") {\r\n            return new bizagi.rendering.search(renderParams);\r\n        }\r\n\r\n        if (type == \"suggest\") {\r\n            renderParams.data.properties.enableQuerySuggestBehavior = true;\r\n            return new bizagi.rendering.search(renderParams);\r\n        }\r\n\r\n        if (type == \"searchList\") {\r\n            return new bizagi.rendering.searchList(renderParams);\r\n        }\r\n\r\n        if (type == \"letter\") {\r\n            return new bizagi.rendering.letter(renderParams);\r\n        }\r\n\r\n        if (type == \"button\") {\r\n            return new bizagi.rendering.button(renderParams);\r\n        }\r\n\r\n        if (type == \"formLink\") {\r\n            return new bizagi.rendering.formLink(renderParams);\r\n        }\r\n\r\n        if (type == \"link\") {\r\n            return new bizagi.rendering.link(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutImage\") {\r\n            return new bizagi.rendering.layoutImage(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutLink\") {\r\n            return new bizagi.rendering.layoutLink(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutLabel\") {\r\n            return new bizagi.rendering.layoutLabel(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutText\") {\r\n            return new bizagi.rendering.layoutText(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutDateTime\") {\r\n            return new bizagi.rendering.layoutDateTime(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutNumber\") {\r\n            return new bizagi.rendering.layoutNumber(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutMoney\") {\r\n            return new bizagi.rendering.layoutMoney(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutPlaceholder\") {\r\n            return new bizagi.rendering.layoutPlaceholder(renderParams);\r\n        }\r\n\r\n        if (type == \"actionLauncher\") {\r\n            return new bizagi.rendering.actionLauncher(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutBoolean\") {\r\n            return new bizagi.rendering.layoutBoolean(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutUpload\") {\r\n            return new bizagi.rendering.layoutUpload(renderParams);\r\n        }\r\n\r\n        if (type == \"entityTemplate\") {\r\n            return new bizagi.rendering.entityTemplate(renderParams);\r\n        }\r\n\r\n        if (type == \"polymorphicLauncher\") {\r\n            return new bizagi.rendering.polymorphicLauncher(renderParams);\r\n        }\r\n\r\n        if (type == \"userfield\") {\r\n            return new bizagi.rendering.userfieldWrapper(renderParams);\r\n        }\r\n\r\n        // Check search renders (starts with \"search\")\r\n        if (type.indexOf(\"search\") == 0) {\r\n            return this.getSearchRender(params);\r\n        }\r\n\r\n        if (type.indexOf(\"query\") == 0) {\r\n            return this.getQueryRender(params);\r\n        }\r\n\r\n        if (type == \"document\") {\r\n            return new bizagi.rendering.document(renderParams);\r\n        }\r\n\r\n        if (type == \"image\") {\r\n            return new bizagi.rendering.image(renderParams);\r\n        }\r\n        if (type == \"fileprint\") {\r\n            return new bizagi.rendering.fileprint(renderParams);\r\n        }\r\n        if (type == \"geolocation\") {\r\n            return new bizagi.rendering.geolocation(renderParams);\r\n        }\r\n\r\n        if (type == \"collectionnavigator\") {\r\n            return new bizagi.rendering.collectionnavigator(renderParams);\r\n        }\r\n\r\n        if (type == \"getUser\") {\r\n            return new bizagi.rendering.getUser(renderParams);\r\n        }\r\n\r\n        if (type == \"rangeDate\") {\r\n            return new bizagi.rendering.rangeDate(renderParams);\r\n        }\r\n\r\n        if (type == \"rangeMoney\") {\r\n            return new bizagi.rendering.rangeMoney(renderParams);\r\n        }\r\n\r\n        if (type == \"rangeNumber\") {\r\n            return new bizagi.rendering.rangeNumber(renderParams);\r\n        }\r\n\r\n        if (type == \"activityCheckList\") {\r\n            return new bizagi.rendering.activityCheckList(renderParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate column based on the render type\r\n    */\r\n    getColumn: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var columnParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService,\r\n            singleInstance: bizagi.util.isEmpty(params.singleInstance) ? true : params.singleInstance\r\n        });\r\n\r\n        if (type == \"columnText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                columnParams.decorated = bizagi.rendering.extendedText;\r\n            } else {\r\n                // Creates one normal text render\r\n                columnParams.decorated = bizagi.rendering.text;\r\n            }\r\n            return new bizagi.rendering.columns.text(columnParams);\r\n        }\r\n\r\n        if (type == \"columnSearchList\") {\r\n            columnParams.decorated = bizagi.rendering.searchList;\r\n            return new bizagi.rendering.columns.searchList(columnParams);\r\n        }\r\n\r\n        if (type == \"columnNumber\") {\r\n            columnParams.decorated = bizagi.rendering.number;\r\n            return new bizagi.rendering.columns.number(columnParams);\r\n        }\r\n\r\n        if (type == \"columnMoney\") {\r\n            columnParams.decorated = bizagi.rendering.money;\r\n            return new bizagi.rendering.columns.number(columnParams);\r\n        }\r\n\r\n        if (type == \"columnDate\") {\r\n            columnParams.decorated = bizagi.rendering.date;\r\n            return new bizagi.rendering.columns.date(columnParams);\r\n        }\r\n\r\n        if (type == \"columnBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                columnParams.decorated = bizagi.rendering.check;\r\n                if (params.data.properties.isExclusive) {\r\n                    return new bizagi.rendering.columns.exclusiveCheck(columnParams);\r\n                }\r\n            } else {\r\n                // Creates one yes-no render\r\n                columnParams.decorated = bizagi.rendering.yesno;\r\n            }\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnCombo\") {\r\n            columnParams.decorated = bizagi.rendering.combo;\r\n            return new bizagi.rendering.columns.combo(columnParams);\r\n        }\r\n\r\n        if (type == \"columnRadio\") {\r\n            columnParams.decorated = bizagi.rendering.radio;\r\n            return new bizagi.rendering.columns.radio(columnParams);\r\n        }\r\n\r\n        if (type == \"columnList\") {\r\n            columnParams.decorated = bizagi.rendering.list;\r\n            return new bizagi.rendering.columns.list(columnParams);\r\n        }\r\n\r\n        if (type == \"columnHidden\") {\r\n            columnParams.decorated = bizagi.rendering.hidden;\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUpload\") {\r\n            columnParams.decorated = bizagi.rendering.upload;\r\n            return new bizagi.rendering.columns.upload(columnParams);\r\n        }\r\n\r\n        if (type == \"columnImage\") {\r\n            columnParams.decorated = bizagi.rendering.image;\r\n            return new bizagi.rendering.columns.image(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUploadEcm\") {\r\n            columnParams.decorated = bizagi.rendering.ecm;\r\n            return new bizagi.rendering.columns.uploadecm(columnParams);\r\n        }\r\n        if (type == \"columnLink\") {\r\n            columnParams.decorated = bizagi.rendering.link;\r\n            return new bizagi.rendering.columns.link(columnParams);\r\n        }\r\n\r\n        if (type == \"columnFormLink\") {\r\n            columnParams.decorated = bizagi.rendering.formLink;\r\n            return new bizagi.rendering.columns.link(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUserfield\") {\r\n            columnParams.decorated = bizagi.rendering.userfieldWrapper;\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnSearch\") {\r\n            columnParams.decorated = bizagi.rendering.search;\r\n            return new bizagi.rendering.columns.search(columnParams);\r\n        }\r\n\r\n        if (type == \"columnLabel\") {\r\n            columnParams.decorated = bizagi.rendering.label;\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnReadonly\") {\r\n            columnParams.decorated = bizagi.rendering.label;\r\n            return new bizagi.rendering.columns.readonly(columnParams);\r\n        }\r\n\r\n        if (type == \"columnDocument\") {\r\n            columnParams.decorated = bizagi.rendering.document;\r\n            return new bizagi.rendering.columns.document(columnParams);\r\n        }\r\n\r\n        if (type == \"columnLetter\") {\r\n            columnParams.decorated = bizagi.rendering.letter;\r\n            return new bizagi.rendering.columns.letter(columnParams);\r\n        }\r\n\r\n        if (type == \"columnButton\") {\r\n            columnParams.decorated = bizagi.rendering.button;\r\n            return new bizagi.rendering.columns.button(columnParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate search render based on the type\r\n    */\r\n    getSearchRender: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var searchParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"searchText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                return new bizagi.rendering.extendedText(searchParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.text(searchParams);\r\n        }\r\n\r\n        if (type == \"searchBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                return new bizagi.rendering.check(searchParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.yesno(searchParams);\r\n        }\r\n\r\n        if (type == \"searchNumber\") {\r\n            if (data.properties.dataType == 29) {\r\n                //Creates a Scientific Notation render\r\n                return new bizagi.rendering.numberScientificNotation(searchParams);\r\n            }\r\n            return new bizagi.rendering.number(searchParams);\r\n        }\r\n\r\n        if (type == \"searchMoney\") {\r\n            return new bizagi.rendering.money(searchParams);\r\n        }\r\n\r\n        if (type == \"searchDate\") {\r\n            return new bizagi.rendering.date(searchParams);\r\n        }\r\n\r\n        if (type == \"searchCombo\") {\r\n            return new bizagi.rendering.combo(searchParams);\r\n        }\r\n\r\n        if (type == \"searchSuggest\") {\r\n            return new bizagi.rendering.search(searchParams);\r\n        }\r\n\r\n        if (type == \"searchLabel\") {\r\n            return new bizagi.rendering.label(searchParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate search render based on the type\r\n    */\r\n    getQueryRender: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var searchParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"queryText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                return new bizagi.rendering.queryExtendedText(searchParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.queryText(searchParams);\r\n        }\r\n\r\n        if (type == \"queryBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                return new bizagi.rendering.queryCheck(searchParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.queryYesNo(searchParams);\r\n        }\r\n\r\n        if (type == \"queryNumber\") {\r\n\r\n            return new bizagi.rendering.queryNumber(searchParams);\r\n        }\r\n\r\n        if (type == \"queryMoney\") {\r\n            return new bizagi.rendering.queryMoney(searchParams);\r\n        }\r\n\r\n        if (type == \"queryDate\") {\r\n            return new bizagi.rendering.queryDate(searchParams);\r\n        }\r\n\r\n        if (type == \"queryCombo\") {\r\n            return new bizagi.rendering.queryCombo(searchParams);\r\n        }\r\n\r\n        if (type == \"queryCascadingCombo\") {\r\n            return new bizagi.rendering.queryCascadingCombo(searchParams);\r\n        }\r\n\r\n        if (type == \"querySuggest\") {\r\n            return new bizagi.rendering.querySuggest(searchParams);\r\n        }\r\n\r\n        if (type == \"queryLabel\") {\r\n            return new bizagi.rendering.queryLabel(searchParams);\r\n        }\r\n\r\n        if (type == \"queryList\") {\r\n            return new bizagi.rendering.queryList(searchParams);\r\n        }\r\n        \r\n        if (type == \"queryMultiSelect\") {\r\n            return new bizagi.rendering.queryMultiSelect(searchParams);\r\n        }\r\n\r\n        if (type == \"querySearch\") {\r\n            return new bizagi.rendering.querySearch(searchParams);\r\n        }\r\n\r\n        if (type == \"queryRadio\") {\r\n            return new bizagi.rendering.queryRadio(searchParams);\r\n        }\r\n\r\n        if (type == \"queryState\") {\r\n            return new bizagi.rendering.queryState(searchParams);\r\n        }\r\n\r\n        if (type == \"queryCaseState\") {\r\n            return new bizagi.rendering.queryCaseState(searchParams);\r\n        }\r\n\r\n        if (type == \"queryProcess\") {\r\n            return new bizagi.rendering.queryProcess(searchParams);\r\n        }\r\n\r\n        if (type == \"querySearchUser\") {\r\n            return new bizagi.rendering.querySearchUser(searchParams);\r\n        }\r\n\r\n        if (type == \"queryHidden\") {\r\n            return new bizagi.rendering.hidden(searchParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Method to fetch templates from a private dictionary\r\n    */\r\n    getTemplate: function (template) {\r\n        var self = this;\r\n        return self.templates[template];\r\n    }\r\n});\r\n","/*\r\n*   Name: Bizagi Device Render Factory\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will detect the current device and then will load the appropriate factory on demand\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.device.factory\", {}, {\r\n\r\n    /**\r\n     * Constructor, detects the device\r\n     * @param params\r\n     */\r\n    init: function (params) {\r\n        this.execution_device = bizagi.util.detectDevice();\r\n        this.cachedFactory = {};\r\n    },\r\n\r\n    /**\r\n     * Returns the appropriate render factory based on the device detection\r\n     * Because it loads the scripts on demand it must return a promise\r\n     * @param dataService\r\n     * @param device\r\n     * @returns {*}\r\n     */\r\n    getRenderFactory: function (dataService, device) {\r\n        var self = this;\r\n        device = device || \"desktop\";\r\n        var defer = new $.Deferred();\r\n\r\n        if (typeof self.cachedFactory[device] !== \"undefined\") {\r\n            // Reset print version value\r\n            self.cachedFactory[device].printVersion = false;\r\n            // Resolve with cached factory                \r\n            defer.resolve(self.cachedFactory[device]);\r\n        } else {\r\n            // If factory is not cached then build it\r\n            if (device === \"print\") {\r\n\r\n                // Load print version references\r\n                self.cachedFactory[device] = new bizagi.rendering.print.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n\r\n            } else if (device === \"desktop\") {\r\n\r\n                // Load desktop references\r\n                self.cachedFactory[device] = new bizagi.rendering.desktop.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n\r\n            } else if (bizagi.util.isTabletDevice(device)) {\r\n\r\n                // Load tablet references\r\n                self.cachedFactory[device] = new bizagi.rendering.tablet.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n            } else if (bizagi.util.isSmartphoneDevice(device)) {\r\n\r\n                // Load tablet references\r\n                self.cachedFactory[device] = new bizagi.rendering.smartphone.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n            } else {\r\n                // if no device suuported\r\n                bizagi.showMessageBox(\"Not supported device: \" + device);\r\n                defer.reject(\"Not supported device: \" + device);\r\n            }\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Returns the current data service being used\r\n     * @returns {*}\r\n     */\r\n    getDataService: function () {\r\n        return this.dataService;\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: BizAgi Rendering\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will process a rendering page by calling an ajax service to retrieve the model,\r\n *       and then process it to create base layout, and then call the device render factory\r\n */\r\n\r\n// Define BizAgi Rendering namespace\r\nbizagi.rendering = bizagi.rendering || {};\r\n\r\n/*\r\n *   This class will define a method to process the page\r\n *   1. Fetch the data\r\n *   2. Call the device factory to appropriately render the content\r\n */\r\n$.Class.extend(\"bizagi.rendering.facade\", {\r\n    form: undefined,\r\n    executionDeferred: new $.Deferred()\r\n}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        params = params || {};\r\n\r\n        // Set observable element\r\n        this.observableElement = $({});\r\n\r\n        // Injection of Device, only for print version purpose\r\n        var device = params.device || \"\";\r\n\r\n        // Defines a device factory for all rendering\r\n        this.deviceFactory = new bizagi.rendering.device.factory();\r\n\r\n        // Creates a data service instance\r\n        this.dataService = new bizagi.render.services.service(params);\r\n\r\n        // Retrieves the render factory\r\n        this.renderFactory = this.deviceFactory.getRenderFactory(this.dataService, device);\r\n    },\r\n    getFactory: function () {\r\n        var self = this;\r\n        return {\r\n            deviceFactory: self.deviceFactory,\r\n            dataService: self.dataService,\r\n            renderFactory: self.renderFactory\r\n        };\r\n    },\r\n    /*\r\n    *   Subscribe method\r\n    */\r\n    subscribe: function () {\r\n        this.observableElement.bind.apply(this.observableElement, arguments);\r\n    },\r\n    /*\r\n    *   Unsubscribe method\r\n    */\r\n    unsubscribe: function () {\r\n        this.observableElement.unbind.apply(this.observableElement, arguments);\r\n    },\r\n    /*\r\n    *   Publish method\r\n    */\r\n    publish: function () {\r\n        return this.observableElement.triggerHandler.apply(this.observableElement, arguments);\r\n    },\r\n    /*\r\n    *   This method will re-execute the process\r\n    */\r\n    update: function (params) {\r\n        var self = this;\r\n\r\n        // Update rendering mode\r\n        if (params.mode)\r\n            self.mode = params.mode;\r\n\r\n        // Enable form buttons on desktop view\r\n        return self.execute($.extend({\r\n            canvas: self.canvas,\r\n            mode: self.mode\r\n        }, params));\r\n    },\r\n    /*\r\n    *   Start point method to use in the main javascript pages\r\n    *   This method will process everything and attach the html directly to the dom\r\n    */\r\n    execute: function (params) {\r\n        var self = this;\r\n        var doc = this.ownerDocument;\r\n        var body = $(\"body\", doc);\r\n        params = params || {};\r\n\r\n        // Creates ready deferred\r\n        if (self.executionDeferred && self.executionDeferred.state) {\r\n            if (self.executionDeferred.state() == \"resolved\") {\r\n                self.executionDeferred = $.Deferred();\r\n            }\r\n        } else {\r\n            self.executionDeferred = $.Deferred();\r\n        }\r\n\r\n        // Performance measurement stuff\r\n        bizagi.chrono.initAndStart(\"rendering+data\", true);\r\n        bizagi.rendering.render.startOptimization();\r\n\r\n        // Override mode\r\n        if (typeof (params.mode) === \"undefined\") {\r\n            if (!bizagi.util.isEmpty(window.location.search)) {\r\n                var queryString = bizagi.util.getQueryString();\r\n                params.mode = queryString[\"mode\"];\r\n            }\r\n        }\r\n\r\n        // If the canvas is not given, we need to create one\r\n        var canvas = self.canvas = params.canvas = params.canvas || $(\"<div />\").appendTo(body);\r\n        self.mode = params.mode;\r\n\r\n        self.process(params).done(function (form) {\r\n\r\n            // Clear canvas    \r\n            if (!params.refreshing) {\r\n                canvas.empty();\r\n            }\r\n\r\n            // Append content\r\n            canvas.append(form.container);\r\n\r\n            // Include process path\r\n            $(form.pathProcess).insertBefore(form.container);\r\n\r\n            // Keep reference in class\r\n            self.form = form;\r\n            self.form.setSize({width: self.lastWidth, height: self.lastHeight});\r\n\r\n            // Save window size variables\r\n            setTimeout(function () {\r\n                self.lastWidth = $(window).width();\r\n                self.lastHeight = $(window).height();\r\n                if (window.self !== window.top)\r\n                    self.resizeInPopUpHTML();\r\n            }, 2000);\r\n\r\n            // Publish an event to check if the form has been set in the DOM\r\n            form.triggerHandler(\"ondomincluded\");\r\n\r\n            // Notify to module users that the form has been rendered\r\n            self.publish(\"rendering-formRendered\", {});\r\n\r\n            // Configure handlers\r\n            self.configureRefresh(form, canvas);\r\n            self.configureRouting(form, canvas);\r\n            self.configureRenderError(form, canvas);\r\n            self.configureResize(form);\r\n            self.configureGlobalHandlers(form);\r\n\r\n            // Check if it is a summary form\r\n            if (params.summaryForm) {\r\n                form.container.addClass(\"ui-bizagi-summary-form\");\r\n            }\r\n\r\n            // Ends main timer and log everything\r\n            bizagi.chrono.stopAndLog(\"rendering\");\r\n            bizagi.chrono.stopAndLog(\"rendering+data\");\r\n            bizagi.chrono.stopAndLog(\"submitForm\");\r\n            bizagi.chrono.stopAndLog(\"submitForm-ajax\");\r\n            bizagi.chrono.stopAndLog(\"waiting\");\r\n\r\n            // Resolves deferred\r\n            bizagi.rendering.render.stopOptimization();\r\n\r\n            // Expose public reference of form\r\n            if (bizagi.override.enableE2EInterface) {\r\n                self.Class.form = self.form;\r\n                self.Class.executionDeferred.resolve(self.form);\r\n            }\r\n\r\n            self.executionDeferred.resolve(self.form);\r\n\r\n        }).fail(function (message, errorType) {\r\n\r\n            $.when(self.renderFactory)\r\n                .done(function (renderFactory) {\r\n\r\n                    if (typeof message === \"undefined\" || message === \"\") {\r\n                        message = bizagi.localization.getResource(\"render-error-unknown\");\r\n                    }\r\n\r\n                    var errorTemplate = renderFactory.getCommonTemplate(\"form-error\");\r\n                    // Fill canvas\r\n                    canvas.empty();\r\n                    canvas.append($.tmpl(errorTemplate, {\r\n                        message: message\r\n                    }));\r\n                    self.publish(\"rendering-formRenderedError\", message);\r\n                    self.canvas.triggerHandler(\"errorform\", message);\r\n                    // Ends main timer and log everything\r\n                    bizagi.chrono.stopAndLog(\"rendering\");\r\n                    bizagi.chrono.stopAndLog(\"rendering+data\");\r\n\r\n                    self.executionDeferred.reject();\r\n                });\r\n        });\r\n\r\n        return self.executionDeferred.promise();\r\n    },\r\n    /*\r\n    *   Returns the execution deferred to determine if the component is ready or not\r\n    */\r\n    ready: function () {\r\n        return this.executionDeferred.promise();\r\n    },\r\n    /*\r\n    *   Loads data and render factory in order to process the form\r\n    *   Returns a deferred to set callbacks when the process is done\r\n    */\r\n    process: function (params) {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        // Call get form data service\r\n        var dataPromise = self.dataService.getFormData(params);\r\n\r\n        var canvas = self.canvas || params.canvas;\r\n\r\n        bizagi.showErrorAlertDialog = false;\r\n        // Set callback when requests have been done\r\n        $.when(dataPromise, self.renderFactory)\r\n            .done(function (data, renderFactory) {\r\n                bizagi.showErrorAlertDialog = true;\r\n\r\n                // When there is no data trigger an event\r\n                if (bizagi.util.isEmpty(data)) {\r\n                    self.publish(\"no-data-found\");\r\n                    defer.fail();\r\n                    return;\r\n                }\r\n\r\n                if (data && data.type == \"reload\") {\r\n                    var form = self.form;\r\n                    if (form) {\r\n                        form.endLoading();\r\n                        form.dispose();\r\n                    }\r\n                    // Trigger handler on canvas\r\n                    canvas.triggerHandler(\"routing\");\r\n\r\n                } else if (data && data.type == \"suspended\") {\r\n                    var errorTemplate = renderFactory.getTemplate(\"info-message\");\r\n                    var message = bizagi.localization.getResource(\"render-case-suspended\");\r\n                    var errorHtml = $.tmpl(errorTemplate, {\r\n                        message: message\r\n                    });\r\n                    // Remove loading icon from summary container\r\n                    errorHtml.appendTo(canvas);\r\n\r\n                    defer.fail();\r\n\r\n                } else if (data && data.type != \"error\") {\r\n                    if (params.hasOwnProperty('printversion')) {\r\n                        data = self.transformGridControl(data);\r\n                        data.form.properties.editable = \"False\";\r\n                    }\r\n\r\n                    bizagi.chrono.initAndStart(\"rendering\");\r\n                    params.type = (data.form && data.form.properties.type) || params.type;\r\n                    var form = self.processForm(data.form, renderFactory, params);\r\n\r\n                    // Resolve deferred\r\n                    defer.resolve(form);\r\n\r\n                } else {\r\n                    self.getFailDeferred(data, defer);\r\n                }\r\n            }).fail(function (errorMessage) {\r\n            self.getFailDeferred(errorMessage, defer);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n    /**\r\n     * In the print version widget when grid control was rendered, the main render has broken\r\n     * Is necesary change id of grid control to fixed these  problems\r\n     */\r\n    transformGridControl: function (data) {\r\n        var self = this;\r\n        if (data == null) {\r\n            return data;\r\n        }\r\n\r\n        if (data.hasOwnProperty('type') && data.type == 'grid') {\r\n            data.id = data.id + \"-print\";\r\n            data.allowAdd = \"False\";\r\n            data.allowDelete = \"False\";\r\n            data.allowEdit = \"False\";\r\n            data.allowGrouping = \"False\";\r\n            data.allowMore = \"False\";\r\n            data.allowSearch = \"False\";\r\n        } else {\r\n            $.each(data, function (key, value) {\r\n                if (typeof (value) == 'object') {\r\n                    data[key] = self.transformGridControl(data[key]);\r\n                }\r\n            });\r\n        }\r\n        return data;\r\n    },\r\n    /**\r\n     * Resolve deferred\r\n     */\r\n    getFailDeferred: function (errorMessage, defer) {\r\n        var self = this;\r\n        var message = \"\";\r\n        var jsonErrorMessage = {};\r\n        try {\r\n            jsonErrorMessage = JSON.parse(errorMessage.responseText);\r\n        } catch (e) {\r\n            jsonErrorMessage = {message: errorMessage.responseText, errorType: \"ERRORUNKNOWN\"};\r\n        }\r\n\r\n\r\n        if (jsonErrorMessage.message) {\r\n            message += \"<br>Error Type: \" + jsonErrorMessage.errorType;\r\n            message += \"<br>Error Message: \" + jsonErrorMessage.message;\r\n        } else {\r\n            if (jsonErrorMessage.errorType == \"JSharpNotSupportedException\") {\r\n                message += \"<br>Error Message: \" + bizagi.localization.getResource(\"jsharp-required\");\r\n            }\r\n        }\r\n\r\n        // Error in metadata InvalidFormMetadata\r\n        if (jsonErrorMessage.errorType == 'ERRORUNKNOWN') {\r\n            defer.reject(message, jsonErrorMessage.errorType);\r\n        } else {\r\n\r\n            defer.reject(message);\r\n        }\r\n    },\r\n    /*\r\n    *   Process the form\r\n    */\r\n    processForm: function (data, renderFactory, params) {\r\n        var form = renderFactory.getContainer($.extend(params, {\r\n            type: params.type || \"form\",\r\n            data: data\r\n        }));\r\n\r\n        //Orientation RTL - OrderButtons\r\n        if (typeof BIZAGI_ORIENTATION != \"undefined\") {\r\n            if ((form.properties.orientation == \"rtl\" || BIZAGI_ORIENTATION == 'rtl') && form.buttons.length > 0) {\r\n                var buttonsForm = form.buttons[0];\r\n\r\n                form.buttons.splice(0, 1);\r\n                form.buttons.push(buttonsForm);\r\n            }\r\n        }\r\n\r\n        // Render the full form\r\n        form.render();\r\n\r\n        return form;\r\n    },\r\n    /*\r\n    *   Performs a resize\r\n    */\r\n    resize: function (args) {\r\n        var self = this;\r\n        if (self.form) {\r\n            self.form.trigger(\"renderresize\", args);\r\n        }\r\n    },\r\n    /*\r\n    *   Binds a refresh handler to detect when the whole form needs to fetch all data from server\r\n    */\r\n    configureRefresh: function (form, canvas) {\r\n        var self = this;\r\n\r\n        // Attach a refresh handler to recreate all the form\r\n        form.bind(\"refresh\", function (_, refreshParams) {\r\n\r\n            // Find the scroll top\r\n            var parent = form.container.parent();\r\n            parent = bizagi.util.scrollTop(parent);\r\n            var scrollTop = parent.scrollTop();\r\n\r\n            $(self.form).trigger(\"onRefreshStarted\");\r\n\r\n            //Dispose current form\r\n            form.dispose(refreshParams);\r\n            canvas.fastEmpty();\r\n            var canvasParent = canvas.parent();\r\n            if (canvasParent.find(\".ui-bizagi-button-container\").length > 0) {\r\n                canvasParent.find(\".ui-bizagi-button-container\").remove();\r\n            }\r\n\r\n            if (self.executionDeferred && self.executionDeferred.state) {\r\n                if (self.executionDeferred.state() == \"resolved\") {\r\n                    self.executionDeferred = $.Deferred();\r\n                }\r\n            }\r\n\r\n            var formParams = self.form.getParams();\r\n            // Re-execute process\r\n            $.when(self.execute($.extend(refreshParams, {\r\n                canvas: canvas,\r\n                refreshing: true,\r\n                idCase: formParams.idCase,\r\n                displayName: formParams.displayName\r\n            }))).done(function () {\r\n\r\n                // Restore scroll at same position\r\n                setTimeout(function () {\r\n                    parent.scrollTop(scrollTop);\r\n                    $(self.form).trigger(\"onRefreshFinished\");\r\n                }, 100);\r\n            });\r\n\r\n            return self.executionDeferred.promise();\r\n        });\r\n    },\r\n    /*\r\n    *   Binds a resize hanlder to configure the resize behaviour\r\n    */\r\n    configureResize: function (form) {\r\n        var self = this;\r\n\r\n        // Attach resize handler\r\n        form.bind(\"renderresize\", function (_, args) {\r\n            args = args || {};\r\n            // Just allow one resize at a time\r\n            if (self.resizeTimeout)\r\n                return;\r\n            var resizeFn = function () {\r\n                // Call resize event in form\r\n                var width = $(window).width();\r\n                var height = $(window).height();\r\n                if (args.forceResize || width != self.lastWidth) {\r\n\r\n                    // Logging stuff\r\n                    bizagi.chrono.initAndStart(\"resize\");\r\n\r\n                    // Perform resize\r\n                    form.resize({\r\n                        width: width,\r\n                        height: height\r\n                    });\r\n                    self.lastWidth = width;\r\n                    self.lastHeight = height;\r\n\r\n                    // Logging stuff\r\n                    bizagi.chrono.stopAndLog(\"resize\");\r\n                    bizagi.chrono.log(\"resize\");\r\n                }\r\n\r\n                self.resizeTimeout = null;\r\n                clearTimeout(self.resizeTimeout);\r\n            };\r\n            self.resizeTimeout = setTimeout(resizeFn, 0);\r\n\r\n        });\r\n        self.resize();\r\n    },\r\n    /*\r\n    *   Binds a routing handler to detect when the workportal need to enroute the case\r\n    */\r\n    configureRouting: function (form, canvas) {\r\n        // Attach a routing handler to notify to the caller\r\n        form.bind(\"routing\", function (context, triggerParams) {\r\n            //Dispose current form\r\n            form.dispose();\r\n\r\n            // Trigger handler on canvas\r\n            canvas.triggerHandler(\"routing\", triggerParams);\r\n        });\r\n    },\r\n    /*\r\n    *   Binds a generic handler that will be replicated to facade instantiators\r\n    */\r\n    configureGlobalHandlers: function (form) {\r\n        var self = this;\r\n\r\n        // Attach a routing handler to notify to the caller\r\n        form.bind(\"globalHandler\", function (_, args) {\r\n            // Trigger handler on canvas\r\n            return self.publish(args.eventType, args.data);\r\n        });\r\n    },\r\n    /*\r\n    * Binds error form handler to detect when the render element nop posible get information or error in server\r\n    */\r\n    configureRenderError: function (form, canvas) {\r\n        var self = this;\r\n\r\n        form.bind(\"formRenderingError\", function (event, errorMessage) {\r\n            $.when(self.renderFactory)\r\n                .done(function (renderFactory) {\r\n                    var message = \"<br>Error: \";\r\n\r\n                    errorMessage = errorMessage.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\r\n\r\n                    var jsonErrorMessage = JSON.parse(errorMessage);\r\n                    if (jsonErrorMessage.message) {\r\n                        message += jsonErrorMessage.message;\r\n                        message += \"<br>Error Type: \" + jsonErrorMessage.errorType;\r\n                    }\r\n                    var errorTemplate = renderFactory.getCommonTemplate(\"form-error\");\r\n                    // Fill canvas\r\n                    canvas.empty();\r\n                    canvas.append($.tmpl(errorTemplate, {\r\n                        message: message\r\n                    }));\r\n                    //send the type error to differentiate between a form and an item for render\r\n                    self.canvas.triggerHandler(\"errorform\", \"renderItemError\");\r\n                    // Ends main timer and log everything\r\n                    bizagi.chrono.stopAndLog(\"rendering+data\");\r\n                    bizagi.chrono.stopAndLog(\"rendering\");\r\n                });\r\n        });\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n        if (self.form) {\r\n            self.form.dispose();\r\n        }\r\n        bizagi.util.dispose(self);\r\n    },\r\n\r\n    resizeInPopUpHTML: function () {\r\n        if ($(\".activitiFormContainer\").length > 0 && bizagi.util.getQueryString().type != \"cases\") {\r\n            var heightActivitiFormContainer = $(\".activitiFormContainer\").height() || 0;\r\n            var renderForm = $(\".activitiFormContainer #ui-bizagi-webpart-render-container\");\r\n            var buttonContainer = $(\".ui-bizagi-button-container\", \".activitiFormContainer\");\r\n            var heightButtonContainer = buttonContainer.outerHeight() || 0;\r\n            var renderBehavior = bizagi.util.getQueryString().renderBehavior || \"\";\r\n            renderBehavior = renderBehavior.replace(\"#\", \"\");\r\n\r\n            if (renderBehavior == \"PopUp\") {\r\n                if (typeof (self.postMessageSocket) == \"undefined\") {\r\n                    var heightCanvas = $(\".activitiFormContainer\").height() - 50 || 396;\r\n                    $(\"#render-canvas\").height(heightCanvas);\r\n                    $(\"#render-canvas\").css(\"overflowY\", \"scroll\");\r\n                } else $(\".activitiFormContainer\").height($(\".activitiFormContainer\").height() + $(\".ui-bizagi-button-container\").height() + 30);\r\n                $(\".ui-bizagi-button-container\").css(\"position\", \"absolute\");\r\n                $(\".ui-bizagi-button-container\").appendTo(\".activitiFormContainer\");\r\n                if ($(\".ui-bizagi-button-container\").length > 1) {\r\n                    $(\".ui-bizagi-button-container:first\").hide();\r\n                    renderForm.css(\"marginTop\", \"-17px\");\r\n                }\r\n            }\r\n            if (buttonContainer.length > 0) {\r\n                //display buttons\r\n                renderForm.height(heightActivitiFormContainer - 97 - heightButtonContainer);\r\n            }\r\n            if ($(\".ui-bizagi-button-container\").children().length == 0)\r\n                $(\"#render-canvas\").height($(\"#render-canvas\").height() + heightButtonContainer);\r\n            else {\r\n                buttonContainer.width(\"100%\");\r\n                buttonContainer.css(\"marginLeft\", 0);\r\n                buttonContainer.css(\"bottom\", 0);\r\n            }\r\n        } else if (bizagi.util.getQueryString().type == \"render\") {\r\n            $(\"html\").css(\"overflowX\", \"hidden\");\r\n            ($(\"#render\").height() <= window.innerHeight + 5) ? $(\"html\").css(\"overflowY\", \"hidden\")\r\n                : $(\"html\").css(\"overflowY\", \"scroll\");\r\n            $(\".ui-widget-overlay\").height(650);\r\n        }\r\n    }\r\n\r\n});"]}