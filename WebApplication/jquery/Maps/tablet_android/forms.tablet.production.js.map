{"version":3,"sources":["jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.view.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.form.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.grid.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.adhocForm.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.searchForm.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.upload.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.startForm.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.ecm.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.container.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.render.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.form.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.panel.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.contentPanel.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.nestedForm.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.tab.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.tabItem.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.horizontal.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.layout.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.accordion.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.accordionItem.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.group.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.searchForm.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.text.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.extendedText.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.label.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.number.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.money.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.numberScientificNotation.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.date.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.yesno.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.check.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.combo.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.collectionnavigator.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.upload.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.upload.offline.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.grid.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.grid.offline.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.grid.grouped.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.search.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.letter.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.button.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.fileprint.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.link.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.formLink.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.hidden.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.radio.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.cascadingCombo.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.list.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.multiSelect.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.association.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.ecm.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.searchList.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.userfield.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.image.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.document.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.geolocation.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.actionLauncher.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.entityTemplate.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.polymorphicLauncher.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.checkList.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.activityCheckList.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.range.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.rangeDate.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.rangeMoney.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.rangeNumber.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.column.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.combo.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.document.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.date.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.text.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.number.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.numberScientificNotation.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.image.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.upload.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.link.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.uploadecm.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.button.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.radio.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.readonly.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.search.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.list.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.exclusiveCheck.js","jquery/rendering/js/tablet/bizagi.rendering.tablet.factory.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.queryForm.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.formTemplate.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.usersForm.js"],"names":["$","Class","extend","init","dataService","renderFactory","slideFormParams","self","this","slideFormDeferred","Deferred","container","navigation","createRenderContainer","title","buttons","processButtons","form","caption","bizagi","localization","getResource","actions","submitData","refresh","ordinal","action","save","style","callback","validateForm","data","collectRenderValues","allowGetOriginalFormValues","formValues","children","idPageCache","getPageCache","onSave","when","done","result","type","addValidationMessage","messages","addErrorMessage","message","goBack","resolve","fail","dataFail","responseText","toString","JSON","parse","e","match","substr","length","clearValidationMessages","reject","showSaveButton","shift","render","params","renderSlideForm","slideForm","promise","defer","loading","start","getFormData","then","recordXPath","properties","recordXpath","editable","orientation","getContainer","view_container","formParams","element","html","isRefresh","navigate","id","setNavigationButtons","remove","append","buttonContainer","triggerHandler","bind","refreshParams","errorTemplate","getCommonTemplate","error_message","fasttmpl","appendTo","always","stop","destroy","_renderButtons","content","each","ui","value","click","slideContainer","configureViewHandlers","formClass","rendering","tablet","submitForm","endLoading","key","renders","getRenders","i","updateOriginalValue","containerParams","delegate","onCancel","xhr","errorType","transformData","allowEdition","row","columns","xpathContext","xpath","elements","pageCacheId","sessionId","transformActions","validations","transformValidations","item","mapRenderType","displayType","mapValue","recalculate","visible","columnVisible","isColumn","concat","label","additionallabel","undefined","push","replaceAll","toLowerCase","includes","grep","gridActions","util","isEmpty","bDependencyFound","dependencies","indexOf","newAction","encode","transformConditions","conditions","transformCommands","commands","elseCommands","gridValidations","validation","newValidation","condition","expressions","simple","complex","argumentType","argument","refreshIndex","command","splice","isAddForm","searchForms","searchParams","slideParams","slideDeferred","extraButtons","hasOwnProperty","renderSearchDialog","getSearchContainerData","currentSearchForm","performSearch","idCase","idRender","displayName","renderAddForm","allowNew","pop","searchResultContainer","hide","firstChild","show","_","scrollTop","parent","focus","selectedTabs","getSelectedTabs","contextType","searchFormParams","ev","slideBoxDeferred","handleSearchFormZindex","containerSearchCriteria","find","error_obj","hasSessionFormException","goToStartPage","addContainer","getFormParams","guidEntity","entity","idStartScope","requestedForm","addFormParams","saveDataAddForm","index","getButtons","innerHTML","Object","keys","map","indicator","currentAddForm","error","getErrorFormatted","forceCollectData","contexttype","formData","collectRenderValuesForSubmit","isMapEmpty","showMessageBox","mapping","getRender","found","obj","setValue","setDisplayValueToControl","renderControlSearchForm","addForm","setDisplayValue","getDisplayValue","slideOptions","text","deferred","searchFormToLoad","tabContainer","otherElements","searchForm","isDefault","tab","getSearchFormData","searchFormData","Math","guid","idSearchForm","url","pipe","options","option","modalViewDisplayed","jQuery","n","css","code","dfd","onClose","renderUploadFile","template","virtualForm","originalProperties","uniqueId","showConfirmationBox","window","location","href","getStartForm","saveButtonLabel","getMetadataForm","$renderEdition","onSaveDataMetadataForm","fileData","metadata","renderType","getRenderType","metadataType","newRender","assign","metadataId","description","required","parseBoolean","readOnly","toUpperCase","dataType","allowDecimals","thousands","maxLength","autoExtend","update","metadataValues","idMetadata","idFileUpload","fileName","xPath","idAttrib","metaValues","updateECMMetadata","fileProperties","startLoading","base","prototype","initializeData","_super","formContainer","getFormContainer","getParams","getLabel","observableElement","getFormattingLabel","getControl","control","getControlFiller","controlFiller","getContainerMessage","containerMessage","getColumnContainerMessage","getDisplayOptionClass","changeDisplayOption","getAlignClass","alignType","changeLabelAlign","changeValueAlign","customizeRenderWidth","labelWidth","valueWidth","percent2Number","width","setValidationMessage","isGridControl","normalizeType","$message","grid","column","test","replace","attr","addClass","removeClass","display","displayValue","getElementsToStylize","context","changeRequired","triggerRenderValidate","changeRequiredLabel","clearDisplayValue","input","filter","ele","val","getValue","warnings","errors","configureHandlers","configureComplexGateway","validationController","controllers","actionController","readyDeferred","modalViewDidAppear","modalViewDidDisappear","configureNetworkHandlers","postRenderContainer","isiOSTabletDevice","isObjectEmpty","warningContainer","prependTo","detach","errorContainer","ekey","button","routing","eq","prop","document","unbind","deferredSave","allowOnlineActions","autoSaveEvents","newData","isEmptyObject","setTimeout","saveBox","showSaveBox","saveForm","internalSubmitForm","buttonProperties","submitDataAction","executeButtonAction","performAction","checkpointAction","commitAction","executeRule","createnewcase","animate","prepare","tag","prepareCheckpointAction","executeButton","prepareCommitAction","next","back","nextWithoutValidations","transitions","activeTransitions","countProps","forcePlanCompletion","surrogatekey","surrogateKey","chrono","initAndStart","flowControlDeferred","deferreds","apply","response","console","log","multiaction","execute","responses","bHasValidations","sendRollbackAction","postProcessButton","refreshForm","IdCase","caseNumber","CaseNumber","nonSupportedMethods","failHandler","stopLoading","validateFeatureSupport","getPane","pane","handler","saveButton","nextButton","getNavigation","getViewContainer","getFocus","idWorkitem","idTask","getEndPointAction","postRenderEdit","isOfflineForm","formsRenderVersion","originalParams","checkWidgetsData","popupResponse","workportal","popup","instance","getResponseValues","getResponseValuesParams","dontClose","close","repaintComplexGateway","idCaseObject","isComplex","getWorkitems","workItems","taskType","currentPopup","widgetName","widgets","widget","BIZAGI_WORKPORTAL_WIDGET_COMPLEXGATEWAY","sourceElement","insertAfter","height","offset","activeScroll","closed","addWarning","addError","processButton","isFloatingButtonsEnabled","isFormButtonsEnabled","dispose","notifier","add","sticky","time","renderContainer","getTemplate","helptext","helpText","mode","getMode","queryForm","getFormType","summaryForm","globalForm","displayAsReadOnly","processPath","breadCrumb","replaceChildrenHtml","renderChildrenHtml","triggerGlobalHandler","eventType","trigger","complexGatewayContainer","hasClass","on","$selected","transitionId","is","panel","contentPanel","material_bizagi_tabs","direction","active_index_tab","activeTab","info","stopPropagation","setActiveTab","rippleEffect","tabItem","setAsActiveContainer","ready","tabs","activate","changeVisibility","counter","horizontal","layout","accordion","accordionItem","group","toggleClass","collapse","isOpen","expand","toogleContainer","renderResult","skipInitialLoad","rowsPerPage","sortBy","sortOrder","overrideGetRemoteData","getRemoteData","parseAdditionalProperties","showTime","inlineAdd","allowDelete","allowAdd","allowEdit","resultsGrid","searchCriteria","results","childrenElements","childElement","Number","child","childrenHash","getElementType","ELEMENT_TYPE_RENDER","postRenderElement","ELEMENT_TYPE_CONTAINER","configureDesignView","configureLayoutView","criteriaContainer","resultsContainer","refreshResults","onSearchFinished","deviceMaxRecordsExceeded","records","postRender","renderReadOnly","sanitizeHTML","decodedValue","decodeURI","validateValue","br2nl","attachRetypeDouble","blur","retypeDouble","currentValue","tooltip","createTooltip","$context","currentTitle","cloneRender","extendedText","minLines","maxLines","maxCharactersToShow","textarea","resize","showChar","startString","endString","actualMaxLength","which","updateTextareaSize","configureHandlersReadOnly","$control","delegateTarget","currentRows","scrollHeight","offsetHeight","previousValue","newValue","number","isDesign","numericInput","executeFormatCurrencyPlugin","money","numberScientificNotation","inputDisplay","first","last","numericSN","decimalSymbol","attachFormatSientificNotation","scientificNotationFormat","scientificNotationNumber","scientificNotationNumberDisplay","date","MAX_YEARS_DISPLAY","getFormattedDate","dateFormatter","formatDate","fullFormat","postRenderReadOnly","getDateControl","controlElements","defaultDateControl","minDateControl","minValue","maxDateControl","maxValue","timeFormat","getTimeFormat","isNaN","Date","setFullYear","getFullYear","setHours","mobiscroll","calendar","controls","min","max","defaultValue","showScrollArrows","lang","languages","BIZAGI_LANGUAGE","headerText","inst","timeS","onChangeHandler","clear","onSet","valueText","getVal","day","getDate","month","getMonth","year","hours","getHours","minutes","getMinutes","is24h","onBeforeShow","event","changeMinValue","changeMaxValue","isiOSDevice","onShow","preventDefault","isCordovaSupported","isAndroidDevice","cordova","plugins","Keyboard","disableScroll","initializer","getTime","currentDate","split","getDateFromInvariant","currentTime","fullDateFormated","setHour","getFullFormatedDate","getDateFromISO","dateControl","formatInvariant","preprocessDateValue","parseInt","isClearButton","formatedFullDate","setNewDateValue","fullDate","formatISO","dateFromFormat","getDateFromFormat","applyDateFormat","initIndexTime","endIndexTime","substring","isValid","invalidElements","bValid","validateMinAndMaxValue","hasValue","showMandatoryMessage","isMinValue","vValue","resultValue","formatedDate","propertiee","isValidMinMaxValue","formattedDate","yesno","radio","parsedValue","change","cleanData","check","removeAttr","evt","isCheck","combo","renderControl","itemSelected","mobileView","customHeader","contentTemplate","open","configureActions","isDependant","getParentCombo","parentValue","BA_ACTION_PARAMETER_PREFIX","renderCombo","list","configureModalViewHandlers","processComboData","forEach","comboValue","isNumeric","selected","findDataValueById","isArray","join","formatItem","selectedValue","valueObjet","$elementsList","$clearButton","header","$searchInput","enableTyping","filterList","search","$li","stringContainer","stringToSearch","renderComboTemplate","items","selectedId","hasItems","validateItem","getSelectedValue","collectionnavigator","services","service","BA_CONTEXT_PARAMETER_PREFIX","BA_PAGE_CACHE","upload","QUALITY_PICTURE","LIMIT","EXTENSIONSIMG","EXTENSIONSFILE","EXTENSIONSVIDEO","EXTENSIONSAUDIO","isNative","renderItem","noFiles","filesCount","file","files","renderUploadItem","replaceFilesHtml","$contentFile","$inputFile","$nativeFile","checkFileExtensions","attachEvents","media","downloadFile","executeFormFailHandler","counterChoseFiles","off","chooseFile","removeFile","getUploadChoices","actionSheet","actionClicked","handlerUploadFile","appear","cancelClicked","getImageResolutionSizes","withoutCancel","handlerResolutionUpload","addFile","navigator","camera","getPicture","dataImage","extensions","checkMaxSize","getFileDataInfo","checkFileTypes","getAndroidVersion","isAndroid","modalResolutionUpload","buttonIndex","getImageResolutionItems","onFail","quality","sourceType","Camera","PictureSourceType","PHOTOLIBRARY","correctOrientation","saveImage","CAMERA","mediaType","MediaType","PICTURE","destinationType","DestinationType","FILE_URI","targetWidth","targetHeight","device","capture","captureVideo","dataVideo","checkMaxSizeVideo","saveVideo","limit","actionSelected","ResolutionType","ORIGINAL","resolution","getImageResolution","transformImageSize","editedImageURL","localUrl","base64Image","dataItem","dataFile","getImagePath","name","mimeType","uploadFile","fullPath","addParams","buildAddParams","queueID","encodeXpath","getUploadXpath","FileUploadOptions","fileKey","uploadKey","addUrl","decodeURIComponent","onUploadFileCompleted","messageError","processFailMessage","isValidResource","$wrapper","newItem","slice","checkMaxFiles","isMaxFilesReached","maxFiles","maxfiles","actualFiles","validExtensions","validOptions","video","image","fileAPISupported","buildAddFileParams","prefix","FormData","BIZAGI_SESSION_NAME","processUploadFile","itemsUpload","errorResponse","checkMaxSizeFile","deleteUploadItem","triggerRenderChange","getTemplateItemName","maxFileSizeOfProperty","maxSize","maxFileSizeOfUser","BIZAGI_SETTINGS","UploadMaxFileSize","updateFilesCount","status","openOfflineFile","handlerWebUploadFile","removeOfflineFile","fileId","randomNumber","getBlobFromPath","blob","saveOfflineFile","saveResponse","onUploadOfflineFileCompleted","addInteractions","collectData","renderValues","originalValue","method","fileUploaded","itemTemplate","filename","canBeSent","failReadFile","target","fileIndex","fileValue","triggerEvents","dataIndex","getFileParams","offlineType","getOfflineFile","binaryFile","handleBinaryFile","path","blobPromise","normalizeIOSFilePath","errorHandler","resolveLocalFileSystemURL","fileEntry","reader","FileReader","onloadend","Blob","readAsArrayBuffer","blobFile","parameters","operationType","GRID_PAGE_SIZE","singleInstance","cellMetadata","labelAlign","groupBy","groupSummary","updateAffectedCellManually","getRowIndexByKey","initialLoadDone","applyGridPlugin","updateData","changed","pendingActions","arguments","buildColumnModel","columnsTotalizers","bizagi_grid_tablet","subType","waiting","table","emptyTable","specialColumn","rowButtons","cell","specialCell","pager","dynamicPager","totalizer","edit","withEditForm","details","allowDetail","allowMore","enableXlsExport","enablePdfExport","hasTotalizer","rows","pageRequested","isExecutionMode","changes","exclusiveChanges","fetchData","page","sortType","sortRequested","drawCell","isNewRow","cellReady","onCellReady","rowSelected","addRow","addVirtualRow","editRow","editVirtualRow","deleteRow","moreRows","showFormDetails","showDetailForm","showMore","totalData","onTotalData","columnModel","hidden","align","columnIndex","columnLabel","gridColumn","summarizeBy","totalize","operation","bizAgiProperties","dataReady","dataReadyDeferred","loadChanges","rowIndex","rowChanges","getExclusiveChangeByRow","columnData","getColumn","mapChangeValue","comboData","el","setCellOverrides","triggerGridPluginHandler","sort","isRTL","changeOrderData","inlineEdit","newKeys","alreadySaved","saveDeferred","saveInlineAddedRows","newRecords","renderColumn","setSurrogateKey","columntitlealign","valueAlign","columnAlign","drawEditableCell","drawReadonlyCell","originalEditable","submitOnChange","getDecorated","submitOnChangexpathContext","submitAddRequest","newid","slideView","slide","view","addExclusiveChange","submitSaveRequest","addPage","submitRollbackRequest","currentRow","adhocForm","saveAddedRow","addGridRecordData","cleanActionChanges","submitForGridChange","executeSubmitEditRequest","editInline","collectGridChange","dataToSend","submitEditRequest","editPage","submitDeleteRequest","rowDeleted","originalrowsPerPage","moreRowsCommon","changeCellBackgroundColor","j","isVisible","getCellOverride","columnProperties","isValidXPathId","cellInput","changeCellColor","changeCellVisibility","findIndex","cellOverrides","changeCellValue","getControlCell","_value","compositeValue","getCompositeValue","getCellValueFormatted","changeCellRequired","setError","parentPromise","inlineAddPromise","inlineAddDeferred","bUseTimeout","cleanCellData","rowLength","showTotal","columnsModel","operationState","sum","return_value","defaultvalue","count","avg","toFixed","formatTotalizedResult","total","showTotals","controlType","formatMonetaryCell","transition","cssClass","showBorder","changeBackgroundColor","color","formatted","onCellChange","args","setSeconds","setMilliseconds","isExclusive","overrideProperties","columnXpath","columnId","Array","call","hasExclusiveCheck","simpleXpath","originalRows","clone","isTaskForm","newRowKeys","k","createdOffline","isValidGrid","saveAddedRows","beforeInlineAdd","afterInlineAdd","cancelEdition","removeNewRecords","processChanges","collectOfflineTaskData","internalRedersValues","temporalNew","sortArray","currentChanges","canColumnBeSent","columnNumber","buildCellXpathFilter","columnValue","addRowData","idRow","isNew","stringify","merge","processOldRows","collectOfflineStartData","DataType","processRow","newRows","tempRows","col","leng","temp","cellOverride","len","originalFormat","textFormat","format","renderSummary","bRefresh","totalPages","delInfo","deleteUrl","errorsMessage","showValidationMessage","ADVANCED_SEARCH_ID","ADVANCED_ADDITION_ID","CLEAR_SEARCH_ID","NO_RESULTS_SEARCH_ID","DEFAULT_SEARCH_ID","SEARCH_MIN_LENGTH","SEARCH_DELAY","SEARCH_MAX_RECORDS","deferredReference","searchInput","advancedSearch","_simplySearchView","_advanceSearchView","readyActionExecution","modalView","modalViewList","suggestFilter","debounce","autoCompleteSearchResults","trim","selectItem","formSearchParams","allowFullSearch","maxRecords","refreshControl","getContentTemplate","afterOpenAnimation","processRequest","term","renderSearchItem","searchItem","tmpl","req","suggestions","allowSuggest","searchLength","getSuggestData","getOfflineData","getData","state","hideStatus","parseValue","highlightMatches","inputText","allowClear","dataList","startsWith","letter","needsUserConfirmation","userConfirmationMessage","pressed","runButtonAction","fileprint","link","preventDefaultForAnchorTag","isValidValue","getFullyDecodedURI","linkEncode","encodeURI","getAttribute","linkSolver","linktarget","linkTarget","processLayout","isLabelFormat","background","formLink","openLink","paintFormLink","rollbackForm","openLinkRule","property","def","getPropertyValue","dataRuleResp","showErrorMessage","actionSave","getFormLinkXpath","propertyName","getPropertyData","dataUrl","extra","jqXHR","textStatus","errorThrown","ex","noAction","saveLinkForm","saveUrl","executeSubmitOnChange","hasexitrule","closeExitRule","submitCommitRequest","hasentryrule","getFormLinkXpathContext","parentXpathContext","getXpathContext","submitCheckpointRequest","siblings","cascadingCombo","parentCombo","initializingCascadingCombo","isInitialValue","isRendered","empty","deferredVisible","configureCombo","changeCombo","valueItem","getTemplateName","multiSelect","MORE_OPTION_WIDTH","openModalView","template_content","values","isChecked","template_footer","footer","footerTemplate","$listContainer","$suggestInput","newList","querySelector","checked","findItemById","association","getFlipAssociation","flip","makeJsonBase","flipped","getColumnData","getRightAssociation","formatJson","dataAssociation","rightData","leftData","isExecution","addEventControl","showDefaultGroupList","$groups","slideDown","$input","parentId","addElement","removeElement","flipstate","$element","$groupList","parents","closeAccordionSection","active","slideUp","ecm","ERROR_ECM_NO_AVAILABLE","ACTION_DETAILS","ACTION_EDIT","originalData","buildItemUrl","getFileProperties","renderFileLayout","metadataECMMultiaction","getECMMetadata","metaData","showMetadata","Filename","attackMenuEvents","addMenuEvents","$fileItem","viewMore","fn","processActionByType","allowUpdateMetadata","allowCheckOut","lockECMFile","allowCancelCheckOut","unlockECMFile","deleteECMFile","overflowMenu","lockUploadItem","replaceWith","unlockUploadItem","performValidationMessage","isFailResponse","lastIndexOf","searchList","SEARCH_ELEMENTS","searchListInput","_searchListViewModal","getHeaderTemplate","getFooterTemplate","cssClassHeader","adjustResize","finalValue","deleteItem","templateItem","getTagTemplate","modalViewTagList","modalFooter","modalHeader","getListItems","initialScreenSize","innerHeight","emptyItems","userfieldWrapper","getUserfieldControl","sControl","userfieldName","exists","eval","createUserfieldInstance","getUserfieldDefinition","userfield","userfieldGuid","loadUserfield","dynamicFunction","initialParams","getUserFieldInstance","isUserField","userfieldInstance","replicateUserfieldMethods","styleContent","styleGuid","str","loadStyle","defaultUserField","designUserField","userfieldDefinition","basicUserField","isSupported","getEditableControl","getReadonlyControl","controlName","offlineImageId","originalOfflineImageId","isDisposed","isDesignMode","showAsyncImage","choosePhoto","imageAdd","resolutionButtonHandler","imagePreview","useCamera","coordinates","getBoundingClientRect","popoverOptions","CameraPopoverOptions","left","top","version","performUploadFile","imageDelete","deleteImage","uploadFileCompleted","msg","saveImageOffline","saveOfflineError","htmlImage","configureMenu","baseParams","zoom","useNativeScrolling","imageData","img","inputEdition","onPreviewActionBack","buildFullItemUrl","$preview","originalImageWidth","$viewMore","buildItemUrlOffline","isUserPreference","currentUser","idUser","charAt","dataUrlToSave","isOfflineFormsV2Supported","imageId","ACTION_SHOW","ACTION_DOWNLOAD","ACTION_DELETE","documents","downloadalldocuments","allowgenerate","allowGenerate","renderDocumentsHtml","renderActionsHtml","replaceActionsHtml","$inputDocument","$listDocuments","$listActions","getTemplateReadonly","buttonExecuted","validate","validateContainer","documentTemplateGenerate","documentFile","processAction","renderAllDocumentDownload","getTemplateDownload","buildAllDocumentsUrl","joined","redrawDocuments","downloadAllDocuments","$documentContainer","$actionContainer","showDocumentPreview","resolveDocumentTemplateGenerate","resolveDeleteDocumentTemplate","deleteDocumentTemplate","geolocation","ALLOW_UPDATE","coordinate","updateDisplayValue","performPrecision","onSuccess","position","coords","latitude","longitude","getCurrentPosition","actionLauncher","getActions","processPropertyValueArgs","getPropertiesActionLaucher","deferredActions","isHorizontal","templatetype","processPropertyValueDataTmplArgs","templateData","engine","isDefaultTemplate","wrap","configureActionsHandlers","configureTemplateHandlers","guidProcess","guidAction","actionType","readOnlyForm","xpathActions","expr","FilterAction","array","RegExp","keyup","not","subscribe","filters","multipleSelection","countSameActions","actionManager","act","executeAction","showConfirmationDialog","notifyExecution","class_name","processActionForm","additionalXpaths","additionalXpath","detailLabel","cancelButtonLabel","isActionStartForm","savedData","editMode","IdScope","renderParams","idForm","caseId","typeForm","surrogatedKey","rewriteContextType","processActionFormCollection","xpathContextWithKey","printf","idEntity","xpathContextWithoutKey","IdEntity","addActionToQueue","processStartForm","startForm","guidprocess","mappingstakeholders","executeActionImmediately","actionsToExecuteContainer","configureQueueVisibility","listOfActions","removeActionSelector","openActionSelector","removeActionToQueue","extraParams","dataAction","actionsToExecuteTitle","allowactions","calculateFilters","polymorphicLauncher","getPolymorphicActions","serializePolymorphicActions","totalActions","lessActions","templateArguments","allowSearch","treeActionsList","getTreeItems","bindHandlers","level","templateTreeItem","$targetData","guidObject","guidConstructor","onActionClicked","pageCache","maximized","$target","checkList","unique","ceil","random","itemId","onCheckListGroupChange","goal","activityDescription","newItemName","addEditButton","cancelEditButton","additionalElements","notifyLoadItems","resolvedItems","resolved","setItemLocalStorage","hasChanges","idActivity","itemsResolved","progress","activityWork","webpart","publish","prepareNewItem","that","contentHolder","closest","itemPosition","repaintControl","itemSelectedName","itemContent","setSelectionRange","addSelectedHandlers","keypress","addItem","guidItem","checkListHtml","refreshValue","completed","floor","controlValueIsChanged","range","rangeDate","rangeMoney","minControl","getRenderProperties","maxControl","setRanageControls","typeRangeControl","renderProperties","resources","rangeNumber","applyOverrides","decorated","originalGetControl","tableCell","applyColumnStyles","isValueValid","propertyOverrides","getXpath","getDocumentXpath","getContextXpath","preRenderControl","xpathcontext","generateDocumentTemplate","autoOpenDocuments","xpathPath","deleteUploadFile","postRenderSummary","applyUploadPlugin","getUploadFileUrl","calculateInitialLayoutProperties","nameFile","idSession","readonly","refreshCell","enabledChecks","overrideDecoratedRenderProperties","simpleXpathArray","factory","loadTemplates","loadTemplate","getFileTemplate","tmplIcons","src","onDemand","detectDevice","formTemplate","usersForm","nestedForm","mobileform","mobilegroup","columnParams","isExtended","exclusiveCheck","uploadecm","old","offline","enableQuerySuggestBehavior","entityTemplate","getSearchRender","getLayoutRender","getRangeRender","activityCheckList","mobiletext","layoutImage","layoutLink","layoutLabel","layoutText","layoutDateTime","layoutNumber","layoutMoney","layoutPlaceholder","layoutBoolean","layoutUpload"],"mappings":"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","sourcesContent":["/**\r\n *   Name: Bizagi Tablet slide view implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   Serves as an slide form that can render a inner form\r\n */\r\n\r\n// Extends itself\r\n$.Class.extend(\"bizagi.rendering.tablet.slide.view\", {}, {\r\n    /* CONSTRUCTOR\r\n     =====================================================*/\r\n    init: function (dataService, renderFactory, slideFormParams) {\r\n        var self = this;\r\n\r\n        // Define instance variables\r\n        self.dataService = dataService;\r\n        self.renderFactory = renderFactory;\r\n        self.slideFormParams = slideFormParams || {};\r\n        self.slideFormDeferred = new $.Deferred();\r\n        self.container = self.slideFormParams.navigation.createRenderContainer({title: self.slideFormParams.title});\r\n    },\r\n\r\n    buttons: [],\r\n\r\n    processButtons: function (form) {\r\n        var self = this;\r\n\r\n        var onSaveClick = function onSaveClick() {\r\n            if (form) {\r\n                // Perform validations\r\n                if (form.validateForm()) {\r\n\r\n                    // Collect data\r\n                    var data = {};\r\n                    form.collectRenderValues(data);\r\n\r\n                    if (self.slideFormParams.allowGetOriginalFormValues) {\r\n                        data.formValues = form.children;\r\n                    }\r\n\r\n                    // Add page cache for this form\r\n                    data.idPageCache = form.getPageCache();\r\n\r\n                    // Call user callback\r\n                    if (self.slideFormParams.onSave) {\r\n                        $.when(self.slideFormParams.onSave(data))\r\n                            .done(function (result) {\r\n                                if (!result || result === true || result.type === \"success\") {\r\n                                    // Close slide\r\n                                    self.goBack();\r\n\r\n                                    // Resolve deferred\r\n                                    self.slideFormDeferred.resolve(data);\r\n\r\n                                } else if (result.type === \"validationMessages\") {\r\n                                    // Add validation messages\r\n                                    form.addValidationMessage(result.messages);\r\n                                } else if (result.type === \"error\") {\r\n                                    // Add error messages\r\n                                    form.addErrorMessage(result.message);\r\n                                }\r\n                            }).fail(function (dataFail) {\r\n\r\n                            var message = (dataFail.responseText) ? dataFail.responseText : ((typeof dataFail === \"string\") ? dataFail : dataFail.toString());\r\n\r\n                            // Convert String to object\r\n                            if (typeof message === \"string\") {\r\n                                try {\r\n                                    message = JSON.parse(message).message;\r\n                                } catch (e) {\r\n                                    message = message.match(/\"message\":(.*)\",/)[0];\r\n                                    message = message.substr(11, message.length - 13);\r\n                                }\r\n\r\n                            } else if (!message.message) {\r\n                                message = dataFail;\r\n                            }\r\n\r\n                            form.validateForm();\r\n                            form.clearValidationMessages();\r\n                            form.addValidationMessage(message);\r\n\r\n                            // Close slide\r\n                            self.goBack();\r\n\r\n                            //reject defered\r\n                            self.slideFormDeferred.resolve(data);\r\n                        });\r\n\r\n                    } else {\r\n                        // Close slide\r\n                        self.goBack();\r\n\r\n                        //reject defered\r\n                        self.slideFormDeferred.reject();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var onCancelClick = function onCancelClick() {\r\n            // Close slide\r\n            self.goBack();\r\n            //reject defered\r\n            self.slideFormDeferred.reject();\r\n        };\r\n\r\n        form.buttons = [$.extend(form.buttons[0] || {},\r\n            {\r\n                \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-save\"),\r\n                \"actions\": [\"submitData\", \"refresh\"],\r\n                \"submitData\": true,\r\n                \"refresh\": true,\r\n                \"ordinal\": 0,\r\n                \"action\": \"save\",\r\n                \"save\": true,\r\n                \"style\": \"\",\r\n                callback: onSaveClick\r\n            }),\r\n            $.extend(form.buttons[1] || {}, {\r\n                \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-close\"),\r\n                \"actions\": [\"submitData\", \"refresh\"],\r\n                \"submitData\": true,\r\n                \"refresh\": true,\r\n                \"ordinal\": 1,\r\n                \"action\": \"back\",\r\n                \"save\": true,\r\n                \"style\": \"\",\r\n                callback: onCancelClick\r\n            })\r\n        ];\r\n\r\n        // If form is editable, add \"save\" button\r\n        if (!self.slideFormParams.showSaveButton) {\r\n            form.buttons.shift();\r\n        }\r\n\r\n        //self._renderButtons(form);\r\n    },\r\n\r\n    /*\r\n     *   Render the form\r\n     *   The params are the same that will be send to the ajax service\r\n     *   Returns a deferred\r\n     */\r\n    render: function (params) {\r\n        var self = this;\r\n\r\n        // Fill content\r\n        self.renderSlideForm(self.slideForm, params);\r\n\r\n        // Return promise\r\n        return self.slideFormDeferred.promise();\r\n    },\r\n\r\n    /* RENDERS slideForm\r\n     =====================================================*/\r\n    renderSlideForm: function (slideForm, params) {\r\n\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        bizagi.loading.start();\r\n\r\n        // Load template and data\r\n        $.when(self.dataService.getFormData(params))\r\n            .then(function (data) {\r\n                /*** SUCCESS FILTER **/\r\n                if (params.recordXPath) {\r\n                    data.form.properties.recordXpath = params.recordXPath;\r\n                }\r\n\r\n                // Apply editable param\r\n                if (!self.slideFormParams.showSaveButton || params.editable === false) {\r\n                    data.form.properties.editable = false;\r\n                }\r\n\r\n                if (typeof (data.form.properties) !== \"undefined\") {\r\n                    data.form.properties.orientation = self.slideFormParams.orientation || \"ltr\";\r\n                }\r\n\r\n                // Render dialog template\r\n                self.form = self.renderFactory.getContainer({\r\n                    type: \"form\",\r\n                    data: data.form,\r\n                    navigation: self.slideFormParams.navigation,\r\n                    view_container: self.container\r\n                });\r\n\r\n                self.form.params = params.formParams;\r\n\r\n                self.processButtons(self.form);\r\n\r\n                // Return rendering promise\r\n                return self.form.render();\r\n\r\n            }).done(function (element) {\r\n\r\n            // Append form in the slide view\r\n            self.container.element.html(element);\r\n\r\n            if (!params.isRefresh) {\r\n                self.slideFormParams.navigation.navigate(self.container.id);\r\n            }\r\n\r\n            self.container.setNavigationButtons(self.form);\r\n\r\n            // Remove default form buttons\r\n            $(\".ui-bizagi-button-container .action-button\", self.form.container).remove();\r\n            // Add Button\r\n            $(\".ui-bizagi-button-container\", self.form.container).append(self.buttonContainer);\r\n\r\n            // Publish an event to check if the form has been set in the DOM\r\n            self.form.triggerHandler(\"ondomincluded\");\r\n\r\n            // Attach a refresh handler to recreate all the form\r\n            self.form.bind(\"refresh\", function (data, refreshParams) {\r\n                refreshParams.formParams = refreshParams.params || self.form.params;\r\n                self.render(refreshParams);\r\n            });\r\n        }).fail(function (message) {\r\n            /*** Form load failure ***/\r\n\r\n            var errorTemplate = self.renderFactory.getCommonTemplate(\"form-error\");\r\n            var error_message = message.message || \"Error\";\r\n\r\n            $.fasttmpl(errorTemplate, {message: error_message}).appendTo(self.container.element);\r\n            // Navigate on view\r\n            self.slideFormParams.navigation.navigate(self.container.id);\r\n        }).always(function () {\r\n            bizagi.loading.stop();\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    // Go back and destroy\r\n    goBack: function () {\r\n        this.container.destroy();\r\n    },\r\n\r\n    /**\r\n     * Process render buttons\r\n     */\r\n    _renderButtons: function (form) {\r\n        var self = this;\r\n        var content = $(\"<div class='bz-slide-button-container'></div>\");\r\n\r\n        $.each(form.buttons, function (ui, value) {\r\n            $(\"<div class='action-button'>\" + value.caption + \"</div>\").click(\r\n                value.callback\r\n            ).appendTo(content);\r\n        });\r\n\r\n        self.buttonContainer = content;\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet slide form implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   Serves as an slide form that can render a inner form\r\n */\r\n\r\n// Extends itself\r\n$.Class.extend('bizagi.rendering.tablet.slide.form', {}, {\r\n\r\n    /* CONSTRUCTOR\r\n     =====================================================*/\r\n    init: function (dataService, renderFactory, slideFormParams) {\r\n\r\n        var self = this;\r\n\r\n        // Define instance variables\r\n        self.dataService = dataService;\r\n        self.renderFactory = renderFactory;\r\n        self.slideFormParams = slideFormParams || {};\r\n\r\n        if (self.slideContainer && self.slideContainer.destroy) {\r\n            self.slideContainer.destroy();\r\n        }\r\n\r\n        // Create container\r\n        self.slideContainer = self.slideFormParams.navigation.createRenderContainer({title: self.slideFormParams.title});\r\n        self.configureViewHandlers();\r\n    },\r\n\r\n    /**\r\n     * Go back and destroy\r\n     * @returns {}\r\n     */\r\n    goBack: function () {\r\n        var self = this;\r\n        self.slideContainer.destroy();\r\n    },\r\n\r\n    /**\r\n     * Handlers de la vista de kendo\r\n     * @returns {}\r\n     */\r\n    configureViewHandlers: function () {\r\n        var self = this;\r\n    },\r\n\r\n    /**\r\n     * Render the form\r\n     * The params are the same that will be send to the ajax service\r\n     * @param {} params\r\n     * @returns {} Returns a deferred\r\n     */\r\n    render: function (params) {\r\n        var self = this;\r\n        // Fill content\r\n        self.renderSlideForm(params);\r\n    },\r\n\r\n    /* RENDERS slideForm\r\n     =====================================================*/\r\n    renderSlideForm: function (params) {\r\n\r\n        var self = this;\r\n\r\n        var defer = new $.Deferred();\r\n\r\n        // Load template and data\r\n        $.when(self.dataService.getFormData(params)).then(function (data) {\r\n            /*** SUCCESS FILTER **/\r\n            // Apply editable param\r\n            if (params.editable === false) {\r\n                data.form.properties.editable = false;\r\n            }\r\n\r\n            // Render dialog template\r\n            // Extends from container tblet base\r\n            var formClass = bizagi.rendering.tablet.form.extend({\r\n                submitForm: function () {\r\n                    if (self.form) {\r\n                        this.endLoading();\r\n                        // Perform validations\r\n                        if (self.form.validateForm()) {\r\n                            // Collect data\r\n                            var data = {};\r\n\r\n                            self.form.collectRenderValues(data);\r\n\r\n                            // Add page cache for this form\r\n                            data.idPageCache = self.form.getPageCache();\r\n\r\n                            // Call user callback\r\n                            if (self.slideFormParams.onSave) {\r\n                                $.when(self.slideFormParams.onSave(data))\r\n                                    .done(function (result) {\r\n                                        if (result === null || result === true || result.type === \"success\") {\r\n                                            defer.resolve();\r\n                                            self.goBack();\r\n                                        } else if (result.type === \"validationMessages\") {\r\n                                            // Add validation messages\r\n                                            self.form.addValidationMessage(result.messages);\r\n                                            // Update original value to use as reference to other futures changes in the dialogBox\r\n                                            $.each(data, function (key, value) {\r\n                                                var renders = self.form.getRenders(key);\r\n                                                $.each(renders, function (i, render) {\r\n                                                    render.updateOriginalValue();\r\n                                                });\r\n                                            });\r\n                                        } else if (result.type === \"error\") {\r\n                                            // Add error messages\r\n                                            self.form.addErrorMessage(result.message);\r\n                                        }\r\n                                    });\r\n\r\n                            } else {\r\n                                defer.resolve();\r\n                                self.goBack();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            var containerParams = $.extend({\r\n                type: \"form\",\r\n                data: data.form,\r\n                navigation: self.slideFormParams.navigation,\r\n                view_container: self.slideContainer\r\n            }, {\r\n                renderFactory: self.renderFactory,\r\n                dataService: self.renderFactory.dataService\r\n            });\r\n\r\n            // Stop creating forms like there's no tomorrow\r\n            if (!self.form) {\r\n                self.form = new formClass(containerParams);\r\n            }\r\n\r\n            // Return rendering promise\r\n            return self.form.render();\r\n        }).done(function (element) {\r\n            // Append form  in the view\r\n            self.slideContainer.element.html(element);\r\n\r\n            // Navigate on view\r\n            self.slideFormParams.navigation.navigate(self.slideContainer.id);\r\n\r\n            $(\".ui-bizagi-button-container div\", self.form.container).remove();\r\n\r\n            $(\".ui-bizagi-button-container\", self.form.container)\r\n                .append('<div ordinal=\"0\" id=\"formButton0\" class=\"action-button ui-bizagi-form-button\">Save</div>')\r\n                .delegate('div[ordinal=\"0\"]', \"click\", function () {\r\n                    self.form.submitForm();\r\n                });\r\n\r\n            $(\".ui-bizagi-button-container\", self.form.container)\r\n                .append('<div ordinal=\"1\" id=\"formButton1\" class=\"action-button ui-bizagi-form-button\">'\r\n                    + bizagi.localization.getResource(\"render-form-dialog-box-cancel\") + \"</div>\")\r\n                .delegate('div[ordinal=\"1\"]', \"click\", function () {\r\n                    self.slideFormParams.onCancel && self.slideFormParams.onCancel();\r\n                    self.goBack();\r\n                });\r\n\r\n            // Publish an event to check if the form has been set in the DOM\r\n            self.form.triggerHandler(\"ondomincluded\");\r\n\r\n            // Attach a refresh handler to recreate all the form\r\n            self.form.bind(\"refresh\", function () {\r\n                self.renderSlideForm(params);\r\n            });\r\n        }).fail(function (xhr, errorType, message) {\r\n            /*** FAIL FILTER **/\r\n            var errorTemplate = self.renderFactory.getCommonTemplate(\"form-error\");\r\n            var error_message = message.message || \"Error\";\r\n\r\n            $.fasttmpl(errorTemplate, {message: error_message}).appendTo(self.slideContainer.element);\r\n            // Navigate on view\r\n            self.slideFormParams.navigation.navigate(self.slideContainer.id);\r\n        });\r\n\r\n        return defer.promise();\r\n    }\r\n});","/**\r\n *   Name: Bizagi Tablet slide grid view implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   Serves as an slide view that will show hidden columns for a grid\r\n */\r\n\r\n// Extends itself\r\n$.Class.extend(\"bizagi.rendering.tablet.slide.grid\", {}, {\r\n\r\n    /* CONSTRUCTOR\r\n     =====================================================*/\r\n    init: function (dataService, renderFactory, slideFormParams) {\r\n\r\n        var self = this;\r\n\r\n        // Define instance variables\r\n        this.dataService = dataService;\r\n        this.renderFactory = renderFactory;\r\n        this.slideFormDeferred = new $.Deferred();\r\n        this.slideFormParams = slideFormParams || {};\r\n\r\n        // Create container\r\n        self.container = self.slideFormParams.navigation.createRenderContainer({title: self.slideFormParams.title});\r\n    },\r\n\r\n    /**\r\n     * Render the grid view form\r\n     * The params are the same that will be send to the ajax service\r\n     * @param {} params\r\n     * @returns {} Returns a deferred\r\n     */\r\n    render: function (params) {\r\n        var self = this;\r\n\r\n        // Fill content\r\n        self.renderSlideForm(self.slideForm, params);\r\n\r\n        self.slideFormDeferred.resolve();\r\n\r\n        // Return promise\r\n        return self.slideFormDeferred.promise();\r\n    },\r\n\r\n    /* RENDERS slideForm\r\n     =====================================================*/\r\n    renderSlideForm: function (slideForm, params) {\r\n\r\n        var self = this;\r\n        var data = self.transformData(params);\r\n\r\n        // Load template and data\r\n        self.form = self.renderFactory.getContainer({\r\n            type: \"form\",\r\n            data: data.form,\r\n            navigation: self.slideFormParams.navigation,\r\n            view_container: self.container\r\n        });\r\n\r\n        self.form.buttons = [$.extend(self.form.buttons[0] || {},\r\n            {\r\n                \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-save\"),\r\n                \"actions\": [\"submitData\", \"refresh\"],\r\n                \"submitData\": true,\r\n                \"refresh\": true,\r\n                \"ordinal\": 0,\r\n                \"action\": \"save\",\r\n                \"save\": true,\r\n                \"style\": \"\",\r\n                // This callback avoid to call the default processButton in the form\r\n                callback: function () {\r\n                    self.goBack();\r\n                    // Resolve deferred with form data\r\n                    var data = {};\r\n                    self.form.collectRenderValues(data);\r\n                    self.slideFormDeferred.resolve(data);\r\n                }\r\n            }),\r\n            $.extend(self.form.buttons[1] || {},\r\n                {\r\n                    \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-close\"),\r\n                    \"actions\": [\"submitData\", \"refresh\"],\r\n                    \"submitData\": true,\r\n                    \"refresh\": true,\r\n                    \"ordinal\": 1,\r\n                    \"action\": \"back\",\r\n                    \"save\": true,\r\n                    \"style\": \"\",\r\n                    //This callback avoid to call the default processButton in the form\r\n                    callback: function () {\r\n                        // Close slide\r\n                        self.goBack();\r\n                        self.slideFormDeferred.reject();\r\n                    }\r\n                })\r\n        ];\r\n\r\n        // Add save button if the form is editable\r\n        if (!self.slideFormParams.allowEdition) {\r\n            self.form.buttons.shift();\r\n        }\r\n\r\n        //self._renderButtons(self.form);\r\n\r\n        $.when(self.form.render())\r\n            .done(function (element) {\r\n\r\n                // Append form in the slide view\r\n                self.container.element.html(element);\r\n\r\n                self.slideFormParams.navigation.navigate(self.container.id);\r\n\r\n                self.container.setNavigationButtons(self.form);\r\n\r\n                // Remove default form buttons\r\n                $(\".ui-bizagi-button-container .action-button\", self.form.container).remove();\r\n\r\n                // Add Button\r\n                $(\".ui-bizagi-button-container\", self.form.container).append(self.buttonContainer);\r\n\r\n                // Publish an event to check if the form has been set in the DOM\r\n                self.form.triggerHandler(\"ondomincluded\");\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Transform data into a JSON standard rendering format\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    transformData: function (params) {\r\n        var self = this;\r\n        var row = params.row;\r\n        var columns = params.columns;\r\n\r\n        // Set xpath context\r\n        var xpathContext = params.xpathContext.length > 0\r\n            ? params.xpathContext + \".\" + params.xpath + \"[\" + params.row[0] + \"]\"\r\n            : params.xpath + \"[id=\" + params.row[0] + \"]\";\r\n\r\n        var data = {\r\n            type: \"form\",\r\n            form: {\r\n                elements: [],\r\n                pageCacheId: params.pageCacheId,\r\n                sessionId: params.sessionId,\r\n                properties: {\r\n                    xpathContext: xpathContext\r\n                },\r\n                actions: self.transformActions(params.xpath, params.actions),\r\n                validations: self.transformValidations(params.xpath, params.validations)\r\n            }\r\n        };\r\n\r\n        $.each(row, function (i, item) {\r\n\r\n            // Skip first data (key not need to be rendered)\r\n            if (i > 0) {\r\n                var element = {render: {properties: $.extend({}, columns[i - 1].properties)}};\r\n\r\n                // Hack properties\r\n                element.render.properties.type = self.mapRenderType(element.render.properties.type);\r\n                element.render.properties.displayType = 'both';\r\n                if (self.slideFormParams.allowEdition == false) element.render.properties.editable = false;\r\n                element.render.properties.value = self.mapValue(element.render.properties.type, item);\r\n                if (element.render.properties.recalculate) element.render.properties.data = null;\r\n\r\n                // Check columnVisible property\r\n                if (typeof (element.render.properties.columnVisible) != \"undefined\") {\r\n                    element.render.properties.visible = element.render.properties.columnVisible;\r\n                }\r\n\r\n                // Fix upload columns\r\n                if (element.render.properties.type == \"upload\") {\r\n                    element.render.properties.isColumn = true;\r\n                }\r\n\r\n                // Fix search columns\r\n                if (element.render.properties.type == \"search\") {\r\n                    var value = element.render.properties.value;\r\n                    if (value.length > 0) {\r\n                        value = [].concat(value[0]);\r\n                        element.render.properties.value = {\r\n                            id: value[0],\r\n                            label: value[1],\r\n                            additionallabel: value[2] || undefined\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                // Add element\r\n                data.form.elements.push(element);\r\n            }\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Map column renderType into normal render\r\n     * @param {} type\r\n     * @returns {}\r\n     */\r\n    mapRenderType: function (type) {\r\n        type = type.replaceAll(\"tablet\", \"\").replaceAll(\"column\", \"\");\r\n\r\n        //some exceptions\r\n        if (type === \"FormLink\") {\r\n            return \"formLink\";\r\n        }\r\n\r\n        type = type.toLowerCase();\r\n        return type;\r\n    },\r\n\r\n    /**\r\n     * Method to traslate grid values into render values\r\n     * @param {} type\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    mapValue: function (type, value) {\r\n        if ([\"combo\", \"radio\", \"list\"].includes(type)) {\r\n            if (value && value.length > 0) {\r\n\r\n                // Transform the value property\r\n                return [{\r\n                    id: value[0][0],\r\n                    value: value[0].length > 2 ? $.grep(value[0], function (item, i) {\r\n                        return i !== 0;\r\n                    }) : value[0][1]\r\n                }];\r\n\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        // Else: Don't do anything\r\n        return value;\r\n    },\r\n\r\n    /**\r\n     * Parse form actions into just grid form actions\r\n     * @param {} xpath\r\n     * @param {} actions\r\n     * @returns {}\r\n     */\r\n    transformActions: function (xpath, actions) {\r\n        var self = this;\r\n        var gridActions = [];\r\n\r\n        if (bizagi.util.isEmpty(actions)) return gridActions;\r\n\r\n        $.each(actions, function (i, action) {\r\n            var bDependencyFound = false;\r\n            for (var i = 0; i < action.dependencies.length; i++) {\r\n                if (action.dependencies[i].indexOf(xpath) != -1) {\r\n                    bDependencyFound = true;\r\n                }\r\n            }\r\n\r\n            if (bDependencyFound) {\r\n                var newAction = JSON.parse(JSON.encode(action));\r\n\r\n                // Replace dependencies\r\n                for (var i = 0; i < newAction.dependencies.length; i++) {\r\n                    newAction.dependencies[i] = newAction.dependencies[i].replaceAll(xpath + \"[].\", \"\");\r\n                }\r\n\r\n                // Replace conditions\r\n                self.transformConditions(xpath, newAction.conditions);\r\n\r\n                // Replace commands\r\n                self.transformCommands(xpath, newAction.commands);\r\n                self.transformCommands(xpath, newAction.elseCommands);\r\n\r\n                // Add to grid actions\r\n                gridActions.push(newAction);\r\n            }\r\n        });\r\n\r\n        return gridActions;\r\n    },\r\n\r\n    /*\r\n     *   Parse form validations into just grid form validations\r\n     */\r\n    transformValidations: function (xpath, validations) {\r\n        var self = this;\r\n        var gridValidations = [];\r\n\r\n        if (bizagi.util.isEmpty(validations)) return gridValidations;\r\n\r\n        $.each(validations, function (i, validation) {\r\n            var newValidation = JSON.parse(JSON.encode(validation));\r\n\r\n            // Replace conditions\r\n            self.transformConditions(xpath, newValidation.conditions);\r\n\r\n            // Add to grid actions\r\n            gridValidations.push(newValidation);\r\n\r\n        });\r\n\r\n        return gridValidations;\r\n    },\r\n\r\n    /**\r\n     * Parse a single condition or a complex condition in order to prepare a grid action/validation\r\n     * @param {} xpath\r\n     * @param {} condition\r\n     * @returns {}\r\n     */\r\n    transformConditions: function (xpath, condition) {\r\n        var self = this;\r\n\r\n        if (condition.expressions) {\r\n            for (i in condition.expressions) {\r\n                self.transformConditions(xpath, condition.expressions[i]);\r\n            }\r\n\r\n        } else if (condition.simple) {\r\n            self.transformConditions(xpath, condition.simple);\r\n\r\n        } else if (condition.complex) {\r\n            self.transformConditions(xpath, condition.complex);\r\n\r\n        } else {\r\n            if (condition.xpath) {\r\n                condition.xpath = condition.xpath.replaceAll(xpath + \"[].\", \"\");\r\n                if (condition.argumentType == 'xpath') {\r\n                    condition.argument = condition.argument.replaceAll(xpath + \"[].\", \"\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Parse a command action to prepare a grid action\r\n     * @param {} xpath\r\n     * @param {} commands\r\n     * @returns {}\r\n     */\r\n    transformCommands: function (xpath, commands) {\r\n        var self = this;\r\n        var refreshIndex = null;\r\n        if (commands == null || commands.length === 0) return;\r\n\r\n        for (var i = 0; i < commands.length; i++) {\r\n            if (commands[i].command === \"refresh\") {\r\n                refreshIndex = i;\r\n            } else {\r\n                if (commands[i].xpath) {\r\n                    commands[i].xpath = commands[i].xpath.replaceAll(xpath + \"[].\", \"\");\r\n                }\r\n                if (commands[i].argumentType === 'xpath') {\r\n                    commands[i].argument = commands[i].argument.replaceAll(xpath + \"[].\", \"\");\r\n                }\r\n            }\r\n        }\r\n\r\n        if (refreshIndex != null) {\r\n            commands.splice(i, 1);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Go back and destroy\r\n     * @returns {}\r\n     */\r\n    goBack: function () {\r\n        var self = this;\r\n        self.container.destroy();\r\n    },\r\n\r\n    /**\r\n     * Process render buttons\r\n     * @param {} options\r\n     * @returns {}\r\n     */\r\n    _renderButtons: function (form) {\r\n        var self = this;\r\n        var content = $(\"<div class='bz-slide-button-container'></div>\");\r\n\r\n        $.each(form.buttons, function (ui, value) {\r\n            var button = $(\"<div class='action-button'>\" + value.caption + \"</div>\").click(\r\n                value.callback\r\n            ).appendTo(content);\r\n        });\r\n\r\n        self.buttonContainer = content;\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Tablet slide form implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   Serves as an slide form that can render a inner form\r\n */\r\n\r\n// Extends itself\r\n$.Class.extend('bizagi.rendering.tablet.slide.adhocForm', {}, {\r\n\r\n   /* CONSTRUCTOR\r\n     =====================================================*/\r\n     init: function (renderFactory, slideFormParams) {\r\n\r\n        var self = this;\r\n\r\n        // Define instance variables\r\n        this.renderFactory = renderFactory;\r\n        this.slideFormDeferred = new $.Deferred();\r\n        this.slideFormParams = slideFormParams || {};\r\n\r\n        // Create container\r\n        self.container = self.slideFormParams.navigation.createRenderContainer({title: self.slideFormParams.title});\r\n    },\r\n\r\n    /**\r\n     * Render the grid view form\r\n     * The params are the same that will be send to the ajax service\r\n     * @param {} params\r\n     * @returns {} Returns a deferred\r\n     */\r\n    render: function (params) {\r\n        var self = this;\r\n\r\n        // Fill content\r\n        self.renderSlideForm(params);\r\n        // Return promise\r\n        return self.slideFormDeferred.promise();\r\n    },\r\n\r\n    /* RENDERS slideForm\r\n     =====================================================*/\r\n    renderSlideForm: function (params) {\r\n\r\n        var self = this;\r\n        var data = self.transformData(params);\r\n\r\n        // Load template and data\r\n        self.form = self.renderFactory.getContainer({\r\n            type: \"form\",\r\n            data: data.form,\r\n            navigation: this.slideFormParams.navigation\r\n        });\r\n\r\n        self.form.buttons = [$.extend(self.form.buttons[0] || {},\r\n            {\r\n                \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-save\"),\r\n                \"actions\": [\"submitData\", \"refresh\"],\r\n                \"submitData\": true,\r\n                \"refresh\": true,\r\n                \"ordinal\": 0,\r\n                \"action\": \"save\",\r\n                \"save\": true,\r\n                \"style\": \"\",\r\n                // This callback avoid to call the default processButton in the form\r\n                callback: function () {\r\n                    if(self.form.validateForm()) {\r\n                        self.goBack();\r\n                        // Resolve deferred with form data\r\n                        var data = {};\r\n                        self.form.collectRenderValues(data);\r\n                        self.slideFormDeferred.resolve(data);\r\n                    }\r\n                }\r\n            }),\r\n            $.extend(self.form.buttons[1] || {},\r\n                {\r\n                    \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-close\"),\r\n                    \"actions\": [\"submitData\", \"refresh\"],\r\n                    \"submitData\": true,\r\n                    \"refresh\": true,\r\n                    \"ordinal\": 1,\r\n                    \"action\": \"back\",\r\n                    \"save\": true,\r\n                    \"style\": \"\",\r\n                    //This callback avoid to call the default processButton in the form\r\n                    callback: function () {\r\n                        // Close slide\r\n                        self.goBack();\r\n                        self.slideFormDeferred.reject();\r\n                    }\r\n                })\r\n        ];\r\n\r\n        // Add save button if the form is editable\r\n        if (!self.slideFormParams.allowEdition) {\r\n            self.form.buttons.shift();\r\n        }\r\n\r\n        //self._renderButtons(self.form);\r\n\r\n        $.when(self.form.render())\r\n            .done(function (element) {\r\n\r\n                // Append form in the slide view\r\n                self.container.element.html(element);\r\n\r\n                self.slideFormParams.navigation.navigate(self.container.id);\r\n\r\n                self.container.setNavigationButtons(self.form);\r\n\r\n                // Remove default form buttons\r\n                $(\".ui-bizagi-button-container .action-button\", self.form.container).remove();\r\n\r\n                // Add Button\r\n                $(\".ui-bizagi-button-container\", self.form.container).append(self.buttonContainer);\r\n\r\n                // Publish an event to check if the form has been set in the DOM\r\n                self.form.triggerHandler(\"ondomincluded\");\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Transform data into a JSON standard rendering format\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    transformData: function (params) {\r\n        var self = this;\r\n        var row = params.row;\r\n        var columns = params.columns;\r\n        var isAddForm = false;\r\n\r\n        // Set xpath context\r\n        var xpathContext = params.xpathContext.length > 0\r\n            ? params.xpathContext + \".\" + params.xpath + \"[\" + params.row[0] + \"]\"\r\n            : params.xpath + \"[id=\" + params.row[0] + \"]\";\r\n\r\n        var data = {\r\n            type: \"form\",\r\n            form: {\r\n                elements: [],\r\n                pageCacheId: params.pageCacheId,\r\n                sessionId: params.sessionId,\r\n                properties: {\r\n                    xpathContext: xpathContext\r\n                },\r\n                actions: self.transformActions(params.xpath, params.actions),\r\n                validations: self.transformValidations(params.xpath, params.validations)\r\n            }\r\n        };\r\n\r\n\r\n        if(row[0] == \"mock_id\") {\r\n            isAddForm = true;\r\n        }\r\n\r\n        $.each(row, function (i, item) {\r\n\r\n            // Skip first data (key not need to be rendered)\r\n            if (i > 0) {\r\n                var element = {render: {properties: $.extend({}, columns[i - 1].properties)}};\r\n\r\n                // Hack properties\r\n                element.render.properties.type = self.mapRenderType(element.render.properties.type);\r\n                element.render.properties.displayType = 'both';\r\n                if (self.slideFormParams.allowEdition == false) element.render.properties.editable = false;\r\n                element.render.properties.value = self.mapValue(element.render.properties.type, item);\r\n                if (element.render.properties.recalculate) element.render.properties.data = null;\r\n\r\n                // Check columnVisible property\r\n                if (typeof (element.render.properties.columnVisible) != \"undefined\") {\r\n                    element.render.properties.visible = element.render.properties.columnVisible;\r\n                }\r\n\r\n                // Fix upload columns\r\n                if (element.render.properties.type == \"upload\") {\r\n                    element.render.properties.isColumn = true;\r\n                }\r\n                // Fix upload columns\r\n                if (element.render.properties.type == \"readonly\") {\r\n                    element.render.properties.type = \"text\"\r\n                    element.render.properties.editable = false;\r\n                }\r\n\r\n\r\n                // Fix search columns\r\n                if (element.render.properties.type == \"search\") {\r\n                    var value = element.render.properties.value;\r\n                    if (value == null) {\r\n                        element.render.properties.value = {};\r\n                    } else if (value.length > 0) {\r\n                        value = [].concat(value[0]);\r\n                        element.render.properties.value = {\r\n                            id: value[0],\r\n                            label: value[1],\r\n                            additionallabel: value[2] || undefined\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (isAddForm && [\"document\", \"formLink\", \"upload\", \"uploadecm\", \"image\", \"search\"].includes(element.render.properties.type)) {\r\n                    element.render.properties.editable = false;\r\n                }\r\n\r\n\r\n                // Add element\r\n                data.form.elements.push(element);\r\n            }\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Map column renderType into normal render\r\n     * @param {} type\r\n     * @returns {}\r\n     */\r\n    mapRenderType: function (type) {\r\n        type = type.replaceAll(\"tablet\", \"\").replaceAll(\"column\", \"\");\r\n\r\n        //some exceptions\r\n        if (type === \"FormLink\") {\r\n            return \"formLink\";\r\n        }\r\n\r\n        type = type.toLowerCase();\r\n        return type;\r\n    },\r\n\r\n    /**\r\n     * Method to traslate grid values into render values\r\n     * @param {} type\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    mapValue: function (type, value) {\r\n        if ([\"combo\", \"radio\", \"list\"].includes(type)) {\r\n            if (value && value.length > 0) {\r\n\r\n                // Transform the value property\r\n                return [{\r\n                    id: value[0][0],\r\n                    value: value[0].length > 2 ? $.grep(value[0], function (item, i) {\r\n                        return i !== 0;\r\n                    }) : value[0][1]\r\n                }];\r\n\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        // Else: Don't do anything\r\n        return value;\r\n    },\r\n\r\n    /**\r\n     * Parse form actions into just grid form actions\r\n     * @param {} xpath\r\n     * @param {} actions\r\n     * @returns {}\r\n     */\r\n    transformActions: function (xpath, actions) {\r\n        var self = this;\r\n        var gridActions = [];\r\n\r\n        if (bizagi.util.isEmpty(actions)) return gridActions;\r\n\r\n        $.each(actions, function (i, action) {\r\n            var bDependencyFound = false;\r\n            for (var i = 0; i < action.dependencies.length; i++) {\r\n                if (action.dependencies[i].indexOf(xpath) != -1) {\r\n                    bDependencyFound = true;\r\n                }\r\n            }\r\n\r\n            if (bDependencyFound) {\r\n                var newAction = JSON.parse(JSON.encode(action));\r\n\r\n                // Replace dependencies\r\n                for (var i = 0; i < newAction.dependencies.length; i++) {\r\n                    newAction.dependencies[i] = newAction.dependencies[i].replaceAll(xpath + \"[].\", \"\");\r\n                }\r\n\r\n                // Replace conditions\r\n                self.transformConditions(xpath, newAction.conditions);\r\n\r\n                // Replace commands\r\n                self.transformCommands(xpath, newAction.commands);\r\n                self.transformCommands(xpath, newAction.elseCommands);\r\n\r\n                // Add to grid actions\r\n                gridActions.push(newAction);\r\n            }\r\n        });\r\n\r\n        return gridActions;\r\n    },\r\n\r\n    /*\r\n     *   Parse form validations into just grid form validations\r\n     */\r\n    transformValidations: function (xpath, validations) {\r\n        var self = this;\r\n        var gridValidations = [];\r\n\r\n        if (bizagi.util.isEmpty(validations)) return gridValidations;\r\n\r\n        $.each(validations, function (i, validation) {\r\n            var newValidation = JSON.parse(JSON.encode(validation));\r\n\r\n            // Replace conditions\r\n            self.transformConditions(xpath, newValidation.conditions);\r\n\r\n            // Add to grid actions\r\n            gridValidations.push(newValidation);\r\n\r\n        });\r\n\r\n        return gridValidations;\r\n    },\r\n\r\n    /**\r\n     * Parse a single condition or a complex condition in order to prepare a grid action/validation\r\n     * @param {} xpath\r\n     * @param {} condition\r\n     * @returns {}\r\n     */\r\n    transformConditions: function (xpath, condition) {\r\n        var self = this;\r\n\r\n        if (condition.expressions) {\r\n            for (i in condition.expressions) {\r\n                self.transformConditions(xpath, condition.expressions[i]);\r\n            }\r\n\r\n        } else if (condition.simple) {\r\n            self.transformConditions(xpath, condition.simple);\r\n\r\n        } else if (condition.complex) {\r\n            self.transformConditions(xpath, condition.complex);\r\n\r\n        } else {\r\n            if (condition.xpath) {\r\n                condition.xpath = condition.xpath.replaceAll(xpath + \"[].\", \"\");\r\n                if (condition.argumentType == 'xpath') {\r\n                    condition.argument = condition.argument.replaceAll(xpath + \"[].\", \"\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Parse a command action to prepare a grid action\r\n     * @param {} xpath\r\n     * @param {} commands\r\n     * @returns {}\r\n     */\r\n    transformCommands: function (xpath, commands) {\r\n        var self = this;\r\n        var refreshIndex = null;\r\n        if (commands == null || commands.length === 0) return;\r\n\r\n        for (var i = 0; i < commands.length; i++) {\r\n            if (commands[i].command === \"refresh\") {\r\n                refreshIndex = i;\r\n            } else {\r\n                if (commands[i].xpath) {\r\n                    commands[i].xpath = commands[i].xpath.replaceAll(xpath + \"[].\", \"\");\r\n                }\r\n                if (commands[i].argumentType === 'xpath') {\r\n                    commands[i].argument = commands[i].argument.replaceAll(xpath + \"[].\", \"\");\r\n                }\r\n            }\r\n        }\r\n\r\n        if (refreshIndex != null) {\r\n            commands.splice(i, 1);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Go back and destroy\r\n     * @returns {}\r\n     */\r\n    goBack: function () {\r\n        var self = this;\r\n        self.container.destroy();\r\n    },\r\n\r\n    /**\r\n     * Process render buttons\r\n     * @param {} options\r\n     * @returns {}\r\n     */\r\n    _renderButtons: function (form) {\r\n        var self = this;\r\n        var content = $(\"<div class='bz-slide-button-container'></div>\");\r\n\r\n        $.each(form.buttons, function (ui, value) {\r\n            var button = $(\"<div class='action-button'>\" + value.caption + \"</div>\").click(\r\n                value.callback\r\n            ).appendTo(content);\r\n        });\r\n\r\n        self.buttonContainer = content;\r\n    }\r\n});","/**\r\n *   Name: Bizagi Tablet Search Slide view Implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will shows a sliding search form  order to edit\r\n */\r\n\r\n// Extends itself\r\n$.Class.extend(\"bizagi.rendering.tablet.slide.searchForm\", {}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (dataService, renderFactory, searchForms, searchParams, slideParams) {\r\n        var self = this;\r\n\r\n        self.dataService = dataService;\r\n        self.renderFactory = renderFactory;\r\n        self.searchForms = searchForms;\r\n        self.searchParams = searchParams;\r\n        self.slideParams = slideParams;\r\n        self.slideDeferred = new $.Deferred();\r\n        self.extraButtons = (slideParams.hasOwnProperty(\"buttons\")) ? slideParams.buttons : false;\r\n\r\n        // Create container\r\n        self.container = self.slideParams.navigation.createRenderContainer({title: self.slideParams.title});\r\n\r\n        self.processButtons()\r\n            .done(function (data) {\r\n                self.slideDeferred.resolve(data);\r\n            }).fail(function () {\r\n            self.slideDeferred.reject();\r\n        });\r\n\r\n        self.configureViewHandlers();\r\n    },\r\n\r\n    /**\r\n     * Render the form\r\n     * The params are the same that will be send to the ajax service\r\n     * @param {} params\r\n     * @returns {} Returns a deferred\r\n     */\r\n    render: function (params) {\r\n        this.properties = params;\r\n\r\n        //Render the search form\r\n        this.renderSearchDialog(params);\r\n\r\n        // Return promise\r\n        return this.slideDeferred.promise();\r\n    },\r\n\r\n    /**\r\n     * Render the search form\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    renderSearchDialog: function (params) {\r\n        var self = this;\r\n\r\n        bizagi.loading.start();\r\n\r\n        // Creates a dialog\r\n        $.when(self.getSearchContainerData(params)).then(function (data) {\r\n            if (data.form.properties) {\r\n                data.form.properties.orientation = self.searchParams.orientation || \"ltr\";\r\n            }\r\n\r\n            // Render dialog form\r\n            var form = self.renderFactory.getContainer({\r\n                type: \"form\",\r\n                data: data.form,\r\n                navigation: self.slideParams.navigation,\r\n                view_container: self.container\r\n            });\r\n\r\n            form.buttons = [\r\n                {\r\n                    ordinal: 1,\r\n                    action: \"search\",\r\n                    caption: bizagi.localization.getResource(\"render-form-dialog-box-search\"),\r\n                    callback: function () {\r\n                        self.currentSearchForm.performSearch(self.searchParams);\r\n                    },\r\n                },\r\n                {\r\n                    ordinal: 2,\r\n                    action: \"cancel\",\r\n                    caption: \"cancel\",\r\n                    callback: function () {\r\n                        // Close slide\r\n                        self.goBack();\r\n                    },\r\n                },\r\n                {\r\n                    ordinal: 3,\r\n                    action: \"add\",\r\n                    caption: bizagi.localization.getResource(\"render-form-dialog-box-add\"),\r\n                    callback: function () {\r\n                        var params = {\r\n                            idCase: self.slideParams.idCase,\r\n                            idRender: self.properties.idRender,\r\n                            displayName: self.properties.displayName,\r\n                            idPageCache: self.properties.idPageCache\r\n                        };\r\n\r\n                        self.renderAddForm(params);\r\n                    },\r\n                },\r\n            ];\r\n\r\n            if (!self.slideParams.allowNew) {\r\n                form.buttons.pop();\r\n            }\r\n\r\n            // Save form reference\r\n            self.form = form;\r\n\r\n            // Return rendering promise\r\n            return form.render();\r\n        }).done(function (element) {\r\n            // Append form in the slide view\r\n            self.container.element.html(element);\r\n\r\n            self.slideParams.navigation.navigate(self.container.id);\r\n\r\n            // Add Button\r\n            $(\".ui-bizagi-button-container\", self.form.container).append(self.buttonContainer);\r\n\r\n            // Hide title of html content\r\n            self.searchResultContainer = $(\".bz-container__search-results\", element);\r\n            self.searchResultContainer.hide();\r\n\r\n            // Publish an event to check if the form has been set in the DOM\r\n            self.form.triggerHandler(\"ondomincluded\");\r\n\r\n            // Set currents search form\r\n            self.currentSearchForm = self.form.firstChild();\r\n            self.currentSearchForm.triggerHandler(\"ondomincluded\");\r\n\r\n            self.currentSearchForm.bind(\"instancerefresh\", function () {\r\n                // Show search results container\r\n                self.searchResultContainer.show();\r\n            });\r\n\r\n            self.form.bind(\"refresh\", function (_, refreshParams) {\r\n                refreshParams.scrollTop = self.form.container.parent().scrollTop();\r\n                refreshParams = $.extend({\r\n                    focus: focus,\r\n                    selectedTabs: self.form.getSelectedTabs(),\r\n                    isRefresh: true,\r\n                    contextType: self.properties.contextType || \"\",\r\n                    navigation: self.searchFormParams.navigation,\r\n                    view_container: self.container\r\n                }, refreshParams);\r\n\r\n                return self.renderSearchDialog(refreshParams);\r\n            });\r\n\r\n            // Add row selected handlers to resolve the deferred\r\n            self.currentSearchForm.bind(\"instanceSelected\", function (ev, ui) {\r\n                // Close slide\r\n                self.goBack();\r\n\r\n                self.slideBoxDeferred.resolve({id: ui.id, label: \"\"});\r\n            });\r\n            // if is any modal view displayed, hide it to allow this search form been displayed\r\n            self.handleSearchFormZindex(\"show\");\r\n\r\n            self.containerSearchCriteria = self.currentSearchForm.container.find(\".bz-container__search-criteria\");\r\n        }).fail(function (error_obj) {\r\n            if (self.hasSessionFormException(error_obj)) {\r\n                self.goToStartPage(error_obj);\r\n            } else {\r\n                var errorTemplate = self.renderFactory.getCommonTemplate(\"form-error\");\r\n                var message = error_obj && error_obj.message ? error_obj.message : error_obj;\r\n\r\n                $($.fasttmpl(errorTemplate, {message: message}))\r\n                    .appendTo(self.container.element);\r\n\r\n                self.slideParams.navigation.navigate(self.container.id);\r\n            }\r\n        }).always(function () {\r\n            bizagi.loading.stop();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Get the addform and show it\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    renderAddForm: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        var properties = self.properties;\r\n\r\n        if (typeof self.addContainer === \"undefined\") {\r\n            self.addContainer =\r\n                self.slideParams.navigation.createRenderContainer({\r\n                    title: bizagi.localization.getResource(\"render-dialog-entity\")\r\n                });\r\n        }\r\n\r\n        var isRefresh = params.isRefresh || false;\r\n\r\n        var getFormParams = {\r\n            idPageCache: params.idPageCache,\r\n            guidEntity: properties.entity,\r\n            contextType: \"entity\"\r\n        };\r\n\r\n        if (isRefresh) {\r\n            getFormParams.isRefresh = true;\r\n            getFormParams.idStartScope = params.idStartScope;\r\n        } else {\r\n            getFormParams.idRender = properties.idRender;\r\n            getFormParams.requestedForm = \"addForm\";\r\n        }\r\n\r\n        bizagi.loading.start();\r\n\r\n        //Get the addform\r\n        $.when(self.dataService.getFormData(getFormParams)).then(function (data) {\r\n            if (params.editable === false) {\r\n                data.form.properties.editable = false;\r\n            }\r\n\r\n            if (data.form.properties) {\r\n                data.form.properties.orientation = self.searchParams.orientation || \"ltr\";\r\n            }\r\n\r\n            data.form.contextType = \"entity\";\r\n\r\n            var form = self.renderFactory.getContainer($.extend({}, self.addFormParams, {\r\n                type: \"form\",\r\n                data: data.form,\r\n                focus: params.focus || false,\r\n                selectedTabs: params.selectedTabs,\r\n                isRefresh: isRefresh,\r\n                requestedForm: params.requestedForm,\r\n                navigation: self.slideParams.navigation,\r\n                view_container: self.addContainer\r\n\r\n            }));\r\n\r\n            form.buttons = [\r\n                $.extend(\r\n                    self.form.buttons[0] || {},\r\n                    {\r\n                        \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-save\"),\r\n                        \"actions\": [\"submitData\", \"refresh\"],\r\n                        \"submitData\": true,\r\n                        \"refresh\": true,\r\n                        \"ordinal\": 0,\r\n                        \"action\": \"save\",\r\n                        \"save\": true,\r\n                        \"style\": \"\",\r\n                    },\r\n                    {\r\n                        //This callback avoid to call the default processButton in the form\r\n                        callback: function () {\r\n                            // When the data is saved then\r\n                            self.saveDataAddForm(form).done(function () {\r\n\r\n                                self.addContainer.destroy();\r\n                                delete self.addContainer;\r\n\r\n                                // Force a search after a new item is created!\r\n                                self.currentSearchForm.performSearch(self.searchParams);\r\n                            });\r\n                        }\r\n                    }),\r\n                $.extend(\r\n                    self.form.buttons[1] || {},\r\n                    {\r\n                        \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-close\"),\r\n                        \"actions\": [\"submitData\", \"refresh\"],\r\n                        \"submitData\": true,\r\n                        \"refresh\": true,\r\n                        \"ordinal\": 1,\r\n                        \"action\": \"back\",\r\n                        \"save\": true,\r\n                        \"style\": \"\"\r\n                    },\r\n                    {\r\n                        // This callback avoid to call the default processButton in the form\r\n                        callback: function () {\r\n                            self.addContainer.destroy();\r\n                            delete self.addContainer;\r\n                        }\r\n                    }),\r\n            ];\r\n\r\n            $.extend(form, {\r\n                processButtons: function () {\r\n                    //not send information set in memory and save\r\n\r\n                    $.each(form.buttons, function (index, element) {\r\n                        switch (element[\"ordinal\"]) {\r\n                            case 1:\r\n                                // Next button will behave as a cancel button\r\n                                $(form.getButtons()[index]).click(function () {\r\n                                    self.addContainer.destroy();\r\n                                    delete self.addContainer;\r\n                                });\r\n\r\n                                form.getButtons()[index].innerHTML = bizagi.localization.getResource(\"render-form-dialog-box-close\");\r\n                                form.buttons[index].caption = bizagi.localization.getResource(\"render-form-dialog-box-close\");\r\n                                form.buttons[index].action = \"back\";\r\n\r\n                                break;\r\n\r\n                            default:\r\n                                $(form.getButtons()[index]).click(function () {\r\n                                    self.saveDataAddForm(form);\r\n\r\n                                    self.addContainer.destroy();\r\n                                    delete self.addContainer;\r\n                                });\r\n                                break;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            (Object.keys(form.children) || [])\r\n                .map(function (indicator) {\r\n                    form.children[indicator].params = $.extend({}, form.children[indicator].params, self.addFormParams);\r\n                });\r\n\r\n            return $.when(form.render()).done(function (element) {\r\n                // Set currents search form\r\n                self.currentAddForm = form.firstChild();\r\n                self.addContainer.element.html(element);\r\n\r\n                if (!isRefresh) {\r\n                    self.slideParams.navigation.navigate(self.addContainer.id, \"overlay:up\");\r\n                }\r\n\r\n                self.addContainer.setNavigationButtons(form);\r\n\r\n                form.triggerHandler(\"ondomincluded\");\r\n\r\n                // if is any modal view displayed, hide it to allow this search form been displayed\r\n                self.handleSearchFormZindex(\"show\");\r\n\r\n                form.bind(\"refresh\", function (_, refreshParams) {\r\n                    refreshParams.scrollTop = self.form.container.parent().scrollTop();\r\n                    refreshParams = $.extend({\r\n                        focus: focus,\r\n                        selectedTabs: self.form.getSelectedTabs(),\r\n                        isRefresh: true,\r\n                        contextType: self.properties.contextType || \"\",\r\n                        navigation: self.slideParams.navigation,\r\n                        view_container: self.addContainer\r\n                    }, refreshParams);\r\n\r\n                    return self.renderAddForm(refreshParams);\r\n                });\r\n            });\r\n        }).fail(function (error) {\r\n            var error_obj = bizagi.util.getErrorFormatted(error);\r\n\r\n            if (self.hasSessionFormException(error_obj)) {\r\n                self.goToStartPage(error_obj);\r\n            } else {\r\n                self.addContainer.destroy();\r\n                delete self.addContainer;\r\n            }\r\n        }).always(function () {\r\n            bizagi.loading.stop();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Save data to add form\r\n     * @param {} form\r\n     * @returns {}\r\n     */\r\n    saveDataAddForm: function (form) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n        if (form.validateForm()) {\r\n            var data = {};\r\n            $.forceCollectData = true;\r\n\r\n            form.collectRenderValues(data);\r\n            data.idPageCache = form.idPageCache;\r\n\r\n            var params = {\r\n                action: \"SAVE\",\r\n                data: data,\r\n                idPageCache: data.idPageCache,\r\n                guidEntity: form.properties.entity,\r\n                contexttype: \"entity\",\r\n            };\r\n\r\n            // Check if the add form has data\r\n            var formData = {};\r\n\r\n            form.collectRenderValuesForSubmit(formData);\r\n\r\n            // Turn off flag\r\n            $.forceCollectData = false;\r\n\r\n            if (!bizagi.util.isMapEmpty(formData)) {\r\n\r\n                bizagi.loading.start();\r\n\r\n                $.when(self.dataService.submitData(params)).done(function () {\r\n                    function dataHasXpath(xpath) {\r\n                        var render = self.currentSearchForm.getRender(xpath);\r\n                        if (typeof render === \"object\" && render !== null)\r\n                            return {\"found\": true, \"obj\": render};\r\n                        return {\"found\": false, \"obj\": {}};\r\n                    }\r\n\r\n                    for (var i in formData) {\r\n                        var mapping = dataHasXpath(i);\r\n                        if (mapping.found) {\r\n                            mapping.obj.setValue(formData[i]);\r\n                            self.setDisplayValueToControl(mapping.obj, form, i, formData);\r\n                        }\r\n                    }\r\n\r\n                    defer.resolve();\r\n                }).fail(function (error) {\r\n                    var error_obj = bizagi.util.getErrorFormatted(error);\r\n\r\n                    if (self.hasSessionFormException(error_obj)) {\r\n                        self.goToStartPage(error_obj);\r\n                    } else {\r\n                        var message = error_obj.message || bizagi.localization.getResource(\"workportal-general-error\");\r\n\r\n                        form.addValidationMessage(message);\r\n                    }\r\n\r\n                    defer.reject();\r\n                }).always(function () {\r\n                    bizagi.loading.stop();\r\n                });\r\n            } else {\r\n                // Form has not data\r\n                bizagi.showMessageBox(bizagi.localization.getResource(\"render-search-advanced-no-filters\"));\r\n                defer.reject();\r\n            }\r\n        } else {\r\n            defer.reject();\r\n        }\r\n        return defer;\r\n    },\r\n\r\n    /***\r\n     * Set display value by control type, when add new record\r\n     * @param renderControlSearchForm\r\n     * @param addForm\r\n     * @param xpath\r\n     * @param formData\r\n     */\r\n    setDisplayValueToControl: function (renderControlSearchForm, addForm, xpath, formData) {\r\n        if (renderControlSearchForm.properties.type === \"searchSuggest\") {\r\n            renderControlSearchForm.setDisplayValue(addForm.getRender(xpath).getDisplayValue());\r\n        } else {\r\n            renderControlSearchForm.setDisplayValue(formData[xpath]);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Shows the dialog box in the browser\r\n     * @returns {} Returns a promise that the dialog will be closed\r\n     */\r\n    processButtons: function () {\r\n        var self = this;\r\n        self.slideBoxDeferred = new $.Deferred();\r\n\r\n        // Create buttons object\r\n        var slideOptions = {buttons: []};\r\n\r\n        // Add search button by default\r\n        slideOptions.buttons.push({\r\n            text: bizagi.localization.getResource(\"render-form-dialog-box-search\"),\r\n            click: function () {\r\n                self.currentSearchForm.performSearch(self.searchParams);\r\n            }\r\n        });\r\n\r\n        if (self.slideParams.allowNew) {\r\n            slideOptions.buttons.push({\r\n                text: bizagi.localization.getResource(\"render-form-dialog-box-add\"),\r\n                click: function () {\r\n                    var params = {\r\n                        \"idCase\": self.slideParams.idCase,\r\n                        \"idRender\": self.properties.idRender,\r\n                        \"displayName\": self.properties.displayName,\r\n                        \"idPageCache\": self.properties.idPageCache\r\n                    };\r\n\r\n                    self.renderAddForm(params);\r\n                }\r\n            });\r\n        }\r\n\r\n        slideOptions.buttons.push({\r\n            text: bizagi.localization.getResource(\"render-form-dialog-box-cancel\"),\r\n            click: function () {\r\n                // Close slide\r\n                self.goBack();\r\n            }\r\n        });\r\n\r\n        // Apply slide plugin\r\n        slideOptions = $.extend(slideOptions, self.slideParams);\r\n        self._renderButtons(slideOptions);\r\n\r\n        // Return promise\r\n        return self.slideBoxDeferred.promise();\r\n    },\r\n\r\n    /**\r\n     * Creates the search dialog sub-containers\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    getSearchContainerData: function (params) {\r\n        var self = this;\r\n        var deferred = new $.Deferred();\r\n        var data = {\r\n            form: {\r\n                properties: {},\r\n                elements: []\r\n            }\r\n        };\r\n\r\n        var container = data.form;\r\n        var searchFormToLoad = self.searchForms[0];\r\n\r\n        // When there are more than one search form, render a tab container\r\n        if (self.searchForms.length > 1) {\r\n\r\n            var tabContainer = {\r\n                properties: {\r\n                    type: \"tab\"\r\n                },\r\n                elements: []\r\n            };\r\n\r\n            var otherElements = [];\r\n\r\n            $.each(self.searchForms, function (i, searchForm) {\r\n                var isDefault = searchForm[\"default\"] || false;\r\n\r\n                // Create tab item\r\n                var tab = {\r\n                    properties: {\r\n                        id: i,\r\n                        type: \"tabItem\",\r\n                        displayName: searchForm.caption\r\n                    },\r\n                    elements: []\r\n                };\r\n\r\n                // Append children\r\n                if (isDefault) {\r\n\r\n                    tabContainer.elements.push({container: tab});\r\n\r\n                    // Set properties to load default container\r\n                    container = tab;\r\n                    searchFormToLoad = self.searchForms[0];\r\n\r\n                } else {\r\n                    otherElements.push({container: tab});\r\n                }\r\n            });\r\n\r\n            // Append no defaults elements\r\n            $.each(otherElements, function (i, element) {\r\n                tabContainer.elements.push(element);\r\n            });\r\n\r\n            data.form.elements.push({\r\n                container: tabContainer\r\n            });\r\n        }\r\n\r\n        bizagi.loading.start();\r\n\r\n        // Loads default form\r\n        $.when(self.getSearchFormData(params, searchFormToLoad))\r\n            .done(function (searchFormData) {\r\n                container.elements.push(searchFormData);\r\n                container.properties.id = Math.guid();\r\n\r\n                // Resolve deferred\r\n                deferred.resolve(data);\r\n            }).fail(function (error) {\r\n            var message = bizagi.util.getErrorFormatted(error);\r\n            deferred.reject(message);\r\n        }).always(function () {\r\n            bizagi.loading.stop();\r\n        });\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    /**\r\n     * Loads a search form\r\n     * @param {} params\r\n     * @param {} searchForm\r\n     * @returns {}\r\n     */\r\n    getSearchFormData: function (params, searchForm) {\r\n        var self = this;\r\n        return self.dataService.getSearchFormData($.extend(params, {\r\n            idSearchForm: searchForm.id,\r\n            url: searchForm.url\r\n        })).pipe(function (data) {\r\n            // Append search render properties\r\n            data.form.properties.idRender = params.idRender;\r\n\r\n            return data;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Go back and destroy\r\n     * @returns {}\r\n     */\r\n    goBack: function () {\r\n        this.handleSearchFormZindex(\"hide\");\r\n        this.container.destroy();\r\n    },\r\n\r\n    /**\r\n     * Handlers kendo view\r\n     * @returns {}\r\n     */\r\n    configureViewHandlers: function () {\r\n    },\r\n\r\n    /**\r\n     * Process render buttons\r\n     * @param {} options\r\n     * @returns {}\r\n     */\r\n    _renderButtons: function (options) {\r\n        var self = this;\r\n        var content = $(\"<div class='bz-slide-button-container'></div>\");\r\n\r\n        $.each(options.buttons, function (ui, value) {\r\n            $(\"<div class='action-button'>\" + value.text + \"</div>\").click(\r\n                value.click\r\n            ).appendTo(content);\r\n        });\r\n\r\n        self.buttonContainer = content;\r\n    },\r\n\r\n    handleSearchFormZindex: function (option) {\r\n        // If there is an open modal, change z-index to make searchForm visible\r\n        var modalViewDisplayed = jQuery.grep($(\".km-modalview-root\"), function (n) {\r\n            return ($(n).css(\"display\") === \"block\");\r\n        });\r\n\r\n        if (modalViewDisplayed.length > 0) {\r\n            var index = option === \"show\" ? 0 : 10001;\r\n            $(modalViewDisplayed).css(\"z-index\", index);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Idle timer expired exception\r\n     * @param error\r\n     * @returns {boolean}\r\n     */\r\n    hasSessionFormException: function (error) {\r\n        return typeof (error) !== \"undefined\" && error.code === \"AUTH_ERROR\";\r\n    },\r\n\r\n    /**\r\n     * Navigate to main page\r\n     * @param error\r\n     */\r\n    goToStartPage: function (error) {\r\n        if (this.slideParams.navigation) {\r\n            this.slideParams.navigation.goToStartPage(error);\r\n        }\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet slide view Upload implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   Serves as an slide view that will show an upload file without exiting the application\r\n */\r\n\r\n// Extends itself\r\n$.Class.extend('bizagi.rendering.tablet.slide.upload', {}, {\r\n\r\n    /* CONSTRUCTOR\r\n    =====================================================*/\r\n    init: function (dataService, renderFactory, slideFormParams) {\r\n\r\n        var self = this;\r\n\r\n        // Define instance variables\r\n        this.dataService = dataService;\r\n        this.renderFactory = renderFactory;\r\n        this.slideFormDeferred = new $.Deferred();\r\n        this.slideFormParams = slideFormParams || {};\r\n\r\n        // Create container    \t\r\n        self.slideContainer = self.slideFormParams.navigation.createRenderContainer({title: self.slideFormParams.title});\r\n\r\n        self.processButtons()\r\n            .done(function (data) {\r\n                self.slideFormDeferred.resolve(data);\r\n            }).fail(function () {\r\n            self.slideFormDeferred.reject();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Shows the slideForm form container in the browser\r\n     * @returns {} Returns a promise that the dialog will be closed\r\n     */\r\n    processButtons: function () {\r\n        var self = this;\r\n        var dfd = new $.Deferred();\r\n\r\n        // Create buttons object\r\n        var slideOptions = {buttons: []};\r\n\r\n        // Add cancel button by default\r\n        var onClose = function onClose() {\r\n            // Close slide\r\n            self.goBack();\r\n            //reject defered\r\n            dfd.reject();\r\n        };\r\n        slideOptions.buttons.push({\r\n            text: bizagi.localization.getResource(\"workportal-case-dialog-box-close\"),\r\n            caption: bizagi.localization.getResource(\"render-form-dialog-box-close\"),\r\n            actions: [\"submitData\", \"refresh\"],\r\n            submitData: false,\r\n            refresh: false,\r\n            ordinal: 0,\r\n            action: \"back\",\r\n            save: true,\r\n            style: \"\",\r\n            //This callback avoid to call the default processButton in the form\r\n            callback: onClose,\r\n            click: onClose,\r\n        });\r\n\r\n        // Apply dialog plugin\r\n        this.slideFormParams = $.extend(slideOptions, this.slideFormParams);\r\n        self._renderButtons(this.slideFormParams);\r\n\r\n        // Return promise\r\n        return dfd.promise();\r\n    },\r\n\r\n    /**\r\n     * Render the grid view form\r\n     * The params are the same that will be send to the ajax service\r\n     * @param {} params\r\n     * @returns {} Returns a deferred\r\n     */\r\n    render: function (params) {\r\n        var self = this;\r\n\r\n        // Fill content\r\n        self.renderUploadFile(self.slideForm, params);\r\n\r\n        // Return promise\r\n        return self.slideFormDeferred.promise();\r\n    },\r\n\r\n    /* Render the file inside a frame\r\n    =====================================================*/\r\n    renderUploadFile: function (slideForm, params) {\r\n        var self = this;\r\n        var template = self.renderFactory.getCommonTemplate(\"uploadSlide\");\r\n\r\n        // Render template\r\n        var content = $.fasttmpl(template, {url: params.url});\r\n\r\n        // Append content in the slide view\r\n        self.slideContainer.element.html(content);\r\n\r\n        // Navigate on view\r\n        self.slideFormParams.navigation.navigate(self.slideContainer.id);\r\n        // Add Button\r\n        // $(\".ui-bizagi-button-container\", self.slideContainer).append(self.buttonContainer);\r\n\r\n        // No need to create a real form cause it just shows the back button\r\n        var virtualForm = $.extend({\r\n            originalProperties: {\r\n                uniqueId: 101,\r\n                id: 101,\r\n            },\r\n        }, self.slideFormParams);\r\n        virtualForm.container = self.slideContainer.element;\r\n\r\n        self.slideFormParams.navigation.setNavigationButtons(virtualForm);\r\n\r\n        content.find(\".ui-slide-upload-link\").click(function () {\r\n            $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(\"render-tablet-slide-upload-confirmation\")))\r\n                .done(function () {\r\n                    window.location.href = params.url;\r\n                });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Go back and destroy\r\n     * @returns {}\r\n     */\r\n    goBack: function () {\r\n        var self = this;\r\n\r\n        self.slideContainer.destroy();\r\n    },\r\n\r\n    /**\r\n     * Process render buttons\r\n     * @param {} options\r\n     * @returns {}\r\n     */\r\n    _renderButtons: function (options) {\r\n        var self = this;\r\n        var content = $(\"<div class=\\\"bz-slide-button-container\\\"></div>\");\r\n\r\n        $.each(options.buttons, function (ui, value) {\r\n            $(\"<div class=\\\"action-button\\\">\" + value.text + \"</div>\").click(\r\n                value.click\r\n            ).appendTo(content);\r\n        });\r\n\r\n        self.buttonContainer = content;\r\n    }\r\n});","/**\r\n *   Name: Bizagi Tablet slide form implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   Serves as an slide form that can render a inner form\r\n */\r\n\r\n// Extends itself\r\n$.Class.extend('bizagi.rendering.tablet.startForm', {}, {\r\n\r\n    /* CONSTRUCTOR\r\n     =====================================================*/\r\n    init: function (dataService, renderFactory, slideFormParams) {\r\n\r\n        var self = this;\r\n\r\n        // Define instance variables\r\n        self.dataService = dataService;\r\n        self.renderFactory = renderFactory;\r\n        self.slideFormParams = slideFormParams || {};\r\n\r\n        // Create container        \r\n        self.slideContainer = self.slideFormParams.navigation.createRenderContainer({title: self.slideFormParams.title});\r\n        self.configureViewHandlers();\r\n    },\r\n\r\n    /**\r\n     * Handlers kendo view\r\n     * @returns {}\r\n     */\r\n    configureViewHandlers: function () {\r\n        var self = this;\r\n    },\r\n\r\n    /**\r\n     * Go back and destroy\r\n     * @returns {}\r\n     */\r\n    goBack: function () {\r\n        var self = this;\r\n        self.slideContainer.destroy();\r\n    },\r\n\r\n    /**\r\n     * Render the form\r\n     * The params are the same that will be send to the ajax service\r\n     * @param {} params\r\n     * @returns {} Returns a deferred\r\n     */\r\n    render: function (params) {\r\n        var self = this;\r\n        // Fill content\r\n        self.renderSlideForm(params);\r\n    },\r\n\r\n    /* RENDERS slideForm\r\n     =====================================================*/\r\n    renderSlideForm: function (params) {\r\n\r\n        var self = this;\r\n\r\n        var defer = new $.Deferred();\r\n\r\n        // Load template and data\r\n        $.when(self.dataService.getStartForm(params)).then(function (data) {\r\n            /*** SUCCESS FILTER **/\r\n            // Apply editable param\r\n            if (params.editable === false) {\r\n                data.form.properties.editable = false;\r\n            }\r\n\r\n            // Render dialog template\r\n            var formClass = bizagi.rendering.tablet.form.extend({\r\n                submitForm: function () {\r\n                    if (self.form) {\r\n                        this.endLoading();\r\n                        // Perform validations\r\n                        if (self.form.validateForm()) {\r\n                            // Collect data\r\n                            var data = {};\r\n\r\n                            self.form.collectRenderValues(data);\r\n\r\n                            // Add page cache for this form\r\n                            data.idPageCache = self.form.getPageCache();\r\n\r\n                            // Call user callback\r\n                            if (self.slideFormParams.onSave) {\r\n                                $.when(self.slideFormParams.onSave(data))\r\n                                    .done(function (result) {\r\n                                        if (result == null || result == true || result.type == \"success\") {\r\n                                            defer.resolve();\r\n                                            self.goBack();\r\n                                        } else if (result.type == \"validationMessages\") {\r\n                                            // Add validation messages\r\n                                            self.form.addValidationMessage(result.messages);\r\n                                            // Update original value to use as reference to other futures changes in the dialogBox\r\n                                            $.each(data, function (key, value) {\r\n                                                var renders = self.form.getRenders(key);\r\n                                                $.each(renders, function (i, render) {\r\n                                                    render.updateOriginalValue();\r\n                                                });\r\n                                            });\r\n                                        } else if (result.type == \"error\") {\r\n                                            // Add error messages\r\n                                            self.form.addErrorMessage(result.message);\r\n                                        }\r\n                                    });\r\n\r\n                            } else {\r\n                                defer.resolve();\r\n                                self.goBack();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            var containerParams = $.extend({\r\n                type: \"form\",\r\n                data: data.form,\r\n                navigation: self.slideFormParams.navigation,\r\n                view_container: self.slideContainer\r\n            }, {\r\n                renderFactory: self.renderFactory,\r\n                dataService: self.renderFactory.dataService\r\n            });\r\n\r\n            self.form = new formClass(containerParams);\r\n\r\n\r\n            // Attach a refresh handler to recreate all the form\r\n            self.form.bind(\"refresh\", function (_, refreshParams) {\r\n                refreshParams = $.extend({\r\n                    selectedTabs: self.form.getSelectedTabs(),\r\n                    isRefresh: true\r\n                }, params, refreshParams, {idStartScope: self.form.properties.idStartScope});\r\n\r\n                self.renderSlideForm(refreshParams);\r\n            });\r\n\r\n            self.form.buttons = [\r\n                $.extend(\r\n                    self.form.buttons[0] || {},\r\n                    {\r\n                        \"caption\": self.slideFormParams.saveButtonLabel,\r\n                        \"actions\": [\"submitData\", \"refresh\"],\r\n                        \"submitData\": true,\r\n                        \"refresh\": true,\r\n                        \"ordinal\": 0,\r\n                        \"action\": \"save\",\r\n                        \"save\": true,\r\n                        \"style\": \"\",\r\n                    })];\r\n\r\n            // Return rendering promise\r\n            return self.form.render();\r\n        }).done(function (element) {\r\n            // Append form  in the view\r\n            self.slideContainer.element.html(element);\r\n\r\n            if (!params.isRefresh) {\r\n                self.slideFormParams.navigation.navigate(self.slideContainer.id);\r\n            }\r\n\r\n            $('.ui-bizagi-button-container div', self.form.container).remove();\r\n\r\n            $('.ui-bizagi-button-container', self.form.container).append('<div ordinal=\"0\" id=\"formButton0\" class=\"action-button ui-bizagi-form-button\">' + (self.slideFormParams.saveButtonLabel ? self.slideFormParams.saveButtonLabel : bizagi.localization.getResource(\"render-form-dialog-box-save\")) + '</div>').delegate('div[ordinal=\"0\"]', 'click', function () {\r\n                self.form.submitForm();\r\n            });\r\n\r\n            $('.ui-bizagi-button-container', self.form.container).append('<div ordinal=\"1\" id=\"formButton1\" class=\"action-button ui-bizagi-form-button\">' + bizagi.localization.getResource(\"render-form-dialog-box-cancel\") + '</div>').delegate('div[ordinal=\"1\"]', 'click', function () {\r\n                self.slideFormParams.onCancel && self.slideFormParams.onCancel();\r\n                self.goBack();\r\n            });\r\n\r\n            //self.view.scroller.reset();\r\n            // Publish an event to check if the form has been set in the DOM\r\n            self.form.triggerHandler(\"ondomincluded\");\r\n        }).fail(function (xhr, errorType, message) {\r\n            /*** FAIL FILTER **/\r\n            var errorTemplate = self.renderFactory.getCommonTemplate(\"form-error\");\r\n            var error_message = message.message || \"Error\";\r\n\r\n            $.fasttmpl(errorTemplate, {message: error_message}).appendTo(self.slideContainer.element);\r\n            // Navigate on view\r\n            self.slideFormParams.navigation.navigate(self.slideContainer.id);\r\n        });\r\n\r\n        return defer.promise();\r\n    }\r\n});","/**\r\n *   Name: Bizagi tablet ECM Slide Implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will shows a ECM form\r\n */\r\n$.Class.extend(\"bizagi.rendering.tablet.slide.ecm\", {}, {\r\n\r\n    /**\r\n     * Constructor\r\n     * @param dataService\r\n     * @param renderFactory\r\n     * @param slideFormParams\r\n     */\r\n    init: function (dataService, renderFactory, slideFormParams) {\r\n        var self = this;\r\n\r\n        // Define instance variables\r\n        self.dataService = dataService;\r\n        self.renderFactory = renderFactory;\r\n\r\n        self.slideFormParams = slideFormParams || {};\r\n        self.slideFormDeferred = new $.Deferred();\r\n\r\n        // Create container\r\n        self.container = self.slideFormParams.navigation.createRenderContainer({title: self.slideFormParams.title});\r\n    },\r\n\r\n    /**\r\n     * Render the form\r\n     * @param params\r\n     */\r\n    render: function (params) {\r\n\r\n        // Fill content\r\n        this.renderSlideForm(params);\r\n\r\n        // Return promise\r\n        return this.slideFormDeferred.promise();\r\n    },\r\n\r\n    renderSlideForm: function (params) {\r\n        var self = this;\r\n        var data = self.getMetadataForm(params);\r\n\r\n        // Load template and data\r\n        self.form = self.renderFactory.getContainer({\r\n            type: \"form\",\r\n            data: data.form,\r\n            navigation: self.slideFormParams.navigation,\r\n            view_container: self.container\r\n        });\r\n\r\n        // Binds the view close event\r\n       /* self.container.element.bind(\"close\", function () {\r\n            // delete self.container;\r\n            console.log(\"closed!\");\r\n        });*/\r\n\r\n        $.when(self.form.render())\r\n            .done(function ($renderEdition) {\r\n\r\n                // Append form in the slide view\r\n                self.container.element.html($renderEdition);\r\n\r\n                self.slideFormParams.navigation.navigate(self.container.id);\r\n\r\n                self.processButtons(self.form, params);\r\n                self.container.setNavigationButtons(self.form);\r\n\r\n                // Publish an event to check if the form has been set in the DOM\r\n                self.form.triggerHandler(\"ondomincluded\");\r\n\r\n                // Attach a refresh handler to recreate all the form\r\n                /*self.form.bind(\"refresh\", function () {\r\n                    // self.renderSlideForm(params);\r\n                });*/\r\n\r\n            }).always(function () {\r\n            self.slideFormDeferred.resolve();\r\n        });\r\n\r\n    },\r\n\r\n    /**\r\n     * Shows the slideForm form container in the browser\r\n     * @returns {} Returns a promise that the dialog will be closed\r\n     */\r\n    processButtons: function (form, params) {\r\n        var self = this;\r\n\r\n        form.buttons = [\r\n            {\r\n                ordinal: 0,\r\n                action: \"save\",\r\n                caption: bizagi.localization.getResource(\"render-form-dialog-box-save\"),\r\n                callback: self.onSaveDataMetadataForm.bind(self, params.fileData)\r\n            },\r\n            {\r\n                ordinal: 1,\r\n                action: \"back\",\r\n                caption: bizagi.localization.getResource(\"render-form-dialog-box-close\"),\r\n                callback: function () {\r\n                    self.slideFormParams.onCancel({});\r\n                    self.goBack();\r\n                }\r\n            }\r\n        ];\r\n\r\n        // Add save button if the form is editable\r\n        if (!self.slideFormParams.editable) {\r\n            form.buttons.shift();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Process render data\r\n     * @param params\r\n     * @returns {{form: *, type: string}}\r\n     */\r\n    getMetadataForm: function (params) {\r\n        var self = this;\r\n        var data = {\r\n            type: \"form\",\r\n            form: {\r\n                elements: [],\r\n                pageCacheId: params.pageCacheId,\r\n                sessionId: params.sessionId,\r\n                properties: {\r\n                    id: 101,\r\n                    xpathContext: params.xpathContext,\r\n                    editable: self.slideFormParams.editable,\r\n                    orientation: self.slideFormParams.orientation || \"ltr\"\r\n                }\r\n            }\r\n        };\r\n\r\n        // Mapping metadata to render\r\n        $.each(params.metadata, function (index, item) {\r\n            var renderType = self.getRenderType(item.metadataType);\r\n\r\n            var newRender = Object.assign({\r\n                \"id\": (index + 1),\r\n                \"xpath\": item.metadataId,\r\n                \"displayName\": item.description,\r\n                \"required\": bizagi.util.parseBoolean(item.required) === true,\r\n                \"editable\": bizagi.util.parseBoolean(item.readOnly) === false,\r\n                \"value\": item.value\r\n            }, renderType);\r\n\r\n            data.form.elements.push({\"render\": {\"properties\": newRender}});\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Get type of render\r\n     * @param type\r\n     * @returns {*}\r\n     */\r\n    getRenderType: function (type) {\r\n        switch (type.toUpperCase()) {\r\n            case \"INTEGER\":\r\n                return {\r\n                    type: \"number\",\r\n                    dataType: 2,\r\n                    allowDecimals: false,\r\n                    thousands: false\r\n                };\r\n            case \"DECIMAL\":\r\n                return {\r\n                    type: \"number\",\r\n                    dataType: 10,\r\n                    allowDecimals: true,\r\n                    thousands: true\r\n                };\r\n            case \"DATETIME\":\r\n                return {type: \"date\", dataType: 12};\r\n            case \"BOOL\":\r\n                return {type: \"boolean\", dataType: 5};\r\n            case \"STRING\":\r\n            default:\r\n                return {\r\n                    type: \"text\",\r\n                    dataType: 15,\r\n                    maxLength: 50,\r\n                    autoExtend: false\r\n                };\r\n\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Save data to ECM form\r\n     * @returns {jQuery}\r\n     * @param fileData\r\n     */\r\n    onSaveDataMetadataForm: function (fileData) {\r\n        var self = this;\r\n        var deferred = $.Deferred();\r\n\r\n        if (self.form.validateForm()) {\r\n            // Check if the add form has data\r\n            var formData = {};\r\n            self.form.collectRenderValuesForSubmit(formData);\r\n\r\n            // Turn off flag\r\n            $.forceCollectData = false;\r\n\r\n            if (!bizagi.util.isMapEmpty(formData)) {\r\n\r\n                var metadataValues = Object.keys(formData)\r\n                    .map(function (key, index) {\r\n                        return {\"idMetadata\": key, \"value\": formData[key]};\r\n                    });\r\n\r\n                var params = {\r\n                    \"idFileUpload\": fileData.idFileUpload,\r\n                    \"fileName\": fileData.fileName,\r\n                    \"idPageCache\": fileData.idPageCache,\r\n                    \"xpathContext\": fileData.xpathContext,\r\n                    \"xPath\": fileData.xpath,\r\n                    \"idAttrib\": fileData.idAttrib\r\n                };\r\n\r\n                params.metaValues = JSON.encode({metadataValues: metadataValues});\r\n                bizagi.loading.start();\r\n\r\n                $.when(self.dataService.updateECMMetadata(params))\r\n                    .done(function (fileProperties) {\r\n                        if (fileProperties && fileProperties.idFileUpload) {\r\n\r\n                            self.slideFormParams.onSave({\r\n                                update: true,\r\n                                idFileUpload: fileProperties.idFileUpload,\r\n                                fileName: fileData.fileName\r\n                            });\r\n\r\n                            deferred.resolve({update: true});\r\n                        }\r\n\r\n                        self.goBack();\r\n\r\n                    }).fail(function (message) {\r\n                    self.form.addValidationMessage(message.message);\r\n                    deferred.reject();\r\n                }).always(function () {\r\n                    bizagi.loading.stop();\r\n                });\r\n            } else {\r\n                self.slideFormParams.onSave({update: false});\r\n                deferred.resolve({update: false});\r\n                self.goBack();\r\n            }\r\n        }\r\n\r\n        deferred.promise();\r\n    },\r\n\r\n    /**\r\n     * Go back and destroy\r\n     */\r\n    goBack: function () {\r\n        this.container.destroy();\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Container Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n */\r\n\r\n// Extends itself\r\nbizagi.rendering.container.extend(\"bizagi.rendering.tablet.container\", {}, {\r\n    /**\r\n     * Starts waiting signal for async stuff\r\n     */\r\n    startLoading: function () {\r\n    },\r\n\r\n    /**\r\n     * Ends waiting for async stuff\r\n     */\r\n    endLoading: function () {\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render base\r\nbizagi.rendering.render.extend(\"bizagi.rendering.tablet.render\", bizagi.rendering.render.base.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.render\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        this._super(data);\r\n\r\n        var formContainer = this.getFormContainer();\r\n        this.formParams = formContainer.getParams();\r\n    },\r\n\r\n    /**\r\n     * Returns the label element usually to apply styles\r\n     */\r\n    getLabel: function () {\r\n        if (!this.label)\r\n            this.label = $(\".bz-form-label label\", this.element || this.observableElement);\r\n\r\n        return this.label;\r\n    },\r\n\r\n    /**\r\n     * Return the label\r\n     */\r\n    getFormattingLabel: function () {\r\n        // TODO: Despues de cambiar a genome desktop, validar se solo se deja este metodo en la base\r\n        return this.getLabel();\r\n    },\r\n\r\n    /**\r\n     * Template method to get the control element\r\n     */\r\n    getControl: function () {\r\n        if (!this.control || this.control.length === 0)\r\n            this.control = $(\".bz-control\", this.element || this.observableElement);\r\n\r\n        if (!this.control || this.control.length === 0) return null;\r\n\r\n        return this.control;\r\n    },\r\n\r\n    /**\r\n     * Template method to get the control filler element\r\n     */\r\n    getControlFiller: function () {\r\n        if (!this.controlFiller)\r\n            this.controlFiller = $(\".bz-form-item__control\", this.element || this.observableElement);\r\n\r\n        return this.controlFiller;\r\n    },\r\n\r\n    getContainerMessage: function () {\r\n        if (!this.containerMessage)\r\n            this.containerMessage = $(\".bz-form-message__text\", this.element || this.observableElement);\r\n\r\n        return this.containerMessage;\r\n    },\r\n\r\n    getColumnContainerMessage: function () {\r\n        if (!this.containerMessage)\r\n            this.containerMessage = $(\".bz-form-cell-message__text\", this.element || this.observableElement);\r\n\r\n        return this.containerMessage;\r\n    },\r\n\r\n    /**\r\n     * Starts waiting signal for async stuff\r\n     */\r\n    startLoading: function () {\r\n    },\r\n\r\n    /**\r\n     * Ends waiting for async stuff\r\n     */\r\n    endLoading: function () {\r\n    },\r\n\r\n    /**\r\n     * Return the right display option class\r\n     * @param {} displayType\r\n     */\r\n    getDisplayOptionClass: function (displayType) {\r\n        if (displayType === \"normal\" || displayType === \"both\") {\r\n            return \"bz-form-item--display-normal\";\r\n        } else if (displayType === \"vertical\") {\r\n            return \"bz-form-item--display-vertical\";\r\n        } else if (displayType === \"reversed\") {\r\n            return \"bz-form-item--display-reversed\";\r\n        } else if (displayType === \"label\") {\r\n            return \"bz-form-item--display-label\";\r\n        } else if (displayType === \"value\") {\r\n            return \"bz-form-item--display-value\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Customizes render display type with custom css classes\r\n     * @param displayType\r\n     */\r\n    changeDisplayOption: function (displayType) {\r\n        // var self = this,\r\n        // el = self.element;\r\n\r\n        // Clean old display type\r\n        // el.removeClass('ui-bizagi-render-display-normal ui-bizagi-render-display-vertical ui-bizagi-render-display-reversed')\r\n        //   .removeClass('ui-bizagi-render-display-vertical-reversed ui-bizagi-render-display-label ui-bizagi-render-display-value');\r\n        // el.addClass(self.getDisplayOptionClass(displayType));\r\n    },\r\n\r\n    /**\r\n     * Return the right align class\r\n     * @param alignType\r\n     * @returns {*}\r\n     */\r\n    getAlignClass: function (alignType) {\r\n        return alignType;\r\n    },\r\n\r\n    /**\r\n     * Customizes render label align\r\n     * @param alignType\r\n     */\r\n    changeLabelAlign: function (alignType) {\r\n        // var self = this;\r\n\r\n        // Get label\r\n        // var label = self.getLabel();\r\n\r\n        // Remove old label align\r\n        // label.removeClass('ui-bizagi-render-align-left ui-bizagi-render-align-center ui-bizagi-render-align-right');\r\n\r\n        // Set label align\r\n        // label.addClass(self.getAlignClass(alignType));\r\n    },\r\n\r\n    /**\r\n     * Customizes render value align\r\n     * @param alignType\r\n     */\r\n    changeValueAlign: function (alignType) {\r\n        // var self = this;\r\n\r\n        // Get control\r\n        // var controlFiller = self.getControlFiller();\r\n        //\r\n        // // Remove old value align\r\n        // controlFiller.removeClass('ui-bizagi-render-align-left ui-bizagi-render-align-center ui-bizagi-render-align-right');\r\n        //\r\n        // // Set value align\r\n        // controlFiller.addClass(self.getAlignClass(alignType));\r\n    },\r\n\r\n    /**\r\n     * Customizes render label and value width\r\n     * TODO: Review implementation on execution\r\n     */\r\n    customizeRenderWidth: function () {\r\n        var self = this;\r\n        var label = self.getLabel();\r\n        var properties = self.properties;\r\n        var controlFiller = self.getControlFiller();\r\n\r\n        // Read values\r\n        // If the label width or the value width are 0, the BAS means that no value is used, so we need to adjust them to 50%\r\n        var labelWidth = properties.labelWidth ? (properties.labelWidth != '0' ? properties.labelWidth : '50%') : null;\r\n        var valueWidth = properties.valueWidth ? (properties.valueWidth != '0' ? properties.valueWidth : '50%') : null;\r\n\r\n        // Normalize percentages\r\n        if (labelWidth && !valueWidth) {\r\n            labelWidth = bizagi.util.percent2Number(labelWidth);\r\n            valueWidth = 100 - labelWidth;\r\n\r\n        } else if (!labelWidth && valueWidth) {\r\n            valueWidth = bizagi.util.percent2Number(valueWidth);\r\n            labelWidth = 100 - valueWidth;\r\n\r\n        } else {\r\n            labelWidth = bizagi.util.percent2Number(labelWidth);\r\n            valueWidth = bizagi.util.percent2Number(valueWidth);\r\n\r\n            // Check 100% percentage\r\n            if ((labelWidth + valueWidth) != 100) {\r\n                valueWidth = 100 - labelWidth;\r\n            }\r\n        }\r\n\r\n        // Now apply width\r\n        label.width(labelWidth + \"%\");\r\n        controlFiller.width((valueWidth - 0.01) + \"%\");\r\n    },\r\n\r\n    /**\r\n     * Adds a validation message to the render\r\n     * @param message\r\n     */\r\n    setValidationMessage: function (message) {\r\n        // Call base\r\n        this._super(message);\r\n        var dataType = this.properties.type;\r\n        var isGridControl = (bizagi.util.normalizeType(dataType) === \"grid\");\r\n        var isColumn = (this.grid && this.column && /column/.test(dataType));\r\n        var $message = isColumn ? this.getColumnContainerMessage() : this.getContainerMessage();\r\n\r\n        if (message && message.length > 0) {\r\n            message = message.replace(/<\\w+>([^<]*)<\\/\\w+>/g, \"$1\");\r\n\r\n            $message.attr(\"data-error\", message);\r\n            $message.text(message);\r\n\r\n            if (this.element){\r\n                isGridControl ? this.element.addClass(\"bz-form-item-grid--error\") : this.element.addClass(\"bz-form-item--error\");\r\n            }\r\n        } else {\r\n            $message.text(\"\");\r\n            if (this.element){\r\n                isGridControl ? this.element.removeClass(\"bz-form-item-grid--error\") : this.element.removeClass(\"bz-form-item--error\");\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n\r\n        if (!self.properties.editable && self.properties.display !== \"check\") {\r\n            // Render as simple value\r\n            var displayValue = self.getDisplayValue(value);\r\n\r\n            if (typeof (displayValue) == \"string\" || typeof (displayValue) == \"number\") {\r\n                $(control).html(\"<label class='bz-form-label'>\" + displayValue + \"</label>\");\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * in mobiles, don't apply styles to icon's elements\r\n     */\r\n    getElementsToStylize: function (context) {\r\n        return $(\".bz-input\", context);\r\n    },\r\n\r\n    getFormParams: function () {\r\n        return this.formParams || {};\r\n    },\r\n\r\n    changeRequired: function (argument) {\r\n        // Update properties\r\n        this.properties.required = argument;\r\n\r\n        if (bizagi.util.parseBoolean(argument) && this.properties.editable) {\r\n            this.element.addClass(\"bz-form-item--required\");\r\n        } else {\r\n            this.element.removeClass(\"bz-form-item--required\");\r\n        }\r\n\r\n        // Perform validations again to check if the form is valid after this change\r\n        this.triggerRenderValidate();\r\n    },\r\n\r\n    changeRequiredLabel: function (argument) {\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     */\r\n    clearDisplayValue: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        var input = control.find(\"input\").filter(function (index, ele) {\r\n            return ele.type !== \"file\" && ele.type !== \"radio\" && ele.type !== \"checkbox\"\r\n        });\r\n\r\n        if (input.length > 0) {\r\n            input.val(self.getValue());\r\n        } else {\r\n            self.setDisplayValue(\"\");\r\n        }\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Form Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n *   -   Will apply a desktop form template\r\n */\r\n\r\n// Extends from container tablet base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.form\", bizagi.rendering.form.prototype);\r\n// Auto extend\r\nbizagi.rendering.tablet.form.extend(\"bizagi.rendering.tablet.form\", {}, {\r\n\r\n    /**\r\n     * CONSTRUCTOR\r\n     *\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    init: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        // Define variables\r\n        self.warnings = {};\r\n        self.errors = {};\r\n\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var form = self.container;\r\n\r\n        // Process complex-gateway\r\n        self.configureComplexGateway();\r\n\r\n        // Process buttons\r\n        self.processButtons(form);\r\n\r\n        // Check for dom included event\r\n        self.bind(\"ondomincluded\", function () {\r\n            // Creates validation controller after the form is ready\r\n            self.validationController = new bizagi.command.controllers.validation(self, self.validations);\r\n            // Creates action controller after the form is ready\r\n            self.actionController = new bizagi.command.controllers.action(self, self.actions);\r\n\r\n            // Resolve this deferred to start executing DOM dependant plugins\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n\r\n        //Event to notify the native code the form will be showing a modal view \r\n        self.bind(\"modalViewDidAppear\", function () {\r\n            self.params.navigation.modalViewDidAppear();\r\n        });\r\n\r\n        self.bind(\"closeModalValidationMessage\", function () {\r\n            self.validationController.clearValidationMessages();\r\n        });\r\n\r\n        //Event to notify the native code the form will be hiding a modal view \r\n        self.bind(\"modalViewDidDisappear\", function () {\r\n            self.params.navigation.modalViewDidDisappear();\r\n        });\r\n\r\n        // Add network listener\r\n        self.configureNetworkHandlers();\r\n        \r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each container after processed\r\n     *\r\n     * @param {} container\r\n     * @returns {}\r\n     */\r\n    postRenderContainer: function (container) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        self._super(container);\r\n        var buttons = self.getButtons();\r\n\r\n        //disable overflow-scrolling touch untill the form is loaded QA-2178\r\n        if (bizagi.util.isiOSTabletDevice()) {\r\n            $(\".km-native-scroller\").css(\"-webkit-overflow-scrolling\", \"inherit\");\r\n        }\r\n\r\n        // Show warnings\r\n        if (!bizagi.util.isObjectEmpty(self.warnings)) {\r\n            var warningContainer = $('<ul class=\"ui-bizagi-form-warnings\"></ul>');\r\n            for (var key in self.warnings) {\r\n                warningContainer.append($('<li>' + key + '</li>'));\r\n            }\r\n\r\n            // Add button\r\n            $(\"<button>\" + \"X\" + \"</button>\").appendTo(warningContainer);\r\n\r\n            // Append to body \r\n            warningContainer.prependTo(self.container);\r\n            warningContainer.click(function () {\r\n                warningContainer.detach();\r\n            });\r\n        }\r\n\r\n        // Show errors\r\n        if (!bizagi.util.isObjectEmpty(self.errors)) {\r\n            var errorContainer = $('<ul class=\"ui-bizagi-form-errors\"></ul>');\r\n            for (var ekey in self.errors) {\r\n                errorContainer.append($('<li>' + ekey + '</li>'));\r\n            }\r\n\r\n            // Add button\r\n            $(\"<button>\" + \"X\" + \"</button>\").prependTo(errorContainer);\r\n\r\n            // Append to body \r\n            errorContainer.appendTo(self.container);\r\n            errorContainer.click(function () {\r\n                errorContainer.detach();\r\n            });\r\n\r\n            // Hide routing buttons when an error was found\r\n            $.each(properties.buttons, function (i, button) {\r\n                if (button.routing) {\r\n                    self.getButtons().eq(i).prop(\"disabled\", true);\r\n                }\r\n            });\r\n        }\r\n\r\n        //Set button length\r\n        var lengthButtons = (buttons) ? buttons.length : 0;\r\n\r\n        if (lengthButtons) {\r\n\r\n            $(document).data(\"auto-save\", \"auto-save\");\r\n\r\n            //bind event auto-save\r\n            $(document).unbind(\"save-form\").bind(\"save-form\", function (e, deferredSave) {\r\n                if (self.allowOnlineActions()) {\r\n                    self.autoSaveEvents(deferredSave);\r\n                } else {\r\n                    deferredSave.resolve();\r\n                }\r\n            });\r\n\r\n            //bind event beforeunload\r\n            $(window).unbind('beforeunload').bind('beforeunload', function (e) {\r\n                var newData = {};\r\n                self.collectRenderValues(newData);\r\n\r\n                //if there are changes in the form show a message\r\n                if (!$.isEmptyObject(newData) && $(document).data('auto-save'))\r\n                    return bizagi.localization.getResource(\"confirmation-savebox-message2\");\r\n\r\n                return;\r\n            });\r\n\r\n        }\r\n\r\n        //enable overflow-scrolling touch to avoid black frame over the form QA-2178\r\n        if (bizagi.util.isiOSTabletDevice()) {\r\n            setTimeout(function () {\r\n                $(\".km-native-scroller\").css(\"-webkit-overflow-scrolling\", \"touch\");\r\n            }, 1000);\r\n        }\r\n\r\n    },\r\n    /**\r\n     * Auto Save Events\r\n     *\r\n     * @param {} deferredSave\r\n     * @param {} saveBox\r\n     * @returns {}\r\n     */\r\n    autoSaveEvents: function (deferredSave, saveBox) {\r\n        var self = this;\r\n        var data = {};\r\n\r\n        self.collectRenderValues(data);\r\n\r\n        if (!$.isEmptyObject(data)) {\r\n\r\n            $.when(bizagi.showSaveBox(bizagi.localization.getResource(\"confirmation-savebox-message1\"), \"Bizagi\", \"warning\"))\r\n            .done(function () {\r\n                $.when(self.saveForm())\r\n                .always( function() {\r\n                    deferredSave.resolve();\r\n                });\r\n            }).fail(function () {\r\n                deferredSave.resolve();\r\n            });\r\n\r\n        } else {\r\n            deferredSave.resolve();\r\n        }\r\n    },\r\n\r\n    internalSubmitForm: function (buttonProperties) {\r\n        var self = this;\r\n        // Assemble the actions\r\n        var actions = [];\r\n        var defer = $.Deferred();\r\n        var submitDataAction = null, executeButtonAction = null, performAction = null, checkpointAction = null,\r\n            commitAction = null;\r\n        var data;\r\n\r\n        // Fill data hash\r\n        if (buttonProperties.submitData || buttonProperties.executeRule || buttonProperties.createnewcase) {\r\n            // Collect data\r\n            data = self.collectRenderValuesForSubmit();\r\n        }\r\n\r\n        // Start asynchronous operation\r\n        $.when(self.startLoading()).done(function () {\r\n            $('html, body').animate({scrollTop: $('.ui-bizagi-loading-icon')}, 'slow');\r\n        });\r\n\r\n        // Prepare actions\r\n        if (buttonProperties.executeRule) {  // When the button has to execute any rule (MUST SUBMIT DATA BEFORE ALWAYS)\r\n\r\n            submitDataAction = self.dataService.submitData({\r\n                action: \"SUBMITDATA\",\r\n                data: data,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true\r\n            });\r\n            submitDataAction.tag = \"submitData\";\r\n\r\n            checkpointAction = self.prepareCheckpointAction(buttonProperties.id);\r\n\r\n            // Reset data because when an execute rule operation has been performed, it saved already all the data\r\n            data = {};\r\n            executeButtonAction = self.dataService.executeButton({\r\n                idRender: buttonProperties.id,\r\n                xpathContext: self.properties.xpathContext || \"\",\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true\r\n            });\r\n            executeButtonAction.tag = \"executeRule\";\r\n\r\n            commitAction = self.prepareCommitAction(buttonProperties.id);\r\n        }\r\n\r\n        if (buttonProperties.next || buttonProperties.back || buttonProperties.save || buttonProperties.createnewcase || buttonProperties.nextWithoutValidations) {\r\n            // Verify transitions\r\n            if (self.transitions) {\r\n                var transitions = [];\r\n                $.each(this.activeTransitions, function (key, value) {\r\n                    (value) ? transitions.push(key) : \"\";\r\n                });\r\n\r\n                if (bizagi.util.countProps(transitions) == 0) {\r\n                    bizagi.showMessageBox(bizagi.localization.getResource(\"render-widget-complexgateway-path\"), bizagi\r\n                        .localization.getResource(\"render-widget-complexgateway-error\"), \"info\", false);\r\n                    self.endLoading();\r\n                    defer.reject();\r\n                    return defer.promise();\r\n                }\r\n            }\r\n\r\n            performAction = self.dataService.submitData({\r\n                action: buttonProperties.action,\r\n                forcePlanCompletion: buttonProperties.forcePlanCompletion,\r\n                data: data,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true,\r\n                transitions: transitions || \"\",\r\n                contexttype: self.properties.contextType,\r\n                surrogatekey: self.properties.surrogateKey\r\n            });\r\n\r\n            performAction.tag = \"performAction\";\r\n        }\r\n\r\n        if (executeButtonAction) {\r\n            actions.push(submitDataAction);\r\n\r\n            //Validates if the method CHECKPOINT is supported\r\n            if (checkpointAction) {\r\n                actions.push(checkpointAction);\r\n            }\r\n\r\n            actions.push(executeButtonAction);\r\n\r\n            ///Validates if the method COMMIT is supported\r\n            if (commitAction) {\r\n                actions.push(commitAction);\r\n            }\r\n\r\n            actions.push(executeButtonAction);\r\n        }\r\n\r\n        if (performAction) {\r\n            actions.push(performAction);\r\n        }\r\n\r\n        // Execute the batch\r\n        bizagi.chrono.initAndStart(\"submitForm-ajax\");\r\n\r\n        //Evaluate if there are deferreds to evaluate, like inline add in grid, that must send a ADDRELATIONWITHDATA before to savedata\r\n        var flowControlDeferred = new $.Deferred();\r\n        if (data && data.deferreds) {\r\n            $.when.apply(this, data.deferreds)\r\n                .done(function (response) {\r\n                    flowControlDeferred.resolve(response);\r\n                })\r\n                .fail(function () {\r\n                    flowControlDeferred.reject();\r\n                    console.log(\"Error: It was not possible resolve async actions on form \")\r\n                });\r\n        } else {\r\n            flowControlDeferred.resolve();\r\n        }\r\n\r\n        $.when(flowControlDeferred).done(function () {\r\n            bizagi.util.tablet.startLoading();\r\n            $.when(self.dataService.multiaction().execute({actions: actions})).done(function (responses) {\r\n                bizagi.chrono.stop(\"submitForm-ajax\");\r\n                // Find validations\r\n                var bHasValidations;\r\n                $.each(responses, function (i, response) {\r\n                    if (response.result.type == \"validationMessages\") {\r\n                        // Something went wrong, we gotta display messages in notifications grid\r\n                        self.addValidationMessage(response.result.messages);\r\n                        bHasValidations = true;\r\n                    }\r\n                });\r\n\r\n                if (!bHasValidations) {\r\n                    // Everything went ok .. succesfully response from the server\r\n                    if (!self.postProcessButton(responses, buttonProperties)) {\r\n                        return;\r\n                    }\r\n\r\n                    // After successfully response refresh the form\r\n                    if (buttonProperties.refresh) {\r\n                        self.refreshForm();\r\n                    }\r\n\r\n                    // If needs routing publish an event\r\n                    if (buttonProperties.routing) {\r\n                        self.triggerHandler(\"routing\", {\r\n                            idCase: self.params.idCase\r\n                        });\r\n                    }\r\n\r\n                    // Create case\r\n                    if (buttonProperties.createnewcase) {\r\n                        if (responses.length > 0) {\r\n                            self.triggerHandler(\"routing\", {\r\n                                idCase: responses[0].result.IdCase,\r\n                                caseNumber: responses[0].result.CaseNumber\r\n                            });\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (buttonProperties.executeRule) {\r\n                        self.sendRollbackAction(buttonProperties.id);\r\n                    }\r\n                }\r\n\r\n                //Removes the nonSupportedMethods to prevent further iterations\r\n                delete self.nonSupportedMethods;\r\n\r\n                defer.resolve();\r\n            }).fail(function (_, _, response) {\r\n                if (buttonProperties.executeRule) {\r\n                    self.sendRollbackAction(buttonProperties.id);\r\n                }\r\n\r\n                if (response && response.error && (response.error.errorType === \"WaitForCompletionPlanException\" ||\r\n                    response.error.errorType === \"InvalidPlanStateException\" || response.error.errorType === \"CustomMessageException\")) {\r\n                    self.endLoading();\r\n                    $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(response.error.message), null, false)).then(function () {\r\n                        return $.when(self.internalSubmitForm($.extend({}, buttonProperties, {forcePlanCompletion: true})));\r\n                    }).done(function () {\r\n                        defer.resolve();\r\n                    }).fail(function () {\r\n                        defer.reject();\r\n                    });\r\n                } else {\r\n                    self.failHandler({\"error\": typeof (response) === \"undefined\" ? bizagi.localization.getResource(\"workportal-general-error\") : response});\r\n                    defer.reject(response);\r\n                }\r\n            }).always(function () {\r\n                bizagi.util.tablet.stopLoading();\r\n            });\r\n        }).always(function () {\r\n            bizagi.util.tablet.stopLoading();\r\n        });\r\n        return defer.promise();\r\n    },\r\n\r\n    prepareCheckpointAction: function (id) {\r\n        return bizagi.util.validateFeatureSupport(\"commitRollbackActions\") ? this._super(id) : null;\r\n    },\r\n\r\n    prepareCommitAction: function (id) {\r\n        return bizagi.util.validateFeatureSupport(\"commitRollbackActions\") ? this._super(id) : null;\r\n    },\r\n\r\n    /**\r\n     * Retorna el pane donde se pintó la forma para facilitar navegacion de kendo\r\n     * @returns {*}\r\n     */\r\n    getPane: function () {\r\n        var self = this;\r\n        return self.pane;\r\n    },\r\n\r\n    /* TEMPLATE METHOD TO GET THE BUTTONS OBJECTS\r\n     ======================================================*/\r\n    getButtons: function () {\r\n        var self = this;\r\n\r\n        if (self.getParams() && (handler = self.getParams().getButtons))\r\n            handler(self);\r\n\r\n        return $(\".ui-bizagi-button-container :button\", self.container);\r\n    },\r\n\r\n    processButtons: function () {\r\n        var self = this;\r\n        var params = self.getParams();\r\n\r\n        //si no es con un if es con un publish\r\n        if (params && params.processButtons) {\r\n            var handler = params.processButtons;\r\n            handler(self);\r\n        }\r\n\r\n        var properties = self.properties;\r\n        var buttons = self.getButtons();\r\n\r\n        properties.buttons = self.buttons || buttons;\r\n\r\n        //to cache a submit Data Buttom if exist\r\n        self.saveButton = null;\r\n        self.nextButton = null;\r\n\r\n        //Set saveButton and nextButton if exist\r\n        for (var i = 0, length = properties.buttons.length; i < length; i++) {\r\n            if (properties.buttons[i].action == 'save') {\r\n                self.saveButton = properties.buttons[i];\r\n            } else if (properties.buttons[i].action == 'next') {\r\n                self.nextButton = properties.buttons[i];\r\n            }\r\n        }\r\n\r\n        var navigation = self.getNavigation();\r\n\r\n        if (typeof (navigation) !== \"undefined\") {\r\n            //si tiene un viewConteiner sera proque es una forma dentro de container de edicion\r\n            var view_container = self.getViewContainer();\r\n            if (typeof view_container !== \"undefined\") {\r\n                view_container.setNavigationButtons(self);\r\n            } else {\r\n                navigation.setNavigationButtons(self);\r\n            }\r\n        }\r\n\r\n        self._super();\r\n    },\r\n\r\n    /*\r\n     *   Refresh the current form\r\n     */\r\n    refreshForm: function (focus) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var params = self.getParams();\r\n        var deferred = $.Deferred();\r\n        var options;\r\n\r\n        focus = focus || self.getFocus();\r\n\r\n        // Normalize new focus structure if not present\r\n        if (focus && !focus.id) {\r\n            focus = {\r\n                id: focus\r\n            };\r\n        }\r\n\r\n        options = {\r\n            idCase: self.params.idCase || \"\",\r\n            idWorkitem: self.params.idWorkitem || \"\",\r\n            idTask: self.params.idTask || \"\",\r\n            focus: focus,\r\n            selectedTabs: self.getSelectedTabs(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            isRefresh: true,\r\n            action: self.getEndPointAction(),\r\n            idStartScope: self.properties.idStartScope || \"\",\r\n            navigation: params.navigation,\r\n            view_container: params.view_container\r\n        };\r\n\r\n        if (params.postRenderEdit || params.processButtons) {\r\n            options.isOfflineForm = self.params.isOfflineForm || false;\r\n            options.formsRenderVersion = self.params.formsRenderVersion || 0;\r\n            options.postRenderEdit = params.postRenderEdit;\r\n            options.processButtons = params.processButtons;\r\n            options.originalParams = params.originalParams || {};\r\n            options.getButtons = params.getButtons;\r\n        }\r\n\r\n        $(\".km-native-scroller\").css(\"-webkit-overflow-scrolling\", \"inherit\");\r\n\r\n        // Notify the refresh event so the consumer takes the decision about what to do\r\n        self.startLoading();\r\n        $.when(self.triggerHandler(\"refresh\", options)).done(function () {\r\n            self.endLoading();\r\n\r\n            setTimeout(function () {\r\n                $(\".km-native-scroller\").css(\"-webkit-overflow-scrolling\", \"touch\");\r\n            }, 1000);\r\n\r\n            deferred.resolve();\r\n        }).fail(function () {\r\n            self.endLoading();\r\n            deferred.reject();\r\n        });\r\n        return deferred.promise();\r\n    },\r\n\r\n    checkWidgetsData: function () {\r\n        var popupResponse = null;\r\n        if (bizagi.workportal.tablet.popup) {\r\n            if (bizagi.workportal.tablet.popup.instance) {\r\n                if (bizagi.workportal.tablet.popup.instance.getResponseValues) {\r\n                    popupResponse = bizagi.workportal.tablet.popup.instance.getResponseValues(bizagi.workportal.tablet.popup.instance.getResponseValuesParams);\r\n                    if (popupResponse === null) {\r\n                        bizagi.showMessageBox(bizagi.localization.getResource(\"workportal-widget-complexgateway-path\"),\r\n                            bizagi.localization.getResource(\"workportal-widget-complexgateway-error\"));\r\n                        return -1;\r\n                    } else {\r\n                        bizagi.workportal.tablet.popup.instance.dontClose = false;\r\n                        bizagi.workportal.tablet.popup.instance.close();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return popupResponse;\r\n    },\r\n\r\n    repaintComplexGateway: function () {\r\n        var self = this;\r\n        if (self.focus !== undefined) {\r\n            if (self.focus.idCaseObject !== undefined) {\r\n                if (self.focus.idCaseObject.isComplex !== undefined) {\r\n                    self.dataService.getWorkitems({\r\n                        idCase: self.focus.idCaseObject.idCase\r\n                    }).done(function (data) {\r\n                        if (data.workItems.length == 1) {\r\n                            if (data.workItems[0].taskType == \"ComplexGateway\") {\r\n                                var transitions = data.workItems[0].transitions;\r\n\r\n                                self.currentPopup = \"complexgateway\";\r\n                                $(document).triggerHandler(\"popupWidget\", {\r\n                                    widgetName: bizagi.workportal.widgets.widget.BIZAGI_WORKPORTAL_WIDGET_COMPLEXGATEWAY,\r\n                                    options: {\r\n                                        transitions: transitions,\r\n                                        sourceElement: \".ui-bizagi-form\",\r\n                                        insertAfter: \".ui-bizagi-form .ui-bizagi-button-container\",\r\n                                        height: 'auto',\r\n                                        offset: \"8 0\", //x y\r\n                                        activeScroll: false,\r\n                                        dontClose: true,\r\n                                        closed: function () {\r\n                                            self.currentPopup = null;\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /* METHOD TO ADD WARNINGS TO THE FORM\r\n    ======================================================*/\r\n    addWarning: function (message) {\r\n        var self = this;\r\n        self.warnings[message] = message;\r\n    },\r\n\r\n    /* METHOD TO ADD ERRORS TO THE FORM\r\n    ======================================================*/\r\n    addError: function (message) {\r\n        var self = this;\r\n        self.errors[message] = message;\r\n    },\r\n\r\n    /*  Executes a single button action\r\n    ======================================================= */\r\n    processButton: function (buttonProperties) {\r\n        var self = this;\r\n        var deferred = $.Deferred();\r\n\r\n        // Disable routing button\r\n        if (!bizagi.util.isObjectEmpty(self.errors)) {\r\n            deferred.resolve();\r\n            if (bizagi.util.parseBoolean(buttonProperties.routing))\r\n                return deferred.promise();\r\n        }\r\n\r\n        // Call base\r\n        return this._super(buttonProperties);\r\n    },\r\n\r\n\r\n    getNavigation: function () {\r\n        var params = this.getFormContainer().getParams();\r\n        return params.navigation;\r\n    },\r\n\r\n    getViewContainer: function () {\r\n        var params = this.getFormContainer().getParams();\r\n        return params.view_container;\r\n    },\r\n\r\n    isFloatingButtonsEnabled: function () {\r\n        var navigation = this.getNavigation();\r\n        return navigation && navigation.isFloatingButtonsEnabled();\r\n    },\r\n\r\n    isFormButtonsEnabled: function () {\r\n        var navigation = this.getNavigation();\r\n        return navigation && navigation.isFormButtonsEnabled();\r\n    },\r\n\r\n    /**\r\n     *   Adds an overlay to the form, and sets a waiting message\r\n     *\r\n     *   @argument {bool} delay Apply delay\r\n     */\r\n    startLoading: function () {\r\n        bizagi.loading.start();\r\n    },\r\n\r\n    /*\r\n    *   Removes the overlay and restores the form edition\r\n    */\r\n    endLoading: function () {\r\n        bizagi.loading.stop();\r\n    },\r\n\r\n    dispose: function (params) {\r\n        var self = this;\r\n\r\n        // Active refresh on tablet\r\n        if (typeof (params) === \"undefined\" || (typeof (params.isRefresh) === \"undefined\" || params.isRefresh == false)) {\r\n            self._super();\r\n        }\r\n    },\r\n\r\n    failHandler: function (error) {\r\n        var self = this;\r\n        self._super(error);\r\n\r\n        var error_obj = {};\r\n        try {\r\n            error_obj = JSON.parse(error) || {};\r\n        } catch (e) {\r\n            error_obj = (error.length && error.length > 1) ? error[0] : error;\r\n        } finally {\r\n\r\n            //This double validation has the purpose to get the real error object from two different levels ( error.error or error.error.error )\r\n            if (error_obj.error) error_obj = error_obj.error;\r\n            if (error_obj.error) error_obj = error_obj.error;\r\n\r\n            //trigger the routing event in order to refresh the case\r\n            if (typeof error_obj.code !== \"undefined\" && error_obj.code === \"AUTH_ERROR\") {\r\n\r\n                $.notifier.add({\r\n                    title: bizagi.localization.getResource(\"workportal-sessiontimeout-expired-title\", \"Your session has expired\"),\r\n                    text: bizagi.localization.getResource(\"render-idle-expired-error\", \"Idle timer expired. For safety reasons this view will be refreshed automatically in 5 seconds. Note that any unsaved data is lost.\").replace(\"%s\", \"5\"),\r\n                    sticky: false,\r\n                    time: 5000\r\n                });\r\n\r\n                setTimeout(function () {\r\n                    self.triggerHandler(\"routing\", {\r\n                        idCase: self.params.idCase,\r\n                        idWorkitem: self.params.idWorkitem\r\n                    });\r\n                }, 5000);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Build the container html\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"form\");\r\n        var idCase = \"\";\r\n\r\n        // Render the form\r\n        var html = $.fasttmpl(template, {\r\n            buttons: self.buttons,\r\n            transitions: self.transitions,\r\n            uniqueId: properties.uniqueId,\r\n            helptext: properties.helpText,\r\n            mode: self.getMode(),\r\n            queryForm: self.getFormType() == \"queryForm\",\r\n            summaryForm: self.params.summaryForm || false,\r\n            globalForm: self.properties.displayAsReadOnly || false,\r\n            idCase: idCase,\r\n            displayName: self.params.displayName || idCase,\r\n            processPath: properties.processPath,\r\n            breadCrumb: properties.breadCrumb,\r\n            orientation: properties.orientation\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Publish a global event that the facade will replicate, also will be triggered in the form\r\n     */\r\n    triggerGlobalHandler: function (eventType, data) {\r\n        var self = this;\r\n\r\n        if (!self.parent) {\r\n            if (self.observableElement) {\r\n                self.observableElement.trigger(eventType, data);\r\n            }\r\n        } else {\r\n            self.parent.triggerGlobalHandler(eventType, data);\r\n        }\r\n\r\n        return self._super(eventType, data);\r\n    },\r\n\r\n    /**\r\n     * Configure actions to complex-gateway\r\n     */\r\n    configureComplexGateway: function () {\r\n        var self = this;\r\n        var complexGatewayContainer;\r\n        var form = self.container;\r\n\r\n        if (form.length > 1) {\r\n            $(form.children()).each(function () {\r\n                if ($(this).hasClass('.bz-complex-gateway'))\r\n                    complexGatewayContainer = this;\r\n            });\r\n        } else {\r\n            complexGatewayContainer = $(\".bz-complex-gateway\", form);\r\n        }\r\n\r\n        // activeTransitions is used to store ids of activities in Complex Gateway\r\n        self.activeTransitions = {};\r\n\r\n        // Set events for complex gateway interface\r\n        $(\".bz-checkbox__input\", complexGatewayContainer).on(\"click\", function () {\r\n            var $selected = $(this);\r\n            var transitionId = $selected.data(\"value\") || \"\";\r\n\r\n            if (typeof self.activeTransitions[transitionId] == \"undefined\") {\r\n                self.activeTransitions[transitionId] = false;\r\n            }\r\n\r\n            self.activeTransitions[transitionId] = $selected.is(':checked') || false;\r\n\r\n        });\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi tablet Panel Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n */\r\n\r\n// Extends from container tablet base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.panel\", bizagi.rendering.panel.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.panel.extend(\"bizagi.rendering.tablet.panel\", {}, {});\r\n","/**\r\n *   Name: Bizagi Tablet ContentPanel Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the content panel class to adjust to tablet devices\r\n */\r\n\r\n// Extends from container tablet base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.contentPanel\", bizagi.rendering.contentPanel.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.contentPanel.extend(\"bizagi.rendering.tablet.contentPanel\", {}, {});\r\n","/*\r\n*   Name: Bizagi tablet Nested Form Extension\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define a nested form container class for tablet devices\r\n*/\r\n\r\n// Extends from panel tablet base\r\nbizagi.rendering.tablet.panel.extend(\"bizagi.rendering.tablet.nestedForm\", {}, {\r\n\r\n});","/**\r\n *   Name: Bizagi Tablet Tab Container Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n */\r\n\r\n// Extends from container tablet base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.tab\", bizagi.rendering.tab.prototype);\r\n// Auto extend\r\nbizagi.rendering.tablet.tab.extend(\"bizagi.rendering.tablet.tab\", {}, {\r\n\r\n    /* POST RENDER CONTAINER ACTIONS\r\n    =================================================*/\r\n    postRenderContainer: function (container) {\r\n        var self = this;\r\n\r\n        this._super(container);\r\n\r\n        container.material_bizagi_tabs({\r\n            direction: this.properties.orientation,\r\n            active_index_tab: this.activeTab\r\n        }).on(\"updateActive\", function (ev, info) {\r\n            ev.stopPropagation();\r\n\r\n            self.setActiveTab(info.index);\r\n\r\n        });\r\n\r\n        $(\"> .bz-tabs > .bz-tab\", container).rippleEffect();\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Panel Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n */\r\n\r\n// Extends from container tablet base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.tabItem\", bizagi.rendering.tabItem.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.tabItem.extend(\"bizagi.rendering.tablet.tabItem\", {}, {\r\n    /**\r\n     * Change selected item\r\n     *\r\n     * @param {} argument\r\n     * @returns {}\r\n     */\r\n    setAsActiveContainer: function (argument) {\r\n        var self = this;\r\n\r\n        $.when(self.ready()).done(function () {\r\n            var tabItem = $(\"[data-reference='#ui-bizagi-tab-\" + self.properties.id + \"']\", self.parent.tabs);\r\n\r\n            tabItem.css(\"display\", \"\");\r\n            tabItem.click();\r\n        });\r\n    },\r\n    /* \r\n    *   Focus on container\r\n    */\r\n    focus: function () {\r\n        // Activate the tab if it hasn't been loaded\r\n        this.activate();\r\n\r\n        // Set this tab as an active container\r\n        this.setAsActiveContainer();\r\n\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     *  Hides / Show container\r\n     *\r\n     * @param {} argument\r\n     * @returns {}\r\n     */\r\n    changeVisibility: function (argument) {\r\n        var self = this;\r\n\r\n        // Store in properties\r\n        self.properties.visible = bizagi.util.parseBoolean(argument);\r\n\r\n        $.when(self.ready()).done(function () {\r\n            var tabItem = $(\"[data-reference='#ui-bizagi-tab-\" + self.properties.id + \"']\", self.parent.tabs);\r\n            var activeTab = self.parent.container.material_bizagi_tabs(\"getActiveTab\");\r\n\r\n            // Hide - show the render\r\n            if (self.properties.visible) {\r\n                self.container.css(\"display\", \"\");\r\n                tabItem.css(\"display\", \"\");\r\n\r\n\r\n                if (self.properties.counter === activeTab.index) {\r\n                    tabItem.css(\"display\", \"\");\r\n                    self.setAsActiveContainer();\r\n                } else {\r\n                    self.container.css(\"display\", \"none\");\r\n                }\r\n            } else {\r\n                self.container.css(\"display\", \"none\");\r\n                tabItem.css(\"display\", \"none\");\r\n\r\n                // If we are focus in the same tab is going to be invisible\r\n                activeTab = self.parent.container.material_bizagi_tabs(\"getActiveTab\");\r\n\r\n                if (self.properties.counter === activeTab.index) {\r\n                    self.parent.container.material_bizagi_tabs(\"moveToNextTab\");\r\n                } else {\r\n                    self.parent.container.material_bizagi_tabs(\"refreshPositions\");\r\n                }\r\n            }\r\n        });\r\n    }\r\n});\r\n","/*\r\n*   Name: BizAgi tablet Horizontal Container Extension\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will redefine the horizontal container class to adjust to tablet devices\r\n*/\r\n\r\n// Extends from container tablet base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.horizontal\", bizagi.rendering.horizontal.prototype);\r\n// Auto extend\r\nbizagi.rendering.tablet.horizontal.extend(\"bizagi.rendering.tablet.horizontal\", {}, {\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi tablet Layout Extension\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will redefine the layout class to adjust to tablet devices\r\n*/\r\n\r\n// Extends from container desktop base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.layout\", bizagi.rendering.layout.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.layout.extend(\"bizagi.rendering.tablet.layout\", {}, {\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Tablet Accordion Container Extension\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will redefine the container class to adjust to tablet devices\r\n*/\r\n\r\n// Extends from container tablet base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.accordion\", bizagi.rendering.accordion.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.accordion.extend(\"bizagi.rendering.tablet.accordion\", {}, {\r\n\r\n})","/*\r\n*   Name: BizAgi Tablet Panel Extension\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will redefine the container class to adjust to tablet devices\r\n*/\r\n\r\n// Extends from container tablet base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.accordionItem\", bizagi.rendering.accordionItem.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.accordionItem.extend(\"bizagi.rendering.tablet.accordionItem\", {}, {\r\n\r\n\r\n    /* \r\n    *   Change selected item \r\n    */\r\n    setAsActiveContainer: function (argument) {\r\n        \r\n    },\r\n\r\n    /* \r\n    *   Focus on container\r\n    */\r\n    focus: function () {        \r\n        this.setAsActiveContainer();\r\n\r\n        // Call base\r\n        this._super();\r\n    }        \r\n});\r\n","/*\r\n *   Name: Bizagi Tablet Group Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the group class to adjust to tablet devices\r\n */\r\n\r\n// Extends from container tablet base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.group\", bizagi.rendering.group.prototype);\r\n// Auto extend\r\nbizagi.rendering.tablet.group.extend(\"bizagi.rendering.tablet.group\", {}, {\r\n\r\n    /**\r\n    * Method to customize the container's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        $(\">h5.bz-collapsible__header\", self.container).bind(\"click\", function () {\r\n            $(self.container).toggleClass(\"bz-collapsible--collapsed\");\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each container after processeds\r\n     * @param {} group      \r\n     */\r\n    postRenderContainer: function (group) {\r\n        // Call base\r\n        this._super(group);\r\n        if (this.properties.collapse) {\r\n            this.collapse();\r\n        }\r\n    },\r\n\r\n    /**\r\n    * Check if group its open\r\n    * \r\n    * @return boolean\r\n    */\r\n    isOpen: function () {\r\n        return this.container.hasClass(\"bz-collapsible--collapsed\") ? false : true;\r\n    },\r\n\r\n    /**\r\n     * Focus on container     \r\n     */\r\n    focus: function () {\r\n        // Expand container\r\n        this.expand();\r\n\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Expands group container \r\n     * @returns {} \r\n     */\r\n    expand: function () {\r\n        if (!this.isOpen()) {\r\n            $(\">h5.bz-collapsible__header\", this.container).trigger(\"click\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Collapses group container \r\n     * @returns {} \r\n     */\r\n    collapse: function () {\r\n        if (this.isOpen()) {\r\n            $(\">h5.bz-collapsible__header\", this.container).trigger(\"click\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Expands or collapse the container from actions\r\n     * @param {} argument      \r\n     */\r\n    toogleContainer: function (argument) {\r\n        if (argument) {\r\n            this.expand();\r\n        } else {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi tablet Search Form Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n */\r\n\r\nbizagi.rendering.tablet.form.extend(\"bizagi.rendering.tablet.searchForm\", bizagi.rendering.searchForm.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.searchForm.extend(\"bizagi.rendering.tablet.searchForm\", {}, {\r\n    /*\r\n    *   Render the results of the query\r\n    *   Resolved in each device\r\n    */\r\n    renderResult: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Creates grid definition\r\n        var data = {};\r\n        data.properties = {\r\n            displayName: self.getResource(\"render-search-advanced-results-label\"),\r\n            type: \"grid\",\r\n            xpath: \"searchForm\" + properties.id,\r\n            id: properties.id,\r\n            skipInitialLoad: true,\r\n            rowsPerPage: 10,\r\n            visible: false,\r\n            sortBy: properties.sortBy,\r\n            sortOrder: properties.sortOrder,\r\n            overrideGetRemoteData: function (params) {\r\n                return self.getRemoteData(params);\r\n            }\r\n        };\r\n\r\n        data.elements = [];\r\n\r\n        // Creates columns\r\n        var columns = properties.columns;\r\n        $.each(columns, function (i) {\r\n            var column = {\r\n                render: {}\r\n            };\r\n\r\n            column.render.properties = {\r\n                displayName: columns[i].caption,\r\n                xpath: columns[i].xpath,\r\n                editable: false\r\n            };\r\n\r\n            $.extend(column.render.properties, self.parseAdditionalProperties(columns[i].dataType));\r\n\r\n            // Next conditional added to print only columns and not labels\r\n            // if type = label then column is not rendered on the results table\r\n            if (columns[i].dataType == 0)\r\n                column.render.properties.columnVisible = false;\r\n\r\n            // if column is number or monetary push allowDecimals property\r\n            if (columns[i].dataType == 7 || columns[i].dataType == 8)\r\n                column.render.properties.allowDecimals = columns[i].allowDecimals;\r\n\r\n            // if column is real or float set allowDecimals property to true\r\n            if (columns[i].dataType == 10 || columns[i].dataType == 11)\r\n                column.render.properties.allowDecimals = true;\r\n\r\n            // if column is date push showtime property\r\n            if (columns[i].dataType == 12)\r\n                column.render.properties.showTime = columns[i].showTime;\r\n\r\n            data.elements.push(column);\r\n        });\r\n\r\n        var grid = self.renderFactory.getRender({\r\n            type: \"grid\",\r\n            data: data,\r\n            parent: self,\r\n            mode: self.getMode()\r\n        });\r\n\r\n        grid.properties.inlineAdd = false;\r\n        grid.properties.allowDelete = false;\r\n        grid.properties.allowAdd = false;\r\n        grid.properties.allowEdit = false;\r\n\r\n        // Saves reference\r\n        self.resultsGrid = grid;\r\n\r\n        return grid.render();\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize each container after processed\r\n    */\r\n    postRenderContainer: function (container) {\r\n        var self = this;\r\n        var searchCriteria = container.find(\".bz-container__search-criteria\");\r\n        var results = container.find(\".bz-container__search-results\");\r\n        var childrenElements = searchCriteria.children();\r\n        var mode = self.getMode();\r\n\r\n        // Process children elements\r\n        self.container = container;\r\n        $.each(childrenElements, function (i, childElement) {\r\n            childElement = $(childElement);\r\n            var id = Number(childElement.data(\"unique-id\"));\r\n            if (id) {\r\n                var child = self.childrenHash[id];\r\n                if (child) {\r\n                    var type = child.getElementType();\r\n                    if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER) child.postRenderElement(childElement);\r\n                    if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) child.postRenderContainer(childElement);\r\n                }\r\n            }\r\n        });\r\n\r\n        // Process result\r\n        var grid = $(results.children()[0]);\r\n        self.resultsGrid.postRenderElement(grid);\r\n\r\n        // Apply handlers\r\n        if (mode == \"execution\") {\r\n            self.configureHandlers();\r\n        }\r\n\r\n    \t// Configure view\r\n        if (mode == \"design\") {\r\n            self.configureDesignView();\r\n        }\r\n\r\n        // Configure view\r\n        if (mode == \"layout\") {\r\n\r\n            self.configureDesignView();\r\n            self.configureLayoutView();\r\n        }\r\n\r\n    },\r\n\r\n    /*\r\n    *   Customize the container's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n\r\n        // Saves reference\r\n        self.criteriaContainer = $(\".bz-container__search-criteria\", self.container);\r\n        self.resultsContainer = $(\".bz-container__search-results\", self.container);\r\n\r\n        // Bind to grid row select event\r\n        self.resultsGrid.bind(\"rowSelected\", function (e, ui) {\r\n            if (self.properties.searchParams.hasOwnProperty(\"multiSelect\")) {\r\n                self.trigger(\"multiSelect\", ui);\r\n            } else {\r\n                // Trigger event to bubble up to main container\r\n                self.trigger(\"instanceSelected\", ui);\r\n            }\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Refresh the result panel, making it to query data with current criteria\r\n    */\r\n    refreshResults: function () {\r\n        var self = this;\r\n\r\n        self.trigger(\"instancerefresh\");\r\n        self.resultsGrid.refresh();\r\n    },\r\n\r\n    /*\r\n    * Method added for IPAD version. Before showing search results form\r\n    */\r\n    onSearchFinished: function () {\r\n        var self = this;\r\n\r\n        if (!self.properties.deviceMaxRecordsExceeded) {\r\n\r\n            // Next line returns visibility with the results of the search\r\n            self.resultsGrid.changeVisibility(true);\r\n\r\n            if (self.properties)\r\n                if (self.properties.records == 0) {\r\n                    $(\".bz-container__search-results label\", self.container).hide();\r\n                } else {\r\n                    $(\".bz-container__search-results label\", self.container).show();\r\n                }\r\n        }\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Text Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the text render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.text\", bizagi.rendering.text.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.text.extend(\"bizagi.rendering.tablet.text\", {}, {\r\n\r\n    //#region Side effects functions\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n\r\n        // Set the default maxlenght for the input\r\n        if (this.properties.maxLength > 0) {\r\n            this.input.attr('maxlength', this.properties.maxLength);\r\n        }\r\n    },\r\n\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"text-readOnly\");\r\n        var value = this.getValue();\r\n        value = (typeof value !== \"undefined\" && value !== null) ? bizagi.util.sanitizeHTML(value) : \"\";\r\n\r\n        var data = {\r\n            value: value,\r\n            editable: this.properties.editable\r\n        };\r\n\r\n        return $.fasttmpl(template, data);\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n        value = this.validateValue((typeof (decodedValue) == \"string\" ? decodedValue : \"\"), self.properties.maxLength);\r\n\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n\r\n        if (value) {\r\n            value = $.br2nl(value).replaceAll('\\\\n', '\\n');\r\n        }\r\n\r\n        // Set value in input\r\n        if (self.properties.editable) {\r\n            self.input.val(value);\r\n        } else {\r\n            $(\".bz-text-readonly\", self.getControl()).html(bizagi.util.sanitizeHTML(value));\r\n        }\r\n    },\r\n\r\n    attachRetypeDouble: function () {\r\n        var self = this;\r\n        var element = self.element;\r\n\r\n        var input = $(\"input\", element);\r\n        if (!input || input.length === 0) return;\r\n\r\n        // Apply blur handler to check value\r\n        input.blur(function () {\r\n            var control = $(this);\r\n            self.retypeDouble(control);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Retype actions\r\n     * @param {} control\r\n     */\r\n    retypeDouble: function (control) {\r\n        var self = this;\r\n        var currentValue = control.val();\r\n        var isVisible = $(control).attr(\"type\") !== \"hidden\" && $(control).css(\"display\") !== \"none\" && $(control).css(\"visibility\") !== \"hidden\";\r\n\r\n        if (isVisible) {\r\n            if (!control.data(\"oldValue\") || $(this).data(\"oldValue\") === \"\") {\r\n\r\n                // Check that there is something in the value or if a value has already been set\r\n                if (currentValue === \"\" || currentValue === control.attr(\"newValue\")) return;\r\n\r\n                self.createTooltip(control, currentValue, self.getResource(\"render-number-retype\"))\r\n\r\n            } else {\r\n                // Check that there is something in the value\r\n                if (currentValue === \"\") return;\r\n\r\n                if (currentValue !== control.data(\"oldValue\")) {\r\n                    self.setValue(\"\");\r\n\r\n                    self.setValidationMessage(self.getResource(\"render-text-retype-error\"));\r\n                    control.val(\"\");\r\n\r\n                    setTimeout(function () {\r\n                        control.focus();\r\n                    }, 100);\r\n\r\n                } else {\r\n                    control.data(\"newValue\", currentValue);\r\n                }\r\n                control.data(\"oldValue\", \"\");\r\n                if (control.data('ui-tooltip')) control.tooltip('destroy');\r\n            }\r\n        }\r\n    },\r\n\r\n    getElementsToStylize: function ($context) {\r\n        return this.properties.editable ? $(\"input\", $context) : $(\".bz-text-readonly\", $context);\r\n    },\r\n\r\n    /**\r\n     * Helptext tooltip\r\n     * @param {} control\r\n     * @param {} currentValue\r\n     * @param {} currentTitle\r\n     */\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        this._super(control, currentValue, currentTitle);\r\n\r\n        $('body').bind('touchmove', function (e) {\r\n            $('body').unbind('touchmove');\r\n            if (control.data('ui-tooltip')) control.tooltip('destroy');\r\n        });\r\n    },\r\n\r\n    setValidationMessage: function (message) {\r\n        // Call base\r\n        this._super(message);\r\n        if (this.cloneRender) {\r\n            this.cloneRender.setValidationMessage(message);\r\n        }\r\n    },\r\n\r\n    //#endregion Side effects functions\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Text Extension\r\n *   Author: UI Forms Team\r\n *   Comments: Extended text implementation\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.extendedText\", bizagi.rendering.extendedText.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.extendedText.extend(\"bizagi.rendering.tablet.extendedText\", {\r\n    minLines: 2,\r\n    maxLines: 8,\r\n    maxCharactersToShow: 200\r\n}, {\r\n\r\n    //#region Side effects functions\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        self._super();\r\n        self.textarea = self.getControl().find(\"textarea\");\r\n        if (self.textarea) self.textarea.css({resize: \"vertical\"});\r\n    },\r\n\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n        var maxLines = this.properties.maxLines;\r\n        this.properties.maxLines = maxLines > this.Class.maxLines ? this.Class.maxLines : (maxLines < this.Class.minLines ? this.Class.minLines : maxLines);\r\n\r\n        // Check if offline forms is supported\r\n        this.isOfflineForm = bizagi.util.isOfflineForm({context: this});\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"extendedText-readOnly\");\r\n        var value = this.getValue();\r\n        value = (typeof value !== \"undefined\" && value !== null) ? bizagi.util.sanitizeHTML(value) : \"\";\r\n        var showChar = this.Class.maxCharactersToShow;\r\n\r\n        var startString = value.substr(0, showChar);\r\n        var endString = value.substr(showChar - 1, value.length - showChar);\r\n\r\n        var data = {\r\n            \"value\": value,\r\n            \"startString\": startString,\r\n            \"endString\": endString\r\n        };\r\n\r\n        return $.fasttmpl(template, data);\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the redered control\r\n     * @param {} value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n        decodedValue = (!bizagi.util.isEmpty(decodedValue) && typeof (decodedValue) !== \"string\") ? decodedValue.toString() : decodedValue;\r\n        value = self.validateValue(typeof (decodedValue) == \"string\" ? decodedValue : \"\", self.properties.maxLength);\r\n\r\n        // Call base        \r\n        self.setValue(value, false);\r\n\r\n        if (value) {\r\n            value = $.br2nl(value).replaceAll('\\\\n', '\\n');\r\n        }\r\n\r\n        // Set value in input\r\n        if (self.properties.editable) {\r\n            self.textarea.val(value);\r\n        } else {\r\n            $(\".bz-textarea-readonly\", self.getControl()).html(bizagi.util.sanitizeHTML(value));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super();\r\n\r\n        // Define max length of element\r\n        if (self.properties.maxLength > 0) {\r\n            self.textarea.attr(\"maxlength\", self.properties.maxLength);\r\n            self.actualMaxLength = self.properties.maxLength;\r\n        }\r\n        $(self.textarea).bind(\"focus keyup paste\", function (e) {\r\n            if (e.which === 8 || e.which === 46) {\r\n                var currentRow = self.textarea.prop(\"rows\");\r\n                if (currentRow > self.properties.maxLines) {\r\n                    self.textarea.prop(\"rows\", self.properties.maxLines);\r\n                }\r\n            }\r\n            self.updateTextareaSize(this);\r\n        });\r\n\r\n        $(self.textarea).bind(\"blur\", function (e) {\r\n            self.textarea.prop(\"rows\", self.properties.maxLines);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sets the functions when the control is readonly\r\n     */\r\n    configureHandlersReadOnly: function () {\r\n        var self = this;\r\n\r\n        var $control = this.getControl();\r\n        $(\".bz-textarea-readonly\", $control).on(\"click\", \".bz-read-more\", function (e) {\r\n            if ($(e.delegateTarget).hasClass(\"bz-textarea-readonly--active\")) {\r\n                $(e.delegateTarget).removeClass(\"bz-textarea-readonly--active\");\r\n                $(this).html(self.getResource(\"workportal-project-discussion-comment-viewmore\"));\r\n            } else {\r\n                $(e.delegateTarget).addClass(\"bz-textarea-readonly--active\");\r\n                $(this).html(self.getResource(\"workportal-project-discussion-comment-viewless\"));\r\n            }\r\n            return false;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Changes control's height when it's auto extended\r\n     * @param {Object} control HTML Object\r\n     */\r\n    updateTextareaSize: function (textarea) {\r\n        if (this.properties.autoExtend) {\r\n            var currentRows = $(textarea).prop(\"rows\");\r\n            if (textarea.scrollHeight > textarea.offsetHeight && currentRows >= this.Class.minLines && currentRows < this.Class.maxLines) {\r\n                //Extend the rows\r\n                $(textarea).prop(\"rows\", (currentRows + 1));\r\n                this.updateTextareaSize(textarea);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Handler of retype double actions\r\n     */\r\n    attachRetypeDouble: function () {\r\n        var self = this;\r\n        var element = self.element;\r\n\r\n        var input = $(\"input, textarea\", element);\r\n        if (!input || input.length === 0) return;\r\n\r\n        // Apply blur handler to check value\r\n        input.blur(function () {\r\n            var control = $(this);\r\n            var previousValue = self.previousValue;\r\n            var value = self.value;\r\n\r\n            if (previousValue != null && value != previousValue) {\r\n                if ($(this).data(\"newValue\") != undefined && control.val() != $(this).data(\"newValue\")) {\r\n                    $(this).data().newValue = undefined;\r\n                }\r\n            }\r\n\r\n            self.retypeDouble(control);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Retype actions\r\n     * @param {} control\r\n     */\r\n    retypeDouble: function (control) {\r\n        var self = this;\r\n        var currentValue = control.val();\r\n        var isVisible = $(control).attr(\"type\") !== \"hidden\" && $(control).css(\"display\") !== \"none\" && $(control).css(\"visibility\") !== \"hidden\";\r\n\r\n        if (isVisible) {\r\n            if (!control.data(\"oldValue\") || $(this).data(\"oldValue\") === \"\") {\r\n\r\n                // Check that there is something in the value or if a value has already been set\r\n                if (currentValue === \"\" || currentValue === control.attr(\"newValue\")) return;\r\n\r\n                self.createTooltip(control, currentValue, self.getResource(\"render-number-retype\"))\r\n\r\n            } else {\r\n                // Check that there is something in the value\r\n                if (currentValue === \"\") return;\r\n\r\n                if (currentValue !== control.data(\"oldValue\")) {\r\n                    self.setValue(\"\");\r\n\r\n                    self.setValidationMessage(self.getResource(\"render-text-retype-error\"));\r\n                    control.val(\"\");\r\n\r\n                    setTimeout(function () {\r\n                        control.focus();\r\n                    }, 100);\r\n\r\n                } else {\r\n                    control.data(\"newValue\", currentValue);\r\n                }\r\n                control.data(\"oldValue\", \"\");\r\n                if (control.data('ui-tooltip')) control.tooltip('destroy');\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Gets jQuery Object to stylize\r\n     * @param {jQuery Object} $context jQuery Object\r\n     */\r\n    getElementsToStylize: function ($context) {\r\n        return this.properties.editable ? $(\"textarea\", $context) : $(\".bz-textarea-readonly\", $context);\r\n    },\r\n\r\n    /**\r\n     * Helptext tooltip\r\n     * @param {} control\r\n     * @param {} currentValue\r\n     * @param {} currentTitle\r\n     */\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        this._super(control, currentValue, currentTitle);\r\n\r\n        $('body').bind('touchmove', function (e) {\r\n            $('body').unbind('touchmove');\r\n            if (control.data('ui-tooltip')) control.tooltip('destroy');\r\n        });\r\n    },\r\n\r\n    setValidationMessage: function (message) {\r\n        // Call base\r\n        this._super(message);\r\n\r\n        if (this.cloneRender) {\r\n            this.cloneRender.setValidationMessage(message);\r\n        }\r\n    }\r\n\r\n    //#endregion Side effects functions\r\n});","/**\r\n *   Name: Bizagi Tablet Render Label Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the label render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.label\", bizagi.rendering.label.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.label.extend(\"bizagi.rendering.tablet.label\", {}, {});","/**\r\n *   Name: Bizagi Tablet Render Number Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the number render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.number\", bizagi.rendering.number.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.number.extend(\"bizagi.rendering.tablet.number\", {}, {\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"number\");\r\n\r\n        return $.fasttmpl(template, {\r\n            value: self.getDisplayValue(),\r\n            editable: self.properties.editable,\r\n            type: \"text\",\r\n            isDesign: self.getMode() !== \"execution\"\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self.setValue(value, false);\r\n\r\n        // Set value in input\r\n        if (value != null && self.properties.editable) {\r\n            self.numericInput.val(value);\r\n\r\n            self.value = self.properties.value = value;\r\n\r\n            // Formats the input\r\n            self.executeFormatCurrencyPlugin();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Retype function\r\n     */\r\n    attachRetypeDouble: function () {\r\n        var self = this;\r\n        var element = self.element;\r\n\r\n        var input = $(\"input\", element);\r\n        if (!input || input.length === 0) return;\r\n\r\n        // Apply blur handler to check value\r\n        input.blur(function () {\r\n            var control = $(this);\r\n            var previousValue = self.previousValue;\r\n            var value = self.value;\r\n            var typeControl = self.parent.properties.type;\r\n\r\n            if (typeControl === \"grid\") {\r\n                if (previousValue != null && value !== previousValue) {\r\n                    if ($(this).data(\"newValue\") !== undefined && control.val() !== $(this).data(\"newValue\"))\r\n                        $(this).data().newValue = undefined;\r\n                }\r\n\r\n                self.retypeDouble(control);\r\n            } else {\r\n                self.retypeDouble(control);\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Retype function\r\n     * @param control\r\n     */\r\n    retypeDouble: function (control) {\r\n        var self = this;\r\n        var currentValue = control.val();\r\n        var isVisible = $(control).attr(\"type\") !== \"hidden\" && $(control).css(\"display\") !== \"none\" &&\r\n            $(control).css(\"visibility\") !== \"hidden\";\r\n\r\n        if (isVisible && $(this).data(\"newValue\") == undefined) {\r\n\r\n            if (!control.data(\"oldValue\") || $(this).data(\"oldValue\") === \"\") {\r\n\r\n                // Check that there is something in the value or if a value has already been set\r\n                if (currentValue === \"\" || currentValue === control.attr(\"newValue\")) return;\r\n\r\n                self.createTooltip(control, currentValue, self.getResource(\"render-number-retype\"))\r\n\r\n            } else {\r\n                // Check that there is something in the value\r\n                if (currentValue === \"\") return;\r\n\r\n                if (currentValue !== control.data(\"oldValue\")) {\r\n                    self.setValue(\"\");\r\n\r\n                    self.createTooltip(control, \"\", self.getResource(\"render-text-retype-error\"))\r\n                } else {\r\n\r\n                    control.data(\"newValue\", currentValue);\r\n                    control.data(\"oldValue\", \"\");\r\n\r\n                    // Destroy tooltips\r\n                    control.tooltip(\"destroy\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Context to apply styles\r\n     * @param context\r\n     * @returns {jQuery|HTMLElement}\r\n     */\r\n    getElementsToStylize: function ($context) {\r\n        return $(\"input\", $context); \r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Money Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the money render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.money\", bizagi.rendering.number.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.money.extend(\"bizagi.rendering.tablet.money\", bizagi.rendering.money.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.money.extend(\"bizagi.rendering.tablet.money\", {}, {\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"number\");\r\n\r\n        return $.fasttmpl(template, {\r\n            value: self.getDisplayValue(),\r\n            editable: self.properties.editable,\r\n            type: \"text\",\r\n            isDesign: self.getMode() !== \"execution\"\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self.setValue(value, false);\r\n\r\n        // Set value in input\r\n        if (value !== undefined && value !== null && self.properties.editable) {\r\n            self.numericInput.val(value);\r\n\r\n            // Formats the input\r\n            self.executeFormatCurrencyPlugin();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Context to apply styles\r\n     * @param context\r\n     * @returns {jQuery|HTMLElement}\r\n     */\r\n    getElementsToStylize: function ($context) {\r\n        return $(\"input\", $context); \r\n    }\r\n});\r\n","/*\r\n *   Name: Bizagi Rendering Tablet numberScientificNotation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a base class to define the Scientific number notation\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.numberScientificNotation\", bizagi.rendering.numberScientificNotation.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.numberScientificNotation.extend(\"bizagi.rendering.tablet.numberScientificNotation\", {}, {    \r\n\r\n    /*\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        self.inputDisplay = $('input', control).first();\r\n        self.numericInput = self.input = $('input', control).last();\r\n\r\n        // Add numeric plugin to avoid invalid keystrokes\r\n        self.numericInput.numericSN(self.properties.decimalSymbol);\r\n\r\n        // Attach Format Currency Plugin to format the input\r\n        self.attachFormatSientificNotation();\r\n\r\n    },\r\n\r\n    setDisplayValue: function(value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var value = bizagi.util.scientificNotationFormat(value, properties.decimalSymbol, 38);\r\n        var displayValue = bizagi.util.scientificNotationFormat(value, properties.decimalSymbol, 20);\r\n\r\n\r\n        this._super(displayValue);\r\n\r\n        // Set value in input\r\n        if (value != null && properties.editable) {\r\n            self.numericInput.val(value);\r\n            self.inputDisplay.val(displayValue);\r\n        }\r\n\r\n    },\r\n\r\n    attachFormatSientificNotation: function () {\r\n        var self = this;\r\n\r\n        self.inputDisplay.focus(function(){\r\n            $(this).val(self.getDisplayValue());\r\n        });\r\n\r\n        // Attach events\r\n        self.inputDisplay.blur(function () {\r\n            if (typeof (self.getFormContainer().validationController) == \"undefined\") self.getFormContainer().validationController = new bizagi.command.controllers.validation(self.getFormContainer(), self.validations);\r\n\r\n            var scientificNotationNumber = bizagi.util.scientificNotationFormat(self.inputDisplay.val(), self.properties.decimalSymbol,  38);\r\n            var scientificNotationNumberDisplay = bizagi.util.scientificNotationFormat(self.inputDisplay.val(), self.properties.decimalSymbol,  20);\r\n\r\n            self.numericInput.val(scientificNotationNumber);\r\n            self.inputDisplay.val(scientificNotationNumberDisplay);\r\n            // Updates internal value\r\n            self.setValue(scientificNotationNumber);\r\n        });\r\n    }\r\n});","/**\r\n *   Name: Bizagi Tablet Render Date Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the Date render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.date\", bizagi.rendering.date.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.date.extend(\"bizagi.rendering.tablet.date\", {\r\n    MAX_YEARS_DISPLAY: 100\r\n}, {\r\n\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var value = this.getFormattedDate(this.getValue(), this.properties.showTime, true)\r\n        value = bizagi.util.dateFormatter.formatDate(value, this.properties.fullFormat);\r\n        var data = {value: value, editable: this.properties.editable};\r\n        var template = this.renderFactory.getTemplate(\"readonly\");\r\n        return $.fasttmpl(template, data);\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this.input = $(\"input\", this.getDateControl());\r\n    },\r\n\r\n    /**\r\n     * To configure the mobiscroll plugin\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n        this.input = $(\"input\", this.getDateControl());\r\n    },\r\n\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var controlElements = self.properties.showTime ? [\"calendar\", \"time\"] : [\"calendar\"];\r\n\r\n        var defaultDateControl = self.getFormattedDate(self.properties.value, self.properties.showTime, true);\r\n        var minDateControl = self.getFormattedDate(self.properties.minValue, self.properties.showTime, false);\r\n        var maxDateControl = self.getFormattedDate(self.properties.maxValue, self.properties.showTime, false);\r\n\r\n        var timeFormat = self.properties.showTime ? self.getTimeFormat() : \"\";\r\n\r\n        // Adds a gap of years to show if the user doest not include min years\r\n        if (isNaN(Date.parse(minDateControl))) {\r\n            minDateControl = new Date();\r\n            minDateControl.setFullYear(minDateControl.getFullYear() - self.Class.MAX_YEARS_DISPLAY);\r\n            minDateControl.setHours(0, 0, 0, 0);\r\n        }\r\n\r\n        // Adds a gap of years to show if the user doest not include min years\r\n        if (isNaN(Date.parse(maxDateControl))) {\r\n            maxDateControl = new Date();\r\n            maxDateControl.setFullYear(maxDateControl.getFullYear() + self.Class.MAX_YEARS_DISPLAY);\r\n            maxDateControl.setHours(23, 59, 59);\r\n        }\r\n\r\n        $(\".bz-input-icon\", this.getControl()).mobiscroll().calendar({\r\n            mode: \"mixed\", // Specify scroller mode like: mode: 'mixed' or omit setting to use default\r\n            display: \"bottom\", // Specify display mode like: display: 'bottom' or omit setting to use default\r\n            controls: controlElements,\r\n            min: minDateControl,\r\n            max: maxDateControl,\r\n            defaultValue: defaultDateControl,\r\n            timeFormat: timeFormat,\r\n            showScrollArrows: true,\r\n            lang: bizagi.util.languages[BIZAGI_LANGUAGE] || \"en\",\r\n            headerText: \"{value}\",\r\n            buttons: [\r\n                \"set\",\r\n                {\r\n                    text: this.getResource(\"render-plugin-search-users-clear-button-name\"),\r\n                    handler: function (e, inst) {\r\n                        self.date = undefined;\r\n                        self.time = undefined;\r\n                        self.timeS = undefined;\r\n                        self.onChangeHandler(true);\r\n                        inst.clear();\r\n                    }\r\n                },\r\n                \"cancel\"\r\n            ],\r\n            onSet: function (valueText, inst) {\r\n                var data = inst.getVal();\r\n                self.date = {\"day\": data.getDate(), \"month\": data.getMonth(), \"year\": data.getFullYear()};\r\n\r\n                //Checks if its has time, and included it\r\n                if (self.properties.showTime) {\r\n                    self.time = {\"hours\": data.getHours(), \"minutes\": data.getMinutes()};\r\n                    if (!self.is24h) {\r\n                        self.timeS = data.getHours() < 12 ? \"am\" : \"pm\";\r\n                    }\r\n                }\r\n\r\n                self.onChangeHandler();\r\n            },\r\n            onBeforeShow: function (event, inst) {\r\n                // Your custom event handler goes here\r\n                self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\r\n                self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n\r\n                self.changeMinValue(self.properties.minValue);\r\n                self.changeMaxValue(self.properties.maxValue);\r\n\r\n                //TODO temporal fix in ios tablet when a notification container is already displayed (QAF-6385 / MOB-171), review mobiscroll.min versions\r\n                if (bizagi.util.isiOSDevice()) {\r\n                    $(\".ui-bizagi-notifications-container\").css(\"display\", \"none\");\r\n                }\r\n            },\r\n            onClose: function (event, inst) {\r\n                // Your custom event handler goes here\r\n                self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                $(\".mbsc-fr-scroll\").css(\"overflow-y\", \"auto\");\r\n            },\r\n            onShow: function (event, inst) {\r\n                $(\".mbsc-fr-scroll\").css(\"overflow-y\", \"hidden\");\r\n            }\r\n        });\r\n\r\n        // Bind event for change value\r\n        this.input.on(\"focus\", function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            if (bizagi.util.isCordovaSupported() && bizagi.util.isAndroidDevice()) {\r\n                cordova.plugins.Keyboard.disableScroll(true);\r\n                cordova.plugins.Keyboard.close();\r\n            }\r\n        });\r\n\r\n        //Set input displayValue if it has default value\r\n        if (self.properties.displayValue === \"\" && self.properties.value) {\r\n            var date = self.getFormattedDate(self.properties.value, self.properties.showTime, true, false);\r\n            if (typeof (date) !== \"undefined\") {\r\n                var displayValue = bizagi.util.dateFormatter.formatDate(date, self.properties.fullFormat);\r\n                this.input.prop(\"value\", displayValue);\r\n            }\r\n        }\r\n\r\n        this.input.attr(\"keyboard\", \"disable\");\r\n    },\r\n\r\n    /**\r\n     * Configure the timeformat\r\n     */\r\n    getTimeFormat: function () {\r\n        if (this.properties.timeFormat.indexOf(\"H\") !== -1 || this.properties.timeFormat.indexOf(\"HH\") !== -1) {\r\n            this.is24h = true;\r\n            return \"HH:ii\";\r\n        } else {\r\n            this.is24h = false;\r\n            return \"hh:ii A\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Get Date whit the Invariant and ISO Format applied.\r\n     */\r\n    getFormattedDate: function (date, showTime, initializer) {\r\n        var self = this;\r\n\r\n        if (!date || bizagi.util.isObjectEmpty(date)) return;\r\n        date = (typeof date != \"string\") ? date.toString() : date;\r\n        //There are some dates that haven't time,... actions and validations for example or when we have to put a initial value (default value without time),\r\n        //in that cases we should identify the case and if the date haven't the time value, we have to add (00:00:00) it to can apply the format (getDateFromInvariant).\r\n        var time = (showTime && (self.getTime() === \"0:0\" || initializer)) ? \" \" + date.substr(date.length - 8, date.length) : \"\";\r\n\r\n        var currentDate = (initializer && showTime && time.split(\"/\").length > 1) || (date.split(\":\").length === 1) ? date += \" 00:00:00\" : date;\r\n        date = bizagi.util.dateFormatter.getDateFromInvariant(currentDate, showTime);\r\n\r\n        var currentTime = showTime ? time !== \"\" ? time : \" \" + self.getTime() : \" 00:00\";\r\n        var fullDateFormated = self.setHour(self.getFullFormatedDate(date, currentTime));\r\n\r\n        fullDateFormated = bizagi.util.dateFormatter.getDateFromISO(fullDateFormated, true);\r\n\r\n        return fullDateFormated;\r\n    },\r\n\r\n    /**\r\n     * Changes the render min value\r\n     * @param {} value\r\n     */\r\n    changeMinValue: function (value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var dateControl = self.getDateControl();\r\n\r\n        // Set value in control\r\n        if (value && self.properties.editable) {\r\n            if (typeof (value) === \"number\") {\r\n                value = new Date(value);\r\n                dateControl.mobiscroll('option', {min: value});\r\n                value = bizagi.util.dateFormatter.formatInvariant(value, properties.showTime); // Set as invariant\r\n            } else {\r\n                dateControl.mobiscroll('option', {min: bizagi.util.dateFormatter.getDateFromInvariant(value, true)});\r\n            }\r\n\r\n            properties.minValue = value;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Changes the render max value\r\n     * @param {} value\r\n     */\r\n    changeMaxValue: function (value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var dateControl = self.getDateControl();\r\n\r\n        // Set value in control\r\n        if (value && self.properties.editable) {\r\n            if (typeof (value) === \"number\") {\r\n                value = new Date(value);\r\n                dateControl.mobiscroll('option', {max: value});\r\n                value = bizagi.util.dateFormatter.formatInvariant(value, properties.showTime); // Set as invariant\r\n            } else {\r\n                dateControl.mobiscroll('option', {max: bizagi.util.dateFormatter.getDateFromInvariant(value, true)});\r\n            }\r\n\r\n            properties.maxValue = value;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Set the display value on input\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var date = self.getFormattedDate(value, self.properties.showTime, false);\r\n        var displayValue = self.preprocessDateValue(date);\r\n\r\n        self.input = self.input ? self.input : self.getDateControl();\r\n\r\n        if (self.properties.editable === false) {\r\n            // Render as simple value\r\n            if (typeof (displayValue) === \"string\" || typeof (displayValue) === \"number\") {\r\n                self.input.html(displayValue);\r\n            }\r\n        } else {\r\n            self.input.prop(\"value\", displayValue);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Get the DOM Control\r\n     */\r\n    getDateControl: function () {\r\n        return $(\".bz-input-icon\", this.getControl());\r\n    },\r\n\r\n    /**\r\n     * Get Time from mobiscroll\r\n     */\r\n    getTime: function () {\r\n        var self = this;\r\n\r\n        //Converting the time in 24h format.\r\n        if (self.properties.showTime && (self.time && self.time[\"minutes\"] !== \"\")) {\r\n            var time = self.time[\"hours\"] + \":\" + self.time[\"minutes\"];\r\n            time += self.timeS;\r\n\r\n            if (time.indexOf(\"am\") != -1 && self.time[\"hours\"] == 12) {\r\n                time = time.replace(\"12\", \"0\");\r\n            }\r\n\r\n            if (time.indexOf(\"pm\") != -1 && self.time[\"hours\"] < 12) {\r\n                time = time.replace(self.time[\"hours\"], (parseInt(self.time[\"hours\"]) + 12));\r\n            }\r\n\r\n            return time.replace(/(am|pm)/, '');\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Get Date from mobiscroll\r\n     * */\r\n    getDate: function () {\r\n        if (this.date && this.date[\"month\"] !== \"\") {\r\n            return this.date[\"year\"] + \"-\" + (parseInt(this.date[\"month\"]) + 1) + \"-\" + this.date[\"day\"];\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Set the control value when the control change\r\n     */\r\n    onChangeHandler: function (isClearButton) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var currentDate = self.getDate();\r\n        var currentTime = (properties.showTime) ? \" \" + self.getTime() : \" 0:00\";\r\n\r\n        // If curren date is empty reset actual value\r\n        if ((currentDate === \"\" && !properties.showTime) || (currentDate === \"\" && currentTime === \"\") || (isClearButton)) {\r\n            self.setValue(\"\");\r\n            self.input.prop('value', \"\");\r\n            properties.displayValue = \"\";\r\n        } else {\r\n            var formatedFullDate = self.setHour(self.getFullFormatedDate(currentDate, currentTime));\r\n\r\n            formatedFullDate = bizagi.util.dateFormatter.getDateFromISO(formatedFullDate, true);\r\n\r\n            if (!formatedFullDate || formatedFullDate == 0) return;\r\n\r\n            // Set date value\r\n            self.setNewDateValue(formatedFullDate, properties.showTime);\r\n\r\n            var displayValue = self.preprocessDateValue(formatedFullDate);\r\n            properties.displayValue = displayValue;\r\n\r\n            self.input.prop(\"value\", self.properties.displayValue);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Apply the final format that will be showed on the input\r\n     */\r\n    getFullFormatedDate: function (currentDate, currentTime) {\r\n        var fullDate = \"\";\r\n\r\n        if (currentDate.length > 0) {\r\n            fullDate = currentDate;\r\n        } else if (currentDate !== undefined) {\r\n            fullDate = bizagi.util.dateFormatter.formatISO(currentDate, false);\r\n        } else {\r\n            fullDate = bizagi.util.dateFormatter.formatISO(new Date(), false);\r\n        }\r\n\r\n        fullDate += currentTime;\r\n        var dateFromFormat = bizagi.util.dateFormatter.getDateFromFormat(fullDate, \"yyyy-MM-dd H:m\");\r\n\r\n        return bizagi.util.dateFormatter.formatDate(dateFromFormat !== 0 ? dateFromFormat : currentDate, \"yyyy-MM-dd H:mm:ss\");\r\n    },\r\n\r\n    /**\r\n     * Set the control value\r\n     */\r\n    setNewDateValue: function (formatedFullDate, showTime) {\r\n        var value = \"\";\r\n\r\n        if (formatedFullDate != \"\")\r\n            value = bizagi.util.dateFormatter.formatInvariant(formatedFullDate, showTime);\r\n\r\n        this.setValue(value);\r\n    },\r\n\r\n    /**\r\n     * Removing the time when be necesary\r\n     */\r\n    applyDateFormat: function (date, showTime) {\r\n        if (!showTime) {\r\n            var initIndexTime = null;\r\n\r\n            if (date.indexOf(\"00:00\") != -1) {\r\n                initIndexTime = date.indexOf(\"00:00\");\r\n            } else if (date.indexOf(\"0:00\") != -1) {\r\n                initIndexTime = date.indexOf(\"0:00\");\r\n            } else if (date.indexOf(\"12:00\") != -1) {\r\n                initIndexTime = date.indexOf(\"12:00\");\r\n            } else {\r\n                initIndexTime = \"-1\";\r\n            }\r\n\r\n            var endIndexTime = initIndexTime + 8;\r\n            date = initIndexTime === -1 ? date : date.replace(date.substring(initIndexTime, endIndexTime), \"\").replace(\" am\", \"\").replace(\" pm\", \"\");\r\n        }\r\n\r\n        return date;\r\n    },\r\n\r\n    /*\r\n     *  Checks if the date could be localized using site language\r\n     */\r\n    preprocessDateValue: function (date) {\r\n        return bizagi.util.dateFormatter.formatDate(date, this.properties.fullFormat);\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var bValid = true;\r\n        var value = self.getValue();\r\n\r\n        if (value) {\r\n            if (bizagi.util.parseBoolean(properties.editable)) {\r\n                value = bizagi.util.dateFormatter.getDateFromInvariant(value);\r\n\r\n                if (value != 0) {\r\n                    // Clear time for validations\r\n                    value.setHours(0, 0, 0, 0);\r\n\r\n                    // Check min value and max value\r\n                    if (properties.minValue && typeof (properties.minValue) === 'string') {\r\n                        bValid = self.validateMinAndMaxValue(value, true, properties, invalidElements) ? false : bValid;\r\n                    }\r\n\r\n                    if (properties.maxValue && typeof (properties.maxValue) === 'string') {\r\n                        bValid = self.validateMinAndMaxValue(value, false, properties, invalidElements) ? false : bValid;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (bizagi.util.parseBoolean(properties.editable)) {\r\n            // Check required\r\n            if (properties.required && !self.hasValue()) {\r\n                self.showMandatoryMessage(properties, invalidElements);\r\n            }\r\n        }\r\n\r\n        if (bValid) {\r\n            // Clear error message\r\n            self.setValidationMessage(\"\");\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * To validate the min and max values\r\n     * @param {} value\r\n     * @param {} isMinValue\r\n     * @param {} properties\r\n     * @param {} invalidElements\r\n     */\r\n    validateMinAndMaxValue: function (value, isMinValue, properties, invalidElements) {\r\n        var vValue = bizagi.util.dateFormatter.getDateFromInvariant(isMinValue ? properties.minValue : properties.maxValue);\r\n\r\n        //In case the value from the minValue or maxValue are assigned from a Date control that does not have the option  \"showTime!\r\n        if (vValue == 0) {\r\n            var resultValue = \"\";\r\n            if (properties.timeFormat.indexOf(\":ss\") == -1) {\r\n                if (isMinValue) {\r\n                    resultValue = properties.minValue + \":00\";\r\n                } else {\r\n                    resultValue = properties.maxValue + \":00\";\r\n                }\r\n            }\r\n\r\n            vValue = bizagi.util.dateFormatter.getDateFromFormat(resultValue, properties.fullFormat + \":ss\");\r\n        }\r\n\r\n        vValue.setHours(0, 0, 0, 0);\r\n\r\n        if ((isMinValue && value < vValue) || (!isMinValue && value > vValue)) {\r\n            var formatedDate = bizagi.util.dateFormatter.formatDate(vValue, properties.fullFormat);\r\n            var message = \"\";\r\n\r\n            if (isMinValue) {\r\n                message = this.getResource(\"render-date-minimum-validation\").replaceAll(\"#label#\", properties.displayName).replaceAll(\"#minValue#\", formatedDate);\r\n            } else {\r\n                message = this.getResource(\"rendr-date-maximum-validation\").replaceAll(\"#label#\", propertiee).replaceAll(\"#maxValue#\", formatedDate);\r\n            }\r\n\r\n            invalidElements.push({xpath: properties.xpath, message: message});\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * To show the mandatory values message\r\n     * */\r\n    showMandatoryMessage: function (properties, invalidElements) {\r\n        var self = this;\r\n        var message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n\r\n        invalidElements.push({xpath: properties.xpath, message: message});\r\n\r\n        return false;\r\n    },\r\n\r\n    setHour: function (date) {\r\n        return date.replace(\" 0:\", \" 00:\").replace(\" 1:\", \" 01:\").replace(\" 2:\", \" 02:\").replace(\" 3:\", \" 03:\").replace(\" 4:\", \" 04:\").replace(\" 5:\", \" 05:\").replace(\" 6:\", \" 06:\").replace(\" 7:\", \" 07:\").replace(\" 8:\", \" 08:\").replace(\" 9:\", \" 09:\");\r\n    },\r\n\r\n    /**\r\n     * Cleans the control fields as it requires\r\n     */\r\n    clearDisplayValue: function () {\r\n        var self = this;\r\n\r\n        self.date = undefined;\r\n        self.time = undefined;\r\n        self.timeS = undefined;\r\n        self.onChangeHandler(true);\r\n        self.setDisplayValue('');\r\n    },\r\n    isValidMinMaxValue: function () {\r\n        var self = this;\r\n        var isValid = true;\r\n        var value = self.getValue();\r\n\r\n        if (value) {\r\n            value = bizagi.util.dateFormatter.getDateFromInvariant(value);\r\n\r\n            if (value !== 0) {\r\n                // Clear time for validations\r\n                value.setHours(0, 0, 0, 0);\r\n\r\n                // Check min value and max value\r\n                if (self.properties.minValue && typeof (self.properties.minValue) === 'string')\r\n                    isValid = self.validateMinAndMaxValue(value, true);\r\n\r\n                if (self.properties.maxValue && typeof (self.properties.maxValue) === 'string')\r\n                    isValid = self.validateMinAndMaxValue(value, false);\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    },\r\n\r\n    validateMinAndMaxValue: function (currentDate, isMinValue) {\r\n        var self = this;\r\n        var date = isMinValue ? self.properties.minValue : self.properties.maxValue;\r\n        var formattedDate = bizagi.util.dateFormatter.getDateFromInvariant(date);\r\n\r\n        formattedDate.setHours(0, 0, 0, 0);\r\n\r\n        return !((isMinValue && currentDate < formattedDate) || (!isMinValue && currentDate > formattedDate));\r\n\r\n    },\r\n\r\n    getElementsToStylize: function ($context) {\r\n        return $(\"input\", $context);\r\n    }\r\n});","/**\r\n *   Name: Bizagi Tablet Render Yes-No Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the Yes-No render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.yesno\", bizagi.rendering.yesno.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.yesno.extend(\"bizagi.rendering.tablet.yesno\", {}, {\r\n\r\n    /**\r\n     * Method to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var $control = this.getControl();\r\n        this.radio = $control.find(\"input[type=radio]\");\r\n\r\n        if (this.properties.editable && (this.value == null || this.value === undefined) && this.properties.value != null) {\r\n            this.value = this.properties.value;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"readonly\");\r\n\r\n        return $.fasttmpl(template, {value: this.getDisplayValue()});\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        var $control = this.getControl();\r\n        this.radio = $control.find(\"input\");\r\n\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var $control = this.getControl();\r\n        var parsedValue = bizagi.util.parseBoolean(value);\r\n\r\n        this.setValue(parsedValue, false);\r\n        if (this.properties.editable) {\r\n            if (parsedValue) {\r\n                $control.find(\"input[value=true]\").prop('checked', true);\r\n                $control.find(\"input[value=false]\").prop('checked', false);\r\n            } else {\r\n                $control.find(\"input[value=false]\").prop('checked', true);\r\n                $control.find(\"input[value=true]\").prop('checked', false);\r\n            }\r\n        } else {\r\n            this.radio.val((this.getDisplayValue()));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n\r\n        self.radio.change(function () {\r\n            var $selected = $(this);\r\n            var value = $selected.prop('value');\r\n\r\n            if (self.value !== value) {\r\n                self.setValue(value);\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Context to apply styles\r\n     * @param context\r\n     * @returns {jQuery|HTMLElement}\r\n     */\r\n    getElementsToStylize: function (context) {\r\n        return $(\"label.bz-radio__label\", context);\r\n    },\r\n\r\n    /**\r\n     * Cleans current data\r\n     */\r\n    cleanData: function () {\r\n        var value = {id: \"\", label: \"\"};\r\n        this.setValue(value, false);\r\n\r\n        this.clearDisplayValue();\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     */\r\n    clearDisplayValue: function () {\r\n        if (this.properties.editable) {\r\n            this.radio.prop('checked', false);\r\n        } else {\r\n            this.radio.val(this.getDisplayValue());\r\n        }\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Check\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the Check render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.check\", bizagi.rendering.check.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.check.extend(\"bizagi.rendering.tablet.check\", {}, {\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var $control = this.getControl();\r\n        this.check = $control.find(\"input\");\r\n\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"readonly\");\r\n\r\n        return $.fasttmpl(template, {value: this.getDisplayValue()});\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        var $control = this.getControl();\r\n        this.check = $control.find(\"input\");\r\n\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Render as simple value\r\n        var displayValue = bizagi.util.parseBoolean(value);\r\n\r\n        // Set internal value\r\n        this.setValue(displayValue, false);\r\n\r\n        if (this.properties.editable) {\r\n            if (displayValue) {\r\n                this.check.attr(\"checked\", \"checked\");\r\n            } else {\r\n                this.check.removeAttr(\"checked\");\r\n            }\r\n        } else {\r\n            this.check.val((this.getDisplayValue()));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n\r\n        this.check.on(\"click\", function (evt) {\r\n            var isCheck = $(this).is(':checked');\r\n\r\n            self.setValue(isCheck, true);\r\n\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Cleans current data\r\n     */\r\n    cleanData: function () {\r\n        this.setDisplayValue(false);\r\n        this.setValue(false, false);\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Tablet Render option select\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   Renders an option html input with attached handlers\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.combo\", bizagi.rendering.combo.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.combo.extend(\"bizagi.rendering.tablet.combo\", {\r\n    /*\r\n     *   Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"combo\");\r\n\r\n        return $.fasttmpl(template, {\r\n            editable: this.properties.editable,\r\n            value: this.getDisplayValue()\r\n        });\r\n\r\n    },\r\n\r\n    postRender: function() {\r\n        var $control = this.getControl();\r\n\r\n        this._super();\r\n\r\n        this.combo = $control.find(\"input\");\r\n        this.itemSelected = undefined;\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"readonly\");\r\n\r\n        return $.fasttmpl(template, {value: this.getDisplayValue()});\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        var $control = this.getControl();\r\n        this.combo = $control.find(\"input\");\r\n    },\r\n\r\n    /**\r\n     * Add event handlers to the combo control\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        if (self.getMode() !== \"execution\") {\r\n            return;\r\n        }\r\n\r\n        $(\".bz-form-combo\", control).bind(\"click\", function () {\r\n\r\n            $(this).mobileView({\r\n                customHeader: $.fasttmpl(self.renderFactory.getTemplate(\"modal-header-search\"), {}),\r\n                displayName: self.properties.displayName || \"\",\r\n                orientation: self.properties.orientation || \"\",\r\n                contentTemplate: \"\",\r\n                style: \"width: 80%; height: 70%\",\r\n                close: function () {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                },\r\n\r\n                open: function () {\r\n                    self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n\r\n                configureActions: function (context) {\r\n                    var params = {};\r\n\r\n                    if (self.isDependant && self.properties && (/cascadingcombo/i.test(self.properties.type)) && self.getParentCombo) {\r\n                        var parentValue = self.getParentCombo().getValue();\r\n                        if (parentValue && parentValue.id) {\r\n                            params[self.Class.BA_ACTION_PARAMETER_PREFIX + \"parent\"] = parentValue.id;\r\n                        }\r\n                    }\r\n\r\n                    $.when(self.renderCombo(params)).done(function (list) {\r\n                        $(\".bz-modal-view__content\", context.content).html(list);\r\n                        self.configureModalViewHandlers(context);\r\n                    })\r\n                }\r\n            });\r\n        });\r\n\r\n    },\r\n\r\n    processComboData: function (data) {\r\n        var self = this;\r\n        data.forEach(function (value) {\r\n            self.validateValue(value);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Setting the display value, always you call a setDisplayValue yor are performinng a setValue under the hood.\r\n     * */\r\n    setDisplayValue: function (value) {\r\n        var comboValue = \"\";\r\n\r\n        value = this.mapValue(value);\r\n\r\n        if (value && (typeof value === \"object\" && typeof value.label !== \"undefined\")) {\r\n\r\n            if (value.label !== \"\" && !bizagi.util.isNumeric(value.label)) {\r\n                comboValue = value.label;\r\n            } else {\r\n                var selected = this.findDataValueById(value.value);\r\n                comboValue = selected ? selected.value : \"\";\r\n            }\r\n\r\n            if ($.isArray(comboValue)) {\r\n                comboValue = comboValue.join(\" - \");\r\n            }\r\n\r\n            value = ({\"id\": value.id, \"value\": comboValue});\r\n        }\r\n\r\n        this.combo.val(this.formatItem(value.value));\r\n\r\n        //Set Value\r\n        this.selectedValue = value;\r\n        this.setValue(value);\r\n    },\r\n\r\n    /**\r\n     * Set the handlers for the modal elements\r\n     * @param {kendoModalObject} context full modal object\r\n     */\r\n    configureModalViewHandlers: function (context) {\r\n        var self = this;\r\n\r\n        $(\".bz-list__item\", context.content).on(\"click\", function () {\r\n            var valueObjet = {\r\n                \"id\": $(this).data(\"value\"),\r\n                \"value\": $(this).text()\r\n            };\r\n\r\n            if (valueObjet.id == \"\") {\r\n                valueObjet.value = \"\";\r\n            }\r\n            \r\n            self.itemSelected = true; //must be before the setDisplayValue\r\n            self.setDisplayValue(valueObjet);\r\n            self.trigger(\"select\", [valueObjet, false]);\r\n            context.close();\r\n        });\r\n\r\n        var $elementsList = $(\".bz-list li\", context.content);\r\n        var $clearButton = $(\".bz-modal-view__clear\", context.header);\r\n        var $searchInput = $(\".bz-modal-view__search\", context.header);\r\n\r\n        $(\"[data-action=close]\", context.header).bind(\"click\", function () {\r\n            context.close();\r\n        });\r\n\r\n        if(!this.properties.enableTyping) {\r\n            $searchInput.prop(\"disabled\", true);\r\n            $searchInput.attr(\"placeholder\", \"\");\r\n        } else {\r\n            $clearButton.bind(\"click\", function () {\r\n                $searchInput.val(\"\").trigger(\"change\");\r\n            });\r\n            // Filtering list\r\n            $searchInput.bind(\"change keyup\", function () {\r\n                if (this.value == \"\") {\r\n                    $clearButton.removeClass(\"bz-modal-view__clear--visible\");\r\n                } else {\r\n                    $clearButton.addClass(\"bz-modal-view__clear--visible\");\r\n                }\r\n                self.filterList(this.value, $elementsList);\r\n            }).focus();\r\n        }\r\n    },\r\n\r\n    cleanData: function () {\r\n        var self = this;\r\n        var value = {id: \"\", label: \"\"};\r\n\r\n        self.setDisplayValue(value);\r\n    },\r\n    \r\n    /**\r\n     * Filtering list of elements\r\n     * @returns {}\r\n     */\r\n    filterList: function (search, $li) {\r\n\r\n        $li.filter(function () {\r\n            var stringContainer = $(this).text().toUpperCase();\r\n            var stringToSearch = search.toUpperCase();\r\n\r\n            if (stringContainer.indexOf(stringToSearch) >= 0) {\r\n                return $(this);\r\n            } else {\r\n                $(this).hide();\r\n            }\r\n        }).show();\r\n    },\r\n\r\n    /**\r\n     * Print the list of elements to show in the modal\r\n     * @param {object} data list of elements to print\r\n     */\r\n    renderComboTemplate: function (data) {\r\n        var template = this.renderFactory.getTemplate(\"combo-list\");\r\n        var value = this.getValue();\r\n        value = (value !== null && typeof value !== \"undefined\") ? value : {\"id\": \"\", \"value\": \"\"};\r\n\r\n        return $.fasttmpl(template, {\r\n            \"items\": data,\r\n            \"selectedId\": value.id,\r\n            \"hasItems\": data.length > 0\r\n        }, {\r\n            \"validateItem\": this.validateValue\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Returns the selected value in the template\r\n     * @returns {{id: *, value: *}}\r\n     */\r\n    getSelectedValue: function () {\r\n        return this.selectedValue;\r\n    },\r\n\r\n    getElementsToStylize: function ($context) {\r\n        return this.properties.editable ? $(\"input\", $context) : $(\".readonly-control\", $context);\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Render CollectionNavigator\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for collection navigator renders\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.collectionnavigator\", bizagi.rendering.collectionnavigator.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.collectionnavigator.extend(\"bizagi.rendering.tablet.collectionnavigator\", {}, {\r\n\r\n    /**\r\n     * Method to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this.getControlFiller().addClass(\"bz-form-item__control--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this.getControlFiller().addClass(\"bz-form-item__control--hidden\");\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Tablet Render upload Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the upload render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.upload\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\r\n    BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE\r\n}, bizagi.rendering.upload.prototype);\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.upload.extend(\"bizagi.rendering.tablet.upload\", {\r\n    QUALITY_PICTURE: 50,\r\n    LIMIT: 1, // The maximum number of media in the device user can record in a single capture operation.\r\n    EXTENSIONSIMG: [\"image/jpeg\", \"jpeg\", \"image\", \"png\", \"jpg\", \"bmp\"],\r\n    EXTENSIONSFILE: [\"doc\", \"docx\", \"xls\", \"xlsx\", \"ppt\", \"pptx\", \"pdf\", \"zip\", \"rar\", \"txt\"],\r\n    EXTENSIONSVIDEO: [\"video/quicktime\", \"quicktime\", \"qt\", \"mov\"],\r\n    EXTENSIONSAUDIO: [\"audio/wav\", \"audio\", \"wav\", \"mp3\"]\r\n}, {\r\n    /**\r\n     * Whether or not is a native device\r\n     * @var isNative boolean\r\n     */\r\n    isNative: false,\r\n\r\n    /**\r\n     * Whether or not we are offline\r\n     * @var isOfflineForm boolean\r\n     */\r\n    isOfflineForm: false,\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Check if offline forms is supported\r\n        this.isOfflineForm = bizagi.util.isOfflineForm({context: this});\r\n        this.isNative = bizagi.util.isCordovaSupported();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"upload\");\r\n\r\n        return this.renderItem(template, {});\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"upload-readonly\");\r\n        var data = {\r\n            noFiles: this.filesCount === 0\r\n        };\r\n\r\n        return this.renderItem(template, data);\r\n    },\r\n\r\n    /**\r\n     * Method to render items\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderItem: function (template, data) {\r\n        var self = this;\r\n        var items = \"\";\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, data);\r\n\r\n        // Render current children\r\n        for (var i = 0; i < self.filesCount; i++) {\r\n            var file = {id: self.files[i][0], fileName: self.files[i][1]};\r\n            var item = self.renderUploadItem(file);\r\n            items += item;\r\n        }\r\n\r\n        html = self.replaceFilesHtml(html, items);\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var $control = this.getControl();\r\n\r\n        this.$contentFile = $(\".bz-file-upload__container\", $control);\r\n        this.$inputFile = $(\".bz-file-upload__input\", $control);\r\n        this.$nativeFile = $(\".bz-file-upload__native\", $control);        \r\n    },\r\n\r\n    /**\r\n     * Add action handlers\r\n     */\r\n    configureHandlers: function () {\r\n        this.checkFileExtensions();\r\n        this.attachEvents();\r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers when the control is readonly\r\n     */\r\n    configureHandlersReadOnly: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        // Handler to download a file\r\n        $(\"ul.bz-readonly-lists\", $control).on(\"click\", \".bz-file .bz-file-name\", function () {\r\n            var item = $(this).parent(\".bz-file\");\r\n            var file = item.data();\r\n\r\n            bizagi.loading.start();\r\n\r\n            $.when(bizagi.util.media.downloadFile(file.url, file.title)).fail(function (error) {\r\n                self.executeFormFailHandler(error);\r\n            }).always(function () {\r\n                bizagi.loading.stop();\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to configure the actions with control\r\n     * @return {}\r\n     */\r\n    attachEvents: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n        var counterChoseFiles = 0;\r\n        // Attach all events\r\n        this.$contentFile.off(\"click\").on(\"click\", function (evt) {\r\n            if(!self.isNative || counterChoseFiles > 0){                \r\n                self.chooseFile();             \r\n            }else{\r\n                bizagi.showMessageBox(bizagi.localization.getResource(\"render-upload-error-files-extension-supported-app\", \"You can only add images or videos.\"), 'Userfield error');\r\n            }  \r\n        });\r\n        \r\n        // Handler to download the file\r\n        $(\"ul.bz-files\", $control).on(\"click\", \".bz-file .bz-file-name\", function () {\r\n            var item = $(this).parent(\".bz-file\");\r\n            var file = item.data();\r\n\r\n            bizagi.loading.start();\r\n\r\n            $.when(bizagi.util.media.downloadFile(file.url, file.title)).fail(function (error) {\r\n                self.executeFormFailHandler(error);\r\n            }).always(function () {\r\n                bizagi.loading.stop();\r\n            });\r\n        });\r\n\r\n        // Attach delete option & Removes a file from the upload control\r\n        $(\"ul.bz-files\", $control).on(\"click\", \".bz-file .bz-icn\", function () {\r\n            var item = $(this).parent(\".bz-file\");\r\n            var file = item.data();\r\n\r\n            self.removeFile(item, file.id);\r\n        });\r\n\r\n        if (self.isNative) {\r\n            // Upload files\r\n            var actions = self.getUploadChoices();\r\n            counterChoseFiles = actions.length;\r\n            this.$nativeFile.off(\"click\").actionSheet({\r\n                actions: actions,\r\n                actionClicked: function (action) {\r\n                    self.handlerUploadFile(action.guid);\r\n                },\r\n                appear: function (action) {\r\n                    self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n                cancelClicked: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                }\r\n            });\r\n\r\n            // Resolution upload\r\n            $(\".bz-file-upload__resolution\", $control).off(\"click\").actionSheet({\r\n                actions: bizagi.util.media.getImageResolutionSizes(),\r\n                withoutCancel: true,\r\n                actionClicked: function (action) {\r\n                    bizagi.loading.start();\r\n\r\n                    $.when(self.handlerResolutionUpload(action.guid)).always(function () {\r\n                        bizagi.loading.stop();\r\n                    });\r\n                },\r\n                appear: function (action) {\r\n                    self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n                cancelClicked: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                }\r\n            });\r\n        } else {\r\n\r\n            // Attach event to web upload-control\r\n            this.$inputFile.off(\"change\").on(\"change\", function () {\r\n                self.addFile();\r\n                this.value = \"\";\r\n            });\r\n\r\n            // Just in case\r\n            this.$inputFile.off(\"click\").on(\"click\", function (evt) {\r\n                evt.stopPropagation();\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Handler of upload files\r\n     * @param {} ordinal\r\n     * @returns {}\r\n     */\r\n    handlerUploadFile: function (ordinal) {\r\n        var self = this;\r\n        var actionSelected = ordinal || 0;\r\n\r\n        switch (actionSelected) {\r\n            case 2:\r\n\r\n                navigator.camera.getPicture(function (dataImage) {\r\n                    self.dataImage = dataImage;\r\n                    var extensions = self.Class.EXTENSIONSIMG.concat(self.Class.EXTENSIONSVIDEO);\r\n\r\n                    bizagi.loading.start();\r\n\r\n                    $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties))\r\n                        .then(function () {\r\n                            //Gets the real properties for the file\r\n                            return $.when(bizagi.util.media.getFileDataInfo(self.dataImage))\r\n                                .then(function (fileData) {\r\n                                    self.fileProperties = fileData;\r\n\r\n                                    if (bizagi.util.media.checkFileTypes(fileData, self.properties, extensions)) {\r\n                                        // \"new Blob\" constructor is not supported in android version 4.2.2\r\n                                        var version = bizagi.util.getAndroidVersion();\r\n\r\n                                        if (!bizagi.util.isAndroid()) {\r\n                                            return $.when(bizagi.util.media.modalResolutionUpload()).then(function (buttonIndex) {\r\n                                                if (buttonIndex <= bizagi.util.media.getImageResolutionItems().length) {\r\n                                                    return self.handlerResolutionUpload(buttonIndex);\r\n                                                }\r\n                                            });\r\n\r\n                                        } else {\r\n                                            // Force click to show actionSheet menu\r\n                                            $(\".bz-file-upload__resolution\", self.getControl()).click();\r\n                                        }\r\n                                    }\r\n                                });\r\n                        }).always(function () {\r\n                        bizagi.loading.stop();\r\n                    });\r\n\r\n                }, self.onFail.bind(self), {\r\n                    quality: self.Class.QUALITY_PICTURE,\r\n                    sourceType: Camera.PictureSourceType.PHOTOLIBRARY,\r\n                    correctOrientation: true\r\n                });\r\n                break;\r\n            case 1:\r\n                navigator.camera.getPicture(function (dataImage) {\r\n                        bizagi.loading.start();\r\n\r\n                        $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties)).then(function () {\r\n                            return $.when(bizagi.util.media.getFileDataInfo(dataImage)).then(function (fileData) {\r\n                                self.fileProperties = fileData;\r\n                                return self.saveImage(dataImage);\r\n                            });\r\n                        }).always(function () {\r\n                            bizagi.loading.stop();\r\n                        });\r\n                    },\r\n                    self.onFail.bind(self), {\r\n                        quality: self.Class.QUALITY_PICTURE,\r\n                        sourceType: navigator.camera.PictureSourceType.CAMERA,\r\n                        mediaType: navigator.camera.MediaType.PICTURE,\r\n                        destinationType: Camera.DestinationType.FILE_URI,\r\n                        correctOrientation: true,\r\n                        targetWidth: 1280,\r\n                        targetHeight: 960\r\n                    });\r\n                break;\r\n            case 3:\r\n                navigator.device.capture.captureVideo(function (dataVideo) {\r\n                    bizagi.loading.start();\r\n\r\n                    $.when(bizagi.util.media.checkMaxSizeVideo(dataVideo, self.properties))\r\n                        .then(function () {\r\n                            return self.saveVideo(dataVideo);\r\n                        }).always(function () {\r\n                        bizagi.loading.stop();\r\n                    });\r\n\r\n                }, self.onFail.bind(self), {limit: self.Class.LIMIT});\r\n                break;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Handler of resolution upload\r\n     * @param {} ordinal\r\n     * @returns {}\r\n     */\r\n    handlerResolutionUpload: function (ordinal) {\r\n        var self = this;\r\n        var actionSelected = ordinal || 0;\r\n\r\n        // If original, save image normally, if not, reduce quality and size\r\n        if (actionSelected === bizagi.util.media.ResolutionType.ORIGINAL) {\r\n            return self.saveImage(self.dataImage);\r\n        } else {\r\n            var resolution = bizagi.util.media.getImageResolution(actionSelected);\r\n\r\n            return $.when(bizagi.util.media.transformImageSize(self.dataImage, resolution)).then(function (result) {\r\n                self.editedImageURL = result.localUrl;\r\n                self.properties.url = result.base64Image;\r\n\r\n                return self.saveImage(self.dataImage);\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Send image using HTTP\r\n     * @param {} dataImage\r\n     */\r\n    saveImage: function (dataImage) {\r\n        var self = this;\r\n        var dataItem = \"\";\r\n\r\n        if (self.editedImageURL) {\r\n            dataItem = self.editedImageURL;\r\n        } else if (self.fileProperties) {\r\n            dataItem = self.fileProperties.url;\r\n        }\r\n\r\n        // Fix android 4.4 getting images from recent folder\r\n        var dataFile = bizagi.util.media.getImagePath(dataItem);\r\n        var data = {\r\n            dataFile: dataFile,\r\n            fileName: self.fileProperties.name,\r\n            mimeType: \"image/jpeg\"\r\n        };\r\n\r\n        // Cleans variables related previous uploads\r\n        self.editedImageURL = null;\r\n        self.fileProperties = null;\r\n\r\n        return this.uploadFile(data);\r\n    },\r\n\r\n    /**\r\n     * Method to save a video file\r\n     * @param {} dataVideo\r\n     * @returns {}\r\n     */\r\n    saveVideo: function (dataVideo) {\r\n        var data = {\r\n            dataFile: dataVideo[0].fullPath,\r\n            fileName: dataVideo[0].name,\r\n            mimeType: \"video/quicktime\"\r\n        };\r\n\r\n        return this.uploadFile(data);\r\n    },\r\n\r\n    /**\r\n     * Method to save a file\r\n     * @param data\r\n     * @returns {*|void}\r\n     */\r\n    uploadFile: function (data) {\r\n        var self = this;\r\n        var params = {};\r\n        var addParams = self.buildAddParams();\r\n        addParams.queueID = \"q_\" + bizagi.util.encodeXpath(self.getUploadXpath());\r\n\r\n        params.data = addParams;\r\n        params.options = new FileUploadOptions();\r\n        params.options.fileKey = \"file\";\r\n        params.options.fileName = data.fileName;\r\n        params.options.uploadKey = {key: addParams[\"h_xpath\"]};\r\n        params.options.addUrl = self.properties.addUrl;\r\n        params.dataFile = data.dataFile;\r\n\r\n        if (data.mimeType)\r\n            params.options.mimeType = data.mimeType;\r\n\r\n        return $.when(bizagi.util.media.uploadFile(params)).then(function (result) {\r\n            var response = JSON.parse(decodeURIComponent(result.response));\r\n\r\n            if (response.type === \"error\") {\r\n                bizagi.showMessageBox(response.message, response.errorType);\r\n            } else {\r\n                self.onUploadFileCompleted(response);\r\n            }\r\n        }).fail(function (error) {\r\n            self.executeFormFailHandler(error);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * onFail\r\n     * @param {} error\r\n     */\r\n    onFail: function (error) {\r\n        var messageError = bizagi.util.processFailMessage(error);\r\n\r\n        bizagi.loading.stop();\r\n\r\n        if (messageError && typeof (messageError) === \"string\" && messageError.indexOf(\"No Activity found to handle Intent\") !== -1) {\r\n            var hasResource = bizagi.util.isValidResource(\"render-upload-error-media-app\");\r\n            var message = hasResource ? bizagi.localization.getResource(\"render-upload-error-media-app\") : \"Your device does not have an app to execute this action.\";\r\n\r\n            bizagi.showMessageBox(message);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * onUploadFileCompleted\r\n     * @param {} result\r\n     */\r\n    onUploadFileCompleted: function (result) {\r\n        var self = this;\r\n        var $wrapper = $(\".bz-files\", self.getControl());\r\n\r\n        if (result.id && result.fileName) {\r\n            // Locate it before the upload wrapper\r\n            var newItem = self.renderUploadItem(result);\r\n            $wrapper.append(newItem);\r\n\r\n            // Increment counter\r\n            self.filesCount = self.filesCount + 1;\r\n\r\n            // Copy the files value but not its reference\r\n            var files = self.files.slice();\r\n\r\n            //Add the new item to this temporal array\r\n            files.push([result.id, result.fileName]);\r\n\r\n            // Update value\r\n            self.setValue(files, true);\r\n\r\n            // Check maxFiles\r\n            self.checkMaxFiles();\r\n\r\n            self.editedImageURL = null;\r\n        } else {\r\n            bizagi.showMessageBox(result.message, \"Error\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check maximum number of files\r\n     */\r\n    checkMaxFiles: function () {\r\n        if (this.isMaxFilesReached()) {\r\n            $(this.$contentFile).addClass(\"bz-file-upload__container--hidden\");\r\n        } else {\r\n            $(this.$contentFile).removeClass(\"bz-file-upload__container--hidden\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if the maximum number of files than can be uploaded has been reached\r\n     * @returns {}\r\n     */\r\n    isMaxFilesReached: function () {\r\n        var maxFiles = this.properties.maxfiles;\r\n        var actualFiles = this.properties.value ? this.properties.value.length : 0;\r\n\r\n        return maxFiles !== 0 && (this.filesCount >= maxFiles && actualFiles >= maxFiles);\r\n    },\r\n\r\n    /**\r\n     * Check allow extensions and define possible choices\r\n     * @returns {}\r\n     */\r\n    checkFileExtensions: function () {\r\n        var self = this;\r\n        var validExtensions = self.properties.validExtensions || \"\";\r\n\r\n        self.validOptions = {video: false, image: false, file: false};\r\n\r\n        // Preprocess the extensions string\r\n        validExtensions = validExtensions.replace(/\\s+/g, \"\").toLowerCase();\r\n\r\n        if (typeof (validExtensions) === \"undefined\" || validExtensions === \"\") {\r\n            self.validOptions = {video: true, image: true, file: true};\r\n        } else {\r\n            validExtensions = validExtensions.split(\";\");\r\n\r\n            if (validExtensions.length === 1 && validExtensions[0].indexOf(\"*.*\") !== -1) {\r\n                self.validOptions.video = true;\r\n                self.validOptions.image = true;\r\n            } else {\r\n                for (var i = 0, length = validExtensions.length; i < length; i++) {\r\n                    validExtensions[i] = validExtensions[i].replace(\"*.\", \"\");\r\n\r\n                    if (self.Class.EXTENSIONSFILE.toString().indexOf(validExtensions[i]) >= 0) {\r\n                        self.validOptions.file = true;\r\n                    } else if (self.Class.EXTENSIONSIMG.toString().indexOf(validExtensions[i]) >= 0) {\r\n                        self.validOptions.image = true;\r\n                    } else if (self.Class.EXTENSIONSVIDEO.toString().indexOf(validExtensions[i]) >= 0) {\r\n                        self.validOptions.video = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Media is not supported then upload control is disabled\r\n        if (!self.validOptions.file && !self.validOptions.image && !self.validOptions.video) {\r\n            $(self.$contentFile).addClass(\"bz-file-upload__container--hidden\");\r\n        }\r\n\r\n        // Limit of files is reached then upload control is disabled\r\n        if (self.isMaxFilesReached() || (!self.isNative && (!bizagi.util.media.fileAPISupported() || self.isOfflineForm))) {\r\n            $(this.$contentFile).addClass(\"bz-file-upload__container--hidden\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Build add params to send to the server\r\n     * @param {} dataFile\r\n     */\r\n    buildAddFileParams: function (dataFile) {\r\n        var self = this;\r\n        var prefix = self.Class.BA_CONTEXT_PARAMETER_PREFIX;\r\n\r\n        // Get form data for POSTing\r\n        var formData = new FormData();\r\n        var form = self.getFormContainer();\r\n\r\n        // Build add params to send to the server\r\n        formData.append(prefix + \"xpath\", self.getUploadXpath());\r\n        formData.append(prefix + \"idRender\", self.properties.id);\r\n        formData.append(prefix + \"xpathContext\", self.properties.xpathContext);\r\n        formData.append(prefix + self.Class.BA_PAGE_CACHE, self.properties.idPageCache);\r\n        formData.append(self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\", form.properties.sessionId);\r\n        formData.append(self.properties.xpath, dataFile);\r\n\r\n        if (self.properties.contexttype)\r\n            formData.append(prefix + \"contexttype\", self.properties.contexttype);\r\n\r\n        try {\r\n            if (typeof (BIZAGI_SESSION_NAME) !== \"undefined\") {\r\n                formData.append(BIZAGI_SESSION_NAME, form.properties.sessionId);\r\n            } else {\r\n                formData.append(\"JSESSIONID\", form.properties.sessionId);\r\n            }\r\n        } catch (e) {\r\n            formData.append(\"JSESSIONID\", form.properties.sessionId);\r\n        }\r\n\r\n        return formData;\r\n    },\r\n\r\n    /**\r\n     * Process an upload file into the server\r\n     * @param {} dataFile\r\n     * @returns {}\r\n     */\r\n    processUploadFile: function (dataFile) {\r\n        var data = {\r\n            url: this.properties.addUrl,\r\n            formData: this.buildAddFileParams(dataFile)\r\n        };\r\n\r\n        return this.dataService.processUploadFile(data);\r\n    },\r\n\r\n    /**\r\n     * Remove data of file upload\r\n     */\r\n    clearDisplayValue: function () {\r\n        var self = this;\r\n        var items = $(\".bz-files\", self.getControl());\r\n\r\n        $(\".bz-file\", items).each(function (index, item) {\r\n            item = $(item);\r\n            var file = item.data();\r\n\r\n            self.removeFile(item, file.id);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Add upload options\r\n     */\r\n    getUploadChoices: function () {\r\n        var self = this;\r\n        var itemsUpload = [];\r\n\r\n        // Take photo, Choose photo\r\n        if (self.validOptions.image) {\r\n            itemsUpload.push({\r\n                \"guid\": 1,\r\n                \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-take-photo\")\r\n            });\r\n            itemsUpload.push({\r\n                \"guid\": 2,\r\n                \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-choose-photo\")\r\n            });\r\n        }\r\n\r\n        // Take video\r\n        if (self.validOptions.video) {\r\n            itemsUpload.push({\r\n                \"guid\": 3,\r\n                \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-take-video\")\r\n            });\r\n        }\r\n\r\n        // Stores the upload options        \r\n        return [].concat(itemsUpload);\r\n    },\r\n\r\n    /**\r\n     * Call the form failhandler with an specific error\r\n     * @param {} error\r\n     * @returns {}\r\n     */\r\n    executeFormFailHandler: function (error) {\r\n        var errorResponse = \"\";\r\n\r\n        if (error && error.responseText) {\r\n            errorResponse = error.responseText;\r\n        } else {\r\n            errorResponse = bizagi.localization.getResource(\"workportal-general-error\");\r\n        }\r\n\r\n        this.getFormContainer().failHandler(errorResponse);\r\n    },\r\n\r\n    /**\r\n     * Method to add new file from native or hybrid environment\r\n     */\r\n    chooseFile: function () {\r\n        if (this.isNative) {\r\n            this.$nativeFile.click();\r\n        } else if (bizagi.util.media.fileAPISupported() && !this.isOfflineForm) {\r\n            this.$inputFile.click();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to add new file\r\n     */\r\n    addFile: function () {\r\n        var self = this;\r\n        var dataFile = this.$inputFile[0].files[0];\r\n        var extensions = self.Class.EXTENSIONSIMG.concat(self.Class.EXTENSIONSFILE, self.Class.EXTENSIONSVIDEO);\r\n\r\n        dataFile.fullPath = this.$inputFile[0].value;\r\n        bizagi.loading.start();\r\n\r\n        if (bizagi.util.media.checkMaxSizeFile(dataFile, self.properties) && bizagi.util.media.checkFileTypes(dataFile, self.properties, extensions)) {\r\n\r\n            $.when(self.processUploadFile(dataFile))\r\n                .then(function (result) {\r\n                    self.onUploadFileCompleted(JSON.parse(decodeURIComponent(result)));\r\n                }).fail(function (error) {\r\n                self.executeFormFailHandler(error);\r\n            }).always(function () {\r\n                bizagi.loading.stop();\r\n            });\r\n        } else {\r\n            bizagi.loading.stop();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to remove item\r\n     * @param item\r\n     * @param id\r\n     */\r\n    removeFile: function (item, id) {\r\n        var self = this;\r\n\r\n        $.when(self.deleteUploadItem(item, id)).done(function () {\r\n            // Remove item\r\n            item.hide();\r\n            item.remove();\r\n\r\n            // Update value\r\n            self.setValue(self.files, false);\r\n\r\n            // Check maxFiles\r\n            self.checkMaxFiles();\r\n\r\n            // Trigger change\r\n            self.triggerRenderChange();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template for upload items\r\n     */\r\n    getTemplateItemName: function () {\r\n        return \"upload-item\";\r\n    },\r\n\r\n    getElementsToStylize: function(context){\r\n        return $(\".bz-input-icon__input\", context);\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Tablet Render upload Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the label render class to adjust to tablets devices\r\n */\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.upload.extend(\"bizagi.rendering.tablet.upload.offline\", {\r\n    QUALITY_PICTURE: 50,\r\n    LIMIT: 1, // The maximum number of media in the device user can record in a single capture operation.\r\n    EXTENSIONSIMG: [\"image/jpeg\", \"jpeg\", \"image\", \"png\", \"jpg\", \"bmp\"],\r\n    EXTENSIONSFILE: [\"doc\", \"docx\", \"xls\", \"xlsx\", \"ppt\", \"pptx\", \"pdf\", \"zip\", \"rar\", \"txt\"],\r\n    EXTENSIONSVIDEO: [\"video/quicktime\", \"quicktime\", \"qt\", \"mov\"],\r\n    EXTENSIONSAUDIO: [\"audio/wav\", \"audio\", \"wav\", \"mp3\"]\r\n}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        var self = this;\r\n        this._super(data);\r\n\r\n        var maxFileSizeOfProperty = Number(this.properties.maxSize) || 1048576;\r\n        var maxFileSizeOfUser = typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\" ? Number(BIZAGI_SETTINGS.UploadMaxFileSize) : 1048576;\r\n\r\n        this.properties.maxSize = maxFileSizeOfProperty < maxFileSizeOfUser ? maxFileSizeOfProperty : maxFileSizeOfUser;\r\n\r\n        this.updateFilesCount();\r\n    },\r\n    /**\r\n     * Method to render items\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderItem: function (template, data) {\r\n        var self = this;\r\n        var items = \"\";\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, data);\r\n\r\n        // Render current children\r\n        for (var i = 0; i < self.files.length; i++) {\r\n            var file = self.files[i];\r\n            if(file.status && file.status !== \"deleted\" && file.status !== \"new-deleted\"){\r\n                var item = self.renderUploadItem(file, i);\r\n                items += item;\r\n            }\r\n        }\r\n\r\n        html = self.replaceFilesHtml(html, items);\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers when the control is readonly\r\n     */\r\n    configureHandlersReadOnly: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        // Handler to download the file\r\n        $(\"ul.bz-files\", $control).on(\"click\", \".bz-file .bz-file-name\", function () {\r\n            var item = $(this).parent(\".bz-file\");\r\n            self.openOfflineFile(item);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to configure the actions with control\r\n     * @return {}\r\n     */\r\n    attachEvents: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        // Attach all events\r\n        this.$contentFile.off(\"click\").on(\"click\", function (evt) {\r\n            if(self.isNative)\r\n                self.$nativeFile.click();\r\n            else\r\n                self.$inputFile.click();\r\n                self.$inputFile.off(\"change\").on(\"change\", function(){\r\n                    self.handlerWebUploadFile();\r\n                });\r\n        });\r\n\r\n        // Handler to download the file\r\n        $(\"ul.bz-files\", $control).on(\"click\", \".bz-file .bz-file-name\", function () {\r\n            var item = $(this).parent(\".bz-file\");\r\n            self.openOfflineFile(item);\r\n        });\r\n\r\n        // Attach delete option & Removes a file from the upload control\r\n        $(\"ul.bz-files\", $control).on(\"click\", \".bz-file .bz-icn\", function () {\r\n            var item = $(this).parent(\".bz-file\");\r\n            self.removeOfflineFile(item);\r\n        });\r\n\r\n        if (self.isNative) {\r\n            // Upload files\r\n            this.$nativeFile.off(\"click\").actionSheet({\r\n                actions: self.getUploadChoices(),\r\n                actionClicked: function (action) {\r\n                    // this.getBoundingClientRect()\r\n                    self.handlerUploadFile(action.guid);\r\n                },\r\n                appear: function (action) {\r\n                    self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n                cancelClicked: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    //Only should be used for testing purposes\r\n    handlerWebUploadFile: function(){\r\n        var self = this;\r\n        var dataFile = self.$inputFile[0].files[0];\r\n        \r\n        var fileId = bizagi.util.randomNumber();\r\n        var fileName, mimeType;\r\n        \r\n        $.when(self.getBlobFromPath(dataFile))\r\n        .then( function(blob){            \r\n            bizagi.loading.start();\r\n            mimeType = blob.type;\r\n            fileName = blob.name;\r\n            return self.saveOfflineFile(blob, fileId, mimeType);\r\n        }).then( function(saveResponse){\r\n            self.onUploadOfflineFileCompleted(fileName, mimeType, fileId);\r\n        }).always( function(){\r\n            bizagi.loading.stop();\r\n        })\r\n        self.$inputFile[0].value = \"\";\r\n    },\r\n\r\n    /**\r\n     * Handler of upload image\r\n     * @param {} ordinal\r\n     * @returns {}\r\n     */\r\n    handlerUploadFile: function (ordinal) {\r\n        var self = this;\r\n        var actionSelected = ordinal || 0;\r\n        switch (actionSelected) {\r\n            case 2:\r\n                navigator.camera.getPicture(function (dataImage) {\r\n                    self.dataImage = dataImage;\r\n                    var extensions = self.Class.EXTENSIONSIMG.concat(self.Class.EXTENSIONSVIDEO);\r\n\r\n                    bizagi.loading.start();\r\n\r\n                    $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties))\r\n                        .then(function () {\r\n                            //Gets the real properties for the file\r\n                            return $.when(bizagi.util.media.getFileDataInfo(self.dataImage))\r\n                                .then(function (fileData) {\r\n                                    self.fileProperties = fileData;\r\n                                    if (bizagi.util.media.checkFileTypes(fileData, self.properties, extensions)) {\r\n                                        return self.saveImage(self.dataImage);\r\n                                    }\r\n                                });\r\n                        }).always(function () {\r\n                        bizagi.loading.stop();\r\n                    });\r\n\r\n                }, self.onFail.bind(self), {\r\n                    quality: self.Class.QUALITY_PICTURE,\r\n                    sourceType: Camera.PictureSourceType.PHOTOLIBRARY,\r\n                    correctOrientation: true\r\n                });\r\n                break;\r\n            case 1:\r\n                navigator.camera.getPicture(function (dataImage) {\r\n                        bizagi.loading.start();\r\n\r\n                        $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties)).then(function () {\r\n                            return $.when(bizagi.util.media.getFileDataInfo(dataImage)).then(function (fileData) {\r\n                                self.fileProperties = fileData;\r\n                                return self.saveImage(dataImage);\r\n                            });\r\n                        }).always(function () {\r\n                            bizagi.loading.stop();\r\n                        });\r\n                    },\r\n                    self.onFail.bind(self), {\r\n                        quality: self.Class.QUALITY_PICTURE,\r\n                        sourceType: navigator.camera.PictureSourceType.CAMERA,\r\n                        mediaType: navigator.camera.MediaType.PICTURE,\r\n                        destinationType: Camera.DestinationType.FILE_URI,\r\n                        correctOrientation: true,\r\n                        targetWidth: 1280,\r\n                        targetHeight: 960\r\n                    });\r\n                break;\r\n            default:\r\n                console.log(\"The option is not supported!\")\r\n                break;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Add the interactions to the upload control items\r\n     * @return {}\r\n     */\r\n    addInteractions: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Attach delete option & Removes a file from the upload control\r\n        $(\"ul.bz-files\", control).on(\"click\", \".bz-file .bz-file__delete\", function () {\r\n            var item = $(this).parent(\".bz-file\");\r\n            self.removeOfflineFile(item);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Collect Data\r\n     * @param {} renderValues\r\n     * @returns {}\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n\r\n        if (self.properties.originalValue === self.files) {\r\n            return;\r\n        }\r\n\r\n        if (self.filesCount > 0) {\r\n            renderValues[self.properties.xpath] = self.files;\r\n        } else if (self.properties.method === \"delete\") {\r\n            renderValues[self.properties.xpath] = [];\r\n            delete self.properties.method;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Send image using HTTP\r\n     * @param {} dataImage\r\n     */\r\n    saveImage: function (dataImage) {\r\n        var self = this;\r\n        bizagi.loading.start();\r\n\r\n        var fileId = bizagi.util.randomNumber();\r\n        var fileName = self.fileProperties.name\r\n        var mimeType;\r\n\r\n        //TODO: SWAT Check if the file already exists\r\n        $.when(self.getBlobFromPath(dataImage))\r\n        .always( function(){\r\n            bizagi.loading.stop();\r\n        })\r\n        .then( function(blob){\r\n            mimeType = blob.type;\r\n            fileName = blob.name;\r\n            return self.saveOfflineFile(blob, fileId, mimeType);\r\n        }).then( function(saveResponse){            \r\n            self.onUploadOfflineFileCompleted(fileName, mimeType, fileId);            \r\n        });\r\n        self.$inputFile[0].value = \"\";\r\n    },\r\n\r\n    /**\r\n     * Check allow extensions and define possible choices\r\n     * Only support to image in offline capability\r\n     * @returns {}\r\n     */\r\n    checkFileExtensions: function () {\r\n        var self = this;\r\n        var validExtensions = self.properties.validExtensions || \"\";\r\n\r\n        self.validOptions = {video: false, image: false, file: false};\r\n\r\n        // Preprocess the extensions string\r\n        validExtensions = validExtensions.replace(/\\s+/g, \"\").toLowerCase();\r\n\r\n        if (typeof (validExtensions) === \"undefined\" || validExtensions === \"\") {\r\n            self.validOptions.image = true;\r\n        } else {\r\n            validExtensions = validExtensions.split(\";\");\r\n\r\n            if (validExtensions.length === 1 && validExtensions[0].indexOf(\"*.*\") !== -1) {\r\n                self.validOptions.image = true;\r\n            } else {\r\n                for (var i = 0, length = validExtensions.length; i < length; i++) {\r\n                    validExtensions[i] = validExtensions[i].replace(\"*.\", \"\");\r\n\r\n                    if (self.Class.EXTENSIONSIMG.toString().indexOf(validExtensions[i]) >= 0) {\r\n                        self.validOptions.image = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Media is not supported then upload control is disabled\r\n        if (!self.validOptions.image) {\r\n            $(self.$contentFile).addClass(\"bz-file-upload__container--hidden\");\r\n        }\r\n\r\n        // Limit of files is reached then upload control is disabled\r\n        if (self.isMaxFilesReached() || !bizagi.util.media.fileAPISupported() ) {\r\n            $(this.$contentFile).addClass(\"bz-file-upload__container--hidden\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * onUploadOfflineFileCompleted\r\n     * @param {} result\r\n     */\r\n    onUploadOfflineFileCompleted: function (fileName, mimeType, fileId) {\r\n        var self = this;\r\n        var $wrapper = $(\".bz-files\", self.getControl());\r\n\r\n        var fileUploaded = {\r\n            id: fileId,\r\n            fileName: fileName,\r\n            mimeType: mimeType,\r\n            status: \"new\"\r\n        };\r\n\r\n        // Locate it before the upload wrapper\r\n        var newItem = self.renderUploadItem(fileUploaded, self.files.length);\r\n        $wrapper.append(newItem);\r\n\r\n        // Increment counter\r\n        self.filesCount = self.filesCount + 1;\r\n\r\n        // Copy the files value but not its reference\r\n        var files = self.files.slice();\r\n\r\n        //Add the new item to this temporal array\r\n        files.push(fileUploaded);\r\n\r\n        // Update value\r\n        self.setValue(files, false);\r\n\r\n        // Check maxFiles\r\n        self.checkMaxFiles(); \r\n    },\r\n\r\n    /**\r\n     * Renders a single upload item\r\n     * @param file\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderUploadItem: function (file, index) {\r\n        var self = this;\r\n        var itemTemplate = self.getTemplateItemName();\r\n        var template = self.renderFactory.getTemplate(itemTemplate);\r\n\r\n        var html = $.fasttmpl(template, {\r\n            url: \"javascript:void(0);\",\r\n            id: file.id,\r\n            allowDelete: self.properties.allowDelete || false,\r\n            filename: file.fileName,\r\n            index: index\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * This render cannot be sent because it is full ajax\r\n     * @returns {}\r\n     */\r\n    canBeSent: function () {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Fail action\r\n     * @param {} evt\r\n     * @returns {}\r\n     */\r\n    failReadFile: function (evt) {\r\n        try {\r\n            bizagi.log(\"Error code: \" + evt.target.error.code);\r\n        } catch (e) {\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fail action\r\n     * @param {} error\r\n     * @returns {}\r\n     */\r\n    onFail: function (error) {\r\n        this._super(error);\r\n    },\r\n\r\n    /**\r\n     * Method to remove item\r\n     * @param item\r\n     * @param id\r\n     */\r\n    removeOfflineFile: function (item) {\r\n        var self = this;\r\n        var file = item.data();\r\n        var fileIndex = file.index;\r\n\r\n        // Mark the file as deleted\r\n        var fileValue = self.files[fileIndex];\r\n        if( !fileValue){\r\n            //Nothing to do\r\n            return;\r\n        }\r\n        if(fileValue.status !== \"new\"){\r\n            fileValue.status = \"deleted\";\r\n        }\r\n        else {\r\n            fileValue.status = \"new-deleted\";\r\n        }        \r\n\r\n        // Remove item\r\n        item.hide();\r\n        item.remove();\r\n\r\n        // Update value\r\n        self.setValue(self.files, false);\r\n\r\n        // Check maxFiles\r\n        self.checkMaxFiles();\r\n\r\n        // Trigger change\r\n        self.triggerRenderChange();\r\n    },\r\n\r\n    /**\r\n     * Update the filesCount attribute based on the status (new|deleted) of each file\r\n     */\r\n    updateFilesCount: function(){\r\n        var self = this;\r\n        var files = this.properties.value;\r\n\r\n        for(var i=0; i < files.length; i++){\r\n            var status = files[i].status;\r\n            if( status && status.includes(\"deleted\") ) {\r\n                self.filesCount= self.filesCount - 1;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        self._super(value, triggerEvents);\r\n        self.updateFilesCount();\r\n        if (self.filesCount === 0) {\r\n            self.properties.method = \"delete\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if the maximum number of files than can be uploaded has been reached\r\n     * @returns {}\r\n     */\r\n    isMaxFilesReached: function () {\r\n        var maxFiles = this.properties.maxfiles;\r\n        return maxFiles !== 0 && (this.filesCount >= maxFiles);\r\n    },\r\n\r\n    openOfflineFile: function(item) {\r\n        var self = this;\r\n        var file = item.data();\r\n        var dataIndex = file.index;\r\n        var selectedValue = typeof (dataIndex) == \"number\" ? self.properties.value[dataIndex] : null;\r\n        if (selectedValue) {\r\n            var formParams = self.getFormParams();\r\n            var getFileParams = {\r\n                idCase: formParams.idCase,\r\n                idWorkitem: formParams.idWorkitem,\r\n                id: self.properties.xpath + '.' + selectedValue.id,\r\n                offlineType: formParams.offlineType\r\n            }\r\n            bizagi.loading.start();\r\n            $.when(self.dataService.getOfflineFile( getFileParams, \"blob\", selectedValue.mimeType))\r\n            .done( function(binaryFile){\r\n                var fileName = file.title;\r\n                bizagi.util.media.handleBinaryFile( binaryFile, fileName);\r\n            })\r\n            .fail( function(error){\r\n                console.log(\"Error opening offline file\", error);\r\n            })\r\n            .always( function() {\r\n                bizagi.loading.stop();\r\n            });\r\n        }\r\n    },\r\n\r\n    getBlobFromPath: function(path){\r\n        var blobPromise = new $.Deferred();\r\n        var self = this;\r\n\r\n        if(self.isNative){\r\n            var fileName = self.fileProperties.name;            \r\n            if (!bizagi.util.isAndroidDevice()) {\r\n                path = bizagi.util.media.normalizeIOSFilePath(path);\r\n            }\r\n            else{\r\n                // Fix android 4.4 getting images from recent folder\r\n                path = bizagi.util.media.getImagePath(path);\r\n            }\r\n            \r\n            var errorHandler = function (error) {\r\n                console.log('Error converting path to blob', error);  \r\n                blobPromise.reject(error);\r\n            };\r\n    \r\n            window.resolveLocalFileSystemURL(path, function (fileEntry) {\r\n                fileEntry.file(function (file) {    \r\n                    var reader = new FileReader();\r\n                    reader.onloadend = function () {\r\n                        var blob = new Blob([this.result], {type: file.type});\r\n                        blob.name = fileName;\r\n                        blobPromise.resolve(blob);\r\n                    }\r\n                    reader.readAsArrayBuffer(file);\r\n                }, errorHandler);\r\n            }, errorHandler);\r\n        }\r\n        else {\r\n            //In browser is the File\r\n            blobPromise.resolve(path);\r\n        }\r\n        return blobPromise;\r\n    },\r\n\r\n    saveOfflineFile: function(blobFile, fileId, mimeType){\r\n        var self = this;\r\n        var formParams = self.getFormParams();\r\n        var parameters = {\r\n            idCase: formParams.idCase,\r\n            idWorkitem: formParams.idWorkitem,\r\n            id: self.properties.xpath + '.' + fileId,\r\n            operationType: \"edition\",\r\n            offlineType: formParams.offlineType\r\n        }        \r\n        return self.dataService.saveOfflineFile(parameters, blobFile, mimeType);\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Grid Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the grid render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.grid\", bizagi.rendering.grid.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.grid.extend(\"bizagi.rendering.tablet.grid\", {\r\n    GRID_PAGE_SIZE: 10\r\n}, {\r\n    /**\r\n     * Constructor\r\n     * @param params\r\n     */\r\n    init: function (params) {\r\n        var self = this;\r\n        var data = params.data;\r\n\r\n        // Create a single instance for each cell\r\n        data.properties.singleInstance = false;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Create a data-structure to keep track of each cell properties\r\n        this.cellMetadata = {};\r\n\r\n        // Check if offline forms is supported\r\n        this.isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var form = self.getFormContainer();\r\n\r\n        // If not helptext configured, Just apply display-type: vertical, align it to the left\r\n        if (self.properties.helpText && self.properties.helpText != null && self.properties.helpText != \"\") {\r\n            properties.displayType = \"value\";\r\n        } else {\r\n            properties.displayType = \"vertical\";\r\n        }\r\n\r\n        properties.labelAlign = \"left\";\r\n\r\n        if (properties.groupBy || properties.groupSummary) {\r\n            // Add warning\r\n            form.addWarning(self.getResource(\"render-tablet-warning-grid\"));\r\n        }\r\n    },\r\n\r\n    /* method overrides\r\n    *  from base or virtual\r\n    */\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n\r\n        // Create a single instance for each cell\r\n        data.properties.singleInstance = false;\r\n\r\n        // Call base\r\n        this._super(data);\r\n    },\r\n\r\n    /**\r\n     * Updates manually the affected cell\r\n     */\r\n    updateAffectedCellManually: function () {\r\n    },\r\n\r\n    /**\r\n     * Get the row index using the key as a reference\r\n     */\r\n    getRowIndexByKey: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        self.initialLoadDone = false;\r\n\r\n        // Call base \r\n        self._super();\r\n\r\n        // Find component holder\r\n        self.grid = $(\">div\", control);\r\n\r\n        // Hide common label\r\n        self.getLabel().hide();\r\n\r\n        // Grid plugin\r\n        self.applyGridPlugin();\r\n\r\n        // Set initial data\r\n        if (properties.data) {\r\n\r\n            self.updateData(properties.data);\r\n\r\n            // Trigger change in order to start up the actions when the controls is ready\r\n            $.when(self.ready())\r\n                .done(function () {\r\n                    self.triggerRenderChange({changed: false});\r\n                });\r\n        }\r\n\r\n        // Execute pending actions\r\n        self.initialLoadDone = true;\r\n\r\n        for (var i in self.pendingActions) {\r\n            if (self.pendingActions.hasOwnProperty(i)) {\r\n                self.pendingActions[i].method.apply(self, self.pendingActions[i].arguments);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {}\r\n     */\r\n    applyGridPlugin: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n        var grid = self.grid;\r\n\r\n        // Build column metadata\r\n        var columns = self.buildColumnModel();\r\n\r\n        var columnsTotalizers = (columns || []).filter(function (item) {\r\n            return (item.summarizeBy);\r\n        });\r\n\r\n        // Apply grid plugin\r\n        grid.bizagi_grid_tablet({\r\n            columns: columns,\r\n            subType: properties.subType || grid,\r\n            title: properties.displayName,\r\n            isOfflineForm: self.isOfflineForm || false,\r\n            mode: mode,\r\n            template: {\r\n                grid: self.renderFactory.getTemplate(\"bizagi.grid.grid\"),\r\n                waiting: self.renderFactory.getTemplate(\"bizagi.grid.waiting\"),\r\n                table: self.renderFactory.getTemplate(\"bizagi.grid.table\"),\r\n                emptyTable: self.renderFactory.getTemplate(\"bizagi.grid.table.empty\"),\r\n                column: self.renderFactory.getTemplate(\"bizagi.grid.column\"),\r\n                specialColumn: self.renderFactory.getTemplate(\"bizagi.grid.column.special\"),\r\n                row: self.renderFactory.getTemplate(\"bizagi.grid.row\"),\r\n                rowButtons: self.renderFactory.getTemplate(\"bizagi.grid.row.buttons\"),\r\n                cell: self.renderFactory.getTemplate(\"bizagi.grid.cell\"),\r\n                specialCell: self.renderFactory.getTemplate(\"bizagi.grid.cell.special\"),\r\n                pager: self.renderFactory.getTemplate(\"bizagi.grid.pager\"),\r\n                buttons: self.renderFactory.getTemplate(\"bizagi.grid.buttons\"),\r\n                dynamicPager: self.renderFactory.getTemplate(\"bizagi.grid.dynamicpager\"),\r\n                totalizer: self.renderFactory.getTemplate(\"bizagi.grid.totalizer\")\r\n            },\r\n            actions: {\r\n                add: properties.allowAdd, //|| properties.inlineAdd,\r\n                edit: (properties.allowEdit && properties.withEditForm && properties.data != null) || (properties.subType === \"adhocGrid\" && properties.allowEdit),\r\n                details: properties.allowDetail,\r\n                remove: properties.allowDelete,\r\n                inlineAdd: false, //properties.inlineAdd,\r\n                allowMore: properties.allowMore,\r\n                enableXlsExport: false,\r\n                enablePdfExport: false,\r\n                hasTotalizer: columnsTotalizers && columnsTotalizers.length > 0 && properties.data.rows.length > 0\r\n            },\r\n            pageRequested: function (ui) {\r\n                if (!self.isExecutionMode()) return;\r\n                if ((self.changes && Object.keys(self.changes).length >= 1)|| (self.exclusiveChanges && Object.keys(self.exclusiveChanges).length >= 1)){\r\n                    $.when(self.getFormContainer().saveForm()).done(function () {\r\n                        self.fetchData(ui.page, ui.sortBy, ui.sortType);\r\n                    });\r\n                } else {\r\n                    self.fetchData(ui.page, ui.sortBy, ui.sortType);\r\n                }\r\n                \r\n            },\r\n            sortRequested: function (ui) {\r\n                if (!self.isExecutionMode()) return;\r\n                self.fetchData(ui.page, ui.sortBy, ui.sortType);\r\n            },\r\n            drawCell: function (ui) {\r\n                return self.drawCell(ui.column, ui.key, ui.value, ui.isNewRow);\r\n            },\r\n            cellReady: function (ui) {\r\n                return self.onCellReady(ui.column, ui.key, ui.cell, ui.isNewRow);\r\n            },\r\n            rowSelected: function (ui) {\r\n                if (!self.isExecutionMode()) return;\r\n                self.triggerHandler(\"rowSelected\", {id: ui.key, data: ui});\r\n            },\r\n            addRow: function (ui) {\r\n                if (!self.isExecutionMode()) return;\r\n                if (self.properties.subType === \"adhocGrid\" || self.properties.inlineAdd) {\r\n                    self.addVirtualRow();\r\n                } else {\r\n                    self.addRow();\r\n                }\r\n            },\r\n            editRow: function (ui) {\r\n                if (!self.isExecutionMode()) return;\r\n                if (self.properties.subType === \"adhocGrid\") {\r\n                    self.editVirtualRow(ui.key);\r\n                } else {\r\n                    self.editRow(ui.key);\r\n                }\r\n            },\r\n            deleteRow: function (ui) {\r\n                if (!self.isExecutionMode()) return;\r\n                self.deleteRow(ui.key);\r\n            },\r\n            moreRows: function (ui) {\r\n                if (!self.isExecutionMode()) return;\r\n                self.moreRows(ui);\r\n            },\r\n            showFormDetails: function (ui) {\r\n                self.showDetailForm(ui.key);\r\n            },\r\n            showMore: function (ui) {\r\n                if (!self.isExecutionMode()) return;\r\n                self.showMore(ui.key);\r\n            },\r\n            totalData: function (ui) {\r\n                if (!self.isExecutionMode()) return;\r\n                self.onTotalData();\r\n            }\r\n        });\r\n\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    postRenderReadOnly: function () {\r\n        // Do the same as the post-render            \r\n        this.postRender();\r\n    },\r\n\r\n    /**\r\n     *   Creates the column model required to initialize the grid plugin\r\n     */\r\n    buildColumnModel: function () {\r\n        var self = this;\r\n        var columns = self.columns;\r\n\r\n        // Create id column first\r\n        var keyColumn = {\r\n            name: \"id\",\r\n            index: 0,\r\n            label: \"id\",\r\n            hidden: true,\r\n            align: \"center\",\r\n            required: false,\r\n            key: true\r\n        };\r\n\r\n        // Add to column model\r\n        var columnModel = [];\r\n        columnModel.push(keyColumn);\r\n\r\n        $.each(columns, function (index, column) {\r\n\r\n            // Set grid column\r\n            column.columnIndex = index + 1;\r\n            var columnLabel = !bizagi.util.isEmpty(column.properties.displayName) ? column.properties.displayName : \" \";\r\n            var gridColumn = {\r\n                name: column.properties.xpath,\r\n                index: index + 1,\r\n                label: columnLabel,\r\n                required: column.properties.required || false,\r\n                key: false,\r\n                hidden: (!column.properties.visible || column.properties.type == \"columnHidden\" || column.properties.columnVisible == false),\r\n                summarizeBy: (column.properties.totalize && column.properties.totalize.operation ? column.properties.totalize.operation : undefined),\r\n                bizAgiProperties: column.properties\r\n            };\r\n\r\n            columnModel.push(gridColumn);\r\n        });\r\n\r\n        return columnModel;\r\n    },\r\n\r\n    /**\r\n     * Makes the grid to refresh\r\n     */\r\n    refresh: function () {\r\n        this.fetchData();\r\n    },\r\n\r\n    /*\r\n    *   Holds the execution until the grid data is ready after a load operation\r\n    */\r\n    dataReady: function () {\r\n        return this.dataReadyDeferred != null ? this.dataReadyDeferred.promise() : null;\r\n    },\r\n\r\n    /*\r\n    * Update data from local changes\r\n    */\r\n    loadChanges: function (rows) {\r\n        var self = this;\r\n\r\n        // Get data from the rows\r\n        for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\r\n            var rowChanges = self.changes[rows[rowIndex][0]];\r\n            if (self.exclusiveChanges) {\r\n                rowChanges = $.extend(rowChanges || {}, self.getExclusiveChangeByRow(rows[rowIndex][0]));\r\n            }\r\n            // Search for changes\r\n            if (rowChanges !== undefined) {\r\n                // Update all rowChanges in data\r\n                for (var xpath in rowChanges) {\r\n                    if (rowChanges.hasOwnProperty(xpath)) {\r\n                        var columnData = self.getColumn(xpath);\r\n                        rows[rowIndex][columnData.columnIndex] = self.mapChangeValue(columnData.properties.type, rowChanges[xpath], columnData.comboData);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n   \r\n    /**\r\n     * Mapper to data changes\r\n     * @param type\r\n     * @param change\r\n     * @param data\r\n     * @returns {(*|number)[][]}\r\n     */\r\n    mapChangeValue: function (type, change, data) {\r\n        data = data || [];\r\n        var value = change;\r\n\r\n        if (change !== null && typeof change !== \"undefined\") {\r\n            if (type === \"columnCombo\" || type === \"columnRadio\") {\r\n                if (!bizagi.util.isArray(change)) {\r\n                    var item = data.find(function (el) {\r\n                        return el.id == change;\r\n                    });\r\n\r\n                    if (item) {\r\n                        value = [[item.id, item.value]];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Method to set data and update the grid\r\n    */\r\n    updateData: function (data) {\r\n        var self = this;\r\n        var grid = self.grid;\r\n        var columns = self.columns;\r\n\r\n        // Set value in control\r\n        if (data) {\r\n            self.properties.data = data;\r\n\r\n            self.setCellOverrides(data, columns);\r\n            self.triggerGridPluginHandler(\"setData\", data);\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Method to fetch data from the server and then update the data\r\n    */\r\n    fetchData: function (page, sortBy, sortType) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        self.dataReadyDeferred = new $.Deferred();\r\n\r\n        // Define defaults\r\n        page = page || (properties.page || 1);\r\n        sortBy = sortBy || (properties.sortBy || \"\");\r\n        sortType = sortType || (properties.sortOrder || \"asc\");\r\n\r\n        // Update control properties\r\n        properties.page = page;\r\n        properties.sortBy = sortBy;\r\n        properties.sortType = sortType;\r\n        properties.sort = sortBy + \" \" + sortType;\r\n\r\n        // Start loading to avoid multiple calls to the server\r\n        self.startLoading();\r\n\r\n        $.when(self.getRemoteData())\r\n            .then(function (data) {\r\n                if (data) {\r\n                    if (data.deviceMaxRecordsExceeded) {\r\n                        bizagi.showMessageBox(bizagi.localization.getResource(\"render-search-maximum-records-allowed\"));\r\n                    } else {\r\n                        if (self.isRTL()) {\r\n                            data.rows = self.changeOrderData(data.rows);\r\n                        }\r\n\r\n                        self.loadChanges(data.rows);\r\n                        self.updateData(data);\r\n\r\n                        self.triggerRenderChange({changed: false});\r\n\r\n                        self.dataReadyDeferred.resolve();\r\n                    }\r\n                }\r\n            }).always(function () {\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var grid = self.grid;\r\n\r\n        // Save pending inline add rows\r\n        if (self.grid && (self.properties.inlineAdd || self.properties.inlineEdit)) {\r\n            var newKeys = grid.bizagi_grid_tablet.hasOwnProperty(\"getNewRowKeys\") ? grid.bizagi_grid_tablet(\"getNewRowKeys\") : [];\r\n\r\n            // Save new rows then save the whole screen\r\n            if (newKeys.length > 0 && !self.properties.alreadySaved && self.isValid()) {\r\n                var saveDeferred = self.saveInlineAddedRows(newKeys, true);\r\n\r\n                // Add to deferred collections in order to sync when saving\r\n                renderValues.deferreds = renderValues.deferreds || [];\r\n                renderValues.deferreds.push(saveDeferred);\r\n            }\r\n\r\n            // Remove adding keys from current changes\r\n            for (var i = 0; i < newKeys.length; i++) {\r\n                if (self.changes[newKeys[i]]) {\r\n                    delete self.changes[newKeys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        // Call base method\r\n        self._super(renderValues);\r\n    },\r\n\r\n    /*\r\n    *   Customizes the content drawing inside the cell\r\n    */\r\n    drawCell: function (column, key, value, isNewRow) {\r\n        var self = this;\r\n        if (column.key) return value;\r\n\r\n        self.newRecords = self.newRecords || {};\r\n        // Get render column\r\n        var columnIndex = column.index - 1;\r\n        var renderColumn = self.columns[columnIndex];\r\n\r\n        // Get cell properties\r\n        if (!self.cellMetadata[key]) self.cellMetadata[key] = {};\r\n        if (!self.cellMetadata[key][columnIndex]) self.cellMetadata[key][columnIndex] = {};\r\n\r\n        var properties = self.cellMetadata[key][columnIndex].properties || renderColumn.originalProperties;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) || false;\r\n        var visible = properties.visible !== undefined ? properties.visible : true;\r\n        var editable = properties.editable !== undefined ? properties.editable : true;\r\n\r\n\r\n        // Show editable cell when we are performing inline add operation\r\n        if (isNewRow) editable = true;\r\n\r\n        renderColumn.properties.displayType = 'value';\r\n        renderColumn.setSurrogateKey(key);\r\n\r\n        if (key === \"summary\") {\r\n            editable = false;\r\n        }\r\n\r\n        renderColumn.properties.labelAlign = \"default\";\r\n        if (renderColumn.properties.columntitlealign) {\r\n            renderColumn.properties.labelAlign = renderColumn.properties.columntitlealign;\r\n        }\r\n\r\n        renderColumn.properties.valueAlign = \"default\";\r\n        if (renderColumn.properties.columnAlign) {\r\n            renderColumn.properties.valueAlign = renderColumn.properties.columnAlign;\r\n        }\r\n\r\n        if (properties.visible) {\r\n            if (editable) {\r\n                return self.drawEditableCell(renderColumn, properties, key, value, isNewRow);\r\n            } else {\r\n                return self.drawReadonlyCell(renderColumn, properties, key, value);\r\n            }\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Executes when the cell is ready and inserted into the DOM\r\n    */\r\n    onCellReady: function (column, key, cell, isNewRow) {\r\n        var self = this;\r\n\r\n        // Get render column\r\n        var columnIndex = column.index - 1;\r\n        var renderColumn = self.columns[columnIndex];\r\n        var properties = ((self.cellMetadata[key][columnIndex] != undefined) ? self.cellMetadata[key][columnIndex].properties : undefined) || renderColumn.originalProperties;\r\n        var visible = properties.visible !== undefined ? properties.visible : true;\r\n        var editable = properties.editable !== undefined ? properties.editable : true;\r\n\r\n        // Show editable cell when we are performing inline add operation\r\n        if (isNewRow) editable = true;\r\n        else editable = false;\r\n        if (visible) {\r\n            if (editable) {\r\n                // Set editable\r\n                var originalEditable = renderColumn.properties.editable;\r\n                renderColumn.properties.editable = editable;\r\n\r\n                if (renderColumn.properties.submitOnChange) {\r\n                    var control = renderColumn.getDecorated(key);\r\n                    if (control) {\r\n                        control.properties.submitOnChangexpathContext = self.properties.xpath + \"[]\";\r\n                    }\r\n                }\r\n\r\n\r\n                // Execute cell post render\r\n                renderColumn.postRender(key, cell);\r\n\r\n                // Restore editable\r\n                renderColumn.properties.editable = originalEditable;\r\n            } else {\r\n                renderColumn.postRenderReadOnly(key, cell);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     *  Adds a row to the grid\r\n     */\r\n    addRow: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var formParams = self.getFormParams();\r\n\r\n        // Start loading\r\n        self.startLoading();\r\n\r\n        // Send add request\r\n        $.when(self.submitAddRequest())\r\n            .done(function (newid) {\r\n\r\n                // Show a slide with new form after that\r\n                var slideView = new bizagi.rendering.tablet.slide.view(self.dataService, self.renderFactory, {\r\n                    title: self.properties.displayName || \"\",\r\n                    container: form.container,\r\n                    formParams: formParams,\r\n                    navigation: formParams.navigation,\r\n                    showSaveButton: true,\r\n                    onSave: function (data) {                 \r\n                        self.addExclusiveChange(newid, data);\r\n                        return self.submitSaveRequest(newid, data);\r\n                    }\r\n                });\r\n\r\n                // End Loading\r\n                self.endLoading();\r\n\r\n                var recordXpath = properties.xpath + \"[id=\" + newid + \"]\";\r\n\r\n                slideView.render({\r\n                    idRender: properties.id,\r\n                    recordXPath: recordXpath,\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache,\r\n                    requestedForm: \"addForm\",\r\n                    url: properties.addPage,\r\n                    formParams: formParams,\r\n                    navigation: formParams.navigation\r\n                }).done(function () {\r\n                    if (!properties.submitOnChange) {\r\n                        // Reload grid\r\n                        self.fetchData();\r\n                    } else {\r\n                        // Submits the entire form\r\n                        self.submitOnChange();\r\n                    }\r\n\r\n                }).fail(function () {\r\n                    self.submitRollbackRequest();\r\n                }).always(function () {\r\n                    self.endLoading();\r\n                })\r\n            }).always(function () {\r\n            self.endLoading();\r\n        });\r\n\r\n    },\r\n\r\n    addVirtualRow: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var formParams = self.getFormParams();\r\n\r\n        // Create mock row\r\n        var currentRow = [\"mock_id\"];\r\n        self.columns.forEach(function () {\r\n            currentRow.push(null);\r\n        });\r\n\r\n        // Render grid view\r\n        var slideView = new bizagi.rendering.tablet.slide.adhocForm(self.renderFactory, {\r\n            title: self.properties.displayName || \"\",\r\n            allowEdition: true,\r\n            navigation: formParams.navigation\r\n        });\r\n\r\n        slideView.render({\r\n            row: currentRow,\r\n            columns: self.columns,\r\n            pageCacheId: properties.idPageCache,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            sessionId: form.properties.sessionId,\r\n            actions: form.actions\r\n        }).done(function (data) {\r\n            $.when(self.saveAddedRow(data)).done(function () {\r\n                if (!properties.submitOnChange) {\r\n                    // Reload grid\r\n                    self.fetchData();\r\n                } else {\r\n                    // Submits the entire form\r\n                    self.submitOnChange();\r\n                }\r\n            });\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Prepares the add action\r\n    */\r\n    saveAddedRow: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.multiaction().addGridRecordData({\r\n            url: properties.addUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contexttype,\r\n            idPageCache: properties.idPageCache,\r\n            submitData: data\r\n        });\r\n    },\r\n\r\n    /**\r\n     *  Edits a row in the grid\r\n     */\r\n    editRow: function (id) {\r\n\r\n        if (id == 0) {\r\n            bizagi.showMessageBox(bizagi.localization.getResource(\"render-grid-message-no-selected-row\"), bizagi.localization.getResource(\"render-grid-header-no-selected-row\"));\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Use tablet inline edit when there are no edit form\r\n        if (properties.inlineEdit == true && properties.allowEdit == false) {\r\n            self.editInline(id);\r\n            return;\r\n        }\r\n\r\n        if (self.cleanActionChanges && self.cleanActionChanges[id] !== undefined) {\r\n\r\n            self.changes = self.cleanActionChanges;\r\n            var data = $.extend(self.changes[id], {});\r\n            data.idPageCache = properties.idPageCache;\r\n\r\n            $(\".ui-tooltip\").remove();\r\n\r\n            $.when(self.submitSaveRequest(id, data)).done(function () {\r\n                // Set loading status\r\n                self.startLoading();\r\n\r\n                if (!properties.submitOnChange) {\r\n                    // Reload grid\r\n                    self.endLoading();\r\n\r\n                    self.fetchData();\r\n                } else {\r\n                    // Submits the entire form\r\n                    self.submitForGridChange().always(function () {\r\n                        self.endLoading();\r\n\r\n                        // Send edit request\r\n                        self.executeSubmitEditRequest(id, function(data){\r\n                            self.addExclusiveChange(id, data);\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        } else {\r\n            self.executeSubmitEditRequest(id, function(data){\r\n                self.addExclusiveChange(id, data);\r\n            });\r\n        }\r\n    },\r\n    editVirtualRow: function (id) {\r\n        var self = this;\r\n        var data = self.properties.data;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var formParams = self.getFormParams();\r\n        // Search row\r\n        var currentRow = [];\r\n        for (var i = 0, length = data.rows.length; i < length; i++) {\r\n            if (data.rows[i][0] == id) {\r\n                currentRow = data.rows[i];\r\n                break;\r\n            }\r\n        }\r\n        // Render grid view\r\n        var slideView = new bizagi.rendering.tablet.slide.adhocForm(self.renderFactory, {\r\n            title: self.properties.displayName || \"\",\r\n            allowEdition: true,\r\n            navigation: formParams.navigation\r\n        });\r\n        slideView.render({\r\n            row: currentRow,\r\n            columns: self.columns,\r\n            pageCacheId: properties.idPageCache,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            sessionId: form.properties.sessionId,\r\n            actions: form.actions\r\n        }).done(function (formData) {\r\n            // This code is executed when the user press save on the slide\r\n            // Update internal data\r\n            for (xpath in formData) {\r\n                self.collectGridChange({id: id, xpath: xpath, value: formData[xpath], trigger: false});\r\n            }\r\n            // Prepare grid data\r\n            var dataToSend = {};\r\n            self.collectData(dataToSend);\r\n            // Send the data\r\n            self.dataService.submitData({\r\n                action: \"SUBMITONCHANGE\",\r\n                data: dataToSend,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: properties.xpathContext,\r\n                idPageCache: properties.idPageCache\r\n            }).done(function () {\r\n                // After successfully response refresh the grid\r\n                self.fetchData();\r\n            });\r\n        });\r\n    },\r\n\r\n    executeSubmitEditRequest: function (id, callback) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var formParams = self.getFormParams();\r\n\r\n\r\n        var slideView = new bizagi.rendering.tablet.slide.view(self.dataService, self.renderFactory, {\r\n            title: self.properties.displayName || \"\",\r\n            container: form.container,\r\n            formParams: formParams,\r\n            navigation: formParams.navigation,\r\n            showSaveButton: true,\r\n            onSave: function (data) {\r\n                if(callback){\r\n                    callback(data);\r\n                }                \r\n                return self.submitSaveRequest(id, data);\r\n            }\r\n        });\r\n\r\n        self.startLoading();\r\n\r\n        $.when(self.submitEditRequest(id))\r\n            .done(function () {\r\n\r\n                // Show dialog with new form after that\r\n                var recordXpath = properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n                slideView.render({\r\n                    idRender: properties.id,\r\n                    recordXPath: recordXpath,\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache,\r\n                    requestedForm: \"editForm\",\r\n                    url: properties.editPage,\r\n                    formParams: formParams,\r\n                    navigation: formParams.navigation\r\n                }).done(function () {\r\n                    if (!properties.submitOnChange) {\r\n                        // Reload grid\r\n                        self.fetchData();\r\n\r\n                    } else {\r\n                        // Submits the entire form\r\n                        self.submitOnChange();\r\n                    }\r\n                }).fail(function () {\r\n                    self.startLoading();\r\n                    $.when(self.submitRollbackRequest()).always(function () {\r\n                        self.endLoading();\r\n                    });\r\n                });\r\n            }).always(function () {\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n    showDetailForm: function (id) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var formParams = self.getFormParams();\r\n\r\n        var slideView = new bizagi.rendering.tablet.slide.view(self.dataService, self.renderFactory, {\r\n            title: self.properties.displayName || \"\",\r\n            container: form.container,\r\n            formParams: formParams,\r\n            navigation: formParams.navigation,\r\n            showSaveButton: false\r\n        });\r\n\r\n        // Show dialog with new form after that\r\n        var recordXpath = properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        slideView.render({\r\n            idRender: properties.id,\r\n            recordXPath: recordXpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            requestedForm: \"detailForm\",\r\n            url: properties.editPage,\r\n            formParams: formParams,\r\n            navigation: formParams.navigation\r\n        });\r\n    },\r\n    /**\r\n     *  Deletes  a row to the grid\r\n     */\r\n    deleteRow: function (id) {\r\n        if (id === 0) {\r\n            bizagi.showMessageBox(\r\n                bizagi.localization.getResource(\"render-grid-message-no-selected-row\"),\r\n                bizagi.localization.getResource(\"render-grid-header-no-selected-row\")\r\n            );\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n\r\n        bizagi.showConfirmationBox(this.getResource(\"render-grid-delete-confirmation\"))\r\n            .done(function () {\r\n                // Do a grid record deletion\r\n                $.when(self.submitDeleteRequest(id))\r\n                    .done(function (data) {\r\n                        // Reload grid\r\n                        self.fetchData();\r\n\r\n                        if (data.type === \"success\") {\r\n                            // Trigger the event\r\n                            //'key' must be included to trigger a single call to actions and validations\r\n                            //line 310 bizagi.command.controllers.action\r\n                            self.triggerRenderChange({rowDeleted: true, changed: false, key: id});\r\n                        }\r\n                    });\r\n            });\r\n    },\r\n\r\n    moreRows: function (ui) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (typeof properties.originalrowsPerPage === \"undefined\") {\r\n            properties.originalrowsPerPage = properties.rowsPerPage;\r\n        }\r\n\r\n        properties.rowsPerPage += properties.originalrowsPerPage;\r\n\r\n        var dataToSend = {};\r\n        self.collectData(dataToSend);\r\n\r\n        self.startLoading();\r\n\r\n        if ($.isEmptyObject(dataToSend)) {\r\n            self.moreRowsCommon(ui);\r\n            return;\r\n        }\r\n\r\n        // Send the data\r\n        self.dataService.submitData({\r\n            action: \"SUBMITONCHANGE\",\r\n            data: dataToSend,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache\r\n        }).done(function () {\r\n\r\n            self.endLoading();\r\n\r\n            self.moreRowsCommon(ui);\r\n        });\r\n\r\n    },\r\n\r\n    moreRowsCommon: function (ui) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        self.fetchData(ui.page, ui.sortBy, ui.sortType);\r\n\r\n        $.when(self.dataReadyDeferred).done(function () {\r\n\r\n            if (properties.records != 0)\r\n                if (properties.records + 1 <= properties.rowsPerPage) {\r\n                    $(\".ui-bizagi-grid-dynamic-pager\", self.getControl()).hide();\r\n                }\r\n\r\n        });\r\n    },\r\n\r\n    /**\r\n     *  Shows more info about a grid row\r\n     */\r\n    showMore: function (id) {\r\n        var self = this;\r\n        var data = self.properties.data;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var formParams = self.getFormParams();\r\n\r\n        // Search row\r\n        var currentRow = [];\r\n        for (var i = 0, length = data.rows.length; i < length; i++) {\r\n            if (data.rows[i][0] == id) {\r\n                currentRow = data.rows[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Render grid view\r\n        var slideView = new bizagi.rendering.tablet.slide.grid(self.dataService, self.renderFactory, {\r\n            title: self.properties.displayName || \"\",\r\n            container: form.container,\r\n            allowEdition: false,\r\n            formParams: formParams,\r\n            navigation: formParams.navigation\r\n        });\r\n\r\n        self.startLoading();\r\n\r\n        slideView.render({\r\n            row: currentRow,\r\n            columns: self.columns,\r\n            pageCacheId: properties.idPageCache,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            sessionId: form.properties.sessionId,\r\n            actions: form.actions,\r\n            formParams: formParams,\r\n            navigation: formParams.navigation\r\n        }).done(function () {\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n    /**\r\n     *  Edits the entire row (inline) in another slide\r\n     */\r\n    editInline: function (id) {\r\n        var self = this;\r\n        var data = self.properties.data;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var formParams = self.getFormParams();\r\n\r\n        // Search row\r\n        var currentRow = [];\r\n        for (var i = 0, length = data.rows.length; i < length; i++) {\r\n            if (data.rows[i][0] == id) {\r\n                currentRow = data.rows[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Render grid view\r\n        var slideView = new bizagi.rendering.tablet.slide.grid(self.dataService, self.renderFactory, {\r\n            title: self.properties.displayName || \"\",\r\n            container: form.container,\r\n            formParams: formParams,\r\n            navigation: formParams.navigation,\r\n            allowEdition: true\r\n        });\r\n\r\n        // Render the editable view\r\n        $.when(slideView.render({\r\n            row: currentRow,\r\n            columns: self.columns,\r\n            pageCacheId: properties.idPageCache,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            sessionId: form.properties.sessionId,\r\n            actions: form.actions,\r\n            validations: form.validations,\r\n            formParams: formParams,\r\n            navigation: formParams.navigation\r\n        })).done(function (data) {\r\n            // This code is executed when the user press save on the slide\r\n\r\n            // Update internal data\r\n            for (xpath in data) {\r\n                self.collectGridChange({id: id, xpath: xpath, value: data[xpath], trigger: false});\r\n            }\r\n\r\n            // Prepare grid data\r\n            var dataToSend = {};\r\n            self.collectData(dataToSend);\r\n\r\n            // Send the data\r\n            self.dataService.submitData({\r\n                action: \"SUBMITONCHANGE\",\r\n                data: dataToSend,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: properties.xpathContext,\r\n                idPageCache: properties.idPageCache\r\n            }).done(function () {\r\n                // After successfully response refresh the grid\r\n                self.fetchData();\r\n            });\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Changes the background for a cell\r\n    */\r\n    changeCellBackgroundColor: function (key, xpath, argument) {\r\n        var self = this;\r\n\r\n        if (self.initialLoadDone) {\r\n            for (var j = 0; j < self.columns.length; j++) {\r\n                var isVisible = self.getCellOverride(key, j).visible;\r\n                var columnProperties = self.columns[j].properties;\r\n\r\n                if (self.isValidXPathId(columnProperties.xpath, columnProperties.id, xpath) && isVisible) {\r\n                    var cell = self.grid.bizagi_grid_tablet('getCell', key, xpath, j);\r\n\r\n                    if (self.properties.editable) {\r\n                        var cellInput = cell.find(\".bz-input-icon\");\r\n                        if(columnProperties.type == \"columnRadio\" || columnProperties.type == \"columnBoolean\") {\r\n                            cell = cell.find(\".bz-radio-list\");\r\n                        } else if(cellInput.length != 0) {\r\n                            cell = cellInput;\r\n                        } else {\r\n                            cell = cell.find(\"input\");\r\n                        }\r\n                    }\r\n\r\n                    cell.css(\"background-color\", argument);\r\n                    break;\r\n                }\r\n            }\r\n\r\n        } else {\r\n            if (self.pendingActions) {\r\n                self.pendingActions.push({\r\n                    method: self.changeCellBackgroundColor,\r\n                    arguments: arguments\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Changes the background for a cell\r\n    */\r\n    changeCellColor: function (key, xpath, argument) {\r\n        var self = this;\r\n\r\n        if (self.initialLoadDone) {\r\n            for (var j = 0; j < self.columns.length; j++) {\r\n                var columnProperties = self.columns[j].properties;\r\n\r\n                if (self.isValidXPathId(columnProperties.xpath, columnProperties.id, xpath)) {\r\n                    var cell = self.grid.bizagi_grid_tablet('getCell', key, xpath, j);\r\n\r\n                    if (self.properties.editable) {\r\n                        cell = cell.find(\"input\");\r\n                    }\r\n\r\n                    cell.css(\"color\", argument);\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            if (self.pendingActions) {\r\n                self.pendingActions.push({\r\n                    method: self.changeCellColor,\r\n                    arguments: arguments\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Changes the visibility for a cell\r\n    */\r\n    changeCellVisibility: function (key, xpath, argument) {\r\n        var self = this;\r\n\r\n        if (self.initialLoadDone) {\r\n\r\n            var index = (self.columns || [])\r\n                .findIndex(function (item) {\r\n                    return self.isValidXPathId(item.properties.xpath, item.properties.id, xpath);\r\n                }) || 0;\r\n\r\n            var cell = self.grid.bizagi_grid_tablet('getCell', key, xpath, index);\r\n            if (cell) {\r\n                // Change visibility\r\n                if (argument == true) {\r\n                    cell.css(\"visibility\", \"visible\");\r\n                    cell.css(\"display\", \"\");\r\n\r\n                    self.element && self.element.show();\r\n                } else {\r\n                    cell.css(\"visibility\", \"hidden\");\r\n                }\r\n            }\r\n\r\n            self.cellOverrides[key] = self.cellOverrides[key] || {};\r\n            self.getCellOverride(key, index).visible = argument;\r\n\r\n        } else {\r\n            if (self.pendingActions) {\r\n                self.pendingActions.push({\r\n                    method: self.changeCellVisibility,\r\n                    arguments: arguments\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *  Changes the required for cell\r\n    */\r\n    changeCellValue: function (key, xpath, argument) {\r\n        var self = this;\r\n\r\n        if (self.initialLoadDone) {\r\n            var control = self.getControlCell(key, xpath);\r\n            if (control) {\r\n                control.setDisplayValue(argument);\r\n\r\n                var renderColumn = control.column;\r\n\r\n                if (renderColumn) {\r\n                    var _value = renderColumn.getValue(key);\r\n                    var compositeValue = renderColumn.getCompositeValue(key);\r\n\r\n                    _value = self.getCellValueFormatted(renderColumn, _value);\r\n\r\n                    control.setDisplayValue(argument);\r\n                    control.triggerHandler(\"renderchange\", {render: self, changed: true});\r\n\r\n                    self.collectGridChange({\r\n                        id: key,\r\n                        xpath: xpath,\r\n                        value: _value,\r\n                        compositeValue: compositeValue,\r\n                        columnIndex: renderColumn,\r\n                        trigger: false\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            if (self.pendingActions) {\r\n                self.pendingActions.push({\r\n                    method: self.setDisplayValue,\r\n                    arguments: arguments\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    changeCellRequired: function (key, xpath, argument) {\r\n        var self = this;\r\n\r\n        if (self.initialLoadDone) {\r\n            var control = self.getControlCell(key, xpath);\r\n            if (control) {\r\n                control.changeCellRequired(argument);\r\n                for (var j = 0; j < self.columns.length; j++) {\r\n                    if (\r\n                        self.columns[j].properties.xpath == xpath ||\r\n                        self.columns[j].properties.id == xpath ||\r\n                        self.columns[j].properties.xpath + \".\" + self.columns[j].properties.id  == xpath\r\n                    ){\r\n                        break;\r\n                    }                    \r\n                }\r\n                self.cellOverrides[key] = self.cellOverrides[key] || {};\r\n                self.getCellOverride(key, j).required = argument;\r\n            }\r\n        } else {\r\n            self.pendingActions.push({method: self.changeCellRequired, arguments: arguments});\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Sets an error on the cell\r\n    */\r\n    setError: function (key, xpath) {\r\n        var self = this;\r\n\r\n        if (self.initialLoadDone) {\r\n            for (var j = 0; j < self.columns.length; j++) {\r\n                var isVisible = self.getCellOverride(key, j).visible;\r\n                var columnProperties = self.columns[j].properties;\r\n\r\n                if (self.isValidXPathId(columnProperties.xpath, columnProperties.id, xpath) && isVisible) {\r\n                    var cell = self.grid.bizagi_grid_tablet('getCell', key, xpath, j);\r\n                    cell.parent().addClass(\"ui-bizagi-render-grid-cell-error\");\r\n                    break;\r\n                }\r\n            }\r\n\r\n        } else {\r\n            if (self.pendingActions) {\r\n                self.pendingActions.push({\r\n                    method: self.setError,\r\n                    arguments: arguments\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n        var parentPromise = self._super();\r\n        var inlineAddPromise = self.inlineAddDeferred ? self.inlineAddDeferred.promise() : null;\r\n        return $.when(parentPromise, inlineAddPromise);\r\n    },\r\n\r\n    /*\r\n    *   Method to start loading for ajax data and update the ui\r\n    */\r\n    startLoading: function (bUseTimeout) {\r\n        var self = this;\r\n\r\n        bizagi.loading.start();\r\n\r\n        self._super(bUseTimeout);\r\n    },\r\n\r\n    /*\r\n    *   Method to remove the loading message\r\n    */\r\n    endLoading: function () {\r\n        bizagi.loading.stop();\r\n        this._super();\r\n    },\r\n\r\n    cleanCellData: function (key, xpath) {\r\n        var self = this;\r\n\r\n        if (self.initialLoadDone) {\r\n            var control = self.getControlCell(key, xpath);\r\n            if (control) {\r\n                control.cleanData();\r\n                for (var j = 0; j < self.columns.length; j++) {\r\n                    var columnProperties = self.columns[j].properties;\r\n\r\n                    if (self.isValidXPathId(columnProperties.xpath, columnProperties.id, xpath)) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                var rows = self.properties.data.rows;\r\n                var i = 0;\r\n                var rowLength = rows.length;\r\n\r\n                for (; i < rowLength; i++) {\r\n                    if (Number(key) === rows[i][0]) {\r\n                        rows[i][j + 1] = [[\"\", \"\"]];\r\n                        break;\r\n                    }\r\n                }\r\n                self.cellOverrides[key] = self.cellOverrides[key] || {};\r\n                self.getCellOverride(key, j).value = null;\r\n\r\n                if (!self.cleanActionChanges) {\r\n                    self.cleanActionChanges = {};\r\n                }\r\n                if (!self.cleanActionChanges[key]) {\r\n                    self.cleanActionChanges[key] = {};\r\n                }\r\n                self.cleanActionChanges[key][xpath] = \"\";\r\n            }\r\n        } else {\r\n            self.pendingActions.push({\r\n                method: self.cleanData,\r\n                arguments: \"\"\r\n            });\r\n        }\r\n    },\r\n\r\n    onTotalData: function (ui) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var data = properties.data || {};\r\n        var rows = data.rows;\r\n        var rowsLength = rows.length;\r\n        var showTotal = [];\r\n        var columnsModel = self.buildColumnModel();\r\n        var result;\r\n\r\n        bizagi.util.tablet.startLoading();\r\n\r\n        columnsModel.forEach(function callback(column, columnIndex) {\r\n            if (column.bizAgiProperties) {\r\n                operationState = column.bizAgiProperties.totalize.operation;\r\n\r\n                switch (operationState) {\r\n                    case \"sum\":\r\n                        result = rows.sum(function (row) {\r\n                            var return_value = row[columnIndex] !== null ? row[columnIndex] : column.bizAgiProperties.defaultvalue;\r\n                            return Number(return_value)\r\n                        }, columnIndex);\r\n                        break;\r\n\r\n                    case \"count\":\r\n                        result = rows.count(function (row) {\r\n                            //Checks if there is a DefaultValue, so assign it to the returnedvalu in case it doesn't have value\r\n                            var return_value = row[columnIndex] !== null ? row[columnIndex] : column.bizAgiProperties.defaultvalue;\r\n\r\n                            if (!bizagi.util.isArray(return_value)) {\r\n                                return return_value;\r\n                            }\r\n\r\n                            if (bizagi.util.isArray(return_value) && return_value.length > 0) {\r\n                                return return_value; //If the returned value is not undefined, neither null, it will count +1\r\n                            }\r\n                        }, column, columnIndex);\r\n\r\n                        break;\r\n\r\n                    case \"max\":\r\n                        result = rows.max(function (row) {\r\n                            var return_value = row[columnIndex] !== null ? row[columnIndex] : column.bizAgiProperties.defaultvalue;\r\n                            return Number(return_value)\r\n                        }, columnIndex);\r\n\r\n                        break;\r\n\r\n                    case \"min\":\r\n                        result = rows.min(function (row) {\r\n                            var return_value = row[columnIndex] !== null ? row[columnIndex] : column.bizAgiProperties.defaultvalue;\r\n                            return Number(return_value);\r\n                        }, columnIndex);\r\n                        break;\r\n\r\n                    case \"avg\":\r\n                        result = rows.avg(function (row) {\r\n                            var return_value = row[columnIndex] !== null ? row[columnIndex] : column.bizAgiProperties.defaultvalue;\r\n                            return Number(return_value);\r\n                        }, columnIndex);\r\n\r\n                        result = result.toFixed(2);\r\n                        break;\r\n                }\r\n\r\n                if (operationState) {\r\n                    result = self.formatTotalizedResult(operationState, column.bizAgiProperties.type, result);\r\n                    showTotal.push({label: column.label, total: result});\r\n                }\r\n            }\r\n        });\r\n        self.showTotals(showTotal);\r\n        bizagi.loading.stop();\r\n    },\r\n\r\n    formatTotalizedResult: function (operation, controlType, value) {\r\n        switch (operation) {\r\n            case 'sum':\r\n            case 'avg':\r\n            case 'min':\r\n            case 'max':\r\n                if (controlType == \"columnMoney\" || controlType == \"money\") {\r\n                    return bizagi.util.formatMonetaryCell(value);\r\n                }\r\n                break;\r\n        }\r\n\r\n        return value || 0;\r\n    },\r\n\r\n    showTotals: function (params) {\r\n        var self = this;\r\n        var content = $.fasttmpl(self.renderFactory.getTemplate('bizagi.grid.totalizer'), {items: params});\r\n\r\n        self.grid.mobileView({\r\n            displayName: bizagi.localization.getResource(\"render-grid-totalizer\"),\r\n            orientation: self.properties.orientation,\r\n            style: \"width: 80%; height: 70%\",\r\n            transition: \"fade:in\",\r\n            cssClass: \"bz-modal-view--totalizer\",\r\n            showBorder: true,\r\n            contentTemplate: content\r\n        });\r\n    },\r\n\r\n    changeBackgroundColor: function (color) {\r\n        var control = this.getControl();\r\n        if (control) {\r\n            if (color !== 'none') {\r\n                $(\".bz-tablet-grid\", control).css(\"background-color\", color);\r\n            } else {\r\n                $(\".bz-tablet-grid\", control).css(\"background-color\", \"\");\r\n            }\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Get Cell value with format\r\n     * @param renderColumn\r\n     * @param _value\r\n     * @returns {string}\r\n     */\r\n    getCellValueFormatted: function (renderColumn, _value) {\r\n        var dataType = renderColumn.properties.type;\r\n        var formatted = _value;\r\n\r\n        if (dataType === \"columnDate\") {\r\n            var columnProperties = renderColumn.data.properties;\r\n\r\n            if (!bizagi.util.isEmpty(formatted)) {\r\n                // Formats the value in full invariant (with time) in order to send to the server\r\n                var date = bizagi.util.dateFormatter.getDateFromInvariant(formatted, columnProperties.showTime);\r\n\r\n                if (typeof (date) != \"undefined\" && date !== 0) {\r\n                    if (!columnProperties.showTime) {\r\n                        date.setHours(0, 0, 0, 0);\r\n                    }\r\n\r\n                    formatted = bizagi.util.dateFormatter.formatInvariant(date, true);\r\n                }\r\n            } else if (_value === \"\") {\r\n                formatted = \"\";\r\n            }\r\n        }\r\n\r\n        return formatted;\r\n    },\r\n\r\n    /**\r\n     * Defines the handler when a cell changes its value\r\n     * @param renderColumn\r\n     * @param cell\r\n     * @param key\r\n     * @param args\r\n     */\r\n    onCellChange: function (renderColumn, cell, key, args) {\r\n        var self = this;\r\n        var _value = renderColumn.getValue(key);\r\n        var compositeValue = renderColumn.getCompositeValue(key);\r\n        var dataType = renderColumn.properties.type;\r\n\r\n        try {\r\n            if (dataType === \"columnDate\") {\r\n                if (!bizagi.util.isEmpty(_value)) {\r\n                    var date = bizagi.util.dateFormatter.getDateFromInvariant(_value, true);\r\n                    date.setSeconds(0);\r\n                    date.setMilliseconds(0);\r\n\r\n                    _value = bizagi.util.dateFormatter.formatInvariant(date, true);\r\n                } else if (_value === \"\") {\r\n                    _value = \"\";\r\n                }\r\n            }\r\n\r\n            var isExclusiveControl = dataType === \"columnBoolean\" && renderColumn.properties.isExclusive;\r\n\r\n            if (!isExclusiveControl && (self.properties.allowEdit)) {\r\n                self.collectGridChange($.extend(args, {\r\n                    id: key,\r\n                    xpath: renderColumn.properties.xpath || renderColumn.properties.id,\r\n                    value: _value,\r\n                    compositeValue: compositeValue,\r\n                    columnIndex: renderColumn.columnIndex,\r\n                    trigger: true\r\n                }));\r\n            }\r\n\r\n            // Update change in grid's component data\r\n            self.triggerGridPluginHandler(\"changeCellValue\", key, renderColumn.columnIndex, _value);\r\n\r\n        } catch (e) {\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Draws the editable version for the cell\r\n     * @param renderColumn\r\n     * @param properties\r\n     * @param key\r\n     * @param value\r\n     * @param isNewRow\r\n     */\r\n    drawEditableCell: function (renderColumn, properties, key, value, isNewRow) {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        // Set editable\r\n        var originalEditable = renderColumn.properties.editable;\r\n        renderColumn.properties.editable = true;\r\n\r\n        // Fix problem when required property lose\r\n        renderColumn.overrideProperties({required: properties.required});\r\n\r\n        // Render cell\r\n        $.when(renderColumn.render(key, value)).done(function (cell) {\r\n\r\n            // Register array with new records\r\n            (self.column || []).forEach(function (item, index) {\r\n                var visible = true;\r\n\r\n                self.cellOverrides[key] = self.cellOverrides[key] || {};\r\n\r\n                if (typeof (self.getCellOverride(key, index).visible) !== \"undefined\") {\r\n                    visible = self.getCellOverride(key, index).visible;\r\n                }\r\n\r\n                self.getCellOverride(key, index).visible = visible;\r\n            });\r\n\r\n            // Add change handler\r\n            renderColumn.getDecorated(key).bind(\"renderchange\", function (render, args) {\r\n                self.onCellChange(renderColumn, cell, key, args);\r\n            });\r\n\r\n            // Resolve cell\r\n            defer.resolve(cell);\r\n        });\r\n\r\n        // Restore editable\r\n        renderColumn.properties.editable = originalEditable;\r\n\r\n        // Return promise\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Draws the readonly version for the cell\r\n     * @param renderColumn\r\n     * @param properties\r\n     * @param key\r\n     * @param value\r\n     */\r\n    drawReadonlyCell: function (renderColumn, properties, key, value) {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        $.when(renderColumn.renderReadOnly(key, value)).done(function (cell) {\r\n            // Register array with new records\r\n            (self.column || []).forEach(function (item, index) {\r\n                var visible = true;\r\n\r\n                self.cellOverrides[key] = self.cellOverrides[key] || {};\r\n\r\n                if (typeof (self.getCellOverride(key, index).visible) !== \"undefined\") {\r\n                    visible = self.getCellOverride(key, index).visible;\r\n                }\r\n\r\n                self.getCellOverride(key, index).visible = visible;\r\n            });\r\n\r\n            // Resolve cell\r\n            defer.resolve(cell);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Check If xpath or id of column is valid\r\n     * @param columnXpath\r\n     * @param columnId\r\n     * @param xpath\r\n     * @returns {boolean}\r\n     */\r\n    isValidXPathId: function(columnXpath, columnId, xpath){\r\n        return columnXpath == xpath || columnId == xpath || columnXpath + \".\" + columnId == xpath;\r\n    },\r\n\r\n    /**\r\n     * Triggers the grid plugin event\r\n     * @returns {*}\r\n     */\r\n    triggerGridPluginHandler: function () {\r\n        try {\r\n            var args = Array.prototype.slice.call(arguments, 0);\r\n            return this.grid.bizagi_grid_tablet.apply(this.grid, args);\r\n        } catch (e) {\r\n        }\r\n    },\r\n    addExclusiveChange : function(id, data){\r\n        if(this.properties.hasExclusiveCheck){\r\n            for(xpath in data){\r\n                 var column = this.columns.find(function(el){\r\n                     return el.properties.xpath == xpath;\r\n                 });\r\n                 // Check if some of the changes from the edit or add form match with the exclusive controls in the grid\r\n                 var value = data[xpath];\r\n                 if(column && column.properties.isExclusive && value){\r\n                     this.exclusiveChanges[xpath] =  {\r\n                         xpath : xpath,\r\n                         simpleXpath: xpath,\r\n                         value : value,\r\n                         key:id\r\n                     }\r\n                 }\r\n            }                    \r\n        }\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Grid Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the offline grid render class to adjust to tablet devices\r\n */\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.grid.extend(\"bizagi.rendering.tablet.grid.offline\", {}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Fill default properties\r\n        var form = self.getFormContainer();\r\n        var properties = this.properties;\r\n        properties.data.originalRows = bizagi.clone(properties.data.rows);        \r\n    \r\n        properties.isTaskForm = form.properties.isTaskForm\r\n        //Preload new lines previously added offline and prepare deletions\r\n        self.newRecords = {};\r\n        if(properties[\"new-records\"]) {            \r\n            var newRowKeys = Object.keys(properties[\"new-records\"]);\r\n            for(var k = 0; k< newRowKeys.length;k++) {\r\n                self.newRecords[newRowKeys[k]] = {} \r\n                self.changes[newRowKeys[k]] = properties[\"new-records\"][newRowKeys[k]];\r\n                self.newRecords[newRowKeys[k]].createdOffline = true\r\n            }\r\n        }\r\n        self[\"deleted-records\"] = properties[\"deleted-records\"] ? properties[\"deleted-records\"] : {};\r\n\r\n        // Just apply display-type: vertical, align it to the left\r\n        properties.displayType = \"vertical\";\r\n        properties.labelAlign = \"left\";\r\n\r\n        if (properties.groupBy || properties.groupSummary) {\r\n            // Add warning\r\n            form.addWarning(self.getResource(\"render-tablet-warning-grid\"));\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    postRender: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        self.initialLoadDone = false;\r\n\r\n        // Find component holder\r\n        self.grid = $(\">div\", control);\r\n\r\n        // Hide common label\r\n        self.getLabel().hide();\r\n\r\n        // Grid plugin\r\n        self.applyGridPlugin();\r\n\r\n        // Set initial data\r\n        if (properties.data) {\r\n\r\n            self.updateData(properties.data);\r\n\r\n            // Trigger change in order to start up the actions when the controls is ready\r\n            $.when(self.ready()).done(function () {\r\n                    self.triggerRenderChange({changed: false});\r\n                });\r\n        }\r\n\r\n        // Execute pending actions\r\n        self.initialLoadDone = true;\r\n\r\n        for (var i in self.pendingActions) {\r\n            self.pendingActions[i].method.apply(self, self.pendingActions[i].arguments);\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Method to render non editable values\r\n    */\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n\r\n        // Do the same as the post-render            \r\n        self.postRender();\r\n    },\r\n\r\n    /*\r\n    *   Method to render non editable values\r\n    */\r\n    applyGridPlugin: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var grid = self.grid;\r\n        var mode = self.getMode();\r\n\r\n        // Build column metadata\r\n        var columns = self.buildColumnModel();\r\n\r\n        // Apply grid plugin\r\n        grid.bizagi_grid_tablet({\r\n            columns: columns,\r\n            title: properties.displayName,\r\n            isOfflineForm: this.isOfflineForm || false,\r\n            mode: self.getMode(),\r\n            template: {\r\n                grid: self.renderFactory.getTemplate(\"bizagi.grid.grid\"),\r\n                waiting: self.renderFactory.getTemplate(\"bizagi.grid.waiting\"),\r\n                table: self.renderFactory.getTemplate(\"bizagi.grid.table\"),\r\n                emptyTable: self.renderFactory.getTemplate(\"bizagi.grid.table.empty\"),\r\n                column: self.renderFactory.getTemplate(\"bizagi.grid.column\"),\r\n                specialColumn: self.renderFactory.getTemplate(\"bizagi.grid.column.special\"),\r\n                row: self.renderFactory.getTemplate(\"bizagi.grid.row\"),\r\n                cell: self.renderFactory.getTemplate(\"bizagi.grid.cell\"),\r\n                pager: self.renderFactory.getTemplate(\"bizagi.grid.pager\"),\r\n                dynamicPager: self.renderFactory.getTemplate(\"bizagi.grid.dynamicpager\"),\r\n                buttons: self.renderFactory.getTemplate(\"bizagi.grid.offline.buttons\"),\r\n                rowButtons: self.renderFactory.getTemplate(\"bizagi.grid.offline.row.buttons\"),\r\n                specialCell: self.renderFactory.getTemplate(\"bizagi.grid.offline.cell.special\"),\r\n            },\r\n            actions: {\r\n                add: properties.allowAdd,\r\n                edit: (properties.allowEdit && properties.withEditForm && properties.data != null),\r\n                remove: properties.allowDelete,\r\n                details: false,\r\n                inlineAdd: !properties.editable ? properties.inlineAdd: true,\r\n                allowMore: false,\r\n                enableXlsExport: false,\r\n                enablePdfExport: false,\r\n                hasTotalizer: false\r\n            },\r\n            isValid: function () {\r\n                return self.isValidGrid();\r\n            },\r\n            pageRequested: function (ui) {\r\n                if (mode !== \"execution\") return;\r\n                self.fetchData(ui.page, ui.sortBy, ui.sortType);\r\n            },\r\n            drawCell: function (ui) {\r\n                return self.drawCell(ui.column, ui.key, ui.value, ui.isNewRow);\r\n            },\r\n            cellReady: function (ui) {\r\n                return self.onCellReady(ui.column, ui.key, ui.cell, ui.isNewRow);\r\n            },\r\n            rowSelected: function (ui) {\r\n                if (mode !== \"execution\") return;\r\n                self.triggerHandler(\"rowSelected\", {id: ui.key, data: ui});\r\n            },\r\n            addRow: function (ui) {\r\n                if (mode !== \"execution\") return;\r\n                self.addRow();\r\n            },\r\n            editRow: function (ui) {\r\n                if (mode !== \"execution\") return;\r\n                self.editRow(ui.key);\r\n            },\r\n            deleteRow: function (ui) {\r\n                if (mode !== \"execution\") return;\r\n                self.deleteRow(ui.key);\r\n            },\r\n            saveAddedRows: function (ui) {\r\n                self.saveInlineAddedRows(ui.keys);\r\n            },\r\n            beforeInlineAdd: function () {\r\n                self.inlineAddDeferred = new $.Deferred();\r\n            },\r\n            afterInlineAdd: function () {\r\n                if (self.inlineAddDeferred) {\r\n                    self.inlineAddDeferred.resolve();\r\n                }\r\n            },\r\n            cancelEdition: function (ui) {\r\n                self.removeNewRecords(ui);\r\n            },\r\n            removeNewRecords: function (ui) {\r\n                self.removeNewRecords(ui);\r\n            }\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Method to fetch data from the server and then update the data\r\n    */\r\n    fetchData: function (page, sortBy, sortType) {\r\n        var self = this;\r\n\r\n        self.dataReadyDeferred = new $.Deferred();\r\n\r\n        // Start loading to avoid multiple calls to the server\r\n        self.startLoading();\r\n\r\n        $.when(self.getRemoteData()).then(function (data) {\r\n            self.endLoading();\r\n            if (data) {\r\n                self.updateData(data);\r\n                self.triggerRenderChange();\r\n                self.dataReadyDeferred.resolve();\r\n            }\r\n        });\r\n    },\r\n\r\n    processChanges: function () {\r\n        return [];\r\n    },\r\n\r\n    collectOfflineTaskData: function(renderValues) {\r\n        var self = this;        \r\n        var properties = self.properties;\r\n        var errorsMessage = [];\r\n        var internalRedersValues = [];\r\n        var data = self.properties.data;\r\n        var temporalNew = {};\r\n            // Save pending inline add rows\r\n            if (self.isValid(errorsMessage)) {\r\n                for (var id in self.changes) {\r\n                    var sortArray = [];\r\n                    var currentChanges = {};                    \r\n                    for (var columnXpath in self.changes[id]) {\r\n                        \r\n                        if (self.canColumnBeSent(id, columnXpath)) {\r\n                            var columnNumber = self.getColumn(columnXpath).columnIndex - 1;\r\n                            var value = self.changes[id][columnXpath];\r\n\r\n                            if (typeof value === \"string\") {\r\n                                if (value.match(/\\n/gm) !== null) {\r\n                                    value = value.replaceAll(\"\\n\", \"\\\\n\");\r\n                                }\r\n                            }\r\n\r\n                            sortArray[columnNumber] = value;                                  \r\n                            var xpath = properties.xpath + self.buildCellXpathFilter(id) + \".\" + columnXpath;\r\n                            var columnValue = self.changes[id][columnXpath];\r\n                            var value = columnValue && columnValue.value ? columnValue.value : columnValue;\r\n                            renderValues[xpath] = value;\r\n                            //Changes are store to delete them if the row is new, the rest of changes can be saved by xpath\r\n                            currentChanges[xpath] = value;\r\n                        }\r\n                    }\r\n                    //If new record store action data\r\n                    if(self.newRecords[id]) {\r\n                        //Use - to avoid issues with possible xpaths in renderValues used both in new and deleted records                        \r\n                        var addRowData = {\r\n                            url: properties.addUrl,\r\n                            idRender: properties.id,\r\n                            xpath: properties.xpath,\r\n                            xpathContext: properties.xpathContext,\r\n                            contexttype: properties.contexttype,\r\n                            idPageCache: properties.idPageCache,\r\n                            submitData: self.changes[id],\r\n                            prepare: true,\r\n                            idRow: parseInt(id+'')\r\n                        }\r\n                        temporalNew[id] = addRowData;\r\n                        for(change in currentChanges) {\r\n                            delete renderValues[change];\r\n                        }\r\n                        var details = {};\r\n                        details.idRow = parseInt(id+'');    \r\n                        details.isNew = true;\r\n                        details.changes = self.changes[id];\r\n                        sortArray.push(details);\r\n                        if (!self.newRecords[id].createdOffline)                         \r\n                            internalRedersValues[internalRedersValues.length] = sortArray;                                            \r\n                    }                                                                \r\n                }\r\n            }\r\n            // Get data\r\n            if (JSON.stringify(data.rows) !== JSON.stringify(data.originalRows) || internalRedersValues.length > 0) {\r\n                renderValues[properties.xpath] = renderValues[properties.xpath]? renderValues[properties.xpath]: {}\r\n                if (typeof (data.rows) !== \"undefined\" && internalRedersValues.length > 0) {\r\n                    //Merge new and edited rows only saved for future edition\r\n                    renderValues[properties.xpath].rows = $.merge($.merge([], self.processOldRows(data.rows)),\r\n                        internalRedersValues);\r\n                } else if (typeof (data.rows) !== \"undefined\" && data.rows.length > 0) {\r\n                    renderValues[properties.xpath].rows = self.processOldRows(data.rows);\r\n                } else {\r\n                    renderValues[properties.xpath].rows = internalRedersValues;\r\n                }\r\n                if(self[\"deleted-records\"] && Object.keys(self[\"deleted-records\"]).length > 0 )\r\n                    renderValues[properties.xpath][\"deleted-records\"] = self[\"deleted-records\"];\r\n                if(temporalNew && Object.keys(temporalNew).length > 0)\r\n                    renderValues[properties.xpath][\"new-records\"] = temporalNew;\r\n            }                                                \r\n            \r\n    },\r\n\r\n    /*\r\n    * Old Method that collects data only for Offline start forms and prepares data for AsyncWorkItem\r\n    */\r\n    collectOfflineStartData: function(renderValues){\r\n        var self = this;\r\n        var errorsMessage = [];\r\n        var internalRedersValues = [];\r\n        var properties = self.properties;\r\n        var data = self.properties.data;\r\n        // Save pending inline add rows\r\n        if (self.isValid(errorsMessage)) {\r\n            for (var id in self.changes) {\r\n                var sortArray = [];\r\n                for (var columnXpath in self.changes[id]) {\r\n                    // Check if the render can submit data\r\n                    if (self.canColumnBeSent(id, columnXpath)) {\r\n                        var columnNumber = self.getColumn(columnXpath).columnIndex - 1;\r\n                        var value = self.changes[id][columnXpath];\r\n                        if (typeof value === \"string\") {\r\n                            if (value.match(/\\n/gm) !== null) {\r\n                                value = value.replaceAll(\"\\n\", \"\\\\n\");\r\n                            }\r\n                        }\r\n                        sortArray[columnNumber] = {\r\n                            value: value,\r\n                            xpath: columnXpath,\r\n                            DataType: self.getColumn(columnXpath).properties.dataType\r\n                        };\r\n                    }\r\n                }\r\n                if (typeof (self.properties.data.rows) !== \"undefined\" && self.properties.data.rows.length > 0) {\r\n                    // Search row\r\n                    var currentRow = [];\r\n                    for (var i = 0; i < data.rows.length; i++) {\r\n                        if (data.rows[i][0] == id) {\r\n                            currentRow = data.rows[i];\r\n                            // Delete current data\r\n                            data.rows.splice(i, 1);\r\n                            i--;\r\n                            // Mixed data\r\n                            currentRow = self.processRow(currentRow);\r\n                            sortArray = $.extend(true, currentRow, sortArray);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                internalRedersValues[internalRedersValues.length] = sortArray;\r\n            }\r\n        }\r\n\r\n\r\n        // Get data\r\n        if (JSON.stringify(data.rows) !== JSON.stringify(data.originalRows) || internalRedersValues.length > 0) {\r\n            if (typeof (data.rows) !== \"undefined\" && internalRedersValues.length > 0) {\r\n                renderValues[properties.xpath].rows = $.merge($.merge([], self.processOldRows(data.rows)),\r\n                    internalRedersValues);\r\n            } else if (typeof (data.rows) !== \"undefined\" && data.rows.length > 0) {\r\n                renderValues[properties.xpath].rows = self.processOldRows(data.rows);\r\n            } else {\r\n                renderValues[properties.xpath].rows = internalRedersValues;\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n   collectData: function(renderValues) {\r\n        var self = this;\r\n        self.collectOfflineTaskData(renderValues);       \r\n    },\r\n\r\n    /*\r\n    *   Delete field id array objects\r\n    */\r\n    processOldRows: function (rows) {\r\n        var newRows = [];\r\n        var tempRows = rows;\r\n        var self = this;\r\n        for (var col = 0, leng = tempRows.length; col < leng; col++) {\r\n            var temp = tempRows[col];\r\n            newRows[col] = $.grep(temp, function (n, i) {\r\n                return i > 0;\r\n            });\r\n            \r\n            var details = {};\r\n            details.idRow = parseInt(temp[0]+'');    \r\n            details.isNew = self.newRecords[temp[0]]? true : false;\r\n            details.changes = self.changes[temp[0]] ? self.changes[temp[0]] : {};\r\n            newRows[col].push(details);\r\n        }\r\n\r\n        return newRows;\r\n    },\r\n    /*\r\n    *   Delete field id array\r\n    */\r\n    processRow: function (row) {\r\n        return $.grep(row, function (n, i) {\r\n            return i > 0;\r\n        });\r\n    },\r\n    /*\r\n    *   Customizes the content drawing inside the cell\r\n    */\r\n    drawCell: function (column, key, value, isNewRow) {\r\n        var self = this;\r\n\r\n        if (column.key) return value;\r\n\r\n        if (typeof (value) === \"object\" && value!==null && !isNewRow) {\r\n            value = value.hasOwnProperty(\"value\") ? value.value : value;\r\n        }\r\n\r\n        // Get render column                \r\n        var columnIndex = column.index - 1;\r\n        var renderColumn = self.columns[columnIndex];\r\n        var cellOverride = self.getCellOverride(key, column.index - 1);\r\n\r\n        self.newRecords = self.newRecords || {};\r\n\r\n        // Get cell properties\r\n        if (!self.cellMetadata[key]) self.cellMetadata[key] = {};\r\n        if (!self.cellMetadata[key][columnIndex]) self.cellMetadata[key][columnIndex] = {};\r\n        var properties = self.cellMetadata[key][columnIndex].properties || renderColumn.originalProperties;\r\n\r\n        var visible = properties.visible !== undefined ? properties.visible : true;\r\n        var editable = properties.editable !== undefined ? properties.editable : true;\r\n\r\n        // Apply overrides from cellOverrides\r\n        visible = cellOverride.visible;\r\n        editable = properties.editable ? cellOverride.editable : false;\r\n\r\n        // Show editable cell when we are performing inline add operation\r\n        if (isNewRow) editable = true;\r\n\r\n        // If the cell we are drawing is the summary cell, we need to make it readonly\r\n        if (key === \"summary\") editable = false;\r\n\r\n        renderColumn.properties.displayType = 'value';\r\n        renderColumn.setValue(key, value);\r\n        renderColumn.setSurrogateKey(key);\r\n        renderColumn.properties.data = renderColumn.properties.data || [];\r\n\r\n        // Column search\r\n        if (renderColumn.properties.type === \"columnSearch\" && value != null) {\r\n            for (var i = 0, len = renderColumn.properties.data.length; i < len; i++) {\r\n                if (renderColumn.properties.data[i].id == value) {\r\n                    value = {id: renderColumn.properties.data[i].id, label: renderColumn.properties.data[i].value};\r\n                }\r\n            }\r\n        }\r\n\r\n        if ((renderColumn.properties.type === \"columnCombo\" || renderColumn.properties.type === \"columnList\") && value != null) { //|| renderColumn.properties.type == \"columnRadio\"\r\n            for (var i = 0, len = renderColumn.properties.data.length; i < len; i++) {\r\n                if (renderColumn.properties.data[i].id == value) {\r\n                    value = [[renderColumn.properties.data[i].id, renderColumn.properties.data[i].value]];\r\n                }\r\n            }\r\n        }\r\n\r\n        // Column text\r\n        if (renderColumn.properties.type === \"columnText\" && bizagi.util.isEmpty(value) && value != null) {\r\n            value = \"\";\r\n        }\r\n\r\n        // Do the render\r\n        if (visible) {\r\n            if (editable) {\r\n                return self.drawEditableCell(renderColumn, properties, key, value, isNewRow);\r\n            } else {\r\n                return self.drawReadonlyCell(renderColumn, properties, key, value);\r\n            }\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Draws the editable version for the cell\r\n    */\r\n    drawEditableCell: function (renderColumn, properties, key, value, isNewRow) {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        // Set editable\r\n        var originalEditable = renderColumn.properties.editable;\r\n        renderColumn.properties.editable = true;\r\n\r\n        // Fix problem when required property lose\r\n        renderColumn.overrideProperties({required: properties.required});\r\n\r\n        // Render cell\r\n        $.when(renderColumn.render(key, value)).done(function (cell) {\r\n            // Register array with new records, just when this is a new-record\r\n            if (isNewRow && !self.newRecords[key]) {\r\n                self.newRecords[key] = {};\r\n            }\r\n\r\n            // convert all row visible\r\n            for (var j = 0; j < self.columns.length; j++) {\r\n                self.cellOverrides[key] = self.cellOverrides[key] || {};\r\n                self.getCellOverride(key, j).visible = (self.getCellOverride(key, j).visible != undefined) ? self.getCellOverride(key, j).visible : true;\r\n            }\r\n\r\n            // Add change handler  \r\n            renderColumn.getDecorated(key).bind(\"renderchange\", function (render) {\r\n                self.onCellChange(renderColumn, cell, key);\r\n            });\r\n\r\n            // Resolve cell\r\n            defer.resolve(cell);\r\n        });\r\n\r\n        // Restore editable\r\n        renderColumn.properties.editable = originalEditable;\r\n\r\n        // Return promise\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Draws the readonly version for the cell\r\n    */\r\n    drawReadonlyCell: function (renderColumn, properties, key, value) {\r\n        var result = \"\";\r\n\r\n        // Use totalizer format when printing summary row\r\n        if (key === \"summary\") {\r\n            var originalFormat = renderColumn.properties.textFormat;\r\n            if (renderColumn.properties.totalize) {\r\n                renderColumn.properties.textFormat = renderColumn.properties.totalize.format;\r\n            }\r\n\r\n            result = renderColumn.renderSummary(key, value);\r\n\r\n            // Restore column format\r\n            renderColumn.properties.textFormat = originalFormat;\r\n        } else {\r\n            result = renderColumn.renderReadOnly(key, value);\r\n        }\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Defines the handler when a cell changes its value\r\n    */\r\n    onCellChange: function (renderColumn, cell, key) {\r\n\r\n        var self = this;\r\n        var _value = renderColumn.getValue(key);\r\n        var compositeValue = renderColumn.getCompositeValue(key);\r\n\r\n        if (renderColumn.properties.type === \"columnDate\" && renderColumn.data.properties.showTime == true) {\r\n\r\n            if (!bizagi.util.isEmpty(_value)) {\r\n                var date = bizagi.util.dateFormatter.getDateFromInvariant(_value, true);\r\n                _value = bizagi.util.dateFormatter.formatInvariant(date, true);\r\n            } else if (_value === \"\") {\r\n                _value = \"\";\r\n            }\r\n        } else if (renderColumn.properties.type === \"columnDate\") {\r\n\r\n            if (!bizagi.util.isEmpty(_value)) {\r\n                var date = bizagi.util.dateFormatter.getDateFromInvariant(_value, false);\r\n                date.setHours(0, 0, 0, 0);\r\n                _value = bizagi.util.dateFormatter.formatInvariant(date, true);\r\n            } else if (_value === \"\") {\r\n                _value = \"\";\r\n            }\r\n        }\r\n\r\n        if (self.properties.allowEdit || self.grid.bizagi_grid_tablet(\"isNewRecord\", key)) {\r\n            var trigger = self.grid.bizagi_grid_tablet(\"isNewRecord\", key) ? false : true;\r\n            self.collectGridChange({\r\n                id: key,\r\n                xpath: renderColumn.properties.xpath,\r\n                value: _value,\r\n                compositeValue: compositeValue,\r\n                columnIndex: renderColumn.columnIndex,\r\n                trigger: trigger\r\n            });\r\n        }\r\n\r\n        // Update change in grid's component data\r\n        self.grid.bizagi_grid_tablet(\"changeCellValue\", key, renderColumn.columnIndex, _value);\r\n\r\n        // If the column has totalizers then we need to refresh the summary\r\n        if (renderColumn.properties.totalize && renderColumn.properties.totalize.operation) {\r\n            self.grid.bizagi_grid_tablet(\"refreshSummary\", renderColumn.columnIndex);\r\n        }\r\n    },\r\n    /*\r\n    *   Collect a single cell change made in the grid to send the data when the user saves the form\r\n    */\r\n    collectGridChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        var id = params.id;\r\n        var xpath = params.xpath;\r\n        var value = params.value;\r\n        var trigger = typeof (params.trigger) !== \"undefined\" ? params.trigger : true;\r\n\r\n        self.changes[id] = self.changes[id] || {};\r\n        self.changes[id][xpath] = value;\r\n\r\n        if (trigger)\r\n            self.triggerRenderChange({key: id, column: xpath});\r\n    },\r\n    /*\r\n    *   Executes when the cell is ready and inserted into the DOM\r\n    */\r\n    onCellReady: function (column, key, cell, isNewRow) {\r\n        // Available editable\r\n        isNewRow = true;\r\n        bizagi.rendering.tablet.grid.prototype.onCellReady.apply(this, arguments);\r\n    },\r\n\r\n    /**\r\n     *  Adds a row to the grid\r\n     */\r\n    addRow: function () {\r\n        bizagi.showMessageBox(bizagi.localization.getResource(\"render-tablet-error-userfield\"), bizagi.localization.getResource(\"render-tablet-error-userfield\"));\r\n    },\r\n\r\n    /**\r\n     *  Edits a row in the grid\r\n     */\r\n    editRow: function (id) {\r\n    },\r\n\r\n    /**\r\n     *  Deletes a row to the grid\r\n     */\r\n    deleteRow: function (id) {\r\n        var self = this;\r\n\r\n        if (!id || id == 0) {\r\n            bizagi.showMessageBox(bizagi.localization.getResource(\"render-grid-message-no-selected-row\"), bizagi.localization.getResource(\"render-grid-header-no-selected-row\"));\r\n            return;\r\n        }\r\n\r\n        bizagi.showConfirmationBox(this.getResource(\"render-grid-delete-confirmation\")).done(function () {\r\n            // Do a grid record deletion\r\n            $.when(self.submitDeleteRequest(id))\r\n                .done(function () {\r\n                    // Reload grid\r\n                    self.fetchData();\r\n                });\r\n        });\r\n    },\r\n\r\n    /**\r\n     *  Edits the entire row (inline) in another slide\r\n     */\r\n    editInline: function (id) {\r\n    },\r\n    /*\r\n    *   Retrieve the data for the new rows and push them into the server\r\n    */\r\n    saveInlineAddedRows: function (keys, bRefresh) {\r\n        var self = this;\r\n        var rows = self.processChanges();\r\n\r\n        if (!bizagi.util.isEmpty(rows)) {\r\n            self.properties.data.rows = $.merge(self.properties.data.rows, rows);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Removes invalid records \r\n    */\r\n    removeNewRecords: function (ui) {\r\n        var self = this;\r\n\r\n        if (ui && ui.keys) {\r\n            $.each(ui.keys, function (_, key) {\r\n                if (self.newRecords[key]) {\r\n                    delete self.newRecords[key];\r\n                    delete self.changes[key]; \r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set params\r\n        params = params || {};\r\n\r\n        // Check if a custom method has been given\r\n        if (properties.overrideGetRemoteData) {\r\n            var result = properties.overrideGetRemoteData(params);\r\n            return result != null ? result.promise() : null;\r\n        }\r\n\r\n        // Default ajax call\r\n        var defer = new $.Deferred();\r\n\r\n        // Resolve with remote data\r\n        var data = properties.data;\r\n\r\n        // Resolve with fetched data    \r\n        properties.page = data.page;\r\n        properties.records = data.records;\r\n        properties.totalPages = data.totalPages;\r\n\r\n        // Check RTL\r\n        if (self.isRTL()) {\r\n            data.rows = self.changeOrderData(data.rows);\r\n        }\r\n\r\n        defer.resolve(data);\r\n\r\n        return defer.promise();\r\n    },\r\n    /*\r\n    *   Submits a grid delete record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitDeleteRequest: function (id) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var data = self.properties.data;\r\n        var statusAction = false;            \r\n        // Found row by id\r\n        var currentRow = [];\r\n        for (var i = 0, length = data.rows.length; i < length; i++) {\r\n            if (data.rows[i][0] == id) {\r\n                currentRow = data.rows[i];\r\n\r\n                data.rows.splice(i, 1);\r\n                i--;\r\n\r\n                data.records--;\r\n                statusAction = true;\r\n                if(!self.newRecords[id])\r\n                {\r\n                    var xpath = properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n                    var delInfo = {\r\n                        url: properties.deleteUrl,\r\n                        idRender: properties.id,\r\n                        xpath: xpath,\r\n                        xpathContext: properties.xpathContext,\r\n                        idPageCache: properties.idPageCache,\r\n                        contexttype: properties.contextType,\r\n                        prepare: true\r\n                    }\r\n                    self[\"deleted-records\"][id] = delInfo;\r\n                }\r\n                else {\r\n                    delete self.newRecords[id];\r\n                }\r\n                delete self.changes[id];\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (data.rows);\r\n    },\r\n\r\n    isValidGrid: function () {\r\n        var self = this;\r\n        var errorsMessage = [];\r\n        var form = self.getFormContainer();\r\n\r\n        if (typeof (form.validationController) !== \"undefined\")\r\n            form.validationController.clearValidationMessages();\r\n\r\n        self.isValid(errorsMessage);\r\n\r\n        if (errorsMessage.length > 0) {\r\n            if (typeof (form.validationController) !== \"undefined\") {\r\n                for (var index = 0; index < errorsMessage.length; index++) {\r\n                    form.validationController.showValidationMessage(errorsMessage[index].message, errorsMessage[index].xpath);\r\n                }\r\n            }\r\n\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n});","/**\r\n *   Name: Bizagi Tablet Render Grouped Grid Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the Grouped Grid render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from Grid Tablet base\r\nbizagi.rendering.tablet.grid.extend(\"bizagi.rendering.tablet.grid.grouped\", {}, {\r\n\r\n    /**\r\n     * Method to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this.getControlFiller().addClass(\"bz-form-item__control--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this.getControlFiller().addClass(\"bz-form-item__control--hidden\");\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Tablet Render Search Extension\r\n *   Author: Bizagi UI Forms\r\n *   Comments:\r\n *   -   This script will redefine the Search render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.search\", bizagi.rendering.search.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.search.extend(\"bizagi.rendering.tablet.search\", {\r\n    ADVANCED_SEARCH_ID: -1,\r\n    ADVANCED_ADDITION_ID: -2,\r\n    CLEAR_SEARCH_ID: -3,\r\n    NO_RESULTS_SEARCH_ID: -4,\r\n    DEFAULT_SEARCH_ID: \"\",\r\n    SEARCH_MIN_LENGTH: 3,\r\n    SEARCH_DELAY: 250,\r\n    SEARCH_MAX_RECORDS: 50\r\n}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data submitData\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Check if offline forms is supported\r\n        this.isOfflineForm = bizagi.util.isOfflineForm({context: this});\r\n        this.properties.submitOnChange = this.isOfflineForm ? false : this.properties.submitOnChange;\r\n\r\n        // Store reference of all ajax request in order to run only one instance of them\r\n        this.deferredReference = null;\r\n    },\r\n\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"readonly\");\r\n        var value = this.getDisplayValue();\r\n        var label = value.label || value.value;\r\n\r\n        if (typeof label != \"undefined\") {\r\n            if (typeof label == \"object\")\r\n                label = label.join(\" - \");\r\n        } else {\r\n            label = \"\";\r\n        }\r\n\r\n        if (typeof label == \"string\") {\r\n            if (value.additionallabel) {\r\n                label += \" - \" + value.additionallabel;\r\n            }\r\n\r\n            label = bizagi.util.sanitizeHTML(label);\r\n        }\r\n\r\n        return $.fasttmpl(template, {\r\n            value: label,\r\n            editable: this.properties.editable\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     * @returns {}\r\n     */\r\n    postRender: function () {\r\n        this.searchInput = $(\".bz-input-icon\", this.getControl());\r\n    },\r\n\r\n    postRenderReadOnly: function () {\r\n        this.searchInput = $(\".bz-input-icon\", this.getControl());\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour\r\n     * to add handlers\r\n     * @returns {}\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Select new item\r\n        $(\".bz-input-icon\", control).on(\"click\", function () {\r\n            if (!self.properties.advancedSearch || self.isOfflineForm) {\r\n                self._simplySearchView();\r\n            } else {\r\n                self._advanceSearchView();\r\n            }\r\n        });\r\n\r\n        $(\".bz-icn--clear\", control).bind(\"click\", function (event) {\r\n            // Change display icon\r\n            $(\".bz-input-icon\", control).addClass(\"bz-input-icon--empty\");\r\n\r\n            // Call clean data\r\n            self.cleanData();\r\n\r\n            // Submit info to server\r\n            self.readyActionExecution().done(function () {\r\n                if (self.properties.submitOnChange) {\r\n                    self.submitData();\r\n                }\r\n            });\r\n\r\n            event.stopPropagation();\r\n        });\r\n\r\n    },\r\n\r\n    /**\r\n     * Configure the modalView Handlers for the new suggest control\r\n     * @param {} inputContainer\r\n     * @returns {}\r\n     */\r\n    configureModalViewHandlers: function (modalView) {\r\n        var self = this;\r\n\r\n        // Configuring list as a selectable element\r\n        self.modalViewList = $(\".bz-list\", modalView.content);\r\n\r\n        // Suggest\r\n        var suggestFilter = bizagi.util.debounce(function (value) {\r\n            self.autoCompleteSearchResults($.trim(value));\r\n        }, self.Class.SEARCH_DELAY);\r\n\r\n        $(\"[data-action=close]\", modalView.header).bind(\"click\", function () {\r\n            modalView.close();\r\n        });\r\n\r\n        var $clearButton = $(\".bz-modal-view__clear\", modalView.header);\r\n        var $searchInput = $(\".bz-modal-view__search\", modalView.header);\r\n\r\n        $clearButton.bind(\"click\", function () {\r\n            $searchInput.val(\"\").trigger(\"clean\");\r\n        });\r\n\r\n        // Setting the initial selected display value\r\n        $(\".bz-list\", modalView.content).on(\"click\", \"li\", function () {\r\n            var item = $.data(this).item;\r\n\r\n            if (!item || (item && item.id == self.Class.NO_RESULTS_SEARCH_ID))\r\n                return\r\n\r\n            self.selectItem(item);\r\n\r\n            modalView.close();\r\n        });\r\n\r\n        // Filtering list\r\n        $searchInput.bind(\"clean keyup\", function () {\r\n            if (this.value == \"\") {\r\n                $clearButton.removeClass(\"bz-modal-view__clear--visible\");\r\n            } else {\r\n                $clearButton.addClass(\"bz-modal-view__clear--visible\");\r\n            }\r\n            suggestFilter(this.value);\r\n        }).on(\"focus\", function () {\r\n            modalView.header.addClass(\"bz-modal-view__header--active\");\r\n        }).on(\"blur\", function () {\r\n            modalView.header.removeClass(\"bz-modal-view__header--active\");\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Opens the search slide\r\n     * @private\r\n     */\r\n    _advanceSearchView: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var formSearchParams = $.extend({}, self.getParams(), {\r\n            container: self.getFormContainer().container,\r\n            title: properties.displayName || \"\",\r\n            allowNew: properties.allowNew\r\n        });\r\n\r\n        // Create slide search object\r\n        var searchForm = new bizagi.rendering.tablet.slide.searchForm(\r\n            self.dataService,\r\n            self.renderFactory,\r\n            properties.searchForms, {\r\n                allowFullSearch: properties.allowFullSearch,\r\n                maxRecords: properties.maxRecords,\r\n                idRender: properties.id,\r\n                navigation: self.getParams().navigation,\r\n                idPageCache: properties.idPageCache,\r\n                orientation: properties.orientation || \"ltr\",\r\n                editable: properties.editable\r\n            }, formSearchParams);\r\n\r\n        // Render the search form\r\n        searchForm.render({\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache\r\n        }).done(function (item) {\r\n            // Set data\r\n            self.setValue(item);\r\n\r\n            self.readyActionExecution().done(function () {\r\n                var form = self.getFormContainer();\r\n\r\n                if (!self.properties.submitOnChange) {\r\n                    $.when(form.submitData()).done(function () {\r\n                        self.refreshControl();\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Simply search autocomplete\r\n     * @private\r\n     */\r\n    _simplySearchView: function () {\r\n        var self = this;\r\n        var content = self.getContentTemplate();\r\n\r\n        self.searchInput.mobileView({\r\n            customHeader: $.fasttmpl(self.renderFactory.getTemplate(\"modal-header-search\"), {}),\r\n            orientation: self.properties.orientation || \"\",\r\n            contentTemplate: content,\r\n            style: \"width: 80%; height: 70%\",\r\n            close: function () {\r\n                self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n            },\r\n            afterOpenAnimation: function (event) {\r\n                $(\".bz-modal-view__search\", event.view.header).focus();\r\n            },\r\n            open: function (event) {\r\n                self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\r\n                self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n            },\r\n            configureActions: function (context) {\r\n                self.configureModalViewHandlers(context);\r\n            }\r\n        });\r\n    },\r\n\r\n    autoCompleteSearchResults: function (currentValue) {\r\n        var self = this;\r\n\r\n        $.when(self.processRequest({term: currentValue}))\r\n            .done(function (response) {\r\n\r\n                self.modalViewList.find(\"li\").remove();\r\n\r\n                for (var i = 0, length = response.length; i < length; i++) {\r\n                    var searchItem = self.renderSearchItem(response[i]);\r\n\r\n                    searchItem.appendTo(self.modalViewList);\r\n                }\r\n            });\r\n    },\r\n\r\n    renderSearchItem: function (item) {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"search.item\");\r\n\r\n        var searchItem = $.tmpl(template, {\r\n            id: item.id,\r\n            label: item.label,\r\n            value: item.value\r\n        });\r\n\r\n        searchItem.data(\"item\", item);\r\n\r\n        return searchItem;\r\n    },\r\n\r\n    processRequest: function (req) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var deferred = new $.Deferred();\r\n\r\n        // Create array for response objects\r\n        var suggestions = [];\r\n\r\n        if (self.properties.allowSuggest && (req.term.length >= self.properties.searchLength)) {\r\n\r\n            // Update term property to reflect the search\r\n            properties.term = req.term;\r\n\r\n            var getSuggestData = self.isOfflineForm ? self.getOfflineData() : self.getData();\r\n\r\n            // Cancel previous request in order to improve the performance\r\n            if (self.deferredReference && typeof (self.deferredReference.reject) === \"function\" && self.deferredReference.state() !== \"resolved\") {\r\n                self.deferredReference.reject({hideStatus: true});\r\n            }\r\n\r\n            self.deferredReference = getSuggestData.done(function (data) {\r\n                if (data && data.length > 0) {\r\n                    data = data.slice(0, properties.maxRecords);\r\n\r\n                    if (data.length > self.Class.SEARCH_MAX_RECORDS) {\r\n                        data = data.slice(0, self.Class.SEARCH_MAX_RECORDS);\r\n\r\n                        suggestions.push({\r\n                            id: self.Class.NO_RESULTS_SEARCH_ID,\r\n                            label: self.getResource(\"render-search-maximum-records-allowed\"),\r\n                            value: \"\"\r\n                        });\r\n\r\n\r\n                    } else {\r\n                        data = data.slice(0, properties.maxRecords);\r\n                    }\r\n\r\n                    // Default value\r\n                    suggestions.push({\r\n                        id: self.Class.DEFAULT_SEARCH_ID,\r\n                        label: self.getResource(\"render-combo-empty-value\"),\r\n                        value: \"\"\r\n                    });\r\n\r\n                    $.each(data, function (i, val) {\r\n                        if (properties.maxRecords === 0 || i < properties.maxRecords) {\r\n                            var parseValue = bizagi.util.highlightMatches(val, req.term);\r\n\r\n                            suggestions.push({id: val.id, label: parseValue, value: val.value});\r\n                        }\r\n                    });\r\n\r\n                } else {\r\n                    suggestions.push({\r\n                        id: self.Class.NO_RESULTS_SEARCH_ID,\r\n                        label: self.getResource(\"render-grid-no-records\"),\r\n                        value: \"\"\r\n                    });\r\n                }\r\n\r\n                deferred.resolve(suggestions);\r\n\r\n            }).fail(function () {\r\n                deferred.reject();\r\n            });\r\n        } else {\r\n            deferred.resolve(suggestions);\r\n        }\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    /**\r\n     * Sets the value to show and calls the method to sets the control value\r\n     * @param {object} value\r\n     * @param {int} value.id\r\n     * @param {string} value.label\r\n     * @param {string=} value.additionallabel\r\n     * @example\r\n     *   value = {\r\n     *     id: 123,\r\n     *     label: \"xx\",\r\n     *     additionallabel: \"yyyy\"\r\n     *   }\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var label = \"\";\r\n\r\n        value = self.mapValue(value);\r\n\r\n        if (value !== null && typeof value !== \"undefined\" && typeof value.id !== \"undefined\") {\r\n            if (value.additionallabel && value.label) {\r\n                label = value.label + \" - \" + value.additionallabel;\r\n            } else if (value.label) {\r\n                label = value.label;\r\n            } else {\r\n                label = \"\";\r\n            }\r\n\r\n            var inputText = self.searchInput.find(\"input\");\r\n            inputText.val(label);\r\n            inputText.attr(\"id\", value.id);\r\n\r\n            if (value.id !== \"\" && self.properties.allowClear) {\r\n                $(\".bz-input-icon\", self.getControl()).removeClass(\"bz-input-icon--empty\");\r\n            }\r\n\r\n            if (self.properties.editable) {\r\n                self.setValue(value, true);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * on the tablet only sends the id to submit in the tablet it send the id and the value\r\n     * @returns {}\r\n     */\r\n    submitData: function () {\r\n        var self = this;\r\n        var data = {};\r\n\r\n        // Add current data\r\n        data[self.properties.xpath] = self.getValue();\r\n\r\n        // Executes submit on change\r\n        if (self.properties.submitOnChange && data[self.properties.xpath].id != undefined)\r\n            self.submitOnChange(data, true);\r\n    },\r\n\r\n    /**\r\n     * Cleans the control's data\r\n     * @returns {}\r\n     */\r\n    cleanData: function () {\r\n        var value = {id: \"\", value: \"\"};\r\n\r\n        if(bizagi.util.isEmpty(this.value)) \r\n            value ={};\r\n\r\n        this.setValue(value);\r\n        this.setDisplayValue(value);\r\n    },\r\n\r\n    getContentTemplate: function () {\r\n        var template = this.renderFactory.getTemplate(\"search.items\");\r\n        var content = $.fasttmpl(template, {});\r\n\r\n        return $.trim(content);\r\n    },\r\n\r\n    selectItem: function (item) {\r\n        var self = this;\r\n        var previousValue = self.hasValue();\r\n        var label = Array.isArray(item.value) ? item.value.join(\" - \") : item.value;\r\n\r\n        self.setDisplayValue({id: item.id, label: label});\r\n\r\n        if (self.properties.allowClear) {\r\n\r\n            if (item.id === self.Class.DEFAULT_SEARCH_ID) {\r\n                self.searchInput.find(\".gn-bz-search__clear\").addClass(\"gn-bz-search--hidden\");\r\n                self.searchInput.find(\".gn-bz-search__icon\").removeClass(\"gn-bz-search--hidden\");\r\n            } else {\r\n                if (!previousValue && item.id !== self.Class.DEFAULT_SEARCH_ID) {\r\n                    self.searchInput.find(\".gn-bz-search__clear\").removeClass(\"gn-bz-search--hidden\");\r\n                    self.searchInput.find(\".gn-bz-search__icon\").addClass(\"gn-bz-search--hidden\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Get offline data for request\r\n     * @param request\r\n     */\r\n    getOfflineData: function () {\r\n        var self = this;\r\n        var dataList = self.properties.data || [];\r\n        var filter = (self.properties.term || \"\").toLowerCase();\r\n\r\n        return $.when(filter.startsWith(\"%%\") ? dataList : dataList.filter(function (item) {            \r\n            var value = item && item.value ? item.value : \"\";\r\n            if(typeof(value) === \"object\"){\r\n                value = value.toString();\r\n            }\r\n            return value.toLowerCase().indexOf(filter) > -1;\r\n        }));\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Letter Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the letter render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.letter\", bizagi.rendering.letter.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.label.extend(\"bizagi.rendering.tablet.letter\", {}, {});\r\n","/**\r\n *   Name: Bizagi Tablet Render Button Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the button render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.button\", bizagi.rendering.button.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.button.extend(\"bizagi.rendering.tablet.button\", {}, {\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     * @returns {}\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n\r\n        $(\":button\", self.getControl()).on(\"click\", function () {\r\n            self.processButton();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Process the button actions workflow\r\n     * @returns {}\r\n     */\r\n    processButton: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.editable) {\r\n\r\n            // Check if action need conformation\r\n            if (self.properties.needsUserConfirmation) {\r\n                $.when(bizagi.showConfirmationBox(self.properties.userConfirmationMessage, \"Bizagi\", \"warning\"))\r\n                    .done(function () {\r\n                        // Trigger change\r\n                        self.triggerRenderChange({pressed: true});\r\n                    });\r\n            } else {\r\n                if (!self.properties.preventDefault)\r\n                    self.runButtonAction();\r\n\r\n                // Trigger change\r\n                self.triggerRenderChange({pressed: true});\r\n            }\r\n        }\r\n    },\r\n    \r\n    getElementsToStylize: function($context){\r\n        return  $(\"button\", $context);         \r\n    }\r\n});\r\n","/*\r\n *   Name: Bizagi Tablet Render fileprint Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the fileprint render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.fileprint\", bizagi.rendering.fileprint.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.fileprint.extend(\"bizagi.rendering.tablet.fileprint\", {}, {\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed \r\n     */\r\n    postRender: function () {        \r\n        this.getControl().parent().hide();\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Link Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the link render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.link\", bizagi.rendering.link.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.link.extend(\"bizagi.rendering.tablet.link\", {}, {\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     * @returns {}\r\n     */\r\n    postRender: function () {\r\n        var $control = this.getControl();\r\n        this.link = $control.find(\".bz-link\");\r\n\r\n        this._super();\r\n\r\n        this.preventDefaultForAnchorTag();\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        var $control = this.getControl();\r\n        this.link = $control.find(\".bz-link\");\r\n\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Set internal value\r\n        this.setValue(value, false);\r\n\r\n        if (this.isValidValue()) {\r\n            // Get the decoded version of the URL\r\n            value = getFullyDecodedURI($.trim(value));\r\n\r\n            this.link.attr(\"href\", value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     * @returns {}\r\n     */\r\n    configureHandlers: function () {\r\n        this.attachEvents();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour\r\n     * to add handlers when the control is readonly\r\n     */\r\n    configureHandlersReadOnly: function () {\r\n        this.attachEvents();\r\n    },\r\n\r\n    /**\r\n     * Configure event handlers\r\n     */\r\n    attachEvents: function () {\r\n        var self = this;\r\n\r\n        if (self.isValidValue()) {\r\n            self.link.on(\"click\", function (evt) {\r\n                evt.preventDefault();\r\n                evt.stopPropagation();\r\n\r\n                var linkEncode = encodeURI(this.getAttribute(\"href\"));\r\n\r\n                self.linkSolver(linkEncode, self.properties.linktarget);\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Checks if the value is a valid url (http/https valid urls)\r\n     * TODO: Check if this validation is necessary\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    isValidValue: function () {\r\n        if (!this.hasValue()) return false;\r\n        var value = $.trim(this.getValue() || \"\");\r\n\r\n        return (value.toLowerCase().match(/^(http|https):\\/\\//) !== null) || false;\r\n    },\r\n\r\n    /**\r\n     * Executes the link\r\n     * @param {} linkEncode\r\n     * @param {} linkTarget\r\n     * @returns {}\r\n     */\r\n    linkSolver: function (linkEncode, linkTarget) {\r\n        if (linkTarget === \"newwindow\" || bizagi.util.isCordovaSupported()) {\r\n            window.open(linkEncode, \"_system\", \"location=yes\");\r\n        } else {\r\n            window.open(linkEncode, \"_system\");\r\n        }\r\n    },\r\n\r\n    processLayout: function (isLabelFormat) {\r\n        if(!isLabelFormat){\r\n             this._super(isLabelFormat, this.properties.textFormat);\r\n        } else {\r\n            if(typeof this.properties.textFormat.background !== \"undefined\"){\r\n                this._super(isLabelFormat, { background: this.properties.textFormat.background });\r\n            }\r\n        }\r\n    },\r\n\r\n    getElementsToStylize: function($context){\r\n        return $(\".bz-link\", $context); \r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Form Link Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the link render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.formLink\", {\r\n    BA_ACTION_PARAMETER_PREFIX: \"p_\",\r\n    BA_CONTEXT_PARAMETER_PREFIX: \"h_\",\r\n    BA_PAGE_CACHE: \"pageCacheId\"\r\n}, bizagi.rendering.formLink.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.formLink.extend(\"bizagi.rendering.tablet.formLink\", {}, {\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     * @returns {}\r\n     */\r\n    configureHandlers: function () {\r\n        this.attachEvents();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour\r\n     * to add handlers when the control is readonly\r\n     */\r\n    configureHandlersReadOnly: function () {\r\n        this.attachEvents();\r\n    },\r\n\r\n    /**\r\n     * Open link display from inside a dialog\r\n     */\r\n    openLink: function () {\r\n        var self = this;\r\n\r\n        // Send edit request\r\n        $.when(self.submitEditRequest())\r\n            .done(function () {\r\n                bizagi.loading.start();\r\n\r\n                $.when(self.paintFormLink()).done(function () {\r\n                    bizagi.loading.stop();\r\n\r\n                }).fail(function () {\r\n                    // Executes Rollback action paintForm\r\n                    bizagi.loading.start();\r\n                    self.rollbackForm();\r\n                }).always(function () {\r\n                    bizagi.loading.stop();\r\n                });\r\n\r\n            }).always(function () {\r\n            bizagi.loading.stop();\r\n        });\r\n    },\r\n\r\n    openLinkRule: function (property) {\r\n        var self = this;\r\n        var def = new $.Deferred();\r\n\r\n        bizagi.loading.start();\r\n\r\n        self.getPropertyValue(property, {})\r\n            .done(function (dataRuleResp) {\r\n\r\n                dataRuleResp = dataRuleResp || {};\r\n\r\n                if (typeof dataRuleResp.messages !== \"undefined\" && dataRuleResp.messages !== null) {\r\n                    var message = dataRuleResp.messages[0];\r\n                    var form = self.getFormContainer();\r\n\r\n                    form.validationController.showErrorMessage(message);\r\n                    def.reject();\r\n                } else {\r\n                    if (property === \"entryrule\") {\r\n                        self.openLink();\r\n                    }\r\n                }\r\n\r\n                def.resolve();\r\n            }).fail(function () {\r\n            def.reject();\r\n        }).always(function () {\r\n            bizagi.loading.stop();\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    paintFormLink: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var formParams = self.getFormParams();\r\n\r\n        var deferred = $.Deferred();\r\n\r\n        // Instantiate slide form object\r\n        var slideView = new bizagi.rendering.tablet.slide.view(self.dataService, self.renderFactory, {\r\n            title: self.properties.displayName || \"\",\r\n            container: form.container,\r\n            navigation: self.getParams().navigation,\r\n            showSaveButton: properties.editable,\r\n            orientation: properties.orientation || \"ltr\",\r\n            onSave: function (data) {\r\n                // When the data is saved then\r\n                return self.actionSave(data).then(function (result) {\r\n                    //Process the result\r\n                    return self.submitForm(result)\r\n                        .done(function () {\r\n                            deferred.resolve(result);\r\n                        }).fail(function () {\r\n                            deferred.reject();\r\n                        });\r\n                }).fail(function (result) {\r\n                    deferred.reject(result);\r\n                });\r\n            },\r\n            goBack: function () {\r\n                self.rollbackForm();\r\n            }\r\n        });\r\n\r\n        slideView.render({\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            recordXPath: self.getFormLinkXpath(),\r\n            requestedForm: \"linkform\",\r\n            editable: properties.editable,\r\n            formParams: formParams,\r\n            url: properties.editPage\r\n        }).fail(function () {\r\n            // Sends a rollback request to delete checkpoints\r\n            deferred.reject();\r\n        });\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    getPropertyValue: function (propertyName, params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        self.dataService.multiaction().getPropertyData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            property: propertyName,\r\n            extra: params,\r\n            dataType: params ? params.dataType : null\r\n        }).done(function (data) {\r\n            if (data.type === \"error\") {\r\n                // Workflow engine error, we gotta show it with error\r\n                var form = self.getFormContainer();\r\n\r\n                form.validationController.showErrorMessage(data.message);\r\n                defer.reject(data);\r\n            } else {\r\n                defer.resolve(data);\r\n            }\r\n        }).fail(function (jqXHR, textStatus, errorThrown) {\r\n            // Add error messages\r\n            var form = self.getFormContainer();\r\n\r\n            form.validationController.showErrorMessage(jqXHR.message);\r\n\r\n            defer.reject(jqXHR, textStatus, errorThrown);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    actionSave: function (data) {\r\n        var self = this;\r\n        var deferred = $.Deferred();\r\n\r\n        $.when(self.submitSaveRequest(data)).done(function (result) {\r\n            try {\r\n                if (result.type === \"validationMessages\") {\r\n                    // Add validation messages\r\n                    self.form.addValidationMessage(result.messages);\r\n                } else if (result.type === \"error\") {\r\n                    // Add error messages\r\n                    deferred.reject(result);\r\n                }\r\n\r\n                deferred.resolve(result);\r\n            } catch (ex) {\r\n                deferred.reject({noAction: true});\r\n            }\r\n        }).fail(function (data) {\r\n            deferred.reject(data);\r\n        });\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    submitSaveRequest: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Don't send request when the link is not editable\r\n        if (properties.editable === false && !properties.value) {\r\n            return null;\r\n        }\r\n\r\n        var xpath = self.getFormLinkXpath();\r\n        var xpathContext = xpath;\r\n\r\n        if (properties.xpathContext !== undefined && properties.xpathContext !== \"\") {\r\n            xpathContext = xpath ? properties.xpathContext + \".\" + xpath : properties.xpathContext;\r\n        }\r\n\r\n        return self.dataService.saveLinkForm({\r\n            url: properties.saveUrl,\r\n            idRender: properties.id,\r\n            xpathContext: xpathContext,\r\n            submitData: data\r\n        });\r\n    },\r\n\r\n    submitForm: function (result) {\r\n        var self = this;\r\n        var deferred = $.Deferred();\r\n\r\n        var executeSubmitOnChange = true;\r\n\r\n        if (result && result.type === \"validationMessages\") {\r\n            executeSubmitOnChange = false;\r\n        }\r\n\r\n        if (self.properties.hasexitrule) {\r\n            self.closeExitRule().done(function () {\r\n                if (executeSubmitOnChange) {\r\n                    // All commits must be resolved before the submitOnChange is executed\r\n                    self.submitCommitRequest().done(function () {\r\n                        if (self.properties.hasentryrule) {\r\n                            self.submitCommitRequest().done(function () {\r\n                                $.when(self.submitOnChange()).done(function () {\r\n                                    deferred.resolve(result);\r\n                                });\r\n                            });\r\n                        } else {\r\n                            $.when(self.submitOnChange()).done(function () {\r\n                                deferred.resolve(result);\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }).fail(function () {\r\n                deferred.reject();\r\n            });\r\n\r\n        } else if (executeSubmitOnChange) {\r\n            if (executeSubmitOnChange) {\r\n                //  commits must be resolved before the submitOnChange is executed\r\n                self.submitCommitRequest().done(function () {\r\n                    if (self.properties.hasentryrule) {\r\n                        self.submitCommitRequest().done(function () {\r\n                            $.when(self.submitOnChange()).done(function () {\r\n                                deferred.resolve(result);\r\n                            });\r\n                        });\r\n                    } else {\r\n                        $.when(self.submitOnChange()).done(function () {\r\n                            deferred.resolve(result);\r\n                        });\r\n                    }\r\n                }).fail(function () {\r\n                    deferred.reject();\r\n                });\r\n            }\r\n        }\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    closeExitRule: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var def = new $.Deferred();\r\n\r\n        if (properties.hasexitrule) {\r\n            $.when(self.openLinkRule(\"exitrule\")).done(function (result) {\r\n                def.resolve(result);\r\n            }).fail(function () {\r\n                def.reject();\r\n            });\r\n        }\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    rollbackForm: function () {\r\n        var self = this;\r\n        var form = self.form || self.getFormContainer();\r\n\r\n        $.when(self.submitRollbackRequest({idPageCache: form.idPageCache})).done(function () {\r\n            // Sends additional rollback request to delete checkpoint from entry rule\r\n            if (self.properties.hasentryrule) {\r\n                self.submitRollbackRequest({idPageCache: form.idPageCache});\r\n            }\r\n        });\r\n    },\r\n\r\n    getFormLinkXpathContext: function () {\r\n        var xpathContext = this.properties.xpathContext;\r\n        var parentXpathContext = this.getXpathContext();\r\n\r\n        if (parentXpathContext && xpathContext) {\r\n            return xpathContext.indexOf(parentXpathContext) === 0 ? xpathContext : parentXpathContext + \".\" + xpathContext;\r\n        } else {\r\n            return xpathContext;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Configure event handlers\r\n     */\r\n    attachEvents: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        // Bind click event\r\n        $(\"[data-action=open]\", $control).on(\"click\", function () {\r\n            // Open the link inside a slideForm\r\n            if (self.properties.hasentryrule) {\r\n                var form = self.getFormContainer();\r\n\r\n                $.when(form.saveForm()).done(function () {\r\n                    self.submitCheckpointRequest().done(function () {\r\n                        return self.openLinkRule(\"entryrule\");\r\n                    });\r\n                });\r\n            } else {\r\n                self.openLink();\r\n            }\r\n        });\r\n    },\r\n\r\n    processLayout: function (isLabelFormat) {\r\n        if(!isLabelFormat){\r\n             this._super(isLabelFormat, this.properties.textFormat);\r\n        } else {\r\n            if(typeof this.properties.textFormat.background !== \"undefined\"){\r\n                this._super(isLabelFormat, { background: this.properties.textFormat.background });\r\n            }\r\n        }\r\n    },\r\n\r\n    getElementsToStylize: function($context){\r\n        return $(\".bz-link\", $context); \r\n    }\r\n});","/**\r\n *   Name: Bizagi Tablet Render Hidden Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the hidden render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.hidden\", bizagi.rendering.hidden.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.hidden.extend(\"bizagi.rendering.tablet.hidden\", {}, {});\r\n","/**\r\n *   Name: Bizagi Tablet Render list Extension\r\n *   Author: Bizagi UI Forms\r\n *   Comments:\r\n *   -   This script will redefine the list render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.radio\", bizagi.rendering.combo.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.radio.extend(\"bizagi.rendering.tablet.radio\", bizagi.rendering.radio.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.radio.extend(\"bizagi.rendering.tablet.radio\", {}, {\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var $control = this.getControl();\r\n        this.radio = $control.find(\"input[type=radio]\");\r\n\r\n        if (this.properties.editable && (this.value == null || this.value === undefined) && (this.properties.value != null)) {\r\n            this.value = this.properties.value;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"readonly\");\r\n\r\n        return $.fasttmpl(template, {value: this.getDisplayValue()});\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        var $control = this.getControl();\r\n        this.radio = $control.find(\"input\");\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        // Map data from actions\r\n        value = self.mapValue(value);\r\n\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n\r\n        if (value !== undefined && value.id != null && value.id !== \"\") {\r\n\r\n            if (this.properties.editable) {\r\n\r\n                var radioItem = $control\r\n                    .find('input[type=\"radio\"][value=\"' + value.id + '\"]');\r\n\r\n                radioItem.prop('checked', 'checked');\r\n            } else {\r\n                self.radio.val((this.getDisplayValue()));\r\n                self.radio.attr(\"id\", value.id);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Add action handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n\r\n        this.radio.change(function () {\r\n            var $selected = $(this);\r\n            var newValue = {\r\n                id: $selected.prop('value'),\r\n                value: $.trim($selected.siblings(\"label\").text())\r\n            };\r\n\r\n            self.setValue(newValue);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Context to apply styles\r\n     * @param context\r\n     * @returns {jQuery|HTMLElement}\r\n     */\r\n    getElementsToStylize: function (context) {\r\n        return $(\"label.bz-radio__label\", context);\r\n    },\r\n\r\n    /**\r\n     * Cleans current data\r\n     */\r\n    cleanData: function () {\r\n        var value = {id: \"\", label: \"\"};\r\n        this.setValue(value, false);\r\n\r\n        this.clearDisplayValue();\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     */\r\n    clearDisplayValue: function () {\r\n        if (this.properties.editable) {\r\n            this.radio.prop('checked', false);\r\n        } else {\r\n            this.radio.val(this.getDisplayValue());\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Returns the selected value in the template\r\n     * @returns {*}\r\n     */\r\n    getSelectedValue: function () {\r\n        return this.selectedValue;\r\n    }\r\n});\r\n","/**\r\n *   Name: BizAgi Tablet Render Cascading combo Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the cascading combo render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.cascadingCombo\", bizagi.rendering.combo.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.cascadingCombo.extend(\"bizagi.rendering.tablet.cascadingCombo\", bizagi.rendering.cascadingCombo.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.cascadingCombo.extend(\"bizagi.rendering.tablet.cascadingCombo\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX\r\n}, {\r\n\r\n    /*\r\n       *   Template method to implement in each children to customize each control\r\n       */\r\n    renderControl: function () {\r\n        var mode = this.getMode();\r\n\r\n        // Check if this is a dependant combo\r\n        this.parentCombo = this.getParentCombo();\r\n        if (this.parentCombo != null) {\r\n\r\n            if ((/cascadingcombo/i.test(this.parentCombo.properties.type))) {\r\n                this.isDependant = true;\r\n            }\r\n        }\r\n\r\n        // Apply element plugin, set a flag to avoid dependant combo ajax requests\r\n        this.initializingCascadingCombo = true;\r\n\r\n        if (mode != \"execution\") {\r\n            this.initializingCascadingCombo = false;\r\n        }\r\n\r\n        return bizagi.rendering.tablet.combo.prototype.renderControl.apply(this, arguments);\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    postRender: function () {\r\n        bizagi.rendering.tablet.combo.prototype.postRender.apply(this, arguments);\r\n    },\r\n\r\n    /*\r\n          *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n          */\r\n    configureHandlers: function () {\r\n        // Call base\r\n        this._super();\r\n\r\n        // Call desktop.combo method\r\n        bizagi.rendering.tablet.combo.prototype.configureHandlers.apply(this, arguments);\r\n    },\r\n\r\n    /**\r\n     * Override to avoid the trigguer\r\n     */\r\n    cleanData: function () {\r\n        bizagi.rendering.tablet.combo.prototype.cleanData.apply(this, arguments);\r\n    },\r\n\r\n    /*\r\n    *   Refresh the combo, after it has been painted\r\n    */\r\n    refresh: function (params, isInitialValue) {\r\n        var self = this;\r\n        // Wait until current element is rendered\r\n        $.when(self.isRendered()).done(function () {\r\n            // Clear current control\r\n            var control = self.getControl();\r\n            var mode = self.getMode();\r\n            control.empty();\r\n\r\n            // Render combo again\r\n            $.when(self.renderControl()).then(function (html) {\r\n                // Append new element\r\n                control.html(html);\r\n                // Post-render method\r\n                self.postRender();\r\n\r\n                if (mode == \"execution\") {\r\n                    self.configureHandlers();\r\n                }\r\n\r\n                // Set current value\r\n                if (isInitialValue) {\r\n                    self.setDisplayValue(self.getValue());\r\n                } else {\r\n                    self.setDisplayValue({\r\n                        \"id\": \"\",\r\n                        \"value\": \"\"\r\n                    });\r\n                }\r\n\r\n                if (self.deferredVisible) {\r\n                    self.deferredVisible.resolve();\r\n                }\r\n\r\n                self.trigger(\"select\", [self.getValue(), isInitialValue]);\r\n            });\r\n        });\r\n    },\r\n    /*\r\n    *   Sets the value in the rendered control\r\n    */\r\n    setDisplayValue: function (value) {\r\n        bizagi.rendering.tablet.combo.prototype.setDisplayValue.apply(this, arguments);\r\n    },\r\n\r\n    processComboData: function () {\r\n        bizagi.rendering.tablet.combo.prototype.processComboData.apply(this, arguments);\r\n    },\r\n\r\n    validateValue: function () {\r\n        return bizagi.rendering.tablet.combo.prototype.validateValue.apply(this, arguments);\r\n    },\r\n\r\n    renderComboTemplate: function () {\r\n        return bizagi.rendering.tablet.combo.prototype.renderComboTemplate.apply(this, arguments);\r\n    },\r\n\r\n    configureModalViewHandlers: function () {\r\n        bizagi.rendering.tablet.combo.prototype.configureModalViewHandlers.apply(this, arguments);\r\n    },\r\n\r\n    configureCombo: function () {\r\n        bizagi.rendering.tablet.combo.prototype.configureCombo.apply(this, arguments);\r\n    },\r\n\r\n    changeCombo: function (valueItem, valueObjet) {\r\n        bizagi.rendering.tablet.combo.prototype.changeCombo.apply(this, arguments);\r\n    },\r\n\r\n    /*\r\n    *   Returns the selected value in the template\r\n    */\r\n    getSelectedValue: function () {\r\n        return bizagi.rendering.tablet.combo.prototype.getSelectedValue.call(this, arguments);\r\n    },\r\n\r\n    getTemplateName: function () {\r\n        return \"combo\";\r\n    },\r\n    /**\r\n     * Filtering list of elements\r\n     * @returns {}\r\n     */\r\n    filterList: function (search, $li) {\r\n        return bizagi.rendering.tablet.combo.prototype.filterList.call(this, search, $li);\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render list Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the list render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.list\", bizagi.rendering.combo.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.list.extend(\"bizagi.rendering.tablet.list\", bizagi.rendering.list.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.list.extend(\"bizagi.rendering.tablet.list\", {}, {\r\n\r\n    /*\r\n      *   Template method to implement in each children to customize each control\r\n      */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"list\");\r\n\r\n        return $.fasttmpl(template, {\r\n            editable: this.properties.editable,\r\n            value: this.getDisplayValue()\r\n        });\r\n\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    postRenderReadOnly: function () {\r\n        // Prevent call base\r\n    },\r\n\r\n    /**\r\n     * Add event handlers to the combo control\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        if (self.getMode() !== \"execution\") {\r\n            return;\r\n        }\r\n\r\n        $(\".bz-form-list\", control).bind(\"click\", function () {\r\n\r\n            $(this).mobileView({\r\n                customHeader: $.fasttmpl(self.renderFactory.getTemplate(\"modal-header-search\"), {}),\r\n                displayName: self.properties.displayName || \"\",\r\n                orientation: self.properties.orientation || \"\",\r\n                contentTemplate: \"\",\r\n                style: \"width: 80%; height: 70%\",\r\n                close: function () {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                },\r\n\r\n                open: function () {\r\n                    self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n\r\n                configureActions: function (context) {\r\n                    $.when(self.renderCombo({})).done(function (list) {\r\n                        $(\".bz-modal-view__content\", context.content).html(list);\r\n                        self.configureModalViewHandlers(context);\r\n                    })\r\n                }\r\n            });\r\n        });\r\n\r\n    },\r\n\r\n    processComboData: function (data) {\r\n        var self = this;\r\n        data.forEach(function (value) {\r\n            self.validateValue(value);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Setting the display value, always you call a setDisplayValue yor are performinng a setValue under the hood.\r\n     * */\r\n    setDisplayValue: function (value) {\r\n        var comboValue;\r\n        var control = this.getControl();\r\n\r\n        value = this.mapValue(value);\r\n\r\n        if (value && (typeof value === \"object\" && typeof value.label !== \"undefined\")) {\r\n\r\n            if (value.label !== \"\" && !bizagi.util.isNumeric(value.label)) {\r\n                comboValue = value.label;\r\n            } else {\r\n                var selected = this.findDataValueById(value.value);\r\n                comboValue = selected ? selected.value : \"\";\r\n            }\r\n\r\n            if ($.isArray(comboValue)) {\r\n                comboValue = comboValue.join(\" - \");\r\n            }\r\n\r\n            value = ({\"id\": value.id, \"value\": comboValue});\r\n        }\r\n\r\n        $(\"input\", control).val(this.formatItem(value.value));\r\n\r\n        //Set Value\r\n        this.selectedValue = value;\r\n        this.setValue(value);\r\n    },\r\n\r\n    /**\r\n     * Set the handlers for the modal elements\r\n     * @param {kendoModalObject} context full modal object\r\n     */\r\n    configureModalViewHandlers: function (context) {\r\n        var self = this;\r\n\r\n        $(\".bz-list__item\", context.content).on(\"click\", function () {\r\n            var valueObjet = {\r\n                \"id\": $(this).data(\"value\"),\r\n                \"value\": $(this).text()\r\n            };\r\n\r\n            if (valueObjet.id == \"\") {\r\n                valueObjet.value = \"\";\r\n            }\r\n\r\n            self.setDisplayValue(valueObjet);\r\n            self.trigger(\"select\", [valueObjet, false]);\r\n            context.close();\r\n        });\r\n\r\n        var $elementsList = $(\".bz-list li\", context.content);\r\n        var $clearButton = $(\".bz-modal-view__clear\", context.header);\r\n        var $searchInput = $(\".bz-modal-view__search\", context.header);\r\n\r\n        $(\"[data-action=close]\", context.header).bind(\"click\", function () {\r\n            context.close();\r\n        });\r\n\r\n        $clearButton.bind(\"click\", function () {\r\n            $searchInput.val(\"\").trigger(\"change\");\r\n        });\r\n        // Filtering list\r\n        $searchInput.bind(\"change keyup\", function () {\r\n            if (this.value == \"\") {\r\n                $clearButton.removeClass(\"bz-modal-view__clear--visible\");\r\n            } else {\r\n                $clearButton.addClass(\"bz-modal-view__clear--visible\");\r\n            }\r\n            self.filterList(this.value, $elementsList);\r\n        }).focus();\r\n    },\r\n\r\n    /**\r\n     * Filtering list of elements\r\n     * @returns {}\r\n     */\r\n    filterList: function (search, $li) {\r\n\r\n        $li.filter(function () {\r\n            var stringContainer = $(this).text().toUpperCase();\r\n            var stringToSearch = search.toUpperCase();\r\n\r\n            if (stringContainer.indexOf(stringToSearch) >= 0) {\r\n                return $(this);\r\n            } else {\r\n                $(this).hide();\r\n            }\r\n        }).show();\r\n    },\r\n\r\n    /**\r\n     * Print the list of elements to show in the modal\r\n     * @param {object} data list of elements to print\r\n     */\r\n    renderComboTemplate: function (data) {\r\n        var template = this.renderFactory.getTemplate(\"list-items\");\r\n        var value = this.getValue();\r\n        value = (value !== null && typeof value !== \"undefined\") ? value : {\"id\": \"\", \"value\": \"\"};\r\n\r\n        return $.fasttmpl(template, {\r\n            \"items\": data,\r\n            \"selectedId\": value.id,\r\n            \"hasItems\": data.length > 0\r\n        }, {\r\n            \"validateItem\": this.validateValue\r\n        });\r\n    },\r\n\r\n    getElementsToStylize: function ($context) {\r\n        return this.properties.editable ? $(\"input\", $context) : $(\".readonly-control\", $context);\r\n    }\r\n});\r\n","/*\r\n *   Name: Bizagi Tablet Render Yes-No Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the multiSelect render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.multiSelect\", bizagi.rendering.multiSelect.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.multiSelect.extend(\"bizagi.rendering.tablet.multiSelect\", {\r\n    MORE_OPTION_WIDTH: 40,\r\n    SEARCH_MIN_LENGTH: 1\r\n}, {\r\n\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"searchList.readonly\");\r\n\r\n        // Render template\r\n        var content = $.fasttmpl(template, {\r\n            items: self.properties.value || {},\r\n            editable: self.properties.editable || true\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n\r\n        return content;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n\r\n        if (this.isExecutionMode()) {\r\n            this.getData().done(function (data) {\r\n                self.properties.data = data;\r\n            });\r\n        }\r\n\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n        $(\"[data-action=modal]\", $control).bind(\"click\", function () {\r\n            self.openModalView();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sets the value and display, avoid to include setValue in this method.\r\n     */\r\n    setDisplayValue: function(value){\r\n        var self = this;\r\n        this._super(value);\r\n\r\n        if (value !== undefined) {\r\n            $(\".bz-input-icon__input\", this.getControl()).html(value.map(function(el){\r\n                return self.formatItem(el.value);\r\n            }).join(\", \"));\r\n        }\r\n    },\r\n     /**\r\n     * Opens the modal view\r\n     */\r\n    openModalView: function () {\r\n        var self = this;\r\n        self.getData().done(function (result) {\r\n            var template_content = self.renderFactory.getTemplate('multiselect-list');\r\n            var value = self.getValue();\r\n            if (!$.isArray(value)){\r\n                value = typeof (value) === \"string\" ? JSON.parse(value).value : value.value;\r\n            }\r\n\r\n            var data = {\r\n                values: result,\r\n                isChecked: function (id) {\r\n                    return self.isChecked(value, id);\r\n                }\r\n            };\r\n\r\n            var content = $.fasttmpl(template_content, data, {\r\n                formatItem: self.formatItem\r\n            });\r\n            var template_footer = self.renderFactory.getTemplate(\"modal-footer-done\");\r\n            var footer = $.fasttmpl(template_footer, {});\r\n\r\n            self.getControl().mobileView({\r\n                customHeader: $.fasttmpl(self.renderFactory.getTemplate(\"modal-header-search\"), {}),\r\n                // displayName: self.properties.displayName || \"\",\r\n                orientation: self.properties.orientation || \"\",\r\n                contentTemplate: content,\r\n                footerTemplate: footer,  \r\n                style: \"width: 80%; height: 70%\",\r\n                close: function () {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                },\r\n                afterOpenAnimation: function(event){\r\n                    $(\".bz-modal-view__search\", event.view.header).focus();\r\n                },\r\n                open: function () {\r\n                    self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n                configureActions: function (modalView) {\r\n                    self.configureModalViewHandlers(modalView);\r\n                }\r\n            });\r\n\r\n            \r\n        });\r\n    },\r\n\r\n    /**\r\n     * Configure the modalView Handlers for the new combo control.\r\n     * */\r\n    configureModalViewHandlers: function (modalView) {\r\n        var self = this;\r\n        \r\n        var $listContainer = $(\".bz-checkbox-list li\", modalView.content);\r\n        //clear button\r\n        var $clearButton = $(\".bz-modal-view__clear\", modalView.header);\r\n        // Suggest input\r\n        var $suggestInput = $(\".bz-modal-view__search\", modalView.header);\r\n\r\n        $suggestInput.on(\"change keyup\", function(){\r\n            if (this.value == \"\"){\r\n                $clearButton.removeClass(\"bz-modal-view__clear--visible\");\r\n            } else {\r\n                $clearButton.addClass(\"bz-modal-view__clear--visible\");\r\n            }\r\n            self.filterList(this.value, $listContainer);\r\n        }).on(\"focus\", function(){\r\n            modalView.header.addClass(\"bz-modal-view__header--active\");\r\n        }).on(\"blur\", function(){\r\n            modalView.header.removeClass(\"bz-modal-view__header--active\");\r\n        });\r\n\r\n        //Clear the search\r\n        $clearButton.on(\"click\", function () {\r\n            $suggestInput.val(\"\").trigger(\"change\");\r\n        });\r\n\r\n        $(\"[data-action=close]\", modalView.header).on(\"click\", function () {\r\n            modalView.close();\r\n        });\r\n\r\n        $(modalView.footer).on(\"click\", \"[data-action=save]\", function (evt) {\r\n            // Create a temporal array\r\n            var newList = [];\r\n\r\n            $.each.call(this, $listContainer, function (index, item) {\r\n                var check = item.querySelector(\"input\");\r\n\r\n                if (check.checked){\r\n                    var id = check.getAttribute(\"data-id\");\r\n                    var element = this.findItemById(id);\r\n                    var value = element.value;\r\n                    newList.push({id: id, value: value});\r\n                }\r\n            }.bind(self));\r\n\r\n            self.setDisplayValue(newList);\r\n\r\n            modalView.close();\r\n        });\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Tablet Render Association\r\n*   Author: UI Forms Team\r\n*   Comments: Defines the association control\r\n*/\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.association\", bizagi.rendering.association.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.association.extend(\"bizagi.rendering.tablet.association\", {}, {\r\n /**\r\n     * Template method to implement in each children to customize each control\r\n     * \r\n     * @returns {} \r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"association\");\r\n        var def = new $.Deferred();\r\n\r\n        self.properties.property = \"flipped\";\r\n        self.properties.idRender = self.properties.id;\r\n\r\n        // Define flipped\r\n        $.when(self.getFlipAssociation()).done(function (flip) {\r\n            // Make json base, create self.properties.formatJson\r\n            self.makeJsonBase();\r\n\r\n            self.properties.flipped = bizagi.util.parseBoolean(flip) || false;\r\n\r\n            var columnData = self.getColumnData();\r\n\r\n            var html = $.fasttmpl(template, $.extend(self.properties, { columnData: columnData }), {\r\n                getColumnData: self.getColumnData,\r\n                getRightAssociation: self.getRightAssociation\r\n            });\r\n\r\n            /* by default need set self.properties.formatJson */\r\n            self.setValue(JSON.encode(self.properties.formatJson));\r\n\r\n            def.resolve(html);\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Get Left Data, verify if flipper flags sets true\r\n     *\r\n     * @param column {'0'||'1'}\r\n     */\r\n    getColumnData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var data = [];\r\n\r\n        self.data = properties;\r\n\r\n        var dataAssociation = properties.flipped ? properties.rightData : properties.leftData;\r\n\r\n        $.each(dataAssociation, function (key, item) {\r\n            data.push({\r\n                id: item.id,\r\n                value: item.value,\r\n                association: self.getRightAssociation(item.id)\r\n            });\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    postRender: function () {\r\n        var self = this;\r\n        var isExecution = self.getMode() === \"execution\";\r\n        var $control = self.getControl();\r\n\r\n        // Cache control\r\n        self.association = $(\".bz-association\", $control);\r\n       \r\n        // Add Events at Association Control\r\n        if (isExecution) {self.addEventControl(); }\r\n               \r\n        self.showDefaultGroupList();\r\n    },\r\n\r\n    showDefaultGroupList: function(){\r\n        var self = this;\r\n        var $control = self.getControl();\r\n        var $groups = $('.bz-association-group', $control);\r\n\r\n        if($groups.length > 0){\r\n            $(\"[data-action='collapse']\", $groups[0]).toggleClass(\"bz-icn--expanded\")\r\n\r\n            $(\".bz-association-group__list\", $groups[0])\r\n                .slideDown(300, function(){                                               \r\n                    $(this).toggleClass(\"bz-association-group__list--hidden\")\r\n                });           \r\n        }\r\n    },\r\n\r\n    /**\r\n     * Add event to control\r\n     * @returns {} \r\n     */\r\n    addEventControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"association\");\r\n        var control = self.getControl();\r\n\r\n        // Bind check toggle\r\n        self.association\r\n            .on(\"change\", \"input:checkbox\", function () {\r\n                var $input = $(this);\r\n                var parentId = $input.data(\"parent-id\");\r\n                var id = $input.data(\"id\");\r\n\r\n                if ($input.prop(\"checked\")) { self.addElement(parentId, id);} \r\n                else { self.removeElement(parentId, id);}\r\n            });\r\n\r\n        // Bind flip actions\r\n        self.association\r\n            .find(\"[data-action='flip']\")\r\n            .click(function () {\r\n                $(control).empty();\r\n\r\n                // Define flipped\r\n                self.properties.flipped = !self.properties.flipped;\r\n\r\n                // Send flip data to server\r\n                self.properties.flipstate = self.properties.flipped;\r\n\r\n                self.dataService.getFlipAssociation(self.properties);\r\n\r\n                var columnData = self.getColumnData();\r\n\r\n                // Render template\r\n                $($.fasttmpl(template, $.extend(self.properties, { columnData: columnData }), {\r\n                    getColumnData: self.getColumnData,\r\n                    getRightAssociation: self.getRightAssociation\r\n                })).appendTo(control);\r\n\r\n                self.postRender();\r\n            });\r\n\r\n            self.association.on(\"click\",  \"[data-action='collapse']\", function(){\r\n                var $element = $(this); \r\n                var $groupList = \r\n                    $element\r\n                        .parents('.bz-association-group')\r\n                        .find(\".bz-association-group__list\");\r\n                                \r\n                self.closeAccordionSection();\r\n                if ($groupList.hasClass(\"bz-association-group__list--hidden\")) {\r\n    \r\n                    $element.toggleClass(\"bz-icn--expanded\");\r\n    \r\n                    $groupList.slideDown(300, function(){                    \r\n                        $(this).toggleClass(\"bz-association-group__list--hidden\");\r\n                    });        \r\n                }                                               \r\n            });\r\n    },\r\n\r\n    closeAccordionSection: function(active){\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        $(\"[data-action='collapse']\", $control).removeClass('bz-icn--expanded'); \r\n\r\n        $(\".bz-association-group__list\", $control)\r\n            .slideUp(300, function(){\r\n                $(this).addClass(\"bz-association-group__list--hidden\");    \r\n            });\r\n    },\r\n\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n\r\n        return self.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Render for readonly\r\n     * @returns {} \r\n     */\r\n    postRenderReadOnly: function () {\r\n        this.postRender();       \r\n    },\r\n    \r\n    /* SET-DISPLAY-VALUE\r\n     =====================================================*/\r\n    setDisplayValue: function (value) {        \r\n        // Set internal value\r\n        this.setValue(value, false);\r\n    },\r\n\r\n    getLabel: function () {\r\n        if (!this.label) {\r\n            var label = $(\"> .bz-form-label\", this.element || this.observableElement);\r\n\r\n            if (label.length > 0)\r\n                this.label = label;\r\n\r\n            return label;\r\n        }\r\n\r\n        return this.label;\r\n    }\r\n});","/**\r\n *   Name: Bizagi Tablet Render ECM Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the ecm render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.ecm\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\r\n    BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE\r\n}, bizagi.rendering.ecm.prototype);\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.ecm.extend(\"bizagi.rendering.tablet.ecm\", {\r\n    QUALITY_PICTURE: 50,\r\n    LIMIT: 1, // The maximum number of media in the device user can record in a single capture operation.\r\n    EXTENSIONSIMG: [\"image/jpeg\", \"jpeg\", \"image\", \"png\", \"jpg\", \"bmp\"],\r\n    EXTENSIONSFILE: [\"doc\", \"docx\", \"xls\", \"xlsx\", \"ppt\", \"pptx\", \"pdf\", \"zip\", \"rar\", \"txt\"],\r\n    EXTENSIONSVIDEO: [\"video/quicktime\", \"quicktime\", \"qt\", \"mov\"],\r\n    EXTENSIONSAUDIO: [\"audio/wav\", \"audio\", \"wav\", \"mp3\"],\r\n    ERROR_ECM_NO_AVAILABLE: 3,\r\n    ACTION_DETAILS: \"details\",\r\n    ACTION_EDIT: \"edit\"\r\n}, {\r\n\r\n    /**\r\n     * Whether or not is a native device\r\n     * @var isNative boolean\r\n     */\r\n    isNative: false,\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        this.isNative = bizagi.util.isCordovaSupported();\r\n        this.fileData = [];\r\n    },\r\n\r\n    /**\r\n     * Method to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = this.renderFactory.getTemplate(\"ecm\");\r\n\r\n        // Set files property\r\n        self.files = self.properties.value || [];\r\n        self.filesCount = self.files.length;\r\n\r\n        return this.renderItem(template, {});\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"ecm-readonly\");\r\n         var data = {\r\n             noFiles: this.filesCount === 0\r\n         };\r\n\r\n        return this.renderItem(template, data);\r\n    },\r\n\r\n    /**\r\n     * Method to render items\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderItem: function (template, data) {\r\n        var self = this;\r\n        var items = \"\";\r\n        var html = $.fasttmpl(template, data);\r\n\r\n        // Render current children\r\n        for (var i = 0; i < self.filesCount; i++) {\r\n            var item = self.renderUploadItem(self.files[i]);\r\n\r\n            items += item;\r\n        }\r\n\r\n        html = self.replaceFilesHtml(html, items);\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Renders a single upload item\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    renderUploadItem: function (file) {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"ecm-item\");\r\n        var form = self.getFormContainer();\r\n\r\n        var data = {\r\n            id: self.properties.id,\r\n            idFileUpload: file[0],\r\n            fileName: file[1],\r\n            editable: self.properties.editable,\r\n            xPath: self.properties.xpath,\r\n            xpathContext: self.getXpathContext() || form.properties.xpathContext || \"\",\r\n            idPageCache: self.properties.idPageCache,\r\n            idAttrib: self.properties.idAttrib,\r\n            sessionId: form.properties.sessionId\r\n        };\r\n\r\n        // Builds the upload item url\r\n        var originalData = $.extend({}, data);\r\n        data.url = self.buildItemUrl(originalData);\r\n\r\n        // Define File Properties\r\n        file.getFileProperties = $.when(self.renderFileLayout(data));\r\n\r\n        var html = $.fasttmpl(template, data);\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to get properties and metadata of ECM item\r\n     * @param data\r\n     * @returns {*}\r\n     */\r\n    renderFileLayout: function (data) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var deferred = new $.Deferred();\r\n\r\n        var originalData = $.extend({}, data);\r\n\r\n        $.when(\r\n            self.dataService.metadataECMMultiaction().getECMMetadata(data),\r\n            self.dataService.metadataECMMultiaction().getFileProperties(originalData)\r\n        ).done(function (metaData, fileProperties) {\r\n\r\n            if (Array.isArray(fileProperties)) {\r\n                fileProperties = fileProperties[0];\r\n            }\r\n\r\n            if (Array.isArray(metaData)) {\r\n                metaData = metaData[0];\r\n            }\r\n\r\n            fileProperties.idAttrib = self.properties.idAttrib;\r\n            fileProperties.showMetadata = self.properties.showMetadata;\r\n            fileProperties.xpathContext = self.getXpathContext() || form.properties.xpathContext || \"\";\r\n            fileProperties.xpath = self.properties.xpath;\r\n            fileProperties.fileName = data.fileName;\r\n            fileProperties.idPageCache = self.properties.idPageCache;\r\n            fileProperties.fileData = originalData;\r\n\r\n            var result = $.extend({}, fileProperties, metaData);\r\n\r\n            deferred.resolve(result);\r\n\r\n        });\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{files}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var $control = this.getControl();\r\n\r\n        this.$contentFile = $(\".bz-file-upload__container\", $control);\r\n        this.$inputFile = $(\".bz-file-upload__input\", $control);\r\n        this.$nativeFile = $(\".bz-file-upload__native\", $control);       \r\n    },\r\n\r\n    configureHandlers: function () {\r\n        this.checkFileExtensions();\r\n        this.attachEvents();\r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers when the control is readonly\r\n     */\r\n    configureHandlersReadOnly: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n        // Handler to download the file\r\n        $(\"ul.bz-readonly-lists\", $control).on(\"click\", \".bz-file .bz-file-name\", function () {\r\n            var item = $(this).parent(\".bz-file\");\r\n            var file = item.data();\r\n            bizagi.loading.start();\r\n            $.when(bizagi.util.media.downloadFile(file.url, file.title)).fail(function (error) {\r\n                self.executeFormFailHandler(error);\r\n            }).always(function () {\r\n                bizagi.loading.stop();\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Send image using HTTP\r\n     */\r\n    saveImage: function () {\r\n        var self = this;\r\n        var dataItem = \"\";\r\n\r\n        if (self.editedImageURL) {\r\n            dataItem = self.editedImageURL;\r\n        } else if (self.fileProperties) {\r\n            dataItem = self.fileProperties.url;\r\n        }\r\n\r\n        // Fix android 4.4 getting images from recent folder\r\n        var dataFile = bizagi.util.media.getImagePath(dataItem);\r\n        var data = {\r\n            dataFile: dataFile,\r\n            fileName: self.fileProperties.name,\r\n            mimeType: \"image/jpeg\"\r\n        };\r\n\r\n        // Cleans variables related previous uploads\r\n        self.editedImageURL = null;\r\n        self.fileProperties = null;\r\n\r\n        return this.uploadFile(data);\r\n    },\r\n\r\n    /**\r\n     * Method to save a video file\r\n     * @param {} dataVideo\r\n     * @returns {}\r\n     */\r\n    saveVideo: function (dataVideo) {\r\n        var data = {\r\n            dataFile: dataVideo[0].fullPath,\r\n            fileName: dataVideo[0].name,\r\n            mimeType: \"video/quicktime\"\r\n        };\r\n\r\n        return this.uploadFile(data);\r\n    },\r\n\r\n    /**\r\n     * Method to save a file\r\n     * @param data\r\n     * @returns {*|void}\r\n     */\r\n    uploadFile: function (data) {\r\n        var self = this;\r\n        var params = {};\r\n        var addParams = self.buildAddParams();\r\n\r\n        addParams.queueID = \"q_\" + bizagi.util.encodeXpath(self.getUploadXpath());\r\n        addParams[\"xPath\"] = addParams[\"xPath\"];\r\n        addParams.Filename = data.fileName;\r\n\r\n        params.data = addParams;\r\n        params.options = new FileUploadOptions();\r\n        params.options.fileKey = \"file\";\r\n        params.options.fileName = data.fileName;\r\n        params.options.uploadKey = {key: \"Filedata\"};\r\n        params.options.addUrl = self.properties.addUrl;\r\n        params.dataFile = data.dataFile;\r\n\r\n        if (data.mimeType)\r\n            params.options.mimeType = data.mimeType;\r\n\r\n        return $.when(bizagi.util.media.uploadFile(params)).then(function (result) {\r\n            self.onUploadFileCompleted(JSON.parse(decodeURIComponent(result.response)));\r\n        }).fail(function (error) {\r\n            self.executeFormFailHandler(error);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to configure the actions with control\r\n     * @return {}\r\n     */\r\n    attachEvents: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        // Handlers to management of menu actions\r\n        $.each(self.files, function (i, file) {\r\n            self.attackMenuEvents(file);\r\n        });\r\n\r\n        // Attach all events\r\n        this.$contentFile.off(\"click\").on(\"click\", function (evt) {\r\n            self.chooseFile();\r\n        });\r\n\r\n        // Handler to download the file\r\n        $(\"ul.bz-files\", $control).on(\"click\", \".bz-file .bz-file-name\", function () {\r\n            var item = $(this).parent(\".bz-file\");\r\n            var file = item.data();\r\n\r\n            bizagi.loading.start();\r\n\r\n            $.when(bizagi.util.media.downloadFile(file.url, file.title)).fail(function (error) {\r\n                self.executeFormFailHandler(error);\r\n            }).always(function () {\r\n                bizagi.loading.stop();\r\n            });\r\n        });\r\n\r\n\r\n        if (self.isNative) {\r\n            // Upload files\r\n            this.$nativeFile.off(\"click\").actionSheet({\r\n                actions: self.getUploadChoices(),\r\n                actionClicked: function (action) {\r\n                    self.handlerUploadFile(action.guid);\r\n                },\r\n                appear: function (action) {\r\n                    self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n                cancelClicked: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                }\r\n            });\r\n\r\n            // Resolution upload\r\n            $(\".bz-file-upload__resolution\", $control).off(\"click\").actionSheet({\r\n                actions: bizagi.util.media.getImageResolutionSizes(),\r\n                withoutCancel: true,\r\n                actionClicked: function (action) {\r\n                    bizagi.loading.start();\r\n\r\n                    $.when(self.handlerResolutionUpload(action.guid)).always(function () {\r\n                        bizagi.loading.stop();\r\n                    });\r\n                },\r\n                appear: function (action) {\r\n                    self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n                cancelClicked: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                }\r\n            });\r\n        } else {\r\n\r\n            // Attach event to web upload-control\r\n            this.$inputFile.off(\"change\").on(\"change\", function () {\r\n                self.addFile();\r\n                this.value = \"\";\r\n            });\r\n\r\n            // Just in case\r\n            this.$inputFile.off(\"click\").on(\"click\", function (evt) {\r\n                evt.stopPropagation();\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Update menu options\r\n     * @param $fileItem\r\n     * @param fileProperties\r\n     */\r\n    addMenuEvents: function ($fileItem, fileProperties) {\r\n        var self = this;\r\n        var viewMore = $fileItem.find(\".bz-file-menu\");\r\n        var items = [];\r\n\r\n        if (fileProperties.showMetadata) {\r\n            items.push({\r\n                name: self.getResource(\"render-collection-navigator-details-form\"),\r\n                fn: function () {\r\n                    self.processActionByType(self.Class.ACTION_DETAILS, fileProperties, $fileItem);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (fileProperties.showMetadata && fileProperties.allowUpdateMetadata)\r\n            items.push({\r\n                name: self.getResource(\"render-collection-navigator-edit-form\"),\r\n                fn: function () {\r\n                    self.processActionByType(self.Class.ACTION_EDIT, fileProperties, $fileItem);\r\n                }\r\n            });\r\n\r\n        if (fileProperties.allowCheckOut) {\r\n            items.push({\r\n                name: self.getResource(\"render-ecm-bt-lock\"),\r\n                fn: function () {\r\n                    self.lockECMFile($fileItem, fileProperties);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (fileProperties.allowCancelCheckOut) {\r\n            items.push({\r\n                name: self.getResource(\"render-ecm-bt-unlock\"),\r\n                fn: function () {\r\n                    self.unlockECMFile($fileItem, fileProperties);\r\n                }\r\n            });\r\n        }\r\n\r\n        /*if (fileProperties.allowUpdateContent) {\r\n            items.push({\r\n                name: self.getResource(\"render-ecm-bt-upgrade\"),\r\n                fn: function () {\r\n                    self.processActionByType(\"upgrade\", fileProperties);\r\n                }\r\n            });\r\n        }*/\r\n\r\n        if (fileProperties.allowDelete) {\r\n            items.push({\r\n                name: self.getResource(\"render-ecm-bt-delete\"),\r\n                fn: function () {\r\n                    self.deleteECMFile($fileItem, fileProperties.idFileUpload);\r\n                }\r\n            });\r\n        }\r\n\r\n        // TODO: Check items has data\r\n        viewMore.overflowMenu({items: items});\r\n    },\r\n\r\n    /**\r\n     * Removes a file from the ECM control\r\n     * @param $fileItem\r\n     * @param fileId\r\n     */\r\n    deleteECMFile: function ($fileItem, fileId) {\r\n        var self = this;\r\n\r\n        bizagi.showConfirmationBox(this.getResource(\"render-ecm-confirm-message\"))\r\n            .done(function () {\r\n                $.when(self.deleteUploadItem($fileItem, fileId))\r\n                    .done(function () {\r\n                        // Detach item\r\n                        $fileItem.hide();\r\n                        $fileItem.remove();\r\n\r\n                        // Update value\r\n                        self.setValue(self.files, false);\r\n\r\n                        // Check maxFiles\r\n                        self.checkMaxFiles();\r\n\r\n                        // Trigger change\r\n                        self.triggerRenderChange();\r\n                    });\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Check maximum number of files\r\n     */\r\n    checkMaxFiles: function () {\r\n        if (this.isMaxFilesReached()) {\r\n            $(this.$contentFile).addClass(\"bz-file-upload__container--hidden\");\r\n        } else {\r\n            $(this.$contentFile).removeClass(\"bz-file-upload__container--hidden\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if the maximum number of files than can be uploaded has been reached\r\n     * @returns {}\r\n     */\r\n    isMaxFilesReached: function () {\r\n        var maxFiles = this.properties.maxfiles;\r\n        var actualFiles = this.properties.value ? this.properties.value.length : 0;\r\n\r\n        return maxFiles !== 0 && (this.filesCount >= maxFiles && actualFiles >= maxFiles);\r\n    },\r\n\r\n    /**\r\n     * Call the form failhandler with an specific error\r\n     * @param {} error\r\n     * @returns {}\r\n     */\r\n    executeFormFailHandler: function (error) {\r\n        var errorResponse = \"\";\r\n\r\n        if (error && error.code === this.Class.ERROR_ECM_NO_AVAILABLE) {\r\n            errorResponse = this.getResource(\"render-ecm-service-not-available\");\r\n        } else if (error && error.responseText) {\r\n            errorResponse = error.responseText;\r\n        } else {\r\n            errorResponse = this.getResource(\"render-ecm-service-general-error\");\r\n        }\r\n\r\n        this.getFormContainer().failHandler(errorResponse);\r\n    },\r\n\r\n    lockECMFile: function ($fileItem, fileProperties) {\r\n        var self = this;\r\n\r\n        $.when(self.lockUploadItem(fileProperties.idFileUpload)).done(\r\n            function (result) {\r\n                var file = [result.idFileUpload, fileProperties.fileName];\r\n                var newItem = self.renderUploadItem(file);\r\n\r\n                $fileItem.replaceWith(newItem);\r\n                self.attackMenuEvents(file);\r\n            });\r\n    },\r\n\r\n    unlockECMFile: function ($fileItem, fileProperties) {\r\n        var self = this;\r\n\r\n        $.when(self.unlockUploadItem(fileProperties.idFileUpload))\r\n            .done(function (result) {\r\n                var file = [result.idFileUpload, fileProperties.fileName];\r\n                var newItem = self.renderUploadItem(file);\r\n\r\n                $fileItem.replaceWith(newItem);\r\n                self.attackMenuEvents(file);\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Method to add new file from native or hybrid environment\r\n     */\r\n    chooseFile: function () {\r\n        if (this.isNative) {\r\n            this.$nativeFile.click();\r\n        } else if (bizagi.util.media.fileAPISupported()) {\r\n            this.$inputFile.click();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check allow extensions and define possible choices\r\n     * @returns {}\r\n     */\r\n    checkFileExtensions: function () {\r\n        var self = this;\r\n        var validExtensions = self.properties.validExtensions || \"\";\r\n\r\n        self.validOptions = {video: false, image: false, file: false};\r\n\r\n        // Preprocess the extensions string\r\n        validExtensions = validExtensions.replace(/\\s+/g, \"\").toLowerCase();\r\n\r\n        if (typeof (validExtensions) === \"undefined\" || validExtensions === \"\") {\r\n            self.validOptions = {video: true, image: true, file: true};\r\n        } else {\r\n            validExtensions = validExtensions.split(\";\");\r\n\r\n            if (validExtensions.length === 1 && validExtensions[0].indexOf(\"*.*\") !== -1) {\r\n                self.validOptions.video = true;\r\n                self.validOptions.image = true;\r\n            } else {\r\n                for (var i = 0, length = validExtensions.length; i < length; i++) {\r\n                    validExtensions[i] = validExtensions[i].replace(\"*.\", \"\");\r\n\r\n                    if (self.Class.EXTENSIONSFILE.toString().indexOf(validExtensions[i]) >= 0) {\r\n                        self.validOptions.file = true;\r\n                    } else if (self.Class.EXTENSIONSIMG.toString().indexOf(validExtensions[i]) >= 0) {\r\n                        self.validOptions.image = true;\r\n                    } else if (self.Class.EXTENSIONSVIDEO.toString().indexOf(validExtensions[i]) >= 0) {\r\n                        self.validOptions.video = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Media is not supported then upload control is disabled\r\n        if (!self.validOptions.file && !self.validOptions.image && !self.validOptions.video) {\r\n            $(self.$contentFile).addClass(\"bz-file-upload__container--hidden\");\r\n        }\r\n\r\n        // Limit of files is reached then upload control is disabled\r\n        if (self.isMaxFilesReached() || (!self.isNative && !bizagi.util.media.fileAPISupported())) {\r\n            $(this.$contentFile).addClass(\"bz-file-upload__container--hidden\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Add upload options\r\n     */\r\n    getUploadChoices: function () {\r\n        var self = this;\r\n        var itemsUpload = [];\r\n\r\n        // Take photo, Choose photo\r\n        if (self.validOptions.image) {\r\n            itemsUpload.push({\r\n                \"guid\": 1,\r\n                \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-take-photo\")\r\n            });\r\n            itemsUpload.push({\r\n                \"guid\": 2,\r\n                \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-choose-photo\")\r\n            });\r\n        }\r\n\r\n        // Take video\r\n        if (self.validOptions.video) {\r\n            itemsUpload.push({\r\n                \"guid\": 3,\r\n                \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-take-video\")\r\n            });\r\n        }\r\n\r\n        // Stores the upload options\r\n        return [].concat(itemsUpload);\r\n    },\r\n\r\n    /**\r\n     * Handler of upload files\r\n     * @param {} ordinal\r\n     * @returns {}\r\n     */\r\n    handlerUploadFile: function (ordinal) {\r\n        var self = this;\r\n        var actionSelected = ordinal || 0;\r\n\r\n        switch (actionSelected) {\r\n            case 2:\r\n\r\n                navigator.camera.getPicture(function (dataImage) {\r\n                    self.dataImage = dataImage;\r\n                    var extensions = self.Class.EXTENSIONSIMG.concat(self.Class.EXTENSIONSVIDEO);\r\n\r\n                    bizagi.loading.start();\r\n\r\n                    $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties))\r\n                        .then(function () {\r\n                            // Gets the real properties for the file\r\n                            return $.when(bizagi.util.media.getFileDataInfo(self.dataImage))\r\n                                .then(function (fileData) {\r\n                                    self.fileProperties = fileData;\r\n\r\n                                    if (bizagi.util.media.checkFileTypes(fileData, self.properties, extensions)) {\r\n                                        if (!bizagi.util.isAndroid()) {\r\n                                            return $.when(bizagi.util.media.modalResolutionUpload()).then(function (buttonIndex) {\r\n                                                if (buttonIndex <= bizagi.util.media.getImageResolutionItems().length) {\r\n                                                    return self.handlerResolutionUpload(buttonIndex);\r\n                                                }\r\n                                            });\r\n\r\n                                        } else {\r\n                                            // Force click to show actionsheet menu\r\n                                            $(\".bz-file-upload__resolution\", self.getControl()).click();\r\n                                        }\r\n                                    }\r\n                                });\r\n                        }).always(function () {\r\n                        bizagi.loading.stop();\r\n                    });\r\n\r\n                }, self.onFail.bind(self), {\r\n                    quality: self.Class.QUALITY_PICTURE,\r\n                    sourceType: Camera.PictureSourceType.PHOTOLIBRARY\r\n                });\r\n                break;\r\n            case 1:\r\n                navigator.camera.getPicture(function (dataImage) {\r\n                        bizagi.loading.start();\r\n\r\n                        $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties)).then(function () {\r\n                            return $.when(bizagi.util.media.getFileDataInfo(dataImage)).then(function (fileData) {\r\n                                self.fileProperties = fileData;\r\n                                return self.saveImage(dataImage);\r\n                            });\r\n                        }).always(function () {\r\n                            bizagi.loading.stop();\r\n                        });\r\n                    },\r\n                    self.onFail.bind(self), {\r\n                        quality: self.Class.QUALITY_PICTURE,\r\n                        sourceType: navigator.camera.PictureSourceType.CAMERA,\r\n                        mediaType: navigator.camera.MediaType.PICTURE,\r\n                        destinationType: Camera.DestinationType.FILE_URI,\r\n                        correctOrientation: true,\r\n                        targetWidth: 1280,\r\n                        targetHeight: 960\r\n                    });\r\n                break;\r\n            case 3:\r\n                navigator.device.capture.captureVideo(function (dataVideo) {\r\n                    bizagi.loading.start();\r\n\r\n                    $.when(bizagi.util.media.checkMaxSizeVideo(dataVideo, self.properties))\r\n                        .then(function () {\r\n                            return self.saveVideo(dataVideo);\r\n                        }).always(function () {\r\n                        bizagi.loading.stop();\r\n                    });\r\n\r\n                }, self.onFail.bind(self), {limit: self.Class.LIMIT});\r\n                break;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Catch errors\r\n     * @param {} error\r\n     */\r\n    onFail: function (error) {\r\n        var messageError = bizagi.util.processFailMessage(error);\r\n\r\n        bizagi.loading.stop();\r\n\r\n        if (messageError && typeof (messageError) === \"string\" && messageError.indexOf(\"No Activity found to handle Intent\") !== -1) {\r\n            var hasResource = bizagi.util.isValidResource(\"render-upload-error-media-app\");\r\n            var message = hasResource ? bizagi.localization.getResource(\"render-upload-error-media-app\") : \"Your device does not have an app to execute this action.\";\r\n\r\n            self.performValidationMessage(message);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds a validation message to the render\r\n     * @param message\r\n     */\r\n    performValidationMessage: function (message) {\r\n        var fail = bizagi.util.processFailMessage(message);\r\n\r\n        bizagi.showMessageBox(fail);\r\n    },\r\n\r\n    /**\r\n     * Handler of resolution upload\r\n     * @param {} ordinal\r\n     * @returns {}\r\n     */\r\n    handlerResolutionUpload: function (ordinal) {\r\n        var self = this;\r\n        var actionSelected = ordinal || 0;\r\n\r\n        // If original, save image normally, if not, reduce quality and size\r\n        if (actionSelected === bizagi.util.media.ResolutionType.ORIGINAL) {\r\n            return self.saveImage(self.dataImage);\r\n        } else {\r\n            var resolution = bizagi.util.media.getImageResolution(actionSelected);\r\n\r\n            return $.when(bizagi.util.media.transformImageSize(self.dataImage, resolution)).then(function (result) {\r\n\r\n                self.editedImageURL = result.localUrl;\r\n                self.properties.url = result.base64Image;\r\n\r\n                return self.saveImage(self.dataImage);\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to add new file\r\n     */\r\n    addFile: function () {\r\n        var self = this;\r\n        var dataFile = this.$inputFile[0].files[0];\r\n        var extensions = self.Class.EXTENSIONSIMG.concat(self.Class.EXTENSIONSFILE, self.Class.EXTENSIONSVIDEO);\r\n\r\n        dataFile.fullPath = this.$inputFile[0].value;\r\n        bizagi.loading.start();\r\n\r\n        if (bizagi.util.media.checkMaxSizeFile(dataFile, self.properties) && bizagi.util.media.checkFileTypes(dataFile, self.properties, extensions)) {\r\n\r\n            $.when(self.processUploadFile(dataFile)).done(function (result) {\r\n                if (!bizagi.util.isFailResponse(result)) {\r\n                    self.onUploadFileCompleted(JSON.parse(decodeURIComponent(result)));\r\n                } else {\r\n                    self.performValidationMessage(result)\r\n                }\r\n            }).fail(function (error) {\r\n                self.executeFormFailHandler(error);\r\n            }).always(function () {\r\n                bizagi.loading.stop();\r\n            });\r\n        } else {\r\n            bizagi.loading.stop();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Build add params to send to the server\r\n     * @param {} dataFile\r\n     */\r\n    buildAddFileParams: function (dataFile) {\r\n        var self = this;\r\n        var prefix = self.Class.BA_CONTEXT_PARAMETER_PREFIX;\r\n\r\n        // Get form data for POSTing\r\n        var formData = new FormData();\r\n        var form = self.getFormContainer();\r\n        var data = self.buildAddParams();\r\n\r\n        // Build add params to send to the server\r\n        var keys = Object.keys(data);\r\n\r\n        keys.map(function (key) {\r\n            formData.append(key, data[key]);\r\n        });\r\n\r\n        formData.append(\"Filedata\", dataFile);\r\n        formData.append(\"Filename\", dataFile.name.substr(dataFile.name.replace(/([\\\\\\/]+)/g, \"/\").lastIndexOf(\"/\") + 1));\r\n        formData.append(self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\", form.properties.sessionId);\r\n\r\n        if (self.properties.contexttype)\r\n            formData.append(prefix + \"contexttype\", self.properties.contexttype);\r\n\r\n        try {\r\n            if (typeof (BIZAGI_SESSION_NAME) !== \"undefined\") {\r\n                formData.append(BIZAGI_SESSION_NAME, form.properties.sessionId);\r\n            } else {\r\n                formData.append(\"JSESSIONID\", form.properties.sessionId);\r\n            }\r\n        } catch (e) {\r\n            formData.append(\"JSESSIONID\", form.properties.sessionId);\r\n        }\r\n\r\n        return formData;\r\n    },\r\n\r\n    /**\r\n     * Process an upload file into the server\r\n     * @param {} dataFile\r\n     * @returns {}\r\n     */\r\n    processUploadFile: function (dataFile) {\r\n        var data = {\r\n            url: this.properties.addUrl,\r\n            formData: this.buildAddFileParams(dataFile)\r\n        };\r\n\r\n        return this.dataService.processUploadFile(data);\r\n    },\r\n\r\n    /**\r\n     * onUploadFileCompleted\r\n     * @param {} result\r\n     */\r\n    onUploadFileCompleted: function (result) {\r\n        var self = this;\r\n        var $wrapper = $(\".bz-files\", self.getControl());\r\n\r\n        if (result.idFileUpload && result.fileName) {\r\n            var file = [result.idFileUpload, result.fileName];\r\n            var newItem = self.renderUploadItem(file);\r\n\r\n            // Locate it before the upload wrapper\r\n            $wrapper.append(newItem);\r\n\r\n            // Copy the files value but not its reference\r\n            var files = self.files.slice();\r\n\r\n            //Add the new item to this temporal array\r\n            files.push(file);\r\n\r\n            // Update value\r\n            self.setValue(files, true);\r\n\r\n            // Check maxFiles\r\n            self.checkMaxFiles();\r\n            self.attackMenuEvents(file);\r\n\r\n            self.editedImageURL = null;\r\n        } else {\r\n            self.performValidationMessage(result.message);\r\n        }\r\n    },\r\n\r\n    attackMenuEvents: function (file) {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        if (file && file.getFileProperties) {\r\n            $.when(file.getFileProperties).done(function (fileProperties) {\r\n                // TODO: Fail scenario...\r\n                var $fileItem = $(\".\" + self.properties.id + \"-\" + fileProperties.idFileUpload, $control);\r\n\r\n                self.fileData[fileProperties.idFileUpload] = fileProperties.metadata || [];\r\n                self.addMenuEvents($fileItem, fileProperties);\r\n            });\r\n        }\r\n    },\r\n\r\n    processActionByType: function (type, fileData, $fileItem) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n\r\n        bizagi.loading.start();\r\n\r\n        // Instantiate slide form object\r\n        var slideView = new bizagi.rendering.tablet.slide.ecm(self.dataService, self.renderFactory, {\r\n            title: self.properties.displayName || \"\",\r\n            container: form.container,\r\n            navigation: self.getParams().navigation,\r\n            editable: properties.editable && type !== self.Class.ACTION_DETAILS,\r\n            orientation: properties.orientation || \"ltr\",\r\n            onSave: function (result) {\r\n                if (result.update) {\r\n                    var file = [result.idFileUpload, result.fileName];\r\n                    var newItem = self.renderUploadItem(file);\r\n\r\n                    $fileItem.replaceWith(newItem);\r\n                    self.attackMenuEvents(file);\r\n                }\r\n            },\r\n            onCancel: function () {\r\n                // console.log(\"CANCEL\");\r\n            }\r\n        });\r\n\r\n        slideView.render({metadata: fileData.metadata, fileData: fileData})\r\n            .always(function () {\r\n                bizagi.loading.stop();\r\n            });\r\n\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: BizAgi Tablet Render Search List Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the search-list render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.searchList\", bizagi.rendering.searchList.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.searchList.extend(\"bizagi.rendering.tablet.searchList\", {\r\n    SEARCH_MIN_LENGTH: 2,\r\n    SEARCH_MAX_RECORDS: 50,\r\n    SEARCH_DELAY: 250,\r\n    SEARCH_ELEMENTS: {}\r\n}, {\r\n\r\n    renderControl: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"searchList\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            value: properties.value.map(function(el){\r\n                return self.formatItem(el.value);\r\n            }).join(\", \")\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     * @returns {}\r\n     */\r\n    postRender: function () {\r\n        this.searchListInput = $(\".bz-search-list__input\", this.getControl());\r\n    },\r\n\r\n    postRenderReadOnly: function () {\r\n        this.searchListInput = $(\".bz-search-list__input\", this.getControl());\r\n    },\r\n\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"searchList.readonly\");\r\n\r\n        // Render template\r\n        var content = $.fasttmpl(template, {\r\n            items: self.properties.value || {},\r\n            editable: self.properties.editable || true\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n\r\n        return content;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour\r\n     * to add handlers\r\n     * @returns {}\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n\r\n        // Select new item\r\n        self.searchListInput.on(\"click\", function (evt) {\r\n            var parent = $(evt.target).parent() || {};\r\n            if (parent.hasClass('bz-pill')) return;\r\n\r\n            self._searchListViewModal();\r\n        });\r\n    },\r\n\r\n    _searchListViewModal: function () {\r\n        var self = this;\r\n        var header = self.getHeaderTemplate();\r\n        var content = self.getContentTemplate();\r\n        var footer = self.getFooterTemplate();\r\n\r\n        self.searchListInput.mobileView({\r\n            customHeader: header,\r\n            orientation: self.properties.orientation || \"\",\r\n            cssClassHeader: \"bz-modal-view__header-multiple\",\r\n            contentTemplate: content,\r\n            footerTemplate: footer,\r\n            style: \"width: 80%; height: 70%\",\r\n            close: function () {\r\n                $(window).unbind(\"resize\");\r\n                self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n            },\r\n            afterOpenAnimation: function(event){\r\n                $(\".bz-modal-view__search\", event.view.header).focus();\r\n            },\r\n            open: function () {\r\n                self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\r\n                self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n            },\r\n            configureActions: function (context) {\r\n                self.adjustResize();\r\n                self.configureModalViewHandlers(context);\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var finalValue = typeof (value) === \"string\" ? JSON.parse(value).value : value.value;\r\n\r\n        // Set internal value\r\n        self.setValue(finalValue);\r\n\r\n        if (value !== undefined) {\r\n            if (self.properties.editable) {\r\n                self.searchListInput.html(finalValue.map(function(el){\r\n                    return self.formatItem(el.value);\r\n                }).join(\", \"));\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Remove a item from the list\r\n     * @param {} element\r\n     * @returns {}\r\n     */\r\n    deleteItem: function (element) {\r\n        var self = this;\r\n        var item = element.parent('div');\r\n\r\n        // Remove from main memory and set the new value\r\n        self.removeElement({ id: item.data(\"id\") });\r\n\r\n        // Remove list element\r\n        item.remove();\r\n    },\r\n\r\n    selectItem: function (item) {\r\n        var templateItem = this.getTagTemplate(item, this.properties.editable);\r\n        this.modalViewTagList.append(templateItem);\r\n    },\r\n\r\n    /**\r\n     * Configure the modalView Handlers for the new suggest control\r\n     * @param {} inputContainer\r\n     * @returns {}\r\n     */\r\n    configureModalViewHandlers: function (modalView) {\r\n        var self = this;\r\n        var modalFooter = modalView.footer;\r\n        var modalHeader = modalView.header;\r\n\r\n        // Initialize data\r\n        var elements = {};\r\n\r\n        if (self.hasValue()) {\r\n            var list = self.getListItems();\r\n            $.each(list, function (index, item) {\r\n                elements[item.id] = item;\r\n            });\r\n        }\r\n\r\n        // Configuring list as a selectable element\r\n        self.modalViewList = $(\".bz-list\", modalView.content);\r\n        self.modalViewTagList = $(\".bz-search-pill__results\", modalHeader);\r\n\r\n        var $clearButton = $(\".bz-modal-view__clear\", modalHeader);\r\n\r\n        // Suggest\r\n        var $suggestInput = $(\".bz-modal-view__search\", modalHeader);\r\n        var suggestFilter = bizagi.util.debounce(function () {\r\n            if (this.value === \"\") {\r\n                $clearButton.removeClass(\"bz-modal-view__clear--visible\");\r\n            } else {\r\n                $clearButton.addClass(\"bz-modal-view__clear--visible\");\r\n            }\r\n            self.autoCompleteSearchResults($.trim(this.value));\r\n        }, this.Class.SEARCH_DELAY);\r\n\r\n        $suggestInput.on(\"change keyup\", suggestFilter).on(\"focus\", function(){\r\n            modalView.header.addClass(\"bz-modal-view__header--active\");\r\n        }).on(\"blur\", function(){\r\n            modalView.header.removeClass(\"bz-modal-view__header--active\");\r\n        });\r\n\r\n        //Clear the search\r\n        $clearButton.bind(\"click\", function(){\r\n            $suggestInput.val(\"\").trigger(\"change\");\r\n        });\r\n\r\n        $(\"[data-action=close]\", modalView.header).bind(\"click\", function () {\r\n            modalView.close();\r\n        });\r\n\r\n\r\n        // Add tags to list\r\n        self.modalViewList.on(\"click\", \"li\", function () {\r\n            var item = $.data(this).item;\r\n\r\n            // Prevent duplicate elements\r\n            if (!item || (item && elements[item.id])) return;\r\n            elements[item.id] = item;\r\n\r\n            // Update state of button\r\n            $(modalFooter).find('.bz-btn').removeClass(\"bz-btn--secundary\");\r\n            $(modalFooter).find('.bz-btn').addClass(\"bz-btn--primary\");\r\n\r\n            // Update list\r\n            if ((Object.keys(elements) || []).length === 1) {\r\n                $(modalHeader).find(\".bz-search-pill__selected \")\r\n                    .removeClass(\"bz-search-pill__selected--hidden\");\r\n            }\r\n            self.selectItem(item);\r\n        });\r\n\r\n        // Remove tags of list\r\n        self.modalViewTagList.on(\"click\", '.bz-pill > .bz-btn-icn', function (evt) {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n\r\n            var element = $(this);\r\n            var tag = element.parent('div');\r\n\r\n            // Update state of button\r\n            $(modalFooter).find('.bz-btn').removeClass(\"bz-btn--secundary\");\r\n            $(modalFooter).find('.bz-btn').addClass(\"bz-btn--primary\");\r\n\r\n            // Remove from main memory and set the new value\r\n            delete elements[tag.data(\"id\")];\r\n\r\n            // Remove list element\r\n            tag.remove();\r\n            // Update list\r\n            if ((Object.keys(elements) || []).length === 0) {\r\n                $(modalHeader).find(\".bz-search-pill__selected \")\r\n                    .addClass(\"bz-search-pill__selected--hidden\");\r\n            }\r\n        });\r\n\r\n        $(modalFooter).delegate(\"[data-action=save]\", \"click\", function (evt) {\r\n            // Create a temporal array\r\n            var newList = [];\r\n            $.each(elements, function (index, item) {\r\n                newList.push(item);\r\n            });\r\n\r\n            self.setDisplayValue({ value: newList });\r\n\r\n            modalView.close();\r\n        });\r\n    },\r\n\r\n    autoCompleteSearchResults: function (currentValue) {\r\n        var self = this;\r\n\r\n        $.when(self.processRequest({ term: currentValue }))\r\n            .done(function (response) {\r\n\r\n                self.modalViewList.find(\"li\").remove();\r\n\r\n                for (var i = 0, length = response.length; i < length; i++) {\r\n                    var searchItem = self.renderSearchItem(response[i]);\r\n\r\n                    searchItem.appendTo(self.modalViewList);\r\n                }\r\n            });\r\n    },\r\n\r\n    renderSearchItem: function (item) {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"searchList.item\");\r\n\r\n        var searchItem = $.tmpl(template, {\r\n            id: item.id,\r\n            label: item.label,\r\n            value: this.formatItem(item.value)\r\n        });\r\n\r\n        searchItem.data(\"item\", item);\r\n\r\n        return searchItem;\r\n    },\r\n\r\n    /**\r\n     * Process the request data for the autocomplete control\r\n     * @param {} req\r\n     * @returns {}\r\n     */\r\n    processRequest: function (req) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var deferred = new $.Deferred();\r\n\r\n        // Create array for response objects   \r\n        var suggestions = [];\r\n\r\n        if (req.term.length >= this.Class.SEARCH_MIN_LENGTH) {\r\n\r\n            // Update term property to reflect the search\r\n            properties.term = req.term;\r\n\r\n            // Cancel previous request in order to improve the performance\r\n            if (self.deferredReference && typeof (self.deferredReference.reject) === \"function\" &&\r\n                self.deferredReference.state() !== \"resolved\") {\r\n                self.deferredReference.reject({ hideStatus: true });\r\n            }\r\n\r\n            self.deferredReference = self.getData().done(function (data) {\r\n                if (data && data.length > 0) {\r\n                    data = data.slice(0, properties.maxRecords);\r\n\r\n                    if (data.length > self.Class.SEARCH_MAX_RECORDS) {\r\n                        data = data.slice(0, self.Class.SEARCH_MAX_RECORDS);\r\n\r\n                        suggestions.push({\r\n                            id: self.Class.NO_RESULTS_SEARCH_ID,\r\n                            label: self.getResource(\"render-search-maximum-records-allowed\"),\r\n                            value: \"\"\r\n                        });\r\n\r\n\r\n                    } else {\r\n                        data = data.slice(0, properties.maxRecords);\r\n                    }\r\n\r\n                    $.each(data, function (i, val) {\r\n                        if (properties.maxRecords === 0 || i < properties.maxRecords) {\r\n                            var parseValue = bizagi.util.highlightMatches(val, req.term);\r\n\r\n                            suggestions.push({ id: val.id, label: parseValue, value: val.value });\r\n                        }\r\n                    });\r\n\r\n                } else {\r\n                    suggestions.push({\r\n                        id: self.Class.NO_RESULTS_SEARCH_ID,\r\n                        label: self.getResource(\"render-grid-no-records\"),\r\n                        value: \"\"\r\n                    });\r\n                }\r\n\r\n                deferred.resolve(suggestions);\r\n\r\n            }).fail(function () {\r\n                deferred.reject();\r\n            });\r\n\r\n        } else {\r\n            deferred.resolve(suggestions);\r\n        }\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    getContentTemplate: function () {\r\n        var self = this;\r\n        var value = self.getValue();\r\n        var finalValue = typeof (value) === \"string\" ? JSON.parse(value).value : value.value;\r\n\r\n        var template = this.renderFactory.getTemplate(\"searchList.items\");\r\n        var content = $.fasttmpl(template, {\r\n            items: finalValue || {},\r\n            editable: self.properties.editable || true\r\n        },{\r\n            formatItem: self.formatItem\r\n        });\r\n\r\n        return $.trim(content);\r\n    },\r\n\r\n    getFooterTemplate: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"searchList.actions\");\r\n        var content = $.fasttmpl(template, {\r\n            items: self.properties.value || {},\r\n            editable: self.properties.editable || true\r\n        });\r\n\r\n        return $.trim(content);\r\n    },\r\n\r\n    getTagTemplate: function (item, editable) {\r\n        var template = this.renderFactory.getTemplate(\"searchList.tag\");\r\n        var content = $.fasttmpl(template, {\r\n            id: item.id,\r\n            label: item.label,\r\n            value: this.formatItem(item.value),\r\n            editable: editable\r\n        });\r\n        return $.trim(content);\r\n    },\r\n\r\n    adjustResize: function () {\r\n        var self = this;\r\n        var initialScreenSize = window.innerHeight;\r\n\r\n        $(window).off(\"resize\").on(\"resize\", bizagi.util.debounce(function () {\r\n            var that = $(this);\r\n\r\n            // Hide the footer\r\n            if (that.height() < initialScreenSize) {\r\n                $(\".bz-mobile-view__footer_content\").addClass(\"bz-hidden\");\r\n            } else {\r\n                $(\".bz-mobile-view__footer_content\").removeClass(\"bz-hidden\");\r\n            }\r\n        }, self.Class.SEARCH_DELAY));\r\n    },\r\n\r\n    getHeaderTemplate: function () {\r\n        var self = this;\r\n        var value = self.getValue();\r\n        var finalValue = typeof (value) === \"string\" ? JSON.parse(value).value : value.value;\r\n        var template = this.renderFactory.getTemplate(\"searchList-modal-header\");\r\n\r\n        var content = $.fasttmpl(template, {\r\n            items: finalValue || {},\r\n            editable: self.properties.editable || true,\r\n            emptyItems: (finalValue || []).length === 0,\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n\r\n        return $.trim(content);\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi User Field render tablet Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define the basic behaviour for userfields\r\n */\r\n\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.userfieldWrapper\", bizagi.rendering.userfieldWrapper.prototype);\r\nbizagi.rendering.tablet.userfieldWrapper.extend(\"bizagi.rendering.tablet.userfieldWrapper\", {}, {\r\n\r\n    /**\r\n     *   Load userfield\r\n     */\r\n    getUserfieldControl: function () {\r\n        var self = this;\r\n        var sControl = self.userfieldName;\r\n        var mode = self.getMode();\r\n        var exists = (mode !== \"execution\") || eval(\"bizagi.rendering.tablet.\" + sControl + \" !== undefined\");\r\n        var def = new $.Deferred();\r\n\r\n        if (exists) {\r\n            // Creates the userfield instance\r\n            // Set true argument for tabItem\r\n            $.when(self.parent.ready()).done(function () {\r\n                def.resolve(self.createUserfieldInstance(sControl));\r\n            });\r\n\r\n        } else {\r\n            // Call ajax service in order to retrieve user field definitions\r\n            $.when(self.dataService.getUserfieldDefinition({\r\n                userfield: self.userfieldGuid,\r\n                device: \"tablet\"\r\n            })).pipe(function (data) {\r\n                // Load userfield in memory\r\n                self.loadUserfield(data);\r\n\r\n                // Creates the userfield instance\r\n                def.resolve(self.createUserfieldInstance(sControl));\r\n            });\r\n        }\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Creates the userfield instance when the userfield prototype is loaded in memory\r\n     */\r\n    createUserfieldInstance: function (sControl) {\r\n        var self = this;\r\n        var control;\r\n        try {\r\n            // Create a dynamic function to avoid problem with eval calls when minifying the code\r\n            var dynamicFunction = \"var baDynamicFn = function(renderParams){ \\r\\n\";\r\n            dynamicFunction += \"return new bizagi.rendering.tablet.\" + sControl + \"(renderParams);\\r\\n\";\r\n            dynamicFunction += \"}\\r\\n\";\r\n            dynamicFunction += \"baDynamicFn\";\r\n            dynamicFunction = eval(dynamicFunction);\r\n\r\n            // Call the dynamic function\r\n            control = dynamicFunction(self.initialParams);\r\n        } catch (e) {\r\n            // If the call fails, return the default user field\r\n            control = self.getUserFieldInstance(self.initialParams);\r\n        }\r\n\r\n        control.properties.isUserField = true;\r\n\r\n        // Save userfield instance\r\n        self.userfieldInstance = control;\r\n\r\n        // Create proxy methods from the wrapper to the userfield instance\r\n        self.replicateUserfieldMethods(control);\r\n\r\n        // Replicate renderchange event from wrapped element to grid if applies\r\n        self.userfieldInstance.bind(\"renderchange\", function () {\r\n            self.triggerHandler(\"renderchange\", arguments);\r\n        });\r\n\r\n        return control;\r\n    },\r\n\r\n    /**\r\n     * Load userfield into memory\r\n     */\r\n    loadUserfield: function (data) {\r\n        var self = this;\r\n        var styleContent = \"\";\r\n\r\n        self.properties.styleGuid = self.properties.styleGuid || Math.guid();\r\n\r\n        try {\r\n            // Parse data\r\n            try {\r\n                data = eval(data);\r\n            } catch (e) {\r\n                bizagi.log(\"Could not parse result userfield \" + self.userfieldName, e.message);\r\n            }\r\n\r\n            // Iterate elements\r\n            $.each(data, function (index, val) {\r\n                if (val.type === \"js\") {\r\n                    try {\r\n\r\n                        function replaceWithDevice(str) {\r\n                            return str.replace(/bizagi.rendering/gi, \"bizagi.rendering.tablet\");\r\n                        }\r\n\r\n                        val.content = val.content.replace(/bizagi\\.rendering\\.[^\\s]+\\.extend(\\s|\\n|\\s)*\\((\\s|\\n|\\s)*\\\"bizagi\\.rendering\\.[^\\s]+\\\"/gmi, replaceWithDevice);\r\n                        window.eval(val.content);\r\n                    } catch (ex) {\r\n                        bizagi.log(\"Could not parse result userfield3 \" + self.userfieldName, ex.message);\r\n                    }\r\n                }\r\n\r\n                if (val.type === \"css\") {\r\n                    styleContent += val.content;\r\n                }\r\n            });\r\n\r\n            if ($.trim(styleContent) !== \"\") {\r\n                bizagi.util.loadStyle(styleContent, self.properties.styleGuid);\r\n            }\r\n\r\n            // Replicate userfield methods to the wrapper\r\n            var control = eval(\"bizagi.rendering.\" + self.userfieldName);\r\n\r\n        } catch (e) {\r\n            bizagi.log(\"Could not parse result userfield \" + self.userfieldName, e.message);\r\n        }\r\n    },\r\n\r\n\r\n    getUserFieldInstance: function (params) {\r\n        var mode = this.getMode();\r\n\r\n        // If the call fails, return the default user field\r\n        return (mode === \"execution\") ?\r\n            new bizagi.rendering.tablet.defaultUserField(params) :\r\n            new bizagi.rendering.tablet.designUserField(params);\r\n    }\r\n});\r\n\r\n// Auto-extension\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.basicUserField\", bizagi.rendering.userfieldDefinition.prototype);\r\nbizagi.rendering.tablet.basicUserField.extend(\"bizagi.rendering.tablet.basicUserField\", bizagi.rendering.basicUserField.prototype);\r\nbizagi.rendering.tablet.basicUserField.extend(\"bizagi.rendering.tablet.basicUserField\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Check if the userfield is supported\r\n        if (!this.isSupported()) {\r\n            var form = self.getFormContainer();\r\n            form.addError(self.getResource(\"render-tablet-error-userfield\"));\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    getEditableControl: function () {\r\n        if (!this.isSupported()) {\r\n            return bizagi.rendering.defaultUserField.prototype.getEditableControl.apply(this, arguments);\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    getReadonlyControl: function () {\r\n        if (!this.isSupported()) {\r\n            return bizagi.rendering.defaultUserField.prototype.getReadonlyControl.apply(this, arguments);\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Returns if the userfield is supported in this device\r\n    */\r\n    isSupported: function () {\r\n        return true;\r\n    }\r\n});\r\n\r\n/*\r\n*   Default implementation for user fields\r\n*/\r\nbizagi.rendering.tablet.basicUserField.extend(\"bizagi.rendering.tablet.defaultUserField\", {}, {\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    getEditableControl: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n        var controlName = properties.control.replace(/column/g, \"\");\r\n\r\n        self.input = $(\"<label>Userfield: \" + controlName + \" not found</label>\").appendTo(control);\r\n        self.input.addClass(\"ui-bizagi-render-userfield-notSupported\");\r\n\r\n        return self.input;\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    getReadonlyControl: function () {\r\n        return this.getEditableControl();\r\n    },\r\n\r\n    /*\r\n\t*  Dont send the data to the server\r\n\t*/\r\n    collectData: function (renderValues) {\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render Image Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the image render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.image\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\r\n    BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE\r\n}, bizagi.rendering.image.prototype);\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.image.extend(\"bizagi.rendering.tablet.image\", {\r\n    QUALITY_PICTURE: 80,\r\n    EXTENSIONSIMG: [\"jpeg\", \"jpg\", \"png\"]\r\n}, {\r\n\r\n    /**\r\n     * DOM input to handle HTML uploads\r\n     * @var $inputFile jQuery DOM\r\n     */\r\n    $inputFile: null,\r\n    /**\r\n     * Whether or not is a native device 'Just a shortcut\r\n     * @var isNative boolean\r\n     */\r\n    isNative: false,\r\n\r\n    /**\r\n     * Whether or not we are offline 'Just a shortcut\r\n     * @var isOfflineForm boolean\r\n     */\r\n    isOfflineForm: false,\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Check if offline forms is supported\r\n        this.isOfflineForm = bizagi.util.isOfflineForm({context: this});\r\n        this.isNative = bizagi.util.isCordovaSupported();\r\n\r\n        if (this.isOfflineForm) {\r\n            var maxFileSizeOfProperty = Number(this.properties.maxSize) || 1048576;\r\n            var maxFileSizeOfUser = typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\" ? Number(BIZAGI_SETTINGS.UploadMaxFileSize) : 1048576;\r\n\r\n            this.properties.maxSize = maxFileSizeOfProperty < maxFileSizeOfUser ? maxFileSizeOfProperty : maxFileSizeOfUser;\r\n            var originalValue = this.properties.originalValue;\r\n            if ( originalValue && originalValue.value !== undefined ){\r\n                this.properties.offlineImageId = originalValue.value;\r\n                this.properties.originalOfflineImageId = this.properties.offlineImageId;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * This method tries to get the HTML template an render the current object inside\r\n     * @return {jQuery} $.Deferred()\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"image\");\r\n\r\n        return $.fasttmpl(template, {url: \"\"});\r\n    },\r\n\r\n    getElementsToStylize: function (context) {\r\n        return $({});\r\n    },\r\n\r\n    /**\r\n     * There is no difference when rendering a readonly image, so...\r\n     * @return {jQuery} $.Deferred()\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n        var template = this.renderFactory.getTemplate(\"image-readonly\");\r\n        var def = new $.Deferred();\r\n\r\n        $.when(self.buildItemUrl()).done(function (dataUrl) {\r\n            var url = dataUrl || \"\";\r\n\r\n            if (!self.isDisposed()) {\r\n                self.properties.url = url;\r\n                self.properties.value = url.length > 0 ? [url] : null;\r\n\r\n                self.setValue(self.properties.value);\r\n\r\n                var html = $.fasttmpl(template, {url: self.properties.url});\r\n                def.resolve(html);\r\n            }\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * After rendering element\r\n     */\r\n    postRender: function () {\r\n        var $control = this.getControl();\r\n        this.$inputFile = $(\".bz-image__input\", $control);\r\n        this.$nativeFile = $(\".bz-image__native\", $control);\r\n\r\n        if (!this.isDesignMode())\r\n            this.showAsyncImage();       \r\n    },\r\n    /**\r\n     * Add action handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var $control = this.getControl();\r\n\r\n        // Attach all events\r\n        $control.on(\"click\", \"[data-action=upload]\", function (evt) {\r\n            self.choosePhoto();\r\n        });\r\n\r\n        if (this.isNative) {\r\n            // Upload Image Options\r\n            this.$nativeFile.off(\"click\").actionSheet({\r\n                actions: self.getUploadChoices(),\r\n                actionClicked: function (action) {\r\n                    switch (action.guid) {\r\n                        case 1:\r\n                            self.imageAdd();\r\n                            break;\r\n                        case 2:\r\n                            self.imageAdd(true);\r\n                            break;\r\n                        default:\r\n                    }\r\n                },\r\n                appear: function (action) {\r\n                    self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n                cancelClicked: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                }\r\n            });\r\n\r\n            $(\".bz-image__resolution\", $control).off(\"click\").actionSheet({\r\n                actions: bizagi.util.media.getImageResolutionSizes(),\r\n                withoutCancel: true,\r\n                actionClicked: function (action) {\r\n                    bizagi.loading.start();\r\n\r\n                    $.when(self.resolutionButtonHandler(action.guid))\r\n                        .always(function () {\r\n                            bizagi.loading.stop();\r\n                        });\r\n\r\n                },\r\n                appear: function (action) {\r\n                    self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n                cancelClicked: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                }\r\n            });\r\n        } else {\r\n\r\n            // Image change (Hybrid only)\r\n            this.$inputFile.off(\"change\").on(\"change\", function () {\r\n                self.imageAdd();\r\n                this.value = \"\";\r\n            });\r\n\r\n            // Just in case\r\n            this.$inputFile.off(\"click\").on(\"click\", function (evt) {\r\n                evt.stopPropagation();\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour\r\n     * to add handlers when the control is readonly\r\n     */\r\n    configureHandlersReadOnly: function () {\r\n        var self = this;\r\n        var $control = this.getControl();\r\n\r\n        $control.on(\"click\", \".bz-image\", function () {\r\n            self.imagePreview();\r\n        })\r\n    },\r\n\r\n    /**\r\n     * Add an image\r\n     * @param useCamera boolean Whether or not to use device's camera\r\n     */\r\n    imageAdd: function (useCamera) {\r\n        var self = this;\r\n\r\n        if (!this.isNative) {\r\n            var extensions = this.Class.EXTENSIONSIMG;\r\n            var dataFile = this.$inputFile[0].files[0];\r\n\r\n            dataFile.fullPath = this.$inputFile[0].value;\r\n\r\n            bizagi.loading.start();\r\n\r\n            if (bizagi.util.media.checkMaxSizeFile(dataFile, self.properties) && bizagi.util.media.checkFileTypes(dataFile, self.properties, extensions)) {\r\n\r\n                $.when(self.performUploadFile(dataFile))\r\n                    .always(function () {\r\n                        bizagi.loading.stop();\r\n                    });\r\n\r\n            } else {\r\n                bizagi.loading.stop();\r\n            }\r\n        } else {\r\n\r\n            var options = {\r\n                quality: self.Class.QUALITY_PICTURE,\r\n                targetWidth: 1280,\r\n                targetHeight: 960,\r\n                correctOrientation: true\r\n            };\r\n\r\n            if (!useCamera) {\r\n                var coordinates = self.getControl()[0].getBoundingClientRect();\r\n\r\n                options = {\r\n                    quality: self.Class.QUALITY_PICTURE,\r\n                    sourceType: Camera.PictureSourceType.PHOTOLIBRARY,\r\n                    popoverOptions: new CameraPopoverOptions(coordinates.left, coordinates.top - 20, 200, 100, 4),\r\n                    destinationType: navigator.camera.DestinationType.FILE_URI,\r\n                    correctOrientation: true\r\n                };\r\n            }\r\n\r\n            navigator.camera.getPicture(function (dataImage) {\r\n\r\n                bizagi.loading.start();\r\n\r\n                $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties)).then(function () {\r\n                    return $.when(bizagi.util.media.getFileDataInfo(dataImage)).then(function (fileData) {\r\n                        if (bizagi.util.media.checkFileTypes(fileData, self.properties, self.Class.EXTENSIONSIMG)) {\r\n\r\n                            self.dataImage = dataImage;\r\n                            self.fileProperties = fileData;\r\n\r\n                            // \"new Blob\" constructor is not supported in android version 4.2.2\r\n                            var version = bizagi.util.getAndroidVersion();\r\n                            if ((version && version <= 4.2) || self.isOfflineForm) {\r\n\r\n                                return $.when(self.performUploadFile(self.dataImage))\r\n                                    .always(function () {\r\n                                        bizagi.loading.stop();\r\n                                    });\r\n\r\n                            } else {\r\n\r\n                                if (!bizagi.util.isAndroid()) {\r\n                                    return $.when(bizagi.util.media.modalResolutionUpload())\r\n                                        .then(function (buttonIndex) {\r\n                                            if (buttonIndex <= bizagi.util.media.getImageResolutionItems().length) {\r\n                                                return self.resolutionButtonHandler(buttonIndex);\r\n                                            }\r\n                                        });\r\n\r\n                                } else {\r\n                                    // Force click to show actionsheet menu\r\n                                    $(\".bz-image__resolution\", self.getControl()).click();\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                }).always(function () {\r\n                    bizagi.loading.stop();\r\n                });\r\n            }, self.onFail, options);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * onFail\r\n     * @param {} error\r\n     * @returns {}\r\n     */\r\n    onFail: function (error) {\r\n        bizagi.loading.stop();\r\n    },\r\n\r\n    /**\r\n     * Remove the current image\r\n     */\r\n    imageDelete: function () {\r\n        var self = this;\r\n\r\n        bizagi.showConfirmationBox(self.getResource(\"render-grid-delete-confirmation\"))\r\n            .done(function () {\r\n                bizagi.loading.start();\r\n\r\n                $.when(self.dataService.deleteImage({\r\n                    url: self.properties.deleteUrl,\r\n                    idRender: self.properties.id,\r\n                    xpath: self.properties.xpath,\r\n                    xpathContext: self.properties.xpathContext,\r\n                    idPageCache: self.properties.idPageCache,\r\n                    contexttype: self.properties.contexttype\r\n                })).done(function () {\r\n                    self.uploadFileCompleted();\r\n                }).fail(function (msg) {\r\n                    var message;\r\n                    var responseText = msg.responseText;\r\n\r\n                    try {\r\n                        message = JSON.parse(responseText);\r\n                        message = message.message || responseText;\r\n                    } catch (e) {\r\n                        message = responseText;\r\n                    }\r\n\r\n                    self.setValidationMessage(message);\r\n\r\n                }).always(function () {\r\n                    bizagi.loading.stop();\r\n                });\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Send file using HTTP\r\n     * @param dataFile\r\n     * @return {jQuery} $.Deferred()\r\n     */\r\n    uploadFile: function (dataFile) {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        if (!this.isOfflineForm) {\r\n            if (this.isNative) {\r\n\r\n                var params = {};\r\n                var addParams = self.buildAddParams();\r\n                var fileName = self.fileProperties.name;\r\n\r\n                if (self.editedImageURL) {\r\n                    params.dataFile = self.editedImageURL;\r\n                } else if (self.fileProperties) {\r\n                    params.dataFile = self.fileProperties.url;\r\n                }\r\n\r\n                addParams.queueID = \"q_\" + bizagi.util.encodeXpath(self.getUploadXpath());\r\n\r\n                params.data = addParams;\r\n                params.options = new FileUploadOptions();\r\n                params.options.fileKey = \"file\";\r\n                params.options.fileName = fileName;\r\n                params.options.mimeType = \"image/jpeg\";\r\n                params.options.uploadKey = {key: addParams[\"h_xpath\"]};\r\n                params.options.addUrl = self.properties.addUrl;\r\n\r\n                //Cleans variables related previous uploads\r\n                self.editedImageURL = null;\r\n                self.fileProperties = null;\r\n\r\n                // Fix android 4.4 getting images from recent folder\r\n                params.dataFile = bizagi.util.media.getImagePath(params.dataFile);\r\n\r\n                $.when(bizagi.util.media.uploadFile(params)).done(function (response) {\r\n                    var response = JSON.parse(decodeURIComponent(response.response));\r\n\r\n                    if (response.type === \"error\") {\r\n                        defer.reject(response);\r\n                    } else {\r\n                        defer.resolve(response);\r\n                    }\r\n                }).fail(function (error) {\r\n                    defer.reject(error);\r\n                });\r\n            } else {\r\n\r\n                if (bizagi.util.media.checkMaxSizeFile(dataFile, self.properties) &&\r\n                    bizagi.util.media.checkFileTypes(dataFile, self.properties, self.Class.EXTENSIONSIMG)) {\r\n\r\n                    self.dataService.processUploadFile({\r\n                        url: self.properties.addUrl,\r\n                        formData: self.buildAddFileParams(dataFile)\r\n                    }).done(function (response) {\r\n                        defer.resolve(response);\r\n                    }).fail(function (error) {\r\n                        defer.reject(error);\r\n                    });\r\n                } else {\r\n                    defer.reject();\r\n                }\r\n            }\r\n        } else {\r\n            // Save the image\r\n            $.when(self.saveImageOffline(dataFile))\r\n            .then( function(){\r\n                // Enables canbesent on offline mode\r\n                // In order to evaluate the xpath in synchronization phase\r\n                self.canBeSent = function () {\r\n                    return true;\r\n                };\r\n                defer.resolve();\r\n            })\r\n            .fail( function(saveOfflineError){\r\n                defer.reject();\r\n            });\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * File upload is done\r\n     * @param context\r\n     */\r\n    uploadFileCompleted: function () {\r\n        try {\r\n            this.showAsyncImage();\r\n            this.editedImageURL = null;\r\n        } catch (error) {\r\n            // TODO: Review scenario\r\n            this.getFormContainer().refreshForm();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Show async image\r\n     * */\r\n    showAsyncImage: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n        var $wrapper = $(\".bz-input-icon\", $control);\r\n\r\n        $.when(self.renderUploadItem()).done(function (htmlImage) {\r\n            if (!self.isDisposed()) {\r\n\r\n                // Empty container and add new image\r\n                $wrapper.empty();\r\n                $wrapper.append(htmlImage);\r\n\r\n                var action = self.hasValue() ? \"update\" : \"upload\";\r\n\r\n                $wrapper.attr(\"data-action\", action);\r\n                self.setValue(self.properties.value);\r\n\r\n                // Attack events to overflow-menu\r\n                if (self.hasValue()) {\r\n                    self.configureMenu();\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * resolutionButtonHandler\r\n     * @param ordinal\r\n     */\r\n    resolutionButtonHandler: function (ordinal) {\r\n        var self = this;\r\n        var actionSelected = ordinal || 0;\r\n\r\n        // If original, save image normally, if not, reduce quality and size\r\n        if (actionSelected === bizagi.util.media.ResolutionType.ORIGINAL) {\r\n            return self.performUploadFile(self.dataImage);\r\n        } else {\r\n\r\n            var resolution = bizagi.util.media.getImageResolution(actionSelected);\r\n\r\n            return $.when(bizagi.util.media.transformImageSize(self.dataImage, resolution)).then(function (result) {\r\n\r\n                self.editedImageURL = result.localUrl;\r\n                self.properties.url = result.base64Image;\r\n\r\n                return self.performUploadFile(self.dataImage);\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Render edition view\r\n     * @returns {}\r\n     */\r\n    imagePreview: function () {\r\n        var self = this;\r\n        var baseParams = self.getParams();\r\n        var container = baseParams.navigation.createRenderContainer({\r\n            title: self.properties.displayName,\r\n            view: {\r\n                zoom: true,\r\n                useNativeScrolling: false\r\n            }\r\n        });\r\n\r\n        var template = self.renderFactory.getTemplate(\"image-preview\");\r\n        var imageData = {\"url\": self.value && self.value[0] !== \"\" ? self.value[0] : \"\"};\r\n        var img = $.fasttmpl(template, imageData);\r\n\r\n        container.element.css(\"display\", \"none\");\r\n        self.inputEdition = container.element.html(img);\r\n        baseParams.navigation.navigate(container.id);\r\n\r\n        if (self.isOfflineForm) {\r\n            container.element.on(\"close\", self.onPreviewActionBack.bind(self));\r\n        }\r\n\r\n        bizagi.loading.start();\r\n\r\n        // TODO: Review fail scenario, should it call the forms.failHandler method?\r\n        $.when(self.buildFullItemUrl()).done(function (dataUrl) {\r\n            container.element.css(\"display\", \"block\");\r\n\r\n            if (dataUrl.indexOf(\"error\") < 0) {\r\n                var $preview = $(\".bz-image__preview-item:first\", container.element).attr(\"src\", dataUrl);\r\n                var originalImageWidth = $preview.css(\"width\");\r\n\r\n                originalImageWidth = Number(originalImageWidth.substring(0, originalImageWidth.length - 2));\r\n\r\n                if (self.properties.width !== -1 && self.properties.width < originalImageWidth) {\r\n                    $preview.css(\"width\", \"100%\");\r\n                }\r\n            }\r\n        }).always(function () {\r\n            bizagi.loading.stop();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Build add params to send to the server\r\n     * @param {} dataFile\r\n     * @returns {}\r\n     */\r\n    buildAddFileParams: function (dataFile) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var prefix = self.Class.BA_CONTEXT_PARAMETER_PREFIX;\r\n\r\n        // Get form data for POSTing\r\n        var formData = new FormData();\r\n        var form = self.getFormContainer();\r\n\r\n        // Build add params to send to the server\r\n        formData.append(prefix + \"xpath\", properties.xpath);\r\n        formData.append(prefix + \"idRender\", properties.id);\r\n        formData.append(prefix + \"xpathContext\", properties.xpathContext);\r\n        formData.append(prefix + self.Class.BA_PAGE_CACHE, properties.idPageCache);\r\n        formData.append(self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\", form.properties.sessionId);\r\n        formData.append(prefix + \"action\", \"savefile\");\r\n        formData.append(self.properties.xpath, dataFile);\r\n\r\n        if (properties.contexttype) {\r\n            formData.append(prefix + \"contexttype\", properties.contexttype);\r\n        }\r\n\r\n        try {\r\n            if (typeof (BIZAGI_SESSION_NAME) !== \"undefined\") {\r\n                formData.append(BIZAGI_SESSION_NAME, form.properties.sessionId);\r\n            } else {\r\n                formData.append(\"JSESSIONID\", form.properties.sessionId);\r\n            }\r\n        } catch (e) {\r\n            formData.append(\"JSESSIONID\", form.properties.sessionId);\r\n        }\r\n\r\n        return formData;\r\n    },\r\n\r\n    /**\r\n     * Call the form failhandler with an specific error\r\n     * @param {} error\r\n     * @returns {}\r\n     */\r\n    executeFormFailHandler: function (error) {\r\n        var self = this;\r\n        var errorResponse = error.responseText ? error.responseText : bizagi.localization.getResource(\"workportal-general-error\");\r\n\r\n        self.getFormContainer().failHandler(errorResponse);\r\n    },\r\n\r\n    /**\r\n     * Execute upload file\r\n     * @param {} context\r\n     * @param {} dataImage\r\n     * @returns {}\r\n     */\r\n    performUploadFile: function (dataImage) {\r\n        var self = this;\r\n\r\n        return $.when(self.uploadFile(dataImage))\r\n            .done(function (result) {\r\n                self.uploadFileCompleted();\r\n            }).fail(function (error) {\r\n                self.executeFormFailHandler(error);\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Choose photo\r\n     */\r\n    choosePhoto: function () {\r\n        if (this.isNative) {\r\n            this.$nativeFile.click();\r\n        } else if (bizagi.util.media.fileAPISupported()) {\r\n            this.$inputFile.click();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Process an action in order to do something with the image\r\n     */\r\n    configureMenu: function () {\r\n        var self = this;\r\n        var items = [];\r\n        var $control = this.getControl();\r\n        var $viewMore = $(\".bz-input-icon__input + .bz-icn\", $control);\r\n        var allowDelete = self.isOfflineForm ? false : self.properties.allowDelete && self.properties.editable;\r\n\r\n        items.push({\r\n            name: bizagi.localization.getResource(\"workportal-actionsheet-upload-image-preview\"),\r\n            fn: function () {\r\n                self.imagePreview();\r\n            }\r\n        });\r\n\r\n        items.push({\r\n            name: bizagi.localization.getResource(\"workportal-actionsheet-upload-choose-photo\"),\r\n            fn: function () {\r\n                self.choosePhoto();\r\n            }\r\n        });\r\n\r\n        if (allowDelete) {\r\n            items.push({\r\n                name: bizagi.localization.getResource(\"workportal-actionsheet-upload-remove-photo\"),\r\n                fn: function () {\r\n                    self.imageDelete();\r\n                }\r\n            });\r\n        }\r\n\r\n        $viewMore.overflowMenu({items: items});\r\n    },\r\n\r\n    /**\r\n     * Add upload options\r\n     */\r\n    getUploadChoices: function () {\r\n        return [\r\n            {\"guid\": 1, \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-choose-photo\")},\r\n            {\"guid\": 2, \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-take-photo\")}\r\n        ];\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param params\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (params) {\r\n        var self = this;\r\n        if (self.isOfflineForm) {\r\n            return self.buildItemUrlOffline(params);\r\n        }\r\n\r\n        var properties = self.properties;\r\n        var def = new $.Deferred();\r\n        var url = \"\";\r\n\r\n        if (!this.isExecutionMode()) {\r\n            url = \"\";\r\n            def.resolve(url);\r\n        } else {\r\n            var parameters = {\r\n                url: properties.dataUrl,\r\n                xpath: properties.xpath,\r\n                idRender: properties.id,\r\n                xpathContext: properties.xpathContext,\r\n                idPageCache: properties.idPageCache,\r\n                property: params && params.property ? params.property : \"fileContent\",\r\n                dataType: \"text\"\r\n            };\r\n\r\n            if (properties.contexttype) {\r\n                parameters.contexttype = properties.contexttype;\r\n            }\r\n\r\n            if (properties.isUserPreference) {\r\n                self.currentUser = bizagi.currentUser.idUser;\r\n                parameters.xpathContext = \"@Context.Users[id == \" + self.currentUser + \"]\";\r\n                parameters.contexttype = \"entity\";\r\n                parameters.surrogatekey = self.currentUser;\r\n            }\r\n\r\n            self.dataService.multiaction().getPropertyData(parameters, \"text\")\r\n                .done(function (data) {\r\n                    if (data.charAt(0) === \"\\\"\") {\r\n                        data = data.slice(1, -1);\r\n                    }\r\n\r\n                    if (data !== \"\") {\r\n                        url = \"data:image/png;base64,\" + data;\r\n                    }\r\n\r\n                    def.resolve(url);\r\n                }).fail(function (error) {\r\n                def.reject(error);\r\n            });\r\n        }\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Refresh data\r\n     * @param {} event\r\n     */\r\n    onPreviewActionBack: function (event) {\r\n        var self = this;\r\n        var dataUrl = $(\".bz-image__preview-item\", event.target).attr(\"src\") || \"\";\r\n\r\n        var dataUrlToSave = dataUrl.length > 0 ? [].concat(dataUrl) : null;\r\n        self.setValue(dataUrlToSave);\r\n    },\r\n\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        if(self.isOfflineForm && bizagi.util.isOfflineFormsV2Supported()){\r\n            var imageId = self.properties.offlineImageId;\r\n            var originalImageId = self.properties.originalOfflineImageId;\r\n            if(imageId === originalImageId){\r\n                return;\r\n            }\r\n            var xpath = self.properties.xpath;\r\n            var imageId = self.properties.offlineImageId;\r\n            if (!bizagi.util.isEmpty(xpath)){\r\n                if(!bizagi.util.isEmpty(imageId)){\r\n                    renderValues[xpath] = imageId;\r\n                }\r\n                else {\r\n                    delete renderValues[xpath];\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            $._super(renderValues);\r\n        }\r\n    }\r\n\r\n});\r\n\r\n","/**\r\n *   Name: Bizagi Tablet Render Document Generator Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the document generator render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.document\", bizagi.rendering.document.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.document.extend(\"bizagi.rendering.tablet.document\", {\r\n    ACTION_SHOW: \"show\",\r\n    ACTION_DOWNLOAD: \"download\",\r\n    ACTION_DELETE: \"delete\"\r\n}, {\r\n\r\n    /**\r\n     * This method tries to get the HTML template an render the current object inside\r\n     * @return {jQuery} $.Deferred()\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = this.renderFactory.getTemplate(self.getTemplate());\r\n        var documents = this.properties.value || [];\r\n\r\n        var data = {\r\n            downloadalldocuments: this.properties.downloadalldocuments,\r\n            allowgenerate: this.properties.allowGenerate,\r\n            noFiles: documents ? (documents.length === 0) : true,\r\n            append: this.properties.append,\r\n            caption: this.properties.caption\r\n        };\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, data);\r\n\r\n        // Render current children\r\n        var items = this.renderDocumentsHtml(documents);\r\n        html = this.replaceFilesHtml(html, items);\r\n\r\n        // Render current children\r\n        var actions = this.renderActionsHtml(documents, data.noFiles, data.downloadalldocuments);\r\n        html = this.replaceActionsHtml(html, actions);\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var $control = this.getControl();\r\n\r\n        this.$inputDocument = $(\".bz-document-template__container\", $control);\r\n        this.$listDocuments = $(\"[data-component=files]\", $control);\r\n        this.$listActions = $(\"[data-component=actions]\", $control);\r\n\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n        var template = this.renderFactory.getTemplate(self.getTemplateReadonly());\r\n        var documents = this.properties.value || [];\r\n        var noFiles = documents ? (documents.length === 0) : true;\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {noFiles: noFiles});\r\n\r\n        // Render current children\r\n        var items = this.renderDocumentsHtml(documents);\r\n        html = this.replaceFilesHtml(html, items);\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        var $control = this.getControl();\r\n\r\n        this.$listDocuments = $(\"[data-component=files]\", $control);\r\n    },\r\n\r\n    /**\r\n     * TMethod to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n\r\n        // Attach handler\r\n        this.$inputDocument.on(\"click\", function (evt) {\r\n            self.properties.buttonExecuted = true;\r\n\r\n            if (self.properties.validate) {\r\n                // Check if the form is valid, then generate\r\n                if (self.validateContainer()) self.documentTemplateGenerate();\r\n            } else {\r\n                // Just generate the form\r\n                self.documentTemplateGenerate();\r\n            }\r\n\r\n            self.properties.buttonExecuted = false;\r\n        });\r\n\r\n        // Configure delete and preview handler\r\n        this.$listDocuments.on(\"click\", \"[data-action]\", function (evt) {\r\n            var $context = $(this);\r\n\r\n            var item = $context.parent(\".bz-document\");\r\n            var documentFile = item.data();\r\n            var action = $context.data(\"action\");\r\n\r\n            self.processAction(action, documentFile);\r\n        });\r\n\r\n        // Configure delete and download handler\r\n        self.$listActions.on(\"click\", \"[data-action]\", function (evt) {\r\n            var $context = $(this);\r\n\r\n            var item = $context.parent(\".bz-document__download\");\r\n            var documentFile = item.data();\r\n            var action = $context.data(\"action\");\r\n\r\n            self.processAction(action, documentFile);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers when the control is readonly\r\n     */\r\n    configureHandlersReadOnly: function () {\r\n        var self = this;\r\n\r\n        // Configure delete and preview handler\r\n        this.$listDocuments.on(\"click\", \"[data-action]\", function (evt) {\r\n            var $context = $(this);\r\n\r\n            var item = $context.parent(\".bz-document\");\r\n            var documentFile = item.data();\r\n            var action = $context.data(\"action\");\r\n\r\n            self.processAction(action, documentFile);\r\n        });\r\n    },\r\n    \r\n    /**\r\n     * This method must be implemented by the specific class of each device. (Virtual method)\r\n     * @param file\r\n     * @returns {*|*|*}\r\n     */\r\n    renderAllDocumentDownload: function (file) {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(self.getTemplateDownload());\r\n        var url = self.buildAllDocumentsUrl();\r\n\r\n        // Don't render urls when not running in execution mode\r\n        if (!this.isExecutionMode()) url = \"javascript:void(0);\";\r\n\r\n        var html = $.fasttmpl(template, {\r\n            url: url,\r\n            filename: file.fileName,\r\n            joined: true\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Redraw documents when needed\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    redrawDocuments: function (documents, noFiles, downloadAllDocuments) {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n        var $documentContainer = $(\"[data-component='files']\", $control);\r\n        var $actionContainer = $(\"[data-component='actions']\", $control);\r\n\r\n        // Clear current links\r\n        $documentContainer.empty();\r\n        $actionContainer.empty();\r\n\r\n        // Draw links again\r\n        var items = this.renderDocumentsHtml(documents);\r\n        $documentContainer.append(items);\r\n\r\n        // Check if there are documents and the flag to download all are available to show the link.\r\n        var actions = this.renderActionsHtml(documents, noFiles, downloadAllDocuments);\r\n        $actionContainer.append(actions);\r\n\r\n        //Set value\r\n        self.setValue(documents);\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed (Virtual method)\r\n     * @param url\r\n     * @param filename\r\n     */\r\n    showDocumentPreview: function (url, filename) {\r\n        bizagi.loading.start();\r\n\r\n        $.when(bizagi.util.media.downloadFile(url, filename))\r\n            .fail(function (error) {\r\n                if (error.responseText) {\r\n                    self.getFormContainer().failHandler(error.responseText);\r\n                }\r\n            }).always(function () {\r\n            bizagi.loading.stop();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Process request of DocumentTemplateGenerate action\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    resolveDocumentTemplateGenerate: function (documents, noFiles, downloadAllDocuments) {\r\n        // Redraw documents\r\n        this.redrawDocuments(documents, noFiles, downloadAllDocuments);\r\n        this.value = documents;\r\n    },\r\n\r\n    /**\r\n     * Process request of DocumentTemplateGenerate action\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    resolveDeleteDocumentTemplate: function (documents, noFiles, downloadAllDocuments) {\r\n        // Redraw documents\r\n        this.redrawDocuments(documents, noFiles, downloadAllDocuments);\r\n        this.value = documents;\r\n    },\r\n\r\n    processAction: function (action, documentFile) {\r\n        if (action === this.Class.ACTION_DELETE) {\r\n            this.deleteDocumentTemplate(documentFile.filename);\r\n        } else if (action === this.Class.ACTION_SHOW) {\r\n            this.showDocumentPreview(documentFile.url, documentFile.filename);\r\n        } else if (action === this.Class.ACTION_DOWNLOAD) {\r\n            this.showDocumentPreview(documentFile.url, documentFile.filename);\r\n        }\r\n    }\r\n});\r\n","/*\r\n*   Name: Bizagi Render Geolocation control\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will redefine the geolocation render class to adjust to tablet devices\r\n*/\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.geolocation\", bizagi.rendering.geolocation.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.geolocation.extend(\"bizagi.rendering.tablet.geolocation\", {\r\n    ALLOW_UPDATE: \"update\"\r\n}, {\r\n\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var $control = this.getControl();\r\n        this.coordinate = $control.find(\"input\");\r\n\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"readonly\");\r\n\r\n        return $.fasttmpl(template, {value: this.getDisplayValue()});\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        var $control = this.getControl();\r\n        this.coordinate = $control.find(\"input\");\r\n\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     * @returns {}\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        // If the control doesn't have a value set the position\r\n        if (self.value == null) {\r\n            self.updateDisplayValue();\r\n        }\r\n\r\n        $control.on(\"click\", \"[data-action=\" + self.Class.ALLOW_UPDATE + \"]\", self.processAction.bind(self));\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var def = new $.Deferred();\r\n\r\n        if (value != null && value !== \"\") {\r\n            if (self.coordinate)\r\n                self.coordinate.val(self.performPrecision(value));\r\n\r\n            // Set internal value\r\n            self.setValue(value, false);\r\n            def.resolve();\r\n        } else {\r\n            var onSuccess = function (position) {\r\n                var coordinates = position.coords.latitude + \" \" + position.coords.longitude;\r\n\r\n                self.coordinate.val(self.performPrecision(coordinates));\r\n\r\n                // Set internal value\r\n                self.setValue(coordinates, false);\r\n                def.resolve();\r\n            };\r\n\r\n            var onFail = function (message) {\r\n                def.reject(message);\r\n            };\r\n\r\n            if (bizagi.util.isCordovaSupported() && bizagi.util.isiOSDevice()) {\r\n                navigator.geolocation.getCurrentPosition(onSuccess, onFail);\r\n            } else {\r\n                self.getCurrentPosition(onSuccess, onFail);\r\n            }\r\n        }\r\n\r\n        return def.promise();\r\n    },\r\n\r\n\r\n    updateDisplayValue: function () {\r\n        var self = this;\r\n\r\n        self.setDisplayValue().then(function () {\r\n            self.setValidationMessage(\"\");\r\n        }).fail(function (message) {\r\n            self.coordinate.val(\"\");\r\n            self.setValidationMessage(message);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Process an action in order to do something with the geolocation\r\n     */\r\n    processAction: function () {\r\n        this.coordinate.empty();\r\n        this.updateDisplayValue();\r\n    },\r\n\r\n    getElementsToStylize: function ($context) {\r\n        return this.properties.editable ? $(\"input\", $context) : $(\".readonly-control\", $context); \r\n    }\r\n});","/**\r\n * Tablet definition of Action Launcher\r\n *\r\n * @author: Ricardo Pérez\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.actionLauncher\", bizagi.rendering.actionLauncher.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.actionLauncher.extend(\"bizagi.rendering.tablet.actionLauncher\", {}, {\r\n /**\r\n     * Render a specific implementation for Desktop device\r\n     */\r\n    postRender: function () {\r\n        if (this.getMode() == \"design\"){\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n        self.actions = [];\r\n        self.startLoading();\r\n        // Define params to get list of actions        \r\n        $.when(self.dataService.multiaction().getActions(self.processPropertyValueArgs))\r\n            .then(function (response) {\r\n                response = self.getPropertiesActionLaucher(response);\r\n                self.actions = response;\r\n                self.deferredActions.resolve(response);\r\n\r\n                if (self.actions.length > 0) {\r\n                    $(\"[data-element='actions-add-btn']\", control).show();\r\n                }\r\n                else{\r\n                    $(\"[data-element='actions-add-btn']\", control).hide();\r\n                }\r\n\r\n                if (properties.isHorizontal) {\r\n                    if (properties.templatetype != \"none\") {\r\n                        return self.dataService.multiaction().getPropertyData(self.processPropertyValueDataTmplArgs)\r\n                            .then(function (templateData) {\r\n                                return self.engine.render($.extend(templateData, {\r\n                                    isDefaultTemplate: properties.templatetype === \"default\",\r\n                                    sessionId: self.properties.sessionId\r\n                                }), self.processPropertyValueDataTmplArgs);\r\n                            }).then(function (tmpl) {\r\n                                template = self.renderFactory.getTemplate(\"render-actionLauncher-horizontal\");\r\n                                var html = $($.fasttmpl(template, {\r\n                                    template: true\r\n                                }));\r\n\r\n                                $(\".bz-template\", html.wrap(\"<div>\").parent()).append(tmpl);\r\n                                return html;\r\n                            });\r\n                    }\r\n                }\r\n                else{\r\n                    template = self.renderFactory.getTemplate(\"render-actionLauncher-horizontal\");\r\n                    return $.fasttmpl(template, {\r\n                        template: false\r\n                    });\r\n                }\r\n            }).done(function (html) {\r\n                $(\"[data-element='template-container']\", control).append(html);\r\n                self.configureActionsHandlers();\r\n                self.configureTemplateHandlers();\r\n            }).always(function () {\r\n                self.endLoading();\r\n            });\r\n    },\r\n\r\n\r\n    /**\r\n     * Validates if the action launcher control contains a valid value\r\n     * @returns {boolean}\r\n     */\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n        return typeof value !== \"undefined\" && value !== null && value.length > 0;\r\n    },\r\n\r\n    /**\r\n     * Add binding to html elements\r\n     */\r\n    configureActionsHandlers: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var actionLauncherControls = $(\".action-launcher-control\", control);\r\n\r\n        //Binding for click action on buttons\r\n        actionLauncherControls.on(\"click\", function () {\r\n            var item = self.actions[parseInt($(this).data(\"index\"))];\r\n            var action = {\r\n                guidProcess: item[0],\r\n                guidAction: item[4],\r\n                displayName: item[1],\r\n                actionType: item[3],\r\n                xpathContext: typeof item[5] !== \"undefined\" && item[5] === \"true\",\r\n                readOnlyForm: item[6] || false,\r\n                guidEntity: self.properties.guidEntity,\r\n                xpathActions: self.properties.xpathActions || \"\"\r\n            };\r\n\r\n            self.processAction(action);\r\n        });\r\n\r\n        var actions = [];\r\n        for (var i = 0, length = self.actions.length; i < length; i++) {\r\n            actions.push({\r\n                guid: self.actions[i][0],\r\n                displayName: self.actions[i][1]\r\n            });\r\n        }\r\n\r\n\r\n        //Binding for click action sheet\r\n        $(\"[data-element='actions-add-btn']\", control).actionSheet({\r\n            actions: actions,\r\n            actionClicked: function (action) {\r\n                var item = self.actions.find(function (element) {\r\n                    return element[0] == action.guid;\r\n                });\r\n\r\n                self.processAction({\r\n                    guidProcess: item[0],\r\n                    guidAction: item[4],\r\n                    displayName: item[1],\r\n                    actionType: item[3],\r\n                    xpathContext: typeof item[5] !== \"undefined\" && item[5] === \"true\",\r\n                    readOnlyForm: item[6] || false,\r\n                    xpathActions: self.properties.xpathActions || \"\"\r\n                });\r\n            }\r\n        });\r\n\r\n        //Catch the typed text in the search field and filter the action list\r\n        $.expr[\":\"].FilterAction = function (entity, i, array) {\r\n            var search = array[3];\r\n            if (!search) {\r\n                return false;\r\n            }\r\n            return new RegExp(search, \"i\").test($(entity).text());\r\n        };\r\n        $(\"input#ui-bizagi-render-action-launcher-filter-input\", control).keyup(function () {\r\n            var search = $(this).val();\r\n            $(\".action-launcher-control\", control).show();\r\n            if (search) {\r\n                $(\".action-launcher-control\", control)\r\n                    .not(\":FilterAction(\" + search + \")\").hide();\r\n            }\r\n        });\r\n    },\r\n    /**\r\n     *\r\n     */\r\n    configureTemplateHandlers: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        //Catch the event from the layout link\r\n        self.engine.subscribe(\"onLoadDataNavigation\", function (ev, params) {\r\n            params.filters = [];\r\n            self.triggerGlobalHandler(\"dataNavigation\", params);\r\n        });\r\n\r\n        $(\".bz-template-more-or-less\", control).bind(\"click\", function(){\r\n            $(\".bz-template\", control).toggleClass(\"bz-template--collapsed\");\r\n        });\r\n    },\r\n    /**\r\n     *\r\n     * @param action\r\n     */\r\n    processAction: function (action) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n        var multipleSelection = (typeof properties.multipleSelection == \"undefined\") ? true : properties.multipleSelection;\r\n\r\n        if (multipleSelection) {\r\n            // If this is a form and has been queued, so open it\r\n            if (action.actionType == \"Form\" && self.countSameActions(action) >= 1 && !action.xpathContext) {\r\n                //Open action\r\n                $(\".action-to-execute-control[data-guidaction='\" + action.guidAction + \"'] label\", control).click();\r\n            } else {\r\n                $.when(self.actionManager(action)).done(function (act) {\r\n                    self.executeAction(act);\r\n                });\r\n            }\r\n        } else if (self.getValue().length > 0) {\r\n            self.showConfirmationDialog(action);\r\n        } else {\r\n            $.when(self.actionManager(action)).done(function (act) {\r\n                self.executeAction(act);\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param data\r\n     * @param action\r\n     */\r\n    notifyExecution: function (data, action) {\r\n        var self = this;\r\n\r\n        if (data.response == \"success\") {\r\n            $.notifier.add({\r\n                class_name: \"success\",\r\n                title: action.displayName,\r\n                text: self.getResource(\"render-action-launcher-success-excecution\").replace('%s', action.displayName),\r\n                sticky: false\r\n            });\r\n        } else {\r\n            $.notifier.add({\r\n                class_name: \"error\",\r\n                title: action.displayName,\r\n                text: self.getResource(\"render-action-launcher-failed-excecution\").replace('%s', action.displayName),\r\n                sticky: false\r\n            });\r\n        }\r\n    },\r\n    /**\r\n     *\r\n     * @param action\r\n     * @returns {*}\r\n     */\r\n    processActionForm: function (action) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var formParams = self.getParams();\r\n\r\n        var additionalXpaths = self.properties.additionalXpath.join(\",\");\r\n        var xpathContext = (action.xpathContext) ? self.properties.xpathActions + \".\" + action.xpathContext : self.properties.xpathActions;\r\n        var def = new $.Deferred();\r\n\r\n        // Show dialog with new form after that\r\n        var slideForm = new bizagi.rendering.tablet.slide.form(self.dataService, self.renderFactory, {\r\n            title: properties.detailLabel || bizagi.localization.getResource(\"render-grid-details-form\"),\r\n            navigation: formParams.navigation,\r\n            showSaveButton: true,\r\n            cancelButtonLabel: bizagi.localization.getResource(\"render-form-dialog-box-close\"),\r\n            onSave: function (data) {\r\n                // Submit the form\r\n                return self.dataService.multiaction().submitData({\r\n                    action: \"SAVE\",\r\n                    data: data,\r\n                    xpathContext: slideForm.form.properties.xpathContext,\r\n                    idPageCache: data.idPageCache,\r\n                    isOfflineForm: false,\r\n                    isActionStartForm: true\r\n                }).done(function (savedData) {\r\n                    if (!action.editMode && self.countSameActions(action) === 0) {\r\n                        action.idStartScope = savedData.IdScope;\r\n                    }\r\n                    def.resolve(savedData.IdScope);\r\n                });\r\n            },\r\n            onCancel: function (data) {\r\n\r\n            }\r\n        });\r\n\r\n        var renderParams = {\r\n            \"idForm\": action.guidProcess,\r\n            \"contextType\": \"start\",\r\n            \"idCase\": self.properties.caseId,\r\n            \"idWorkitem\": self.typeForm != \"SummaryForm\" ? formParams.idWorkitem : undefined,\r\n            \"additionalXpaths\": additionalXpaths,\r\n            \"xpathContext\": xpathContext,\r\n            \"idStartScope\": action.idStartScope,\r\n            \"surrogateKey\": self.properties.surrogatedKey,\r\n            \"readOnlyForm\": action.readOnlyForm,\r\n            \"recordXpath\": action.recordXpath\r\n        };\r\n\r\n        if (action.actionType === \"Form\") {\r\n            renderParams.contextType = \"entitytemplate\";\r\n            renderParams.xpathContext = undefined;\r\n            renderParams.guidEntity = action.guidEntity;\r\n            renderParams.rewriteContextType = true;\r\n        }\r\n\r\n        slideForm.render(renderParams);\r\n\r\n        return def.promise();\r\n    },\r\n    /**\r\n     *\r\n     * @param action\r\n     * @returns {*}\r\n     */\r\n    processActionFormCollection: function (action) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var additionalXpaths = self.properties.additionalXpath.join(\",\");\r\n        var def = new $.Deferred();\r\n        var xpathContext = (action.xpathContext) ? self.properties.xpathActions + \".\" + action.xpathContext : self.properties.xpathActions;\r\n        var xpathPattern = \"%s[id=%s]\";\r\n        var xpathPatternWithoutkey = \"%s[]\";\r\n        var xpathContextWithKey = (xpathContext !== \"\") ? printf(xpathPattern, xpathContext, action.idEntity) : xpathContext;\r\n        var xpathContextWithoutKey = (xpathContext !== \"\") ? printf(xpathPatternWithoutkey, xpathContext) : xpathContext;\r\n        var formParams = form.getParams();\r\n\r\n        var slideForm = new bizagi.rendering.tablet.slide.form(self.dataService, self.renderFactory, {\r\n            title: properties.detailLabel || bizagi.localization.getResource(\"render-grid-details-form\"),\r\n            navigation: formParams.navigation,\r\n            showSaveButton: true,\r\n            cancelButtonLabel: bizagi.localization.getResource(\"render-form-dialog-box-close\"),\r\n            onSave: function (data) {\r\n                if (action.editMode) {\r\n                    return self.dataService.multiaction().submitData({\r\n                        action: \"SAVE\",\r\n                        data: data,\r\n                        xpathContext: xpathContextWithKey,\r\n                        idPageCache: data.idPageCache,\r\n                        isOfflineForm: false,\r\n                        isActionStartForm: true\r\n                    }).done(function (savedData) {\r\n                        def.resolve(savedData.IdScope);\r\n                    });\r\n                } else {\r\n                    return self.dataService.addGridRecordData({\r\n                        idRender: properties.id,\r\n                        //xpath: properties.xpath,\r\n                        xpathContext: xpathContext,\r\n                        contexttype: \"start\",\r\n                        idPageCache: data.idPageCache,\r\n                        submitData: data\r\n                    }).done(function (savedData) {\r\n                        action.idStartScope = savedData.IdScope;\r\n                        action.idEntity = savedData.IdEntity;\r\n                        self.addActionToQueue(action);\r\n                        def.resolve(savedData.IdScope);\r\n                    });\r\n                }\r\n            },\r\n            onCancel: function (data) {\r\n\r\n            }\r\n        });\r\n\r\n        slideForm.render({\r\n            \"idForm\": action.guidProcess,\r\n            \"contextType\": \"start\",\r\n            \"idCase\": formParams.idCase,\r\n            \"additionalXpaths\": additionalXpaths,\r\n            \"xpathContext\": (action.editMode) ? xpathContextWithKey : xpathContextWithoutKey,\r\n            \"idStartScope\": action.idStartScope,\r\n            \"surrogateKey\": self.properties.surrogatedKey,\r\n            \"readOnlyForm\": action.readOnlyForm,\r\n            \"recordXpath\": action.recordXpath\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n    /**\r\n     * Process a start form\r\n     * @param args\r\n     * @return {*}\r\n     */\r\n    processStartForm: function (args) {\r\n        var self = this;\r\n        var def = new $.Deferred();\r\n        args = args || {};\r\n        var formParams = self.getFormContainer().getParams();\r\n\r\n        // Show dialog\r\n        var slideForm = new bizagi.rendering.tablet.startForm(self.dataService, self.renderFactory, {\r\n            title: args.title || \"\",\r\n            navigation: formParams.navigation,\r\n            saveButtonLabel: (self.typeForm == \"GlobalForm\" || self.typeForm == \"SummaryForm\")\r\n                ? bizagi.localization.getResource(\"render-form-button-create\")\r\n                : bizagi.localization.getResource(\"render-form-dialog-box-save\"),\r\n            onSave: function (data) {\r\n                // Submit the form\r\n                return self.dataService.multiaction().submitData({\r\n                    action: \"SAVE\",\r\n                    data: data,\r\n                    xpathContext: self.properties.xpathContext,\r\n                    idPageCache: data.idPageCache,\r\n                    isOfflineForm: false,\r\n                    isActionStartForm: true\r\n                }).done(function (savedData) {\r\n                    def.resolve(savedData.IdScope);\r\n                });\r\n            }\r\n        });\r\n        // Render the search form\r\n        slideForm.render({\r\n            guidprocess: args.guidprocess,\r\n            idStartScope: args.idStartScope,\r\n            idCase: self.properties.caseId,\r\n            idWorkitem: self.typeForm != \"SummaryForm\" ? formParams.idWorkitem : undefined,\r\n            additionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n            surrogatedKey: self.properties.surrogatedKey,\r\n            recordXpath: args.recordXpath,\r\n            mappingstakeholders: true\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n    /**\r\n     *\r\n     * @param action\r\n     */\r\n    executeAction: function (action) {\r\n        var self = this;\r\n\r\n        if (self.typeForm == \"GlobalForm\" || self.typeForm == \"SummaryForm\") {\r\n            var message = bizagi.localization.getResource(\"render-action-launcher-immediatly-action-confirmation\");\r\n\r\n            $.when(bizagi.showConfirmationBox(message, \"Bizagi\", \"info\"))\r\n                .done(function () {\r\n                    self.executeActionImmediately(action);\r\n                });\r\n        } else {\r\n            self.addActionToQueue(action);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Show the confirmation dialog\r\n     * bizagi.createOkCancelPopup\r\n     * @param action\r\n     * */\r\n    showConfirmationDialog: function (action) {\r\n        var self = this;\r\n        var message = bizagi.localization.getResource(\"render-action-launcher-single-action-confirmation\");\r\n\r\n        $.when(bizagi.showConfirmationBox(message, \"Bizagi\", \"info\"))\r\n            .done(function () {\r\n                self.setValue([]);\r\n\r\n                $.when(self.actionManager(action)).done(function (act) {\r\n                    self.executeAction(act);\r\n                });\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Render actual value of control and set events\r\n     * @param data\r\n     */\r\n    setDisplayValue: function (data) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var actionsToExecuteContainer = $(\"[data-element='actions-container']\", control);\r\n        var template = self.renderFactory.getTemplate(\"render-actionLauncher-actions-to-execute\");\r\n\r\n        self.configureQueueVisibility();\r\n\r\n        $.when(self.deferredActions).done(function (listOfActions) {\r\n            var getMappingAction = function (guidAction) {\r\n                var mapping = [];\r\n                $.each(listOfActions, function (key, value) {\r\n                    if (value[4] == guidAction) {\r\n                        mapping = value;\r\n                    }\r\n                });\r\n\r\n                return mapping;\r\n\r\n            };\r\n\r\n            $.each(data, function (key, value) {\r\n                var mapping = getMappingAction(value.guidAction);\r\n                data[key].displayName = mapping[1];\r\n                data[key].guidProcess = mapping[0];\r\n                data[key].actionType = mapping[3];\r\n                data[key].xpathContext = mapping[5];\r\n                data[key].readOnlyForm = mapping[6];\r\n\r\n                if (data[key].params && data[key].params.idStartScope) {\r\n                    data[key].idStartScope = data[key].params.idStartScope;\r\n                }\r\n                if (data[key].params && data[key].params.idPageCache) {\r\n                    data[key].idPageCache = data[key].params.idPageCache;\r\n                }\r\n                if (data[key].params && data[key].params.idEntity) {\r\n                    data[key].idEntity = data[key].params.idEntity;\r\n                }\r\n            });\r\n\r\n            if (data.length > 0){\r\n                $.when($.fasttmpl(template, { actions: data })).done(function (html) {\r\n                    actionsToExecuteContainer.empty();\r\n                    actionsToExecuteContainer.append(html);\r\n\r\n                    var removeActionSelector = $(\".bz-actions-to-execute .bz-btn-icn\", actionsToExecuteContainer);\r\n                    var openActionSelector = $(\"label\", actionsToExecuteContainer);\r\n\r\n                    removeActionSelector.on(\"click\", function () {\r\n                        var index = $(this).parent().data(\"index\");\r\n                        self.removeActionToQueue(index);\r\n                    });\r\n\r\n                    openActionSelector.on(\"click\", function () {\r\n                        var target = $(this).parent();\r\n                        var type = target.data(\"actiontype\");\r\n                        var guidprocess = target.data(\"guidprocess\");\r\n                        var idStartScope = target.data(\"idstartscope\");\r\n                        var title = target.data(\"title\");\r\n                        // When undefined return string \"undefined\" instead of type \"undefined\"\r\n                        var xpathContext = target.data(\"xpathcontext\");\r\n                        var readOnlyForm = target.data(\"readonlyform\") || false;\r\n                        var idEntity = target.data(\"identity\") || \"\";\r\n                        var guidAction = target.data(\"guidaction\");\r\n                        var recordXpath = xpathContext || self.properties.xpathContext;\r\n                        switch (type) {\r\n                            case \"Process\":\r\n                                if (idStartScope) {\r\n                                    self.processStartForm({\r\n                                        guidprocess: guidprocess,\r\n                                        idStartScope: idStartScope,\r\n                                        title: title,\r\n                                        xpathContext: xpathContext,\r\n                                        recordXpath: recordXpath\r\n                                    });\r\n                                }\r\n                                break;\r\n                            case \"Form\":\r\n                                var action = {\r\n                                    guidProcess: guidprocess,\r\n                                    idStartScope: idStartScope,\r\n                                    editMode: true,\r\n                                    xpathContext: xpathContext,\r\n                                    readOnlyForm: readOnlyForm,\r\n                                    idEntity: idEntity,\r\n                                    recordXpath: recordXpath\r\n                                };\r\n\r\n                                if (action.xpathContext) {\r\n                                    self.processActionFormCollection(action);\r\n                                } else {\r\n                                    // Convert string \"undefined\" into type \"undefined\"\r\n                                    action.xpathContext = undefined;\r\n\r\n                                    // Add parameters if action form\r\n                                    var extraParams = {};\r\n                                    var dataAction = self.value.filter(function (item) {\r\n                                        return item.guidAction == guidAction;\r\n                                    });\r\n\r\n                                    if (dataAction.length > 0) {\r\n                                        extraParams = {\r\n                                            actionType: \"Form\",\r\n                                            contextType: \"entitytemplate\",\r\n                                            guidEntity: self.properties.guidEntity || dataAction[0].guidEntity\r\n                                        }\r\n                                    }\r\n\r\n                                    self.processActionForm($.extend(action, extraParams));\r\n                                }\r\n                                break;\r\n                            case \"Rule\":\r\n                                // Rules dont have forms or something like that\r\n                                break;\r\n                        }\r\n                    });\r\n                });\r\n            }else{\r\n                actionsToExecuteContainer.empty();\r\n            }\r\n\r\n        });\r\n    },\r\n    /**\r\n     * Show container if it has actions\r\n     */\r\n    configureQueueVisibility: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var actionsToExecuteContainer = $(\".bz-action-launcher-actions-to-execute-container\", control);\r\n        var actionsToExecuteTitle = $(\".action-to-execute-label\", control);\r\n\r\n        if (self.getValue().length > 0) {\r\n            actionsToExecuteContainer.show();\r\n            actionsToExecuteTitle.show();\r\n        } else {\r\n            actionsToExecuteContainer.hide();\r\n            actionsToExecuteTitle.hide();\r\n        }\r\n    }\r\n});","/**\r\n * Tablet definition of entity template\r\n *\r\n * @author: Ricardo Pérez\r\n */\r\n\r\nbizagi.rendering.tablet.actionLauncher.extend(\"bizagi.rendering.tablet.entityTemplate\", {}, {\r\n /**\r\n     * Render a specific implementation for tablet device\r\n     */\r\n    postRender: function() {\r\n        if (this.getMode() == \"design\"){\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n        self.actions = [];\r\n        self.configureQueueVisibility();\r\n        self.startLoading();\r\n\r\n        // Define params to get template               \r\n        self.dataService.multiaction().getPropertyData(self.processPropertyValueDataTmplArgs)\r\n            .then(function(templateData) {\r\n                return self.engine.render(templateData, self.processPropertyValueDataTmplArgs)\r\n                    .then(function(tmpl) {\r\n                        var template = self.renderFactory.getTemplate(\"render-actionLauncher-horizontal\")\r\n                        var html = $($.fasttmpl(template, { template: true }));\r\n                        $(\".bz-template\", html.wrap(\"<div>\").parent()).append(tmpl);\r\n\r\n                        if (properties.allowactions) {\r\n                           return self.dataService.multiaction().getActions(self.processPropertyValueArgs)\r\n                                .then(function(response) {\r\n                                    self.deferredActions.resolve(response);\r\n                                    self.actions = response;\r\n\r\n                                    if (self.actions.length > 0) {\r\n                                        $(\"[data-element='actions-add-btn']\", control).show();\r\n                                    }\r\n                                    else{\r\n                                        $(\"[data-element='actions-add-btn']\", control).hide();\r\n                                    }\r\n                                    return html;\r\n                                });\r\n                        }\r\n                        else{\r\n                            return html;    \r\n                        }\r\n                    });\r\n                    \r\n            }).done(function(html) {\r\n                $(\"[data-element='template-container']\", control).append(html);\r\n                self.configureActionsHandlers();\r\n                self.configureTemplateHandlers();\r\n            }).always(function() {\r\n                self.endLoading();\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Add binding to html elements\r\n     */\r\n    configureActionsHandlers: function() {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var entityTemplateControls = $(\".action-launcher-control\", control);\r\n\r\n        /**\r\n         * Binding for click action on buttons\r\n         */\r\n        entityTemplateControls.on(\"click\", function() {\r\n            var item = self.actions[parseInt($(this).data(\"index\"))];\r\n            var action = {\r\n                guidProcess: item[0],\r\n                guidAction: item[4],\r\n                displayName: item[1],\r\n                actionType: item[3],\r\n                xpathContext: (typeof item[5] !== \"undefined\" && item[5] === \"true\"),\r\n                xpathActions: self.properties.xpathActions || \"\"\r\n            };\r\n\r\n            if (action.actionType === \"Form\") {\r\n                action.xpathContext = undefined;\r\n                action.contextType = \"entitytemplate\";\r\n                action.guidEntity = self.properties.guidEntity;\r\n            }\r\n\r\n            self.processAction(action);\r\n        });\r\n\r\n        var actions = [];\r\n        for (var i = 0, len = self.actions.length; i < len; i++) {\r\n            actions.push({\r\n                guid: self.actions[i][0],\r\n                displayName: self.actions[i][1]\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Binding for click action sheet\r\n         */\r\n        $(\"[data-element='actions-add-btn']\", control).actionSheet({\r\n            actions: actions,\r\n            actionClicked: function(action) {\r\n                var item = self.actions.find(function(e) {\r\n                    return e[0] == action.guid;\r\n                });\r\n                self.processAction({\r\n                    guidProcess: item[0],\r\n                    guidAction: item[4],\r\n                    displayName: item[1],\r\n                    actionType: item[3],\r\n                    xpathContext: (typeof item[5] !== \"undefined\" && item[5] === \"true\")\r\n                });\r\n            }\r\n        });\r\n\r\n    },\r\n\r\n    configureTemplateHandlers: function() {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        /**\r\n         * Catch the event from the layout link\r\n         */\r\n        self.engine.subscribe(\"onLoadDataNavigation\", function(ev, params) {\r\n            params.filters = [];\r\n            params.calculateFilters = params.calculateFilters || true;\r\n\r\n            self.triggerGlobalHandler(\"dataNavigation\", params);\r\n        });\r\n\r\n        $(\".bz-template-more-or-less\", control).bind(\"click\", function(){\r\n            $(\".bz-template\", control).toggleClass(\"bz-template--collapsed\");\r\n        });\r\n    }\r\n});","/**\r\n * Device definition of Polymorphic launcher\r\n *\r\n * @author: Ricardo Perez\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.polymorphicLauncher\", bizagi.rendering.polymorphicLauncher.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.polymorphicLauncher.extend(\"bizagi.rendering.tablet.polymorphicLauncher\", {}, {\r\n    /**\r\n        * Render a specific implementation for Tablet device\r\n        */\r\n    postRender: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n        var html, template;\r\n\r\n        if (mode == \"design\" || !self.properties.surrogatedKey) {\r\n            return \"\";\r\n        }\r\n\r\n        self.configureQueueVisibility();\r\n\r\n\t\t/**\r\n\t\t * Define params to get list of actions\r\n\t\t */\r\n        return $.when(self.dataService.multiaction().getPolymorphicActions(self.processPropertyValueArgs)).done(function (response) {\r\n            // Convert default response to tree data structure\r\n            response = self.dataService.serializePolymorphicActions(response);\r\n            self.totalActions = bizagi.clone(response);\r\n            var actions = bizagi.clone(response);\r\n            self.lessActions = bizagi.clone(actions);\r\n\r\n            // NOTE: Code extracted\r\n            var templateArguments = {\r\n                actions: actions,\r\n                allowSearch: properties.allowSearch,\r\n                treeActionsList: self.getTreeItems(actions)\r\n            };\r\n            template = self.renderFactory.getTemplate(\"render-polymorphicLauncher-vertical-tree\");\r\n\r\n            var control = self.getControl();\r\n            var actionsContainer = $(\".bz-polymorphic-launcher__constructors\", control);\r\n            actionsContainer.append($.fasttmpl(template, templateArguments));\r\n            self.bindHandlers();\r\n        });\r\n    },\r\n\r\n\t/**\r\n\t * Get rendered html of each node of constructors\r\n\t * @param actions\r\n\t * @param level\r\n\t * @return {string}\r\n\t */\r\n    getTreeItems: function (actions, level) {\r\n        var self = this;\r\n        var item = \"<ul>\";\r\n        var templateTreeItem = self.renderFactory.getTemplate(\"render-polymorphicLauncher-vertical-tree-item\");\r\n        actions = actions || {};\r\n        level = level || 1;\r\n\r\n        $.each(actions, function (key, value) {\r\n            item += $.fasttmpl(templateTreeItem, value);\r\n\r\n            if (value.children) {\r\n                item += self.getTreeItems(value.children, level + 1);\r\n            }\r\n        });\r\n        item += \"</ul>\";\r\n        return item;\r\n    },\r\n\r\n\t/**\r\n\t * Add binding to html elements\r\n\t */\r\n    bindHandlers: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var actionLauncherControls = $(\".bz-polymorphic-launcher__constructors li span\", control);\r\n\r\n        //Binding for click action on buttons\r\n        actionLauncherControls.on(\"click\", function () {\r\n            var $targetData = $(this).parent();\r\n            var action = {\r\n                guidEntity: $targetData.data(\"guidentity\"),\r\n                guidObject: $targetData.data(\"guidobject\"),\r\n                guidConstructor: $targetData.data(\"guidconstructor\"),\r\n                displayName: $targetData.data(\"display-name\"),\r\n                actionType: $targetData.data(\"action-type\"),\r\n                xpathContext: $targetData.data(\"xpathcontext\")\r\n            };\r\n            self.onActionClicked(action);\r\n        });\r\n        //Catch the typed text in the search field and filter the action list\r\n        $.expr[\":\"].FilterAction = function (entity, i, array) {\r\n            var search = array[3];\r\n            if (!search) {\r\n                return false;\r\n            }\r\n            return new RegExp(search, \"i\").test($(entity).text());\r\n        };\r\n        $(\"input[data-action=search]\", control).keyup(function () {\r\n            var search = $(this).val();\r\n            $(\".bz-polymorphic-launcher__constructors li\", control).show();\r\n            if (search) {\r\n                $(\".bz-polymorphic-launcher__constructors li\", control).not(\":FilterAction(\" + search + \")\").hide();\r\n            }\r\n        });\r\n\r\n    },\r\n\t/**\r\n\t * Execute an Action\r\n\t * @param action\r\n\t */\r\n    onActionClicked: function (action) {\r\n        var self = this;\r\n\r\n        $.when(self.actionManager(action)).done(function (act) {\r\n            self.executeAction(act);\r\n        });\r\n    },\r\n\t/**\r\n\t * Show a message when action has been executed\r\n\t * @param status\r\n\t * @param action\r\n\t */\r\n    notifyExecution: function (status, action) {\r\n        var self = this;\r\n        if (status == \"success\") {\r\n            $.notifier.add({\r\n                class_name: \"success\",\r\n                title: action.displayName,\r\n                text: self.getResource(\"render-action-launcher-success-excecution\").replace('%s', action.displayName),\r\n                sticky: false\r\n            });\r\n\r\n        } else {\r\n            $.notifier.add({\r\n                class_name: \"error\",\r\n                title: action.displayName,\r\n                text: self.getResource(\"render-action-launcher-failed-excecution\").replace('%s', action.displayName),\r\n                sticky: false\r\n            });\r\n        }\r\n    },\r\n\t/**\r\n\t * Show a dialog with a form\r\n\t * @param action\r\n\t * @return {*}\r\n\t */\r\n    processActionForm: function (action) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var additionalXpaths = self.properties.additionalXpath.join(\",\");\r\n        var def = new $.Deferred();\r\n        var xpathContext = action.xpathContext || \"\";\r\n        var formParams = form.getParams();\r\n\r\n        var recordXpath = self.properties.recordXpath;\r\n\r\n        // Show dialog with new form after that\r\n        var slideForm = new bizagi.rendering.tablet.slide.form(self.dataService, self.renderFactory, {\r\n            title: properties.detailLabel || bizagi.localization.getResource(\"render-grid-details-form\"),\r\n            navigation: formParams.navigation,\r\n            showSaveButton: true,\r\n            cancelButtonLabel: bizagi.localization.getResource(\"render-form-dialog-box-close\"),\r\n            onSave: function (data) {\r\n                var pageCache = data.idPageCache;\r\n                data.idPageCache = null;\r\n                // Submit the form\r\n                return self.dataService.multiaction().submitData({\r\n                    action: \"SAVE\",\r\n                    data: data,\r\n                    xpathContext: slideForm.form.properties.xpathContext, //self.properties.xpathContext,\r\n                    idPageCache: pageCache,\r\n                    isOfflineForm: false,\r\n                    isActionStartForm: true\r\n                }).done(function (savedData) {\r\n                    if (!action.editMode && self.countSameActions(action) == 0) {\r\n                        action.idStartScope = savedData.IdScope;\r\n                    }\r\n                    def.resolve(savedData.IdScope);\r\n                });\r\n            },\r\n            onCancel: function (data) {\r\n\r\n            }\r\n        });\r\n\r\n        slideForm.render({\r\n            \"idForm\": action.guidObject,\r\n            \"contextType\": \"entity\",\r\n            \"guidEntity\": action.guidEntity,\r\n            \"idCase\": self.properties.caseId,\r\n            \"idWorkitem\": self.typeForm != \"SummaryForm\" ? formParams.idWorkitem : undefined,\r\n            \"additionalXpaths\": additionalXpaths,\r\n            //\"xpathContext\": xpathContext,\r\n            \"idStartScope\": action.idStartScope,\r\n            \"surrogateKey\": self.properties.surrogatedKey,\r\n            \"recordXpath\": recordXpath\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n\t/**\r\n\t * Process a start form\r\n\t * @param args\r\n\t * @return {*}\r\n\t */\r\n    processStartForm: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var def = new $.Deferred();\r\n        var formParams = form.getParams();\r\n        args = args || {};\r\n\r\n\r\n        var slideForm = new bizagi.rendering.tablet.startForm(self.dataService, self.renderFactory, {\r\n            //showSaveButton: properties.editable,\r\n            maximized: properties.maximized,\r\n            title: args.title || \"\",\r\n            navigation: formParams.navigation,\r\n            saveButtonLabel: (self.typeForm == \"GlobalForm\" || this.typeForm == \"SummaryForm\") ? bizagi.localization.getResource(\"render-form-button-create\") : bizagi.localization.getResource(\"render-form-dialog-box-save\"),\r\n            onSave: function (data) {\r\n                form.startLoading();\r\n\r\n                // Submit the form\r\n                return self.dataService.multiaction().submitData({\r\n                    action: \"SAVE\",\r\n                    data: data,\r\n                    xpathContext: self.properties.xpathContext,\r\n                    idPageCache: data.idPageCache,\r\n                    isOfflineForm: false,\r\n                    isActionStartForm: true\r\n                }).done(function (savedData) {\r\n                    form.endLoading();\r\n                    def.resolve(savedData.IdScope);\r\n                });\r\n            }\r\n        });\r\n\r\n        slideForm.render({\r\n            guidprocess: args.guidprocess,\r\n            idStartScope: args.idStartScope,\r\n            idCase: self.properties.caseId,\r\n            idWorkitem: self.typeForm != \"SummaryForm\" ? formParams.idWorkitem : undefined,\r\n            additionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n            surrogatedKey: self.properties.surrogatedKey,\r\n            recordXpath: args.recordXpath,\r\n            mappingstakeholders: true\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\t/**\r\n\t * Execute and action if a form is global form or summary, or send to queue\r\n\t * @param action\r\n\t */\r\n    executeAction: function (action) {\r\n        var self = this;\r\n\r\n        if (self.typeForm == \"GlobalForm\" || self.typeForm == \"SummaryForm\") {\r\n            var message = bizagi.localization.getResource(\"render-action-launcher-immediatly-action-confirmation\");\r\n\r\n            $.when(bizagi.showConfirmationBox(message, \"Bizagi\", \"info\"))\r\n                .done(function () {\r\n                    self.executeActionImmediately(action);\r\n                });\r\n        } else {\r\n            self.addActionToQueue(action);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Show confirmation dialog\r\n     * @param action\r\n     */\r\n    showConfirmationDialog: function (action) {\r\n        var self = this;\r\n        var message = bizagi.localization.getResource(\"render-action-launcher-single-action-confirmation\");\r\n\r\n        $.when(bizagi.showConfirmationBox(message, \"Bizagi\", \"info\"))\r\n            .done(function () {\r\n                self.setValue([]);\r\n\r\n                $.when(self.actionManager(action))\r\n                    .done(function (act) {\r\n                        self.executeAction(act);\r\n                    });\r\n            });\r\n    },\r\n\r\n\t/**\r\n\t * Render actual value of control and set events\r\n\t * @param data\r\n\t */\r\n    setDisplayValue: function (data) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var actionsToExecuteContainer = $(\".bz-polymorphic-launcher-constructors-to-execute-container\", control);\r\n        var template = self.renderFactory.getTemplate(\"render-polymorphicLauncher-actions-to-execute\");\r\n        self.configureQueueVisibility();\r\n\r\n        $.when($.fasttmpl(template, { actions: data })).done(function (html) {\r\n            actionsToExecuteContainer.empty();\r\n            actionsToExecuteContainer.append(html);\r\n            var removeActionSelector = $(\".bz-pill .bz-btn-icn\", actionsToExecuteContainer);\r\n            var openActionSelector = $(\".bz-pill__label\", actionsToExecuteContainer);\r\n            removeActionSelector.on(\"click\", function () {\r\n                var index = $(this).parent().data(\"index\");\r\n                self.removeActionToQueue(index);\r\n            });\r\n            openActionSelector.bind(\"click\", function () {\r\n                var $target = $(this).parent();\r\n                var type = $target.data(\"actiontype\");\r\n                var guidprocess = $target.data(\"guidprocess\");\r\n                var idStartScope = $target.data(\"idstartscope\");\r\n                var title = $target.data(\"title\");\r\n                var xpathContext = $target.data(\"xpathcontext\");\r\n                var idEntity = $target.data(\"identity\") || \"\";\r\n                var guidEntity = $target.data(\"guidentity\");\r\n                var recordXpath = xpathContext || self.properties.xpathContext;\r\n\r\n                switch (type) {\r\n                    case \"Process\":\r\n                        if (idStartScope) {\r\n                            self.processStartForm({\r\n                                guidprocess: guidprocess,\r\n                                idStartScope: idStartScope,\r\n                                title: title,\r\n                                xpathContext: xpathContext,\r\n                                recordXpath: recordXpath\r\n                            });\r\n                        }\r\n                        break;\r\n                    case \"Form\":\r\n                        var action = {\r\n                            guidProcess: guidprocess,\r\n                            idStartScope: idStartScope,\r\n                            editMode: true,\r\n                            xpathContext: xpathContext,\r\n                            idEntity: idEntity,\r\n                            guidEntity: guidEntity,\r\n                            guidObject: guidprocess\r\n                        };\r\n\r\n                        self.processActionForm(action);\r\n                        break;\r\n                    case \"Rule\":\r\n                        // Rules dont have forms or something like that\r\n                        break;\r\n                }\r\n            });\r\n        });\r\n    },\r\n\t/**\r\n\t * Show container if it has actions\r\n\t */\r\n    configureQueueVisibility: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var actionsToExecuteContainer = $(\".bz-polymorphic-launcher-constructors-to-execute-container\", control);\r\n        var actionsToExecuteTitle = $(\".bz-polymorphic-launcher__title\", control);\r\n        if (self.getValue().length > 0) {\r\n            actionsToExecuteContainer.show();\r\n            actionsToExecuteTitle.show();\r\n        } else {\r\n            actionsToExecuteContainer.hide();\r\n            actionsToExecuteTitle.hide();\r\n        }\r\n    }\r\n});","/*  \r\n *   Name: BizAgi Tablet Render list Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the list render class to adjust to desktop devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.checkList\", bizagi.rendering.checkList.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.checkList.extend(\"bizagi.rendering.tablet.checkList\", {}, {\r\n/**\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();        \r\n        this.properties.unique = Math.ceil(Math.random() * 1000);        \r\n        this.properties.required = true;\r\n    },\r\n\r\n    /**\r\n     *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        // Call base\r\n        self._super();\r\n        $(\"input[type=checkbox]\", self.getControl()).bind(\"change\", function () {\r\n            var itemId = $(this).data(\"item-guid\");\r\n            self.onCheckListGroupChange(itemId, this.checked);\r\n        });\r\n    },\r\n\r\n    onCheckListGroupChange: function (itemId, checked) {\r\n        var self = this;\r\n        var item;\r\n        var items = $.grep(self.properties.items, function (element, index) {\r\n            return element.guid === itemId;\r\n        });\r\n        if (items && items.length > 0) {\r\n            item = items[0];\r\n        }\r\n        item.checked = checked;\r\n    },\r\n\r\n    /**\r\n     *   Sets the value in the rendered control\r\n     */\r\n    clearDisplayValue: function () {\r\n        $(\"input[type=checkbox]\", this.getControl()).removeAttr(\"checked\");\r\n    },\r\n\r\n    setDisplayValue : function (value){\r\n        var self = this;\r\n    }\r\n});\r\n","/*  \r\n *   Name: BizAgi Desktop Render list Extension\r\n *   Author: Iván Ricardo Taimal Narváez\r\n *   Comments:\r\n *   -   This script will redefine the list render class to adjust to desktop devices\r\n */\r\n\r\n// Extends from base list\r\nbizagi.rendering.tablet.checkList.extend(\"bizagi.rendering.tablet.activityCheckList\", {}, {\r\n   /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n        var goal = (this.properties.activityDescription && this.properties.activityDescription !== \"\") \r\n        ?  bizagi.localization.getResource(\"workportal-project-plan-activity-goal\") + \": \" + this.properties.activityDescription : \"\";\r\n        this.properties.displayName = (goal !== \"\") ? goal : bizagi.localization.getResource(\"workportal-project-plan-activity-work-title\");\r\n        this.properties.displayType = \"vertical\";\r\n    },\r\n    /*\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n        // Call base\r\n        this._super();\r\n\r\n        self.newItemName = $(\".bz-checkList__input\", $control);\r\n        self.addEditButton = $(\".add-edit-item-button-checklist\", $control);\r\n        self.cancelEditButton = $(\".cancel-edit-item-button-checklist\", $control);\r\n\r\n        self.additionalElements();\r\n        self.notifyLoadItems();        \r\n    },\r\n\r\n    notifyLoadItems: function(){\r\n        var self = this;\r\n        setTimeout(function(){\r\n            var resolvedItems = self.properties.items.filter(function(i){\r\n                return i.resolved\r\n            }).length;\r\n            bizagi.util.setItemLocalStorage(\"newChanges\", JSON.stringify({\r\n                'hasChanges': true,\r\n                'idActivity': self.properties.idActivity,\r\n                'itemsResolved': resolvedItems,\r\n                'items': self.properties.items,\r\n                'progress': self.properties.activityWork\r\n            }));\r\n\r\n            bizagi.webpart.publish(\"onLoadDataItemsFromFormActivityPlan\", { \"items\": self.properties.items, \"activityWork\": self.properties.activityWork });\r\n        }, 100);\r\n    },\r\n\r\n    additionalElements: function () {\r\n        var self = this;\r\n\r\n        if (self.addEditButton && self.addEditButton.length > 0) {\r\n            self.addEditButton.hide();\r\n        }\r\n        if (self.cancelEditButton && self.cancelEditButton.length > 0) {\r\n            self.cancelEditButton.hide();\r\n        }\r\n        //control.parent().addClass(\"render-activity-check\");\r\n    },\r\n\r\n    configureHandlers: function() {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        this._super();\r\n        $(\"[data-action=add]\", control).unbind(\"click\").click(function() {\r\n            var itemSelected = $(\".bz-checkList__item.bz-checkList__item--selected\", self.control);\r\n            if (itemSelected.length <= 0) {\r\n                self.prepareNewItem();\r\n            } else {\r\n                $(\".bz-checkList__input\", itemSelected).focus();\r\n            }\r\n        });\r\n\r\n        $(\"[data-action=delete]\", self.control).bind(\"click\", function() {\r\n            var that = this;\r\n            var message = bizagi.localization.getResource(\"workportal-widget-reports-confirm\");\r\n            var contentHolder = $(this).closest(\".bz-checkList__item\");\r\n\r\n            contentHolder.addClass(\"ui-bizagi-to-remove\");\r\n           \r\n            $.when(bizagi.showConfirmationBox(message, \"Bizagi\", \"info\"))\r\n                .done(function() {\r\n\r\n                    var itemId = $(that).closest(\".bz-checkList__item\").data(\"item-guid\");\r\n\r\n                    self.deleteItem(itemId);\r\n                }).fail(function() {\r\n                    contentHolder.removeClass(\"ui-bizagi-to-remove\");\r\n                });\r\n        });\r\n\r\n        $(\"label[data-action=edit-item]\", self.control).bind(\"click\", function() {\r\n            var element = $(this).closest(\".bz-checkList__item\");\r\n            var itemId = element.data(\"item-guid\");\r\n            var itemPosition = element.data(\"item-position\");\r\n\r\n            self.selectItem(itemId, itemPosition);\r\n        });\r\n    },\r\n\r\n    selectItem: function(itemId) {\r\n        var self = this;\r\n\r\n        for (var i = 0, length = self.properties.items.length; i < length; i++) {\r\n            if (self.properties.items[i].guid === itemId) {\r\n                self.properties.items[i].selected = true;\r\n            } else {\r\n                self.properties.items[i].selected = false;\r\n            }\r\n        }\r\n\r\n        self.repaintControl();\r\n\r\n        var itemSelected = $(\".bz-checkList__item.bz-checkList__item--selected\", self.getControl());\r\n        var itemSelectedName = $(\".bz-checkList__input\", itemSelected);\r\n        var itemContent = itemSelectedName.val();\r\n\r\n        itemSelectedName.focus();\r\n        itemSelectedName[0].setSelectionRange(itemContent.length, itemContent.length);\r\n\r\n        self.addSelectedHandlers();\r\n    },\r\n\r\n    deleteItem: function(itemId) {\r\n        var self = this;\r\n\r\n        for (var i = 0, length = self.properties.items.length; i < length; i++) {\r\n            if (self.properties.items[i].guid === itemId) {\r\n                self.properties.items.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        self.setValue(self.properties.items);\r\n        self.repaintControl();\r\n        self.addSelectedHandlers();\r\n    },\r\n\r\n    prepareNewItem: function () {\r\n        var self = this;\r\n        var newItem = {\r\n            guid: Math.guid(),\r\n            resolved: false,\r\n            name: \"\",\r\n            selected: true\r\n        };\r\n\r\n        self.properties.items.push(newItem);\r\n        self.repaintControl();\r\n        self.newItemName.focus();\r\n\r\n        self.newItemName.blur(function () {\r\n             var itemSelected = $(\".bz-checkList__item.bz-checkList__item--selected\", self.control);\r\n             var itemSelectedName = $(\".bz-checkList__input\", itemSelected);\r\n             var valueInput = itemSelectedName.val();\r\n\r\n             if(valueInput === \"\" && self.properties.items && self.properties.items.length >= 1\r\n                    && self.properties.items.slice(-1)[0].name === \"\"){\r\n                self.properties.items.pop();\r\n             }\r\n         });\r\n        self.addSelectedHandlers();\r\n        self.newItemName.keypress(function (event) {\r\n            if (event.which == 13) {\r\n                event.preventDefault();\r\n                self.addItem();\r\n                self.prepareNewItem();\r\n            }\r\n        });\r\n    },\r\n\r\n    addSelectedHandlers: function () {\r\n        var self = this;\r\n        var itemSelected = $(\".bz-checkList__item.bz-checkList__item--selected\", self.control);\r\n        var itemSelectedName = $(\".bz-checkList__input\", itemSelected);\r\n        itemSelectedName.focus();\r\n        $(\"[data-action=accept-edit]\", itemSelected).bind(\"click\", function () {\r\n            var newItemName = itemSelectedName.val();\r\n            if (newItemName && newItemName !== \"\") {\r\n                self.addItem();\r\n            }\r\n        });\r\n\r\n        \r\n        $(\"[data-action=cancel-edit]\", itemSelected).bind(\"click\", function (e) {\r\n            var newItemName = itemSelectedName.val();\r\n            var element = $(this).closest(\".bz-checkList__item\");\r\n            var itemPosition = element.data(\"item-position\");\r\n            var guidItem = element.data(\"item-guid\");\r\n\r\n            if (newItemName && newItemName !== \"\" && self.properties.items[itemPosition].name !== \"\") {\r\n                self.properties.items[itemPosition].selected = false;\r\n            }\r\n            if (newItemName === \"\" || self.properties.items[itemPosition].name === \"\") {\r\n                self.deleteItem(guidItem);\r\n            }\r\n            //self.addButton.show();\r\n            self.repaintControl();\r\n        });\r\n    },\r\n\r\n    addItem: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        var itemSelected = $(\".bz-checkList__item.bz-checkList__item--selected\", $control);\r\n        var itemSelectedName = $(\".bz-checkList__input\", itemSelected);\r\n        var newItemName = itemSelectedName.val();\r\n\r\n        $.each(self.properties.items, function (index, item) {\r\n            if (item.selected) {\r\n                item.name = newItemName;\r\n                item.selected = false;\r\n            }\r\n        });\r\n        self.updateOriginalValue();\r\n        self.setValue(self.properties.items);\r\n        self.repaintControl();\r\n    },\r\n\r\n    repaintControl: function () {\r\n        var self = this;\r\n        var checkListHtml = self.renderControl();\r\n        $(\"[data-component=checkList]\", self.control).replaceWith(checkListHtml);\r\n        self.postRender();\r\n        self.configureHandlers();\r\n    },\r\n\r\n    onCheckListGroupChange: function (itemId, checked) {\r\n        var self = this;\r\n        var item;\r\n        var items = $.grep(self.properties.items, function (element, index) {\r\n            return element.guid === itemId;\r\n        });\r\n        if (items && items.length > 0) {\r\n            item = items[0];\r\n        }\r\n        item.resolved = checked;\r\n        self.setValue(self.properties.items);\r\n        self.refreshValue(self.properties.items);\r\n    },\r\n\r\n    refreshValue: function(items){\r\n        var self = this,\r\n            length = items.length,\r\n            completed = 0;\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            if (items[i].resolved) {\r\n                completed += 1;\r\n            }\r\n        }\r\n\r\n        if (length > 0) {\r\n            self.properties.activityWork = Math.floor(100 * completed / length);\r\n        }\r\n        else {\r\n            self.properties.activityWork = 100;\r\n        }\r\n\r\n        self.notifyLoadItems();\r\n    },\r\n\r\n    getValue: function () {\r\n        var self = this;\r\n        return self.value || [];\r\n    },\r\n\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var originalValue = JSON.stringify(self.properties.originalValue);\r\n        var newValue = JSON.stringify(self.value);\r\n        return originalValue !== newValue;\r\n    },\r\n\r\n    /*\r\n     *   Updates original value for some comparisons\r\n     */\r\n    updateOriginalValue: function () {\r\n        var self = this;\r\n        self.properties.originalValue = bizagi.clone(self.value);\r\n    },\r\n\r\n    /*\r\n     *   Add the render data to the given collection in order to send data to the server\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n        var idActivity = self.properties.idActivity;\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            if (!bizagi.util.isEmpty(xpath) && !bizagi.util.isEmpty(idActivity)) {\r\n                if (Array.isArray(value)) {\r\n                    renderValues[properties.xpath] = {\r\n                        idActivity: idActivity,\r\n                        items: value\r\n                    };\r\n                } else if (value === \"\") {\r\n                    renderValues[properties.xpath] = \"\";\r\n                }\r\n            }\r\n        }else{\r\n            bizagi.util.setItemLocalStorage(\"newChanges\", JSON.stringify({\r\n                'hasChanges': false\r\n            }));\r\n        }\r\n    },\r\n\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties,\r\n            message;\r\n        var items = self.getValue();\r\n        message = self.getResource(\"render-activity-check-list-validation\");\r\n        for (var i = 0; i < items.length; i+=1) {\r\n            var item = items[i];\r\n            if (!item.resolved) {\r\n                invalidElements.push({\r\n                    xpath: properties.xpath,\r\n                    message: message\r\n                });\r\n                break;\r\n            }\r\n        }\r\n    }\r\n});\r\n","/*  \r\n *   Name: Bizagi Tablet Range Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the range render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render Tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.range\", bizagi.rendering.range.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.range.extend(\"bizagi.rendering.tablet.range\", {}, {\r\n\r\n    /**\r\n     * Render a specific implementation for tablet device\r\n     */\r\n    postRender: function() {        \r\n        var properties = this.properties;\r\n    },\r\n    /**\r\n     * Render actual value of control and set events\r\n     * @param data\r\n     */\r\n    setDisplayValue: function(data) {\r\n        var control = this.getControl();\r\n    }\r\n\r\n});","/*  \r\n *   Name: Bizagi Tablet Range Date Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the range date render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from range tablet base\r\nbizagi.rendering.tablet.range.extend(\"bizagi.rendering.tablet.rangeDate\", bizagi.rendering.rangeDate.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.rangeDate.extend(\"bizagi.rendering.tablet.rangeDate\", {}, {\r\n\r\n    /**\r\n     * Render actual value of control and set events\r\n     * @param data\r\n     */\r\n    setDisplayValue: function (data) {        \r\n        var control = this.getControl();\r\n    }\r\n});","/*  \r\n *   Name: Bizagi Tablet Range Date Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the range date render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from range tablet base\r\nbizagi.rendering.tablet.range.extend(\"bizagi.rendering.tablet.rangeMoney\", bizagi.rendering.rangeMoney.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.rangeMoney.extend(\"bizagi.rendering.tablet.rangeMoney\", {}, {\r\n\r\n\t/**\r\n\t * Render a specific implementation for Desktop device\r\n\t */\r\n\tpostRender: function() {\r\n\t\tvar minControl = new bizagi.rendering.money(this.getRenderProperties(\"min\"));\r\n\t\tvar maxControl = new bizagi.rendering.money(this.getRenderProperties(\"max\"));\r\n\r\n\t    this.setRanageControls(minControl, maxControl);\r\n\t},\r\n\r\n\tgetRenderProperties: function (typeRangeControl){\r\n\t\tvar self = this;\r\n\t\tvar form = self.getFormContainer();\r\n\t\tvar properties = self.properties;\r\n\r\n\t\tvar renderProperties = {\r\n\t\t\tdata: {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\t\"id\": properties.id,\r\n\t\t\t\t\t\"xpath\": properties.xpath\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmode: \"execute\",\r\n\t\t\tparent: form,\r\n\t\t\trenderFactory: self.renderFactory,\r\n\t\t\tresources: bizagi.localization,\r\n\t\t\tdataService: self.dataService\r\n\t\t};\r\n\r\n\t\tif (typeRangeControl === \"min\"){\r\n\t\t\trenderProperties.data.properties.displayName = \"From\";\r\n\t\t}else{\r\n\t\t\trenderProperties.data.properties.displayName = \"To\";\r\n\t\t}\r\n\r\n\t\treturn renderProperties;\r\n\t},\r\n\r\n\t/**\r\n\t * Render actual value of control and set events\r\n\t * @param data\r\n\t */\r\n\tsetDisplayValue: function(data) {\r\n\t\tvar self = this;\r\n\t\tvar control = self.getControl();\r\n\t}\r\n});","/*  \r\n *   Name: Bizagi Tablet Range Date Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the range date render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from range tablet base\r\nbizagi.rendering.tablet.range.extend(\"bizagi.rendering.tablet.rangeNumber\", bizagi.rendering.rangeNumber.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.rangeNumber.extend(\"bizagi.rendering.tablet.rangeNumber\", {}, {\r\n\r\n\t/**\r\n\t * Render a specific implementation for Desktop device\r\n\t */\r\n\tpostRender: function() {\r\n\t\tvar self = this;\r\n\r\n\t\tvar minControl = new bizagi.rendering.number(self.getRenderProperties(\"min\"));\r\n\t\tvar maxControl = new bizagi.rendering.number(self.getRenderProperties(\"max\"));\r\n\r\n\t\tself.setRanageControls(minControl, maxControl);\r\n\t},\r\n\r\n\tgetRenderProperties: function (typeRangeControl){\r\n\t\tvar self = this;\r\n\t\tvar form = self.getFormContainer();\r\n\t\tvar properties = self.properties;\r\n\r\n\t\tvar renderProperties = {\r\n\t\t\tdata: {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\t\"id\": properties.id,\r\n\t\t\t\t\t\"xpath\": properties.xpath\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmode: \"execute\",\r\n\t\t\tparent: form,\r\n\t\t\trenderFactory: self.renderFactory,\r\n\t\t\tresources: bizagi.localization,\r\n\t\t\tdataService: self.dataService\r\n\t\t};\r\n\r\n\t\tif (typeRangeControl === \"min\"){\r\n\t\t\trenderProperties.data.properties.displayName = \"From\";\r\n\t\t}else{\r\n\t\t\trenderProperties.data.properties.displayName = \"To\";\r\n\t\t}\r\n\r\n\t\treturn renderProperties;\r\n\t},\r\n\r\n\t/**\r\n\t * Render actual value of control and set events\r\n\t * @param data\r\n\t */\r\n\tsetDisplayValue: function(data) {\r\n\t\tvar self = this;\r\n\t\tvar control = self.getControl();\r\n\t}\r\n});","/*\r\n*   Name: BizAgi Tablet Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the column decorator class to adjust to tablet devices\r\n*/\r\n\r\n// Extends itself\r\nbizagi.rendering.columns.column.extend(\"bizagi.rendering.tablet.columns.column\", {}, {\r\n\r\n    /*\r\n    *   Apply custom overrides to each decorated instance\r\n    */\r\n    applyOverrides: function (decorated) {\r\n        // Hacks the getControl method in the decorated render to add features\r\n        if (decorated && decorated.getControl) {\r\n            this.originalGetControl = decorated.getControl;\r\n            decorated.getControl = this.getControl;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Template method to get the control element\r\n    *   This code runs under the decorated element context\r\n    */\r\n    getControl: function () {\r\n        var self = this;\r\n        var result = this._super();\r\n\r\n        if (!result || result.length == 0) {\r\n            result = $(self.element || self.observableElement);\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value, tableCell) {\r\n        var result = this._super(surrogateKey, value, tableCell);\r\n        var decorated = this.getDecorated(surrogateKey);\r\n        if (decorated.element) {\r\n            // Clean all display types\r\n            decorated.element.removeClass(\"ui-bizagi-render-display-normal ui-bizagi-render-display-vertical ui-bizagi-render-display-reversed\")\r\n                          .removeClass(\"ui-bizagi-render-display-vertical-reversed ui-bizagi-render-display-label ui-bizagi-render-display-value\");\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Returns the cell html to be inserted in the table\r\n    */\r\n   /* renderReadOnly: function (surrogateKey, value, tableCell) {\r\n        var self = this;\r\n        var decorated = this.getDecorated(surrogateKey);\r\n        var cell = this._super(surrogateKey, value, tableCell);\r\n\r\n        // Just draw render if the cell layout has been filled\r\n        if (cell && cell.length > 0) {\r\n\r\n            // Add display value\r\n            $(\".ui-bizagi-cell-readonly\", cell).html(decorated.getDisplayValue());\r\n\r\n            // Apply styles to cell\r\n            self.applyColumnStyles(cell);\r\n\r\n            // Return just content\r\n            return cell;\r\n        }\r\n\r\n        return \"\";\r\n    },*/\r\n\r\n    postRenderReadOnly: function (surrogateKey, cell) {\r\n\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var editable = self.properties.editable;\r\n        decorated.properties.editable = false;\r\n\r\n        if (decorated.grid == undefined) {\r\n            decorated.grid = self.grid;\r\n        }\r\n        if (self.properties.singleInstance) {\r\n            decorated.element = cell;\r\n        }\r\n        decorated.postRenderElement(cell);\r\n        decorated.properties.editable = editable;\r\n\r\n        /*var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Call base\r\n\r\n        // var decorated = this.getDecorated(surrogateKey);\r\n        this._super(key, cell);\r\n\r\n        // Just draw render if the cell layout has been filled\r\n        if (cell && cell.length > 0) {\r\n        var cellIcon = $(\".ui-bizagi-cell-icon\", cell);\r\n        if (!properties.editable) cellIcon.detach();\r\n\r\n        // Apply styles to cell\r\n        self.applyColumnStyles(cell);\r\n\r\n        if (properties.align == \"left\") {\r\n        cellIcon.addClass(\"ui-bizagi-cell-icon-right\");\r\n        }\r\n        }*/\r\n    },\r\n\r\n    /*\r\n    *   Apply column styles to a specified element\r\n    */\r\n    applyColumnStyles: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        element = $(element);\r\n        // Set cell alignment\r\n        element.css(\"-webkit-box-pack\", properties.align);\r\n\r\n        // Set cell back color\r\n        if (properties.textFormat.background) {\r\n            element.css(\"background-color\", properties.textFormat.background);\r\n            element.css(\"background-image\", \"none\");\r\n        }\r\n    },\r\n\r\n    isValueValid: function(surrogateKey, value, messages, propertyOverrides){\r\n        var isValid = this._super(surrogateKey, value, messages, propertyOverrides);\r\n        var decorated = this.getDecorated(surrogateKey);\r\n        if (!isValid) \r\n            decorated.element.addClass(\"bz-form-item--error\");\r\n        else \r\n            decorated.element.removeClass(\"bz-form-item--error\");\r\n        return isValid;\r\n    },\r\n});","/*\r\n*   Name: BizAgi Tablet Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the column decorator class to adjust to tablet devices\r\n*/\r\n\r\n\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.combo\", {}, bizagi.rendering.columns.combo.prototype );\r\n// Extends itself\r\nbizagi.rendering.tablet.columns.combo.extend(\"bizagi.rendering.tablet.columns.combo\", {}, {\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function(surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        // Check is offline form\t    \r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        if (decorated === null) {\r\n            return;\r\n        }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey == \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if(isOfflineForm && (typeof (value) == \"number\" || typeof (value) == \"string\")){\r\n            var newValue =  typeof (self.properties.data) == \"object\" ? self.properties.data.find(function(item){ return item.id == value }) : value;\r\n\r\n            self._super(surrogateKey, newValue);\r\n            decorated.selectedValue = value;\r\n        } else if (self.properties.type == \"columnRadio\") {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value;\r\n        } else if (value && value.length > 0) {\r\n\r\n            // Create the value property\r\n            var newValue = {\r\n                id: value[0][0],\r\n                value: value[0].length > 2 ? $.grep(value[0], function (item, i) { return i != 0; }) : value[0][1]\r\n            };\r\n            // Call base\r\n            self._super(surrogateKey, newValue);\r\n            decorated.selectedValue = newValue.value;\r\n        } else if (value && value.id && value.value) {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.value;\r\n        } else if (value && typeof (value) == \"number\") {\r\n            self._super(surrogateKey, value);\r\n        } else if (isOfflineForm && (value !== null && typeof (value) === \"object\" && value.value)) {\r\n            self._super(surrogateKey, value.value);\r\n            decorated.selectedValue = value.value;\r\n        } else {\r\n            // Set null values when the entry array is null\r\n            self._super(surrogateKey, null);\r\n            decorated.selectedValue = \"\";\r\n        }\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Document Generator Extension\r\n *   Author: Bizagi UI Forms\r\n *   Comments:\r\n *   -   This script will redefine the document generator render class to adjust to tablet devices\r\n */\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.document\", {}, {\r\n\r\n    /**\r\n     * Apply custom overrides to each decorated instance\r\n     * @param decorated\r\n     */\r\n    applyOverrides: function (decorated) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        self._super(decorated);\r\n\r\n        if (mode !== \"design\") {\r\n            self.surrogateKey = decorated.surrogateKey;\r\n\r\n            decorated.getXpath = this.getXpath;\r\n            decorated.getDocumentXpath = this.getDocumentXpath;\r\n            decorated.getContextXpath = this.getContextXpath;\r\n            decorated.documentTemplateGenerate = this.documentTemplateGenerate;\r\n            decorated.preRenderControl = this.preRenderControl;\r\n            decorated.deleteDocumentTemplate = this.deleteDocumentTemplate;\r\n            decorated.properties.xpathContext = self.getContextXpath();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * This method tries to get the HTML template an render the current object inside\r\n     * @return {jQuery} $.Deferred()\r\n     */\r\n    renderControl: function () {\r\n        this.preRenderControl();\r\n\r\n        return this._super();\r\n    },\r\n\r\n    /**\r\n     * Creates the event of generation of templates.\r\n     */\r\n    documentTemplateGenerate: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        self.startLoading();\r\n\r\n        //Get the context xPath\r\n        properties.xpathcontext = self.getContextXpath();\r\n        properties.xpath = self.getDocumentXpath(properties.xpath);\r\n\r\n        var grid = self.parent;\r\n        var form = self.getFormContainer();\r\n\r\n        $.when(form.submitData()).done(function () {\r\n            $.when(self.dataService.generateDocumentTemplate(properties)).done(function (response) {\r\n                $.when(grid.refresh()).done(function () {\r\n                    self.autoOpenDocuments();\r\n                });\r\n\r\n                self.endLoading();\r\n            }).fail(function () {\r\n                self.showErrorMessage();\r\n                self.endLoading();\r\n            });\r\n        }).fail(function (message) {\r\n            // Add error messages\r\n            self.getFormContainer().addErrorMessage(message);\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Apply custom overrides to each decorated instance\r\n     * @param xpath\r\n     * @returns {string}\r\n     */\r\n    getXpath: function (xpath) {\r\n        var xpathPath = xpath;\r\n        var index = xpathPath.indexOf(this.grid.properties.xpath);\r\n\r\n        if (index !== -1) {\r\n            xpathPath = xpathPath.substr(index + this.grid.properties.xpath.length + 1);\r\n        }\r\n\r\n        return this.grid.properties.xpath + \"[id=\" + this.surrogateKey + \"].\" + xpathPath;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @param xpath\r\n     * @returns {*|string}\r\n     */\r\n    getDocumentXpath: function (xpath) {\r\n        var xpathPath = xpath;\r\n        var index = xpathPath.indexOf(this.grid.properties.xpath);\r\n\r\n        if (index !== -1) {\r\n            xpathPath = xpathPath.substr(index + this.grid.properties.xpath.length + 1);\r\n        }\r\n\r\n        return xpathPath;\r\n    },\r\n\r\n    /**\r\n     * Post process the element after it has been rendered\r\n     * @param surrogateKey\r\n     * @param cell\r\n     * @param tableCell\r\n     */\r\n    postRenderReadOnly: function (surrogateKey, cell, tableCell) {\r\n        // Call base\r\n        this._super(surrogateKey, cell, tableCell);\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {string}\r\n     */\r\n    getContextXpath: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var xpathContext = (form.properties.xpathContext) ? form.properties.xpathContext + \".\" : \"\";\r\n        return xpathContext + this.grid.properties.xpath + \"[id=\" + this.surrogateKey + \"]\";\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    preRenderControl: function () {\r\n        if (this.value != undefined && this.properties.value != undefined) {\r\n            this.properties.value = this.value;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Creates the event of generation of templates.\r\n     * @param filename\r\n     */\r\n    deleteDocumentTemplate: function (filename) {\r\n        var self = this;\r\n        var grid = self.parent;\r\n        var params = {};\r\n\r\n        params.xpath = self.properties.xpath + \"[fileName='\" + filename + \"']\";\r\n        params.idRender = self.properties.id;\r\n        params.xpathContext = self.getContextXpath();\r\n        params.idPageCache = self.properties.idPageCache;\r\n\r\n        $.when(self.dataService.deleteUploadFile(params)).done(function () {\r\n            grid.refresh();\r\n        });\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Desktop Date Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the date column decorator class to adjust to desktop devices\r\n*/\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.date\", {}, {\r\n    /*\r\n    *   Apply custom overrides to each decorated instance\r\n    */\r\n    applyOverrides: function (decorated) {\r\n        this._super(decorated);\r\n    }   \r\n});","/*\r\n*   Name: BizAgi Tablet Text Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the text column decorator class to adjust to tablet devices\r\n*/\r\n\r\n// Extends from column\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.text\", {}, {});\r\n","/*\r\n*   Name: BizAgi Tablet Number Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the number column decorator class to adjust to tablet devices\r\n*/\r\n\r\n// Extends from column\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.number\", {}, {});\r\n","\r\n/*\r\n *   Name: Bizagi Column Rendering Tablet numberScientificNotation\r\n *   Author: Luis Cabarique - LuisCE\r\n *   Comments:\r\n *   -   This script will define a base class to define the Column Scientific number notation\r\n */\r\n\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.numberScientificNotation\", {}, {\r\n    /*\r\n     *   Post process the element after it has been rendered\r\n     */\r\n    postRender: function (surrogateKey, cell) {\r\n        // Call base\r\n        this._super(surrogateKey, cell);\r\n        // Apply styles to input\r\n        var input = $(\"input\", cell);\r\n        this.applyColumnStyles(input);\r\n    },\r\n\r\n    renderSummary: function (key, value) {\r\n        var self = this;\r\n        return self.renderReadOnly(key, value);\r\n    },\r\n\r\n    postRenderSummary: function (key, value) {\r\n        var self = this;\r\n        self.postRenderReadOnly(key, value);\r\n        return true;\r\n    }\r\n});","/**\r\n *   Name: Bizagi Tablet Column Decorator Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the column decorator class to adjust to tablet devices\r\n */\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.image\", {}, {\r\n\r\n    applyOverrides: function (decorated) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        this._super(decorated);\r\n\r\n        // decorated.getUploadXpath = this.getUploadXpath;\r\n        decorated.properties.xpathContext = properties.xpathContext.length > 0 ?\r\n                    properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + decorated.surrogateKey + \"]\" :\r\n                    self.grid.properties.xpath + \"[id=\" + decorated.surrogateKey + \"]\";\r\n    },\r\n\r\n    /*\r\n    *   Returns the xpath to be used  \r\n    */\r\n    /*getUploadXpath: function () {\r\n        return (this.grid.properties.xpath || this.properties.xpath ) + \"[id=\" + this.surrogateKey + \"].\" + this.properties.xpath;\r\n    }*/\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Tablet Text Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the text column decorator class to adjust to tablet devices\r\n*/\r\n\r\n// Extends from column\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.upload\", {}, {\r\n\r\n     applyOverrides: function (decorated) {\r\n        this._super(decorated);\r\n    \r\n        decorated.getUploadXpath = this.getUploadXpath;\r\n        // hack apply upload plugin method in order to execute it only when the control is inserted in the DOM\r\n         var originalMethod = decorated.applyUploadPlugin;\r\n\r\n            decorated.getXpathContext = function () {\r\n                var surrogateKey = this.surrogateKey || \"\";\r\n                var self = this;\r\n                var properties = self.properties;\r\n                return properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + self.surrogateKey + \"]\" : self.grid.properties.xpath + \"[id=\" + self.surrogateKey + \"]\";\r\n            };\r\n\r\n            decorated.buildItemUrl = function (file) {\r\n                var self = this;\r\n                var properties = self.properties;\r\n\r\n                var form = self.getFormContainer();\r\n                var xpathContext = self.getXpathContext();\r\n                var contextXpath = \"\";\r\n\r\n                return self.dataService.getUploadFileUrl({\r\n                    idRender: properties.id,\r\n                    xpath: properties.xpath,\r\n                    xpathContext: xpathContext,\r\n                    idPageCache: properties.idPageCache,\r\n                    fileId: file.id,\r\n                    sessionId: form.properties.sessionId,\r\n                    contexttype: properties.contexttype\r\n                });\r\n            };\r\n   },\r\n\r\n   getUploadXpath: function () {\r\n        return this.grid.properties.xpath + \"[id=\" + this.surrogateKey + \"].\" + this.properties.xpath;\r\n    }\r\n    \r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Link Column Decorator Extension\r\n *   Author: Bizagi UI Forms\r\n *   Comments:\r\n *   -   This script will redefine the link column decorator class to adjust to tablet devices\r\n */\r\n\r\n// Extends from column\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.link\", {}, {\r\n\r\n    applyOverrides: function (decorated) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        self._super(decorated);\r\n\r\n        if (mode !== \"design\" && mode !== \"layout\") {\r\n            self.surrogateKey = decorated.surrogateKey;\r\n\r\n            decorated.getXpath = self.getXpath;\r\n            decorated.properties.xpathContext = self.grid.properties.xpath + \"[id=\" + self.surrogateKey + \"]\";\r\n\r\n            if (self.grid.properties.xpathContext && decorated.properties.xpathContext.indexOf(self.grid.properties.xpathContext) === -1)\r\n                decorated.properties.xpathContext = self.grid.properties.xpathContext + \".\" + decorated.properties.xpathContext;\r\n        }\r\n\r\n        if (decorated.properties.type === \"columnFormLink\") {\r\n            decorated.getFormLinkXpath = this.getFormLinkXpath;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Apply custom overrides to each decorated instance\r\n     * @param xpath\r\n     * @returns {string}\r\n     */\r\n    getXpath: function (xpath) {\r\n        var self = this;\r\n        var xpathPath = xpath;\r\n        var index = xpathPath.indexOf(self.grid.properties.xpath);\r\n\r\n        if (index !== -1) {\r\n            xpathPath = xpathPath.substr(index + self.grid.properties.xpath.length + 1);\r\n        }\r\n\r\n        return self.grid.properties.xpath + \"[id=\" + self.surrogateKey + \"].\" + xpathPath;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {string}\r\n     */\r\n    getContextXpath: function () {\r\n        return this.grid.properties.xpath + \"[id=\" + this.surrogateKey + \"]\";\r\n    },\r\n\r\n    /**\r\n     * Get Form Link xpath to use\r\n     * @returns {*}\r\n     */\r\n    getFormLinkXpath: function () {\r\n        // Calculate layout properties to maximized property\r\n        this.properties.maximized = bizagi.util.parseBoolean(this.properties.maximized) != null ? bizagi.util.parseBoolean(this.properties.maximized) : false;\r\n        this.calculateInitialLayoutProperties();\r\n\r\n        if (!this.properties.xpath) return;\r\n        return this.properties.xpath;\r\n    }\r\n});\r\n","/*\r\n*   Name: BizAgi Desktop Text Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the text column decorator class to adjust to desktop devices\r\n*/\r\n\r\n// Extends from column\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.uploadecm\", {}, {\r\n    /*\r\n    *   Apply custom overrides to each decorated instance\r\n    */\r\n    applyOverrides: function(decorated) {\r\n        var self = this;\r\n        self._super(decorated);\r\n\r\n        if (decorated && decorated.getControl) {\r\n            self.originalGetControl = decorated.getControl;\r\n            decorated.getControl = self.getControl;\r\n        }\r\n\r\n        decorated.getUploadXpath = this.getUploadXpath;\r\n\r\n        decorated.buildItemUrl = function(file) {\r\n            var self = this;\r\n            var properties = self.properties;\r\n\r\n            var form = self.getFormContainer();\r\n\r\n            var columnXpath = self.getUploadXpath(self.surrogateKey);\r\n            columnXpath = columnXpath.split(\".\");\r\n            var nameFile = columnXpath[columnXpath.length - 1];\r\n            var xpathContext = self.getXpathContext(self.surrogateKey);\r\n\r\n            return self.dataService.getUploadFileUrl({\r\n                idRender: properties.id,\r\n                xpath: nameFile,\r\n                xpathContext: xpathContext,\r\n                idPageCache: properties.idPageCache,\r\n                fileId: file.idFileUpload,\r\n                sessionId: form.properties.sessionId,\r\n                contexttype: properties.contexttype\r\n            });\r\n        };\r\n\r\n        decorated.buildAddParams = function() {\r\n            var self = this;\r\n            var properties = self.properties;\r\n            var form = self.getFormContainer();            \r\n            var columnXpath = self.getUploadXpath(self.surrogateKey);\r\n\r\n            columnXpath = columnXpath.split(\".\");\r\n            var nameFile = columnXpath[columnXpath.length - 1];\r\n            var xpathContext = self.getXpathContext(self.surrogateKey);\r\n\r\n            var data = {\r\n                url: properties.addUrl,\r\n                xpath: properties.xpath,\r\n                idAttrib: properties.idAttrib,\r\n                xpathContext: xpathContext,\r\n                metaValues: [],\r\n                idSession: form.properties.sessionId,\r\n                contexttype: \"entity\",\r\n                validExtensions: properties.validExtensions,\r\n                maxSize: properties.maxSize\r\n            };\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\r\n\r\n            return data;\r\n        };\r\n\r\n        decorated.getXpathContext = function() {\r\n            var self = this;\r\n            var properties = self.properties;\r\n            return properties.xpathContext.length > 0\r\n                ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + self.surrogateKey + \"]\"\r\n                : self.grid.properties.xpath + \"[id=\" + self.surrogateKey + \"]\";\r\n        };\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element when the element is read-only\r\n    */\r\n    renderReadOnly: function(surrogateKey, value) {\r\n        var self = this;\r\n        var cell = \"<div></div>\";\r\n\r\n        var decorated = this.getDecorated(surrogateKey);\r\n        decorated.setValue(value);\r\n        self.setValue(surrogateKey, value);\r\n        self.setSurrogateKey(surrogateKey);\r\n\r\n        self.applyOverrides(decorated);\r\n        // Set grid and id references to the control in order to render the content\r\n        decorated.grid = this.grid;\r\n        decorated.column = this;\r\n        decorated.surrogateKey = surrogateKey;\r\n\r\n        // Set ready deferred\r\n        self.readyDeferred = new $.Deferred();\r\n\r\n        // We need to render the inner control as read-only\r\n        if (decorated.files.length > 0) {\r\n            // Changes editable to false to render read-only\r\n            var editable = this.properties.editable;\r\n            decorated.properties.editable = false;\r\n            cell = decorated.render(\"cell.upload\");\r\n        }\r\n        return cell;\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    getUploadXpath: function(surrogateKey) {\r\n        surrogateKey = this.surrogateKey || surrogateKey || \"\";\r\n        return this.grid.properties.xpath + \"[id=\" + surrogateKey + \"].\" + this.properties.xpath;\r\n    },\r\n\r\n    getControl: function() {\r\n        var self = this;\r\n        var result = self._super();\r\n        //TODO: Tablet validar si esto es realmente necesario asi como esta\r\n        if (!result || result.length == 0) {\r\n            return $(\".ui-bizagi-cell-readonly\", self.element || self.observableElement);\r\n        } else {\r\n            return $(\".bz-form-item\", self.element || self.observableElement);\r\n        }\r\n    }\r\n\r\n});\r\n","/**\r\n* Grid control Column Button\r\n*\r\n* @author Ricardo Pérez\r\n*/\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.button\", {}, {\r\n\r\n});","/**\r\n *   Name: Bizagi Tablet Radio Column Decorator Extension\r\n *   Author: Bizagi UI Forms\r\n *   Comments:\r\n *   -   This script will redefine the text column decorator class to adjust to tablet devices\r\n */\r\n\r\n// Extends from column\r\nbizagi.rendering.tablet.columns.combo.extend(\"bizagi.rendering.tablet.columns.radio\", {}, {});\r\n","/*\r\n*   Name: Bizagi Tablet Readonly Column Decorator Extension\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will redefine the readonly column decorator class to adjust to tablet devices\r\n*/\r\n\r\n// Extends from column\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.readonly\", {}, bizagi.rendering.columns.readonly.prototype );\r\n// Extends itself\r\nbizagi.rendering.tablet.columns.readonly.extend(\"bizagi.rendering.tablet.columns.readonly\",{}, {\r\n    \r\n});","/**\r\n *   Name: Bizagi Tablet Column Decorator Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the column decorator class to adjust to tablet devices\r\n */\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.search\", {}, bizagi.rendering.columns.search.prototype );\r\n// Extends itself\r\nbizagi.rendering.tablet.columns.search.extend(\r\n  \"bizagi.rendering.tablet.columns.search\",\r\n  {},\r\n  {\r\n    renderReadOnly: function(surrogateKey, value) {\r\n      if (value && value.length > 0) {\r\n        value = [].concat(value[0]);\r\n        return this._super(surrogateKey, {\r\n          id: value[0],\r\n          label: value[1],\r\n          additionallabel: value[2] || undefined\r\n        });\r\n      } else {\r\n        return this._super(surrogateKey, value);\r\n      }\r\n    },\r\n\r\n    render: function(surrogateKey, value) {\r\n      var self = this;\r\n      if (value && value.length > 0) {\r\n        value = [].concat(value[0]);\r\n        return self._super(surrogateKey, {\r\n          id: value[0],\r\n          label: value[1],\r\n          additionallabel: value[2] || undefined\r\n        });\r\n      } else {\r\n        return self._super(surrogateKey, value);\r\n      }\r\n    },\r\n\r\n    /*\r\n     *   Post process the element after it has been rendered\r\n     */\r\n    postRender: function(surrogateKey, cell) {\r\n      // Call base\r\n      this._super(surrogateKey, cell);\r\n\r\n      var decorated = this.getDecorated(surrogateKey);\r\n      decorated.refreshControl = this.refreshControl;\r\n    },\r\n\r\n    refreshControl: function() {\r\n      this.grid.refreshCell({\r\n        key: this.surrogateKey,\r\n        column: this.properties.xpath,\r\n        xpathContext: this.getFormContainer().properties.xpathContext\r\n      });\r\n    }\r\n  }\r\n);","/*\r\n*   Name: BizAgi Tablet Column Decorator Extension\r\n*   Author: RicharU\r\n*   Comments:\r\n*   -   This script will redefine the column decorator class to adjust to tablet devices\r\n*/\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.columns.combo.extend(\"bizagi.rendering.tablet.columns.list\", {}, {});\r\n","/*\r\n*   Name: BizAgi tablet exclusiveCheck Column Decorator Extension\r\n*   Author: RicharU\r\n*   Comments:\r\n*   -   This script will redefine the check column to adjust to tablet devices\r\n*/\r\n\r\n// Extends from column\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.exclusiveCheck\", {}, {\r\n    /*\r\n     *   Returns the in-memory processed element\r\n     *   so the caller could append it to any place\r\n     */\r\n    render: function (surrogateKey, value) {\r\n\r\n        var self = this;\r\n        // Set flag to check when a render has changed\r\n        self.changed = false;\r\n        var properties = self.properties;\r\n        // Set grid and id references to the control in order to render the content\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        decorated.grid = self.grid;\r\n        decorated.column = this;\r\n        decorated.surrogateKey = surrogateKey;\r\n\r\n        // Set cell value\r\n\r\n       \r\n        self.setValue(surrogateKey, value || false);\r\n        var tmpCheck = self.grid.enabledChecks[self.properties.xpath].find(function(el){ \r\n            return el.id == surrogateKey;\r\n        });\r\n        if(typeof tmpCheck == \"undefined\"){                         \r\n           self.grid.enabledChecks[self.properties.xpath].push({                \r\n               id: surrogateKey,\r\n               value : value || false,\r\n               originalValue : value || false,\r\n               changed : false\r\n           });    \r\n        }\r\n        \r\n        if (value == null){\r\n            self.changed = true;\r\n            var obj = {};\r\n            obj[self.properties.xpath] = self.getValue(surrogateKey);\r\n            self.grid.changes[surrogateKey] = obj;\r\n        }\r\n       \r\n        // Override render properties\r\n        self.overrideDecoratedRenderProperties(surrogateKey);\r\n\r\n\r\n        // If the render is not editable return the readonly version of the column\r\n        if (!properties.editable)\r\n            return self.renderReadOnly.apply(self, arguments);\r\n\r\n        // Returns the decorated render inside a custom layout for columns\r\n        self.readyDeferred = new $.Deferred();\r\n        var cell = decorated.render(\"cell\");\r\n\r\n        // If the render changes set the flag on\r\n        decorated.bind(\"renderchange\", function () {\r\n            self.changed = true;\r\n            var checkList = self.grid.enabledChecks[self.properties.xpath];\r\n\r\n            checkList.forEach(function (el) {\r\n                if (el.id == surrogateKey) {\r\n                    el.value = decorated.value;\r\n                    el.changed = true;\r\n                }\r\n                else if (decorated.value && el.value){\r\n                    var tmpDecorated = self.getDecorated(el.id);\r\n                    tmpDecorated.setDisplayValue(false);\r\n                    self.setValue(el.id, false);\r\n                    el.value = false;\r\n                    el.changed = true;\r\n                }\r\n            });\r\n            \r\n            var simpleXpathArray = self.properties.xpath.split(\".\");\r\n            self.grid.exclusiveChanges[self.properties.xpath] = {\r\n                xpath: self.properties.xpath,\r\n                simpleXpath: simpleXpathArray[simpleXpathArray.length - 1],\r\n                value: self.getValue(surrogateKey),\r\n                key: surrogateKey\r\n            };\r\n        });\r\n\r\n        self.bind(\"rendered\", function () {\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n\r\n        return cell;\r\n    },\r\n\r\n    /*\r\n     *   Post process the element after it has been rendered\r\n     */\r\n    postRender: function (surrogateKey, cell) {\r\n        // Call base\r\n        this._super(surrogateKey, cell);\r\n\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        this.setSurrogateKey(surrogateKey);\r\n        if (mode == \"execution\") {\r\n\r\n            var decorated = this.getDecorated(surrogateKey);\r\n            var control = decorated.getControl();\r\n\r\n            // Check if its new row\r\n            if (control.parents(\"tr\").data(\"new-row\")) {\r\n                // Show a disabled check box\r\n                control.html('<input type=\"checkbox\" name=\"exclusiveCheck\" title=\"' + bizagi.localization.getResource('render-grid-column-button-mandatory-key') + '\" disabled=\"disabled\" style=\"width:16.5px;height:16.5px;\">');\r\n\r\n                //Set the column with this attribute, so when the control is evaluated in isValid(), validated\r\n                //also if it is required, and belongs from a new row\r\n                self.isNewRow = true;\r\n            } else {\r\n                self.isNewRow = false;\r\n            }\r\n        }\r\n    },\r\n\r\n    isValueValid: function(surrogateKey, value, invalidElements, propertyOverrides){\r\n        self = this;\r\n        self.grid.enabledChecks = self.grid.enabledChecks || {};\r\n        var checkedValues =  (self.grid.enabledChecks[self.properties.xpath] || []).filter(function (el){ \r\n            return el.value;\r\n        });\r\n\r\n        if (checkedValues.length > 1) {\r\n            var message = self.getResource(\"render-exclusive-column-check-error\").replaceAll(\"#label#\", self.properties.displayName);\r\n            /* var messageData = {xpath: self.properties.xpath, message: message}; */\r\n            invalidElements.push(message);\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Tablet Render Factory\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a render factory to create tablet versions of each render type\r\n */\r\n\r\nbizagi.rendering.base.factory.extend(\"bizagi.rendering.tablet.factory\", {}, {\r\n\r\n    /**\r\n     * Load all the templates used for rendering     \r\n     */\r\n    loadTemplates: function () {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        $.when(\r\n\r\n            // Icons\r\n            self.loadTemplate(\"icons\", self.getFileTemplate(\"common.bizagi.rendering.icons\")),\r\n\r\n            // Common\r\n            self.loadTemplate(\"form-error\", self.getFileTemplate(\"bizagi.rendering.tablet.form-error\")),\r\n        \tself.loadTemplate(\"form-waiting\", self.getFileTemplate(\"bizagi.rendering.tablet.form-waiting\")),\r\n\r\n            // Containers\r\n            self.loadTemplate(\"form\", self.getFileTemplate(\"bizagi.rendering.tablet.form\") + \"#bz-form-container\"),\r\n            self.loadTemplate(\"complexgateway\", self.getFileTemplate(\"bizagi.rendering.tablet.form\") + \"#bz-form-complex-gateway\"),\r\n\r\n            self.loadTemplate(\"panel\", self.getFileTemplate(\"bizagi.rendering.tablet.panel\")),\r\n            self.loadTemplate(\"tab\", self.getFileTemplate(\"bizagi.rendering.tablet.tab\")),\r\n            self.loadTemplate(\"tabItem\", self.getFileTemplate(\"bizagi.rendering.tablet.tabItem\")),\r\n            self.loadTemplate(\"horizontal\", self.getFileTemplate(\"bizagi.rendering.tablet.horizontal\")),\r\n            self.loadTemplate(\"accordion\", self.getFileTemplate(\"bizagi.rendering.tablet.accordion\")),\r\n            self.loadTemplate(\"accordionItem\", self.getFileTemplate(\"bizagi.rendering.tablet.accordionItem\")),\r\n            self.loadTemplate(\"group\", self.getFileTemplate(\"bizagi.rendering.tablet.group\")),\r\n            self.loadTemplate(\"searchForm\", self.getFileTemplate(\"bizagi.rendering.tablet.searchForm\")),\r\n            self.loadTemplate(\"contentPanel\", self.getFileTemplate(\"bizagi.rendering.tablet.contentPanel\")),\r\n\r\n            // Renders\r\n            self.loadTemplate(\"render\", self.getFileTemplate(\"bizagi.rendering.tablet.render\")),\r\n            self.loadTemplate(\"readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.readonly\")),\r\n            self.loadTemplate(\"text\", self.getFileTemplate(\"bizagi.rendering.tablet.text\")+ \"#bz-render-text\"),\r\n            self.loadTemplate(\"text-readOnly\", self.getFileTemplate(\"bizagi.rendering.tablet.text\")+ \"#bz-render-text-readonly\"),\r\n            self.loadTemplate(\"extendedText\", self.getFileTemplate(\"bizagi.rendering.tablet.extendedText\") + \"#bz-render-extended-text\"),\r\n            self.loadTemplate(\"extendedText-readOnly\", self.getFileTemplate(\"bizagi.rendering.tablet.extendedText\") + \"#bz-render-extended-text-readonly\"),\r\n\r\n            self.loadTemplate(\"number\", self.getFileTemplate(\"bizagi.rendering.tablet.number\")),\r\n            self.loadTemplate(\"numberScientificNotation\", self.getFileTemplate(\"bizagi.rendering.tablet.numberScientificNotation\")),\r\n            self.loadTemplate(\"date\", self.getFileTemplate(\"bizagi.rendering.tablet.date\")),\r\n            self.loadTemplate(\"yesno\", self.getFileTemplate(\"bizagi.rendering.tablet.yesno\")),\r\n            self.loadTemplate(\"check\", self.getFileTemplate(\"bizagi.rendering.tablet.check\")),\r\n            self.loadTemplate(\"checkList\", self.getFileTemplate(\"bizagi.rendering.tablet.checkList\")),\r\n            \r\n            self.loadTemplate(\"combo\", self.getFileTemplate(\"bizagi.rendering.tablet.combo\") + \"#bz-combo-control\"),\r\n            self.loadTemplate(\"combo-readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.combo\") + \"#bz-combo-control-readonly\"),\r\n            self.loadTemplate(\"combo-list\", self.getFileTemplate(\"bizagi.rendering.tablet.combo\") + \"#bz-combo-control-list\"), \r\n\r\n            self.loadTemplate(\"modal-header-search\", self.getFileTemplate(\"bizagi.rendering.tablet.modal\") + \"#bz-modal-view-header-search\"), \r\n            self.loadTemplate(\"modal-footer-done\", self.getFileTemplate(\"bizagi.rendering.tablet.modal\") + \"#bz-modal-view-footer-done\"),             \r\n\r\n            self.loadTemplate(\"list\", self.getFileTemplate(\"bizagi.rendering.tablet.list\") + \"#bz-render-list\"),            \r\n            self.loadTemplate(\"list-items\", self.getFileTemplate(\"bizagi.rendering.tablet.list\") + \"#bz-render-list-items\"),\r\n\r\n            self.loadTemplate(\"radio\", self.getFileTemplate(\"bizagi.rendering.tablet.radio\")),            \r\n\r\n            self.loadTemplate(\"image\", self.getFileTemplate(\"bizagi.rendering.tablet.image\") + \"#bz-render-image\"),\r\n            self.loadTemplate(\"image-item\", self.getFileTemplate(\"bizagi.rendering.tablet.image\") + \"#bz-render-image-item\"),\r\n            self.loadTemplate(\"image-preview\", self.getFileTemplate(\"bizagi.rendering.tablet.image\") + \"#bz-render-image-preview\"),\r\n            self.loadTemplate(\"image-readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.image\") + \"#bz-render-image-readonly\"),\r\n            \r\n            self.loadTemplate(\"uploadSlide\", self.getFileTemplate(\"bizagi.rendering.tablet.slide.upload\")),\r\n\r\n            self.loadTemplate(\"upload\", self.getFileTemplate(\"bizagi.rendering.tablet.upload\") + \"#bz-render-upload\"),\r\n            self.loadTemplate(\"upload-item\", self.getFileTemplate(\"bizagi.rendering.tablet.upload\") + \"#bz-render-upload-item\"),\r\n            self.loadTemplate(\"upload-readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.upload\") + \"#bz-render-upload-readonly\"),\r\n\r\n            self.loadTemplate(\"grid\", self.getFileTemplate(\"bizagi.rendering.tablet.grid\")),\r\n            self.loadTemplate(\"cell\", self.getFileTemplate(\"bizagi.rendering.tablet.cell\")),\r\n        \tself.loadTemplate(\"cell.readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.cell.readonly\")),\r\n            self.loadTemplate(\"cell.upload\", self.getFileTemplate(\"bizagi.rendering.tablet.cell.upload\")),\r\n            \r\n            self.loadTemplate(\"search\", self.getFileTemplate(\"bizagi.rendering.tablet.search\") + \"#bz-render-search\"),\r\n            self.loadTemplate(\"search.item\", self.getFileTemplate(\"bizagi.rendering.tablet.search\") + \"#bz-render-search-item\"),\r\n            self.loadTemplate(\"search.items\", self.getFileTemplate(\"bizagi.rendering.tablet.search\") + \"#bz-render-search-items\"),      \r\n\r\n            self.loadTemplate(\"searchItem\", self.getFileTemplate(\"bizagi.rendering.tablet.searchItem\")),\r\n\r\n            self.loadTemplate('searchList', self.getFileTemplate('bizagi.rendering.tablet.searchList') + \"#bz-render-search-list\"),\r\n            self.loadTemplate(\"searchList.item\", self.getFileTemplate(\"bizagi.rendering.tablet.searchList\") + \"#bz-render-search-list-item\"),\r\n            self.loadTemplate(\"searchList.items\", self.getFileTemplate(\"bizagi.rendering.tablet.searchList\") + \"#bz-render-search-list-items\"),            \r\n            self.loadTemplate(\"searchList.actions\", self.getFileTemplate(\"bizagi.rendering.tablet.searchList\") + \"#bz-render-search-list-actions\"),\r\n            self.loadTemplate(\"searchList.tag\", self.getFileTemplate(\"bizagi.rendering.tablet.searchList\") + \"#bz-render-search-list-tag\"),\r\n            self.loadTemplate(\"searchList.readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.searchList\") + \"#bz-render-search-list-readonly\"),\r\n            self.loadTemplate(\"searchList-modal-header\", self.getFileTemplate(\"bizagi.rendering.tablet.searchList\") + \"#bz-render-search-list-modal-header\"),\r\n            \r\n            self.loadTemplate(\"letter\", self.getFileTemplate(\"bizagi.rendering.tablet.letter\")),\r\n            self.loadTemplate(\"letter.readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.letter.readonly\")),\r\n            self.loadTemplate(\"letter.dialog\", self.getFileTemplate(\"bizagi.rendering.tablet.dialog-letter\")),\r\n            self.loadTemplate(\"button\", self.getFileTemplate(\"bizagi.rendering.tablet.button\")),\r\n            self.loadTemplate(\"link\", self.getFileTemplate(\"bizagi.rendering.tablet.link\")),\r\n            self.loadTemplate(\"formLink\", self.getFileTemplate(\"bizagi.rendering.tablet.formLink\")),\r\n            self.loadTemplate(\"geolocation\", self.getFileTemplate(\"bizagi.rendering.tablet.geolocation\")),\r\n            self.loadTemplate('association', self.getFileTemplate('bizagi.rendering.tablet.association')),\r\n\r\n            self.loadTemplate(\"ecm\", self.getFileTemplate(\"bizagi.rendering.tablet.ecm\") + \"#bz-render-ecm\"),\r\n            self.loadTemplate(\"ecm-item\", self.getFileTemplate(\"bizagi.rendering.tablet.ecm\") + \"#bz-render-ecm-item\"),\r\n            self.loadTemplate(\"ecm-readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.ecm\") + \"#bz-render-ecm-readonly\"),\r\n\r\n            self.loadTemplate(\"list-multiselect\", self.getFileTemplate(\"bizagi.rendering.tablet.multiSelect\") + \"#bz-multiselect\"),\r\n            self.loadTemplate(\"multiselect-list\", self.getFileTemplate(\"bizagi.rendering.tablet.multiSelect\") + \"#bz-multiselect-list\"),\r\n\r\n            self.loadTemplate(\"document\", self.getFileTemplate(\"bizagi.rendering.tablet.document\") + \"#bz-document-generator\"),\r\n            self.loadTemplate(\"document-item\", self.getFileTemplate(\"bizagi.rendering.tablet.document\") + \"#bz-document-generator-item\"),\r\n            self.loadTemplate(\"document-readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.document\") + \"#bz-document-generator-readonly\"),\r\n            self.loadTemplate(\"document-download\", self.getFileTemplate(\"bizagi.rendering.tablet.document\") + \"#bz-document-generator-download\"),\r\n\r\n            // Action launcher\r\n            self.loadTemplate(\"render-actionLauncher\", self.getFileTemplate(\"bizagi.rendering.tablet.actionLauncher\") + \"#bz-rendering-actionLauncher\"),\r\n            self.loadTemplate(\"render-actionLauncher-horizontal\", self.getFileTemplate(\"bizagi.rendering.tablet.actionLauncher\") + \"#bz-rendering-actionLauncher-horizontal\"),\r\n            self.loadTemplate(\"render-actionLauncher-vertical\", self.getFileTemplate(\"bizagi.rendering.tablet.actionLauncher\") + \"#bz-rendering-actionLauncher-vertical\"),\r\n            self.loadTemplate(\"render-actionLauncher-actions-to-execute\", self.getFileTemplate(\"bizagi.rendering.tablet.actionLauncher\") + \"#bz-rendering-actionLauncher-actions-to-execute\"),\r\n            self.loadTemplate(\"render-actionLauncher-design\", self.getFileTemplate(\"bizagi.rendering.tablet.actionLauncher\") + \"#bz-rendering-actionLauncher-design\"),\r\n\r\n            // Polymorphic launcher\r\n            self.loadTemplate(\"render-polymorphicLauncher\", self.getFileTemplate(\"bizagi.rendering.tablet.polymorphicLauncher\") + \"#bz-rendering-polymorphicLauncher\"),\r\n            self.loadTemplate(\"render-polymorphicLauncher-vertical-tree\", self.getFileTemplate(\"bizagi.rendering.tablet.polymorphicLauncher\") + \"#bz-rendering-polymorphicLauncher-vertical-tree\"),\r\n            self.loadTemplate(\"render-polymorphicLauncher-vertical-tree-item\", self.getFileTemplate(\"bizagi.rendering.tablet.polymorphicLauncher\") + \"#bz-rendering-polymorphicLauncher-vertical-tree-item\"),\r\n            self.loadTemplate(\"render-polymorphicLauncher-actions-to-execute\", self.getFileTemplate(\"bizagi.rendering.tablet.polymorphicLauncher\") + \"#bz-rendering-polymorphicLauncher-actions-to-execute\"),\r\n            self.loadTemplate(\"render-polymorphicLauncher-confirm\", self.getFileTemplate(\"bizagi.rendering.tablet.polymorphicLauncher\") + \"#bz-rendering-polymorphicLauncher-confirm\"),\r\n            self.loadTemplate(\"render-polymorphicLauncher-design\", self.getFileTemplate(\"bizagi.rendering.tablet.polymorphicLauncher\") + \"#bz-rendering-polymorphicLauncher-design\"),\r\n\r\n            //Renders Layouts\r\n            self.loadTemplate(\"render-layout\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.render\")),\r\n            self.loadTemplate(\"layout-image\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.image\") + \"#ui-bizagi-render-layout-image\"),\r\n            self.loadTemplate(\"layout-image64\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.image\") + \"#ui-bizagi-render-layout-image64\"),\r\n            self.loadTemplate(\"layout-label\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.label\")),\r\n            self.loadTemplate(\"layout-link\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.link\")),\r\n            self.loadTemplate(\"layout-text\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.text\")),\r\n            self.loadTemplate(\"layout-date-time\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.dateTime\")),\r\n            self.loadTemplate(\"layout-money\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.money\")),\r\n            self.loadTemplate(\"layout-number\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.number\")),\r\n            self.loadTemplate(\"layout-upload\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.upload\")),\r\n             \r\n            // Grid plugin stuff\r\n            self.loadTemplate(\"bizagi.grid.grid\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid\"),\r\n            self.loadTemplate(\"bizagi.grid.waiting\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-waiting\"),\r\n            self.loadTemplate(\"bizagi.grid.table\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-table\"),\r\n            self.loadTemplate(\"bizagi.grid.table.empty\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-table-empty\"),\r\n            self.loadTemplate(\"bizagi.grid.column\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-column\"),\r\n            self.loadTemplate(\"bizagi.grid.column.special\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-column-special\"),\r\n            self.loadTemplate(\"bizagi.grid.row\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-row\"),\r\n            self.loadTemplate(\"bizagi.grid.row.buttons\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-row-buttons\"),\r\n            self.loadTemplate(\"bizagi.grid.cell\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-cell\"),\r\n            self.loadTemplate(\"bizagi.grid.cell.special\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-cell-special\"),\r\n            self.loadTemplate(\"bizagi.grid.pager\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-pager\"),\r\n            self.loadTemplate(\"bizagi.grid.buttons\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-buttons\"),\r\n            self.loadTemplate(\"bizagi.grid.dynamicpager\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-dynamic-pager\"),\r\n            self.loadTemplate(\"bizagi.grid.totalizer\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-totalizer\"),\r\n\r\n            // Grid Offline\r\n            self.loadTemplate(\"bizagi.grid.offline.buttons\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#bz-grid-offline-buttons\"),\r\n            self.loadTemplate(\"bizagi.grid.offline.row.buttons\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#bz-grid-offline-row-buttons\"),\r\n            self.loadTemplate(\"bizagi.grid.offline.cell.special\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#bz-grid-offline-cell-special\")\r\n\r\n        ).done(function () {\r\n            var tmplIcons = $.fasttmpl(self.getTemplate(\"icons\"));\r\n            var svgStoreCounter = $(\"head\").find('#genome-forms-icons').length;\r\n\r\n            if (svgStoreCounter === 0)\r\n                $(\"head\").append(tmplIcons);\r\n\r\n            // Resolve when all templates are loaded\r\n            defer.resolve();\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    getFileTemplate: function(src, onDemand){\r\n        var device = bizagi.detectDevice();\r\n        return bizagi.getTemplate(src, onDemand, device == \"desktop\" ? \"tablet_ios\" : device);\r\n    },\r\n    /**\r\n     * Returns the appropiate container based on the container type    \r\n     */\r\n    getContainer: function (params) {\r\n        var self = this;\r\n        var type = params.type;        \r\n        var containerParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        type = type.replace(/tablet/, '');    \r\n\r\n        if (type == \"form\")\r\n            return new bizagi.rendering.tablet.form(containerParams);\r\n\r\n        if (type == \"template\")\r\n            return new bizagi.rendering.tablet.formTemplate(containerParams);\r\n\r\n        if (type == \"queryForm\")\r\n            return new bizagi.rendering.tablet.queryForm(containerParams);\r\n\r\n        if (type == \"layout\")\r\n            return new bizagi.rendering.tablet.layout(containerParams);\r\n\r\n        if (type == \"usersForm\")\r\n            return new bizagi.rendering.tablet.usersForm(containerParams);\r\n\r\n        if (type == \"panel\")\r\n            return new bizagi.rendering.tablet.panel(containerParams);\r\n\r\n        if (type == \"contentPanel\" || type == \"contentpanel\")\r\n            return new bizagi.rendering.tablet.contentPanel(containerParams);\r\n\r\n        if (type == \"nestedForm\")\r\n            return new bizagi.rendering.tablet.nestedForm(containerParams);\r\n\r\n        if (type == \"tab\")\r\n            return new bizagi.rendering.tablet.tab(containerParams);\r\n\r\n        if (type == \"tabItem\" || type == \"tabitem\")\r\n            return new bizagi.rendering.tablet.tabItem(containerParams);\r\n\r\n        if (type == \"horizontal\")\r\n            return new bizagi.rendering.tablet.horizontal(containerParams);\r\n\r\n        if (type == \"accordion\")\r\n            return new bizagi.rendering.tablet.accordion(containerParams);\r\n\r\n        if (type == \"accordionItem\")\r\n            return new bizagi.rendering.tablet.accordionItem(containerParams);\r\n\r\n        if (type == \"group\")\r\n            return new bizagi.rendering.tablet.group(containerParams);\r\n\r\n        if (type == \"searchForm\") {\r\n            containerParams.context = \"search\";\r\n            containerParams.contexttype = \"metadata\";\r\n            return new bizagi.rendering.tablet.searchForm(containerParams);\r\n        }\r\n\r\n        if (type == \"mobileform\")\r\n            return new bizagi.rendering.mobileform(containerParams);\r\n\r\n        if (type == \"mobilegroup\")\r\n            return new bizagi.rendering.mobilegroup(containerParams);       \r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", params.data, \"error\");\r\n\r\n        return null;\r\n    },   \r\n\r\n    /**\r\n     * Returns the appropiate column based on the render type     \r\n     */\r\n    getColumn: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var columnParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService,\r\n            singleInstance: bizagi.util.isEmpty(params.singleInstance) ? true : params.singleInstance\r\n        });\r\n\r\n        type = type.replace(/tablet/, '');    \r\n\r\n        if (type == \"columnText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                columnParams.decorated = bizagi.rendering.tablet.extendedText;\r\n            } else {\r\n                // Creates one normal text render\r\n                columnParams.decorated = bizagi.rendering.tablet.text;\r\n            }\r\n\r\n            return new bizagi.rendering.tablet.columns.text(columnParams);\r\n        }\r\n\r\n        if (type == \"columnSearchList\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.searchList;\r\n            return new bizagi.rendering.tablet.columns.searchList(columnParams);\r\n        }\r\n\r\n        if (type == \"columnNumber\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.number;\r\n            return new bizagi.rendering.tablet.columns.number(columnParams);\r\n        }\r\n\r\n        if (type == \"columnMoney\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.money;\r\n            return new bizagi.rendering.tablet.columns.number(columnParams);\r\n        }\r\n\r\n        if (type == \"columnDate\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.date;\r\n            return new bizagi.rendering.tablet.columns.date(columnParams);\r\n        }\r\n\r\n        if (type == \"columnBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                columnParams.decorated = bizagi.rendering.tablet.check;\r\n                if (params.data.properties.isExclusive) {\r\n                    return new bizagi.rendering.tablet.columns.exclusiveCheck(columnParams);\r\n                }\r\n            } else {\r\n                // Creates one yes-no render\r\n                columnParams.decorated = bizagi.rendering.tablet.yesno;\r\n            }\r\n            return new bizagi.rendering.tablet.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnCombo\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.combo;\r\n            return new bizagi.rendering.tablet.columns.combo(columnParams);\r\n        }\r\n\r\n        if (type == \"columnRadio\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.radio;\r\n            return new bizagi.rendering.tablet.columns.radio(columnParams);\r\n        }\r\n\r\n        if (type == \"columnList\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.list;\r\n            return new bizagi.rendering.tablet.columns.list(columnParams);\r\n        }\r\n\r\n        if (type == \"columnHidden\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.hidden;\r\n            return new bizagi.rendering.tablet.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUpload\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.upload;\r\n            return new bizagi.rendering.tablet.columns.upload(columnParams);\r\n        }\r\n\r\n        if (type == \"columnImage\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.image;\r\n            return new bizagi.rendering.tablet.columns.image(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUploadEcm\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.ecm;\r\n            return new bizagi.rendering.tablet.columns.uploadecm(columnParams);\r\n        }\r\n\r\n        if (type == \"columnLink\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.link;\r\n            return new bizagi.rendering.tablet.columns.link(columnParams);\r\n        }\r\n\r\n        if (type == \"columnFormLink\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.formLink;\r\n            return new bizagi.rendering.tablet.columns.link(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUserfield\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.userfieldWrapper;\r\n            return new bizagi.rendering.tablet.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnSearch\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.search;\r\n            return new bizagi.rendering.tablet.columns.search(columnParams);\r\n        }\r\n\r\n        if (type == \"columnLabel\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.label;\r\n            return new bizagi.rendering.tablet.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnReadonly\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.label;\r\n            return new bizagi.rendering.tablet.columns.readonly(columnParams);\r\n        }\r\n\r\n        if (type == \"columnDocument\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.document;\r\n            return new bizagi.rendering.tablet.columns.document(columnParams);\r\n        }\r\n\r\n        /*\r\n        Not supported\r\n         if (type == \"columnLetter\") {\r\n            columnParams.decorated = bizagi.rendering.letter;\r\n            return new bizagi.rendering.columns.letter(columnParams);\r\n        } */\r\n\r\n        if (type == \"columnButton\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.button;\r\n            return new bizagi.rendering.tablet.columns.button(columnParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n\r\n    getRender: function (params) {\r\n        var self = this;\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var properties = data.properties;\r\n        var renderParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        // Check is offline form        \r\n        var isOfflineForm = bizagi.util.isOfflineForm({ container: params.parent });\r\n\r\n        if (!type)\r\n            type = \"label\";\r\n\r\n        type = type.replace(/tablet/, '');        \r\n\r\n        if (type == \"text\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            // Creates one extended render\r\n            if (isExtended) {\r\n                return new bizagi.rendering.tablet.extendedText(renderParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.tablet.text(renderParams);\r\n        }\r\n\r\n        if (type == \"association\") {\r\n            return new bizagi.rendering.tablet.association(renderParams);\r\n        }\r\n\r\n        if (type == \"label\") {\r\n            return new bizagi.rendering.tablet.label(renderParams);\r\n        }\r\n\r\n        if (type == \"hidden\") {\r\n            return new bizagi.rendering.tablet.hidden(renderParams);\r\n        }\r\n\r\n        if (type == \"number\") {\r\n            // Number Scientific Notation\r\n            if (properties && properties.dataType === 29) {\r\n                return new bizagi.rendering.tablet.numberScientificNotation(renderParams);\r\n            }\r\n\r\n            return new bizagi.rendering.tablet.number(renderParams);\r\n        }\r\n\r\n        if (type == \"money\") {\r\n            return new bizagi.rendering.tablet.money(renderParams);\r\n        }\r\n\r\n        if (type == \"date\") {\r\n            return new bizagi.rendering.tablet.date(renderParams);\r\n        }\r\n\r\n        if (type == \"boolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            // Creates one check render\r\n            if (display == \"check\") {\r\n                return new bizagi.rendering.tablet.check(renderParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.tablet.yesno(renderParams);\r\n        }\r\n\r\n        if (type == \"combo\") {\r\n            return new bizagi.rendering.tablet.combo(renderParams);\r\n        }\r\n\r\n        if (/^cascadingcombo$/i.test(type)) {\r\n            return new bizagi.rendering.tablet.cascadingCombo(renderParams);\r\n        }\r\n\r\n        if (type == \"list\") {\r\n            return new bizagi.rendering.tablet.list(renderParams);\r\n        }\r\n\r\n        if (type == \"radio\") {\r\n            return new bizagi.rendering.tablet.radio(renderParams);\r\n        }\r\n\r\n        if (type == \"image\") {\r\n            if( isOfflineForm && !bizagi.util.isOfflineFormsV2Supported()){\r\n                return new bizagi.rendering.tablet.image.old(renderParams);\r\n            } \r\n            else {\r\n                return new bizagi.rendering.tablet.image(renderParams);\r\n            }\r\n            \r\n        }\r\n\r\n        if (type == \"uploadecm\") {\r\n            return new bizagi.rendering.tablet.ecm(renderParams);\r\n        }\r\n\r\n        if (type == \"upload\") {\r\n            // Review the offline status or context              \r\n            if (isOfflineForm) {\r\n                if(!bizagi.util.isOfflineFormsV2Supported()){\r\n                    return new bizagi.rendering.tablet.upload.offline.old(renderParams);\r\n                }\r\n                else{\r\n                    return new bizagi.rendering.tablet.upload.offline(renderParams);\r\n                }\r\n            } else {\r\n                return new bizagi.rendering.tablet.upload(renderParams);\r\n            }\r\n        }\r\n\r\n        if (type == \"grid\") {\r\n            // Review the offline status or context             \r\n            if (isOfflineForm) {\r\n                if(!bizagi.util.isOfflineFormsV2Supported()){\r\n                    return new bizagi.rendering.tablet.grid.offline.old(renderParams);\r\n                }\r\n                else{\r\n                    return new bizagi.rendering.tablet.grid.offline(renderParams);\r\n                }\r\n            } else {\r\n                return new bizagi.rendering.tablet.grid(renderParams);\r\n            }\r\n        }\r\n\r\n        if (type == \"groupedgrid\") {\r\n            // return new bizagi.rendering.tablet.grid.grouped(renderParams);\r\n            return new bizagi.rendering.tablet.grid(renderParams); // Not supported. Nonetheless, all entries are shown.\r\n        }\r\n\r\n        if (type == \"search\") {\r\n            return new bizagi.rendering.tablet.search(renderParams);\r\n        }\r\n\r\n        if (type == \"suggest\") {\r\n            renderParams.data.properties.enableQuerySuggestBehavior = true;\r\n            return new bizagi.rendering.tablet.search(renderParams);\r\n        }\r\n\r\n        if (type == \"searchList\") {\r\n            return new bizagi.rendering.tablet.searchList(renderParams);\r\n        }\r\n\r\n        if (type == \"multiSelect\") {\r\n            return new bizagi.rendering.tablet.multiSelect(renderParams);\r\n        }\r\n\r\n        if (type == \"button\") {\r\n            return new bizagi.rendering.tablet.button(renderParams);\r\n        }\r\n\r\n        if (type == \"formLink\") {\r\n            return new bizagi.rendering.tablet.formLink(renderParams);\r\n        }\r\n\r\n        if (type == \"link\") {\r\n            return new bizagi.rendering.tablet.link(renderParams);\r\n        }\r\n\r\n        if (type == \"actionLauncher\") {\r\n           return new bizagi.rendering.tablet.actionLauncher(renderParams);\r\n        }\r\n\r\n        if (type == \"entityTemplate\") {\r\n           return new bizagi.rendering.tablet.entityTemplate(renderParams);\r\n        }\r\n\r\n        if (type == \"polymorphicLauncher\") {\r\n           return new bizagi.rendering.tablet.polymorphicLauncher(renderParams);\r\n        }\r\n\r\n        if (type == \"userfield\") {\r\n            return new bizagi.rendering.tablet.userfieldWrapper(renderParams);\r\n        }\r\n\r\n        // Check query renders (starts with \"query\")\r\n        //if (type.indexOf(\"query\") == 0) {\r\n        //    return this.getQueryRender(params);\r\n        //}\r\n\r\n        // Check search renders (starts with \"search\")\r\n        if (type.indexOf(\"search\") == 0) {\r\n            return this.getSearchRender(params);\r\n        }\r\n\r\n        if (type == \"document\") {\r\n            return new bizagi.rendering.tablet.document(renderParams);\r\n        }\r\n\r\n        if (type == \"image\") {\r\n            return new bizagi.rendering.tablet.image(renderParams);\r\n        }\r\n\r\n        if (type == \"fileprint\") {\r\n            return new bizagi.rendering.tablet.fileprint(renderParams);\r\n        }\r\n\r\n        if (type == \"geolocation\") {\r\n            return new bizagi.rendering.tablet.geolocation(renderParams);\r\n        }\r\n\r\n        if (type == \"collectionnavigator\") {\r\n            return new bizagi.rendering.tablet.collectionnavigator(renderParams);\r\n        }\r\n\r\n        // Check layout renders (starts with \"layout\")\r\n        if (type.indexOf(\"layout\") === 0) {\r\n            return self.getLayoutRender(params);\r\n        }\r\n\r\n        // Check range renders (starts with \"range\")\r\n        if (type.indexOf(\"range\") === 0) {\r\n            return self.getRangeRender(params);\r\n        }\r\n\r\n        //if (type == \"getUser\") {\r\n        //    return new bizagi.rendering.tablet.getUser(renderParams);\r\n        //}\r\n\r\n        if (type == \"activityCheckList\") {\r\n           return new bizagi.rendering.tablet.activityCheckList(renderParams);\r\n        }\r\n\r\n        if (type == \"mobiletext\")\r\n            return new bizagi.rendering.mobiletext(renderParams);\r\n\r\n        // Deprecated control\r\n        if (type == \"letter\")\r\n            return new bizagi.rendering.tablet.letter(renderParams);\r\n\r\n        // No type supported\r\n        //bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        //return null;\r\n        return this._super(params);\r\n    },\r\n\r\n    /**\r\n  * Returns the appropiatelayout render based on the type   \r\n  */\r\n    getLayoutRender: function (params) {\r\n        var type = params.type;        \r\n        var renderParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"layoutImage\")\r\n            return new bizagi.rendering.tablet.layoutImage(renderParams);\r\n\r\n        if (type == \"layoutLink\")\r\n            return new bizagi.rendering.tablet.layoutLink(renderParams);\r\n\r\n        if (type == \"layoutLabel\")\r\n            return new bizagi.rendering.tablet.layoutLabel(renderParams);\r\n\r\n        if (type == \"layoutText\")\r\n            return new bizagi.rendering.tablet.layoutText(renderParams);\r\n\r\n        if (type == \"layoutDateTime\")\r\n            return new bizagi.rendering.tablet.layoutDateTime(renderParams);\r\n\r\n        if (type == \"layoutNumber\")\r\n            return new bizagi.rendering.tablet.layoutNumber(renderParams);\r\n\r\n        if (type == \"layoutMoney\")\r\n            return new bizagi.rendering.tablet.layoutMoney(renderParams);\r\n\r\n        if (type == \"layoutPlaceholder\")\r\n            return new bizagi.rendering.tablet.layoutPlaceholder(renderParams);\r\n\r\n        if (type == \"layoutBoolean\")\r\n            return new bizagi.rendering.tablet.layoutBoolean(renderParams);\r\n\r\n        if (type == \"layoutUpload\")\r\n            return new bizagi.rendering.tablet.layoutUpload(renderParams);\r\n\r\n        return this._super(params);\r\n    },\r\n\r\n    /**\r\n     * Returns the appropiate search render based on the type     \r\n     */\r\n    getRangeRender: function (params) {\r\n        var type = params.type;        \r\n        var renderParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type === \"rangeDate\")\r\n            return new bizagi.rendering.tablet.rangeDate(renderParams);\r\n\r\n        if (type === \"rangeMoney\")\r\n            return new bizagi.rendering.tablet.rangeMoney(renderParams);\r\n\r\n        if (type === \"rangeNumber\")\r\n            return new bizagi.rendering.tablet.rangeNumber(renderParams);\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", params.data, \"error\");\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * Returns the appropiate search render based on the type         \r\n     */\r\n    getSearchRender: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var searchParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        type = type.replace(/tablet/, '');    \r\n\r\n        if (type == \"searchText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            // Creates one extended render\r\n            if (isExtended)\r\n                return new bizagi.rendering.tablet.extendedText(searchParams);\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.tablet.text(searchParams);\r\n        }\r\n\r\n        if (type == \"searchBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            // Creates one check render\r\n            if (display == \"check\")\r\n                return new bizagi.rendering.tablet.check(searchParams);\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.tablet.yesno(searchParams);\r\n        }\r\n\r\n        if (type == \"searchNumber\") {\r\n            // Creates a Scientific Notation render\r\n            if (data.properties.dataType == 29)\r\n                return new bizagi.rendering.tablet.numberScientificNotation(searchParams);\r\n\r\n            return new bizagi.rendering.tablet.number(searchParams);\r\n        }\r\n\r\n        if (type == \"searchMoney\")\r\n            return new bizagi.rendering.tablet.money(searchParams);\r\n\r\n        if (type == \"searchDate\")\r\n            return new bizagi.rendering.tablet.date(searchParams);\r\n\r\n        if (type == \"searchCombo\")\r\n            return new bizagi.rendering.tablet.combo(searchParams);\r\n\r\n        if (type == \"searchSuggest\")\r\n            return new bizagi.rendering.tablet.search(searchParams);\r\n\r\n        if (type == \"searchLabel\")\r\n            return new bizagi.rendering.tablet.label(searchParams);\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi tablet queryForm Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n *   -   Will apply a desktop form template\r\n */\r\n\r\n// Extends from form tablet base\r\nbizagi.rendering.tablet.form.extend(\"bizagi.rendering.tablet.queryForm\", {}, {});","/**\r\n *   Name: Bizagi tablet FormTemplate Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the form template class to adjust to tablet devices\r\n */\r\n\r\n// Extends from form tablet base\r\nbizagi.rendering.tablet.form.extend(\"bizagi.rendering.tablet.formTemplate\", bizagi.rendering.formTemplate.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.formTemplate.extend(\"bizagi.rendering.tablet.formTemplate\", {}, {});\r\n","/**\r\n *   Name: Bizagi Rendering Users Form\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script override rendering.form to create and update users\r\n */\r\n\r\n// Extends from form tablet base\r\nbizagi.rendering.tablet.form.extend(\"bizagi.rendering.tablet.usersForm\", {}, {});"]}