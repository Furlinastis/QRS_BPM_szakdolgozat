{"version":3,"sources":["jquery/common/bizagi.tabs/js/jquery.material.tab.js","jquery/common/bizagi.mfb/js/bizagi.mfb.js","jquery/common/bizagi.ripple/js/jquery.ripple.js","jquery/common/bizagi.grid/js/smartphone/bizagi.grid.smartphone.js","jquery/common/base/js/lib/mobile/jquery.tabs.js","jquery/rendering/js/base/bizagi.rendering.element.js","jquery/rendering/js/base/container/bizagi.rendering.container.js","jquery/rendering/js/base/render/bizagi.rendering.render.js","jquery/rendering/js/base/render/bizagi.rendering.render.base.js","jquery/rendering/js/base/container/bizagi.rendering.form.js","jquery/rendering/js/base/container/bizagi.rendering.formTemplate.js","jquery/rendering/js/base/container/bizagi.rendering.layout.js","jquery/rendering/js/base/container/bizagi.rendering.accordion.js","jquery/rendering/js/base/container/bizagi.rendering.accordionItem.js","jquery/rendering/js/base/render/bizagi.rendering.collectionnavigator.js","jquery/rendering/js/base/container/bizagi.rendering.group.js","jquery/rendering/js/base/container/bizagi.rendering.horizontal.js","jquery/rendering/js/base/container/bizagi.rendering.panel.js","jquery/rendering/js/base/container/bizagi.rendering.contentPanel.js","jquery/rendering/js/base/container/bizagi.rendering.searchForm.js","jquery/rendering/js/base/container/bizagi.rendering.tab.js","jquery/rendering/js/base/container/bizagi.rendering.tabItem.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.render.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.image.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.link.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.label.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.text.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.upload.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.boolean.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.dateTime.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.number.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.money.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.placeholder.js","jquery/rendering/js/base/container/bizagi.rendering.nestedForm.js","jquery/rendering/js/base/render/bizagi.rendering.combo.js","jquery/rendering/js/base/render/bizagi.rendering.check.js","jquery/rendering/js/base/render/bizagi.rendering.number.js","jquery/rendering/js/base/render/bizagi.rendering.numberScientificNotation.js","jquery/rendering/js/base/render/bizagi.rendering.date.js","jquery/rendering/js/base/render/bizagi.rendering.extendedText.js","jquery/rendering/js/base/render/bizagi.rendering.grid.js","jquery/rendering/js/base/render/bizagi.rendering.hidden.js","jquery/rendering/js/base/render/bizagi.rendering.label.js","jquery/rendering/js/base/render/bizagi.rendering.search.js","jquery/rendering/js/base/render/bizagi.rendering.text.js","jquery/rendering/js/base/render/bizagi.rendering.checkList.js","jquery/rendering/js/base/render/bizagi.rendering.range.js","jquery/rendering/js/base/render/bizagi.rendering.rangeDate.js","jquery/rendering/js/base/render/bizagi.rendering.rangeMoney.js","jquery/rendering/js/base/render/bizagi.rendering.rangeNumber.js","jquery/rendering/js/base/render/bizagi.rendering.actionLauncher.js","jquery/rendering/js/base/render/bizagi.rendering.entityTemplate.js","jquery/rendering/js/base/render/bizagi.rendering.polymorphicLauncher.js","jquery/rendering/js/base/render/bizagi.rendering.button.js","jquery/rendering/js/base/render/bizagi.rendering.fileprint.js","jquery/rendering/js/base/render/bizagi.rendering.link.js","jquery/rendering/js/base/render/bizagi.rendering.geolocation.js","jquery/rendering/js/base/render/bizagi.rendering.association.js","jquery/rendering/js/base/render/bizagi.rendering.upload.js","jquery/rendering/js/base/render/bizagi.rendering.ecm.js","jquery/rendering/js/base/render/bizagi.rendering.yesno.js","jquery/rendering/js/base/render/bizagi.rendering.letter.js","jquery/rendering/js/base/render/bizagi.rendering.formLink.js","jquery/rendering/js/base/render/bizagi.rendering.cascadingCombo.js","jquery/rendering/js/base/render/bizagi.rendering.list.js","jquery/rendering/js/base/render/bizagi.rendering.multiSelect.js","jquery/rendering/js/base/render/bizagi.rendering.searchList.js","jquery/rendering/js/base/render/bizagi.rendering.money.js","jquery/rendering/js/base/render/bizagi.rendering.radio.js","jquery/rendering/js/base/render/bizagi.rendering.image.js","jquery/rendering/js/base/render/bizagi.rendering.userfield.js","jquery/rendering/js/base/render/bizagi.rendering.document.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.column.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.readonly.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.combo.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.date.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.search.js","jquery/rendering/js/base/bizagi.rendering.base.factory.js","jquery/rendering/js/bizagi.rendering.device.factory.js","jquery/rendering/js/bizagi.rendering.facade.js"],"names":["$","updateIndicatorState","tabs","active_tab","direction","tabs_meta","getTabsMetaInfo","tabs_info","tabsMetaInfo","tab_info","tabMetaInfo","left","tmp_left","scrollLeftNormalized","clientWidth","scrollWidth","scrollLeft","width","tabs_meta_info","r","getBoundingClientRect","a","n","window","document","body","e","createElement","appendChild","createTextNode","dir","style","fontSize","height","position","top","overflow","type","removeChild","getScrollType","Number","NaN","getNormalizedScrollLeft","right","tab_meta_info","fn","material_bizagi_tabs","options","params","opts","extend","defaults","base","index","$el","undefined","$active","$active_content","init","el","$ind","self","this","$tabs","$content_tabs","updatePositions","active","$indicator","info","get","css","scroll_info","scrollSelectedIntoView","trigger","active_index_tab","each","element","addClass","data","hide","push","on","stopPropagation","prepend","find","removeClass","reference","show","preventDefault","getActiveTab","tab","contantTab","moveToNextTab","length","click","refreshPositions","console","error","mfb","overlay","opened","buttons","activePrincipalButton","placement","indexOf","efect","clickHoverOpt","toggleMethod","menuState","menuStateValue","isOpen","isClosed","mainButtonClass","restingIcon","activeIcon","children","remove","target","currentState","attachEvt","elems","evt","handler","i","len","addEventListener","configureBlur","blur","siblings","closest","html","kendo","template","useWithBlock","append","toggle","getAttribute","parentNode","button","principal","appendTo","bind","setAttribute","jQuery","bz_navigation_buttons","isDesign","lastActionExecuted","allowAddButtons","$element","empty","$container","result","caption","properties","$elementButton","replace","targetElement","offset","offsetWidth","$addButton","htmlButtons","heightAddButton","heightWrapper","heightButtons","$rightNavigationButton","rightNavigationButtonIsLocated","insertAfter","leftNavigationButtonIsLocated","$leftNavigationButton","ev","maxScrollLeft","detach","prependTo","processButtons","transparent","$temp","rippleEffect","eventPageX","eventPageY","inkX","inkY","maxDiameter","rippleColor","$inkSpan","$inkparent","$thisElement","eventType","getRippleColorFromTraverse","inkColor","fallBackColor","backgroundOrInhreitedBackGround","hex","luma","returnLumintion","fallback","getBgColor","$elementToCheckForBg","is","parent","colorToHex","getLuminationValue","getColorLuminance","getInkColor","inkDefaultColor","appendInkTo","inkClass","inkContainerClass","Math","max","outerWidth","outerHeight","idToUse","background-color","pageX","pageY","touch","originalEvent","touches","changedTouches","setTimeout","hexcolor","substring","rgb","parseInt","lum","String","c","resultHex","substr","round","min","toString","color","match","slice","widget","ui","bizagi_grid","attachHandlers","pager","_getComponent","pageNumber","attr","isValid","changePage","page","value","_input","items","actions","add","name","bizagi","localization","getResource","processAction","unselectRow","hasTotalizer","totalizer","overflowMenu","_row_buttons","totalData","draw","_super","verifyTotalizer","rows","rowButtons","actualActionSheet","util","isObjectEmpty","destroy","kendoMobileActionSheet","smartphone","stopLoading","drawRow","rowData","isNewRow","selectedBusinessKey","columnKeyIndex","success_callback","fail_callback","currentPage","total","records","newPage","startLoading","onPageRequested","onRowSelected","prototype","apply","arguments","onRowUnselected","_canShowButtons","_canShowRowButtons","getNewRowKeys","map","row","_showRowButtons","_hideRowButtons","_replaceElement","RegExp","isNewRecord","businessKey","bztabs","activeTab","tabNumber","activate","popUp","beforeActivate","tabCountPopup","tabHeader","tabCountReal","widthRow","floor","item","textContent","tabCurrent","eq","widthTabSelected","updateTabSize","first","origin","changeTab","hasClass","dataRef","tempTabs","moveAtTheEnd","currentTarget","tabChildren","when","domIncluded","done","event","headerWidth","innerWidth","totalWidth","j","pop","last","Class","ELEMENT_TYPE_CONTAINER","ELEMENT_TYPE_RENDER","ELEMENT_TYPE_COLUMN","renderFactory","dataService","resources","observableElement","disposed","initializeData","subscribers","xpathContext","getXpathContext","idPageCache","getPageCache","getFormContainer","key","getElementType","resize","size","focus","required","layout","isScrolledIntoView","effect","triggerGlobalHandler","triggerHandler","unbind","one","getRenderedElement","getMode","getParams","getFormType","ready","isReadyToSave","getCustomHandlers","dispose","off","override","disposeTime","isDisposed","processFailMessage","message","form","isOfflineForm","context","errorType","validationController","clearValidationMessages","showErrorMessage","container","idCase","JSON","parse","code","responseText","showAlertMessage","endLoading","beforeToRefresh","afterToRefresh","tryToExecuteFunction","xpath","id","rendering","TYPE_QUERY_FORM","uniqueId","ceil","random","editable","parseBoolean","visible","orientation","originalProperties","encode","childrenHash","elements","render","createRenderElement","createContainerElement","createFormElement","originalElement","inlineEdit","retype","clone","getRender","mode","processDuplicateRender","registerRender","getContainer","getElement","getElementsByType","child","clonedElement","displayName","isClone","cloneRender","internalRender","applyContainerDefaults","tag","requestedForm","renderContainerHtml","postRenderContainer","renderingDeferred","Deferred","renderContainer","isRendered","promise","isEmpty","alert","backgroundColor","changeBackgroundColor","changeVisibility","argument","changeEditability","replaceTag","replaceSelector","replaceChildrenTag","replaceChildrenHtml","replaceFirstWithoutPatterns","resolve","executeChildrenPostRender","configureHandlers","applyPlaceHolderPolyfill","configureDesignView","configureLayoutView","config","placeHolderConfig","forceApply","Placeholders","enable","childrenElements","childElement","postRenderElement","renderChildrenHtml","temp","renderElement","collectRenderValues","renderValues","canBeSent","collectData","hasChanged","collectRenderValuesQueryForm","canBeSentQueryForm","collectDataQueryForm","firstChild","getRenders","renders","getRendersByXpath","o","invalidElements","hasValidGrids","childrenPromises","getFocus","getCustomHandler","customHandlers","refreshContainer","args","multiaction","refreshControl","idRender","contexttype","idForm","unregisterChildren","removeActions","currentContainer","replaceWith","refreshActions","triggerChildrenActions","fail","always","refreshDesignContainer","messageValidation","l","triggerRenderChange","changed","registerActions","actionController","buildActions","unregisterRender","replaceChild","splice","getChildById","postRenderTimeout","maxRendersPerScreen","rendersExecuted","renderOptimization","startOptimization","stopOptimization","included","includedInResult","renderType","normalizeType","test","submitOnChange","maxLength","helpText","trim","textFormat","valueFormat","isHidden","editabilityEnabled","contextType","labelAlign","valueAlign","originalValue","previousValue","calculateInitialLayoutProperties","displayType","getDefaultLabelAlign","getDefaultValueAlign","getRTLAlign","renderWidth","calculateRenderWidth","labelWidth","valueWidth","label","control","layoutType","renderTemplateName","renderTemplate","getTemplate","replaceAll","isFullRender","detectDevice","isTabletDevice","parseFloat","fasttmpl","isExtendedText","isExtended","displayOptionClass","getDisplayOptionClass","labelAlignClass","getAlignClass","valueAlignClass","stringLabelWidth","stringValueWidth","printVersion","printversion","cssClass","cssclass","showFullRender","internalRenderControl","state","replaceControlHtml","resolveResult","asyncRenderDeferred","renderControl","renderReadOnly","configureSubmitOnChange","isLabelFormat","executePostRender","_element","internalPostRender","getControl","emptyControlByAsyncRenderDeferred","processLayout","postRenderPrintVersion","postRender","postRenderReadOnly","performExecutionModeMethods","performDesignModeMethods","configureHandlersQueryForm","configureHandlersReadOnly","internalSetInitialValue","log","internalSetInitialValueFlag","setDisplayValue","inlineAdd","grid","setValidationMessage","hasValue","isQueryForm","filter","forEach","messageData","isQuery","getValue","val","columnEditable","getColumn","isNumeric","controlValueIsChanged","format","changeColor","background","bold","changeFontBold","italic","changeFontItalic","underline","changeFontUnderline","strikethru","changeFontStrikethru","changeFontSize","changeRequired","changeCellVisibility","setValue","triggerEvents","identicalObjects","checkRequired","changeRequiredLabel","triggerRenderValidate","validateInputRetype","display","enableCheck","displayValue","getDisplayValue","sanitizeHTML","getLabel","mustImplement","getControlFiller","validationMessage","readOnlyValue","isObject","isString","decodedDisplayValue","changeDisplayOption","changeLabelAlign","alignType","changeValueAlign","customizeRenderWidth","setProperty","getElementsToStylize","originalColor","currentStyle","getFormattingLabel","compareValue","baseValue","defaultValue","forceCollectData","includes","compareValueObj","_findAction","guid","targetObj","guidAction","objectValue","valuestrikethru","valueunderline","newFontSize","emptyControlByChangeEditability","changeEditabilityCellControl","renderColumn","decorated","getDecorated","readyDeferred","onCellChange","labelElement","controlElement","pipe","controlFiller","currentElement","refreshDesignControl","cleanData","clearDisplayValue","input","updateOriginalValue","change","queryValue","searchType","typeSearch","rangeQuery","toUpperCase","newParameter","orderType","displayXpath","force","displayOnly","time","defaultControl","innerControl","isIE","autoScrollBottom","align","dependencies","action","conditions","expressions","simple","submitOnChangexpathContext","operator","argumentType","commands","command","elseCommands","addSubmitAction","bRefreshForm","notCollect","defer","BA_CONTEXT_PARAMETER_PREFIX","internalSubmitOnChange","reject","getCacheIdCase","cache","idCaseObject","parameters","percent2Number","getIdCase","getIdWorkitem","idWorkitem","getidTask","idTask","getSessionId","sessionId","changeCellColor","changeCellBackgroundColor","backgroundImage","needBGPaint","background-image","changeCellRequired","startActionExecution","actionExecutionDeferred","endActionExecution","readyActionExecution","isFromCreatedRow","columns","submitInvalidatePageCacheRequest","pageCacheToInvalidate","invalidatePageCache","isDesignMode","isExecutionMode","preventDefaultForAnchorTag","isSharepointContext","processLabelLayout","processControlLayout","warm","$label","changeFontColor","changeTextDecoration","$control","$elements","textDecoration","device","rendersById","rendersByXpath","rendersByXpathId","rendersByType","pageCacheId","displayAsReadOnly","userConfirmationMessage","hasRule","paramsRender","processPath","breadCrumb","split","validations","allowValidateAndSaveAction","enableActionValidateAndSave","initializeButtons","transitions","originalProcessButton","processButton","isRoutingDisabled","applicationParent","isOfflineFormsV2Supported","isMobileDevice","ordinal","next","nextWithoutValidations","submitData","cancel","back","createnewcase","validate","save","routing","executeRule","refresh","buildButtonStyle","useCustomButtons","unshift","setParam","property","xpathId","isArray","listRendesByType","getRenderByType","listRendesByTypeLength","renderKey","listRender","getRenderById","getGridByColumn","grids","columnsIds","helptext","queryForm","summaryForm","globalForm","complexGatewayContainer","activeTransitions","mainForm","controllers","validation","checkboxLabel","transitionId","strStyle","getContextType","getEndPointAction","formtype","getButtons","stopImmediatePropagation","buttonProperties","lastActionButton","routingDisabled","prop","hasOwnProperty","propagateExternalEvents","processDefer","contains","documentElement","preProcessButton","postProcessButton","responses","setLoaderDeferred","loaderDeferred","deleteLoaderDeferred","isLoaderDeferredSet","useOrSetLoaderDeferred","getLoaderPromise","appendWaitForLoader","create","then","getResolveOrReject","deferred","chrono","initAndStart","getAllTabs","getAllTabsLength","innerTabsLoading","loadingDeferred","performValidations","needsUserConfirmation","showConfirmationBox","submitForm","expandNotificationBox","customHandler","validateForm","saveForm","isNativeMobileDevice","allowOnlineActions","collectRenderValuesForSubmit","deferredsToWait","deferreds","saveParams","offlineType","internalSubmitFormOffline","internalSubmitForm","checkWidgetsData","isComplexGatewayPainted","getLastActionButton","countProps","showMessageBox","prepare","isSaveForDraft","online","loading","start","tryPushResponsePromise","responsePromise","stop","offlineAction","IdCase","caseNumber","CaseNumber","recreateNativeButtons","isValidResource","showNotification","text","bHasValidations","alertMessage","response","propertiesToDisplayMessages","validationToDisplayMessages","messages","modalError","failHandler","animate","scrollTop","submitDataAction","executeButtonAction","performAction","checkpointAction","commitAction","waitingDeferreds","prepareCheckpointAction","executeButton","prepareCommitAction","getButtonAction","forcePlanCompletion","surrogatekey","surrogateKey","flowControlDeferred","execute","sendRollbackAction","refreshForm","jqxhrList","abortAll","_","messageType","addValidationMessage","icon","itemAdditionalClass","autofocus","showValidationMessage","addErrorMessage","errorMessage","selectedTabs","getSelectedTabs","isRefresh","idStartScope","tabContainers","tabContainer","selected","processInternalSubmitAction","waitingTemplate","waitingOverlay","waitingMessage","tmpl","isSharePoint","canvas","getSize","getOffset","min-height","min-width","getFocusedElement","setFocusedElement","errorJson","setSize","isEmptyObject","rule","clearOnlyServer","join","executeInterface","interface","executeSAPConnector","guidsap","executeConnector","guidConnector","unbindActions","cancelPreviousRequest","focusIdentifier","IdScope","objMessage","strMessage","multiactionConnection","connection","abort","showErrorAlertDialog","buttonId","sendCheckpoint","url","checkpointUrl","commitLinkForm","commitUrl","rollbackLinkForm","rollbackUrl","getButton","getFloatingButton","configureNetworkHandlers","isConnected","BIZAGI_ENVIRONMENT","toLowerCase","handleConnectionChange","contextEvent","processTemplate","controls","processedTemplate","g1","g2","string","layoutCollection","getCss","layoutGuid","layoutguid","loadStyle","getContextEvent","stripslashes","desktop","allowAdd","withAddForm","allowEdit","withEditForm","allowDetail","allowDelete","keys","getKeys","pointer","totalRows","inlineAddRecords","showPreview","drawControls","drawActions","drawControl","drawForms","drawPreview","templateItem","hasData","getTotalRows","getRow","getNextRow","getPreviousRow","getFirstRow","getLastRow","getIndexes","setPointer","isTherePendingInlineRow","addKey","newId","removeKey","navigationform","getParameters","recordXpath","recordXPath","submitAddRequest","addGridRecord","addUrl","idEntity","submitEditRequest","editGridRecord","editUrl","submitDeleteRequest","deleteGridRecord","deleteUrl","submitSaveRequest","saveGridRecord","saveUrl","dataFail","submitRollbackRequest","rollbackGridAction","getRemoteData","dataUrl","getData","content","validateControls","collapse","expandedIcon","getExpandedIcon","collapsedIcon","getCollapsedIcon","expandedClassIcon","toogleContainer","bImmediate","panel","renderResult","performSearch","searchParams","submitSearch","refreshResults","collectSearchValues","isMapEmpty","maxRecords","maxRows","idSearchForm","allowFullSearch","criteria","totalPages","deviceMaxRecordsExceeded","onSearchFinished","errorObject","submitArray","operation","getCriteriaOperation","criteriaData","dataType","parseAdditionalProperties","tabItems","counter","tooltip","tabOrientation","loadOnDemand","formParams","containsFocusedElement","setActiveTab","selectedTab","renderTabContent","templateUri","useDefaultImage","getImage64","entity","getEntityImage64","getImageUri","hash","serviceLocator","getUrl","replaceMultiple","BA_ACTION_PARAMETER_PREFIX","services","service","BA_PAGE_CACHE","allowSendInMail","getValueFilesByData","dataFiles","valueAuxFiles","isContextContainerWidgetRender","getDataFilesWithoutScope","valueResult","err","warn","formContainer","getFilesDataForLayoutUploadControl","files","getUploadXpath","dateFormat","timeFormat","showTime","fullFormat","search","indexHour","date","dateFormatter","getDateFromInvariant","datePickerRegional","formatDate","dateObj","dateControl","getDateControl","INVARIANT_FORMAT","i18n","isNaN","Date","setHours","formattedDateTime","allowDecimals","getDefaultAllowDecimals","numDecimals","BIZAGI_DEFAULT_CURRENCY_INFO","decimalDigits","symbol","positiveFormat","negativeFormat","decimalSymbol","decimalSeparator","digitGroupSymbol","groupSeparator","groupDigits","getDefaultGroupDigits","colorize","colorizeOnNegative","formatCurrency","roundToDecimalPlace","showsymbol","currencySymbol","hasLocalData","enableTyping","complementData","isDependant","getParentCombo","valueControl","renderCombo","renderComboTemplate","dataPromise","getTemplateName","emptyValue","emptyLabelForCombo","getTemplateParams","unique","randomNumber","formatItem","showEmpty","showCurrentData","getDummyData","remoteDataLoaded","extra","recalculate","allowActions","msgObj","auxMsg","parseJSON","resetData","combo","getSelectedValue","currentValue","parseAdditionalValues","newItem","hidden","bCurrentDataFound","emptyFound","dataValue","Object","column","comboData","isExtraItem","escapeValue","mapValue","fromAction","validateValue","translated","findDataValueById","showLetters","randomId","setGroupDigits","dataTypeMinValue","calculateMinValue","dataTypeMaxValue","calculateMaxValue","isMobile","isAndroidDevice","numericInput","numeric","attachRetypeDouble","attachFormatCurrency","removeValidations","isValidRender","regions","language","digitGroupSeparator","minValue","getMinValue","maxValue","getMaxValue","percentage","inputValue","inputLength","xPath","oldVal","isInvalidFormat","tempValue","asNumber","messageToShow","isValidRenderMessage","executeFormatCurrencyPlugin","tmpData","isIE11","clipboardData","totalVal","eval","keydown","keyUnicode","charCode","keyCode","formatTimeout","clearTimeout","floatPart","selectionStart","selectionEnd","currentPosition","keyup","keypress","character","fromCharCode","removeTrailingZeros","positive","regExp","re","bValid","validMessage","thousands","changeMinValue","newValue","changeMaxValue","createTooltip","currentTitle","toolTipZindex","getMaxZindex","zIndex","numericSN","indexDateTimeSeparation","lastIndexOf","uppercaseDatePlaceholder","rtl","intHandler","isNow","timeControl","getTimeControl","mask","onChangeHandler","updatingTime","formatInvariant","setSeconds","setMilliseconds","hasMaxLines","maxLines","regularExpressionExpression","regularExpressionMessage","regularExpression","expression","isEmptyField","textarea","validationMessages","regEx","decodedValue","decodeURI","valueToDisplay","originalData","areThereEditableColumns","areThereTotalizedColumns","initProperties","enabledChecks","exclusiveChanges","originalEnabledChecks","columnProperties","groupBy","allowGrouping","isExclusive","hasExclusiveCheck","columnRender","singleInstance","totalize","reverse","showSummary","rowsPerPage","keyColumn","skipInitialLoad","allowMore","allowFilter","groupSummary","groupText","groupCollapsed","groupOrder","formShowMode","floatingHeader","sortBy","sort","sortOrder","order","addLabel","editLabel","deleteLabel","exportOptionsLabel","detailLabel","tableCssClass","alreadySaved","overrideGetRemoteData","changes","cellOverrides","isRTL","changeOrderData","rowKey","reverseDataRows","shift","removeRemainingColumns","numColumns","remainingColumns","getColumnType","columnIndex","getGridTemplate","applyTemplate","columnInitializers","initialize","encodeXpath","sortType","searchFilter","getGridData","spliceRowData","spliceIndex","spliceRowDataVisible","spliceRowDataEditable","rowTemplate","buildCellXpathFilter","disableServerGridValidations","dataResp","collectGridChange","isPressed","pressed","configureColumnSubmitOnChange","keysToDelete","columnExclusiveChanges","columnEnabledChecks","columnXpath","canColumnBeSent","checkedObject","v","cellOverride","getCellOverride","getCellValue","getCellCurrentValue","getControlCell","setError","changeCellEditability","changeCellProperties","changeCellMaxValue","changeCellMinValue","cleanCellData","saveGrid","tmpEditable","changeColumnsEditability","saveInlineAddedRows","refreshCell","cell","refreshGridCell","typeRender","getDepthData","isBoolean","updateAffectedCellManually","canBeExported","rowDeleted","hasErrors","newRows","getDataNewRows","merge","uniqueMessages","isValueValid","k","messagesLength","gridValidationMessage","setCellOverrides","len_v","newRecords","cellValue","getGridExportUrl","disposition","exportType","submitForGridChange","getEnabledChecks","xpathfilter","getGridDataExclusivesSelected","cleanNewRecords","hasColorHeader","headerFormat","isRTLOrientation","canBeExport","getExclusiveChangeByRow","idRow","obj","allowDinamiclabel","bindingValue","configureHelpText","searchForms","advancedSearch","allowSuggest","allowTyping","allowClear","searchLength","enableLocalStorage","expireCache","submitVersion","h_contexttype","enableQuerySuggestBehavior","term","regexC","getSearchData","hideStatus","selectedValue","regex","showDesignValidations","isNull","horizontal","checkListGroup","vertical","setRanageControls","minControl","maxControl","$maxCanvas","$minCanvas","renderRangeControl","$canvas","defineRangeControl","dateMin","suscribe","observer","notify","dateMax","getRenderProperties","typeRangeControl","renderProperties","moneyMin","money","moneyMax","numberMin","number","numberMax","typeForm","deferredActions","engine","templateEngine","autoGenerateData","templateGuid","selecttemplate","processPropertyValueArgs","pcaseId","pguidEntity","guidEntity","psurrogatedKey","surrogatedKey","ptags","tagslist","pmaxitems","maxItems","pactionXpath","xpathActions","processPropertyValueDataTmplArgs","ptemplateGuid","defaultAllowActions","allowactions","isHorizontal","allowSearch","templatetype","executeActionImmediately","processPropertyValueExecuteAction","pguidAction","pparameters","executeActions","notifyExecution","actionName","readOnly","templateDefined","actionManager","guidProcess","def","actionType","guidWFClass","hasStartForm","processStartForm","guidprocess","title","processActionFormCollection","processActionForm","addActionToQueue","actionsList","additionalXpaths","additionalXpath","idParentWorkitem","idWorkItem","entityXpath","newValueActionsList","removeActionToQueue","controlValue","countSameActions","count","getPropertiesActionLaucher","actionsLaucher","getTagList","processPropertyValueExecuteConstructor","pguidConstructor","guidConstructor","guidObject","displayNamee","taglist","submitOnChangexpathContextRow","runButtonAction","error_obj","getErrorFormatted","$context","filesCount","getFilePrintUrl","geolocation","navigator","allowUpdate","getCurrentPosition","succes_callback","getErrorMessage","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","performPrecision","latitude","longitude","toPrecision","allowFlip","flipped","flipstate","leftData","rightData","processPropertyValue","getFlipAssociation","flip","makeJsonBase","getColumnData","getRightAssociation","formatJson","associationData","leftId","association","isChecked","idRight","checked","removeElement","rightId","removeValue","addElement","leftXpath","rightXpath","leftFactName","rightFactName","values","maxFileSizeOfProperty","maxSize","maxFileSizeOfUser","BIZAGI_SETTINGS","UploadMaxFileSize","maxfiles","validExtensions","singleExtensions","defExtensions","getUploadAddUrl","haveFiles","noFiles","file","fileName","renderUploadItem","replaceFilesHtml","itemTemplate","getTemplateItemName","buildItemUrl","filename","getUploadFileUrl","fileId","deleteUploadItem","deleteUploadFile","grep","fileItem","newRow","buildAddParams","prefix","BIZAGI_SESSION_NAME","parents","setRenderRequired","maxFiles","q_xpath","showMetadata","listControl","fileProperties","idFileUpload","getFileExtension","isImage","lengthValues","idAttrib","renderFileLayout","loader","productBuildToAbout","replaceItemHtml","metadataTemplate","getECMMetadata","getFileProperties","metaData","ecm_ecmStatus","ecmStatus","ecm_isVisible","isVisible","ecm_allowUpdateMetadata","allowUpdateMetadata","ecm_allowDelete","ecm_allowUpdateContent","allowUpdateContent","ecm_allowView","allowView","ecm_allowCheckOut","allowCheckOut","ecm_allowCancelCheckOut","allowCancelCheckOut","ecm_allowEdit","idFileUploads","deviceType","extension","p_sessionId","cookie","getECMFileUrl","metaValues","deleteECMFile","lockUploadItem","checkOutFile","unlockUploadItem","cancelCheckOut","isEmptyValue","letterOpened","getLetterContent","getXpath","getContextXpath","saveLetterContent","getCanGenerateLetter","maximized","likeButton","editLinkForm","getFormLinkXpath","saveLinkForm","executeSubmitOnChange","submitCommitRequest","submitCheckpointRequest","submitDataRequest","dependants","parentCombo","initializingCascadingCombo","bindDependantCombo","configureReadOnlyHandlers","isInitialValue","deferredVisible","dependantCombo","onChangeFunction","refreshDependantCombo","focusDependant","cleanInput","isEventBinded","_data","unbindDependantCombo","dependant","parentValue","inputCombo","parentLength","parentArray","configured","itemSelected","listSize","Array","normalizeData","getDataValue","idToRemove","markAsChecked","some","found","canAddMoreItems","$tagsContainer","toArray","reduce","acc","getElementWidth","MORE_OPTION_WIDTH","styles","getComputedStyle","filterList","query","stringContainer","stringToSearch","addSelectedElements","findItemById","hasSearchForm","list","removeLastElement","getListItems","getUploadAddFileUrl","isUserPreference","isAutoWidth","isAutoHeight","getTemplateItem","currentUser","idUser","getPropertyData","charAt","buildItemUrlOffline","getFormParams","loadImageFromForm","imageId","offlineImageId","getOfflineImage","imageValue","getDataUrl","saveImageOffline","path","blobPromise","isNative","media","getImagePath","normalizeIOSFilePath","errorHandler","resolveLocalFileSystemURL","fileEntry","reader","FileReader","onloadend","blob","Blob","readAsArrayBuffer","blobImage","operationType","saveOfflineImage","blobError","buildFullItemUrl","getFileDependencies","fileDependencies","loadFile","renderUserfieldControl","extendedData","ajax","userEditableControl","getEditableControl","renderComplex","loadUserfieldReadOnly","userReadOnlyControl","getReadonlyControl","getReadonlyValue","setEditableValue","getEditableValue","getPropertyValue","propertyName","jqXHR","textStatus","errorThrown","getRenderElements","getServerResourceURL","resource","userfieldGuid","getRenderValue","showDialog","showPopup","initialParams","userfieldName","getUserfieldControl","isColumn","getControlXpathContext","getUserFieldInstance","replicateUserfieldMethods","userfieldInstance","downloadalldocuments","allowGenerate","preRenderControl","downloadAllDocuments","documents","getControlHtml","renderDocumentsHtml","renderActionsHtml","noActivateButton","allowgenerate","activateButton","getDocumentXpath","renderDocumentItem","joined","buildAllDocumentsUrl","getAllDocumentsDownloadUrl","caseId","workitemId","htmlControl","updateControlForPrintMode","validateContainer","replaceActionsHtml","buttonExecuted","generateLink","isPropagationStopped","documentTemplateGenerate","showDocumentPreview","deleteDocumentTemplate","resolveDeleteDocumentTemplate","xpathcontext","generateDocumentTemplate","resolveDocumentTemplateGenerate","messageText","autoOpenDocuments","returnCssTypeFile","lenght","redrawDocuments","documentContainer","renderAllDocumentDownload","removeDeleteButton","startIndex","restOfWord","finishIndex","downloadAllDocumentsLink","getErrorTemplate","getTemplateDownload","getTemplateReadonly","decoratedClass","decorateRenders","columnVisible","showColumn","readonly","isReadonly","instanceDecoratedClass","applyOverrides","propertyOverrides","invalidElement","overrideDecoratedRenderProperties","renderSummary","postRenderSummary","getCell","setSurrogateKey","defaultvalue","setDefaultValue","getCompositeValue","overrideProperties","getSortName","getAnyDecoratedInstance","getSortColumn","arrayEach","originalGetData","getDataForAllCells","findDataById","fetchingData","valueForGrid","tableCell","formattedDate","templates","loadOverrides","initAsyncStuff","loadTemplates","loadTemplate","templateDestination","templateService","resolvedTemplate","getCommonTemplate","containerParams","mobileform","formTemplate","usersForm","contentPanel","nestedForm","tabItem","accordion","accordionItem","group","mobilegroup","searchForm","renderParams","extendedText","mobiletext","check","yesno","cascadingCombo","multiSelect","radio","image","ecm","upload","searchList","letter","formLink","link","layoutImage","layoutLink","layoutLabel","layoutText","layoutDateTime","layoutNumber","layoutMoney","layoutPlaceholder","actionLauncher","layoutBoolean","layoutUpload","entityTemplate","polymorphicLauncher","userfieldWrapper","getSearchRender","getQueryRender","fileprint","collectionnavigator","getUser","rangeDate","rangeMoney","rangeNumber","activityCheckList","columnParams","exclusiveCheck","uploadecm","numberScientificNotation","queryExtendedText","queryText","queryCheck","queryYesNo","queryNumber","queryMoney","queryDate","queryCombo","queryCascadingCombo","querySuggest","queryLabel","queryList","queryMultiSelect","querySearch","queryRadio","queryState","queryCaseState","queryProcess","querySearchUser","execution_device","cachedFactory","getRenderFactory","print","factory","tablet","isSmartphoneDevice","getDataService","executionDeferred","deviceFactory","getFactory","subscribe","unsubscribe","publish","update","doc","ownerDocument","location","queryString","getQueryString","process","refreshing","pathProcess","insertBefore","lastWidth","lastHeight","resizeInPopUpHTML","configureRefresh","configureRouting","configureRenderError","configureResize","configureGlobalHandlers","stopAndLog","enableE2EInterface","errorTemplate","getFormData","transformGridControl","processForm","getFailDeferred","jsonErrorMessage","BIZAGI_ORIENTATION","buttonsForm","refreshParams","fastEmpty","canvasParent","resizeTimeout","forceResize","triggerParams","heightActivitiFormContainer","renderForm","buttonContainer","heightButtonContainer","renderBehavior","heightCanvas","innerHeight"],"mappings":"CAIA,SAAWA,GAkHP,SAASC,EAAqBC,EAAMC,EAAYC,GAC5C,IAAIC,EAAYC,EAAgBJ,EAAMC,EAAYC,GAC9CG,EAAYF,EAAUG,aACtBC,EAAWJ,EAAUK,YAErBC,EAAO,EACX,GAAIJ,GAAaE,EAAU,CACvB,IAAIG,EAAW,QAAUR,EAAYG,EAAUM,qBAAuBN,EAAUO,YAAcP,EAAUQ,YAAcR,EAAUS,WAChIL,EAAOF,EAASE,KAAOJ,EAAUI,KAAOC,EAE5C,OACID,KAAMA,EACNM,MAAOR,EAAWA,EAASQ,MAAQ,GAI3C,SAASX,EAAgBJ,EAAMC,EAAYC,GACvC,IAAIc,OAAiB,EACrB,GAAIhB,EAAM,CACN,IAAIiB,EAAIjB,EAAKkB,wBACbF,GACIJ,YAAaZ,EAAOA,EAAKY,YAAc,EACvCE,WAAYd,EAAOA,EAAKc,WAAa,EACrCH,qBAAsBX,EAiBlC,SAAiCA,EAAME,GACnC,IAAIiB,EAAInB,EAAKc,WACb,GAAI,QAAUZ,EACV,OAAOiB,EACX,IAAIC,EAYR,SAAuBpB,GACnB,IAAKA,IAASqB,OAAOC,SAASC,KAC1B,MAAO,gBAEX,IAAIC,EAAIH,OAAOC,SAASG,cAAc,OACtCD,EAAEE,YAAYJ,SAASK,eAAe,SACtCH,EAAEI,IAAM,MACRJ,EAAEK,MAAMC,SAAW,OACnBN,EAAEK,MAAMd,MAAQ,MAChBS,EAAEK,MAAME,OAAS,MACjBP,EAAEK,MAAMG,SAAW,WACnBR,EAAEK,MAAMI,IAAM,UACdT,EAAEK,MAAMK,SAAW,SACnBZ,SAASC,KAAKG,YAAYF,GAC1BW,KAAO,UACHX,EAAEV,WAAa,EACfqB,KAAO,WAEPX,EAAEV,WAAa,EACf,IAAMU,EAAEV,aAAeqB,KAAO,aAGlC,OADAb,SAASC,KAAKa,YAAYZ,GACnBW,KAlCCE,CAAcrC,GACtB,GAAI,kBAAoBoB,EACpB,OAAOkB,OAAOC,IAClB,OAAQnB,GACJ,IAAK,WACD,OAAOI,EAAEX,YAAcW,EAAEZ,YAAcO,EAC3C,IAAK,UACD,OAAOK,EAAEX,YAAcW,EAAEZ,YAAcO,EAE/C,OAAOA,EA9B8BqB,CAAwBxC,EAAME,GAAa,EACxEW,YAAab,EAAOA,EAAKa,YAAc,EACvCJ,KAAMQ,EAAER,KACRgC,MAAOxB,EAAEwB,OAGjB,IAAIC,OAAgB,EAKpB,OAJI1C,IAAQ,IAAUC,IAClByC,EAAgBzC,EAAWiB,0BAI3BZ,aAAcU,EACdR,YAAakC,GApJrB5C,EAAE6C,GAAGC,qBAAuB,SAAUC,EAASC,GAE3C,IAAIC,EAAOjD,EAAEkD,UAAWlD,EAAE6C,GAAGC,qBAAqBK,SAAUJ,GAExDK,GACAC,MAAO,EACPnD,QACAoD,SAAKC,EACLC,aAASD,EACTE,qBAAiBF,EACjBG,KAAM,SAASC,EAAIX,GACf,IAGIY,EAHAC,EAAOC,KACPC,EAAQ/D,EAAE,cAAe2D,GACzBK,EAAgBH,EAAKP,IAAMtD,EAAE2D,GAIjC,SAASM,EAAgBC,EAAQC,GAC7B,QAA0B,IAAfA,EAA2B,CAClC,IAAIC,EAAOnE,EAAqB8D,EAAMM,IAAI,GAAIH,EAAOG,IAAI,GAAIpB,EAAK7C,WAClE+D,EAAWG,IAAI,OAAQF,EAAKzD,MAAM2D,IAAI,QAASF,EAAKnD,OAGxD,IAAIsD,EAAcC,uBAAuBT,EAAMM,IAAI,GAAIH,EAAOG,IAAI,GAAIpB,EAAK7C,WAC3E2D,EAAM/C,WAAWuD,GACjBR,EAAMU,QAAQ,kBAAmBnE,EAAgByD,EAAMM,IAAI,GAAIH,EAAOG,IAAI,GAAIpB,EAAK7C,YAVvFyD,EAAKR,MAAQJ,EAAKyB,iBAalB1E,EAAE,aAAc+D,GAAOY,KAAK,SAAStB,EAAOuB,GACpCvB,IAAUJ,EAAKyB,kBACfb,EAAKL,QAAUxD,EAAE8D,MACjBD,EAAKL,QAAQqB,SAAS,WAGtB7E,EAAEA,EAAE4E,GAASE,KAAK,aAAcd,GAAee,OAEnDlB,EAAK3D,KAAK8E,MAAM3B,MAAOA,EAAOuB,QAASA,MAG3Cf,EAAKJ,gBAAkBzD,EAAE6D,EAAKL,QAAQsB,KAAK,aAAcd,GAGzDC,EAAgBJ,EAAKL,SAErBO,EAAMkB,GAAG,QAAS,cAAe,SAAUvD,GAGvC,GAFAA,EAAEwD,uBAEkB,IAATtB,EAAqB,CAC5BA,EAAO5D,EAAE,sCACT,IAAIoE,EAAOnE,EAAqB8D,EAAMM,IAAI,GAAIR,EAAKL,QAAQa,IAAI,GAAIpB,EAAK7C,WACxEwD,EAAKU,IAAI,OAAQF,EAAKzD,MAAM2D,IAAI,QAASF,EAAKnD,OAC9C2C,EAAOG,EAAMoB,QAAQvB,GAAMwB,KAAK,qBAGpCvB,EAAKL,QAAQ6B,YAAY,UACzBxB,EAAKJ,gBAAgBsB,OAErBlB,EAAKL,QAAUxD,EAAE8D,MAEjB,IAAIwB,EAAYzB,EAAKL,QAAQsB,KAAK,aAClCjB,EAAKR,MAAQQ,EAAKL,QAAQsB,KAAK,SAE/BjB,EAAKJ,gBAAkBzD,EAAEsF,EAAWtB,GAEpCH,EAAKL,QAAQqB,SAAS,UAGtBZ,EAAgBJ,EAAKL,QAASI,GAC9BG,EAAMU,QAAQ,gBAAiBpB,MAAOQ,EAAKR,QAE3CQ,EAAKJ,gBAAgB8B,OACrB7D,EAAE8D,oBAIVC,aAAc,WACV,OACIpC,MAAOS,KAAKT,MACZqC,IAAK5B,KAAKN,QACVmC,WAAa7B,KAAKL,kBAG1BmC,cAAe,WACX,IAAIvC,EAAUS,KAAKT,MAAQ,EAAKS,KAAK5D,KAAK2F,OAAU/B,KAAKT,MAAQ,EAAI,EACrES,KAAK5D,KAAKmD,GAAOuB,QAAQkB,SAE7BC,iBAAkB,WACdjC,KAAK5D,KAAK4D,KAAKT,OAAOuB,QAAQkB,UAKtC,MAAsB,iBAAX/C,GAAuBA,QAEX,KADnBK,EAAOpD,EAAE8D,MAAMgB,KAAK,UAEhBkB,QAAQC,MAAM,6CAEX7C,EAAKL,GAASC,IAGdc,KAAKa,KAAK,WACbvB,EAAKM,KAAKI,KAAMd,GAChBhD,EAAE8D,MAAMgB,KAAK,OAAQ1B,MAKjCpD,EAAE6C,GAAGC,qBAAqBK,UACtB/C,UAAW,MACXsE,iBAAkB,GAoFtBF,uBAAyB,SAAUtE,EAAMC,EAAYC,GACjD,IAAIC,EAAYC,EAAgBJ,EAAMC,EAAYC,GAC9CG,EAAYF,EAAUG,aACtBC,EAAWJ,EAAUK,YAEzB,GAAKD,GAAaF,EAAlB,CAGA,IAAIgE,OAAc,EAMlB,OALI9D,EAASE,KAAOJ,EAAUI,KAC1B4D,EAAchE,EAAUS,YAAcP,EAASE,KAAOJ,EAAUI,MACzDF,EAASkC,MAAQpC,EAAUoC,QAClC4B,EAAchE,EAAUS,YAAcP,EAASkC,MAAQpC,EAAUoC,QAE9D4B,IAjNf,CAoNGvE,GC/MH,SAAWA,GACPA,EAAE6C,GAAGqD,IAAM,SAAUnD,GACjB,aAEA,IAMIc,EAAOC,KACPqC,GACAvB,QAAS5E,EAAE,8CACXoG,QAAQ,IAGZrD,EAAUA,OACFsD,QAAUtD,EAAQsD,YAC1BtD,EAAQuD,sBAAwBvD,EAAQuD,wBAAyB,EACjEvD,EAAQwD,eAAyC,IAAtBxD,EAAQwD,YAAwE,KAdzF,oBAAqB,oBAAqB,oBAAqB,qBAcNC,QAAQzD,EAAQwD,WAAoBxD,EAAQwD,UAAmC,oBAC1JxD,EAAQ0D,WAAiC,IAAlB1D,EAAQ0D,QAAgE,KAhB7E,aAAc,cAAe,qBAAsB,gBAgBFD,QAAQzD,EAAQ0D,OAAgB1D,EAAQ0D,MAAyB,cACpI1D,EAAQ2D,cAAgB3D,EAAQ2D,eAAgB,QAChD3D,EAAQ4D,aAAe5D,EAAQ4D,cAAgB,kBAC/C5D,EAAQ6D,UAAY7D,EAAQ6D,WAAa,iBACzC7D,EAAQ8D,eAAkB9D,EAAQ8D,gBAAkB,SACpD9D,EAAQ+D,OAAS/D,EAAQ+D,QAAU,OACnC/D,EAAQgE,SAAWhE,EAAQgE,UAAY,SACvChE,EAAQiE,gBAAkBjE,EAAQiE,iBAAmB,8BACrDjE,EAAQkE,YAAclE,EAAQkE,aAAe,kBAC7ClE,EAAQmE,WAAanE,EAAQmE,YAAc,mBAM3ClH,EAAE8D,MAAMqD,SAAS,yBAAyBC,SAK1C,IA6BIC,EACAC,EAKJ,SAASC,EAAUC,EAAOC,EAAKC,GAC3B,IAAK,IAAIC,EAAI,EAAGC,EAAMJ,EAAM3B,OAAQ8B,EAAIC,EAAKD,IACzCH,EAAMG,GAAGE,iBAAiBJ,EAAKC,GAAS,GAIhD,SAASI,EAAclD,EAASmD,GACzBA,GACCnD,EAAQoD,WAAWnD,SAAS,gCAC5BD,EAAQqD,QAAQ,eAAeD,WAAWnD,SAAS,kCAEnDD,EAAQoD,WAAW3C,YAAY,gCAC/BT,EAAQqD,QAAQ,eAAeD,WAAW3C,YAAY,iCAmE9D,IACI6C,EADWC,MAAMC,SAjHjB,siDAiHkCC,cAAc,GACzCD,CAASrF,GAEK,YAArBA,EAAQb,SACR4B,KAAKqB,QAAQ+C,GAEbpE,KAAKwE,OAAOJ,GAIhB,IAAIK,EAASxF,EAAQsD,QAAQR,OAAS,EAjEtC,SAAsB4B,GAElB,IADAJ,EAASI,EAAIJ,OACNA,IAAWA,EAAOmB,aAAazF,EAAQ4D,eAE1C,KADAU,EAASA,EAAOoB,YAEZ,OAKR,GAFAnB,EAAeD,EAAOmB,aAAazF,EAAQ6D,aAAe7D,EAAQ+D,OAAS/D,EAAQgE,SAAWhE,EAAQ+D,OAElG/D,EAAQuD,uBAA0C,SAAjBgB,EAAyB,CAC1D,IAAIoB,EAAS3F,EAAQsD,QAAQ,GACzBtD,EAAQ+C,OACR/C,EAAQ+C,MAAM2B,EAAKzH,EAAEkD,OAAOwF,GAASC,WAAW,IAAQ7E,MAE5DgE,EAAc9H,EAAEqH,IAAS,GAGR,SAAjBC,GAA4BnB,EAAQC,QASpCD,EAAQvB,QAAQwC,SAChBU,EAAc9H,EAAEqH,IAAS,KATzBlB,EAAQvB,QAAQgE,SAASvB,GAAQwB,KAAK,QAAS,WAC3C/E,KAAKsD,SACLjB,EAAQC,QAAS,EACjBiB,EAAOyB,aAAa/F,EAAQ6D,UAAW,SACvCkB,EAAc9H,EAAEqH,IAAS,KAE7BS,EAAc9H,EAAEqH,IAAS,IAM7BlB,EAAQC,QAAUD,EAAQC,OAE1BiB,EAAOyB,aAAa/F,EAAQ6D,UAAWU,IAe3C,SAA8BG,GACtB1E,EAAQ+C,QACR2B,EAAIjC,iBACJzC,EAAQ+C,MAAM2B,GAAOkB,WAAW,GAAQ7E,QAehDyD,EAAUvH,EAAE,IAAM+C,EAAQ4D,aAAe,KAAO5D,EAAQ2D,cAAgB,OAAS3D,EAAQiE,gBAAiBlD,MAAO,QAASyE,GAG1HhB,EAAUvH,EAAE,gCAAiC8D,MAAO,QAjCpD,SAA0B2D,GACtB,IAAIpE,EAAQrD,EAAE8D,MAAMgB,KAAK,SACrB4D,EAAS3F,EAAQsD,QAAQhD,GAE7BrD,EAAE,0BAA2B6D,GAAMiC,QAE/B/C,EAAQ+C,QACR2B,EAAIjC,iBACJzC,EAAQ+C,MAAM2B,EAAKzH,EAAEkD,OAAOwF,GAASC,WAAW,IAAS7E,UA/IzE,CA4KGiF,QAGH,SAAW/I,GACPA,EAAE6C,GAAGmG,sBAAwB,SAAUjG,GAEnC,IACIsD,GAFJtD,EAAUA,OAEYsD,YAClB4C,EAAWlG,EAAQkG,WAAY,EAC/BC,EAAqBnG,EAAQmG,qBAAsB,EACnDC,EAAkBpG,EAAQoG,kBAAmB,EAC7CC,EAAWtF,KASfsF,EAASC,QACTD,EAASvE,SAAS,0BAElB,IAAIyE,EAAatJ,EARO,2CASxBsJ,EAAWV,SAASQ,GA+GpB,OA5GqB,WAEjB,IADA,IAAIG,EAtBK,EAuBAlG,EAAQ,EAAGA,EAAQgD,EAAQR,OAAQxC,KACvC,SAASqF,GACN,IAAIc,EAAUd,EAAOe,WAAWD,QAC5BE,EAAkB1J,EAhBd,4EAgB+B2J,QAAQ,MAAOH,IAClDvH,EAAS,EAoBbyH,EACKzE,GAAG,QAnBmB,WACvBqE,EAAW7E,QAAQ,kBACf2E,SAAUM,EACVhB,OAAQA,IAGZ,IAAIkB,EAAgBN,EAAWjF,IAAI,GAC/BvD,EAAc8I,EAAc9I,YAC5B+I,EAASZ,EAAW,GAAK,EAEzBW,EAAc7I,YAAcD,IACxBmB,EAASnB,EAAe8I,EAAc5I,WAAciB,EAASnB,EAAe+I,EAEvE5H,EAAS2H,EAAc5I,WAAc4I,EAAc5I,aAAc4I,EAAc5I,WAAciB,GAAU2H,EAAc5I,WAAa6I,OAO9IjB,SAASU,GAEdrH,EAASsH,EAASA,EAASG,EAAerF,IAAI,GAAGyF,YAnDhD,EAwBJ,CA6BCzD,EAAQhD,GAAOqF,QAIrB,GAAIO,EAAU,CACV,IAAIc,EAAa/J,EAlDD,kJAoDZmJ,IACAY,EAAWjE,MAAM,WACbwD,EAAW7E,QAAQ,iBAGvBsF,EAAWnB,SAASQ,IAGxB,IAAIY,EAAcV,EAAWjF,IAAI,GAE7B4F,EAAkBF,EAAW1F,IAAI,GAAGtD,YACpCmJ,EAAgBd,EAAS/E,IAAI,GAAGtD,YAChCoJ,EAAiBH,EAAYjJ,YAG7BqJ,EAAyBpK,EAhET,2JAiEhBqK,EAAiCF,EAAiBD,EAAgBD,EAElEI,GAAkCD,EAAuBE,YAAYhB,GAEzEc,EAAuBnF,GAAG,QAAS,WAC/B+E,EAAYhJ,YAAc,KAG9B,IAAIuJ,GAAgC,EAChCC,EAAwBxK,EAzET,yJA4EnBwK,EAAsBvF,GAAG,QAAS,WAC9B+E,EAAYhJ,YAAc,KAG9BsI,EAAWrE,GAAG,SAAU,SAASwF,GAC7B,IAAIb,EAAgBa,EAAGpD,OACnBqD,EAAgBd,EAAc7I,YAAc6I,EAAc9I,YAC1DE,EAAa4I,EAAc5I,WAEX,IAAfA,GAAoBuJ,IACrBA,GAAgC,EAChCC,EAAsBG,UAGtBN,GAAkCrJ,IAAe0J,IACjDL,GAAiC,EACjCD,EAAuBO,WAGtBJ,GAAiCvJ,EAAa,IAE/CwJ,EAAsBI,UAAUxB,GAChCmB,GAAgC,IAG/BF,GAAkCrJ,EAAa0J,IAChDL,GAAiC,EACjCD,EAAuBE,YAAYhB,MAIhB,cAAvBJ,GACImB,IACAL,EAAYhJ,WAAcgJ,EAAYjJ,YAAciJ,EAAYlJ,cAMhF+J,GAEQvB,GApIhB,CAuIGP,QC5TH,SAAW/I,GACP,IAAI8K,EAEJ,QAA4B,IAAjB,EAA8B,CAGrC,IAAIC,EAAQ/K,EAAE,gDAAgD4I,SAAS,QAEvEkC,EAAcC,EAAMzG,IAAI,mBAExByG,EAAM3D,SAKVpH,EAAE6C,GAAGmI,aAAe,SAAUjI,GAE1B,IAAIE,EAAOjD,EAAEkD,UAAWlD,EAAE6C,GAAGmI,aAAa7H,SAAUJ,GAGpD,OAAOe,KAAKa,KAAK,WACb3E,EAAE8D,MAAMmB,GAAG,QAAS,SAAUvD,GAC1B,IACAuJ,EACAC,EACAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EATIC,EAAezL,EAAE8D,MAMrB4H,EAAYhK,EAAEW,KAQd,SAASsJ,IACL,MAAqB,IAAjB1I,EAAK2I,SACE3I,EAAK2I,SAiKhC,SAAqBxC,EAAUyC,GAC3B,IAAIC,EACAC,EACAC,EACAC,EAxE0B7C,EA4E6BA,EA5EnB8C,EA4E6BL,EAArEC,EA3EA,SAASK,EAAWC,GAEhB,OAAIA,EAAqB9H,IAAI,oBAAsBwG,EAEvCsB,EAAqBC,GAAG,QAAsDH,GAAYpB,EAAxDqB,EAAWC,EAAqBE,UAGnEF,EAAqB9H,IAAI,mBAIjC6H,CAAW/C,GAmElB2C,EAAM/L,EAAE6C,GAAGmI,aAAauB,WAAWT,GAU3BG,GAPRD,EAAOhM,EAAE6C,GAAGmI,aAAawB,mBAAmBT,KAGhC,IAGJC,GAAQ,GACUhM,EAAE6C,GAAGmI,aAAayB,kBAAkBV,EAAK,IAEzC/L,EAAE6C,GAAGmI,aAAayB,kBAAkBV,EAAK,IAI7C/L,EAAE6C,GAAGmI,aAAayB,kBAAkBV,GAAM,KA/FpE,IAAkC3C,EAAU8C,EAiGxC,OAAOD,EA3LgBS,CAAYlB,EAAYvI,EAAK0J,iBAoB5C,GA3BAnB,EAAaC,EAaW,IAApBxI,EAAK2J,cACLpB,EAAaC,EAAaxD,QAAQhF,EAAK2J,cAGQ,GAA/CpB,EAAWpG,KAAK,IAAMnC,EAAK4J,UAAUhH,QAErC2F,EAAWlD,OAAO,gBAAkBrF,EAAK6J,kBAAoB,kBAAoB7J,EAAK4J,SAAW,qBAGrGtB,EAAWC,EAAWpG,KAAK,IAAMnC,EAAK6J,kBAAoB,QAAe7J,EAAK4J,WAErExH,YAAY,YAGhBkG,EAAStJ,WAAasJ,EAAStK,QAAS,CAKzC,GAHAoK,EAAc0B,KAAKC,IAAIxB,EAAWyB,aAAczB,EAAW0B,oBAGf,IAAhCzB,EAAa3G,KAAK,WAA4D,IAA/B2G,EAAa3G,KAAK,UACzEwG,EAAcG,EAAa3G,KAAK,eAGhC,QAA2D,IAA/C2G,EAAa3G,KAAK,0BAA0F,IAA9C2G,EAAa3G,KAAK,yBAAgC,CACxH,IAAIqI,EAAU1B,EAAa3G,KAAK,yBAI5BwG,EAFAtL,EAAEmN,GAAStH,OAAS,EAEN7F,EAAEmN,GAAS7I,IAAI,oBAGfqH,SAIlBL,EAAcK,IAItBJ,EAASjH,KAAMrC,OAAQoJ,EAAapK,MAAOoK,EAAa+B,mBAAoB9B,IAKhF,GAAiB,UAAdI,EACCT,EAAavJ,EAAE2L,MACfnC,EAAaxJ,EAAE4L,WACZ,GAAiB,eAAd5B,EAA4B,CAClC,IAAI6B,EAAS7L,EAAE8L,cAAcC,QAAQ,IAAM/L,EAAE8L,cAAcE,eAAe,GAC1EzC,EAAasC,EAAMF,MACnBnC,EAAaqC,EAAMD,MAGvBnC,EAAQF,EAAaO,EAAW3B,SAASlJ,KAAO4K,EAAStK,QAAU,EACnEmK,EAAQF,EAAaM,EAAW3B,SAAS1H,IAAMoJ,EAAStJ,SAAW,EACnEsJ,EAASjH,KAAMnC,IAAKiJ,EAAO,KAAMzK,KAAMwK,EAAO,OAAQtG,SAAS,WAE/D8I,WAAW,WACPpC,EAASlG,YAAY,YACtB,UAMfrF,EAAE6C,GAAGmI,aAAa7H,UACd2J,kBAAmB,SACnBD,SAAU,MAGVF,gBAAiB,UACjBf,SAAU,GAGVgB,YAAa,IA4BjB5M,EAAE6C,GAAGmI,aAAawB,mBAAqB,SAAUoB,GACzCA,EAAWA,EAASC,UAAU,GAAlC,IACIC,EAAMC,SAASH,EAAU,IAM7B,MADW,OAJFE,GAAO,GAAM,KAIE,OAHfA,GAAO,EAAK,KAGgB,OAF5BA,GAAO,EAAK,MASzB9N,EAAE6C,GAAGmI,aAAayB,kBAAoB,SAAUmB,EAAUI,IAEtDJ,EAAWK,OAAOL,GAAUjE,QAAQ,cAAe,KACtC9D,OAAS,IAClB+H,EAAWA,EAAS,GAAKA,EAAS,GAAKA,EAAS,GAAKA,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAG9FI,EAAMA,GAAO,EAGb,IAAqBE,EAAGvG,EAApBwG,EAAY,IAChB,IAAKxG,EAAI,EAAGA,EAAI,EAAGA,IACfuG,EAAIH,SAASH,EAASQ,OAAW,EAAJzG,EAAO,GAAI,IAExCwG,IAAc,MADdD,EAAInB,KAAKsB,MAAMtB,KAAKuB,IAAIvB,KAAKC,IAAI,EAAGkB,EAAKA,EAAIF,GAAO,MAAMO,SAAS,MAC3CH,OAAOF,EAAErI,QAGrC,OAAOsI,GAKXnO,EAAE6C,GAAGmI,aAAauB,WAAa,SAAUuB,GAErC,MAAyB,MAArBA,EAAIM,OAAO,EAAG,GACPI,OAEXV,EAAMA,EAAIW,MAAM,0EACc,IAAfX,EAAIjI,OAAgB,KACjC,IAAMkI,SAASD,EAAI,GAAI,IAAIS,SAAS,KAAKG,OAAO,IAChD,IAAMX,SAASD,EAAI,GAAI,IAAIS,SAAS,KAAKG,OAAO,IAChD,IAAMX,SAASD,EAAI,GAAI,IAAIS,SAAS,KAAKG,OAAO,GAAK,IAlM/D,CAuOG3F,QC9NH,SAAW/I,GACPA,EAAE2O,OAAO,4BAA6B3O,EAAE4O,GAAGC,aAKvCC,eAAgB,WACZ,IAAIjL,EAAOC,KAGPiL,EAAQlL,EAAKmL,cAAc,SAkB/B,GAjBAD,EAAM9J,GAAG,QAAS,iBAAkB,WAChC,IAAIgK,EAAajP,EAAE8D,MAAMoL,KAAK,oBAC1BD,GAAcpL,EAAKsL,WACnBtL,EAAKuL,WAAWH,KAIxBF,EAAM9J,GAAG,SAAU,QAAS,WACxB,IAAIoK,EAAOvL,KAAKwL,MAChB,GAAID,GAAQxL,EAAKsL,UAAW,CACxB,IAAII,EAASzL,KACbD,EAAKuL,WAAWC,EAAiB,aAAyB,WACtDE,EAAOD,MAAQzL,EAAKwL,UAKK9L,MAAjCM,EAAKmL,cAAc,WAAyB,CAC5C,IAAIQ,KACA3L,EAAKd,QAAQ0M,QAAQC,KACrBF,EAAMxK,MACF2K,KAAMC,OAAOC,aAAaC,YAAY,yBACtCjN,GAAI,WACAgB,EAAKkM,cAAc,OACnBlM,EAAKmM,iBAKbnM,EAAKd,QAAQ0M,QAAQQ,cACrBT,EAAMxK,MACF2K,KAAM,YACN9M,GAAI,WACAgB,EAAKqM,eAKjBrM,EAAKmL,cAAc,WAAW5J,KAAK,eAAe+K,cAAeX,MAAOA,IAI5E,IAAIY,EAAevM,EAAKmL,cAAc,cAClCoB,GACAA,EAAanL,GAAG,QAAS,gBAAiB,WACtCpB,EAAKkM,cAAc/P,EAAE8D,MAAMoL,KAAK,sBAO5CgB,UAAW,WACIpM,KACNf,QAAQsN,aAMjBC,KAAM,WACF,IAAIzM,EAAOC,KACXD,EAAK0M,SACL,IAAIC,EAAkB3M,EAAKd,QAAQ0M,QAAQS,UAC3C,GAA6B,GAAzBrM,EAAKiB,KAAK2L,KAAK5K,OAAa,CAC5B,IAAI6K,EAAc7M,EAAKmL,cAAc,cACjC0B,GACAA,EAAW3L,OAEflB,EAAKe,QAAQC,SAAS,yBAGtB2L,SACqC,IAA1B3M,EAAK8M,mBAAqCf,OAAOgB,KAAKC,cAAchN,EAAK8M,oBAChF9M,EAAK8M,kBAAkB7L,KAAK,0BAA0BgM,UAG1DjN,EAAK8M,kBAAoB9M,EAAKe,QAAQQ,KAAK,6BAA6B2L,0BAI5EnB,OAAOgB,KAAKI,WAAWC,eAG3BC,QAAS,SAAUC,EAASC,GAExB,OADAtN,KAAKuN,oBAAsBF,EAAQrN,KAAKwN,gBACjCxN,KAAKyM,OAAOY,EAASC,IAGhChC,WAAY,SAAUC,EAAMkC,EAAkBC,GAC1C,IACIC,EAAcjP,OADPsB,KACmBgB,KAAKuK,MAE/BqC,EAHO5N,KAGMgB,KAAK6M,QAClBC,EAAUvC,EAGd,GAAY,YAARA,EAAoB,CACpB,KAAIoC,EAAc,GAGd,YADID,GAAeA,KAFFI,EAAUH,EAAc,EAOjD,GAAY,QAARpC,EAAgB,CAChB,KAAIoC,EAAcC,GAGd,YADIF,GAAeA,KAFEI,EAAUH,EAAc,EAOrD,GAAa,SAATpC,GAA4B,aAATA,GAAuC,iBAATA,EAAmB,CACpE,IACIuC,EAAUpP,OAAO6M,GAErB,MAAO3N,GAEH,YADI8P,GAAeA,KAGvB,GAAe/O,KAAXmP,GAAkBA,EAAUF,GAASE,EAAU,EAE/C,YADIJ,GAAeA,KAM3B5B,OAAOgB,KAAKI,WAAWa,eACvBlE,WAAW,WACPiC,OAAOgB,KAAKI,WAAWC,eACxB,KAzCQnN,KA4CNuL,KAAO7M,OAAOoP,GA5CR9N,KA+CNgO,kBACDP,GACAA,KAORQ,cAAe,WAGX/R,EAAE4O,GAAGC,YAAYmD,UAAUD,cAAcE,MAF9BnO,KAE0CoO,YAMzDC,gBAAiB,WAGbnS,EAAE4O,GAAGC,YAAYmD,UAAUG,gBAAgBF,MAFhCnO,KAE4CoO,YAM3DE,gBAAiB,WACb,IACI3C,EADO3L,KACQf,QAAQ0M,QAC3B,OAAOA,EAAa,KAAKA,EAAsB,cAMnD4C,mBAAoB,WAChB,IACI5C,EADO3L,KACQf,QAAQ0M,QAC3B,OAAOA,EAAc,MAAKA,EAAgB,QAAKA,EAAiB,SAMpE6C,cAAe,WACX,IACI7B,EADO3M,KACKkL,cAAc,QAAQ5J,KAAK,kBAC3C,OAAOpF,EAAEuS,IAAI9B,EAAM,SAAU+B,EAAK7K,GAC9B,OAAO3H,EAAEwS,GAAK1N,KAAK,mBAQ3B2N,gBAAiB,aAMjBC,gBAAiB,aAWjBC,gBAAiB,SAAUzK,EAAMtD,EAAS+E,GACtC,OAAOzB,EAAKyB,QAAQ,IAAIiJ,OAAO,aAAehO,EAAU,KAAM,KAAM+E,IAQxEkJ,YAAa,SAAUC,GACnB,IACIN,EADO1O,KACIkL,cAAc,QAE7B,SAAIwD,IACAM,EAAcN,EAAIpN,KAAK,uBAAyB0N,EAAc,OAC1D9S,EAAE8S,GAAahO,KAAK,gBA7OxC,CAqPGiE,QCpPH,SAAW/I,GACPA,EAAE6C,GAAGkQ,OAAS,SAAU/P,GAEpB,IAAIa,EAAO7D,EAAE8D,OAEbd,EAASA,OACFgQ,UAAYhQ,EAAOgQ,WAAa,EACvChQ,EAAOiQ,UAAYjQ,EAAOiQ,WAAa,EAGvC,IAAIC,EAAYlQ,EAAOkQ,UAAuC,mBAApBlQ,EAAOkQ,SAA2BlQ,EAAOkQ,SAAW,aAI1FC,GAHkBnQ,EAAOoQ,gBAAmD,mBAA1BpQ,EAAOoQ,gBAAiCpQ,EAAOoQ,eAGzFvP,EAAKuB,KAAK,sCAAsCL,QAExDsO,EAAgBF,EAAMhM,WAAWtB,OAEjCyN,EAAYtT,EAAE,wCAEduT,EAAgBvQ,EAAOiQ,UAAYI,EAAiBA,EAAgBrQ,EAAOiQ,UAG3EO,EAAWzG,KAAK0G,MAAM,IAAMjR,OAAO+Q,IAGvCJ,EAAMhM,WAAWxC,KAAK,SAAUgD,EAAG+L,GAC/BJ,EAAUhL,OACN,0DAA4DX,EAAI,yBAChE+L,EAAKlL,aAAa,sBAAwB,WAC1CkL,EAAKC,YAAc,mBAG3BL,EAAUlO,KAAK,oBAAoBd,IAAI,QAASkP,EAAW,KAC3DF,EAAUhL,OAAO,mGAEjBzE,EAAKsB,QAAQmO,GAEb,IAAIM,EAAa/P,EAAKuB,KAAK,+DAA+DyO,GAAG7Q,EAAOgQ,WAClFhT,EAAEA,EAAE4T,GAAY9O,KAAK,iBAAkBjB,GAE7CgB,SAAS,kBACrB+O,EAAW/O,SAAS,eAGpB,IAAImO,EAAYhT,EAAE,6BAA+BgD,EAAOgQ,UAAY,GAAK,IAAKM,GAAWzO,SAAS,eAG9FiP,EAAmBN,GAAY,IAAOA,EAAWD,GAGrD,SAASQ,IACD/Q,EAAOiQ,UAAYI,GAEnBrT,EAAE,8BAA+B6D,GAAMmQ,QAAQnP,SAAS,cACxDyO,EAAUzO,SAAS,cACnBmO,EAAUvO,QAAQ,SAAWwP,OAAQ,YAErCjU,EAAE,8BAA+B6D,GAAMwB,YAAY,cACnDiO,EAAUjO,YAAY,cACtBiO,EAAUlO,KAAK,yBAAyBP,SAAS,oBAqBzD,SAASqP,EAAUxS,EAAGsB,GAQlB,IANAA,EAASA,OACFiR,OAASjR,EAAOiR,QAAU,SAEjCvS,EAAEwD,kBACFxD,EAAE8D,kBAEExF,EAAE8D,MAAMqQ,SAAS,gBAAoC,UAAlBnR,EAAOiR,OAA9C,CAIA,IA5BiBG,EAEbC,EACAC,EAyBAF,EAAU1S,EAAE6S,cAAc/L,aAAa,sBACvCgM,EAAcxU,EAAEoU,EAASvQ,GAE7BmP,EAAYhT,EAAE0B,EAAE6S,eAEhB1Q,EAAKuB,KAAK,uBAAuBC,YAAY,kBAC7CmP,EAAY3P,SAAS,kBAGrByO,EAAUlO,KAAK,oBAAoBC,YAAY,eAAef,IAAI,QAASkP,EAAW,KAEzD,UAAzBL,EAAM7O,IAAI,YACV6O,EAAM5K,SAGNvF,EAAOiR,QAA4B,UAAlBjR,EAAOiR,SACxBjB,EAAYhT,EAAE,wBAA0BoU,EAAU,KAAMd,GA5C3Cc,EA6CDA,EA3CZC,EAAWf,EAAUlO,KAAK,kBAC1BkP,GAAe,EAEnBD,EAAS1P,KAAK,SAAUgD,EAAG+L,GACnBU,IAAYV,EAAKlL,aAAa,uBAAyB8L,GACvDhB,EAAUlM,OAAO,wBAA0BgN,EAAU,MACrDd,EAAUhL,OAAOoL,IAEjBY,GAAe,KAuCvBtB,EAAUnO,SAAS,eAAeP,IAAI,QAASwP,EAAmB,KAClEZ,EAASxR,EAAGsB,IAlEhBgQ,EAAU1O,IAAI,QAASwP,EAAmB,UAqEN,IAAxB9Q,EAAkB,YAE1BhD,EAAEyU,KAAKzR,EAAO0R,aAAaC,KAAK,WAC5BZ,MAGJA,IAIJlQ,EAAKuB,KAAK,+BAA+B4O,QAAQnL,KAAK,QAAS,SAAU+L,GAGrE,IAAIC,EAAevB,EAAUwB,aAAe,GACxCC,EAAa,EAGjB/U,EAAE,2BAA4BmT,GAAO9N,YAAY,QAEjDiO,EAAUlO,KAAK,kBAAkBT,KAAK,SAAUgD,EAAG+L,IAE/CqB,GAAc/U,EAAE,eAAgB0T,GAAMzG,cAGrB4H,GAEb1B,EAAMhM,WAAWxC,KAAK,SAAUqQ,EAAGC,GAC/B,GAAIA,EAAItB,cAAgBD,EAAKC,YAKzB,OAJA3T,EAAEiV,GAAKpQ,SAAS,QAChB7E,EAAE,iCAAiCsE,IAAI,gBAAiB,SACxDtE,EAAE,sCAAsCkV,OAAO5Q,IAAI,gBAAiB,YAQpFsQ,EAAM1P,kBACN0P,EAAMpP,iBACN2N,EAAM5K,WAGVvI,EAAE,YAAamT,GAAOtK,KAAK,QAAS,SAAUnH,GAC1CwS,EAAUxS,GAAKuS,OAAQ,YAG3BjU,EAAE,iBAAkBsT,GAAWzK,KAAK,QAASqL,GAE7CZ,EAAUzK,KAAK,eAAgB,WAC3BkL,OAxKZ,CA2KGhL,QCjLH/I,EAAEmV,MAAMjS,OAAO,4BACXkS,uBAAwB,EACxBC,oBAAqB,EACrBC,oBAAqB,IAMrB5R,KAAM,SAAUV,GAEZc,KAAKyR,cAAgBvS,EAAOuS,cAG5BzR,KAAK0R,YAAcxS,EAAOwS,YAG1B1R,KAAKwI,OAAStJ,EAAOsJ,OAGrBxI,KAAK2R,UAAY7F,OAAOC,aAGxB/L,KAAK4R,kBAAoB1V,EAAE,WAG3B8D,KAAK6R,UAAW,EAGhB7R,KAAK8R,eAAe5S,EAAO8B,MAG3BhB,KAAK+R,gBAMTD,eAAgB,SAAU9Q,GAItBhB,KAAK2F,cACD3E,GAAQA,EAAK2E,aAAY3F,KAAK2F,WAAa3E,EAAK2E,YAGpD3F,KAAK2F,WAAWqM,aAAehS,KAAKiS,kBAGpCjS,KAAK2F,WAAWuM,YAAclS,KAAKmS,gBAMvCF,gBAAiB,WAIb,OAAuBxS,MAAfO,KAAKwI,QAA6D,mBAA/BxI,KAAKwI,OAAOyJ,gBAAiCjS,KAAKwI,OAAOyJ,kBAAoB,IAM5HE,aAAc,WAIV,OAAuB1S,MAAfO,KAAKwI,QAA0D,mBAA5BxI,KAAKwI,OAAO2J,aAA8BnS,KAAKwI,OAAO2J,eAAiB,IAMtHC,iBAAkB,WAGd,QAA4B,IAAhBpS,KAAW,OACvB,OAAOA,KAAKwI,OAAO4J,oBAOvBpG,YAAa,SAAUqG,GACnB,OAAOrS,KAAK2R,UAAU3F,YAAYqG,IAMtCC,eAAgB,aAKhBC,OAAQ,SAAUC,KAOlBC,MAAO,WAEH,GAAIzS,KAAK2F,WAAW+M,SAAU,CAC1B,IAAIC,EAASzW,EAAE,yCAEV4P,OAAOgB,KAAK8F,mBAAmB5S,KAAKc,QAAS6R,IAC9CzW,EAAE8D,KAAKc,SAASsK,KAAK,YAAa,GAAGqH,QAErCzS,KAAKc,SACLd,KAAKc,QAAQ+R,OAAO,YAAa,KAKrC7S,KAAKwI,QAAsC,mBAArBxI,KAAKwI,OAAOiK,OAClCzS,KAAKwI,OAAOiK,SAOpBK,qBAAsB,SAAUlL,EAAW5G,GACvC,OAAIhB,KAAK6R,SAAiB,KACtB7R,KAAKwI,OAAexI,KAAKwI,OAAOsK,qBAAqBlL,EAAW5G,GAC7D,MAMXL,QAAS,SAAUiH,EAAW5G,GAC1B,OAAIhB,KAAK6R,SAAiB,KACtB7R,KAAK4R,kBAA0B5R,KAAK4R,kBAAkBjR,QAAQiH,EAAW5G,GACtE,MAMX+R,eAAgB,SAAUnL,EAAW5G,GACjC,OAAIhB,KAAK6R,SAAiB,KACtB7R,KAAK4R,kBAA0B5R,KAAK4R,kBAAkBmB,eAAenL,EAAW5G,GAC7E,MAMX+D,KAAM,SAAU6C,EAAW7I,GACvB,OAAIiB,KAAK6R,SAAiB,KACtB7R,KAAK4R,kBAA0B5R,KAAK4R,kBAAkB7M,KAAK6C,EAAW7I,IAC1EiB,KAAK+R,YAAY7Q,MAAO4P,MAAOlJ,IACxB,OAMXoL,OAAQ,SAAUpL,EAAW7I,GACzB,OAAIiB,KAAK6R,SAAiB,KACtB7R,KAAK4R,kBAA0B5R,KAAK4R,kBAAkBoB,OAAOpL,EAAW7I,GACrE,MAMXkU,IAAK,SAAUrL,EAAW7I,GACtB,OAAIiB,KAAK6R,SAAiB,KACtB7R,KAAK4R,kBAA0B5R,KAAK4R,kBAAkBqB,IAAIrL,EAAW7I,IACzEiB,KAAK+R,YAAY7Q,MAAO4P,MAAOlJ,IACxB,OAMXsL,mBAAoB,aAKpBC,QAAS,WACL,GAAInT,KAAKwI,OAAQ,OAAOxI,KAAKwI,OAAO2K,WAMxCC,UAAW,WACP,GAAIpT,KAAKwI,OAAQ,OAAOxI,KAAKwI,OAAO4K,aAMxCC,YAAa,WAIT,OAHWrT,KAEKoS,mBACJzM,WAAWpH,MAAQ,QAMnC+U,MAAO,aAKPC,cAAe,aAKfC,kBAAmB,WACf,OAAO,MAMXC,QAAS,WACL,IAAI1T,EAAOC,KACXD,EAAK8R,UAAW,EAEhBhI,WAAW,WACiB,MAApB9J,EAAKgS,aAEL7V,EAAE2E,KAAKd,EAAKgS,YAAa,SAAUlO,EAAG+L,GAClC7P,EAAKiT,OAAOpD,EAAKkB,gBAGlB/Q,EAAKgS,YAERhS,EAAK6R,mBAAmB7R,EAAK6R,kBAAkB8B,MACnD5H,OAAOgB,KAAK2G,QAAQ1T,IACrB+L,OAAO6H,SAASC,aAAe,KAMtCC,WAAY,WACR,OAAO7T,KAAK6R,UAMhBiC,mBAAoB,SAASC,GACzB,IACIC,EADOhU,KACKoS,mBACZ6B,EAAgBnI,OAAOgB,KAAKmH,eAAgBC,QAFrClU,OAIX,GAA0B,2BAAtB+T,EAAQI,UAAwC,CAEhDH,EAAKI,qBAAqBC,0BAC1B,IAAIlS,EAAQ2J,OAAOC,aAAaC,YAAY+H,EAAQA,SACpDC,EAAKI,qBAAqBE,iBAAiBnS,QACxC,GAA0B,8BAAtB4R,EAAQI,UAA2C,CAC1D,IAAIjV,EAAS8U,EAAKZ,YAElBY,EAAKI,qBAAqBC,0BAG1BL,EAAKO,UAAU5T,QAAQ,WAAa6T,OAAQtV,EAAOsV,QAAU1I,OAAOoI,QAAQM,aACzE,CACH,IAEIjW,GADJwV,EAA8B,iBAD1BA,EAAUA,OAC2BU,KAAKC,MAAMX,GAAWA,GAC5CxV,MAAQ,QACvBoW,EAAOZ,EAAQY,MAAQ,OAI3B,GAHAZ,EAAUA,EAAQa,cAAiBb,EAAQA,SAAWA,EAGzC,kBAATxV,EAA0B,OAC9B,GAAa,cAATA,EAAsB,OAC1B,GAAI0V,GAA0B,eAATU,EAAuB,OAG5CX,EAAKI,qBAAqBC,0BACd,SAAR9V,EACAyV,EAAKI,qBAAqBS,iBAAiBd,GAE3CC,EAAKI,qBAAqBE,iBAAiBP,GAInD,OAAOA,GAMXhG,aAAc,aAKd+G,WAAY,aAMZC,gBAAiB,aAKjBC,eAAgB,WAEQhV,KAAKoS,mBACX6C,qBAAqBjV,KAAK2F,WAAWuP,OAASlV,KAAK2F,WAAWwP,OChUpFrJ,OAAOsJ,UAAUtU,QAAQ1B,OAAO,8BAC5BiW,gBAAiB,cAMjBvD,eAAgB,SAAU9Q,GACtB,IAAIjB,EAAOC,KAGXD,EAAK0M,OAAOzL,GAGZ,IAAI2E,EAAa5F,EAAK4F,WACtBA,EAAW2P,SAAWrM,KAAKsM,KAAqB,IAAhBtM,KAAKuM,UACrC7P,EAAW8P,cAA0C,IAAvB9P,EAAW8P,UAA2B3J,OAAOgB,KAAK4I,aAAa/P,EAAW8P,UACxG9P,EAAWgQ,aAAwC,IAAtBhQ,EAAWgQ,SAA0B7J,OAAOgB,KAAK4I,aAAa/P,EAAWgQ,SAGtGhQ,EAAWiQ,YAAcjQ,EAAWiQ,aAAe,OAGnD5V,KAAK6V,mBAAqBpB,KAAKC,MAAMD,KAAKqB,OAAOnQ,IAGjD3F,KAAKqD,YACLrD,KAAK+V,gBAED/U,EAAKgV,UACL9Z,EAAE2E,KAAKG,EAAKgV,SAAU,SAASnS,EAAG/C,GAC1BA,EAAQmV,OACRlW,EAAKmW,oBAAoBpV,GAClBA,EAAQyT,UACfxU,EAAKoW,uBAAuBrV,GACrBA,EAAQkT,MACfjU,EAAKqW,kBAAkBtV,MASvCoV,oBAAqB,SAAUpV,GAC3B,IAEIuV,EAFAtW,EAAOC,KACP2F,EAAa5F,EAAK4F,WAIK,GAAvBA,EAAW8P,WACX3U,EAAQmV,OAAOtQ,WAAW8P,SAAW9P,EAAW8P,SACV,QAAlC3U,EAAQmV,OAAOtQ,WAAWpH,OAC1BuC,EAAQmV,OAAOtQ,WAAW2Q,YAAa,KAInB,IAAxB3Q,EAAW+M,WACX5R,EAAQmV,OAAOtQ,WAAW+M,SAAW/M,EAAW+M,UAIZ,aAApC5R,EAAQmV,OAAOtQ,WAAW4Q,SAC1BF,EAAkBvK,OAAO0K,MAAM1V,IAGnC,IAAImV,EAASlW,EAAK0R,cAAcgF,WAC5BlY,KAAMuC,EAAQmV,OAAOtQ,WAAWpH,KAChCyC,KAAMF,EAAQmV,OACdvE,YAAa3R,EAAK2R,YAClBlJ,OAAQzI,EACR2W,KAAM3W,EAAKoT,YAIfpT,EAAKsD,SAASnC,KAAK+U,GAGqB,aAApCnV,EAAQmV,OAAOtQ,WAAW4Q,QAC1BxW,EAAK4W,uBAAuBV,EAAQI,GAMxCtW,EAAKqS,mBAAmBwE,eAAeX,IAK3CE,uBAAwB,SAAUrV,GAC9B,IAAIf,EAAOC,KACP2F,EAAa5F,EAAK4F,WAGK,GAAvBA,EAAW8P,WACX3U,EAAQyT,UAAU5O,WAAW8P,SAAW9P,EAAW8P,WAI3B,IAAxB9P,EAAW+M,WACX5R,EAAQyT,UAAU5O,WAAW+M,SAAW/M,EAAW+M,UAGvD,IAAI6B,EAAYxU,EAAK0R,cAAcoF,cAC/BtY,KAAMuC,EAAQyT,UAAU5O,WAAWpH,KACnCyC,KAAMF,EAAQyT,UACd/L,OAAQzI,EACR2R,YAAa3R,EAAK2R,YAClBgF,KAAM3W,EAAKoT,UACXhO,SAA6B,WAAnBpF,EAAKoT,YAGnBpT,EAAKsD,SAASnC,KAAKqT,GAGnBxU,EAAKqS,mBAAmBwE,eAAerC,IAK3C6B,kBAAmB,SAAUtV,GACzB,IAAIf,EAAOC,KACP2F,EAAa5F,EAAK4F,WAGK,GAAvBA,EAAW8P,WACX3U,EAAQyT,UAAU5O,WAAW8P,SAAW9P,EAAW8P,UAGvD,IAAIzB,EAAOjU,EAAK0R,cAAcoF,cAC1BtY,KAAOuC,EAAQkT,KAAKrO,WAAWpH,MAAQ,OACvCyC,KAAMF,EAAQkT,KACdxL,OAAQzI,EACR2R,YAAa3R,EAAK2R,YAClBgF,KAAM3W,EAAKoT,YAEfpT,EAAKsD,SAASnC,KAAK8S,IAKvB8C,WAAY,WAER,OADW9W,KACCuU,WAKhBwC,kBAAmB,SAAUxY,EAAMyX,GAC/BA,EAAWA,MAaX,OATA9Z,EAAE2E,KAHSb,KAGCqD,SAAU,SAAUQ,EAAGmT,GAC3BA,EAAMrR,WAAWpH,MAAQA,GACzByX,EAAS9U,KAAK8V,GAEdA,EAAM1E,kBAAoBxG,OAAOsJ,UAAUtU,QAAQwQ,wBACnD0F,EAAMD,kBAAkBxY,EAAMyX,KAI/BA,GAKXW,uBAAwB,SAAUV,EAAQnV,GACtC,IAAIf,EAAOC,KACPiX,EAAgBxC,KAAKC,MAAMD,KAAKqB,OAAOhV,EAAQmV,SAGnDgB,EAActR,WAAWuR,YAAcD,EAActR,WAAWuR,YAAc,IAAMnX,EAAKiM,YAAY,qCACrGiL,EAActR,WAAWuP,MAAQ+B,EAActR,WAAWuP,MAAQ,SAClE+B,EAActR,WAAWwR,SAAU,EAGnC,IAAIX,EAAQzW,EAAK0R,cAAcgF,WAC3BlY,KAAM0Y,EAActR,WAAWpH,KAC/ByC,KAAMiW,EACNzO,OAAQzI,EACR2W,KAAM3W,EAAKoT,YAIf8C,EAAOmB,YAAcZ,EAGrBzW,EAAKsD,SAASnC,KAAKsV,IAKvBlE,eAAgB,WACZ,OAAOxG,OAAOsJ,UAAUtU,QAAQwQ,wBAKpC2E,OAAQ,WACJ,IAEIxQ,EAFA1F,EAAOC,KACAD,EAAKoT,UAsBhB,OAlBA1N,EAAS1F,EAAKsX,iBAGdtX,EAAKuX,yBAGL7R,EAAO2F,KAAK,oBAAqBrL,EAAK4F,WAAWwP,IAG7CpV,EAAK4F,WAAW4R,KAChB9R,EAAO2F,KAAK,WAAYrL,EAAK4F,WAAW4R,KAIxCxX,EAAKb,QACDa,EAAKb,OAAOsY,eACZ/R,EAAO1E,SAAShB,EAAKb,OAAOsY,eAE7B/R,GAKX4R,eAAgB,WACZ,IAGIjT,EAHOpE,KAGKyX,sBAGZlD,EANOvU,KAMUuU,UAAYrY,EAAEkI,GAKnC,OAXWpE,KASN0X,oBAAoBnD,GATdvU,KAWCuU,WAKhBkD,oBAAqB,WAKjB,OAJWzX,KAEN2X,kBAFM3X,KAEmB2X,mBAAqB,IAAIzb,EAAE0b,SAElD5X,KAAK6X,mBAKhBC,WAAY,WAER,QADW9X,KACD2X,mBADC3X,KAGC2X,kBAAkBI,WAKlC7E,mBAAoB,WAIhB,OAHIpH,OAAOgB,KAAKkL,QAAQhY,KAAKuU,YACzB0D,MAAM,mCAEHjY,KAAKuU,WAKhB+C,uBAAwB,WACpB,IACQ3R,EADG3F,KACe2F,WAGtBA,EAAWuS,iBAJJlY,KAKFmY,sBAAsBxS,EAAWuS,iBAGrCvS,EAAWgQ,SARL3V,KASFoY,iBAAiBzS,EAAWgQ,UAKzCwC,sBAAuB,SAAUzN,GAClB1K,KACW2F,WAEXuS,gBAAkBxN,EAG7BxO,EAAE2E,KANSb,KAMCqD,SAAU,SAAUQ,EAAGmT,GAC3BA,EAAM1E,kBAAoBxG,OAAOsJ,UAAUtU,QAAQwQ,uBACnD0F,EAAMmB,sBAAsBzN,GAErBsM,EAAM1E,kBAAoBxG,OAAOsJ,UAAUtU,QAAQyQ,qBAC1DyF,EAAMmB,sBAAsBzN,MAOxC0N,iBAAkB,SAAUC,GACxB,IACI1S,EADO3F,KACW2F,WAGtBA,EAAWgQ,QAAU7J,OAAOgB,KAAK4I,aAAa2C,GAG1C1S,EAAWgQ,QAPJ3V,KAQFuU,UAAU9S,OARRzB,KAWFuU,UAAUtT,QAIvBqX,kBAAmB,SAAUD,GACdrY,KACW2F,WAGX8P,SAAuB,WAAZ4C,EAJXrY,KAIwC6V,mBAAmBJ,SAAU3J,OAAOgB,KAAK4I,aAAa2C,GAGzGnc,EAAE2E,KAPSb,KAOCqD,SAAU,SAAUQ,EAAGmT,GAC3BA,EAAM1E,kBAAoBxG,OAAOsJ,UAAUtU,QAAQwQ,uBACnD0F,EAAMsB,kBAAkBD,GAEjBrB,EAAM1E,kBAAoBxG,OAAOsJ,UAAUtU,QAAQyQ,qBAC1DyF,EAAMsB,kBAAkBD,MAOpCE,WAAY,SAAUhE,EAAWgD,EAAK1R,GAClCiG,OAAOgB,KAAK0L,gBAAgBjE,EAAWgD,EAAK1R,IAKhD4S,mBAAoB,SAAUlE,EAAW1O,GACrC7F,KAAKuY,WAAWhE,EAAW,YAAa1O,IAK5C6S,oBAAqB,SAAUtU,EAAMyB,GACjC,OAAOzB,EAAKuU,4BAA4B,eAAgB9S,IAM5DgS,gBAAiB,aAMjBH,oBAAqB,SAAUnD,GAC3B,IAAIxU,EAAOC,KAEP0W,GADa3W,EAAK4F,WACX5F,EAAKoT,WAGZpT,EAAK4X,mBACL5X,EAAK4X,kBAAkBiB,UAG3B7Y,EAAKwU,UAAYA,EACjBxU,EAAK8Y,0BAA0BtE,GAEnB,aAARmC,IAEA3W,EAAK+Y,oBACL/Y,EAAKgZ,4BAGG,UAARrC,GAEA3W,EAAKiZ,sBAEG,UAARtC,IAEA3W,EAAKiZ,sBACLjZ,EAAKkZ,wBAIbF,yBAA0B,WACtB,IACIG,EAASzb,OAAO0b,uBACf,gBAAiBjd,EAAE,WAAW,IAAM,gBAAiBA,EAAE,WAAW,MAAQgd,EAAOE,YAItFC,aAAaC,UAKjBT,0BAA2B,SAAUtE,GACjC,IAAIxU,EAAOC,KACPuZ,EAAmBhF,EAAUlR,WAEjCnH,EAAE2E,KAAK0Y,EAAkB,SAAU1V,EAAG2V,GAClCA,EAAetd,EAAEsd,GACjB,IAAIrE,EAAKzW,OAAO8a,EAAaxY,KAAK,cAClC,GAAImU,EAAI,CACJ,IAAI6B,EAAQjX,EAAKgW,aAAaZ,GAC9B,GAAI6B,EAAO,CACP,IAAIzY,EAAOyY,EAAM1E,iBACb/T,GAAQuN,OAAOsJ,UAAUtU,QAAQyQ,qBACjCyF,EAAMyC,kBAAkBD,GACxBjb,GAAQuN,OAAOsJ,UAAUtU,QAAQwQ,wBACjC0F,EAAMU,oBAAoB8B,SAGlCzZ,EAAK8Y,0BAA0BW,MAO3CV,kBAAmB,aAKnBE,oBAAqB,aAKrBC,oBAAqB,aAMrBS,mBAAoB,WAChB,IAAI3Z,EAAOC,KACP2Z,EAAO,GAWX,OATAzd,EAAE2E,KAAKd,EAAKsD,SAAU,SAAUQ,EAAGmT,GAC/B,IAAIzY,EAAOyY,EAAM1E,iBACb/T,GAAQuN,OAAOsJ,UAAUtU,QAAQyQ,sBACjCoI,GAAQ3C,EAAM4C,iBACdrb,GAAQuN,OAAOsJ,UAAUtU,QAAQwQ,yBACjCqI,GAAQ3C,EAAMS,uBAClB1X,EAAKgW,aAAaiB,EAAMrR,WAAW2P,UAAY0B,IAG5C2C,GAKXE,oBAAqB,SAAUC,GAChB9Z,KACFqD,UACLnH,EAAE2E,KAFKb,KAEKqD,SAAU,SAAUQ,EAAGmT,GAC3BA,EAAM1E,kBAAoBxG,OAAOsJ,UAAUtU,QAAQwQ,uBAEnD0F,EAAM6C,oBAAoBC,GAEnB9C,EAAM1E,kBAAoBxG,OAAOsJ,UAAUtU,QAAQyQ,qBAEtDyF,EAAM+C,aACN/C,EAAMgD,YAAYF,MAUtCG,WAAY,SAAUxU,GAIlB,IAFAA,EAASA,OAEG1D,OASR,OAAO0D,EAZAzF,KAICqD,UACJnH,EAAE2E,KALCb,KAKSqD,SAAU,SAAUQ,EAAGmT,GAC/B,GAAIvR,EAAO1D,QAAUiV,EAAMiD,WAAWxU,GAClC,OAAO,KAY3ByU,6BAA8B,SAAUJ,GAEpC5d,EAAE2E,KADSb,KACCqD,SAAU,SAAUQ,EAAGmT,GAC3BA,EAAM1E,kBAAoBxG,OAAOsJ,UAAUtU,QAAQwQ,uBAEnD0F,EAAMkD,6BAA6BJ,GAE5B9C,EAAM1E,kBAAoBxG,OAAOsJ,UAAUtU,QAAQyQ,qBAEtDyF,EAAMmD,sBACNnD,EAAMoD,qBAAqBN,MAQ3CO,WAAY,WACR,OAAOra,KAAKqD,SAAS,IAKzBiX,WAAY,SAAUpF,EAAOqF,GAsBzB,OAnBAA,EAAUA,MAGNrF,EAAMxS,QAAQ,KAAO,IACrBwS,EAAQA,EAAMnL,UAAU,EAAGmL,EAAMxS,QAAQ,OAG7CxG,EAAE2E,KATSb,KASCqD,SAAU,SAAUQ,EAAGmT,GAC3BA,EAAM1E,kBAAoBxG,OAAOsJ,UAAUtU,QAAQwQ,uBAEnD0F,EAAMsD,WAAWpF,EAAOqF,GAEjBvD,EAAM1E,kBAAoBxG,OAAOsJ,UAAUtU,QAAQyQ,qBACtD2D,GAAS8B,EAAMrR,WAAWuP,OAC1BqF,EAAQrZ,KAAK8V,KAKlBuD,GAKX9D,UAAW,SAAUvB,GACjB,IACIqF,EADOva,KACQsa,WAAWpF,GAC1BzP,EAAS,KAeb,OAdAvJ,EAAE2E,KAAK0Z,EAAS,SAAU1W,EAAGoS,GACrBA,EAAOtQ,WAAW8P,UACJ,MAAVhQ,IACAA,EAASwQ,KAKP,MAAVxQ,GACAvJ,EAAE2E,KAAK0Z,EAAS,SAAU1W,EAAGoS,GACzBxQ,EAASwQ,IAIVxQ,GAMX+U,kBAAmB,SAAUtF,GAEzB,OADWlV,KACCsa,WAAWpF,IAM3B2B,aAAc,SAAU1B,GACpB,IAKI1P,EAHJ,OAFWzF,KAEF2F,WAAWwP,IAAMA,EACfnV,MAGX9D,EAAE2E,KANSb,KAMCqD,SAAU,SAAUQ,EAAGmT,GAC/B,GAAIA,EAAM1E,kBAAoBxG,OAAOsJ,UAAUtU,QAAQwQ,uBAAwB,CAE3E,IAAImJ,EAAIzD,EAAMH,aAAa1B,GAC3B,GAAS,MAALsF,EAEA,OADAhV,EAASgV,GACF,KAKZhV,IAKX4F,QAAS,SAAUqP,GAiBf,OAhBW1a,KAEFqD,UACLnH,EAAE2E,KAHKb,KAGKqD,SAAU,SAAUQ,EAAGmT,GAC3BA,EAAMrR,WAAWgQ,UACbqB,EAAM1E,kBAAoBxG,OAAOsJ,UAAUtU,QAAQwQ,uBAEnD0F,EAAM3L,QAAQqP,GACP1D,EAAM1E,kBAAoBxG,OAAOsJ,UAAUtU,QAAQyQ,qBAE1DyF,EAAM3L,QAAQqP,MAMG,GAA1BA,EAAgB3Y,QAM3B4Y,cAAe,SAAUD,GAgBrB,OAbAxe,EAAE2E,KAFSb,KAECqD,SAAU,SAAUQ,EAAGmT,GAC3BA,EAAMrR,WAAWgQ,UACbqB,EAAM1E,kBAAoBxG,OAAOsJ,UAAUtU,QAAQwQ,uBAEnD0F,EAAM2D,cAAcD,GAEb1D,EAAM1E,kBAAoBxG,OAAOsJ,UAAUtU,QAAQyQ,0BAA8C,IAAfyF,EAAU,MAEnGA,EAAM3L,QAAQqP,MAKO,GAA1BA,EAAgB3Y,QAK3BuR,MAAO,WAEH,OAAOpX,EAAEyU,KADE3Q,KACQwI,OAAO8K,QADftT,KAC6B8X,eAK5CvE,cAAe,WACX,IACIqH,EAAmB1e,EAAEuS,IADdzO,KACuBqD,SAAU,SAAU2T,GAClD,OAAOA,EAAMzD,kBAEjB,OAAOrX,EAAEyU,KAAKxC,MAAMjS,EAAG0e,IAK3BC,SAAU,WACN,IACIpI,EAUJ,OATAvW,EAAE2E,KAFSb,KAECqD,SAAU,SAAUQ,EAAGmT,GAC/B,GAAIA,EAAM1E,kBAAoBxG,OAAOsJ,UAAUtU,QAAQwQ,uBAAwB,CAC3E,IAAI7L,EAASuR,EAAM6D,WACd/O,OAAOgB,KAAKkL,QAAQvS,KACrBgN,EAAQhN,MAKbgN,GAKXe,kBAAmB,WACf,IACIQ,EADOhU,KACKoS,mBAEhB,GAAI4B,EACA,OAAOA,EAAKR,qBAMpBsH,iBAAkB,SAAUzI,GACxB,IACI0I,EADO/a,KACewT,oBAE1B,GAAIuH,EACA,OAAOA,EAAe1I,IAM9BoB,QAAS,WACL,IAAI1T,EAAOC,KAGX6J,WAAW,WACH9J,EAAKsD,UACLnH,EAAE2E,KAAKd,EAAKsD,SAAU,SAAUQ,EAAGmT,GAC/BA,EAAMvD,aAGf3H,OAAO6H,SAASC,aAAe,IAGlC7T,EAAK0M,UAMTuO,iBAAkB,SAAUC,GACxB,IAAIlb,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBqO,EAAOjU,EAAKqS,mBAShB,OANArS,EAAKgO,eAGLhO,EAAKgV,kBAGE7Y,EAAEyU,KAAK5Q,EAAK2R,YAAYwJ,cAAcC,gBACzCjG,MAAOvP,EAAWuP,MAClBkG,SAAUzV,EAAWwP,GACrBjD,YAAavM,EAAWuM,YACxBF,aAAerM,EAAWqM,cAAgBiJ,EAAKjJ,aAC/CqJ,YAAatb,EAAK4F,WAAW0V,aAAe,GAC5CC,OAAStH,GAAQA,EAAKrO,YAAcqO,EAAKrO,WAAWwP,GAAMnB,EAAKrO,WAAWwP,GAAK,MAC/EtE,KAAK,SAAU7P,GAEf,IAAKjB,EAAK8T,aAAc,CAGpB9T,EAAKwb,4BACExb,EAAKsD,gBACLtD,EAAKgW,aAEZhW,EAAKqS,mBAAmBoJ,iBAGS,IAA7Bzb,EAAK4F,WAAW8P,UAChBzU,EAAKuT,WAAavT,EAAKuT,UAAU5O,aAAc3E,EAAKuT,UAAU5O,WAAW8P,UAAW,GAIxF1V,EAAK+R,eAAe9Q,EAAKuT,WAGzB,IAAIkH,EAAmB1b,EAAKwU,UACxB9O,EAAS1F,EAAKkW,SAEU,WAAxBlW,EAAK4F,WAAWpH,MAChBrC,EAAEuJ,GAAQ1E,SAAS,kBAGvB0a,EAAiBC,YAAYjW,GAG7B,IAAIkG,EAAU3K,EAAKuT,WAAavT,EAAKuT,UAAU5I,QAAU3K,EAAKuT,UAAU5I,WACxE5L,EAAKqS,mBAAmBuJ,eAAehQ,GAEvC5L,EAAK6b,yBAGL7b,EAAKiV,oBAGV6G,KAAK,SAAU9H,GACdA,EAAUhU,EAAK+T,mBAAmBC,KAEnC+H,OAAO,WACN/b,EAAK+U,gBAObiH,uBAAwB,SAAU/a,GAC9B,IAAIjB,EAAOC,KACP2F,EAAa5F,EAAK4F,WAoBtB,GAjBA5F,EAAKgV,gBAAgB/T,GAGrB9E,EAAEkD,OAAO4B,EAAK2E,YACV8P,SAAU9P,EAAW8P,SACrB4F,YAAc1V,EAAW0V,aAAe,GACxCnJ,YAAavM,EAAWuM,YACxBkJ,SAAUzV,EAAWwP,GACrB6G,kBAAmBrW,EAAWqW,kBAC9B1G,SAAU3P,EAAW2P,SACrBK,QAAQhQ,EAAWgQ,QACnBT,MAAOvP,EAAWuP,MAClBwB,KAAM,SACN1E,aAAcrM,EAAWqM,cAAgB,MAIxCjS,EAAK8T,aAAc,CAEpB9T,EAAKwb,4BACExb,EAAKsD,gBACLtD,EAAKgW,cAGqB,IAA7BhW,EAAK4F,WAAW8P,UAChBzU,EAAKuT,WAAavT,EAAKuT,UAAU5O,aAAc3E,EAAKuT,UAAU5O,WAAW8P,UAAW,GAIxF1V,EAAK+R,eAAe9Q,EAAKuT,WAGzB,IAAIkH,EAAmB1b,EAAKwU,UACxB9O,EAAS1F,EAAKkW,SAEU,WAAxBlW,EAAK4F,WAAWpH,MAChBrC,EAAEuJ,GAAQ1E,SAAS,kBAGvB0a,GAAoBA,EAAiBC,YAAYjW,GAGjD1F,EAAKiV,mBAIbD,gBAAiB,WAIb,IAHA,IAGSlR,EAAI,EAAGA,EAHL7D,KAGcqD,SAAStB,OAAQ8B,IAH/B7D,KAIFqD,SAASQ,GAAGkR,mBAIzBC,eAAgB,WACDhV,KAEcoS,mBACX6C,qBAHHjV,KAG6B2F,WAAWwP,IAGnD,IAAK,IAAItR,EAAI,EAAGA,EANL7D,KAMcqD,SAAStB,OAAQ8B,IAN/B7D,KAOFqD,SAASQ,GAAGmR,kBAOzB4G,uBAAwB,WACT5b,KAEKoS,mBAGhB,IALA,IAGI/O,EAHOrD,KAGSqD,SAEXQ,EAAI,EAAGoY,EAAI5Y,EAAStB,OAAQ8B,EAAIoY,EAAGpY,IAAK,CAC7C,IAAImT,EAAQ3T,EAASQ,GACjBtF,EAAOyY,EAAM1E,iBAEb/T,IAASuN,OAAOsJ,UAAUtU,QAAQwQ,uBAClC0F,EAAM4E,yBAEDrd,IAASuN,OAAOsJ,UAAUtU,QAAQyQ,qBACvCyF,EAAMkF,qBAAsBC,SAAS,MASjDC,gBAAiB,SAAUzQ,GACvB,IACIqI,EADOhU,KACKoS,mBAEZzG,GACAqI,EAAKqI,iBAAiBC,aAAa3Q,IAO3C4P,mBAAoB,WAMhB,IALA,IAEIvH,EAFOhU,KAEKoS,mBACZ/O,EAHOrD,KAGSqD,SAEXQ,EAAI,EAAGoY,EAAI5Y,EAAStB,OAAQ8B,EAAIoY,EAAGpY,IAAK,CAC7C,IAAImT,EAAQ3T,EAASQ,GACjBtF,EAAOyY,EAAM1E,iBAEb/T,IAASuN,OAAOsJ,UAAUtU,QAAQwQ,uBAClC0F,EAAMuE,qBAEDhd,IAASuN,OAAOsJ,UAAUtU,QAAQyQ,qBACvCyC,EAAKuI,iBAAiBvF,KAOlCwF,aAAc,SAAU1b,GAKpB,IAJA,IAEIuC,EAFOrD,KAESqD,SAEXQ,EAAI,EAAGoY,EAAI5Y,EAAStB,OAAQ8B,EAAIoY,EAAGpY,IAAK,CAG7C,GAFYR,EAASQ,GAEX8B,WAAW2P,UAAYxU,EAAQ6E,WAAW2P,SAAU,CAC1DjS,EAASoZ,OAAO5Y,EAAG,GACnBR,EAASoZ,OAAO5Y,EAAG,EAAG/C,GACtB,SAOZ4b,aAAc,SAAUvH,GAMpB,IAJA,IAEI9R,EAFOrD,KAESqD,SAEXQ,EAAI,EAAGoY,EAAI5Y,EAAStB,OAAQ8B,EAAIoY,EAAGpY,IAAK,CAC7C,IAAImT,EAAQ3T,EAASQ,GAErB,GAAImT,EAAMrR,WAAWwP,IAAMA,EACvB,OAAO6B,EAIf,OAAO,QCx8BflL,OAAOsJ,UAAUtU,QAAQ1B,OAAO,2BAC5Bud,kBAAmB,EACnBC,oBAAqB,GACrBC,gBAAiB,EACjBC,oBAAoB,EACpBzH,gBAAiB,YACjB0H,kBAAmB,WACfjR,OAAOsJ,UAAUa,OAAO0G,kBAAoB,IAC5C7Q,OAAOsJ,UAAUa,OAAO4G,gBAAkB,EAE1C/Q,OAAOsJ,UAAUa,OAAO6G,oBAAqB,GAEjDE,iBAAkB,WACdlR,OAAOsJ,UAAUa,OAAO0G,kBAAoB,EAC5C7Q,OAAOsJ,UAAUa,OAAO4G,gBAAkB,EAC1C/Q,OAAOsJ,UAAUa,OAAO6G,oBAAqB,KAMjDhL,eAAgB,SAAU9Q,GACtB,IAAIjB,EAAOC,KAGXD,EAAK0M,OAAOzL,GAEZ,IAAIgT,EAAOjU,EAAKqS,mBAGZzM,EAAa5F,EAAK4F,WAEtBA,EAAWsX,cAA0C,IAAvBtX,EAAWsX,UAA2BnR,OAAOgB,KAAK4I,aAAa/P,EAAWsX,UACxGtX,EAAW2P,SAAWrM,KAAKsM,KAAqB,IAAhBtM,KAAKuM,UACrC7P,EAAWuR,YAAcvR,EAAWuR,aAAe,GACnDvR,EAAW8P,cAA0C,IAAvB9P,EAAW8P,UAA2B3J,OAAOgB,KAAK4I,aAAa/P,EAAW8P,UACxG9P,EAAWgQ,aAAwC,IAAtBhQ,EAAWgQ,SAA0B7J,OAAOgB,KAAK4I,aAAa/P,EAAWgQ,SACtGhQ,EAAWuX,sBAA0D,IAA/BvX,EAAWuX,kBAAmCpR,OAAOgB,KAAK4I,aAAa/P,EAAWuX,kBAExH,IAAIC,EAAarR,OAAOgB,KAAKsQ,cAAczX,EAAWpH,MAClD,YAAY8e,KAAKF,KACjBxX,EAAWgQ,SAAU,GAGzBhQ,EAAW+M,cAA0C,IAAvB/M,EAAW+M,UAA2B5G,OAAOgB,KAAK4I,aAAa/P,EAAW+M,UACxG/M,EAAW2X,oBAAsD,IAA7B3X,EAAW2X,gBAAiCxR,OAAOgB,KAAK4I,aAAa/P,EAAW2X,gBACpH3X,EAAW4X,UAAY5X,EAAW4X,WAAa,EAC/C5X,EAAW6X,SAAW1R,OAAOgB,KAAK2Q,KAAK9X,EAAW6X,WAAa,GAC/D7X,EAAW+X,WAAa/X,EAAW+X,eACnC/X,EAAWgY,YAAchY,EAAWgY,gBACpChY,EAAWiY,cAA0C,IAAvBjY,EAAWiY,UAA2B9R,OAAOgB,KAAK4I,aAAa/P,EAAWiY,UACxGjY,EAAWgQ,SAAWhQ,EAAmB,UAAYA,EAAWgQ,QAGhEhQ,EAAWkY,oBAAqB,EAG5BlY,EAAW+E,QACX/E,EAAW+X,WAAWhT,MAAQ/E,EAAW+E,OAGzC/E,EAAWuS,kBACXvS,EAAW+X,WAAWxF,gBAAkBvS,EAAWuS,iBAIvDvS,EAAW+M,WAAW/M,EAAW8P,UAAW9P,EAAW+M,SAGvD/M,EAAWiQ,YAAcjQ,EAAWiQ,aAAe,OAGnDjQ,EAAW0V,YAAerH,EAAK9U,QAAU8U,EAAK9U,OAAO8B,MAAQgT,EAAK9U,OAAO8B,KAAK8c,YAAe9J,EAAK9U,OAAO8B,KAAK8c,YAAc,GAG5H/d,EAAK8V,oBACD6H,YACIhT,MAAO/E,EAAW+X,WAAWhT,MAC7BwN,gBAAiBvS,EAAW+X,WAAWxF,iBAE3CyF,aACIjT,MAAO/E,EAAW+X,WAAWhT,MAC7BwN,gBAAiBvS,EAAW+X,WAAWxF,iBAE3CvC,QAAShQ,EAAWgQ,QACpBF,SAAU9P,EAAW8P,SACrB/C,SAAU/M,EAAW+M,SACrBqL,WAAYpY,EAAWoY,WACvBC,WAAYrY,EAAWqY,YAI3Bje,EAAKyL,WAAsC,IAAtB7F,EAAgB,MAAoBA,EAAW6F,MAAQ,KAG5EzL,EAAK4F,WAAWsY,cAAgBle,EAAKyL,MACrCzL,EAAK4F,WAAWuY,cAAgBne,EAAKyL,MAGrCzL,EAAKoe,oCAKTA,iCAAkC,WAC9B,IAAIpe,EAAOC,KACP2F,EAAa5F,EAAK4F,WAGtBA,EAAWyY,YAAczY,EAAWyY,aAAe,SACnDzY,EAAWoY,WAAapY,EAAWoY,YAAche,EAAKse,qBAAqB1Y,EAAWyY,aACtFzY,EAAWqY,WAAarY,EAAWqY,YAAcje,EAAKue,qBAAqB3Y,EAAWyY,aAGvD,QAA3BzY,EAAWiQ,cACXjQ,EAAWoY,WAAahe,EAAKwe,YAAY5Y,EAAWoY,YACpDpY,EAAWqY,WAAaje,EAAKwe,YAAY5Y,EAAWqY,aAIxD,IAAIQ,EAAcze,EAAK0e,qBAAqB9Y,EAAW+Y,WAAY/Y,EAAWgZ,WAAYhZ,EAAWyY,aACrGzY,EAAW+Y,WAAaF,EAAYI,MACpCjZ,EAAWgZ,WAAaH,EAAYK,QAEN,eAA1BlZ,EAAWmZ,aACXnZ,EAAWgZ,WAAaH,EAAYK,SAGX,GAAzBlZ,EAAW+Y,aACX/Y,EAAWyY,YAAc,QACzBzY,EAAWgZ,WAAaH,EAAYK,SAGX,GAAzBlZ,EAAWgZ,aACXhZ,EAAWyY,YAAc,SAGL,cAApBzY,EAAWpH,OACoB,SAA3BoH,EAAWyY,aACXzY,EAAWgZ,WAAahZ,EAAWgZ,YAAc,GACjDhZ,EAAW+Y,WAAa/Y,EAAW+Y,YAAc,IACf,aAA3B/Y,EAAWyY,aAClBzY,EAAWgZ,WAAa,IACxBhZ,EAAW+Y,WAAa,MAExB/Y,EAAWgZ,WAAa,IACxBhZ,EAAW+Y,WAAa,KAOpCpM,eAAgB,WACZ,OAAOxG,OAAOsJ,UAAUtU,QAAQyQ,qBAKpC0E,OAAQ,SAAU8I,GACd,OAAO/e,KAAK4Z,cAAcmF,IAK9BnF,cAAe,SAAUmF,GACrB,IAAIhf,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBqO,EAAOjU,EAAKqS,mBAEhBrS,EAAK4X,kBAAoB,IAAIzb,EAAE0b,SAG/BmH,EAAqBA,GAAsB,SAC3C,IAAIC,EAAiBjf,EAAK0R,cAAcwN,YAAYF,GAGhDH,EAAQjZ,EAAWuR,YACH,iBAAT0H,IAMPA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAQA,EAAMM,WAAW,IAAK,UAChBA,WAAW,IAAK,UAChBA,WAAW,IAAK,QAAQA,WAAW,IAAK,SACxCA,WAAW,IAAM,SAASA,WAAW,IAAK,SAASA,WAAW,IAAK,UACnEA,WAAW,MAAO,UAClBA,WAAW,KAAM,UAGnC,IAAIC,EAA8C,YAA/BrT,OAAOgB,KAAKsS,iBAAqD,gBAApBzZ,EAAWpH,MAA8C,cAApBoH,EAAWpH,OAA8C,mBAApBoH,EAAWpH,MAAiD,wBAApBoH,EAAWpH,OAAmCuN,OAAOgB,KAAKuS,kBAA0C,SAApB1Z,EAAWpH,OAAoBuN,OAAOgB,KAAKuS,kBACzSX,EAAaY,WAAW3Z,EAAW+Y,YAGnCta,EAAOlI,EAAEqjB,SAASP,GAClBJ,MAAOA,EAAOpB,SAAU7X,EAAW6X,SACnC/H,SAAU9P,EAAW8P,SACrB+J,eAAoC,QAAnB7Z,EAAWpH,MAAkBoH,EAAW8Z,WACzD7J,YAAajQ,EAAWiQ,YACxBN,SAAU3P,EAAW2P,SACrBH,GAAIxP,EAAWwP,GACfD,MAAOvP,EAAWuP,MAClBqC,IAAK5R,EAAW4R,IAChB6G,YAAazY,EAAWyY,YACxBsB,mBAAoB3f,EAAK4f,sBAAsBha,EAAWyY,aAC1DwB,gBAAiB7f,EAAK8f,cAAcla,EAAWoY,YAC/C+B,gBAAiB/f,EAAK8f,cAAcla,EAAWqY,YAC/CU,WAAYA,EACZqB,iBAAkBrB,GAAuC,UAAzB/Y,EAAWmZ,WAAyB,KAAO,KAC3EH,WAAYW,WAAW3Z,EAAWgZ,YAClCqB,iBAAkBV,WAAW3Z,EAAWgZ,aAAwC,UAAzBhZ,EAAWmZ,WAAyB,KAAO,KAClGA,WAAYnZ,EAAWmZ,WACvB3Z,SAA6B,WAAnBpF,EAAKoT,UACf6I,kBAAmBrW,EAAWqW,kBAC9BiE,aAAcjM,EAAK9U,OAAOghB,aAC1BC,SAAUxa,EAAWya,UAAY,GACjClD,iBAAkBvX,EAAWuX,iBAC7BD,SAAUtX,EAAWsX,SACrB1e,KAAMoH,EAAWpH,KACjB8hB,eAAgBlB,EAChBzM,SAAU/M,EAAW+M,SACrB8K,SAAU7X,EAAW6X,WAIrB/X,EAAS1F,EAAKugB,wBAsBlB,OArBK7a,IACDA,EAAS,IAImB,iBAAb,GAAyBA,EAAOoL,KAKxB,aAAnBpL,EAAO8a,SAEPnc,EAAOrE,EAAKygB,mBAAmBpc,EAAMrE,EAAK0gB,cAAchb,IACxD1F,EAAK2gB,oBAAsB,OAG3B3gB,EAAK2gB,oBAAsBjb,EAC3BrB,EAAOrE,EAAKygB,mBAAmBpc,EAAM,KAVzCA,EAAOrE,EAAKygB,mBAAmBpc,EAAMqB,GAclCrB,GAKXqc,cAAe,SAAU1I,GACrB,OAAOjM,OAAO2U,cAAc1I,IAKhCD,WAAY,WAER,QADW9X,KACD2X,mBADC3X,KAIC2X,kBAAkBI,WAKlCuI,sBAAuB,WACnB,IAAIvgB,EAAOC,KACP2F,EAAa5F,EAAK4F,WAGtB,OAFA5F,EAAK8e,QAAU,KAEX9e,EAAK0R,cAAcwO,cACnBta,EAAW8P,UAAW,EACf1V,EAAK4gB,iBACLhb,EAAW8P,SACX1V,EAAK4gB,gBAGT5gB,EAAK6gB,kBAKhBnH,kBAAmB,SAAU3Y,GACzB,IAAIf,EAAOC,KACP2F,EAAa5F,EAAK4F,WAGtB5F,EAAKe,QAAUA,EAEX6E,EAAW2X,gBACXvd,EAAK8gB,0BAGTC,eAAgB,EAEhB,IAAIC,EAAoB,SAAUC,GAC1BlV,OAAOsJ,UAAUa,OAAO6G,oBACxBhR,OAAOsJ,UAAUa,OAAO4G,gBAAkB/Q,OAAOsJ,UAAUa,OAAO2G,oBAGlE/S,WAAW,WACP9J,EAAKkhB,mBAAmBD,GACxBlV,OAAOsJ,UAAUa,OAAO0G,mBAAqB,IAC9C7Q,OAAOsJ,UAAUa,OAAO0G,mBAG3B5c,EAAKkhB,mBAAmBD,GAE5BlV,OAAOsJ,UAAUa,OAAO4G,mBAGxB9c,EAAK2gB,oBAELxkB,EAAEyU,KAAK5Q,EAAK2gB,qBACP7P,KAAK,SAAUzM,GACZ,IAAIya,EAAU9e,EAAKmhB,aACkC,mBAA1CnhB,EAAKohB,mCACZphB,EAAKohB,oCAETtC,EAAQra,OAAOJ,GAGf2c,EAAkBjgB,GAClBf,EAAKqhB,eAAeN,cAAe/gB,EAAK4F,WAAWgY,mBAI3DoD,EAAkBjgB,IAM1BmgB,mBAAoB,SAAUngB,GAC1B,IAAIf,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClB+Q,EAAO3W,EAAKoT,UAEhBpT,EAAK8e,QAAU9e,EAAKmhB,aAGhBnhB,EAAK4X,mBACL5X,EAAK4X,kBAAkBiB,UAIvBjT,EAAW8P,SAEP1V,EAAK0R,cAAcwO,cAAgBlgB,EAAKshB,uBACxCthB,EAAKshB,yBAELthB,EAAKuhB,aAKTvhB,EAAKwhB,mBAAmBzgB,GAIhB,aAAR4V,EACA3W,EAAKyhB,8BAELzhB,EAAK0hB,2BAGT1hB,EAAKqhB,cAAcN,cAAe/gB,EAAK4F,WAAW+X,gBAClD3d,EAAKqhB,eAAeN,cAAe/gB,EAAK4F,WAAWgY,kBAKvD6D,4BAA6B,WACzB,IAAIzhB,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClB5F,EAAKsT,eAAiBtT,EAAKsR,MAAMgE,iBACjCtV,EAAK2hB,6BAIL/b,EAAW8P,SACX1V,EAAK+Y,oBAEL/Y,EAAK4hB,4BAIT5hB,EAAK6hB,2BAKTH,yBAA0B,WACXzhB,KAGNgZ,sBAHMhZ,KAMN4hB,2BAKTpB,mBAAoB,SAAUpc,EAAMyB,GAGhC,OADAA,EAAUA,GAAW,IADrBzB,EAAOA,GAAQ,IAEHuU,4BAA4B,cAAe9S,IAK3DqN,mBAAoB,WAKhB,OAJIpH,OAAOgB,KAAKkL,QAAQhY,KAAKc,UACzBgL,OAAO+V,IAAI,gCAAiC7hB,KAAM,SAG/CA,KAAKc,SAKhB8gB,wBAAyB,WACrB,IAAI7hB,EAAOC,KACP2F,EAAa5F,EAAK4F,WACtB5F,EAAK+hB,6BAA8B,EAG/Bnc,EAAW8P,SACN3J,OAAOgB,KAAKkL,QAAQjY,EAAKyL,QAC1BzL,EAAKgiB,gBAAgBhiB,EAAKyL,OAOlCzL,EAAK+hB,6BAA8B,GAKvCzW,QAAS,SAAUqP,GACf,IAEI3G,EAFAhU,EAAOC,KACP2F,EAAa5F,EAAK4F,WAElBqc,EAAYjiB,EAAKkiB,MAAQliB,EAAKkiB,KAAKtc,YAAc5F,EAAKkiB,KAAKtc,WAAWqc,UAG1E,IAAqD,IAAjDlW,OAAOgB,KAAK4I,aAAa/P,EAAWgQ,SACpC,OAAO,EAGX,IAAsD,IAAlD7J,OAAOgB,KAAK4I,aAAa/P,EAAW8P,YAAwBuM,EAC5D,OAAO,EAOX,GAHAjiB,EAAKmiB,qBAAqB,IAGtBpW,OAAOgB,KAAK4I,aAAa/P,EAAW+M,UAAW,CAC/C,IAAIsB,EAAOjU,EAAKqS,mBACZ+P,GAAW,EACX5H,EAAUxa,EAAKkiB,MAAQliB,GAAQiU,EAAKsG,WAAW3U,EAAWuP,OAC1DkN,EAAc,UAAU/E,KAAK1X,EAAWpH,MAW5C,GATAgc,EAAQ8H,OAAO,SAAUpM,GACrB,OAAOA,EAAOtQ,WAAWwP,IAAMxP,EAAWwP,KAC3CmN,QAAQ,SAAUrM,GACjB,GAAIA,EAAOkM,aAAelM,EAAOtQ,WAAW8P,UAAYuM,GAEpD,OADAG,GAAW,GACJ,KAIVA,IAAapiB,EAAK4F,WAAWwR,QAAS,CACvCpD,EAAUhU,EAAKiM,YAAY,wBAAwBkT,WAAW,UAAWvZ,EAAWuR,aACpF,IAAIqL,GAAerN,MAAOvP,EAAWuP,MAAOnB,QAASA,GAUrD,OARIqO,IACAG,EAAcrmB,EAAEkD,UAAWmjB,GACvBpN,GAAIxP,EAAWwP,GACfqN,QAASJ,KAIjB1H,EAAgBxZ,KAAKqhB,IACd,GAKf,GAAyB,aAArB5c,EAAW4Q,QAEX,GAAIxW,EAAKqX,aACDrX,EAAKqX,YAAYqL,YAAc1iB,EAAK0iB,WAGpC,OAFA1O,EAAUhU,EAAKiM,YAAY,4BAC3B0O,EAAgBxZ,MAAMgU,MAAOvP,EAAWuP,MAAOnB,QAASA,KACjD,OAGZ,GAAyB,UAArBpO,EAAW4Q,OAAoB,CACtC,IAAIsI,EAAU3iB,EAAE,QAAS6D,EAAKe,SAG9B,GAAI+d,GAAWA,EAAQ7d,KAAK,YAAa,CACrC,GAAsB,KAAlB6d,EAAQ6D,MAQR,OANA3O,EAAUhU,EAAKiM,YAAY,4BAC3B0O,EAAgBxZ,MACZgU,MAAOvP,EAAWuP,MAClBnB,QAASA,KAGN,EACJ,GAAI8K,EAAQ6D,OAAS7D,EAAQ7d,KAAK,YAIrC,OAHA+S,EAAUhU,EAAKiM,YAAY,4BAC3B0O,EAAgBxZ,MAAMgU,MAAOvP,EAAWuP,MAAOnB,QAASA,KAEjD,GAMnB,IAAI4O,GAAiB5iB,EAAKkiB,OAAQliB,EAAKkiB,KAAKW,WAAY7iB,EAAKkiB,KAAKW,UAAU7iB,EAAK4F,WAAWuP,OAAOvP,WAAW8P,SAC9G,GAAwB,iBAApB9P,EAAWpH,WAAoDkB,IAAzBkG,EAAW4X,WAA2B5X,EAAW4X,UAAY,GAAKzR,OAAOgB,KAAK+V,UAAUld,EAAW4X,aACrIoF,IAAoBA,GAAkB5iB,EAAK+iB,yBAA0B,CACrE,IAAIvF,EAAY,IAAI7e,OAAOiH,EAAW4X,WAClC/R,EAAQzL,EAAK0iB,WAEjB,GAAIjX,GAASA,EAAMf,WAAW1I,OAASwb,EAGnC,OAFAxJ,EAAUhU,EAAKiM,YAAY,+BAA+BkT,WAAW,cAAe3B,GACpF7C,EAAgBxZ,MAAMgU,MAAOvP,EAAWuP,MAAOnB,QAASA,KACjD,EAKnB,OAAO,GAMXoO,SAAU,WACN,IAEI3W,EAFOxL,KAEMyiB,WAMjB,OAJIjX,GAAkC,SAJ3BxL,KAIO2F,WAAWpH,OACzBiN,EAA2B,iBAAZ,EAAuBA,EAAMiS,OAASjS,IAGjDM,OAAOgB,KAAKkL,QAAQxM,IAKhC8V,WAAY,aAKZC,mBAAoB,aAKpBzI,kBAAmB,aAKnB6I,0BAA2B,aAK3B3I,oBAAqB,aAKrBoI,cAAe,SAAUN,EAAeiC,GACpC,IAAIhjB,EAAOC,KACP2F,EAAa5F,EAAK4F,WAEtB,GAAyB,MAArB5F,EAAKmhB,aAAT,EAGA6B,EAASA,OAEErY,OACP3K,EAAKijB,YAAYD,EAAOrY,MAAOoW,GAE/BiC,EAAOE,YACPljB,EAAKoY,sBAAsB4K,EAAOE,aAGlCF,EAAOG,MAASH,EAAOG,MAASpC,GAChC/gB,EAAKojB,eAAeJ,EAAOG,KAAMpC,GAEjCiC,EAAOK,QACPrjB,EAAKsjB,iBAAiBN,EAAOK,OAAQtC,GAErCiC,EAAOO,WACPvjB,EAAKwjB,oBAAoBR,EAAOO,UAAWxC,GAE3CiC,EAAOS,YACPzjB,EAAK0jB,qBAAqBV,EAAOS,WAAY1C,GAE7CiC,EAAOvQ,MACPzS,EAAK2jB,eAAeX,EAAOvQ,KAAMsO,GAIrCnb,EAAW+M,SAAkCjT,MAAvBkG,EAAW+M,UAAwB5G,OAAOgB,KAAK4I,aAAa/P,EAAW+M,UAC7F,IAAIiD,EAAgClW,MAAtBkG,EAAWgQ,SAAuB7J,OAAOgB,KAAK4I,aAAa/P,EAAWgQ,SAChFhQ,EAAW+M,UACX3S,EAAK4jB,eAAehe,EAAW+M,UAE9BiD,IACG5V,EAAKkiB,KACLliB,EAAK6jB,qBAAqBjO,GAE1B5V,EAAKqY,iBAAiBzC,MAOlCkO,SAAU,SAAUrY,EAAOsY,GACvB,IAAI/jB,EAAOC,KACX8jB,OAAkCrkB,IAAlBqkB,GAA8BA,EAExChY,OAAOgB,KAAKiX,iBAAiBvY,EAAOzL,EAAKyL,SAE3CzL,EAAK4F,WAAWuY,cAAgBne,EAAK4F,WAAWsY,cAAgBle,EAAKyL,MAGrEzL,EAAKyL,MAAQzL,EAAK4F,WAAW6F,MAAQA,EACjCzL,EAAK4F,WAAW+M,UAA8B,aAAlB3S,EAAKoT,YAE7BpT,EAAKikB,kBACLjkB,EAAKkkB,qBAAoB,GAEzBlkB,EAAKkkB,qBAAoB,IAK7BH,IAAkB/jB,EAAK+hB,8BACvB/hB,EAAKmc,sBACLnc,EAAKmkB,2BAKjBF,cAAe,SAAUtJ,GACrB,IACI/U,EADO3F,KACW2F,WAEtB,QAAImG,OAAOgB,KAAK4I,aAAa/P,EAAW+M,YAH7B1S,KAIGmiB,cACNpO,QALG/T,KAKYgM,YAAY,wBAAwBkT,WAAW,UAAWvZ,EAAWuR,aACpFwD,EAAgBxZ,MACZgU,MAAOvP,EAAWuP,MAClBnB,QAASA,WAEN,IAMnBoQ,oBAAqB,WAEjB,OADWnkB,KACF2F,WAAW4Q,SADTvW,KACwBoX,aADxBpX,KAEKyiB,YAFLziB,KAEwBoX,YAAYqL,YAQnDvG,oBAAqB,SAAUhd,IAE3BA,EAASA,OACFid,aAA6B1c,IAAnBP,EAAOid,SAAwBjd,EAAOid,QAF5Cnc,KAGN+S,eAAe,gBAAiBkD,OAH1BjW,KAGwCmc,QAASjd,EAAOid,WAKvE+H,sBAAuB,WACRlkB,KACN+S,eAAe,kBAAmBkD,OAD5BjW,QAMf+hB,gBAAiB,SAAUvW,GACvB,IAAIzL,EAAOC,KACP6e,EAAU9e,EAAKmhB,aAKnB,GAFAnhB,EAAK8jB,SAASrY,GAAO,IAEhBzL,EAAK4F,WAAW8P,WAAyC,UAA5B1V,EAAK4F,WAAWye,SAAoD,UAA5BrkB,EAAK4F,WAAWye,UAAuD,IAAhCtY,OAAO6H,SAAS0Q,aAAwB,CAErJ,IAAIC,EAAevkB,EAAKwkB,gBAAgB/Y,GACX,iBAAlB,GAAuD,iBAAlB,IAC5C8Y,EAAexY,OAAOgB,KAAK0X,aAAaF,GACxCpoB,EAAE2iB,GAASza,KAAK,mCAAqCkgB,EAAe,eAOhF7B,SAAU,WACN,OAAOziB,KAAKwL,OAKhB+Y,gBAAiB,WACb,OAAOvkB,KAAKyiB,YAKhBgC,SAAU,WACN3Y,OAAOgB,KAAK4X,cAAc,aAK9BxD,WAAY,WACRpV,OAAOgB,KAAK4X,cAAc,eAK9BC,iBAAkB,WACd7Y,OAAOgB,KAAK4X,cAAc,qBAK9B/D,cAAe,aAKfuB,qBAAsB,SAAUnO,GAC5B/T,KAAK4kB,kBAAoB7Q,GAK7B6M,eAAgB,WACZ,IAAInb,EAASzF,KAAKyiB,WACdoC,EAAgB,GAYpB,OAVI/Y,OAAOgB,KAAKgY,SAASrf,SAAqC,IAAlBA,EAAY,MACpDof,EAAgB/Y,OAAOgB,KAAK0X,aAAa/e,EAAO+F,OACxCM,OAAOgB,KAAKkL,QAAQvS,KAExBof,EADA/Y,OAAOgB,KAAKiY,SAAStf,GACLqG,OAAOgB,KAAKkY,oBAAoBvf,GAEhCA,GAIjBof,GAMXxD,uBAAwB,aAMxB4D,oBAAqB,SAAU7G,GAC3Bpe,KAAK2F,WAAWyY,YAAcA,GAMlCuB,sBAAuB,SAAUvB,GAC7B,MAAO,IAMX8G,iBAAkB,SAAUC,GACxBnlB,KAAK2F,WAAWoY,WAAaoH,GAMjCC,iBAAkB,SAAUD,GACxBnlB,KAAK2F,WAAWqY,WAAamH,GAMjCtF,cAAe,SAAUsF,GACrB,MAAO,IAMXE,qBAAsB,aAItBrC,YAAa,SAAUtY,EAAOoW,GAC1B,IAAI/gB,EAAOC,KACP6e,EAAU9e,EAAKmhB,aACftC,EAAQ7e,EAAK0kB,WACb3D,OAAyC,IAAjBA,GAAiD,MAAjBA,GAAyBA,EAEjFjC,GAAWD,IACE,QAATlU,EAEoC,UAAhC3K,EAAK4F,WAAWyY,aAA4B0C,GAM5C/gB,EAAKe,QAAQD,KAAK,WACdb,KAAK/B,MAAMqnB,YAAY,QAAS5a,EAAO,eAGf,QAAxB3K,EAAK4F,WAAWpH,MAChBwB,EAAKmhB,aAAa5f,KAAK,iCAAiCT,KAAK,WACzDb,KAAK/B,MAAMqnB,YAAY,QAAS5a,EAAO,eAI/C3K,EAAK0kB,WAAWnjB,KAAK,SAASd,IAAI,QAASkK,EAAO,eACjB,IAA7B3K,EAAK4F,WAAW8P,WAChB1V,EAAKwlB,qBAAqBxlB,EAAKmhB,cAAc1gB,IAAI,QAASkK,EAAO,cACjE3K,EAAKwlB,qBAAqBrpB,EAAE,QAAS6D,EAAKmhB,cAAc1gB,IAAI,QAASkK,EAAO,kBAlBhF3K,EAAKwlB,qBAAqBxlB,EAAKmhB,cAAc1gB,IAAI,QAASkK,EAAO,cACjE3K,EAAKmhB,aAAa5f,KAAK,KAAKT,KAAK,SAAUgD,EAAG/C,GAC1Cf,EAAKwlB,qBAAqBzkB,GAASN,IAAI,QAASkK,EAAO,kBAoB/D3K,EAAKe,QAAQN,IAAI,QAAS,IAC1BT,EAAK0kB,WAAWnjB,KAAK,SAASd,IAAI,QAAS,IAC3CT,EAAKmhB,aAAa1gB,IAAI,QAAS,IAE/BT,EAAKmhB,aAAa5f,KAAK,mBAAmBT,KAAK,SAAUgD,EAAG/C,GACxD,IAAI0kB,EAAgBtpB,EAAE4E,GAASE,KAAK,kBAAoB,GACxDjB,EAAKwlB,qBAAqBzkB,GAASN,IAAI,QAASglB,QAOhErN,sBAAuB,SAAUzN,GAC7B,IAAI3K,EAAOC,KACP6e,EAAU9e,EAAKmhB,aACftC,EAAQ7e,EAAK0kB,WAEjB,GAAI5F,GAAWD,EACX,GAAa,QAATlU,EAAiB,CACjB3K,EAAKe,QAAQD,KAAK,WACdb,KAAK/B,MAAMqnB,YAAY,mBAAoB5a,EAAO,oBAGX,IAA/BkU,EAAMtd,KAAK,SAAc,MACjCvB,EAAK0kB,WAAWnjB,KAAK,SAASrD,MAAM,mBAAoByM,EAAO,aAE/D3K,EAAK0kB,WAAWnjB,KAAK,SAASd,IAAI,mBAAoBkK,EAAO,cAGjE,IAAI+a,EAAe1lB,EAAK0kB,WAAWrZ,KAAK,SACxCqa,GAAgB,sBAAwB/a,EAAQ,aAChD3K,EAAK0kB,WAAWrZ,KAAK,QAASqa,QAE9B1lB,EAAKe,QAAQN,IAAI,mBAAoB,IACrCT,EAAK0kB,WAAWnjB,KAAK,SAASd,IAAI,mBAAoB,IACtDT,EAAKmhB,aAAa1gB,IAAI,mBAAoB,IAC1CT,EAAKmhB,aAAa5f,KAAK,mBAAmBT,KAAK,SAAUgD,EAAG/C,GACxD,IAAI0kB,EAAgBtpB,EAAE4E,GAASE,KAAK,kBAAoB,GACxD9E,EAAE4E,GAASN,IAAI,mBAAoBglB,MAOnDE,mBAAoB,WAEhB,OADW1lB,KACCykB,WAAWnjB,KAAK,UAIhC6hB,eAAgB,SAAUD,EAAMpC,GAC5B,IAAI/gB,EAAOC,KACP8gB,OAAyC,IAAjBA,GAAiD,MAAjBA,GAAyBA,EAG/C,GAAlChV,OAAOgB,KAAK4I,aAAawN,IAAkBpC,GAC3C/gB,EAAK2lB,qBAAqBllB,IAAI,cAAe,OAAQ,cACrDT,EAAKmhB,aAAargB,KAAK,SAAUgD,EAAG/C,GAChC5E,EAAE4E,GAASN,IAAI,cAAe,OAAQ,iBAItCsgB,GACA/gB,EAAK2lB,qBAAqBllB,IAAI,cAAe,SAAU,cAE1DsgB,IACqC,GAAlChV,OAAOgB,KAAK4I,aAAawN,GACzBnjB,EAAKmhB,aAAa5f,KAAK,KAAKT,KAAK,SAAUgD,EAAG/C,GAC1C5E,EAAE4E,GAASN,IAAI,cAAe,OAAQ,iBAG1CT,EAAKmhB,aAAa5f,KAAK,KAAKT,KAAK,SAAUgD,EAAG/C,GAC1C5E,EAAE4E,GAASN,IAAI,cAAe,SAAU,gBAE5CT,EAAKmhB,aAAa1gB,IAAI,cAAe,SAAU,iBAK3DsiB,sBAAuB,WACnB,IACInd,EADO3F,KACW2F,WAClB6F,EAFOxL,KAEMyiB,WACbkD,EAAehgB,EAAWsY,cAC1B2H,EAAYjgB,EAAWkgB,aACvBpgB,GAAS,EACT0X,EAAarR,OAAOgB,KAAKsQ,cAAczX,EAAWpH,MAGtD,GAAIrC,EAAE4pB,iBACF,OAAO,EAIX,GAAmB,SAAf3I,GAAkD,YAd3Cnd,KAcuBsT,QAAQiN,QACtC,OAAO,EAGX,IAAK,QAAS,aAAc,OAAQ,YAAY,QAAS,cAAcwF,SAAS5I,IAAe,oBAAoBE,KAAKF,GAChH3R,QAA0B/L,IAAjB+L,EAAMzJ,SACfyJ,EAAQA,EAAM,IAEdma,QAAwClmB,IAAxBkmB,EAAa5jB,SAC7B4jB,EAAeA,EAAa,IAE5BC,QAAkCnmB,IAArBmmB,EAAU7jB,SACvB6jB,EAAYA,EAAU,IAE1Bpa,EAAQA,GAASA,EAAM2J,GAAK3J,EAAM2J,GAAK3J,EACvCma,EAAeA,GAAgBA,EAAaxQ,GAAKwQ,EAAaxQ,GAAKwQ,EAG/DlgB,OADoB,KADxBmgB,EAAYA,GAAaA,EAAUzQ,GAAKyQ,EAAUzQ,GAAKyQ,IACH,MAAbA,EACzBD,GAAgBna,GAAWma,GAAgBC,EAE3CD,GAAgBna,OAE3B,GAAmB,YAAf2R,GAA2C,iBAAfA,GAAgD,eAAfA,EACpE1X,EAAUqG,OAAOgB,KAAK4I,aAAaiQ,IAAiB7Z,OAAOgB,KAAK4I,aAAalK,QAC1E,GAAmB,iBAAf2R,EACP1X,IAAW,OACR,GAAmB,WAAf0X,EAIH1X,GAHW,OAAV+F,GAA4B,KAAVA,GAAmC,OAAjBma,GAA0C,KAAjBA,IAGpDA,IAAiBna,OAE5B,GAAmB,SAAf2R,EAIH1X,GAHW,OAAV+F,GAA4B,KAAVA,GAAmC,OAAjBma,GAA0C,KAAjBA,IAGpDA,IAAiBna,OAE5B,GAAmB,SAAf2R,EAIH1X,KAHCkgB,IAAiBna,IAGRma,GAAgBna,OAE3B,GAAmB,mBAAf2R,EAAiC,CAExC1X,GAAS,EACT,IAAIugB,KACJ,IAEQA,EADwB,iBAAjBL,EACWlR,KAAKC,MAAMiR,GAEXA,EAExB,MAAO/nB,IAGT,IAAIqoB,EAAc,SAAUC,EAAMC,GAC9BD,EAAOA,GAAQ,GAGf,IADA,IAAIzgB,GAAS,EACJ5B,EAAI,EAAGoY,GAFhBkK,EAAYA,OAEkBpkB,OAAQ8B,EAAIoY,EAAGpY,IACzC,GAAIsiB,EAAUtiB,GAAGuiB,YAAcF,EAAM,CACjCzgB,GAAS,EACT,MAGR,OAAOA,GAGX,GAAIugB,EAAgBjkB,QAAUyJ,EAAMzJ,OAChC,IAAK,IAAI8B,EAAI,EAAGoY,EAAI+J,EAAgBjkB,OAAQ8B,EAAIoY,EAAGpY,IAC1CoiB,EAAYD,EAAgBniB,GAAGuiB,WAAY5a,KAC5C/F,GAAS,QAKjBA,GAAS,OAEV,GAAmB,wBAAf0X,GAAuD,mBAAfA,EAG3C1X,EADAkgB,EAAa5jB,QAAUyJ,EAAMzJ,QAGnB0S,KAAKqB,OAAOtK,IAAUiJ,KAAKqB,OAAO6P,QAE7C,GAAmB,UAAfxI,EAEH1X,IADgB,MAAhBkgB,GAAwBna,EAAM9I,SAAQ,GAAQ,QAK/C,GAAmB,eAAfya,EAA6B,CACpC,IAAIkJ,KACJ,IACIA,EAAc5R,KAAKC,MAAMlJ,GAC3B,MAAO5N,GACLsE,QAAQ2f,IAAI,wDAEhBpc,EAAUgP,KAAKqB,OAAO6P,IAAiBlR,KAAKqB,OAAOuQ,EAAY7a,YAE/D/F,EAAUkgB,IAAiBna,EAG/B,OAAO/F,GAIX4d,iBAAkB,SAAUD,EAAQtC,GAChC,IAAI/gB,EAAOC,KACP8gB,OAAyC,IAAjBA,GAAiD,MAAjBA,GAAyBA,EAGlD,SAA/B/gB,EAAK4F,WAAWyY,aAA2B0C,EAyBH,GAApChV,OAAOgB,KAAK4I,aAAa0N,GACzBrjB,EAAK2lB,qBAAqBllB,IAAI,aAAc,SAAU,cAEtDT,EAAK2lB,qBAAqBllB,IAAI,aAAc,SAAU,cA3BlB,GAApCsL,OAAOgB,KAAK4I,aAAa0N,IACrBtC,GACA/gB,EAAK2lB,qBAAqBllB,IAAI,aAAc,SAAU,cAEtDT,EAAK4F,WAAW8P,SAChB1V,EAAKmhB,aAAa5f,KAAK,KAAKT,KAAK,SAAUgD,EAAG/C,GAC1Cf,EAAKwlB,qBAAqBzkB,GAASN,IAAI,aAAc,SAAU,gBAGnET,EAAKwlB,qBAAqBxlB,EAAKmhB,cAAc1gB,IAAI,aAAc,SAAU,gBAGzEsgB,GACA/gB,EAAK2lB,qBAAqBllB,IAAI,aAAc,SAAU,cAEtDT,EAAK4F,WAAW8P,SAChB1V,EAAKmhB,aAAa5f,KAAK,KAAKT,KAAK,SAAUgD,EAAG/C,GAC1Cf,EAAKwlB,qBAAqBzkB,GAASN,IAAI,aAAc,SAAU,gBAGnET,EAAKwlB,qBAAqBxlB,EAAKmhB,cAAc1gB,IAAI,aAAc,SAAU,gBAazF+iB,oBAAqB,SAAUD,EAAWxC,GACtC,IAAI/gB,EAAOC,KACP0d,EAAa3d,EAAK4F,WAAW+X,eAC7BC,EAAc5d,EAAK4F,WAAWgY,gBAC9B6F,EAAa1X,OAAOgB,KAAK4I,aAAagI,EAAW8F,YAAc,gBAAkB,GACjF8C,EAAkBxa,OAAOgB,KAAK4I,aAAaiI,EAAY6F,YAAc,gBAAkB,GACvF1C,OAAyC,IAAjBA,GAAiD,MAAjBA,GAAyBA,EAG1C,GAAvChV,OAAOgB,KAAK4I,aAAa4N,IAAsBxC,GAC/C/gB,EAAK2lB,qBAAqBllB,IAAI,kBAAmBgjB,EAAa,YAAa,cAC3EzjB,EAAKmhB,aAAargB,KAAK,SAAUgD,EAAG/C,GAChCf,EAAKwlB,qBAAqBzkB,GAASN,IAAI,kBAAmBgjB,EAAa,gBAGvE1C,GACA/gB,EAAK2lB,qBAAqBllB,IAAI,kBAAmBgjB,EAAY,cAElC,SAA/BzjB,EAAK4F,WAAWyY,aAA2B0C,IACA,GAAvChV,OAAOgB,KAAK4I,aAAa4N,GACrBvjB,EAAK4F,WAAW8P,SAChB1V,EAAKmhB,aAAa5f,KAAK,KAAKT,KAAK,SAAUgD,EAAG/C,GAC1Cf,EAAKwlB,qBAAqBzkB,GAASN,IAAI,kBAAmB8lB,EAAkB,YAAa,gBAG7FvmB,EAAKwlB,qBAAqBxlB,EAAKmhB,cAAc1gB,IAAI,kBAAmB8lB,EAAkB,YAAa,cAGvGvmB,EAAKmhB,aAAa5f,KAAK,KAAKT,KAAK,SAAUgD,EAAG/C,GAC1Cf,EAAKwlB,qBAAqBzkB,GAASN,IAAI,kBAAmB8lB,EAAiB,kBAO3F7C,qBAAsB,SAAUD,EAAY1C,GACxC,IAAI/gB,EAAOC,KACP0d,EAAa3d,EAAK4F,WAAW+X,eAC7BC,EAAc5d,EAAK4F,WAAWgY,gBAC9B2F,EAAYxX,OAAOgB,KAAK4I,aAAagI,EAAW4F,WAAa,aAAe,GAC5EiD,EAAiBza,OAAOgB,KAAK4I,aAAaiI,EAAY2F,WAAa,aAAe,GAClFxC,OAAyC,IAAjBA,GAAiD,MAAjBA,GAAyBA,EAGzC,GAAxChV,OAAOgB,KAAK4I,aAAa8N,IAAuB1C,EAChD/gB,EAAK2lB,qBAAqBllB,IAAI,kBAAmB8iB,EAAY,eAAgB,cAEzExC,GACA/gB,EAAK2lB,qBAAqBllB,IAAI,kBAAmB8iB,EAAW,cAGjC,SAA/BvjB,EAAK4F,WAAWyY,aAA2B0C,IACC,GAAxChV,OAAOgB,KAAK4I,aAAa8N,GACrBzjB,EAAK4F,WAAW8P,SAChB1V,EAAKmhB,aAAa5f,KAAK,KAAKT,KAAK,SAAUgD,EAAG/C,GAC1Cf,EAAKwlB,qBAAqBzkB,GAASN,IAAI,kBAAmB+lB,EAAiB,eAAgB,gBAG/FxmB,EAAKwlB,qBAAqBxlB,EAAKmhB,cAAc1gB,IAAI,kBAAmB+lB,EAAiB,eAAgB,cAGrGxmB,EAAK4F,WAAW8P,SAChB1V,EAAKmhB,aAAa5f,KAAK,KAAKT,KAAK,SAAUgD,EAAG/C,GAC1Cf,EAAKwlB,qBAAqBzkB,GAASN,IAAI,kBAAmB+lB,EAAgB,gBAG9ExmB,EAAKwlB,qBAAqBxlB,EAAKmhB,cAAc1gB,IAAI,kBAAmB+lB,EAAgB,gBAOpG7C,eAAgB,SAAUlR,EAAMsO,GAC5B,IAAI/gB,EAAOC,KACP8gB,OAAyC,IAAjBA,GAAiD,MAAjBA,GAAyBA,EAGrF,GAAY,KAARtO,EAAa,CACb,IAAIoM,EAAQ7e,EAAK2lB,qBACbc,EAAe,IAAqB,GAAf9nB,OAAO8T,GAAc,IAI9C,GAHIsO,GACAlC,EAAMpe,IAAI,YAAagmB,EAAa,cAEL,SAA/BzmB,EAAK4F,WAAWyY,cAA2B0C,EAAe,CAC1D,IAAIjC,EAAU9e,EAAKmhB,aACc,iBAAtBrC,EAAQxb,YAA0Bwb,EAAQxb,WAAWtB,OAAS,EACrEhC,EAAKwlB,qBAAqB1G,EAAQxb,YAAY7C,IAAI,YAAagmB,EAAa,eAE5EzmB,EAAKwlB,qBAAqB1G,GAASre,IAAI,YAAagmB,EAAa,eAEpB,GAAzCzmB,EAAK4F,WAAWpH,KAAKmE,QAAQ,SAAiB8P,EAAO,GAAsBqM,EAASxb,SAAS,GAAGlF,OAAO,EAAIqU,EAAO,KAG1HzS,EAAKwlB,qBAAqB1G,EAAQvd,KAAK,2BAA2Bd,IAAI,cAAe,aAQjG+kB,qBAAsB,SAAUrR,GAC5B,OAAOhY,EAAEgY,IAIbkE,iBAAkB,SAAUC,GACxB,IAAItY,EAAOC,KACP2F,EAAa5F,EAAK4F,WAGoB,GAAtCmG,OAAOgB,KAAK4I,aAAa2C,GACD,WAApB1S,EAAWpH,OACXwB,EAAKe,QAAQW,OACb1B,EAAKe,QAAQN,IAAI,UAAW,IAExBmF,EAAW+M,WACN3S,EAAKoiB,YACNpiB,EAAKkkB,qBAAoB,KAI9BlkB,EAAKe,SACZf,EAAKe,QAAQG,OAIjB0E,EAAWgQ,QAAU0C,GAGzBC,kBAAmB,SAAUD,GACzB,IAAItY,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBkZ,EAAU9e,EAAKmhB,aAGnBvb,EAAW8P,SAAuB,WAAZ4C,EAAwBtY,EAAK8V,mBAAmBJ,SAAU3J,OAAOgB,KAAK4I,aAAa2C,GACzG1S,EAAWkY,mBAAqBlY,EAAWkY,oBAAsBlY,EAAW8P,SAG5EoJ,EAAQtZ,QAEiC,mBAA9BxF,EAAKugB,uBACZpkB,EAAEyU,KAAK5Q,EAAKugB,yBAAyBzP,KAAK,SAAUzM,GACG,mBAAxCrE,EAAK0mB,iCACZ1mB,EAAK0mB,kCACJ1mB,EAAK2gB,qBACN7B,EAAQra,OAAOJ,GACnBrE,EAAK0Z,kBAAkB1Z,EAAKe,YAQxC4lB,6BAA8B,SAAUrO,EAAUhG,EAAK6C,GACnD,IAAInV,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBkZ,EAAU9e,EAAKmhB,aAEfyF,EAAe5mB,EAAKkiB,KAAKW,UAAU1N,GACnC0R,EAAYD,EAAaE,aAAaxU,GAG1C1M,EAAW8P,SAAuB,WAAZ4C,EAAwBtY,EAAK8V,mBAAmBJ,SAAU3J,OAAOgB,KAAK4I,aAAa2C,GACzG1S,EAAWkY,mBAAqBlY,EAAWkY,oBAAsBlY,EAAW8P,SAG5EoJ,EAAQtZ,QACiC,mBAA9BxF,EAAKugB,uBACZpkB,EAAEyU,KAAK5Q,EAAKugB,yBAAyBzP,KAAK,SAAUzM,GAC3CrE,EAAK2gB,qBACN7B,EAAQra,OAAOJ,GAGnBrE,EAAK0Z,kBAAkB1Z,EAAKe,SAExB6E,EAAW8P,WAEXkR,EAAa5hB,KAAK,WAAY,WAC1B4hB,EAAaG,cAAclO,YAG/BgO,EAAU5T,OAAO,gBAGjB4T,EAAU7hB,KAAK,eAAgB,SAAUkR,EAAQgF,GAC7C0L,EAAaxK,SAAU,EACvBpc,EAAKkiB,KAAK8E,aAAaJ,EAAc,KAAMtU,EAAK4I,SAOpE0I,eAAgB,SAAUtL,GACtB,IAAItY,EAAOC,KACP2F,EAAa5F,EAAK4F,WAElBiZ,EAAQjZ,EAAWuR,aAAe,GAClC8P,EAAe9qB,EAAE,QAAS6D,EAAK0kB,YAC/BwC,EAAiBlnB,EAAKmhB,aAG1Bvb,EAAW+M,SAAW2F,EAGA,aAAlBtY,EAAKoT,WAA4BpT,EAAKikB,kBACtCjkB,EAAKkkB,qBAAoB,GACoB,GAAtCnY,OAAOgB,KAAK4I,aAAa2C,IAAqB1S,EAAW8P,SAC7B,OAA/B1V,EAAK4F,WAAWiQ,YAChBqR,EAAe5lB,QAAQ,8DAEvB4lB,EAAelmB,SAAS,oBACxBkmB,EAAe5lB,QAAQ,0DAIQ,OAA/BtB,EAAK4F,WAAWiQ,YAChB1Z,EAAE,yCAA0C+qB,GAAgB3jB,UAE5D2jB,EAAe1lB,YAAY,oBAC3BrF,EAAE,qCAAsC+qB,GAAgB3jB,UAKhE0jB,EAAa5iB,KAAKwa,GAGlB7e,EAAKmkB,yBASTD,oBAAqB,SAAU5L,GAC3B,IAAItY,EAAOC,KACP2F,EAAa5F,EAAK4F,WAElBiZ,EAAQjZ,EAAWuR,aAAe,GAClC8P,EAAe9qB,EAAE,QAAS6D,EAAK0kB,YAC/BwC,EAAiBlnB,EAAKmhB,aAGgB,GAAtCpV,OAAOgB,KAAK4I,aAAa2C,IAAqB1S,EAAW8P,SACtB,OAA/B1V,EAAK4F,WAAWiQ,YAChBqR,EAAe5lB,QAAQ,8DAEvB4lB,EAAelmB,SAAS,oBACxBkmB,EAAeziB,OAAO,0DAIS,OAA/BzE,EAAK4F,WAAWiQ,YAChB1Z,EAAE,yCAA0C+qB,GAAgB3jB,UAE5D2jB,EAAe1lB,YAAY,oBAC3BrF,EAAE,qCAAsC+qB,GAAgB3jB,UAKhE0jB,EAAa5iB,KAAKwa,GAGlB7e,EAAKmkB,yBAKT/I,eAAgB,SAAUF,GACtB,IAAIlb,EAAOC,KACP2F,EAAa5F,EAAK4F,WAGlB2V,GAFgBvb,EAAKyL,MACdzL,EAAKqS,mBACEzM,WAAWwP,IAAM,IAWnC,OATA8F,EAAOA,MAGPlb,EAAKgO,eAGLhO,EAAKgV,kBAGE7Y,EAAEyU,KAAK5Q,EAAK2R,YAAYwJ,cAAcC,gBACzCjG,MAAOvP,EAAWuP,MAClBkG,SAAUzV,EAAWwP,GACrBjD,YAAavM,EAAWuM,YACxBF,aAAerM,EAAWqM,cAAgBiJ,EAAKjJ,aAC/CsJ,OAAQA,KACR4L,KAAK,SAAUlmB,GAEfjB,EAAK8e,QAAU9e,EAAKonB,cAAgBpnB,EAAK6e,MAAQ,KAGjD,IAAIwI,EAAiBrnB,EAAKe,QAI1B,OAHAf,EAAK+R,eAAe9Q,EAAKiV,QAGlB/Z,EAAEyU,KAAK5Q,EAAKkW,UAAUiR,KAAK,SAAU9iB,GACxC,IAAIqB,EAASvJ,EAAEkI,GAEArE,EAAK0Z,kBAAkBhU,GAEtC,OADA1F,EAAK4F,WAAWsY,cAAgBle,EAAKyL,MAC9B/F,IACRyhB,KAAK,SAAUzhB,GAEd2hB,EAAe1L,YAAYjW,GAGtB1F,EAAKkiB,MACNliB,EAAKmc,qBAAqBC,SAAS,IAIvCpc,EAAKiV,qBAGV6G,KAAK,SAAU9H,GACVA,EAAUhU,EAAK+T,mBAAmBC,KAEvC+H,OAAO,WACN/b,EAAK+U,gBAObuS,qBAAsB,SAAUrmB,GAC5B,IAAIjB,EAAOC,KACP2F,EAAa5F,EAAK4F,WAGtB5F,EAAKgV,kBAGLhV,EAAK8e,QAAU9e,EAAKonB,cAAgBpnB,EAAK6e,MAAQ,KAEjD1iB,EAAEkD,OAAO4B,EAAKiV,OAAOtQ,YACjBuP,MAAOvP,EAAWuP,MAClBkG,SAAUzV,EAAWwP,GACrBnD,aAAerM,EAAWqM,cAAgB,OAC1CE,YAAavM,EAAWuM,cAI5B,IAAIkV,EAAiBrnB,EAAKe,QAI1B,OAHAf,EAAK+R,eAAe9Q,EAAKiV,QAGlB/Z,EAAEyU,KAAK5Q,EAAKkW,UAAUiR,KAAK,SAAU9iB,GACxC,IAAIqB,EAASvJ,EAAEkI,GAEArE,EAAK0Z,kBAAkBhU,GAEtC,OADA1F,EAAK4F,WAAWsY,cAAgBle,EAAKyL,MAC9B/F,IACRyhB,KAAK,SAAUzhB,GAEd2hB,EAAe1L,YAAYjW,GAC3B1F,EAAKmc,sBAGLnc,EAAKgV,qBAObuS,UAAW,WACItnB,KAEN6jB,SAAS,IAFH7jB,KAGNunB,qBAMTA,kBAAmB,WACf,IACI1I,EADO7e,KACQkhB,aACfsG,EAAQ3I,EAAQvd,KAAK,SAErBkmB,EAAMzlB,OAAS,EACfylB,EAAM9E,IALC1iB,KAKQyiB,aACqB,IAN7BziB,KAMK2F,WAAW8P,UACvBvZ,EAAE2iB,GAASza,KAAK,6CAOxBqjB,oBAAqB,WACNznB,KACN2F,WAAWsY,cADLje,KAC0BwL,OAKzCwO,YAAa,SAAUF,GACnB,IACInU,EADO3F,KACW2F,WAGlBuP,EAAQvP,EAAWuP,MACnB1J,EALOxL,KAKMyiB,WALNziB,KAOF8iB,0BAEAhX,OAAOgB,KAAKkL,QAAQ9C,KAChBpJ,OAAOgB,KAAKkL,QAAQxM,GAEJ,KAAVA,GAA0B,OAAVA,IACvBsO,EAAanU,EAAWuP,OAAS,IAFjC4E,EAAanU,EAAWuP,OAAS1J,IAXlCxL,KAmBDmkB,wBACNrK,EAAanU,EAAWuP,OAAS,KAIzC+E,WAAY,SAAUxU,GAElB,QADWzF,KACF8iB,0BACLrd,EAAOvE,MAAK,IACL,IASfwgB,2BAA4B,WACxB,IAAI3hB,EAAOC,KACSD,EAAKe,QAAQQ,KAAK,sCACxBomB,OAAO,WACjB3nB,EAAK4F,WAAWsX,SAAW/gB,EAAE8D,MAAMuI,GAAG,eAM9C6R,qBAAsB,SAAUN,GAC5B,IAAI/Z,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBuP,EAAQvP,EAAWuP,MACnB1J,EAAQzL,EAAK0iB,WACbkF,EAAa,KACjB,IAAK7b,OAAOgB,KAAKkL,QAAQ9C,GAAQ,CAC7B,GAAI1J,MAAAA,EAGImc,OAFiC,IAAdnc,EAAQ,GAEZM,OAAOgB,KAAKkL,QAAQxM,EAAM2J,IAAiB,MAAT3J,GAEzB,KAAVA,EAAgBA,EAAQ,KAG9C,IAAmB,OAAfmc,GAAuBhiB,EAAWsX,YAEN,SAAtBtX,EAAWye,SAA0C,GAApBze,EAAW6F,OAAiB,CAE/D,IAAIoc,EAAa7nB,EAAK4F,WAAWkiB,YAAc9nB,EAAK4F,WAAWmiB,YAAc,OAC7EF,EAAaA,EAAWG,cACxB,IAAIC,GACAxc,MAASmc,EACT1K,SAAYld,EAAK4F,WAAWsX,SAC5B/H,MAASvP,EAAWuP,MACpB0S,WAAcA,EACdK,UAAa,aAEsB,IAA5BtiB,EAAWuiB,cAA4D,KAA5BviB,EAAWuiB,eAE7DF,EAAaE,aAAeviB,EAAWuiB,cAE3CpO,EAAa5Y,KAAK8mB,MASlCjO,UAAW,WACP,IAAiBoO,EACbxiB,EADO3F,KACW2F,WAClByiB,EAActc,OAAOgB,KAAK4I,aAAa/P,EAAWyiB,eAAgB,EAClE3S,EAAW9P,EAAW8P,SAG1B,IAAK2S,GAAe3S,EAChB,OAAO,EAIX,GAAI9P,EAAWwR,QACX,OAAO,EAGX,GAAIxR,EAAWuP,OAEqC,GAjBzClV,KAgBSoS,mBACPkI,WAAW3U,EAAWuP,OAAOnT,OAAa,CAG/C,GAFAomB,IAAQjsB,EAAE4pB,kBAAmB5pB,EAAE4pB,iBAAiBrb,WAChDvO,EAAE4pB,iBAAmBqC,OAAQ1oB,EAAYvD,EAAE4pB,iBAnBxC9lB,KAoBM8iB,wBAEL,OADA5mB,EAAE4pB,iBAAmBqC,EAAQrc,OAAOgB,KAAK4I,aAAayS,GAASjsB,EAAE4pB,kBAC1D,EAEX5pB,EAAE4pB,iBAAmBqC,EAAQrc,OAAOgB,KAAK4I,aAAayS,GAASjsB,EAAE4pB,iBAIzE,OAAO,GAKX3L,mBAAoB,WAIhB,OAHWna,KACW2F,WAEPwR,SAQnB1E,MAAO,SAAU4V,GACb,IAAItoB,EAAOC,KAGX,GAAKD,EAAK4F,WAAWgQ,QAArB,CAGA3V,KAAKyM,SACL,IAAIkG,EAASzW,EAAE,yCAGX2W,EAAS,WACT,IAAIgM,EAAU9e,EAAKmhB,aACfoH,EAA0C,QAAxBvoB,EAAK4F,WAAWpH,KAAkBrC,EAAE,kCAAmC2iB,GAAW3iB,EAAE,kCAAmC2iB,GAAS3O,QAClJoY,EAAevmB,OAAS,GAGxB7F,EAAE2E,KAAKynB,EAAgB,SAAUzkB,GAC7B,IAAI0kB,EAAeD,EAAezkB,GAClC,GAAoC,UAAhC3H,EAAEqsB,GAAcnd,KAAK,SAAyD,QAAlClP,EAAEqsB,GAAc/nB,IAAI,YAA6D,UAArCtE,EAAEqsB,GAAc/nB,IAAI,cAE5G,IACSsL,OAAOgB,KAAK0b,QACb1c,OAAOgB,KAAK2b,iBAAiB9V,GAEjC4V,EAAa9V,QACf,MAAO7U,QAQzB1B,EAAEyU,KAAK5Q,EAAKuT,SACPzC,KAAK,WAEEwX,EAAO,EACPxe,WAAWgJ,EAAQwV,GAEnBxV,QAQhBwL,qBAAsB,SAAUD,GAC5B,MAAO,WAMXE,qBAAsB,SAAUF,GAC5B,MAAO,WAKXG,YAAa,SAAUmK,GAInB,OAAOA,GAMX7H,wBAAyB,WACrB,IAAI9gB,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBuP,EAAQ,GAEZ,GAAKvP,EAAW8P,SAAhB,CAGA9P,EAAWgjB,aAAehjB,EAAWgjB,cAAgB,MAgBrD,IAAIC,GACAC,YACIC,cAEQC,QACI7T,MAjBZA,EAFJvP,EAAWuP,MACPvP,EAAWqjB,2BACHrjB,EAAWqjB,2BAA6B,IAAMrjB,EAAWuP,MAEzDvP,EAAWuP,MAGnBvP,EAAWqjB,2BACHrjB,EAAWqjB,2BAA6B,IAAMrjB,EAAWwP,GAEzDxP,EAAWwP,GAUP8T,SAAY,UACZC,aAAgB,YAKhCC,WAEQjU,MAASA,EACTkU,QAAW,eACX/Q,SAAY1S,EAAWgjB,eAG/BA,cAAiBzT,GACjBmU,iBAIJntB,EAAEyU,KAAK5Q,EAAKuT,SAASzC,KAAK,WACX9Q,EAAKqS,mBACXkX,gBAAgBpU,EAAO0T,OAQpCtL,eAAgB,SAAUtc,EAAMuoB,EAAcC,GAC1C,IAAIzpB,EAAOC,KACPypB,EAAQvtB,EAAE0b,WAed,MAZmC,IAA/B7X,EAAK4F,WAAW0V,aAAqBra,IACrCA,EAAKjB,EAAK2R,YAAYL,MAAMqY,4BAA8B,eAAiB3pB,EAAK4F,WAAW0V,aAG/Fnf,EAAEyU,KAAK5Q,EAAKwT,iBAAiB1C,KAAK,WAC9B9Q,EAAK4pB,uBAAuB3oB,EAAMuoB,EAAcC,GAAY3Y,KAAK,WAC7D4Y,EAAM7Q,YACPiD,KAAK,WACJ4N,EAAMG,aAIPH,EAAM1R,WAGjB8R,eAAgB,WACZ,IACIrV,EADOxU,KACOoT,YAAYoB,OA4B9B,YA1BqB/U,IAAjBqM,OAAOge,OACPhe,OAAOge,SACPhe,OAAOge,MAAMC,cACTvV,YAAmB/U,IAAX+U,EAAuBA,OAAkC/U,IAAxBqM,OAAOge,MAAMtV,OAAuB1I,OAAOge,MAAMtV,YAAS/U,SAGxFA,IAAX+U,QAAsD/U,IAA9BqM,OAAOge,MAAMC,aACrCje,OAAOge,MAAMC,aAAavV,OAASA,OAEpB/U,IAAX+U,QAAsD/U,IAA9BqM,OAAOge,MAAMC,eACrCje,OAAOge,MAAMC,gBACbje,OAAOge,MAAMC,aAAavV,OAASA,GAOvCA,OAFO/U,IAAX+U,OACkC/U,IAA9BqM,OAAOge,MAAMC,kBACJtqB,EAEAqM,OAAOge,MAAMC,aAAavV,OAG9BA,GAUjBmV,uBAAwB,SAAU3oB,EAAMuoB,EAAcC,GAClD,IACIxV,EADOhU,KACKoS,mBACZzM,EAFO3F,KAEW2F,WAClBqkB,GACAhpB,KAAMA,EACNuoB,aAAcA,EACdC,WAAYA,EACZ7jB,YACI6O,OARGxU,KAQU6pB,iBACb1U,GAAIxP,EAAWwP,GACfD,MAAOvP,EAAWuP,MAClBhD,YAAavM,EAAWuM,YACxBmJ,YAAa1V,EAAW0V,cAIhC,OAAOrH,EAAK2V,uBAAuBK,IAKvC1W,MAAO,WAEH,OAAOpX,EAAEyU,KADE3Q,KACQwI,OAAO8K,QADftT,KAC6B8X,eAK5CtE,kBAAmB,WACf,IACIQ,EADOhU,KACKoS,mBAEhB,OAAI4B,EACOA,EAAKR,oBAET,MAKXsH,iBAAkB,SAAUzI,GACxB,IACI0I,EADO/a,KACewT,oBAE1B,OAAIuH,EACOA,EAAe1I,GAEnB,MAKXoM,qBAAsB,SAAUC,EAAYC,EAAYP,GAWpD,GANIM,EADc,OAAdC,QAA6C,IAAfD,EACjB,IAEAA,EAA4B,KAAdA,EAAoBA,EAAa,KAAQ,MAExEC,EAAaA,EAA4B,KAAdA,EAAoBA,EAAa,KAAQ,MAEjD,UAAfP,GAA0C,QAAfA,GAAwC,YAAfA,EAA2B,CAG/E,GAAIM,GAAc5S,OAAOgB,KAAKmd,eAAevL,GAAc,GACvDC,GAAc7S,OAAOgB,KAAKmd,eAAetL,GAAc,EACvD,OAAQC,MAAO,EAAGC,QAAS,KAG3BH,IAAeC,EAEfA,EAAa,KADbD,EAAa5S,OAAOgB,KAAKmd,eAAevL,KAGhCA,GAAcC,EAEtBD,EAAa,KADbC,EAAa7S,OAAOgB,KAAKmd,eAAetL,KAGxCD,EAAa5S,OAAOgB,KAAKmd,eAAevL,KACxCC,EAAa7S,OAAOgB,KAAKmd,eAAetL,KAGP,UAAmC,IA9BjE3e,KA8B4D,YAAkD,UA9B9GA,KA8BqF2F,WAAWmZ,aAC/FH,EAAa,IAAMD,QAI3BA,EAAa,IACbC,EAAa,IAGjB,OAAQC,MAAOF,EAAYG,QAASF,IAKxCuL,UAAW,WAEP,OADWlqB,KACCoS,mBAAmBlT,OAAOsV,QAAU1I,OAAOoI,QAAQM,QAKnE2V,cAAe,WAEX,OADWnqB,KACCoS,mBAAmBlT,OAAOkrB,YAActe,OAAOoI,QAAQkW,YAKvEC,UAAW,WAEP,OADWrqB,KACCoS,mBAAmBlT,OAAOorB,QAAUxe,OAAOoI,QAAQoW,QAKnEC,aAAc,WAEV,OADWvqB,KACCoS,mBAAmBzM,WAAW6kB,WAS9CC,gBAAiB,SAAU/f,GACvB,IACImU,EADO7e,KACQkhB,aACfrC,IACa,QAATnU,GACAmU,EAAQre,IAAI,QAASkK,GACrBmU,EAAQvd,KAAK,0BAA0BT,KAAK,SAAUgD,EAAG/C,GACrD5E,EAAE4E,GAASN,IAAI,QAASkK,OAG5BmU,EAAQre,IAAI,QAAS,IACrBqe,EAAQvd,KAAK,0BAA0BT,KAAK,SAAUgD,EAAG/C,GACrD5E,EAAE4E,GAASN,IAAI,QAAS,SAUxCkqB,0BAA2B,SAAUhgB,GACjC,IACImU,EADO7e,KACQkhB,aACfhJ,EAAkB,GAClByS,EAAkB,GAEtB,GAAI9L,EAMA,GALa,QAATnU,IACAwN,EAAkBxN,EAClBigB,EAAkB,QARf3qB,KAWE2F,WAAW8P,SAAU,CAC1B,IAAImV,GAAc,EAElB/L,EAAQvd,KAAK,mCAAmCT,KAAK,SAAUgD,EAAG/C,GAExC,QAAhBA,EAAQvC,MAAoC,YAAhBuC,EAAQvC,MAA0BrC,EAAE4E,GAASuP,SAAS,oBACpFua,GAAc,GAElB1uB,EAAE4E,GAASN,KACP8I,mBAAoB4O,EACpB2S,mBAAoBF,MAIvBC,GACD/L,EAAQ1a,QAAQ,MAAMtD,KAAK,SAAUgD,EAAG/C,GACpC5E,EAAE4E,GAASN,KACP8I,mBAAoB4O,EACpB2S,mBAAoBF,WAMhC9L,EAAQhe,KAAK,SAAUgD,EAAG/C,IAEV5E,EAAE4E,GAASuP,SAAS,2BAA8BwO,EAAQ1a,QAAQ,MAAQjI,EAAE4E,IACnFN,KACD8I,mBAAoB4O,EACpB2S,mBAAoBF,OAaxC/G,qBAAsB,SAAUvL,GAC5B,IACI1S,EADO3F,KACW2F,WAClBkZ,EAFO7e,KAEQkhB,aAEfrC,IAE0C,GAAtC/S,OAAOgB,KAAK4I,aAAa2C,IAEzBwG,EAAQre,IAAI,aAAc,WAC1Bqe,EAAQre,IAAI,UAAW,IATpBR,KAWEc,SAXFd,KAWkBc,QAAQW,QAG7Bod,EAAQre,IAAI,aAAc,WAKlCmF,EAAWgQ,QAAU0C,GAOzByS,mBAAoB,SAAUzS,GAC1B,IACI1S,EADO3F,KACW2F,WAClBkZ,EAFO7e,KAEQkhB,aAEfrC,IAE0C,GAAtC/S,OAAOgB,KAAK4I,aAAa2C,IAAqBvM,OAAOgB,KAAKkL,QANvDhY,KAMoEwL,QACvEqT,EAAQ9d,SAAS,oBACjB8d,EAAQra,OAAO,2DAEfqa,EAAQtd,YAAY,oBACpBrF,EAAE,qCAAsC2iB,GAASvb,UAGrDqC,EAAW+M,SAAW2F,IAO9B0S,qBAAsB,WACP/qB,KACN+N,eADM/N,KAENgrB,wBAA0B,IAAI9uB,EAAE0b,UAMzCqT,mBAAoB,WACLjrB,KACN8U,aADM9U,KAEFgrB,yBAFEhrB,KAE4BgrB,wBAAwBpS,iBAFpD5Y,KAGCgrB,yBAOhBE,qBAAsB,WAElB,OADWlrB,KACDgrB,wBADChrB,KAECgrB,wBAAwBjT,UADM7b,EAAEyU,MAAK,IAQrDwa,iBAAkB,WACd,IAAIprB,EAAOC,KAEX,GAAID,EAAKkiB,KAGL,IAFA,IAAIpe,EAAI9D,EAAKkiB,KAAKmJ,QAAQrpB,OAEnB8B,KAAM,GACT,GAAI9D,EAAKkiB,KAAKmJ,QAAQvnB,GAAG8B,WAAWuP,OAASnV,EAAK4F,WAAWuP,OACpB,GAAjCnV,EAAKkiB,KAAKmJ,QAAQvnB,GAAGyJ,SACrB,OAAO,EAKvB,OAAO,GAMX+d,iCAAkC,SAAUnsB,GACxC,IACIyG,EADO3F,KACW2F,WAClB2lB,EAAwBpsB,EAASA,EAAOgT,YAAcvM,EAAWuM,YAF1DlS,KAKN0R,YAAY6Z,qBAAqBrZ,YAAaoZ,KAMvDE,aAAc,WACV,MAA0B,WAAnBxrB,KAAKmT,WAMhBsY,gBAAiB,WACb,MAA0B,cAAnBzrB,KAAKmT,WAIhBuY,2BAA4B,WACpB5f,OAAOgB,KAAK6e,uBACZzvB,EAAE,cAAe8D,KAAKkhB,cAAclf,MAAM,SAAS2E,GAC/CA,EAAGjF,sBC1nEnBxF,EAAEmV,MAAMjS,OAAO,mCAOXgiB,cAAe,SAAUN,EAAeiC,GACpC,IAAIpd,EAAa3F,KAAK2F,WAEtB,GAA6B,kBAAlBmb,EAKX,GAAIA,EACA9gB,KAAK4rB,mBAAmB7I,OACrB,CACH/iB,KAAK6rB,qBAAqB9I,GAG1Bpd,EAAW+M,cAA4C,IAAzB/M,EAAmB,UAAoBmG,OAAOgB,KAAK4I,aAAa/P,EAAW+M,UACzG,IAAIiD,OAA0C,IAAxBhQ,EAAkB,SAAoBmG,OAAOgB,KAAK4I,aAAa/P,EAAWgQ,SAE5FhQ,EAAW+M,UACX1S,KAAK2jB,eAAehe,EAAW+M,UAG9BiD,GACD3V,KAAKoY,iBAAiBzC,QAlB1BzT,QAAQ4pB,KAAK,gEA4BrBF,mBAAoB,SAAU7I,GAC1B,IAAIgJ,EAAS/rB,KAAKykB,WACJ,MAAVsH,SAIuB,KAD3BhJ,EAASA,OACSG,OACdH,EAAOG,MAAO,GAGlBljB,KAAKmY,sBAAsB4K,EAAOE,YAC7B+I,gBAAgBD,EAAQhJ,EAAOrY,OAC/ByY,eAAe4I,EAAQhJ,EAAOG,MAC9BQ,eAAeqI,EAAQhJ,EAAOvQ,MAC9B6Q,iBAAiB0I,EAAQhJ,EAAOK,QAChC6I,qBAAqBF,GAAShJ,EAAOO,UAAY,YAAc,KAAOP,EAAOS,WAAa,gBAAkB,OAQrHqI,qBAAsB,SAAU9I,GAC5B,IAAImJ,EAAWlsB,KAAKkhB,aAChBiL,EAAYnsB,KAAKulB,qBAAqB2G,GAG1CnJ,EAASA,MAET/iB,KAAKgsB,gBAAgBG,EAAWpJ,EAAOrY,OAClCyY,eAAegJ,EAAWpJ,EAAOG,MACjCG,iBAAiB8I,EAAWpJ,EAAOK,QACnCM,eAAeyI,EAAWpJ,EAAOvQ,MACjCyZ,qBAAqBE,GAAYpJ,EAAOO,UAAY,YAAc,KAAOP,EAAOS,WAAa,gBAAkB,MAQxHR,YAAa,SAAUtY,GACnB,IAAIqhB,EAAS/rB,KAAKykB,WACdyH,EAAWlsB,KAAKkhB,aAChBiL,EAAYnsB,KAAKulB,qBAAqB2G,GAE1C,OAAOlsB,KACFgsB,gBAAgBD,EAAQrhB,GACxBshB,gBAAgBG,EAAWzhB,IASpCshB,gBAAiB,SAAU1mB,EAAUoF,GACjC,QAAiBjL,IAAb6F,EAAwB,OAAOtF,KACnC,QAAcP,IAAViL,EAAqB,OAAO1K,KAEhC,IAAI/B,EAAkB,SAAVyM,EAAmBA,EAAQ,GAGvC,OAFApF,EAAS9E,IAAI,QAASvC,GAEf+B,MASX0jB,eAAgB,SAAUpe,EAAUkN,GAChC,QAAa/S,IAAT+S,EAAoB,OAAOxS,KAC/B,QAAiBP,IAAb6F,EAAwB,OAAOtF,KAEnC,GAAa,MAATwS,EAAc,CACd,IAAIgU,EAAc,IAAqB,GAAf9nB,OAAO8T,GAAa,IAC5ClN,EAAS9E,IAAI,YAAagmB,GAG9B,OAAOxmB,MASXisB,qBAAsB,SAAU3mB,EAAU8mB,GACtC,YAAuB3sB,IAAnB2sB,EAAqCpsB,UACxBP,IAAb6F,EAA+BtF,MAEnCosB,GAAkB9mB,EAAS9E,IAAI,kBAAmB4rB,GAE3CpsB,OASXqjB,iBAAkB,SAAU/d,EAAU8d,GAClC,IAAInlB,EAAQ6N,OAAOgB,KAAK4I,aAAa0N,GAAU,SAAW,SAI1D,OAFA9d,EAAS9E,IAAI,aAAcvC,GAEpB+B,MASXmjB,eAAgB,SAAU4I,EAAQ7I,GAC9B,IAAIjlB,EAAQ6N,OAAOgB,KAAK4I,aAAawN,GAAQ,OAAS,SAItD,OAFA6I,EAAOvrB,IAAI,cAAevC,GAEnB+B,MAQXmY,sBAAuB,SAAUzN,GAC7B,YAAqB,IAAVA,EAA8B1K,MAE3B,SAAV0K,EACA1K,KAAKc,QAAQN,IAAI,mBAAoBkK,GAErC1K,KAAKc,QAAQN,IAAI,mBAAoB,IAGlCR,OAOXikB,oBAAqB,aAOrB6G,mBAAoB,SAAUzS,GAC1BrY,KAAK2jB,eAAetL,IAMxBkG,YAAa,SAAUmK,GACnB,YAAoB,IAATA,GAAiC,IAATA,EACxB,UAEJA,GAMXrK,qBAAsB,WAClB,MAAO,WAMXC,qBAAsB,WAClB,MAAO,aC7NfpiB,EAAEmV,MAAMjS,OAAO,4BAIXQ,KAAM,SAAUV,GACZ,IAAIa,EAAOC,KACPgB,EAAO9B,EAAO8B,KACdqrB,EAASvgB,OAAOgB,KAAKsS,eAGzBrf,EAAKusB,eACLvsB,EAAKwsB,kBACLxsB,EAAKysB,oBACLzsB,EAAK0sB,iBAGL1sB,EAAKmS,YAAclR,EAAK0rB,YAGxB3sB,EAAK2W,KAAOxX,EAAOwX,MAAQ,YAC3B3W,EAAK0S,MAAQvT,EAAOuT,MAGpB1S,EAAKb,OAASA,EAGdc,KAAKyM,OAAOvN,GAGZ,IAAI6U,EAAU,GAGVA,EADW,YAAXsY,EACUrsB,KAAKgM,YAAY,yCAAyCnG,QAAQ,gBAAiB,MAEnF7F,KAAKgM,YAAY,yCAI/B,IAAIrG,EAAa5F,EAAK4F,WA8BtB,GA7BAA,EAAW6kB,UAAYxpB,EAAKwpB,UAC5B7kB,EAAWgnB,kBAAoB7gB,OAAOgB,KAAK4I,aAAa1U,EAAK2rB,qBAAsB,EACnFhnB,EAAWinB,wBAA0BjnB,EAAWinB,yBAA2B7Y,EAC3EpO,EAAWiQ,YAAcjQ,EAAWiQ,aAAe,MACnDjQ,EAAWknB,QAAU/gB,OAAOgB,KAAK4I,aAAa/P,EAAWknB,WAAY,EACrElnB,EAAW0V,YAAcnc,EAAOmc,aAAe,GAC/C1V,EAAWmnB,aAAe5tB,EAAO4tB,iBACjCnnB,EAAWonB,YAAc7tB,EAAO8B,KAAK+rB,YAAc7tB,EAAO8B,KAAK+rB,YAAY7N,WAAW,MAAO,gBAAkB,GAC/GvZ,EAAWqnB,WAAa9tB,EAAO8B,KAAK+rB,YAAc7tB,EAAO8B,KAAK+rB,YAAYE,MAAM,UAGhFjtB,KAAKktB,YAAclsB,EAAKksB,YACxBltB,KAAK2L,QAAU3K,EAAK2K,QAGpB5L,EAAKotB,2BAA6BrhB,OAAO6H,WAA4D,IAAhD7H,OAAO6H,SAASyZ,4BAGrErtB,EAAKstB,kBAAkBrsB,GAGnBA,EAAKssB,cACLvtB,EAAKutB,YAActsB,EAAKssB,aAG5BttB,KAAKutB,sBAAwBvtB,KAAKwtB,cAGlCztB,EAAK0tB,mBAAoB,EACrBvuB,EAAOwuB,kBACP,OAAQxuB,EAAOwuB,mBACX,IAAK,gBACD3tB,EAAK0tB,mBAAoB,EAKrC1tB,EAAK4tB,0BAA4B7hB,OAAOgB,KAAK8gB,kBAAoB9hB,OAAOgB,KAAK6gB,4BAC7E5tB,EAAKkU,cAAgBnI,OAAOgB,KAAKmH,eAAeC,QAASnU,KAM7DstB,kBAAmB,SAAUrsB,GACzB,IAAIjB,EAAOC,KAEXD,EAAKwC,WAGDvB,EAAKuB,SACLrG,EAAE2E,KAAKG,EAAKuB,QAAS,SAAUsB,EAAG+L,GAC9B,IAAIhL,EAASgL,EAAKhL,OAAOe,WAGzBf,EAAOc,QAAWoG,OAAOgB,KAAKkL,QAAQpT,EAAOc,UAAY3F,EAAKiM,YAAYpH,EAAOc,UAAYd,EAAOc,QAA6Cd,EAAOc,QAA1C3F,EAAKiM,YAAYpH,EAAOc,SAGlId,EAAO+G,SACPzP,EAAE2E,KAAK+D,EAAO+G,QAAS,SAAU9H,EAAG+kB,GAChChkB,EAAOgkB,IAAU,IAKzBhkB,EAAOipB,QAAUhqB,EACjBe,EAAOgkB,OAAShkB,EAAOkpB,KAAO,OAC1BlpB,EAAOmpB,uBAAyB,yBAC5BnpB,EAAOopB,WAAa,OAChBppB,EAAOqpB,OAAS,SACZrpB,EAAOspB,KAAO,OACVtpB,EAAOupB,cAAgB,gBACnBvpB,EAAOwpB,SAAW,WAAa,GAGvDxpB,EAAOypB,KAA0B,SAAlBzpB,EAAOgkB,QAGlBhkB,EAAOkpB,MAAQlpB,EAAOspB,MAAQtpB,EAAOmpB,0BACrCnpB,EAAO0pB,SAAU,GAGjB1pB,EAAOioB,UACPjoB,EAAO2pB,aAAc,GAGrBxuB,EAAKotB,4BAA8BvoB,EAAOwpB,WAC1CxpB,EAAOopB,YAAa,EACpBppB,EAAO4pB,SAAU,EACjB5pB,EAAOypB,MAAO,EACQ,SAAlBzpB,EAAOgkB,QAAuC,kBAAlBhkB,EAAOgkB,SACnChkB,EAAO4pB,SAAU,IAKzB5pB,EAAO3G,MAAQ8B,EAAK0uB,iBAAiB7pB,GAGD,QAAhC7E,EAAK4F,WAAWiQ,aAA0B7V,EAAK4F,WAAW+oB,iBAG1D3uB,EAAKwC,QAAQrB,KAAK0D,GAFlB7E,EAAKwC,QAAQosB,QAAQ/pB,MAYrCwO,UAAW,WACP,OAAOpT,KAAKd,QAGhB0vB,SAAU,SAAUC,EAAUrjB,GACtBxL,KAAKd,SACLc,KAAKd,OAAO2vB,GAAYrjB,IAOhC2H,QAAS,WACL,OAAOnT,KAAK0W,MAKhBlD,kBAAmB,WAEf,GADWxT,KACFd,OACL,OAFOc,KAEKd,OAAO6b,gBAM3BnE,eAAgB,SAAUX,GACtB,IAAIlW,EAAOC,KACPkV,EAAQe,EAAOtQ,WAAWuP,MAC1BC,EAAKc,EAAOtQ,WAAWwP,GACvB5W,EAAO0X,EAAOtQ,WAAWpH,KACzBuwB,EAAU5Z,EAAQA,EAAQ,IAAMC,OAAK1V,EAEzCM,EAAKusB,YAAYnX,GAAMc,EACnBf,IACKnV,EAAKwsB,eAAerX,KACrBnV,EAAKwsB,eAAerX,OAExBnV,EAAKwsB,eAAerX,GAAOhU,KAAK+U,IAGhC6Y,IACK/uB,EAAKysB,iBAAiBsC,KACvB/uB,EAAKysB,iBAAiBsC,OAE1B/uB,EAAKysB,iBAAiBsC,GAAS5tB,KAAK+U,IAGnClW,EAAK0sB,cAAcluB,KACpBwB,EAAK0sB,cAAcluB,OAEvBwB,EAAK0sB,cAAcluB,GAAM2C,KAAK+U,IAKlCsG,iBAAkB,SAAUtG,GACxB,IAAIlW,EAAOC,KAMX,GAJID,EAAKusB,YAAYrW,EAAOtQ,WAAWwP,YAC5BpV,EAAKusB,YAAYrW,EAAOtQ,WAAWwP,IAG1Cc,EAAOtQ,WAAWuP,MAClB,GAAIhZ,EAAE6yB,QAAQhvB,EAAKwsB,eAAetW,EAAOtQ,WAAWuP,SAC7CnV,EAAKwsB,eAAetW,EAAOtQ,WAAWuP,OAAOnT,OAAS,EACzD,IAAK,IAAI8B,EAAI,EAAGoY,EAAIlc,EAAKwsB,eAAetW,EAAOtQ,WAAWuP,OAAOnT,OAAQ8B,EAAIoY,EAAGpY,IAAK,CAEjF,GADc9D,EAAKwsB,eAAetW,EAAOtQ,WAAWuP,OAAOrR,GAC/C8B,WAAWwP,KAAOc,EAAOtQ,WAAWwP,GAAI,CAChDpV,EAAKwsB,eAAetW,EAAOtQ,WAAWuP,OAAOuH,OAAO5Y,EAAG,GACvD9D,EAAKysB,iBAAiBvW,EAAOtQ,WAAWuP,MAAQ,IAAMe,EAAOtQ,WAAWwP,IAAIsH,OAAO5Y,EAAG,GACtF,mBAID9D,EAAKwsB,eAAetW,EAAOtQ,WAAWuP,OAKrD,GAAIe,EAAOtQ,WAAWpH,KAClB,CAAA,IAAIywB,EAAmBjvB,EAAKkvB,gBAAgBhZ,EAAOtQ,WAAWpH,MAC1D2wB,EAAyBF,EAAiBjtB,OAC1CotB,EAAYlZ,EAAOtQ,WAAWwP,IAAMc,EAAOtQ,WAAWuP,MAE1D,IAASrR,EAAI,EAAGA,EAAIqrB,EAAwBrrB,IAAK,CAC7C,IAAIurB,EAAaJ,EAAiBnrB,GAClC,QAAwC,IAA5BurB,EAAWzpB,WAAWwP,IAAqBia,EAAWzpB,WAAWwP,IAAMga,QACxC,IAA/BC,EAAWzpB,WAAWuP,OAAwBka,EAAWzpB,WAAWuP,OAASia,EAAY,CAEjGpvB,EAAK0sB,cAAcxW,EAAOtQ,WAAWpH,MAAMke,OAAO5Y,EAAG,GACrD,UAQhBwrB,cAAe,SAAUla,GAGrB,OAFWnV,KAECssB,YAAYnX,IAG5Bma,gBAAiB,SAAUna,GAKvB,IAJA,IACIoa,EADOvvB,KACMivB,gBAAgB,QAC7BprB,EAAI,EAEDA,EAAI0rB,EAAMxtB,OAAQ8B,IAErB,IAAoB,GADN0rB,EAAM1rB,GAAG2rB,WAAW9sB,QAAQyS,GAEtC,OAAOoa,EAAM1rB,GAIrB,OAAO,MAMXyW,WAAY,SAAUpF,GASlB,OALIA,GAASA,EAAMxS,SACXwS,EAAMxS,QAAQ,KAAO,IACrBwS,EAAQA,EAAMnL,UAAU,EAAGmL,EAAMxS,QAAQ,OALtC1C,KAQCwsB,iBAAiBtX,GARlBlV,KASFwsB,iBAAiBtX,GATflV,KAS6BusB,eAAerX,GAT5ClV,KAUEusB,eAAerX,OAKhC+Z,gBAAiB,SAAU1wB,GAIvB,MAAmB,iBAARA,GAAoBA,EAAKwD,OAAS,GAHlC/B,KAKMysB,cAAcluB,GALpByB,KAKkCysB,cAAcluB,OAQ/DsZ,gBAAiB,WACb,IAAI9X,EAAOC,KACP2F,EAAa3F,KAAK2F,WAClBrB,EAAWvE,EAAK0R,cAAcwN,YAAY,QAI1C7a,EAAOlI,EAAEqjB,SAASjb,GAClB/B,QAASxC,EAAKwC,QACd+qB,YAAavtB,EAAKutB,YAClBhY,SAAU3P,EAAW2P,SACrBma,SAAU9pB,EAAW6X,SACrB9G,KAAM3W,EAAKoT,UACXuc,UAAiC,aAAtB3vB,EAAKsT,cAChBsc,YAAa5vB,EAAKb,OAAOywB,cAAe,EACxCC,WAAY7vB,EAAK4F,WAAWgnB,oBAAqB,EACjDnY,OAZS,GAaT0C,YAAanX,EAAKb,OAAOgY,aAbhB,GAcT6V,YAAapnB,EAAWonB,YACxBC,WAAYrnB,EAAWqnB,WACvBpX,YAAajQ,EAAWiQ,cAK5B,OADAxR,EAAOrE,EAAK2Y,oBAAoBtU,EAAMrE,EAAK2Z,uBAM/ChC,oBAAqB,SAAU1D,GAC3B,IACI0C,EADO1W,KACKmT,UAGhBa,EAAKjT,SAAS,4BAA8B2V,GAG5C1W,KAAKyM,OAAOuH,IAKhB8E,kBAAmB,WACf,IACI+W,EADA9vB,EAAOC,KAEPgU,EAAOjU,EAAKwU,UAEZP,EAAKjS,OAAS,EACd7F,EAAE8X,GAAMnT,KAAK,WACL3E,EAAE8D,MAAMqQ,SAAS,wCACjBwf,EAA0B7vB,QAIlC6vB,EAA0B3zB,EAAE,sCAAuC8X,GAIvEjU,EAAK+vB,qBAGL/vB,EAAKgH,eAAeiN,GAGpBjU,EAAKgF,KAAK,gBAAiB,SAAUnH,EAAGmyB,GAEpChwB,EAAKqU,qBAAuB,IAAItI,OAAOsd,QAAQ4G,YAAYC,WAAWlwB,EAAMA,EAAKmtB,YAAa6C,GAE9FhwB,EAAKsc,iBAAmB,IAAIvQ,OAAOsd,QAAQ4G,YAAYpH,OAAO7oB,EAAMA,EAAK4L,SAGzE5L,EAAK+mB,cAAclO,YAIvB1c,EAAE2zB,GAAyBvuB,KAAK,gBAAgByD,KAAK,QAAS,WAC1D,IAAImrB,EAAgBh0B,EAAE,QAAS8D,MAE3BmwB,EAAeD,EAAclvB,KAAK,UAAY,QACC,IAAxCjB,EAAK+vB,kBAAkBK,KAC9BpwB,EAAK+vB,kBAAkBK,IAAgB,GAGvCrkB,OAAOgB,KAAK4I,aAAawa,EAAclvB,KAAK,aAE5CkvB,EAAc3uB,YAAY,6BAC1B2uB,EAAc3uB,YAAY,YAAYR,SAAS,gBAC/CmvB,EAAclvB,KAAK,WAAW,GAC9BjB,EAAK+vB,kBAAkBK,IAAgB,IAGvCD,EAAcnvB,SAAS,6BACvBmvB,EAAcnvB,SAAS,cAAcA,SAAS,YAAYQ,YAAY,gBACtE2uB,EAAclvB,KAAK,WAAW,GAC9BjB,EAAK+vB,kBAAkBK,IAAgB,MASnDnX,oBAAqB,WACjB,IAAIjZ,EAAOC,KAIXD,EAAKgF,KAAK,gBAAiB,WAEvBhF,EAAK+mB,cAAclO,aAM3B6V,iBAAkB,SAAU7pB,GAExB,IAAI3G,KACJ,GAAI2G,EAAOme,OAAQ,CACf,GAAIne,EAAOme,OAAOvQ,MACY,KAAtB5N,EAAOme,OAAOvQ,KAAa,CAC3B,IAAIgU,EAAe,IAAmC,GAA7B9nB,OAAOkG,EAAOme,OAAOvQ,MAAc,IAC5DvU,EAAM,aAAeuoB,EAAc,cAY3C,GATI5hB,EAAOme,OAAOG,OACdjlB,EAAM,eAAiB,kBACnB6N,OAAOgB,KAAK0b,SACZvqB,EAAM,eAAiB,2EAG3B2G,EAAOme,OAAOK,SACdnlB,EAAM,cAAgB,qBAEtB2G,EAAOme,OAAOO,WAAa1e,EAAOme,OAAOS,WAAY,CACrD,IAAIA,EAAa1X,OAAOgB,KAAK4I,aAAa9Q,EAAOme,OAAOS,YAAc,gBAAkB,GACpFF,EAAYxX,OAAOgB,KAAK4I,aAAa9Q,EAAOme,OAAOO,WAAa,aAAe,GACnFrlB,EAAM,mBAAqBulB,EAAaF,EAAY,cAEpD1e,EAAOme,OAAOE,aACdhlB,EAAM,oBAAsB2G,EAAOme,OAAOE,WAAa,cACvDhlB,EAAM,oBAAsB,mBAE5B2G,EAAOme,OAAOrY,QACdzM,EAAa,MAAI2G,EAAOme,OAAOrY,MAAQ,eAI/C,IAAI0lB,EAAW,GACf,IAAK/d,OAAOpU,EACRmyB,GAAY/d,IAAM,IAAMpU,EAAMoU,KAAO,IAEzC,OAAO+d,GAMXna,OAAQ,WAUJ,OATWjW,KAGD8mB,gBAHC9mB,KAIF8mB,cAAgB,IAAI5qB,EAAE0b,UAGlB5X,KAAKyM,UAQtB6G,MAAO,WAGH,OAFWtT,KAEC8mB,cAAc/O,WAK9B9F,gBAAiB,WACb,OAAOjS,KAAK2F,WAAWqM,cAAgB,IAK3Cqe,eAAgB,WACZ,OAAOrwB,KAAK2F,WAAW0V,aAAe,IAM1CiV,kBAAmB,WAIf,GAA2B,aAHhBtwB,KACW2F,WAEP4qB,SACX,MAAO,iBASfpe,aAAc,WACV,OAAOnS,KAAKkS,aAKhBE,iBAAkB,WACd,OAAOpS,MAKX+G,eAAgB,WACZ,IAAIhH,EAAOC,KACPuC,EAAUxC,EAAKywB,aAGdjuB,GAA6B,GAAlBA,EAAQR,QAKxBQ,EAAQpB,GAAG,QAAS,SAAUvD,GAC1BA,EAAE8D,iBACF9D,EAAE6yB,2BAEF1wB,EAAKgO,eAEL,IAAInJ,EAAS1I,EAAE8D,MACX6tB,EAAUjpB,EAAOwG,KAAK,WACtBslB,EAAmB3wB,EAAKwC,QAAQsrB,GAEpC9tB,EAAK4wB,iBAAmBD,EACQ,SAA5BA,EAAiB9H,SACjB8H,EAAiBE,gBAAkB7wB,EAAK0tB,mBAG5C7oB,EAAOisB,KAAK,YAAY,GAEpBjsB,EAAOksB,eAAe,aACtBlsB,EAAOA,OAAO,WAIlB7E,EAAKgxB,wBAAwBnzB,GAI7BiM,WAAW,WACP3N,EAAEyU,KAAK5Q,EAAKytB,cAAckD,IAAmB5U,OAAO,WAChD/b,EAAKixB,kBAAevxB,EACpBM,EAAK+U,aACD5Y,EAAE+0B,SAASvzB,SAASwzB,gBAAiBtsB,EAAOrE,IAAI,MAChDqE,EAAOisB,KAAK,YAAY,GAEpBjsB,EAAOksB,eAAe,WACtBlsB,EAAOA,OAAO,cAI3B,QAMXusB,iBAAkB,SAAUT,GACxB,OAAO,GAKXU,kBAAmB,SAAUC,EAAWX,GACpC,OAAO,GAGXY,kBAAmB,WACJtxB,KAENuxB,eAAiBr1B,EAAE0b,WAAWgB,WAGvC4Y,qBAAsB,WAClB,IAAIzxB,EAAOC,KAEPD,EAAK0xB,uBACLv1B,EAAEyU,KAAK5Q,EAAKwxB,eAAexZ,WAAWlH,KAAK,kBAChC9Q,EAAKwxB,iBACb1V,KAAK,kBACG9b,EAAKwxB,kBAKxBG,uBAAwB,WACT1xB,KAEDyxB,uBAFCzxB,KAGFsxB,qBAIbK,iBAAkB,WAGd,OAFW3xB,KAEFyxB,sBAFEzxB,KAGKuxB,eAAexZ,eAE3B,GAIR0Z,oBAAqB,WAGjB,QAFWzxB,KAEFuxB,gBAObK,oBAAqB,SAAU1yB,GAC3B,IACI6Y,EAAU7Y,EAAO6Y,QACjB8Z,EAAS3yB,EAAO2yB,SAAU,EAE9B,IAJW7xB,KAIDyxB,sBAAuB,CAC7B,IAAII,EAGA,OARG7xB,KAMEsxB,oBANFtxB,KAYNuxB,eAZMvxB,KAYgBuxB,eAAeO,KAAK,WAC3C,OACW/Z,KAKnBga,mBAAoB,WAChB,IACIC,EAAW91B,EAAE0b,WAYjB,OAbW5X,KAGFyxB,sBACLv1B,EAAEyU,KAJK3Q,KAIKuxB,eAAexZ,WAAWlH,KAAK,WACvCmhB,EAASpZ,YACViD,KAAK,WACJmW,EAASpZ,YAGboZ,EAASpZ,UAGNoZ,EAASja,WAOpByV,cAAe,SAAUkD,GACrB,IAAI3wB,EAAOC,KACPypB,EAAQvtB,EAAE0b,WACVjS,EAAa5F,EAAK4F,WACjB+qB,EAAiBpC,SAClBxiB,OAAOmmB,OAAOC,aAAa,cAE/BpmB,OAAOmmB,OAAOryB,KAAK,WAGnBG,EAAKqU,qBAAqBC,0BAG1B,IAAIL,EAAOjU,EAAKqS,mBACZ+f,EAAane,EAAKib,gBAAgB,WAClCmD,EAAmBD,EAAWpwB,OAElCiS,EAAKqe,kBAAmB,EAExBtyB,EAAK2xB,yBAGL,IAAK,IAAI7tB,EAAI,EAAGA,EAAIuuB,EAAkBvuB,IAAK,CACvC,IAAIoS,EAASkc,EAAWtuB,GAEpBoS,EAAOqc,iBAAmBrc,EAAOzN,OAAO+L,WACxC0B,EAAOqc,gBAAgB1Z,UAmE/B,cA/DO5E,EAAKqe,iBAEZn2B,EAAEyU,KAAK5Q,EAAKuT,QAASvT,EAAKgyB,sBAAsBlhB,KAAK,WACjD9Q,EAAKyxB,wBAEO1lB,OAAOgB,KAAK4I,aAAagb,EAAiBtC,WAAYruB,EAAKqU,qBAAqBme,uBAGnF,OAAQ,OAAQ,OAAQ,gBAAiB,0BAA0BxM,SAAS2K,EAAiB9H,SAC9F1sB,EAAEwB,UAAUsD,KAAK,YAAa,IAI9B8K,OAAOgB,KAAK4I,aAAa3V,EAAK4F,WAAW6sB,wBAA0B1mB,OAAOgB,KAAK4I,aAAagb,EAAiBpC,UAC7GvuB,EAAK+U,aACL5Y,EAAEyU,KAAK7E,OAAO2mB,oBAAoB9sB,EAAWinB,wBAAyB,MAAM,IAAQ/b,KAAK,WAEjF9Q,EAAKoxB,iBAAiBT,KAEtB3wB,EAAK+S,qBAAqB,qBAAsB4d,GAChDx0B,EAAEyU,KAAK5Q,EAAK2yB,WAAWhC,IAAmB7f,KAAK,WAC3C4Y,EAAM7Q,YACPiD,KAAK,WACJ4N,EAAMG,OAAOxb,gBAGtByN,KAAK,WACJ4N,EAAMG,YAIN7pB,EAAKoxB,iBAAiBT,KAEtB3wB,EAAK+S,qBAAqB,qBAAsB4d,GAChDx0B,EAAEyU,KAAK5Q,EAAK2yB,WAAWhC,IAAmB7f,KAAK,WAC3C3U,EAAEwB,UAAUiD,QAAQ,aAAc+vB,GAClCjH,EAAM7Q,YACPiD,KAAK,WACJ4N,EAAMG,OAAOxb,gBAOzBrO,EAAK+U,aACD4b,EAAiB1C,WACjB9xB,EAAEyU,KAAK5Q,EAAKiuB,cAAcnd,KAAK,WAC3B4Y,EAAMG,WAGVH,EAAMG,SAGV7pB,EAAKqU,qBAAqBue,yBAG9B,IAAIC,EAAgB7yB,EAAK+a,iBAAiB,wBACtC8X,GACAA,EAAclC,KAIfjH,EAAM1R,WAKjB8a,aAAc,WAOV,OANW7yB,KAGNoU,qBAAqBC,0BAHfrU,KAMCoU,qBAAqBme,sBAKrCO,SAAU,WACN,IAAI/yB,EAAOC,KAGX,GAAG8L,OAAOgB,KAAKimB,yBAA2B/yB,KAAKgzB,qBAC3C,OAAO92B,EAAEyU,KAAK,WACV,OAAO,OAKf,IAAIsD,EAAgBnI,OAAOgB,KAAKmH,eAAeC,QAASnU,IAGpDiB,EAAOjB,EAAKkzB,+BAGZC,EAAkB,KAOtB,OANIlyB,EAAKmyB,YACLD,EAAkBh3B,EAAEyU,KAAKxC,MAAMjS,EAAG8E,EAAKmyB,kBAChCnyB,EAAKmyB,WAITj3B,EAAEyU,KAAKuiB,GAAiBhM,KAAK,WAChCnnB,EAAKgO,eAEL,IAAIqlB,GACAxK,OAAQ,OACR5nB,KAAMA,EACNwT,OAAQzU,EAAKb,OAAOsV,OACpB4V,WAAYrqB,EAAKb,OAAOkrB,WACxBpY,aAAcjS,EAAK4F,WAAWqM,aAC9BE,YAAanS,EAAK4F,WAAWuM,YAC7B+B,cAAeA,IAAiB,GAQpC,OALIA,IACAmf,EAAWC,YAActzB,EAAKb,OAAOm0B,aAIlCn3B,EAAEyU,KAAK5Q,EAAK2R,YAAYsc,WAAWoF,IACzCtX,OAAO,WACJ/b,EAAK+U,kBAOjB4d,WAAY,SAAUhC,GAClB,IAAI3wB,EAAOC,KACPypB,EAAQvtB,EAAE0b,WAGV3D,EAAgBnI,OAAOgB,KAAKmH,eAAeC,QAASnU,IAmBxD,OAjBA7D,EAAEyU,KAAK5Q,EAAKwT,iBACP1C,KAAK,WACEoD,EACAlU,EAAKuzB,0BAA0B5C,GAGnCx0B,EAAEyU,KAAK5Q,EAAKwzB,mBAAmB7C,IAAmB7f,KAAK,WACnD4Y,EAAM7Q,YACPiD,KAAK,WACJ4N,EAAMG,OAAOxb,eAGlByN,KAAK,WACR9b,EAAK+U,aACLhJ,OAAO+V,IAAI,gDACX4H,EAAMG,WAEHH,EAAM1R,WAEjByb,iBAAkB,aAGlBC,wBAAyB,WACrB,OAAO,GAOXC,oBAAqB,WACjB,OAAO1zB,KAAK2wB,kBAQhB2C,0BAA2B,SAAU5C,GACjC,IAEI1vB,EAFAjB,EAAOC,KACP+T,EAAU,GAIVE,EAAgBnI,OAAOgB,KAAKmH,eAAeC,QAASnU,IAYxD,GAVIkU,GAAkBlU,EAAK4F,aAAe5F,EAAK4F,WAAWuM,cACtDnS,EAAK4F,WAAWuM,YAAc,KAI9Bwe,EAAiB1C,YAAc0C,EAAiBnC,eAEhDvtB,EAAOjB,EAAKkzB,gCAGZlzB,EAAKutB,YAAa,CAClB,IAAIA,KAKJ,GAJApxB,EAAE2E,KAAKb,KAAK8vB,kBAAmB,SAAUzd,EAAK7G,GAC1C,GAAU8hB,EAAYpsB,KAAKmR,KAGY,GAAvCvG,OAAOgB,KAAK6mB,WAAWrG,GAMvB,OALAxhB,OAAO8nB,eACH9nB,OAAOC,aAAaC,YAAY,qCAChCF,OAAOC,aAAaC,YAAY,sCAAuC,QAAQ,GAEnFjM,EAAK+U,aACE,GAIf5Y,EAAEyU,KAAK5Q,EAAK2R,YAAYsc,YACpBpF,OAAQ8H,EAAiB9H,OACzB5nB,KAAMA,EACNgR,aAAcjS,EAAK4F,WAAWqM,aAC9BE,YAAanS,EAAK4F,WAAWuM,YAC7BoJ,OAAQvb,EAAK4F,WAAWwP,GACxB0e,SAAS,EACTvG,YAAaA,GAAe,GAC5B9Y,OAAQzU,EAAKb,OAAOsV,OACpB4V,WAAYrqB,EAAKb,OAAOkrB,WACxBnW,cAAeA,IAAiB,EAChCof,YAAatzB,EAAKb,OAAOm0B,aAAe,MACxCxiB,KAAK,SAAUwgB,GAEf,GAAKtxB,EAAKqxB,kBAAkBC,EAAWX,GAAvC,CAKA,IAAIoD,EAA6C,SAA5B/zB,EAAKb,OAAOm0B,aAAsD,SAA5B3C,EAAiB9H,OAC5E,GAAI7oB,EAAKg0B,QAAUh0B,EAAK4tB,4BAA8BmG,EAAgB,CAClEhoB,OAAOkoB,QAAQC,QACf,IAAIC,EAAyB,IAAIh4B,EAAE0b,SACnC7X,EAAKb,OAAOi1B,gBAAkBD,EAC9Bh4B,EAAEwB,UAAUiD,QAAQ,sBAAuBZ,EAAKb,QAG/Ca,EAAK4tB,2BACNzxB,EAAEwB,UAAUiD,QAAQ,uBAIxBzE,EAAEyU,KAAKujB,GACFpC,KAAK,SAAUrsB,GACZqG,OAAOkoB,QAAQI,OACX1D,EAAiBpC,SACZvuB,EAAKg0B,QAAUh0B,EAAK4tB,0BACrB5tB,EAAKgT,eAAe,WAChBshB,cAAe3D,EAAiB9H,OAChCpU,OAAQzU,EAAKb,OAAOsV,OACpB4V,WAAYrqB,EAAKb,OAAOkrB,aAG5BrqB,EAAKgT,eAAe,WAChByB,OAAQ/O,EAAO6uB,OACfC,WAAY9uB,EAAO+uB,cAIxBz0B,EAAKg0B,QAAUD,GACdhoB,OAAOgB,KAAK2nB,sBAAsB10B,GAEtCgU,EAAUjI,OAAOgB,KAAK4nB,gBAAgB,6CAChC5oB,OAAOC,aAAaC,YAAY,6CAChC,QAENF,OAAOgB,KAAK6nB,kBAAkBC,KAAM7gB,EAASxV,KAAM,eAG1Dsd,KAAK,SAAU1Z,GAGZ,GAFA2J,OAAOkoB,QAAQI,OACftoB,OAAOgB,KAAK2nB,sBAAsB10B,GAC9B7D,EAAE6yB,QAAQ5sB,GAAQ,CAClB,IACI0yB,EADAxD,EAAYlvB,EAEZ2yB,EAAe,GACnB54B,EAAE2E,KAAKwwB,EAAW,SAAUxtB,EAAGkxB,GAC3B,IAAIC,EAA8Bj1B,EAAKk1B,4BAA4BJ,EAAiBE,EAAStvB,OAAOlH,KAAMw2B,EAAStvB,OAAOyvB,SAAUJ,GACpID,EAAkBG,EAA4BH,gBAC9CC,EAAeE,EAA4BF,eAE3CD,GAAoC,KAAjBC,GACnBhpB,OAAOqpB,WAAW1zB,KAAKqzB,EAAc,uCAAuC,GAGpF/0B,EAAKq1B,YAAYjzB,QAG1B0Z,KAAK,SAAU1Z,GACd4R,EAAUjI,OAAOgB,KAAK4nB,gBAAgB,6CAChC5oB,OAAOC,aAAaC,YAAY,6CAChC,YAENF,OAAOgB,KAAK6nB,kBAAkBC,KAAM7gB,EAASxV,KAAM,aAO3Dg1B,mBAAoB,SAAU7C,GAC1B,IAAI3wB,EAAOC,KACPypB,EAAQvtB,EAAE0b,WACV5W,MAGA0vB,EAAiB1C,YAAc0C,EAAiBnC,aAAemC,EAAiBvC,eAAiBuC,EAAiBxC,QAElHltB,EAAOjB,EAAKkzB,gCAIhB/2B,EAAEyU,KAAK5Q,EAAKgO,gBAAgB8C,KAAK,WAC7B3U,EAAE,cAAcm5B,SAASC,UAAWp5B,EAAE,4BAA6B,UAGvE,IAAIq5B,EAAmB,KACnBC,EAAsB,KACtBC,EAAgB,KAChBC,EAAmB,KACnBC,EAAe,KACfC,KACA1C,EAAkB,KAmCtB,GAhCIxC,EAAiBnC,cAEbvtB,EAAKmyB,YACLD,EAAkBh3B,EAAEyU,KAAKxC,MAAMjS,EAAG8E,EAAKmyB,WACvCyC,EAAiB10B,KAAKgyB,UACflyB,EAAKmyB,YAGhBoC,EAAmBx1B,EAAK2R,YAAYsc,YAChCpF,OAAQ,aACR5nB,KAAMA,EACNgR,aAAcjS,EAAK4F,WAAWqM,aAC9BE,YAAanS,EAAK4F,WAAWuM,YAC7B2hB,SAAS,KAEItc,IAAM,aAEvBme,EAAmB31B,EAAK81B,wBAAwBnF,EAAiBvb,IAGjEnU,MACAw0B,EAAsBz1B,EAAK2R,YAAYokB,eACnC1a,SAAUsV,EAAiBvb,GAC3BnD,aAAcjS,EAAK4F,WAAWqM,cAAgB,GAC9CE,YAAanS,EAAK4F,WAAWuM,YAC7B2hB,SAAS,KAEOtc,IAAM,cAE1Boe,EAAe51B,EAAKg2B,oBAAoBrF,EAAiBvb,KAGzDub,EAAiB5C,MAAQ4C,EAAiBxC,MAAQwC,EAAiBrC,MAAQqC,EAAiBvC,eAAiBuC,EAAiB3C,uBAAwB,CAEtJ,GAAIhuB,EAAKutB,YAAa,CAClB,IAAIA,KAKJ,GAJApxB,EAAE2E,KAAKb,KAAK8vB,kBAAmB,SAAUzd,EAAK7G,GAC1C,GAAU8hB,EAAYpsB,KAAKmR,KAGY,GAAvCvG,OAAOgB,KAAK6mB,WAAWrG,GAKvB,OAJAxhB,OAAO8nB,eAAe9nB,OAAOC,aAAaC,YAAY,qCAAsCF,OACvFC,aAAaC,YAAY,sCAAuC,QAAQ,GAC7EjM,EAAK+U,aACL2U,EAAMG,SACCH,EAAM1R,UAIjB/W,GAAQA,EAAKmyB,YACbD,EAAkBh3B,EAAEyU,KAAKxC,MAAMjS,EAAG8E,EAAKmyB,WACvCyC,EAAiB10B,KAAKgyB,UACflyB,EAAKmyB,YAIhBsC,EAAgB11B,EAAK2R,YAAYsc,YAC7BpF,OAAQ7oB,EAAKi2B,gBAAgBtF,EAAiB9H,QAC9CqN,oBAAqBvF,EAAiBuF,oBACtCj1B,KAAMA,EACNgR,aAAcjS,EAAK4F,WAAWqM,aAC9BE,YAAanS,EAAK4F,WAAWuM,YAC7B2hB,SAAS,EACTvG,YAAaA,GAAe,GAC5BjS,YAAatb,EAAK4F,WAAWmY,YAC7BoY,aAAcn2B,EAAK4F,WAAWwwB,gBAEpB5e,IAAM,gBAIxB,IAAI5L,KAEA6pB,IACA7pB,EAAQzK,KAAKq0B,GACb5pB,EAAQzK,KAAKw0B,GACb/pB,EAAQzK,KAAKs0B,GACb7pB,EAAQzK,KAAKy0B,IAGbF,GACA9pB,EAAQzK,KAAKu0B,GAIjB3pB,OAAOmmB,OAAOC,aAAa,mBAI3B,IAAIkE,EAAsB,IAAIl6B,EAAE0b,SA6FhC,OA5FI5W,GAAQA,EAAKmyB,UACbj3B,EAAEyU,KAAKxC,MAAMnO,KAAMgB,EAAKmyB,WACnBtiB,KAAK,SAAUkkB,GACZqB,EAAoBxd,QAAQmc,KAE/BlZ,KAAK,WACFua,EAAoBxM,SACpB1nB,QAAQ2f,IAAI,+DAGpBuU,EAAoBxd,UAGxBgd,EAAiB10B,KAAKk1B,GAEtBl6B,EAAEyU,KAAKxC,MAAMjS,EAAG05B,GAAkB/kB,KAAK,WACnC3U,EAAEyU,KAAK5Q,EAAK2R,YAAYwJ,cAAcmb,SAAS1qB,QAASA,KAAWkF,KAAK,SAAUwgB,GAK9E,IAAIwD,EAJJ/oB,OAAOmmB,OAAOmC,KAAK,mBAEnBr0B,EAAK+U,aAGL,IAAIggB,EAAe,GASnB,GARA54B,EAAE2E,KAAKwwB,EAAW,SAAUxtB,EAAGkxB,GAE3B,IAAIC,EAA8Bj1B,EAAKk1B,4BAA4BJ,EAAiBE,EAAStvB,OAAOlH,KAAMw2B,EAAStvB,OAAOyvB,SAAUJ,GACpID,EAAkBG,EAA4BH,gBAC9CC,EAAeE,EAA4BF,eAI1CD,EA+BoB,KAAjBC,GACAhpB,OAAOqpB,WAAW1zB,KAAKqzB,EAAc,uCAAuC,GAE5EpE,EAAiBnC,aACjBxuB,EAAKu2B,mBAAmB5F,EAAiBvb,QAnC3B,CAElB,IAAKpV,EAAKqxB,kBAAkBC,EAAWX,GACnC,OAIAA,EAAiBlC,SACjBzuB,EAAKw2B,cAIL7F,EAAiBpC,UACjBxiB,OAAO0qB,UAAUC,SAAS,aAAe12B,EAAK2R,YAAYwU,MAC1DnmB,EAAKgT,eAAe,WAChByB,OAAQzU,EAAKb,OAAOsV,OACpBoc,gBAAiBF,EAAiBE,mBAKtCF,EAAiBvC,eACbkD,EAAUtvB,OAAS,IACnB+J,OAAO0qB,UAAUC,SAAS,aAAe12B,EAAK2R,YAAYwU,MAC1DnmB,EAAKgT,eAAe,WAChByB,OAAQ6c,EAAU,GAAG5rB,OAAO6uB,OAC5BC,WAAYlD,EAAU,GAAG5rB,OAAO+uB,cAahD/K,EAAM7Q,YACPiD,KAAK,SAAU6a,EAAGA,EAAG3B,GAChBrE,EAAiBnC,aACjBxuB,EAAKu2B,mBAAmB5F,EAAiBvb,IAGzC4f,GAAYA,EAAS5yB,QAAuC,mCAA7B4yB,EAAS5yB,MAAMgS,WACjB,8BAA7B4gB,EAAS5yB,MAAMgS,WAA0E,2BAA7B4gB,EAAS5yB,MAAMgS,YAC3EpU,EAAK+U,aACL5Y,EAAEyU,KAAK7E,OAAO2mB,oBAAoB3mB,OAAOC,aAAaC,YAAY+oB,EAAS5yB,MAAM4R,SAAU,MAAM,IAAQ+d,KAAK,WAC1G,OAAO51B,EAAEyU,KAAK5Q,EAAKwzB,mBAAmBr3B,EAAEkD,UAAWsxB,GAAmBuF,qBAAqB,QAC5FplB,KAAK,WACJ4Y,EAAM7Q,YACPiD,KAAK,WACJ4N,EAAMG,aAGV7pB,EAAKq1B,YAAYL,GACjBtL,EAAMG,OAAOmL,QAIlBtL,EAAM1R,WAEjBkd,4BAA6B,SAAUJ,EAAiB8B,EAAa5iB,EAAS+gB,GAmB1E,MAhBmB,sBAAf6B,IAFO32B,KAIF42B,qBAAqB7iB,GAC1B8gB,GAAkB,GAEO,WAAzB/oB,OAAOsT,gBAA8C,iBAAfuX,IAGlC7B,EADiB,KAAjBA,EACe/gB,EAEA+gB,EAAe,OAAS/gB,EAG3C8gB,GAAkB,IAGdA,gBAAmBA,EAAiBC,aAAgBA,IAMhE8B,qBAAsB,SAAUhS,EAAmBnS,EAAOokB,EAAMC,EAAqBC,EAAWx4B,GAC5F,IAAIwB,EAAOC,KAGP8L,OAAOgB,KAAKimB,yBAA2B/yB,KAAKgzB,sBAC5ChzB,KAAKqU,0BAEJtU,EAAKqU,uBACNrU,EAAKqU,qBAAuB,IAAItI,OAAOsd,QAAQ4G,YAAYC,WAAWlwB,IAGxC,iBAAvB,EACPA,EAAKqU,qBAAqB4iB,sBAAsBpS,EAAmBnS,EAAOokB,EAAMC,EAAqBv4B,GAErGrC,EAAE2E,KAAK+jB,EAAmB,SAAU/gB,EAAGkQ,GACnChU,EAAKqU,qBAAqB4iB,sBAAsBjjB,EAAStB,EAAOokB,EAAMC,EAAqBv4B,KAGnGwB,EAAKqU,qBAAqBue,sBAAsBoE,IAKpD1iB,wBAAyB,SAAUnV,GACpBc,KAGFoU,sBAHEpU,KAIFoU,qBAAqBC,wBAAwBnV,IAO1D+3B,gBAAiB,SAAUC,GAInBprB,OAAOgB,KAAKimB,yBAA2B/yB,KAAKgzB,sBAC5ChzB,KAAKqU,0BAJErU,KAMNoU,qBAAqBE,iBAAiB4iB,GANhCl3B,KAONoU,qBAAqBue,yBAK9B4D,YAAa,SAAU9jB,GACnB,IAAI1S,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBqsB,EAAW91B,EAAE0b,YAEjBnF,EAAQA,GAAS1S,EAAK8a,cAGRpI,EAAM0C,KAChB1C,GACI0C,GAAI1C,IAIZ,IAAIxT,GACAuV,OAAQzU,EAAKb,OAAOsV,QAAU,GAC9B4V,WAAYrqB,EAAKb,OAAOkrB,YAAc,GACtCE,OAAQvqB,EAAKb,OAAOorB,QAAU,GAC9B7X,MAAOA,EACP0kB,aAAcp3B,EAAKq3B,kBACnBplB,aAAcrM,EAAWqM,aACzBE,YAAavM,EAAWuM,YACxBmlB,WAAW,EACXvZ,YAAa/d,EAAKswB,kBAAoB,GACtCzH,OAAQ7oB,EAAKuwB,oBACbgH,aAAcv3B,EAAK4F,WAAW2xB,cAAgB,IAYlD,OARAv3B,EAAKgO,eACL7R,EAAEyU,KAAK5Q,EAAKgT,eAAe,UAAW9T,IAAU4R,KAAK,WACjD9Q,EAAK+U,aACLkd,EAASpZ,YACViD,KAAK,WACJ9b,EAAK+U,aACLkd,EAASpI,WAENoI,EAASja,WAKpBqf,gBAAiB,WAOb,IANA,IACIG,EADOv3B,KACc+W,kBAAkB,OACvC3a,EAAOF,EAAEuS,IAAI8oB,EAAe,SAAUC,GACtC,OAAQ51B,IAAK41B,EAAa7xB,WAAWwP,GAAIsiB,SAAUD,EAAatoB,aAEhEioB,KACKtzB,EAAI,EAAG9B,EAAS3F,EAAK2F,OAAQ8B,EAAI9B,EAAQ8B,IAC9CszB,EAAa/6B,EAAKyH,GAAGjC,KAAOxF,EAAKyH,GAAG4zB,SAExC,OAAON,GAKX3G,WAAY,aAKZlH,gBAAiB,SAAUpU,EAAO0T,GACnB5oB,KACNqc,iBAAiBqb,4BAA4BxiB,EAAO0T,IAO7D7a,aAAc,WACV,IAAIhO,EAAOC,KACP23B,EAAkB53B,EAAK0R,cAAcwN,YAAY,gBAErD,IAAIlf,EAAK63B,iBAAkB73B,EAAK83B,eAIhC,GAAK/rB,OAAOgB,KAAKuS,iBAoCbtf,EAAK63B,eAAiB17B,EAAE,qCAAqC4I,SAAS,OAAQ5I,EAAEwB,WAChFqC,EAAK83B,eAAiB37B,EAAE47B,KAAKH,GAAiB7yB,SAAS,OAAQ5I,EAAEwB,eArClC,CAE/B,IAAIq6B,EAAuC,eAAxBh4B,EAAKb,OAAOgV,QAC3B8jB,EAASj4B,EAAKb,OAAO84B,OACrBD,IACAC,EAASlsB,OAAOgB,KAAKwoB,UAAU0C,IAEjB9jB,UAId8jB,EAAS97B,EAAE,OAAQA,EAAEwB,YAIzB,IAAI8U,EAAOxS,KAAKi4B,UACZ75B,EAAW4B,KAAKk4B,YAChB1lB,EAAKrU,QAAUjC,EAAEuB,QAAQU,WACzBC,EAASC,IAAM,GAEnB0B,EAAK63B,eAAiB17B,EAAE,qCAAqC4I,SAASkzB,GACtEj4B,EAAK83B,eAAiB37B,EAAE47B,KAAKH,GAAiB7yB,SAASkzB,GACvDj4B,EAAK63B,eAAep3B,KAChBrC,OAAU,OACVhB,MAAS,OACTg7B,aAAc3lB,EAAKrU,OACnBi6B,YAAa5lB,EAAKrV,QAEtB4C,EAAK83B,eAAer3B,KAChBnC,IAAQD,EAASC,IAAM4K,KAAKsM,MAAM/C,EAAKrU,OAAS4B,EAAK83B,eAAezuB,eAAiB,GAAM,KAC3FvM,KAASoM,KAAKsM,MAAM/C,EAAKrV,MAAQ4C,EAAK83B,eAAe1uB,cAAgB,GAAM,OAE/E6uB,EAAOx3B,IAAI,WAAY,cAW/BsU,WAAY,WACR,IAAI/U,EAAOC,KACX,GAAID,EAAK63B,gBAAkB73B,EAAK83B,eAAgB,CAC5C93B,EAAK63B,eAAet0B,SACpBvD,EAAK83B,eAAev0B,SACpBvD,EAAK63B,eAAiB,KACtB73B,EAAK83B,eAAiB,KAEtB,IAAIG,EAASj4B,EAAKb,OAAO84B,OAEXv4B,MAAVu4B,GACAA,EAAOx3B,IAAI,WAAY,MAMnC63B,kBAAmB,WAEf,OADWr4B,KACCyS,OAKhB6lB,kBAAmB,SAAU7lB,GACdzS,KACNyS,MAAQA,GAKjBK,qBAAsB,SAAUlL,EAAW5G,GACvC,OAAOhB,KAAK+S,eAAe,iBAAkBnL,UAAWA,EAAW5G,KAAMA,KAK7Eo0B,YAAa,SAAUjzB,GAInB,IACIA,EAAQsS,KAAKC,MAAMvS,GACrB,MAAOvE,IAST,GALIuE,EAAQA,EAAMJ,QAAUI,EAAMJ,OAAS,IAAGI,EAAQA,EAAM,IACxDA,EAAMA,QAAOA,EAAQA,EAAMA,OAC3BA,EAAMA,QAAOA,EAAQA,EAAMA,OAGX,iBAATA,GAAqBA,EAAM4R,QAE9B5R,EADoB,mCAApBA,EAAMgS,WAAsE,8BAApBhS,EAAMgS,WAAiE,2BAApBhS,EAAMgS,UACzGrI,OAAOC,aAAaC,YAAY7J,EAAM4R,SAEtC5R,EAAM4R,aAGf,GAAoB,iBAAT5R,EAEd,IACI,IAAIo2B,EAAY9jB,KAAKC,MAAMvS,GACC,mCAAxBo2B,EAAUpkB,WAA0E,8BAAxBokB,EAAUpkB,WAAiE,2BAApBhS,EAAMgS,YACzHokB,EAAUxkB,QAAUjI,OAAOC,aAAaC,YAAYusB,EAAUxkB,UAElE5R,EAAQo2B,EAAUxkB,QACpB,MAAOnW,IA7BFoC,KAkCNi3B,gBAAgB90B,GAlCVnC,KAmCN8U,cAKTvC,OAAQ,SAAUC,GAEdxS,KAAKw4B,QAAQhmB,IAKjBgmB,QAAS,SAAUhmB,GACfxS,KAAKwS,KAAOA,GAKhBylB,QAAS,WACL,GAAIj4B,KAAKwS,KACL,OAAOxS,KAAKwS,KAEhB,IAAIwlB,EAAUh4B,KAAKd,OAAa,OAAIc,KAAKd,OAAO84B,OAASh4B,KAAKoS,mBAAmBmC,UAKjF,OACIpX,MAJc66B,EAAO76B,QAKrBgB,OAJe65B,EAAO75B,WAO9B+5B,UAAW,WAGP,OAFal4B,KAAKoS,mBAAmBmC,UAEvBxO,UAOlBioB,WAAY,SAAU/S,GAClB,IAAIlb,EAAOC,KAGX,IAAI8L,OAAOgB,KAAKimB,wBAA2B/yB,KAAKgzB,qBAAhD,CAIA,IAAIhyB,EAAOjB,EAAKkzB,+BAGZhf,EAAgBnI,OAAOgB,KAAKmH,eAAeC,QAASnU,IAcxD,GAbIkU,GAAkBlU,EAAK4F,aAAe5F,EAAK4F,WAAWuM,cACtDnS,EAAK4F,WAAWuM,YAAc,IAIlChW,EAAE2E,KAAKG,EAAM,SAAUqR,EAAK7G,GACxB,IAAI+O,EAAUxa,EAAKua,WAAWjI,GAC9BnW,EAAE2E,KAAK0Z,EAAS,SAAU1W,EAAGoS,GACzBA,EAAOwR,2BAKXvrB,EAAEu8B,cAAcz3B,GAKpB,OAAIiT,EACO/X,EAAEyU,KAAK5Q,EAAK2R,YAAYsc,YAC3BpF,OAAQ,OACR5nB,KAAMA,EACNgR,aAAcjS,EAAK4F,WAAWqM,aAC9BqJ,YAAatb,EAAK4F,WAAW0V,aAAe,GAC5CpH,cAAeA,EACfof,YAAatzB,EAAKb,OAAOm0B,YACzB7e,OAAQzU,EAAKb,OAAOsV,OACpB4V,WAAYrqB,EAAKb,OAAOkrB,cACxBvO,KAAK,SAAU9H,GACfA,EAAUhU,EAAK+T,mBAAmBC,KAG/B7X,EAAEyU,KAAK5Q,EAAK2R,YAAYwJ,cAAc8S,YACzCpF,OAAQ,aACR5nB,KAAMA,EACNkR,YAAanS,EAAK4F,WAAWuM,YAC7BF,aAAcjS,EAAK4F,WAAWqM,aAC9BqJ,YAAatb,EAAK4F,WAAW0V,aAAe,MAC5CQ,KAAK,SAAU9H,GACfA,EAAUhU,EAAK+T,mBAAmBC,OAS9Cwa,YAAa,SAAUtT,GACnB,IAAIlb,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBqM,EAAeiJ,EAAKjJ,aACpBggB,EAAW91B,EAAE0b,WAoCjB,MAjCgC,KAA5BjS,EAAWqM,eACXA,EAAiC,KAAjBA,EAAuBrM,EAAWqM,aAAe,IAAMA,EAAerM,EAAWqM,cAIrG9V,EAAEyU,KAAK5Q,EAAK2R,YAAYwJ,cAAcqT,aAClCrc,YAAavM,EAAWuM,YACxBwmB,KAAMzd,EAAKyd,KACX1mB,aAAcA,EACdqJ,YAAatb,EAAK4F,WAAW0V,aAAe,MAC5CxK,KAAK,SAAUkD,GACf,IAAIxV,EAAOwV,GAAWA,EAAQxV,KAAOwV,EAAQxV,KAAO,GAChDyV,EAAOjU,EAAKqS,mBAGhBrS,EAAKqS,mBAAmBiC,yBAAyBskB,iBAAiB,KAE7D,qBAAsB,iBAAiB5S,SAASxnB,IACpC,kBAATA,EACAuN,OAAOqpB,YAAcrpB,OAAOqpB,WAAW1zB,KAAKsS,EAAQmhB,SAAS0D,KAAK,QAAS,uCAAuC,GAElH5kB,EAAK4iB,qBAAqBzoB,MAAMpO,GAAOgU,EAAQmhB,cAAUz1B,OAAWA,OAAWA,GAAW,EAAO,kBAGrGuyB,EAASpI,OAAO7V,IAEhBie,EAASpZ,QAAQ7E,KAEtB8H,KAAK,SAAU9H,GACdA,EAAUhU,EAAK+T,mBAAmBC,GAClCie,EAASpI,OAAO7V,KAGbie,EAASja,WAMpB8gB,iBAAkB,SAAU5d,GACxB,IAAIlb,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBqM,EAAeiJ,EAAKjJ,aAQxB,MAN+B,IAA3BrM,EAAWqM,eAEXA,EAAgC,IAAhBA,EAAsBrM,EAAWqM,aAAe,IAAMA,EAAerM,EAAWqM,cAI7F9V,EAAEyU,KAAK5Q,EAAK2R,YAAYwJ,cAAc2d,kBACzC3mB,YAAavM,EAAWuM,YACxB4mB,UAAW7d,EAAK6d,UAChB9mB,aAAcA,EACdqJ,YAAatb,EAAK4F,WAAW0V,aAAe,MAC5CxK,KAAK,SAAUkD,GAEfhU,EAAKqS,mBAAmBiC,0BACpBN,GAA2B,sBAAhBA,EAAQxV,MACnBwB,EAAKqS,mBAAmBwkB,qBAAqB7iB,EAAQmhB,YAG1DrZ,KAAK,SAAU9H,GACdA,EAAUhU,EAAK+T,mBAAmBC,MAG1CglB,oBAAqB,SAAU9d,GAC3B,IAAIlb,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBqM,EAAeiJ,EAAKjJ,aAQxB,MAN+B,IAA3BrM,EAAWqM,eAEXA,EAAgC,IAAhBA,EAAsBrM,EAAWqM,aAAe,IAAMA,EAAerM,EAAWqM,cAI7F9V,EAAEyU,KAAK5Q,EAAK2R,YAAYwJ,cAAc6d,qBACzC7mB,YAAavM,EAAWuM,YACxB8mB,QAAS/d,EAAK+d,QACdhnB,aAAcA,EACdqJ,YAAatb,EAAK4F,WAAW0V,aAAe,MAC5CxK,KAAK,SAAUkD,GAEfhU,EAAKqS,mBAAmBiC,0BACpBN,GAA2B,sBAAhBA,EAAQxV,MACnBwB,EAAKqS,mBAAmBwkB,qBAAqB7iB,EAAQmhB,YAG1DrZ,KAAK,SAAU9H,GACdA,EAAUhU,EAAK+T,mBAAmBC,MAK1CklB,iBAAkB,SAAUhe,GACxB,IAAIlb,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBqM,EAAeiJ,EAAKjJ,aASxB,MAP+B,IAA3BrM,EAAWqM,eAEXA,EAAgC,IAAhBA,EAAsBrM,EAAWqM,aAAe,IAAMA,EAAerM,EAChFqM,cAIF9V,EAAEyU,KAAK5Q,EAAK2R,YAAYwJ,cAAc+d,kBACzC/mB,YAAavM,EAAWuM,YACxBgnB,cAAeje,EAAKie,cACpBlnB,aAAcA,EACdqJ,YAAatb,EAAK4F,WAAW0V,aAAe,MAC5CxK,KAAK,SAAUkD,GAEfhU,EAAKqS,mBAAmBiC,0BACpBN,GAA2B,sBAAhBA,EAAQxV,MACnBwB,EAAKqS,mBAAmBwkB,qBAAqB7iB,EAAQmhB,YAG1DrZ,KAAK,SAAU9H,GACdA,EAAUhU,EAAK+T,mBAAmBC,MAQ1C4H,eAAgB,SAAUhQ,GACX3L,KACNqc,iBAAiBV,eAAehQ,IAIzCsJ,qBAAsB,SAASC,GACL,aAAlBlV,KAAKmT,WACLnT,KAAKqc,kBAAoBrc,KAAKqc,iBAAiBpH,qBAAqBC,IAO5EsG,cAAe,WACAxb,KACNqc,iBAAiB8c,iBAK1BlG,6BAA8B,SAAUjyB,GACpC,IAAIjB,EAAOC,KAcX,OAbAgB,EAAOA,MAGPjB,EAAK8Z,oBAAoB7Y,GAGzB9E,EAAE2E,KAAKG,EAAM,SAAUqR,EAAK7G,GACxB,IAAI+O,EAAUxa,EAAKua,WAAWjI,GAC9BnW,EAAE2E,KAAK0Z,EAAS,SAAU1W,EAAGoS,GACzBA,EAAOwR,0BAIRzmB,GAQX2oB,uBAAwB,SAAUzqB,GAE9B,IAAIa,EAAOC,KACP2F,GAFJzG,EAASA,OAEeyG,WACpB8jB,EAAQ,IAAIvtB,EAAE0b,SACd5W,EAAO9B,EAAO8B,SACduoB,OAA+C,IAAxBrqB,EAAmB,cAAmBA,EAAOqqB,cACvDrqB,EAAOsqB,WAAatqB,EAAOsqB,gBAAa/pB,KAGpCvD,EAAEu8B,cAAcz3B,IACjCjB,EAAKkzB,6BAA6BjyB,GAGtCjB,EAAKgO,eAEL,IAAImlB,EAAkB,KAkEtB,OAjEIlyB,EAAKmyB,YACLD,EAAkBh3B,EAAEyU,KAAKxC,MAAMjS,EAAG8E,EAAKmyB,kBAChCnyB,EAAKmyB,WAGhBj3B,EAAEyU,KAAKuiB,GAAiBpB,KAAK,WAEzB/xB,EAAK2R,YAAYwJ,cAAc8S,YAC3BpF,OAAQ,iBACR5nB,KAAMA,EACNoa,SAAUzV,EAAWwP,GACrBD,MAAOvP,EAAWuP,MAClBlD,aAAcjS,EAAK4F,WAAWqM,aAC9BE,YAAavM,EAAWuM,YACxBmJ,YAAa1V,EAAW0V,cACzBxK,KAAK,SAAUkkB,GAOd,GALAh1B,EAAKq5B,wBAELr5B,EAAK+U,aAGDigB,GAA6B,sBAAjBA,EAASx2B,KACsB,mBAAhCwB,EAAKsU,yBACZtU,EAAKsU,0BAGTtU,EAAK62B,qBAAqB7B,EAASG,UACnCzL,EAAM7Q,eACH,GAAI2Q,EAAc,CACrB,IAAI8P,GACAlkB,GAAIxP,EAAWwP,GACfD,MAAOvP,EAAWuP,YAEIzV,IAAtBkG,EAAW6O,QACXtY,EAAEkD,OAAOi6B,GACLtP,aAAcje,OAAOge,MAAMC,eAG/BgL,EAASuE,UACTv5B,EAAK4F,WAAW2xB,aAAevC,EAASuE,SAE5Cp9B,EAAEyU,KAAK5Q,EAAKw2B,YAAY8C,IAAkBxoB,KAAK,WAC3C4Y,EAAM7Q,YACPiD,KAAK,WACJ4N,EAAM7Q,iBAGV6Q,EAAM7Q,YAEXiD,KAAK,SAAU9H,GACdhU,EAAK+U,aACL,IAAIykB,EAA+B,iBAAXxlB,EAAsBA,EAAQa,aAAeH,KAAKC,MAAMX,EAAQa,cAAgBb,KACpGylB,EAAaD,EAAWxlB,SAAWA,EAEvChU,EAAKqU,qBAAqBC,0BACH,SAAnBklB,EAAWh7B,KACXwB,EAAKqU,qBAAqBS,iBAAiB2kB,GAE3Cz5B,EAAKqU,qBAAqBE,iBAAiBklB,GAE/C/P,EAAM7Q,cAIP6Q,EAAM1R,WAGjBqhB,sBAAuB,WACnB,GAAIttB,OAAO2tB,uBAAyB3tB,OAAO2tB,sBAAsB13B,OAG7D,IAFA,IACW23B,EADP33B,EAAS+J,OAAO2tB,sBAAsB13B,OACtC8B,EAAI,EACDA,EAAI9B,EAAQ8B,KACf61B,EAAa5tB,OAAO2tB,sBAAsBtoB,QACxBuoB,EAAWC,QACzB7tB,OAAO8tB,sBAAuB,EAC9BF,EAAWC,UAM3B9D,wBAAyB,SAAUgE,GAC/B,IAEInE,EAFO11B,KAEiB0R,YAAYooB,gBACpCC,IAHO/5B,KAGG2F,WAAWq0B,cACrB5e,SAAUye,EACV3kB,MAAO,GACPlD,aANOhS,KAMY2F,WAAWqM,aAC9BE,YAPOlS,KAOW2F,WAAWuM,YAC7B2hB,SAAS,IAKb,OAFA6B,EAAiBne,IAAM,aAEhBme,GAGXK,oBAAqB,SAAU8D,GAC3B,IAEIlE,EAFO31B,KAEa0R,YAAYuoB,gBAChCF,IAHO/5B,KAGG2F,WAAWu0B,UACrB9e,SAAUye,EACV3kB,MAAO,GACPlD,aANOhS,KAMY2F,WAAWqM,aAC9BE,YAPOlS,KAOW2F,WAAWuM,YAC7B2hB,SAAS,IAKb,OAFA8B,EAAape,IAAM,SAEZoe,GAGXW,mBAAoB,SAAUuD,GACf75B,KAEN0R,YAAYyoB,kBACbJ,IAHO/5B,KAGG2F,WAAWy0B,YACrBhf,SAAUye,EACV3kB,MAAO,GACPlD,aANOhS,KAMY2F,WAAWqM,aAC9BE,YAPOlS,KAOW2F,WAAWuM,eAIrCuB,QAAS,WACL,IAAI1T,EAAOC,KACXD,EAAK+U,aAELjL,WAAW,WACH9J,EAAKb,eACEa,EAAKb,OAAO84B,cAEhBj4B,EAAKb,cACLa,EAAK8e,QACR9e,EAAKqU,uBACLrU,EAAKiT,OAAO,yBACLjT,EAAKqU,sBAGZrU,EAAKsc,mBACLtc,EAAKsc,iBAAiB8c,uBACfp5B,EAAKsc,mBAEjBvQ,OAAO6H,SAASC,aAAe,IAGlC7T,EAAK0M,UAET4tB,UAAW,SAAUnU,GACjB,OAAOhqB,EAAE,8BAAgCgqB,EAAO,KAAMlmB,KAAKuU,YAG/D+lB,kBAAmB,SAAUpU,GACzB,OAAOhqB,EAAE,eAAiBgqB,EAAO,KAAMlmB,KAAKuU,YAGhDwc,wBAAyB,SAAUptB,GAEXzH,EAAE,sBAElBA,EAAEwB,UAAUiD,QAAQ,kBAGPzE,EAAE,uBAAmE,SAA1CA,EAAE,sBAAsBsE,IAAI,YAGpEtE,EAAE,2BAA2B8F,SAGrCg0B,gBAAiB,SAAUpN,GACvB,OAAO5oB,KAAKmtB,4BAAyC,aAAXvE,EAAwB,OAASA,GAM/E2R,yBAA0B,WACtB,IAAIx6B,EAAOC,KACXD,EAAKg0B,OAASjoB,OAAOgB,KAAK0tB,cACvBz6B,EAAKkU,eAAkBnI,OAAOgB,KAAK8gB,kBAAgE,WAA3C,GAAK6M,oBAAoBC,gBAChF36B,EAAKg0B,QAAS,IAIdjoB,OAAOgB,KAAKimB,wBAA2BjnB,OAAOgB,KAAK8gB,kBAAgE,WAA3C,GAAK6M,oBAAoBC,iBACjGx+B,EAAEwB,UAAUgW,IAAI,eAChBxX,EAAEwB,UAAUyD,GAAG,cAAenB,KAAK26B,uBAAuB51B,KAAKhF,IAE/D7D,EAAEwB,UAAUgW,IAAI,gBAChBxX,EAAEwB,UAAUyD,GAAG,eAAgBnB,KAAK26B,uBAAuB51B,KAAKhF,MAQxE46B,uBAAwB,SAAU7pB,GAC9B,IAAIkD,EAAOhU,KAAKoS,mBACZtG,OAAOgB,KAAK8gB,kBAAgE,WAA3C,GAAK6M,oBAAoBC,cAC1D16B,KAAK+zB,OAAwB,WAAfjjB,EAAMvS,KAGpByB,KAAK+zB,OAASjoB,OAAOgB,KAAK0tB,cAIX,YAAf1pB,EAAMvS,MACNyV,EAAKjB,eAAe,eAIL,WAAfjC,EAAMvS,MACNyV,EAAKjB,eAAe,eAQ5BigB,mBAAoB,WAChB,YAA6B,IAAjBhzB,KAAW,SAChBA,KAAK+zB,SAAY/zB,KAAK+zB,QAAU/zB,KAAKiU,kBCh+DpD/X,EAAEmV,MAAMjS,OAAO,iCAKXQ,KAAM,SAAUV,GACZc,KAAKyM,OAAOvN,GACTA,EAAO4tB,cAAgB5tB,EAAO4tB,aAAa8N,eAC1C76B,KAAK66B,aAAe17B,EAAO4tB,aAAa8N,eAUnDC,gBAAiB,SAASv2B,EAAUw2B,GAChC,IAICC,EAAoBz2B,EAASuB,QAHb,4GAGoC,IAcxD,OALGk1B,GANHA,EAAoBA,EAAkBl1B,QAPhB,6CAOsC,SAAS8E,EAAOqwB,EAAIC,EAAIl1B,EAAQm1B,GACxF,IAAIlR,EAAavV,KAAKC,MAAMumB,GAE/B,OAAOH,EAAS9Q,EAAW7U,KAAO,MAGMtP,QAAQ,mBAAoB,WAC9D,MAAO,MAWfgS,gBAAiB,WAChB,IAAI9X,EAAOC,KACPm7B,EAAmBp7B,EAAKkvB,gBAAgB,UACxCtc,EAAUwoB,EAAiBp5B,OAAS,EAAKo5B,EAAiB,MAC1D72B,EAAyC,mBAAtBqO,EAAOsM,YAA6BtM,EAAOsM,cAAgB,GAC9Eze,EAA+B,mBAAjBmS,EAAOyoB,OAAwBzoB,EAAOyoB,SAAW,GAC/D1kB,EAAO3W,EAAKoT,UACZkoB,EAAat7B,EAAK4F,WAAW21B,YAAcryB,KAAKid,OAEhD4U,KAyBJ,OApBGnoB,EAAOtP,UACTnH,EAAE2E,KAAK8R,EAAOtP,SAAU,SAASQ,EAAGmT,GAEhC,GAAc,aAARN,GAAgD,qBAAzBM,EAAMrR,WAAWpH,KAA8B,CAExE,IAAIA,EAAOyY,EAAM1E,iBACb/T,GAAQuN,OAAOsJ,UAAUtU,QAAQyQ,sBACjCupB,EAAS9jB,EAAMrR,WAAWwP,IAAM6B,EAAM4C,iBAEtCrb,GAAQuN,OAAOsJ,UAAUtU,QAAQwQ,yBACjCwpB,EAAS9jB,EAAMrR,WAAWwP,IAAM6B,EAAMS,uBAE1C1X,EAAKgW,aAAaiB,EAAMrR,WAAW2P,UAAY0B,KAMxDlL,OAAOgB,KAAKyuB,UAAU/6B,EAAK66B,GAEpBt7B,EAAK86B,gBAAgBv2B,EAAUw2B,IAOpCU,gBAAiB,WACb,OAAOz7B,KAAK66B,gBC3FpB1+B,EAAEmV,MAAMjS,OAAO,8BAMd6f,YAAa,WACT,IACIvI,EADO1W,KACKmT,UACZ/O,EAFOpE,KAEK2F,WAAWvB,MAAQ,GAOtC,MAJe,UAARsS,GAAoBtS,IACjBA,EAAO,mCAAqCA,EAAO,UAGtD0H,OAAOgB,KAAK2uB,aAAar3B,IAOjCg3B,OAAQ,WACJ,IACC56B,EADUR,KACC2F,WAAWnF,KAAO,GAOjC,MAJY,UAJER,KAGEmT,YAEZ3S,EAAMA,GAAOA,EAAIk7B,SAGd5vB,OAAOgB,KAAK2uB,aAAaj7B,IAQjCkX,oBAAqB,SAASnD,GAC7B,IAAIxU,EAAOC,KACP0W,EAAO3W,EAAKoT,UAGbpT,EAAK4X,mBACP5X,EAAK4X,kBAAkBiB,UAGxB7Y,EAAKwU,UAAYA,EACjBxU,EAAK8Y,0BAA0BtE,GAEpB,aAARmC,GAEF3W,EAAK+Y,oBAEK,UAARpC,GAEF3W,EAAKiZ,sBAEK,UAARtC,IAEF3W,EAAKiZ,sBACLjZ,EAAKkZ,0BCxDR/c,EAAEmV,MAAMjS,OAAO,iCAKX0S,eAAgB,SAAU5S,GAItBc,KAAKyM,OAAOvN,GAGZhD,EAAE2E,KANSb,KAMCqD,SAAU,SAAUQ,EAAGmT,GAC/BA,EAAMrR,WAAWkoB,QAAUhqB,KAQnCgU,gBAAiB,WACb,IACIlS,EADO3F,KACW2F,WAClBrB,EAFOtE,KAESyR,cAAcwN,YAAY,aAG1C7a,EAAOlI,EAAEqjB,SAASjb,GAClBgR,SAAU3P,EAAW2P,WAKzB,OADAlR,EAVWpE,KAUC0Y,oBAAoBtU,EAVrBpE,KAUgC0Z,yBChCnDxd,EAAEmV,MAAMjS,OAAO,qCAKXyY,gBAAiB,WACb,IACIlS,EAAa3F,KAAK2F,WAClBrB,EAFOtE,KAESyR,cAAcwN,YAAY,iBAG1C7a,EAAOlI,EAAEqjB,SAASjb,GAClB6Q,GAAIxP,EAAWwP,GACf0Y,QAASloB,EAAWkoB,QACpB3W,YAAavR,EAAWuR,YACxBtB,YAAajQ,EAAWiQ,YACxBN,SAAU3P,EAAW2P,WAKzB,OADAlR,EAdWpE,KAcC0Y,oBAAoBtU,EAdrBpE,KAcgC0Z,uBAO/CtK,SAAU,WACKpP,KACNI,QAAS,GAMlBya,SAAU,WACN,IACIpI,EADOzS,KACMyM,SAKjB,OAJIX,OAAOgB,KAAKkL,QAAQvF,IAFbzS,KAE4BI,SACnCqS,EAHOzS,KAGM2F,WAAWwP,IAGrB1C,KC1CfvW,EAAEmV,MAAMjS,OAAO,2CAEX0S,eAAgB,SAAU5S,GACtB,IAAIa,EAAOC,KAEXD,EAAK0M,OAAOvN,GAEZ,IAAIyG,EAAa5F,EAAK4F,WACtBA,EAAWg2B,cAA0C,IAAvBh2B,EAAWg2B,UAA2B7vB,OAAOgB,KAAK4I,aAAa/P,EAAWg2B,UACxGh2B,EAAWi2B,YAAcj2B,EAAWi2B,aAAej2B,EAAWg2B,SAC9Dh2B,EAAWk2B,eAA4C,IAAxBl2B,EAAWk2B,WAA4B/vB,OAAOgB,KAAK4I,aAAa/P,EAAWk2B,WAC1Gl2B,EAAWm2B,aAAen2B,EAAWm2B,cAAgBn2B,EAAWk2B,UAChEl2B,EAAWo2B,iBAAgD,IAA1Bp2B,EAAWo2B,aAA8BjwB,OAAOgB,KAAK4I,aAAa/P,EAAWo2B,aAC9Gp2B,EAAWqc,eAA4C,IAAxBrc,EAAWqc,WAA4BlW,OAAOgB,KAAK4I,aAAa/P,EAAWqc,WAC1Grc,EAAWqc,UAAYrc,EAAWqc,WAAarc,EAAWg2B,SAC1Dh2B,EAAW2Q,gBAA8C,IAAzB3Q,EAAW2Q,YAA6BxK,OAAOgB,KAAK4I,aAAa/P,EAAW2Q,YAC5G3Q,EAAW2Q,WAAa3Q,EAAW2Q,YAAc3Q,EAAWk2B,UAC5Dl2B,EAAWq2B,iBAAgD,IAA1Br2B,EAAWq2B,aAA8BlwB,OAAOgB,KAAK4I,aAAa/P,EAAWq2B,aAE9Gj8B,EAAK6V,YAAc7V,EAAK4F,WAAWiQ,aAAe,MAClD7V,EAAKiB,KAAOjB,EAAK4F,WAAW3E,KAC5BjB,EAAKk8B,KAAOl8B,EAAKiB,KAAOjB,EAAKm8B,QAAQn8B,EAAKiB,KAAK2L,SAC/C5M,EAAKo8B,QAAU,EACfp8B,EAAKq8B,UAAY,EACjBr8B,EAAKs8B,oBAEDt8B,EAAKiB,OACLjB,EAAKq8B,UAAYr8B,EAAKiB,KAAK2L,KAAK5K,SAMxCm6B,QAAS,SAAUvvB,GAIf,IAFA,IAAIsvB,KAEKp4B,EAAI,EAAGoY,GAHhBtP,EAAOA,OAGkB5K,OAAQ8B,EAAIoY,EAAGpY,IAAK,CACzC,IAAI6K,EAAM/B,EAAK9I,GACfo4B,EAAK/6B,KAAKwN,EAAI,IAElB,OAAOutB,GAMXtb,cAAe,WACX,IAAI5gB,EAAOC,KACP2F,EAAa3F,KAAK2F,WAElBrB,EAAWvE,EAAK0R,cAAcwN,YADf,uBAEfvI,EAAO3W,EAAKoT,UAGZ/O,EAAOlI,EAAEqjB,SAASjb,GAClBgR,SAAU3P,EAAW2P,SACrB4B,YAAavR,EAAWuR,YAAcvR,EAAWuR,YAAc,GAC/D/B,GAAIxP,EAAWwP,GACf+Q,KAAMvgB,EAAWugB,KACjBoW,YAAav8B,EAAKu8B,cAClB5lB,KAAMA,EACNd,YAAa7V,EAAKqS,mBAAmBzM,WAAWiQ,cAKpD,OAFAxR,EAAOrE,EAAKw8B,aAAan4B,IAQ7Bwc,eAAgB,WACZ,OAAO5gB,KAAK2gB,iBAMhB4b,aAAc,SAAUn4B,KAQxBo4B,YAAa,SAAU1B,KAOvB2B,YAAa,SAAU3B,KAOvB4B,UAAW,SAAU5B,KAOrB6B,YAAa,WACT,IAEIC,EAAyB,cAFlB58B,KACKmT,UAC4B,gCAAkC,8BAC1E7O,EAHOtE,KAGSyR,cAAcwN,YAAY2d,GAC1Cx4B,EAAOlI,EAAE47B,KAAKxzB,GAJPtE,KAMNg4B,OAAOxzB,OAAOJ,IAOvBy4B,QAAS,WACL,OAAO78B,KAAK88B,eAAiB,GAMjCC,OAAQ,WACJ,OAAO/8B,KAAKi8B,KAAKj8B,KAAKm8B,UAM1Ba,WAAY,WAMR,OALWh9B,KAEF88B,eAFE98B,KAEqBm8B,QAAU,IAF/Bn8B,KAGFm8B,SAAW,GAHTn8B,KAKC+8B,UAMhBE,eAAgB,WAMZ,OALWj9B,KAEFm8B,QAAU,IAFRn8B,KAGFm8B,SAAW,GAHTn8B,KAKC+8B,UAMhBG,YAAa,WAIT,OAHWl9B,KAENm8B,QAAU,EAFJn8B,KAGC+8B,UAMhBI,WAAY,WAIR,OAHWn9B,KAENm8B,QAFMn8B,KAESi8B,KAAKl6B,OAAS,EAFvB/B,KAGC+8B,UAMhBD,aAAc,WACV,OAAO98B,KAAKi8B,KAAKl6B,QAGrBq7B,WAAY,WACR,OAAOp9B,KAAK2F,WAAW3E,KAAK2L,MAMhC0wB,WAAY,SAAU99B,GAClBS,KAAKm8B,QAAU58B,EAAQ,GAM3B+9B,wBAAyB,WACrB,OAAOt9B,KAAKq8B,iBAAiBt6B,OAAS,GAM1Cw7B,OAAQ,SAAUC,GACdx9B,KAAKi8B,KAAK/6B,KAAKs8B,IAMnBC,UAAW,WACP,IACIl+B,EADOS,KACMm8B,QAEjB,GAAI58B,GAAS,EAAG,CAHLS,KAIFi8B,KAAKxf,OAAOld,EAAO,GAExB,IAAI68B,EANGp8B,KAMc88B,eACjBV,EAAY,GAAK78B,GAAS68B,GAPvBp8B,KAQEq9B,WAAWjB,KAS5BE,YAAa,WACT,IACI5lB,EADO1W,KACKmT,UACZxN,EAFO3F,KAEW2F,WAEtB,MAAY,aAAR+Q,GAJO1W,KAKM68B,WAEL/wB,OAAOgB,KAAK4I,aAAa/P,EAAW+3B,iBAOpDC,cAAe,SAAUz+B,GACrB,IAEI8qB,KACArkB,EAHO3F,KAGW2F,WAClBi4B,EAAcj4B,EAAWuP,MAAQ,OAAShW,EAAOiW,GAAK,IAa1D,OAXA6U,EAAW5O,SAAWzV,EAAWwP,GACjC6U,EAAW6T,YAAcD,EACzB5T,EAAWhY,aAAerM,EAAWqM,aACrCgY,EAAW9X,YAAcvM,EAAWuM,YACpC8X,EAAWxS,cAAgBtY,EAAOsY,cAClCwS,EAAWlM,YAAcnY,EAAWmY,aAAenY,EAAW0V,YAC9D2O,EAAW+P,IAAM76B,EAAO66B,IACxB/P,EAAWvU,SAAWvW,EAAOuW,SAChB9P,EAAWiQ,YAGjBoU,GAOX8T,iBAAkB,WACd,IACIn4B,EADO3F,KACW2F,WAiBtB,OAlBW3F,KAGQ0R,YAAYqsB,eAC3BhE,IAAKp0B,EAAWq4B,OAChB5iB,SAAUzV,EAAWwP,GACrBD,MAAOvP,EAAWuP,MAClBlD,aAAcrM,EAAWqM,aACzBqJ,YAAa1V,EAAWmY,aAAenY,EAAW0V,YAClDnJ,YAAavM,EAAWuM,YACxB0D,YAAajQ,EAAWiQ,aAAe,QAGdsR,KAAK,SAAUlmB,GAExC,OAAOA,EAAKi9B,WAGMlmB,WAO1BmmB,kBAAmB,SAAU/oB,GACzB,IACIxP,EADO3F,KACW2F,WAClBuP,EAAQvP,EAAWuP,MAAQ,OAASC,EAAK,IAE7C,OAJWnV,KAIC0R,YAAYysB,gBACpBpE,IAAKp0B,EAAWy4B,QAChBhjB,SAAUzV,EAAWwP,GACrBD,MAAOA,EACPlD,aAAcrM,EAAWqM,aACzBE,YAAavM,EAAWuM,YACxBmJ,YAAa1V,EAAWmY,aAAenY,EAAW0V,aAAe,GACjEzF,YAAajQ,EAAWiQ,aAAe,SAQ/CyoB,oBAAqB,SAAUlpB,GAC3B,IAAIpV,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBuP,EAAQvP,EAAWuP,MAAQ,OAASC,EAAK,IAE7C,OAAOpV,EAAK2R,YAAY4sB,kBACpBvE,IAAKp0B,EAAW44B,UAChBnjB,SAAUzV,EAAWwP,GACrBD,MAAOA,EACPlD,aAAcrM,EAAWqM,aACzBE,YAAavM,EAAWuM,YACxBmJ,YAAa1V,EAAWmY,aAAenY,EAAW0V,cACnD6L,KAAK,SAAUlmB,GACd,GAAiB,sBAAbA,EAAKzC,KAA8B,CACnC,IAAIyV,EAAOjU,EAAKqS,mBACZ2B,EAAU/S,EAAKk0B,SAAS0D,KAAK,KACjC5kB,EAAKohB,aAAcrhB,QAASA,IAGhC,OAAO/S,KAQfw9B,kBAAmB,SAAUrpB,EAAInU,GAC7B,IAAIjB,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClB8jB,EAAQvtB,EAAE0b,WAGV5F,EAAerM,EAAWqM,aAAajQ,OAAS,EAAI4D,EAAWqM,aAAe,IAAMrM,EAAWuP,MAAQ,OAASC,EAAK,IAAMxP,EAAWuP,MAAQ,OAASC,EAAK,IAE5J+d,EAAkB,KAuCtB,OAtCIlyB,EAAKmyB,YACLD,EAAkBh3B,EAAEyU,KAAKxC,MAAMjS,EAAG8E,EAAKmyB,kBAChCnyB,EAAKmyB,WAGhBj3B,EAAEyU,KAAKuiB,GAAiBpB,KAAK,WAEzB/xB,EAAK2R,YAAY+sB,gBACb1E,IAAKp0B,EAAW+4B,QAChBtjB,SAAUzV,EAAWwP,GACrBD,MAAOvP,EAAWuP,MAClBlD,aAAcA,EACdqJ,YAAa1V,EAAWmY,aAAenY,EAAW0V,aAAe,GACjE2S,WAAYhtB,IACb6P,KAAK,SAASkkB,GACbtL,EAAM7Q,QAAQmc,KACflZ,KAAK,SAAU8iB,GACd,IAAI3qB,EAAOjU,EAAKqS,mBACZ2B,EAAW4qB,EAAqB,aAAIA,EAAS/pB,aAAoC,iBAAZ+pB,EAAwBA,EAAWA,EAASl0B,WAErH,GAAsB,iBAAXsJ,EACP,IACIA,EAAUU,KAAKC,MAAMX,GAASA,QAChC,MAAOnW,GAELmW,GADAA,EAAUA,EAAQpJ,MAAM,oBAAoB,IAC1BL,OAAO,GAAIyJ,EAAQhS,OAAS,SAG1CgS,EAAQA,UAChBA,EAAU4qB,GAEd3qB,EAAK6e,eACL7e,EAAKK,0BACLL,EAAK4iB,qBAAqB7iB,OAK3B0V,EAAM1R,WAOjB6mB,sBAAuB,SAAUz8B,GAC7B,IACIwD,EADO3F,KACW2F,WAEtB,OAHW3F,KAGC0R,YAAYmtB,oBACpB9E,IAAKp0B,EAAWy0B,YAChBhf,SAAUzV,EAAWwP,GACrBD,MAAOvP,EAAWuP,MAClBlD,aAAcrM,EAAWqM,aACzBE,YAAa/P,EAAM+P,YACnBmJ,YATOrb,KASW2F,WAAW0V,aAAe,MAMpDyjB,cAAe,SAAU5/B,GACrB,IACIyG,EADO3F,KACW2F,WActB,OAXAzG,EAASA,MACThD,EAAEkD,OAAOF,GACL66B,IAAKp0B,EAAWo5B,QAChB7pB,MAAOvP,EAAWuP,MAClBkG,SAAUzV,EAAWwP,GACrBnD,aAAcrM,EAAWqM,aACzBqJ,YAAa1V,EAAWmY,aAAenY,EAAW0V,YAClDnJ,YAAavM,EAAWuM,cAXjBlS,KAeC0R,YAAYstB,QAAQ9/B,IAGpCmM,QAAS,SAAUqP,GACf,IAAI1G,EAAOhU,KAAKgU,KAsBhB,YApBsB,IAAX,IACNA,EAAK3Q,cAAgBif,QAAQ,SAAUtL,GACpC,GAAIA,EAAMrR,WAAWgQ,QACjB,GAAIqB,EAAM1E,kBAAoBxG,OAAOsJ,UAAUtU,QAAQwQ,uBAEnD0F,EAAM3L,QAAQqP,QAEX,GAAI1D,EAAM1E,kBAAoBxG,OAAOsJ,UAAUtU,QAAQyQ,sBAErDyF,EAAM3L,QAAQqP,GAAkB,CACjC,IAAIukB,EAAUvkB,EAAgBA,EAAgB3Y,OAAS,GACvD2Y,EAAgBA,EAAgB3Y,OAAS,GAAK7F,EAAEkD,OAAO6/B,GACnD9pB,GAAI6B,EAAMrR,WAAWwP,QAQX,IAA3BuF,EAAgB3Y,QAG3Bm9B,iBAAkB,SAASxkB,GACvB,QAAK1a,KAAKgU,MACHhU,KAAKgU,KAAKI,qBAAqBme,mBAAmB7X,MC7cjExe,EAAEmV,MAAMjS,OAAO,6BAKX0S,eAAgB,SAAU5S,GACXc,KAGNyM,OAAOvN,GAGZ,IAAIyG,EANO3F,KAMW2F,WAEtBA,EAAW6X,SAAW7X,EAAW6X,UAAY7X,EAAWuR,YAGxDvR,EAAWya,SAAWza,EAAWya,UAAY,oBAE7Cza,EAAWw5B,gBAA0C,IAAvBx5B,EAAWw5B,WAA2BrzB,OAAOgB,KAAK4I,aAAa/P,EAAWw5B,YAM5GtnB,gBAAiB,WACb,IAAI9X,EAAOC,KACP2F,EAAa3F,KAAK2F,WAClBrB,EAAWvE,EAAK0R,cAAcwN,YAAY,SAG9Clf,EAAKq/B,aAAer/B,EAAKs/B,kBACzBt/B,EAAKu/B,cAAgBv/B,EAAKw/B,mBAG1B,IAAIn7B,EAAOlI,EAAEqjB,SAASjb,GAClBk7B,kBAAmBz/B,EAAKq/B,aACxBloB,YAAavR,EAAWuR,YACxBzB,SAAU9P,EAAW8P,SACrBG,YAAajQ,EAAWiQ,YACxBN,SAAU3P,EAAW2P,SACrB6pB,SAAUx5B,EAAWw5B,SACrBh6B,SAA8B,cAAnBpF,EAAKoT,UAChB6I,kBAAmBrW,EAAWqW,kBAC9BoE,SAAUza,EAAWya,SACrB8F,KAAMvgB,EAAWugB,OAKrB,OADA9hB,EAAOrE,EAAK2Y,oBAAoBtU,EAAMrE,EAAK2Z,uBAO/C2lB,gBAAiB,aAKjBE,iBAAkB,aAKlBE,gBAAiB,SAAUpnB,EAAUqnB,OCjEzCxjC,EAAEmV,MAAMjS,OAAO,kCAKXyY,gBAAiB,WACb,IACIlS,EAAa3F,KAAK2F,WAClBrB,EAFOtE,KAESyR,cAAcwN,YAAY,cAG1C7a,EAAOlI,EAAEqjB,SAASjb,GAClBgR,SAAU3P,EAAW2P,WAKzB,OADAlR,EAVWpE,KAUC0Y,oBAAoBtU,EAVrBpE,KAUgC0Z,yBCjBnDxd,EAAEmV,MAAMjS,OAAO,6BAKX0S,eAAgB,SAAS5S,GACVc,KAGNyM,OAAOvN,GAGZ,IAAIyG,EANO3F,KAMW2F,WACtBA,EAAWuR,YAAcvR,EAAWuR,aAAe,IAOvDW,gBAAiB,WACb,IACIlS,EAAa3F,KAAK2F,WAClBrB,EAFOtE,KAESyR,cAAcwN,YAAY,SAG1C7a,EAAOlI,EAAEqjB,SAASjb,GAClB4S,YAAavR,EAAWuR,YACxB8c,QAASruB,EAAWquB,QACpBjgB,QAASpO,EAAWoO,QACpB6B,YAAajQ,EAAWiQ,YACxBN,SAAU3P,EAAW2P,SACrB6K,SAAUxa,EAAWya,WAKzB,OADAhc,EAfWpE,KAeC0Y,oBAAoBtU,EAfrBpE,KAegC0Z,uBAO/ChC,oBAAqB,SAASioB,GAC1B,IACIh6B,EADO3F,KACW2F,WAGlBA,EAAWxH,QACXwhC,EAAMxhC,OAAOwH,EAAWxH,QALjB6B,KASNyM,OAAOkzB,MCrDpBzjC,EAAEmV,MAAMjS,OAAO,oCAKX0S,eAAgB,SAAU5S,GACXc,KAGNyM,OAAOvN,GAGZ,IAAIyG,EANO3F,KAMW2F,WACtBA,EAAWuR,YAAcvR,EAAWuR,aAAe,IAOvDW,gBAAiB,WACb,IAAI9X,EAAOC,KACP2F,EAAa3F,KAAK2F,WAClBrB,EAAWvE,EAAK0R,cAAcwN,YAAY,gBAG1C7a,EAAOlI,EAAEqjB,SAASjb,GAClB4S,YAAavR,EAAWuR,YACxBR,KAAM3W,EAAKoT,UACXmC,SAAU3P,EAAW2P,SACrBnQ,SAA6B,WAAnBpF,EAAKoT,UACf6I,kBAAmBrW,EAAWqW,kBAC9BmE,SAAUxa,EAAWya,SACrB8F,KAAMvgB,EAAWugB,OAKrB,OADA9hB,EAAOrE,EAAK2Y,oBAAoBtU,EAAMrE,EAAK2Z,uBAO/ChC,oBAAqB,SAAUioB,GAE3B3/B,KAAKyM,OAAOkzB,MC9CpBzjC,EAAEmV,MAAMjS,OAAO,kCAKXyY,gBAAiB,WACb,IAAI9X,EAAOC,KACP2F,EAAa3F,KAAK2F,WAClBrB,EAAWvE,EAAK0R,cAAcwN,YAAY,cAEf,WAA3BtZ,EAAW0V,aAA4Btb,EAAKyI,SAC5C7C,EAAW0V,YAAoD,mBAA9Btb,EAAKyI,OAAO6nB,eAAgCtwB,EAAKyI,OAAO6nB,iBAAmB,IAIhH,IAAIjsB,EAAOlI,EAAEqjB,SAASjb,GAClB4S,YAAavR,EAAWuR,YACxB5B,SAAU3P,EAAW2P,WASzB,OAFAlR,GAHAA,EAAOrE,EAAK2Y,oBAAoBtU,EAAMrE,EAAK2Z,uBAG/Bf,4BAA4B,aAAc5Y,EAAK6/B,iBAQ/DC,cAAe,SAAUC,GACJ9/B,KAAK2F,WAGXm6B,aAAeA,EAG1B9/B,KAAK+/B,gBAMTA,aAAc,WAEV//B,KAAKggC,kBAMT1sB,MAAO,WACH,OAAOtT,KAAKwI,OAAO8K,SAOvBwrB,cAAe,SAAU5/B,GACrB,IAAIa,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClB8jB,EAAQ,IAAIvtB,EAAE0b,SAGd5W,EAAOjB,EAAKkgC,sBAEhB,OAAIn0B,OAAOgB,KAAKozB,WAAWl/B,IACvB8K,OAAO8nB,eAAe5zB,KAAKgM,YAAY,qCAAsChM,KAAKgM,YAAY,iCAAkC,SACzH,OAGX9M,EAAOyN,KAAQhH,EAAWm6B,cAAgBn6B,EAAWm6B,aAAaK,YAAcx6B,EAAWm6B,aAAaK,WAAa,EAAKx6B,EAAWm6B,aAAaK,WAAajhC,EAAOyN,KAGlKhH,EAAWm6B,mBAA6D,IAArCn6B,EAAWm6B,aAAoB,UAClE5gC,EAAOyN,KAAOhH,EAAWm6B,aAAaM,SAAWlhC,EAAOyN,MAI5D5M,EAAK2R,YAAYquB,aAAa7jC,EAAEkD,OAAOF,GACnC66B,IAAKp0B,EAAWo5B,QAChB3jB,SAAUzV,EAAWyV,SACrBlJ,YAAavM,EAAWuM,YACxBmuB,aAAc16B,EAAWwP,GACzBmrB,gBAAkB36B,EAAWm6B,aAAaQ,gBAAkB36B,EAAWm6B,aAAaQ,gBAAkB,KACtGH,WAAax6B,EAAWm6B,aAAaK,WAAa,EAAIx6B,EAAWm6B,aAAaK,WAAa,KAC3FI,SAAUv/B,KAEV6P,KAAK,SAAUkkB,GAGfpvB,EAAW4F,KAAOwpB,EAASxpB,KAC3B5F,EAAWkI,QAAUknB,EAASlnB,QAC9BlI,EAAW66B,WAAazL,EAASyL,YAAc,EAG3CzL,EAASlnB,QAAU,KACnBlI,EAAW86B,0BAA2B,EACtC1L,EAAS0L,0BAA2B,UAE7B96B,EAAW86B,yBAGtBhX,EAAM7Q,QAAQmc,GAGdh1B,EAAK2gC,qBACN7kB,KAAK,SAAU8kB,GAEd,GADA70B,OAAO8tB,sBAAuB,EAC1B+G,EAAY/rB,aACZ,IACI,IAAIb,EAAUU,KAAKC,MAAMisB,EAAY/rB,cAAcb,QACnDjI,OAAO8nB,eAAe7f,EAAS,GAAI,SACrC,MAAOnW,IAGb6rB,EAAMG,WAGHH,EAAM1R,YAOjBkoB,oBAAqB,WACjB,IAGIj/B,KACJhB,KAAK6Z,oBAAoB7Y,GAGzB,IAAI4/B,KACJ,IAAKvuB,OAAOrR,EAAM,CACd,IAAIkU,EAAQ7C,IACR7G,EAAQxK,EAAKqR,KACbwuB,EAXG7gC,KAWc8gC,qBAXd9gC,KAWwCyW,UAAUvB,IACrD6rB,KACCj1B,OAAOgB,KAAKkL,QAAQxM,KACrBu1B,EAAoB,MAAI7rB,EACxB6rB,EAAoB,MAAIv1B,EACxBu1B,EAAwB,UAAIF,EAC5BD,EAAY1/B,KAAK6/B,IAIzB,OAAOH,GAQXE,qBAAsB,SAAU7qB,GAC5B,IACItQ,EADO3F,KACW2F,WAElBk7B,EAAY,SAUhB,MATkC,MAA9B5qB,EAAOtQ,WAAWq7B,gBAC0B,IAAjC/qB,EAAOtQ,WAAWkiB,YAA+D,WAAjC5R,EAAOtQ,WAAWkiB,aAErEgZ,EADAl7B,EAAW26B,gBACC,WAEA,SAIjBO,GAOXjB,aAAc,aAMdI,eAAgB,aAMhBiB,0BAA2B,SAAUD,GAGjC,OAAgB,GAAZA,GAA6B,GAAZA,GAA6B,GAAZA,GACtB,GAAZA,GAA6B,GAAZA,GAA6B,GAAZA,GACtB,IAAZA,GAA8B,IAAZA,GACVziC,KAAM,gBAIF,IAAZyiC,GACQziC,KAAM,kCAIF,GAAZyiC,GACQziC,KAAM,eAIF,IAAZyiC,GAA8B,IAAZA,GACVziC,KAAM,cAIF,GAAZyiC,GACQziC,KAAM,kBAIVA,KAAM,eAMlBmiC,iBAAkB,eCpOtBxkC,EAAEmV,MAAMjS,OAAO,2BAKX0S,eAAgB,SAAS5S,GAIrBc,KAAKyM,OAAOvN,GAGZ,IAAIyG,EANO3F,KAMW2F,WACtBA,EAAW6X,SAAW7X,EAAW6X,UAAY7X,EAAWuR,YAGxDvR,EAAWya,SAAWza,EAAWya,UAAY,IAMjDvI,gBAAiB,WA2Bb,IA1BA,IAAI9X,EAAOC,KACP2F,EAAa3F,KAAK2F,WAClBu7B,EAAWhlC,EAAEuS,IAAI1O,EAAKsD,SAAU,SAAS2T,EAAO3E,GAGhD,OAFA2E,EAAMrR,WAAWw7B,QAAU9uB,EAC3B2E,EAAMrR,WAAWy7B,QAAWpqB,EAAMrR,WAAWy7B,SAAWpqB,EAAMrR,WAAWuR,aAAe,GACjFF,EAAMrR,aAEbrB,EAAWvE,EAAK0R,cAAcwN,YAAY,OAC1CvI,EAAO3W,EAAKoT,UAGZ/O,EAAOlI,EAAEqjB,SAASjb,GAClB6Q,GAAIxP,EAAWwP,GACf/Y,KAAM8kC,EACNxqB,KAAMA,EACNvR,SAA8B,cAAnBpF,EAAKoT,UAChBsC,SAAU9P,EAAW8P,SACrB4rB,eAAgB17B,EAAWiQ,YAC3BN,SAAU3P,EAAW2P,SACrB8K,SAAUza,EAAWya,WAIrBlR,EAAYnP,EAAKmP,UAAYnP,EAAK4B,eAG7BkC,EAAI,EAAG9B,EAAShC,EAAKsD,SAAStB,OAAQ8B,EAAI9B,EAAQ8B,IAEvD9D,EAAKsD,SAASQ,GAAG8B,WAAW27B,aAAgBz9B,GAAKqL,EAGrD,OADA9K,EAAOrE,EAAK2Y,oBAAoBtU,EAAMrE,EAAK2Z,uBAO/C/X,aAAc,WACV,IAAI5B,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClB47B,EAAavhC,KAAKoS,mBAAmBgB,YAG5B,cAFFrT,EAAKoT,YAGPouB,EAAWlK,WAAa1xB,EAAWuJ,WACpCnP,EAAKqS,mBAAmBkmB,kBAAkB3yB,EAAWuJ,WAI7D,IAAIioB,EAAeoK,GAAcA,EAAWpK,aAAeoK,EAAWpK,gBAGtE,GAAIA,EAAap3B,EAAK4F,WAAWwP,KAAO,EACpC,OAAOgiB,EAAap3B,EAAK4F,WAAWwP,IAIxC,IAAK,IAAItR,EAAI,EAAG9B,EAAShC,EAAKsD,SAAStB,OAAQ8B,EAAI9B,EAAQ8B,IAEvD,GAAI9D,EAAKsD,SAASQ,GAAG29B,yBAA0B,OAAO39B,EAE1D,OAAO,GAOX49B,aAAc,SAAUliC,GACpB,IAAIQ,EAAOC,KAIX,GAFAD,EAAKgT,eAAe,YAAcxT,MAAOA,EAAOqC,IAAK7B,EAAKsD,SAAS9D,KAE/DQ,EAAKsD,SAAS9D,GAAQ,CACtB,IAAIyU,EAAOjU,EAAKqS,mBAEhBrS,EAAKsD,SAAS9D,GAAO6P,WACrBrP,EAAKmP,UAAY3P,EAEjB,IAAImiC,KACJA,EAAY3hC,EAAKsD,SAAS9D,GAAOiJ,OAAO7C,WAAWwP,IAAM5V,EACzDyU,EAAK4a,SAAS,eAAgB8S,OCxG1CxlC,EAAEmV,MAAMjS,OAAO,+BAKXyY,gBAAiB,WACb,IACIlS,EAAa3F,KAAK2F,WAClBrB,EAFOtE,KAESyR,cAAcwN,YAAY,WAG1C7a,EAAOlI,EAAEqjB,SAASjb,GAClB6Q,GAAIxP,EAAWwP,GACfG,SAAU3P,EAAW2P,SACrB6rB,QAASx7B,EAAWw7B,QACpBE,eAAgB17B,EAAWiQ,YAC3BzQ,SAA8B,cAVvBnF,KAUSmT,YAMpB,OAFA/O,EAdWpE,KAcC2hC,iBAAiBv9B,IAQjCu9B,iBAAkB,SAAUv9B,GAExB,OAAOpE,KAAK0Y,oBAAoBtU,EAAMpE,KAAK0Z,uBAM/CtK,SAAU,WACNpP,KAAKI,QAAS,GAMlBya,SAAU,WACN,IACIpI,EADOzS,KACMyM,SAKjB,OAJIX,OAAOgB,KAAKkL,QAAQvF,IAFbzS,KAE4BI,SACnCqS,EAHOzS,KAGM2F,WAAWwP,IAGrB1C,GAMX+uB,uBAAwB,WACpB,IAAIzhC,EAAOC,KACPyS,EAAQ1S,EAAKqS,mBAAmBimB,oBAEpC,GAAI5lB,EAAO,CAGP,GAAIA,EAAMyC,MAAO,CAEb,IAAIc,EAAWjW,EAAKqS,mBAAmBkI,WAAW7H,EAAMyC,OAGxDhZ,EAAE2E,KAAKmV,EAAU,SAAUnS,EAAG+L,GAEtBA,EAAKjK,WAAWwP,IAAM1C,EAAM0C,IAAMvF,EAAKjK,WAAW8P,WAClD3U,EAAU8O,UAKlB,IAAI9O,EAAUf,EAAKqS,mBAAmByE,aAAapE,IAAU1S,EAAKqS,mBAAmBid,cAAc5c,GAIvG,GAAI3R,EACA,KAAOA,EAAQ0H,QAAQ,CACnB,GAAI1H,EAAQ6E,WAAWwP,IAAMpV,EAAK4F,WAAWwP,IAAMrU,EAAQ0H,OAAO7C,WAAWwP,IAAMpV,EAAK4F,WAAWwP,GAAI,OAAO,EAC9GrU,EAAUA,EAAQ0H,QAK9B,OAAO,KCxFftM,EAAEmV,MAAMjS,OAAO,oCAIdwa,cAAe,SAAUtV,GACxB,IAAIvE,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBqO,EAAOjU,EAAKqS,mBAEhBrS,EAAK4X,kBAAoB,IAAIzb,EAAE0b,SAG/BtT,EAAWA,GAAY,gBACvB,IAAI0a,EAAiBjf,EAAK0R,cAAcwN,YAAY3a,GAGhDsa,EAAQjZ,EAAWuR,YACH,iBAAT0H,IAMVA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAQA,EAAMM,WAAW,IAAK,UAChBA,WAAW,IAAK,UAChBA,WAAW,IAAK,QAAQA,WAAW,IAAK,SACxCA,WAAW,IAAM,SAASA,WAAW,IAAK,SAASA,WAAW,IAAK,UACnEA,WAAW,MAAO,UAClBA,WAAW,KAAM,UAIhC,IAAI9a,EAAOlI,EAAEqjB,SAASP,GACrBJ,MAAOA,EACPY,eAAoC,QAAnB7Z,EAAWpH,MAAkBoH,EAAW8Z,WACzD7J,YAAajQ,EAAWiQ,YACxBN,SAAU3P,EAAW2P,SACrBH,GAAIxP,EAAWwP,GACfhQ,SAA6B,WAAnBpF,EAAKoT,UACf6I,kBAAmBrW,EAAWqW,kBAC9BiE,aAAcjM,EAAK9U,OAAOghB,aAC1BC,SAAUxa,EAAWya,UAAY,GACjCnf,KAAM0E,EAAW1E,OAIdwE,EAAS1F,EAAKugB,wBAsBlB,OArBK7a,IACJA,EAAS,IAIsB,iBAAb,GAAyBA,EAAOoL,KAK3B,aAAnBpL,EAAO8a,SAEVnc,EAAOrE,EAAKygB,mBAAmBpc,EAAMrE,EAAK0gB,cAAchb,IACxD1F,EAAK2gB,oBAAsB,OAG3B3gB,EAAK2gB,oBAAsBjb,EAC3BrB,EAAOrE,EAAKygB,mBAAmBpc,EAAM,KAVtCA,EAAOrE,EAAKygB,mBAAmBpc,EAAMqB,GAc/BrB,GAMR8c,WAAY,WACX,IAAInhB,EAAOC,KAIX,QAHKD,EAAK8e,SAAY9e,EAAK8e,mBAAmB5Z,QAAkC,IAAxBlF,EAAK8e,QAAQ9c,UACpEhC,EAAK8e,QAAU9e,EAAKe,SAEhBf,EAAK8e,SAAkC,GAAvB9e,EAAK8e,QAAQ9c,OAG3BhC,EAAK8e,QAFJ,MAQTwE,iBAAkB,SAAUD,GAM3B,OALItX,OAAOgB,KAAK4I,aAAa0N,GAC5BpjB,KAAKkhB,aAAa1gB,IAAI,aAAc,SAAU,cAE9CR,KAAKkhB,aAAa1gB,IAAI,aAAc,SAAU,cAExCR,MAMRujB,oBAAqB,SAAUD,GAC9B,IAAI3F,EAAc3d,KAAK2F,WAAWgY,gBACjC2I,EAAkBxa,OAAOgB,KAAK4I,aAAaiI,EAAY6F,YAAc,gBAAkB,GAUxF,OARI1X,OAAOgB,KAAK4I,aAAa4N,GAC5BtjB,KAAKkhB,aAAa1gB,IAAI,kBAAmB8lB,EAAkB,YAAa,cAExEtmB,KAAKkhB,aAAa5f,KAAK,KAAKT,KAAK,SAAUgD,EAAG/C,GAC7C5E,EAAE4E,GAASN,IAAI,kBAAmB8lB,EAAiB,gBAI9CtmB,QC3GT9D,EAAEmV,MAAMjS,OAAO,mCAIXQ,KAAM,SAAUV,GAEZc,KAAKyM,OAAOvN,IAMhByhB,cAAe,WACA3gB,KACKmT,UADLnT,KAGS2F,WAAW6F,MAH/B,IAOIo2B,EAPO5hC,KAOYyR,cAAcwN,YAAY,gBAejD,OAAO/iB,EAAEqjB,SAASqiB,GAAcC,iBAAiB,KAMrDC,WAAY,WACR,IAEI5iC,GACAgW,MAHOlV,KAGK2F,WAAWuP,MACvB6sB,OAJO/hC,KAIMwL,MAAM0a,KACnBiQ,aALOn2B,KAKYwL,MAAM2qB,aACzBh5B,MAAO,GACPgB,OAAQ,IAGZ,OAVW6B,KAUC0R,YAAYswB,iBAAiB9iC,IAM7C+iC,YAAa,WACT,IAAIliC,EAAOC,KAEPyO,GACAszB,OAAQhiC,EAAKyL,MAAM0a,KACnBiQ,aAAcp2B,EAAKyL,MAAM2qB,aACzBjhB,MAAOnV,EAAK4F,WAAWuP,MACvB/X,MAAO,GACPgB,OAAQ,GACR+jC,KAAMniC,EAAKyL,MAAMA,OAGrB,OAAOzL,EAAK2R,YAAYywB,eAAeC,OAAO,uCAAuCC,gBAAgB5zB,MCtE7GvS,EAAEmV,MAAMjS,OAAO,kCAIXQ,KAAM,SAAUV,GAEZc,KAAKyM,OAAOvN,IAMhByhB,cAAe,WACX,IACIrc,EADOtE,KACSyR,cAAcwN,YAAY,eAG9C,OADW/iB,EAAEqjB,SAASjb,GAAW4S,YAHtBlX,KAGwC2F,WAAWuR,iBChBtEhb,EAAEmV,MAAMjS,OAAO,mCAKXQ,KAAM,SAAUV,GAEZc,KAAKyM,OAAOvN,GAEZc,KAAK2F,WAAW+M,UAAW,EAG3B1S,KAAK2F,WAAWyY,YAAc,QAC9Bpe,KAAK2F,WAAWoY,WAAa/d,KAAK6V,mBAAmBkI,YAAc,OAGnE/d,KAAKme,oCAQTwC,cAAe,WACX,IACIrc,EADOtE,KACSyR,cAAcwN,YAAY,gBAC1CzT,EAFOxL,KAEM2F,WAAWuR,aAFjBlX,KAEqC2F,WAAW6F,OAAS,GAGpE,OADWtP,EAAEqjB,SAASjb,GAAWkH,MAAOA,OC7BhDtP,EAAEmV,MAAMjS,OAAO,kCAIXQ,KAAM,SAAUV,GAEZc,KAAKyM,OAAOvN,IAGhB4S,eAAgB,SAAU9Q,GAGtBhB,KAAKyM,OAAOzL,GAGKhB,KAAK2F,YAO1Bgb,cAAe,WACX,IACIrc,EADOtE,KACSyR,cAAcwN,YAAY,eAG9C,OADW/iB,EAAEqjB,SAASjb,GAAWkH,MAHtBxL,KAGkC2F,WAAW6F,MAAMiK,SAHnDzV,KAGkE2F,WAAW8P,YAM5FmL,eAAgB,WAGZ,OAFW5gB,KAEC2gB,mBCnCpBzkB,EAAEmV,MAAMjS,OAAO,iCAEZkjC,2BAA4Bx2B,OAAOmK,OAAOssB,SAASC,QAAQF,2BAC3D5Y,4BAA6B5d,OAAOmK,OAAOssB,SAASC,QAAQ9Y,4BAC5D+Y,cAAe32B,OAAOmK,OAAOssB,SAASC,QAAQC,gBAK9C7iC,KAAM,SAAUV,GAEbc,KAAKyM,OAAOvN,IAMf4S,eAAgB,SAAU9Q,GAGvBhB,KAAKyM,OAAOzL,GAEZ,IAAIgT,EAJOhU,KAIKoS,mBAGZzM,EAAa3F,KAAK2F,WAEtBA,EAAW8P,UAAW,EACtB9P,EAAWq2B,aAAc,EAEzBr2B,EAAW0V,YAAerH,EAAK9U,QAAU8U,EAAK9U,OAAO8B,MAAQgT,EAAK9U,OAAO8B,KAAK8c,YAAe9J,EAAK9U,OAAO8B,KAAK8c,YAAc,GAC5HnY,EAAW+8B,gBAAkB/8B,EAAW+8B,kBAAmB,GAM9DC,oBAAqB,SAASh9B,GAC3B,IAEIi9B,EAOAC,EARApZ,EAAQvtB,EAAE0b,WAGVgrB,EADAj9B,EAAW6F,MAAMA,MACL7F,EAAW6F,MAAMA,MAGjB7F,EAAW6F,MAG3B,IAVWxL,KAWA8iC,kCACLD,EAAgBpuB,KAAKC,MAAM,cAAkBkuB,EAAa,KAC1DnZ,EAAM7Q,QAAQjT,EAAYk9B,IAG1B3mC,EAAEyU,KAhBG3Q,KAgBO+iC,4BAA4BlyB,KAAK,SAASmyB,GACnDH,EAAgBpuB,KAAKC,MAAM,cAAkBsuB,EAAe,KAC5DvZ,EAAM7Q,QAAQjT,EAAYk9B,KAInC,MAAMI,GACHJ,EAAgBpuB,KAAKC,MAAM,kBAC3B+U,EAAM7Q,QAAQjT,EAAYk9B,GAC1B3gC,QAAQghC,KAAK,2CAA4CD,GAE5D,OAAOxZ,EAAM1R,WAGhB+qB,+BAAgC,WAC7B,IAEIK,EAFOnjC,KAEcoS,mBACzB,OAAO+wB,EAAcjkC,OAAO4tB,cAAgBqW,EAAcjkC,OAAO4tB,aAAa1R,UAOjF2nB,yBAA0B,WACvB,IAEI7jC,GACDgW,MAHQlV,KAGI2F,WAAWuP,MACvB6sB,OAJQ/hC,KAIKwL,MAAM0a,KACnBiQ,aALQn2B,KAKWwL,MAAM2qB,cAG5B,OARWn2B,KAQC0R,YAAY0xB,mCAAmClkC,IAM9DujB,SAAU,WACP,OAAOziB,KAAKqjC,OAMfC,eAAgB,WACb,OAAOtjC,KAAK2F,WAAWuP,SCtG7BhZ,EAAEmV,MAAMjS,OAAO,qCAIXQ,KAAM,SAAUV,GAEZc,KAAKyM,OAAOvN,IAGhB4S,eAAgB,SAAU9Q,GAGtBhB,KAAKyM,OAAOzL,GAGKhB,KAAK2F,WACX8P,UAAW,GAM1BkL,cAAe,WACX,IACIrc,EADOtE,KACSyR,cAAcwN,YAAY,kBAG9C,OADW/iB,EAAEqjB,SAASjb,GAAWkH,MAAOxL,KAAK2F,WAAW6F,SAM5DoV,eAAgB,WAGZ,OAFW5gB,KAEC2gB,iBAGhBkD,SAAU,SAAUrY,EAAOsY,GACV,OAAVtY,GAA4B,KAAVA,EACjBxL,KAAK2F,WAAW6F,MAAQ,GAEgB,SAAnCA,EAAMf,WAAWiwB,eAA+D,UAAnClvB,EAAMf,WAAWiwB,gBACnE16B,KAAK2F,WAAW6F,MAAQM,OAAOgB,KAAK4I,aAAalK,GAASxL,KAAKgM,YAAY,sBAAwBhM,KAAKgM,YAAY,sBAExHhM,KAAKyM,OAAOzM,KAAK2F,WAAW6F,MAAOsY,MC7C3C5nB,EAAEmV,MAAMjS,OAAO,sCAIXQ,KAAM,SAAUV,GAEZc,KAAKyM,OAAOvN,IAOhB4S,eAAgB,SAAU9Q,GACtB,IAAIjB,EAAOC,KAEXD,EAAK0M,OAAOzL,GAGZ,IAAI2E,EAAa5F,EAAK4F,WAClB49B,EAAaxjC,EAAKiM,YAAY,cAC9Bw3B,EAAazjC,EAAKiM,YAAY,cAUlC,GAPArG,EAAW2e,aAAe,GAC1B3e,EAAW89B,cAAmChkC,IAAxBkG,EAAW89B,UAAyB33B,OAAOgB,KAAK4I,aAAa/P,EAAW89B,UAC9F99B,EAAW49B,WAAa59B,EAAW49B,YAAcA,EACjD59B,EAAW69B,WAAa79B,EAAW69B,YAAcA,EACjD79B,EAAW+9B,WAAa/9B,EAAW49B,WAG/B59B,EAAW89B,UACuC,IAA9C99B,EAAW+9B,WAAWC,OAAO,cAC7Bh+B,EAAW+9B,WAAa/9B,EAAW+9B,WAAa,IAAM/9B,EAAW69B,gBAGrE,CACA,IAAII,EAAYj+B,EAAW+9B,WAAWC,OAAO,aAC1B,IAAfC,IACAj+B,EAAW+9B,WAAa/9B,EAAW+9B,WAAW35B,UAAU,EAAG65B,EAAY,IAK/E,GAAIj+B,EAAW6F,MAAO,CAClB,IAAIq4B,EAAO/3B,OAAOgB,KAAKg3B,cAAcC,qBAAqBp+B,EAAW6F,MAAO7F,EAAW89B,UAGvF,GAAY,GAARI,EAAW,CACX,IAAIG,EAAqBl4B,OAAOC,aAAaC,YAAY,sBACzDjM,EAAKyL,MAAQ7F,EAAW6F,MACxB7F,EAAW2e,aAAexY,OAAOgB,KAAKg3B,cAAcG,WAAWJ,EAAMl+B,EAAW+9B,WAAYM,QAG5FjkC,EAAKyL,MAAQ,UAIjBzL,EAAKyL,MAAQ,KACb7F,EAAW6F,MAAQ,GACnB7F,EAAW2e,aAAe,IAOlC3D,cAAe,WACX,IACIrc,EADOtE,KACSyR,cAAcwN,YAAY,oBAC1CzT,EAAmC,OAF5BxL,KAEO2F,WAAW6F,OAA4C,KAF9DxL,KAEyC2F,WAAW6F,MAAiB,GAFrExL,KAE+E2F,WAAW6F,MAGrG,OAAOtP,EAAEqjB,SAASjb,GAAWkH,MAAOA,KAMxCuW,gBAAiB,SAAUvW,GACvB,IAAiB04B,EACbv+B,EADO3F,KACW2F,WAClBw+B,EAFOnkC,KAEYokC,iBACnBC,EAAmB,qBAcvB,GAjBWrkC,KAINskC,KAAOx4B,OAAOC,aAAaC,YAAY,sBAExCR,EAAMzJ,QAAUsiC,EAAiBtiC,QAAUyJ,EAAMzJ,QAAWsiC,EAAiBtiC,OAAS,EACtFmiC,EAAUp4B,OAAOgB,KAAKg3B,cAAcC,qBAAqBv4B,GAAO,KAGhE04B,EAAUp4B,OAAOgB,KAAKg3B,cAAcC,qBAAqBv4B,KACzC+4B,MAAMC,KAAK9vB,MAAMwvB,KAAchoC,EAAE2mB,UAAUqhB,IACvDA,EAAQO,SAAS,EAAG,EAAG,EAAG,GAK9Bj5B,IAAU+4B,MAAMC,KAAK9vB,MAAMlJ,IAAS,CACpC,IAAIk5B,EAAoB54B,OAAOgB,KAAKg3B,cAAcG,WAAWC,EAASv+B,EAAW+9B,WAlB1E1jC,KAkB2FskC,MAClGH,EAAYvP,KAAK8P,KAOzBN,eAAgB,WAGZ,OAFWpkC,KACNmkC,YAAcjoC,EAAE,8BADV8D,KAC8CkhB,cAD9ClhB,KAECmkC,eC7GpBjoC,EAAEmV,MAAMjS,OAAO,oCAIXQ,KAAM,SAAUV,GAEZc,KAAKyM,OAAOvN,IAKhB4S,eAAgB,SAAU9Q,GAGtBhB,KAAKyM,OAAOzL,GAGZ,IAAI2E,EAAa3F,KAAK2F,WAClBod,EAAS/iB,KAAKgM,YAAY,iBAE9BrG,EAAWg/B,mBAAsD,IAA9Bh/B,EAAwB,cAAoBmG,OAAOgB,KAAK4I,aAAa/P,EAAWg/B,eAAiB3kC,KAAK4kC,wBAAwBj/B,EAAWq7B,UAC5Kr7B,EAAWk/B,YAAcl/B,EAAWg/B,cAAiBh/B,EAAWk/B,YAAcl/B,EAAWk/B,YAAyD,oBAAnC,6BAAiDC,6BAA6BC,cAAgB,EAAM,EACnNp/B,EAAWq/B,OAAS,GACpBr/B,EAAWs/B,eAAiBliB,EAAOkiB,eACnCt/B,EAAWu/B,eAAiBniB,EAAOmiB,eACnCv/B,EAAWw/B,cAA0D,oBAAnC,6BAAiDL,6BAA6BM,iBAAmBriB,EAAOoiB,cAC1Ix/B,EAAW0/B,iBAA6D,oBAAnC,6BAAiDP,6BAA6BQ,eAAiBviB,EAAOsiB,iBAC3I1/B,EAAW4/B,YAAcvlC,KAAKwlC,sBAAsB7/B,EAAWq7B,UAC/Dr7B,EAAW8/B,SAAW9/B,EAAW+/B,qBAAsB,GAM3D/kB,cAAe,WACX,IACIrc,EADOtE,KACSyR,cAAcwN,YAAY,iBAG9C,OADW/iB,EAAEqjB,SAASjb,GAAWkH,MAHtBxL,KAGkC2F,WAAW6F,SAM5DoV,eAAgB,WAGZ,OAFW5gB,KAEC2gB,iBAMhB4D,gBAAiB,SAAU/Y,GACvB,IACI7F,EADO3F,KACW2F,WAIlBiZ,GALO5e,KAEQkhB,aAGPhlB,EAAE,YAAYkI,KAAKoH,IAe/B,OAbKA,EAAMf,WAAWE,MADR,0BAEViU,EAAM+mB,gBAEEX,OAAQr/B,EAAWq/B,OACnBC,eAAgBt/B,EAAWs/B,eAC3BC,eAAgBv/B,EAAWu/B,eAC3BC,cAAex/B,EAAWw/B,cAC1BE,iBAAkB1/B,EAAW0/B,iBAC7BE,YAAa5/B,EAAW4/B,YACxBK,oBAAqBjgC,EAAWk/B,YAChCY,SAAU9/B,EAAW8/B,WAG1B7mB,EAAMgW,QAMjBgQ,wBAAyB,SAAU5D,GAC/B,GAAIA,EAAU,CAEV,GAAgB,GAAZA,GAA6B,GAAZA,GAA6B,GAAZA,GAA6B,GAAZA,GAA6B,GAAZA,EACpE,OAAO,EAGX,GAAgB,GAAZA,GAA6B,GAAZA,GAA6B,IAAZA,GAA8B,IAAZA,EACpD,OAAO,EAGf,OAAO,GAKXwE,sBAAuB,SAAUxE,GAC7B,GAAIA,EAAU,CAEV,GAAgB,GAAZA,GAA6B,GAAZA,GAA6B,GAAZA,GAA6B,GAAZA,GAA6B,GAAZA,EACpE,OAAO,EAGX,GAAgB,GAAZA,GAA6B,GAAZA,GAA6B,IAAZA,GAA8B,IAAZA,EACpD,OAAO,EAGf,OAAO,KC3Gf9kC,EAAEmV,MAAMjS,OAAO,mCAIXQ,KAAM,SAAUV,GAEZc,KAAKyM,OAAOvN,IAMhB4S,eAAgB,SAAU9Q,GAGtBhB,KAAKyM,OAAOzL,GAGZ,IAAI2E,EAAa3F,KAAK2F,WAClBod,EAAS/iB,KAAKgM,YAAY,iBAG9BrG,EAAWkgC,gBAAgD,IAA3BlgC,EAAqB,YAAoBA,EAAWkgC,WAEhFlgC,EAAWkgC,WACXlgC,EAAWq/B,OAASr/B,EAAWmgC,eAAiBngC,EAAWmgC,eACZ,oBAAnC,6BAAiDhB,6BAA6BE,OAASjiB,EAAOiiB,OAG1Gr/B,EAAWq/B,OAAS,GAExBr/B,EAAW4/B,aAAc,KC/BjCrpC,EAAEmV,MAAMjS,OAAO,yCAKXQ,KAAM,SAAUV,GAEZc,KAAKyM,OAAOvN,IAOhB4S,eAAgB,SAAU9Q,GAGtBhB,KAAKyM,OAAOzL,GAGKhB,KAAK2F,YAO1Bgb,cAAe,WACX,IACIrc,EADOtE,KACSyR,cAAcwN,YAAY,sBAC1CzT,EAFOxL,KAEM2F,WAAW6F,OAFjBxL,KAE+B2F,WAAWuR,aAAe,GAGpE,OADWhb,EAAEqjB,SAASjb,GAAWkH,MAAOA,OChChDtP,EAAEmV,MAAMjS,OAAO,qCCAflD,EAAEmV,MAAMjS,OAAO,6BAKX0S,eAAgB,SAAU9Q,GACXhB,KAGNyM,OAAOzL,GAGZ,IAAI2E,EAAa3F,KAAK2F,WAEtBA,EAAWogC,aAAepgC,EAAW3E,OAAQ,EAE7C2E,EAAW6F,MAAQ7F,EAAW6F,OAAS7F,EAAW6F,MAAMzJ,OAAS,EAAI4D,EAAW6F,MAAM,GAAM7F,EAAWkgB,cAAgBlgB,EAAWkgB,aAAa9jB,OAAS,EAAI4D,EAAWkgB,aAAa,GAAK,UAEhJ,IAA7BlgB,EAAuB,eAAmBA,EAAWqgC,cAAe,GAC5ErgC,EAAW6F,YAAiC/L,IAAxBkG,EAAW6F,MAAM2J,KAAkBxP,EAAW6F,MAAQ,MAC9ExL,KAAKwL,MAAQ7F,EAAW6F,MAGpB7F,EAAWogC,eACXpgC,EAAW3E,KAAOhB,KAAKimC,eAAetgC,EAAW3E,OAIrD2E,EAAW27B,cAAe,GAO9B3gB,cAAe,WACX,IAAI5gB,EAAOC,KACPd,KACAie,EAAarR,OAAOgB,KAAKsQ,cAAcrd,EAAK4F,WAAWpH,MAE3D,GAAIwB,EAAKmmC,aAAenmC,EAAK4F,YAAc,oBAAoB0X,KAAKF,IAAepd,EAAKomC,eAAgB,CACpG,IAAIC,EAAermC,EAAKomC,iBAAiB1jB,WACrC2jB,GAAgBA,EAAajxB,KAC7BjW,EAAOa,EAAKsR,MAAMixB,2BAA6B,UAAY8D,EAAajxB,IAIhF,OAAOpV,EAAKsmC,YAAYnnC,IAM5BmnC,YAAa,SAAUnnC,GACnB,IAAIa,EAAOC,KAGX,GAFiBD,EAAK4F,WAEP27B,aAGX,OADWvhC,EAAKumC,sBAKhB,IAAI7c,EAAQ,IAAIvtB,EAAE0b,SACd2uB,EAAcxmC,EAAKi/B,QAAQ9/B,GAe/B,OAZAhD,EAAEyU,KAAK41B,GAAa11B,KAAK,SAAU7P,GAE/B,IAAIoD,EAAOrE,EAAKumC,oBAAoBtlC,GACpCjB,EAAK4F,WAAW3E,KAAOA,EACvByoB,EAAM7Q,QAAQxU,KAEfyX,KAAK,SAAU7a,GACd,IAAIoD,EAAOrE,EAAKumC,wBAChB7c,EAAM7Q,QAAQxU,KAIXqlB,EAAM1R,WAIrBuuB,oBAAqB,SAAUtlC,GAC3B,IAAIjB,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBrB,EAAWvE,EAAK0R,cAAcwN,YAAYlf,EAAKymC,mBAC/CC,EAAa36B,OAAO6H,SAAS+yB,oBAAsB3mC,EAAKiM,YAAY,gCACpER,EAAQ7F,EAAW6F,MAAQ,GAAKi7B,EAmBpC,OAlBAzlC,EAAOA,GAAQjB,EAAK4F,WAAW3E,SAEF,gBAAzBjB,EAAK4F,WAAWpH,MAAoC,KAAViN,GAA4C,iBAArB7F,EAAW6F,OAA8C,KAAxB7F,EAAW6F,MAAM2J,IAAyC,KAA3BxP,EAAW6F,MAAMA,OAAgB7F,EAAW6F,MAAMA,QAAUzL,EAAKiM,YAAY,8BAC9MR,EAAQzL,EAAKiM,YAAY,iCAGlB9P,EAAEqjB,SAASjb,EAAUpI,EAAEkD,OAAOW,EAAK4mC,qBAC1CxxB,GAAIxP,EAAWwP,GACfD,MAAOvP,EAAWuP,MAClB0xB,OAAQ96B,OAAOgB,KAAK+5B,aAAa,IAAO,KACxC30B,YAAavM,EAAWuM,YACxBxG,MAAO1K,EACP0nB,MAAO/iB,EAAWqY,WAClBxS,MAAOA,EACPiK,SAAU9P,EAAW8P,aAW7B8L,mBAAoB,WAChB,IAAIxhB,EAAOC,KACXD,EAAK0M,SACL,IAAImD,EAAO7P,EAAK0iB,WACZ5D,EAAU9e,EAAKmhB,aAEfnhB,EAAK8e,SAAW9e,EAAK8e,QAAQrW,UAC7BzI,EAAK8e,QAAQrW,SAASzH,SAAS,yBAA2BhB,EAAK4F,WAAWyY,aAE1ExO,GAEkB,MAAdA,EAAKpE,OAAyC,kBAAhBoE,EAAU,SACK,IAAzC9D,OAAOgB,KAAK4I,aAAa9F,EAAKpE,OAC9BoE,EAAKpE,MAAQxL,KAAKgM,YAAY,sBAEiB,GAAxCF,OAAOgB,KAAK4I,aAAa9F,EAAKpE,SACrCoE,EAAKpE,MAAQxL,KAAKgM,YAAY,uBAKlCjM,EAAKiM,YAAY,8BAAgC4D,EAAKpE,OAASzL,EAAKiM,YAAY,kCAAoC4D,EAAKpE,MACzHqT,EAAQ+V,KAAK,IAEb/V,EAAQza,KAAK,mCAAqCrE,EAAK+mC,WAAWl3B,EAAKpE,OAAS,aAIpFqT,EAAQ+V,KAAK,KAQrB4R,gBAAiB,WACb,MAAO,SAOXO,UAAW,WACP,OAAO,GAOXC,gBAAiB,WACb,OAAO,GAMXhI,QAAS,SAAU9/B,GACf,IAAIa,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClB8jB,EAAQ,IAAIvtB,EAAE0b,SACdlB,EAAO3W,EAAKoT,UACZc,EAAgBnI,OAAOgB,KAAKmH,eAAeC,QAASnU,IAGxD,GAAa,cAAT2W,EAAsB,OAAO3W,EAAKknC,eAEtC,GAAIthC,EAAWogC,cAAgB9xB,EAG3BwV,EAAM7Q,QAAQjT,EAAW3E,UAEtB,CACH,IAAImc,EAAarR,OAAOgB,KAAKsQ,cAAczX,EAAWpH,MAGlDoH,EAAWuhC,mBAAsB,oBAAoB7pB,KAAKF,GAC1DsM,EAAM7Q,QAAQjT,EAAW3E,MAGzBjB,EAAK2R,YAAYwJ,cAAc8jB,SAC3BjF,IAAKp0B,EAAWo5B,QAChB7pB,MAAOvP,EAAWuP,MAClBkG,SAAUzV,EAAWwP,GACrBnD,aAAcrM,EAAWqM,aACzBE,YAAavM,EAAWuM,YACxBi1B,MAAOjoC,EACPmc,YAAatb,EAAK4F,WAAW0V,aAAe,OAC7CxK,KAAK,SAAU7P,GAGT2E,EAAWyhC,cACZzhC,EAAWuhC,kBAAmB,GAElCvhC,EAAW3E,KAAOjB,EAAKkmC,eAAejlC,GACtCyoB,EAAM7Q,QAAQjT,EAAW3E,QAE1B6a,KAAK,SAAU7a,GAEd,IAAIqmC,GAAe,EACfrzB,EAAOjU,EAAKqS,mBAKhB,GAHItG,OAAOgB,KAAKimB,6BAA4C,IAAX,IAC7CsU,EAAerzB,EAAKgf,sBAEN,kBAAdhyB,EAAKzC,OAA4B8oC,EAArC,CAIA,IAAIC,EAASvnC,EAAK4F,WAAWuR,YAAc,KAE3C,GAAoB,iBAATlW,EACP,IAAIumC,EAAS9yB,MAAQA,KAAKC,MAAM1T,IAAS9E,EAAEsrC,UAAUxmC,QAEjDumC,EAASvmC,EAGjBsmC,GAAUC,EAAOxzB,QAEjBC,EAAK4iB,qBAAqB0Q,GAE1B7d,EAAMG,OAAO5oB,MAKzB,OAAOyoB,EAAM1R,WAMjBkvB,aAAc,WACV,IACIthC,EADO3F,KACW2F,WACtB,OAAIA,EAAW3E,KACJ2E,EAAW3E,MAGlB2E,EAAW3E,QACX2E,EAAW3E,KAPJhB,KAOgBimC,eAAetgC,EAAW3E,MAGjD2E,EAAW3E,KAAKE,MAAMiU,GAAI,GAAI3J,MAAO,WACrC7F,EAAW3E,KAAKE,MAAMiU,GAAI,GAAI3J,MAAO,WAE9B7F,EAAW3E,OAO1BymC,UAAW,WACP,IACI9hC,EADO3F,KACW2F,WAEtBA,EAAWogC,cAAe,EAC1BpgC,EAAW3E,KAAO,KAClB2E,EAAWuhC,kBAAmB,GAMlC3iB,gBAAiB,WACb,IAAIxkB,EAAOC,KAEX,GAAID,EAAK2nC,OAAS3nC,EAAK2nC,MAAM3lC,OAAS,EAElC,OAAOhC,EAAK4nC,mBAEZ,IAAIrjB,EAAe,GACf1U,EAAO7P,EAAK0iB,WAOhB,OALI7S,IAEA0U,EAAevkB,EAAK+mC,WAAWl3B,EAAKpE,QAGjC8Y,GAQfqjB,iBAAkB,aAMlBhB,kBAAmB,WACf,UAaJG,WAAY,SAAUt7B,GAElB,GAAIA,MAAAA,EAAuC,CACvC,GAAItP,EAAE6yB,QAAQvjB,GAAQ,CAElB,IAAK,IAAI3H,EAAI,EAAG9B,EAASyJ,EAAMzJ,OAAQ8B,EAAI9B,EAAQ8B,IAC/B,MAAZ2H,EAAM3H,IAAoC,kBAAd2H,EAAM3H,MACS,IAAvCiI,OAAOgB,KAAK4I,aAAalK,EAAM3H,IAC/B2H,EAAM3H,GAAK7D,KAAKgM,YAAY,uBACkB,IAAvCF,OAAOgB,KAAK4I,aAAalK,EAAM3H,MACtC2H,EAAM3H,GAAK7D,KAAKgM,YAAY,uBAIxC,OAAOR,EAAMotB,KAAK,OAElB,OAAOptB,EAGX,MAAO,IAOfwO,YAAa,SAAUF,GACnB,IACInU,EADO3F,KACW2F,WAGlBuP,EAAQvP,EAAWuP,MACnB1J,EALOxL,KAKMyiB,WALNziB,KAOF8iB,0BAGAhX,OAAOgB,KAAKkL,QAAQ9C,IAArB,MAA+B1J,IAER,iBAAZ,QAAsC/L,IAAb+L,EAAM2J,IAAiC,KAAb3J,EAAM2J,GAIhE2E,EAAanU,EAAWuP,YAA+B,IAAd1J,EAAQ,GAAoBA,EAAM2J,GAAK,GAHhF2E,EAAanU,EAAWuP,OAAS,MASjD4N,sBAAuB,WACnB,IACInd,EADO3F,KACW2F,WAClBiiC,EAFO5nC,KAEayiB,WACpBxE,EAAgBtY,EAAWsY,cAC3B4H,EAAelgB,EAAWkgB,aAE1BpgB,GAAS,EAEb,OAAIvJ,EAAE4pB,iBACKrgB,GAGXmiC,EAAeA,QAAwCnoC,IAAxBmoC,EAAa7lC,OAAuB6lC,EAAa,GAAKA,EACrF3pB,EAAgBA,QAA0Cxe,IAAzBwe,EAAclc,OAAuBkc,EAAc,GAAKA,EACzF4H,EAAeA,QAAwCpmB,IAAxBomB,EAAa9jB,OAAuB8jB,EAAa,GAAKA,EAErF+hB,EAAeA,QAAoCnoC,IAApBmoC,EAAazyB,GAAmByyB,EAAazyB,GAAKyyB,EACjF3pB,EAAgBA,QAAsCxe,IAArBwe,EAAc9I,GAAmB8I,EAAc9I,GAAK8I,EAK7ExY,OAFahG,KAFrBomB,EAAeA,QAAoCpmB,IAApBomB,EAAa1Q,GAAmB0Q,EAAa1Q,GAAK0Q,GAGzEA,GAAgB5H,GAAiB4H,GAAgB+hB,EAM5CA,GAAgB3pB,IASjC4pB,sBAAuB,SAAU7mC,GAC7B,IAAIjB,EAAOC,KAEX,OAAO9D,EAAEuS,IAAIzN,EAAM,SAAU4O,GACzB,IAAIpE,EAAQoE,EAAKpE,MAAQzL,EAAK+mC,WAAWl3B,EAAKpE,OAASoE,EACnDk4B,GAAW3yB,GAAIvF,EAAKuF,GAAI3J,MAAOA,GAGnC,OADIoE,EAAKm4B,SAAQD,EAAQC,QAAS,GAC3Bn4B,KAOfq2B,eAAgB,SAAUjlC,GACtB,IAAIjB,EAAOC,KACP2F,EAAa5F,EAAK4F,WAElBqiC,GAAoB,EAgBxB,GAfA9rC,EAAE2E,KAAKG,EAAM,SAAU6C,EAAG+L,QAEHnQ,IAAfmQ,EAAKpE,OAAsC,OAAfoE,EAAKpE,OACjCoE,EAAKpE,MAAQzL,EAAK+mC,WAAWl3B,EAAKpE,OAC9B7F,EAAW6F,OACPoE,EAAKuF,IAAMxP,EAAW6F,MAAM2J,KAC5B6yB,GAAoB,IAI5Bp4B,EAAKpE,MAAQ,KAKjBzL,EAAKgnC,YAAa,CAElB,IADA,IAAIkB,GAAa,EACRpkC,EAAI,EAAG9B,EAASf,EAAKe,OAAQ8B,EAAI9B,EAAQ8B,IAC9C,GAAmB,KAAf7C,EAAK6C,GAAGsR,GAAW,CACnB8yB,GAAa,EACb,MAIR,IAAKA,EAAY,CACb,IAAIC,EAAYp8B,OAAO6H,SAAS+yB,oBAAsB56B,OAAOC,aAAaC,YAAY,4BACtFhL,EAAK2tB,SAASxZ,GAAI,GAAI3J,MAAO08B,KAWrC,OAPIviC,EAAW6F,QACNw8B,GAAqBjoC,EAAKinC,mBAC3BhmC,EAAK2tB,SAASxZ,GAAIxP,EAAW6F,MAAM2J,GAAI3J,MAAO7F,EAAW6F,MAAMA,MAAOu8B,QAAQ,IAK/EhoC,EAAK8nC,sBAAsB7mC,IAMtCmhB,SAAU,WACN,IACIylB,EADO5nC,KACayiB,WAExB,OAAI3W,OAAOgB,KAAKkL,QAAQ4vB,KAC8B,oBAAlDO,OAAOj6B,UAAUzD,SAAS0D,MAAMy5B,KAAwC97B,OAAOgB,KAAKkL,QAAQ4vB,EAAazyB,KAA0B,GAAnByyB,EAAazyB,KASrImS,UAAW,WACP,IACI9b,GAAS2J,GAAI,GAAIyJ,MAAO,IADjB5e,KAGN+hB,gBAAgBvW,GAHVxL,KAIN6jB,SAASrY,GAAO,IAGzBuJ,gBAAiB,WACb/U,KAAKooC,SAAWpoC,KAAKooC,OAAOC,WAAaroC,KAAKg/B,WAGlDsJ,YAAa,WACT,IAEI98B,GAFOxL,KACKwL,WACCA,OAAS,GAE1B,MAAiB,KAAVA,GAAgBA,IAJZxL,KAI2BgM,YAAY,iCAAmCR,IAJ1ExL,KAIyFgM,YAAY,6BAGpHu8B,YAAa,SAAU/8B,GACnB,OAAIM,OAAOgB,KAAKiY,SAASvZ,GACDA,EAAM0T,WAAW,IAAK,QAAQA,WAAW,IAAK,QAG3D1T,GASfg9B,SAAU,SAAUh9B,GAChB,OAAIA,GAASA,EAAMi9B,YAEXtzB,GAAI3J,EAAMA,MACVA,MAAOA,EAAMoT,MACbA,MAAOpT,EAAMoT,OAIdpT,GAGXk9B,cAAe,SAAUl9B,GACrB,GAAiB/L,MAAZ+L,EAAM2J,KAA0C,iBAAb3J,EAAM2J,IAAgC,OAAb3J,EAAM2J,IAAqC,iBAAb3J,EAAM2J,IAAmB3J,EAAM2J,GAAGpT,OAAS,GACtI,GAAoB,OAAhByJ,EAAMA,OAAyC,kBAAhBA,EAAMA,MACrCm9B,YAAa,GACiC,IAA1C78B,OAAOgB,KAAK4I,aAAalK,EAAMA,OAC/BA,EAAMA,MAAQM,OAAOC,aAAaC,YAAY,uBACG,IAA1CF,OAAOgB,KAAK4I,aAAalK,EAAMA,SACtCA,EAAMA,MAAQM,OAAOC,aAAaC,YAAY,2BAE/C,GAAmB,MAAfR,EAAMA,OAAwC,iBAAhBA,EAAMA,MAC3C,IAAK,IAAI3H,EAAI,EAAG9B,EAASyJ,EAAMA,MAAMzJ,OAAQ8B,EAAI9B,EAAQ8B,IAC/B,MAAlB2H,EAAMA,MAAM3H,IAA0C,kBAApB2H,EAAMA,MAAM3H,MACG,IAA7CiI,OAAOgB,KAAK4I,aAAalK,EAAMA,MAAM3H,IACrC2H,EAAMA,MAAM3H,GAAKiI,OAAOC,aAAaC,YAAY,uBACG,IAA7CF,OAAOgB,KAAK4I,aAAalK,EAAMA,MAAM3H,MAC5C2H,EAAMA,MAAM3H,GAAKiI,OAAOC,aAAaC,YAAY,uBAOrE,OAAOR,GAQXo9B,kBAAmB,SAAUzzB,GACzB,OAAQnV,KAAK2F,WAAW3E,UAAYM,KAAK,SAAU1D,GAC/C,OAAOA,EAAEuX,IAAMA,OCtjB3BjZ,EAAEmV,MAAMjS,OAAO,6BAMX0S,eAAgB,SAAU9Q,GAEtBhB,KAAKyM,OAAOzL,GAGZ,IAAI2E,EAAa3F,KAAK2F,WACtBA,EAAW6F,WAAqC,IAArB7F,EAAgB,MAAmBmG,OAAOgB,KAAK4I,aAAa/P,EAAW6F,OAAS,KAE3G7F,EAAWkjC,YAAe/8B,OAAO6H,WAA4C,IAAhC7H,OAAO6H,SAAS0Q,cAA0B1e,EAAW8P,UAMtGkL,cAAe,WACX,IAAIrc,EAAWtE,KAAKyR,cAAcwN,YAAY,SAC1C6pB,EAAWh9B,OAAOgB,KAAK+5B,aAAa,IAAK,KAQ7C,OALW3qC,EAAEqjB,SAASjb,GAClB6Q,GAAI2zB,EACJrzB,SAAUzV,KAAK2F,WAAW8P,YAUlCmL,eAAgB,WACZ,OAAO5gB,KAAK2gB,iBAMhBW,WAAY,WAERthB,KAAKyM,UAMT8X,gBAAiB,WACb,IAAI/Y,EAAQxL,KAAKyiB,WAEjB,OAAwC,IAApC3W,OAAOgB,KAAK4I,aAAalK,GAClBxL,KAAKgM,YAAY,uBACmB,IAApCF,OAAOgB,KAAK4I,aAAalK,GACzBxL,KAAKgM,YAAY,qBAEjB,IAOfmW,SAAU,WACN,IAAI3W,EAAQxL,KAAKyiB,WAEjB,OAAI3W,OAAOgB,KAAKkL,QAAQxM,OAIE,IAFPM,OAAOgB,KAAK4I,aAAalK,IAETxL,KAAK2F,WAAW+M,aC1E3DxW,EAAEmV,MAAMjS,OAAO,8BAMX0S,eAAgB,SAAU9Q,GACXhB,KAGNyM,OAAOzL,GAGZ,IAAI2E,EAAa3F,KAAK2F,WAClBod,EAAS/iB,KAAKgM,YAAY,iBAE9BrG,EAAWg/B,mBAAuD,IAA9Bh/B,EAAwB,cAAqBmG,OAAOgB,KAAK4I,aAAa/P,EAAWg/B,eAAiB3kC,KAAK4kC,wBAAwBj/B,EAAWq7B,UAC9Kr7B,EAAWk/B,YAAcl/B,EAAWg/B,cAAiBh/B,EAAWk/B,YAAcl/B,EAAWk/B,YAAyD,oBAAnC,6BAAiDC,6BAA6BC,cAAgB,EAAM,EACnNp/B,EAAWq/B,OAAS,GACpBr/B,EAAWs/B,eAAiBliB,EAAOkiB,eACnCt/B,EAAWu/B,eAAiBniB,EAAOmiB,eACnCv/B,EAAWw/B,cAA0D,oBAAnC,6BAAiDL,6BAA6BM,iBAAmBriB,EAAOoiB,cAC1Ix/B,EAAW0/B,iBAA6D,oBAAnC,6BAAiDP,6BAA6BQ,eAAiBviB,EAAOsiB,iBAC3I1/B,EAAW4/B,YAAcvlC,KAAK+oC,iBAC9BpjC,EAAW8/B,SAAW9/B,EAAW+/B,qBAAsB,EACvD//B,EAAWqjC,iBAAmBhpC,KAAKipC,kBAAkBtjC,EAAWq7B,UAChEr7B,EAAWujC,iBAAmBlpC,KAAKmpC,kBAAkBxjC,EAAWq7B,WAOpErgB,cAAe,WACX,IACIrc,EADOtE,KACSyR,cAAcwN,YAAY,UAU9C,OAPW/iB,EAAEqjB,SAASjb,GAClBmR,SALOzV,KAKQ2F,WAAW8P,SAC1BjK,MAAOM,OAAOs9B,WANPppC,KAMyBukB,kBAAoB,GACpDhmB,KAAMuN,OAAOgB,KAAKu8B,kBAAoB,MAAQ,OAC9ClkC,SAA6B,cARtBnF,KAQQmT,aASvBmO,WAAY,WACR,IAAIvhB,EAAOC,KAEXD,EAAK0M,SAEL,IAAIoS,EAAU9e,EAAKmhB,aACfvb,EAAa5F,EAAK4F,WAEtB5F,EAAKupC,aAAezqB,EAAQvd,KAAK,SAGjCvB,EAAKupC,aAAaC,QAAQxpC,EAAK4F,WAAWw/B,eAGhB,WAAtBx/B,EAAW4Q,QACXxW,EAAKypC,sBAOb1wB,kBAAmB,WAEf9Y,KAAKypC,wBAMTC,kBAAmB,YACJ1pC,KAAKoS,mBAAmB5J,QAAUxI,KAAKoS,oBAE7CiC,2BAOTm1B,mBAAoB,aAOpBC,qBAAsB,WAClB,IAAI1pC,KAAOC,KACP2F,WAAa5F,KAAK4F,WAClBoO,QAAUjI,OAAOC,aAAaC,YAAY,6BAC9CjM,KAAK4pC,cAAgB5pC,KAAK4pC,gBAAiB,EAGM,MAA7CztC,EAAEypC,eAAeiE,QAAQ99B,OAAO+9B,YAChC3tC,EAAEypC,eAAeiE,QAAQ99B,OAAO+9B,UAAY7pC,KAAKgM,YAAY,kBAGjEjM,KAAKupC,aAAarlC,KAAK,gBAC0C,IAAjDlE,KAAKqS,mBAAuC,uBAAkBrS,KAAKqS,mBAAmBgC,qBAAuB,IAAItI,OAAOsd,QAAQ4G,YAAYC,WAAWlwB,KAAKqS,mBAAoBrS,KAAKmtB,cACjM,IAAI9Y,EAAuBrU,KAAKqS,mBAAmBgC,sBAAwBrU,KAAKqS,mBAAmB5J,OAAO4L,qBACtGgxB,EAAmB,IACnB0E,EAAsB,IACmB,oBAAlC,8BACP1E,EAAmBrlC,KAAKiM,YAAY,iBAAiBm5B,eAAiB,IACtE2E,EAAsB/pC,KAAKiM,YAAY,iBAAiBq5B,kBAAoB,MAG5ED,EAAmBN,6BAA6BM,iBAChD0E,EAAsBhF,6BAA6BQ,gBAGvD,IAAIyE,EAAWhqC,KAAKiqC,cAChBC,EAAWlqC,KAAKmqC,cAEjBvkC,WAAWwkC,YAAWpqC,KAAKupC,aAAa5mB,IAAI3iB,KAAKupC,aAAa5mB,MAAM7c,QAAQ,IAAK,KACpF,IAAIukC,EAAarqC,KAAKupC,aAAa5mB,MAEnC0nB,GADAA,EAAkC,KAApBhF,EAA2BgF,EAAWvkC,QAAQ,QAAS,IAAMukC,EAAWvkC,QAAQ,QAAS,KAC/EA,QAAQF,WAAWq/B,OAAQ,KAGK,IADxDoF,EAAat+B,OAAOgB,KAAKoS,WAAWkrB,EAAYN,EAAqB,KACtDr/B,WAAW/H,QAAQ0iC,KACN,KAApBA,IAAyBgF,EAAaA,EAAWvkC,QAAQ,mCAAoC,OACzE,KAApBu/B,IAAyBgF,EAAaA,EAAWvkC,QAAQ,mCAAoC,QAGnFpG,MAAd2qC,GAA2BA,EAAWroC,OAAS,GAAGhC,KAAKupC,aAAa5mB,IAAI0nB,GAExE,SAAS/sB,KAAK+sB,KACdA,EAAaA,EAAWvkC,QAAQ,SAAU,OAC1C9F,KAAKupC,aAAa5mB,IAAI0nB,IAG1B,IAAIC,EAAcD,EAAWvkC,QAAQ,WAAY,IAAI9D,OACjDuoC,EAAQvqC,KAAK4F,WAAWuP,MACxBq1B,EAASxqC,KAAKupC,aAAa5mB,MAG/B,GAA6B,MAAxB3iB,KAAKyqC,iBAAmD,GAAxBzqC,KAAKyqC,iBACpB,IAAdJ,IAAoF,IAA/D,IAAK,IAAK,IAAK,IAAKzkC,WAAWq/B,QAAQtiC,QAAQ0nC,GAIxE,OAHArqC,KAAK8jB,SAAS,IACd9jB,KAAKmhB,aAAa5f,KAAK,SAASohB,IAAI,SACpC3iB,KAAKupC,aAAa5mB,IAAI,IAI1B,GAAoC,IAAhC5W,OAAOgB,KAAK2Q,KAAK2sB,GAArB,CAMA,IAAIK,EAAYnrB,WAAW8qB,EAAWvkC,QAAQ,IAAK,MAmBnD,GAlBI0+B,MAAMkG,KACNA,EAAY1qC,KAAKupC,aAAaoB,YAI9B32B,aADatU,IAAbsqC,GAAsC,MAAZA,GAAoBU,EAAYV,EAChDj+B,OAAOC,aAAaC,YAAY,qCACrCkT,WAAW,UAAWvZ,WAAWuR,YAAc,KAAOqzB,EAAS,KAC/DrrB,WAAW,aAAc6qB,EAASt/B,YAElCw/B,MAAAA,GAA+CQ,EAAYR,EACtDn+B,OAAOC,aAAaC,YAAY,qCACrCkT,WAAW,UAAWvZ,WAAWuR,YAAc,KAAOqzB,EAAS,KAC/DrrB,WAAW,aAAc+qB,EAASx/B,YAE7BsJ,QAAU,IAAMw2B,EAKzBR,MAAAA,GAA+CU,EAAYV,GACxDE,MAAAA,GAA+CQ,EAAYR,GAC/B,IAA5BlqC,KAAK4F,WAAWq7B,UAAkBqJ,EAAc,IACpB,GAA5BtqC,KAAK4F,WAAWq7B,UAAiBqJ,EAAc,IACnB,IAA5BtqC,KAAK4F,WAAWq7B,UAAkBqJ,EAAc,GACpB,IAA5BtqC,KAAK4F,WAAWq7B,UAAkBqJ,EAAc,GAChDE,EAAO5/B,MAAM,kBAPrB,CASI,QAAmC,IAAxByJ,GAA+D,MAAxBA,EAA8B,CAC5ErU,KAAK2pC,oBAEL,IAAIiB,EAAgB52B,SACkB,IAAnC42B,EAAcjoC,QAAQ6nC,KACrBI,EAAgB52B,QAAU,IAAMw2B,GAGpCn2B,EAAqB4iB,sBAAsB2T,EAAeL,GAC1DvqC,KAAK4pC,eAAgB,EACrB5pC,KAAK6qC,qBAAuBD,EAEhC52B,QAAUA,QAAQlO,QAAQ0kC,EAAQ,SAIlCxqC,KAAK4pC,eAAgB,EACrB5pC,KAAK6qC,qBAAuB,GAI5B5qC,KAAKwL,MAAMf,WAAW1I,OAAS,IAAM4D,WAAWg/B,gBAAkBh/B,WAAW4/B,aAC7EvlC,KAAKwL,MAAQxL,KAAKwL,MAAMf,WAAW5E,QAAQ,MAAO,IAC9CF,WAAWq/B,OAAOjjC,OAAS,IAAG/B,KAAKwL,MAAQxL,KAAKwL,MAAMf,WAAW5E,QAAQF,WAAWq/B,OAAS,IAAKr/B,WAAWq/B,SACjHhlC,KAAKwL,MAAQxL,KAAKwL,MAAMf,WAAW5E,QAAQ,MAAO,IACL,GAAzC7F,KAAKwL,MAAM0T,WAAW,IAAK,IAAInd,OAC/B/B,KAAKwL,MAAQ7F,WAAWq/B,OAAS,IAC5BhlC,KAAKwL,MAAMf,YAAcR,SAASjK,KAAKwL,SAAQxL,KAAKwL,MAAQ7F,WAAWq/B,OAAShlC,KAAKwL,QAGlE,UAAzBzL,KAAK4F,WAAWpH,MAA6C,WAAzBwB,KAAK4F,WAAWpH,MAA8C,gBAAzBwB,KAAK4F,WAAWpH,MAAmD,iBAAzBwB,KAAK4F,WAAWpH,OAClIyB,KAAKwL,MAAQxL,KAAKwL,MAAMf,WAAW5E,QAAQ,MAAO,IAChC,KAAf7F,KAAKwL,QACJxL,KAAKwL,MAAQ,IAIzBzL,KAAK8qC,8BAGL9qC,KAAK8jB,SAAS9jB,KAAKupC,aAAaoB,UAC5B1F,OAAQr/B,WAAWq/B,OACnBC,eAAgBt/B,WAAWs/B,eAC3BC,eAAgBv/B,WAAWu/B,eAC3BC,cAAex/B,WAAWw/B,cAC1BE,iBAAkB1/B,WAAW0/B,iBAC7BE,YAAa5/B,WAAW4/B,eAGxB5/B,WAAWwkC,YACPpqC,KAAKupC,eAAyD,GAAzCvpC,KAAKupC,aAAa5mB,MAAMhgB,QAAQ,MACrD3C,KAAKupC,aAAa5mB,IAAI3iB,KAAKupC,aAAa5mB,MAAQ,KAExD3O,QAAUA,QAAQlO,QAAQ0kC,EAAQ,SAtF9BxqC,KAAK8jB,SAAS,MA0FjB9e,KAAK,QAAS,SAAUnH,GACrB,IACI,IAAIktC,QAAWh/B,OAAOgB,KAAK0b,QAAU1c,OAAOgB,KAAKi+B,SAAYttC,OAAOutC,cAAchM,QAAQ,QAAUphC,EAAE8L,cAAcshC,cAAchM,QAAQ,QAKtIiM,SAAW,SACXtlC,WAAWw/B,cAAcpjC,OAAS,IAClCkpC,UAAYtlC,WAAWw/B,eAGA,GAAvBx/B,WAAWq7B,WACPr7B,WAAWq/B,OAAOjjC,OAAS,IAC3BkpC,UAAYtlC,WAAWq/B,QAEvBr/B,WAAW0/B,iBAAiBtjC,OAAS,IACrCkpC,UAAYtlC,WAAW0/B,mBAG/B4F,UAAY,aACZ,IACQH,QAAQjlC,QAAQqlC,KAAKD,UAAW,IAAIlpC,QAAU+oC,QAAQ/oC,QACtDnE,EAAE8D,iBAEV,MAAO9D,KAGX,MAAOA,GACHkO,OAAO+V,IAAI,4BACX9hB,KAAKyqC,iBAAkB,KAI9BW,QAAQ,SAAUvtC,GACfmC,KAAKme,cAAgBle,KAAKwL,MAE1B,IAAI4/B,GADJxtC,EAAKH,OAAOqT,OAASrT,OAAOqT,MAAMpP,eAAkBjE,OAAOqT,MAAQlT,GAChDytC,UAAYztC,EAAE0tC,QAOjC,GAL6C,oBAAlC,8BAC2C,GAA9CxG,6BAA6BC,gBAAoBp/B,WAAWg/B,eAAgB,IAChFh/B,WAAWq7B,SAAW,GAA6B,GAAvBr7B,WAAWq7B,UAA6C,GAA5Br7B,WAAWg/B,iBACjD,KAAdyG,GAAmC,KAAdA,GAAmC,KAAdA,GAC1CxtC,EAAE8D,kBACN1B,KAAKwL,YACK/L,IAAN7B,GAAmBoC,KAAKwL,MAAMzJ,OAAS,IAA6B,GAAvB4D,WAAWq7B,UAAwC,IAAvBr7B,WAAWq7B,UAEpF,GAAIoK,EAAa,IAAMA,EAAa,GAAI,CAChCrrC,KAAKwrC,eACLC,aAAazrC,KAAKwrC,eAGtB,IAAIE,EAAYzrC,KAAKwL,MAAQ,GAEzB7F,WAAW0/B,kBAAoB1/B,WAAW0/B,iBAAiBtjC,OAAS,IACpE0pC,EAAYA,EAAUvsB,WAAWvZ,WAAW0/B,iBAAkB,KAE9D1/B,WAAWq/B,OAAOjjC,OAAS,IAC3B0pC,EAAYA,EAAUvsB,WAAWvZ,WAAWq/B,OAAQ,KAGxDyG,EAAYvvC,EAAEuhB,KAAKguB,GACf9lC,WAAWw/B,eAAiBx/B,WAAWw/B,cAAcpjC,OAAS,IAC9D0pC,EAAYA,EAAUvsB,WAAWvZ,WAAWw/B,cAAe,MAG/C,GAAZsG,EAAiB9lC,WAAWujC,kBAC5BtrC,EAAE8D,sBAGL,GAAkB,KAAd0pC,GAAmC,KAAdA,EAC1B,GAA2B,GAAvBprC,KAAK0rC,gBAAuB1rC,KAAK2rC,cAAgB3rC,KAAKwL,MAAMzJ,OAAQ,CACpE,IAAI6pC,EAAkB5rC,KAAK2rC,aAC3B3rC,KAAKwL,MAAQ7F,WAAWq/B,OAAS,IAAMhlC,KAAKwL,MAAM3F,QAAQF,WAAWq/B,OAAQ,IAC7EhlC,KAAK0rC,eAAiB1rC,KAAK2rC,aAAeC,EAAkB,OAC9B,GAAvB5rC,KAAK0rC,gBAAuB1rC,KAAK2rC,cAAgB3rC,KAAKwL,MAAMzJ,SACnE/B,KAAKwL,MAAQ,IACbxL,KAAK0rC,eAAiB1rC,KAAK2rC,aAAe3rC,KAAKwL,MAAMzJ,UAMxE8pC,MAAM,SAAUjuC,GAEb,IAAIwtC,GADJxtC,EAAIH,OAAOqT,OAASlT,GACDytC,UAAYztC,EAAE0tC,QACjC,QAAU7rC,IAAN7B,EACA,OAAQwtC,GACJ,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GACD,MACJ,KAAK,GACDprC,KAAKwL,MAAQ,MA4B1BsgC,SAAS,SAAUluC,GAEtB,IAAIwtC,GADJxtC,EAAKH,OAAOqT,OAASrT,OAAOqT,MAAMpP,eAAkBjE,OAAOqT,MAAQlT,GAChDytC,UAAYztC,EAAE0tC,QACjC,QAAmB,IAAR,EAAqB,CACV,IAAdF,GAAkC,IAAdA,GAAkC,IAAdA,EACxCxtC,EAAE8D,iBAC4B,GAAvBiE,WAAWq7B,UAA+B,IAAdoK,GACnCxtC,EAAE8D,iBAIN,IAAIqqC,EAAY5hC,OAAO6hC,aAAaZ,IACH,IAA7BzlC,WAAWg/B,eAAsD,IAA3Bh/B,WAAWk/B,aAAqBkH,IAAcpmC,WAAWw/B,eAC/FvnC,EAAE8D,qBAMlBmpC,4BAA6B,WACzB,IAAI9qC,EAAOC,KACP2F,EAAa5F,EAAK4F,WAetB,GAbI5F,EAAKupC,cACLvpC,EAAKupC,aAAa3D,gBACdX,OAAQr/B,EAAWq/B,OACnBC,eAAgBt/B,EAAWs/B,eAC3BC,eAAgBv/B,EAAWu/B,eAC3BC,cAAex/B,EAAWw/B,cAC1BE,iBAAkB1/B,EAAW0/B,iBAC7BE,YAAa5/B,EAAW4/B,YACxBK,oBAAqBjgC,EAAWk/B,YAChCY,SAAU9/B,EAAW8/B,WAID,IAAxB9/B,EAAWq7B,WAA0D,IAAxCl1B,OAAO6H,SAASs4B,oBAA8B,CAC3E,IAAIzgC,EAAQzL,EAAKupC,aAAa5mB,MAC1BwpB,GAAW,GAEa,IAAxB1gC,EAAM9I,QAAQ,OACdwpC,GAAW,EACX1gC,EAAQA,EAAM3F,QAAQ,IAAK,IAAIA,QAAQ,IAAK,KAGhD,IAAIsmC,EAAS,IAAIr9B,OAAO,IAAMnJ,EAAWw/B,cAAgB,iBAAkB,KAC3E35B,EAAQA,EAAM3F,QAAQsmC,EAAQ,MAE9BA,EAAS,IAAIr9B,OAAO,KAAOnJ,EAAWw/B,cAAgB,MAAO,KAC7D35B,EAAQA,EAAM3F,QAAQsmC,EAAQ,IAC9BpsC,EAAKupC,aAAa5mB,IAAIlX,GAEjB0gC,GAAUnsC,EAAKupC,aAAa5mB,IAAI,IAAMlX,EAAQ,KAGnD7F,EAAWwkC,YACXpqC,EAAKupC,aAAa5mB,IAAI3iB,EAAKupC,aAAa5mB,MAAQ,MAOxD6B,gBAAiB,WACb,IACI5e,EADO3F,KACW2F,WAClBkZ,EAFO7e,KAEQkhB,aACf1V,OAA4B/L,IAHrBO,KAGMyiB,WAHNziB,KAGsCyiB,WAAavmB,EAAE,QAAS2iB,GAAS6D,OAAS,GAGvF9D,EAAQ1iB,EAAE,YAAYkI,KAAKoH,GAiB/B,GAfAoT,EAAM+mB,gBACFX,OAAQr/B,EAAWq/B,OACnBC,eAAgBt/B,EAAWs/B,eAC3BC,eAAgBv/B,EAAWu/B,eAC3BC,cAAex/B,EAAWw/B,cAC1BE,iBAAkB1/B,EAAW0/B,iBAC7BE,YAAa5/B,EAAW4/B,YACxBK,oBAAqBjgC,EAAWk/B,YAChCY,SAAU9/B,EAAW8/B,WAGrB9/B,EAAWwkC,aACXvrB,EAAQ1iB,EAAE,YAAYkI,KAAKwa,EAAMgW,OAAS,OAGzCjvB,EAAW8P,UAAoC,IAAxB9P,EAAWq7B,WAA0D,IAAxCl1B,OAAO6H,SAASs4B,oBAA8B,CAEnG,IAAIC,GAAW,GAEwB,KAHvC1gC,EAAQoT,EAAMgW,QAGJnqB,WAAW/H,QAAQ,OACzBwpC,GAAW,EACX1gC,EAAQA,EAAM3F,QAAQ,IAAK,IAAIA,QAAQ,IAAK,KAGhD,IAAIumC,EAAK,IAAIt9B,OAAO,IAAMnJ,EAAWw/B,cAAgB,iBAAkB,KAOvE,OANA35B,EAAQA,EAAM3F,QAAQumC,EAAI,MAE1BA,EAAK,IAAIt9B,OAAO,KAAOnJ,EAAWw/B,cAAgB,MAAO,KACzD35B,EAAQA,EAAM3F,QAAQumC,EAAI,IAErBF,IAAU1gC,EAAQ,IAAMA,EAAQ,KAC9BA,EAGX,OAAOoT,EAAMgW,QAQjBvpB,QAAS,SAAUqP,GACf,IAMI3G,EANAhU,EAAOC,KACP2F,EAAa5F,EAAK4F,WAGlB0mC,EAASrsC,KAAKyM,OAAOiO,GACrBlP,EAAQzL,EAAK0iB,WAEbsnB,EAAWhqC,EAAKiqC,cAChBC,EAAWlqC,EAAKmqC,cA0BpB,GAxBsB,iBAAX,GAAgC,IAAT1+B,IAC9BA,EAAQ9M,OAAO8M,IAIfzL,EAAKoiB,aACArW,OAAOgB,KAAKkL,QAAQ+xB,IACjBv+B,EAAQu+B,IACRh2B,EAAU/T,KAAKgM,YAAY,qCAAqCkT,WAAW,UAAWvZ,EAAWuR,YAAYzM,WAAa,KAAOe,EAAQ,KAAK0T,WAAW,aAAc6qB,EAASt/B,YAChLiQ,EAAgBxZ,MAAMgU,MAAOvP,EAAWuP,MAAOnB,QAASA,IACxDs4B,GAAS,GAIZvgC,OAAOgB,KAAKkL,QAAQiyB,IACjBz+B,EAAQy+B,IACRl2B,EAAU/T,KAAKgM,YAAY,qCAAqCkT,WAAW,UAAWvZ,EAAWuR,YAAYzM,WAAa,KAAOe,EAAQ,KAAK0T,WAAW,aAAc+qB,EAASx/B,YAChLiQ,EAAgBxZ,MAAMgU,MAAOvP,EAAWuP,MAAOnB,QAASA,IACxDs4B,GAAS,OAMM,IAAvBtsC,EAAK4pC,eAA6B0C,GAAUvgC,OAAOgB,KAAK8gB,kBAAmB,CAC3Eye,GAAS,EACT,IAAIC,EAAevsC,EAAK6qC,qBAAuB7qC,EAAK6qC,qBAAuB,QAC3ElwB,EAAgBxZ,MAAMgU,MAAOvP,EAAWuP,MAAOnB,QAASu4B,IAG5D,OAAOD,GAOXrC,YAAa,WACT,IAAID,EAAW/pC,KAAK2F,WAAWokC,SAE/B,OAAIA,MAAAA,EACOA,EAEJ/pC,KAAK2F,WAAWqjC,kBAO3BkB,YAAa,WACT,IAAID,EAAWjqC,KAAK2F,WAAWskC,SAE/B,OAAIA,MAAAA,EACOA,EAEJjqC,KAAK2F,WAAWujC,kBAQ3BtE,wBAAyB,SAAU5D,GAC/B,GAAIA,EAAU,CAEV,GAAiB,IAAbA,GAA+B,IAAbA,GAA+B,IAAbA,GAA+B,IAAbA,GAA+B,IAAbA,EACxE,OAAO,EAGX,GAAiB,IAAbA,GAA+B,IAAbA,GAA+B,KAAbA,GAAgC,KAAbA,EACvD,OAAO,EAGf,OAAO,GAOXwE,sBAAuB,SAAUxE,GAC7B,GAAIA,EAAU,CAEV,GAAiB,IAAbA,GAA+B,IAAbA,GAA+B,IAAbA,GAA+B,IAAbA,GAA+B,IAAbA,EACxE,OAAO,EAIX,GAAiB,IAAbA,GAA+B,IAAbA,GAA+B,KAAbA,GAAgC,KAAbA,EACvD,OAAO,EAGf,OAAO,GAOX+H,eAAgB,WACZ,IAAIhpC,EAAOC,KACX,YAA2C,IAA/BD,EAAK4F,WAAoB,YAC7B5F,EAAK4F,WAAW0/B,kBACTv5B,OAAOgB,KAAK4I,aAAa3V,EAAK4F,WAAW4mC,aAI7CxsC,EAAK4F,WAAW0/B,kBAChBrlC,KAAKwlC,sBAAsBzlC,EAAK4F,WAAWq7B,WAW1DiI,kBAAmB,SAAUjI,GACzB,OAAiB,IAAbA,GAA+B,KAAbA,GACV,gBAEK,IAAbA,EACO,EAEM,IAAbA,GACQ,MAEK,IAAbA,GACQ,WAEK,IAAbA,GACQ,gBAEL,MAQXmI,kBAAmB,SAAUnI,GACzB,OAAiB,IAAbA,GAA+B,KAAbA,EACX,gBAEM,IAAbA,EACO,IAEM,IAAbA,EACO,MAEM,IAAbA,EACO,WAEM,IAAbA,EACO,gBAEJ,MAGXwL,eAAgB,SAAUhhC,GACtB,IACIihC,EAAW/tC,OAAO8M,GADXxL,KAGN2F,WAAWokC,SAHL/pC,KAGqB2F,WAAWqjC,iBAAmBtqC,OAAO6lC,MAAMkI,GAHhEzsC,KAGiFipC,kBAHjFjpC,KAGwG2F,WAAWq7B,UAAYyL,GAG9IC,eAAgB,SAAUlhC,GACtB,IAAIihC,EAAW/tC,OAAO8M,GAEtBxL,KAAK2F,WAAWskC,SAAWjqC,KAAK2F,WAAWujC,iBAAmBxqC,OAAO6lC,MAAMkI,GAAYzsC,KAAKmpC,kBAAkBnpC,KAAK2F,WAAWq7B,UAAYyL,GAG9IE,cAAe,SAAU9tB,EAAS+oB,EAAcgF,GAC5C/tB,EAAQ7d,KAAK,WAAY4mC,GACzB/oB,EAAQ6D,IAAI,IAEZ,IAEI7D,EAAQuiB,QAAQ,WAClB,MAAOxjC,IAGTihB,EAAQzT,KAAK,QAASwhC,GACtB/tB,EAAQuiB,UAER,IAAIyL,EAAgB3wC,EAAE4wC,eACtBjuB,EAAQuiB,UAAUjgC,GAAG,cAAe,SAAU2P,EAAOhG,GACjDA,EAAGs2B,QAAQ2L,OAAOF,KAItBhuB,EAAQuiB,QAAQ,QAEhBv3B,WAAW,WACPgV,EAAQpM,SACT,QCzrBXvW,EAAEmV,MAAMjS,OAAO,6CAIX0S,eAAgB,SAAS9Q,GAIrBhB,KAAKyM,OAAOzL,GAHDhB,KAMW2F,WAEXw/B,cAA0D,oBAAnC,6BAC5BL,6BAA6BM,iBAAmBriB,OAAOoiB,eAGjExkB,cAAe,WACX,IACIrc,EADOtE,KACSyR,cAAcwN,YAAY,4BAI9C,OADW/iB,EAAEqjB,SAASjb,OAO1Bgd,WAAY,WACR,IACIzC,EADO7e,KACQkhB,aADRlhB,KAENspC,aAAezqB,EAAQvd,KAAK,SAFtBtB,KAINspC,aAAa0D,UAJPhtC,KAIsB2F,WAAWw/B,gBAIhD5gB,gBAAiB,WAEb,OADWvkB,KACCyiB,WAAW5c,QAAQ,IADpB7F,KAC8B2F,WAAWw/B,gBAGxDthB,SAAU,SAASrY,GAEfA,GAASA,GAAS,IAAIf,WAAW5E,QADtB7F,KACmC2F,WAAWw/B,cAAe,KAD7DnlC,KAENyM,OAAOjB,IAEhBsX,sBAAuB,WACnB,IACInd,EADO3F,KACW2F,WAClB6F,EAFOxL,KAEMyiB,YAAc,GAC3BkD,EAAehgB,EAAWsY,eAAiB,GAI/C,QAAI/hB,EAAE4pB,kBAGIH,EAAa+U,eAAiBlvB,EAAMkvB,iBC5DtDx+B,EAAEmV,MAAMjS,OAAO,4BAKX0S,eAAgB,SAAU9Q,GAGtBhB,KAAKyM,OAAOzL,GAGZ,IAAI2E,EAAa3F,KAAK2F,WAClB49B,EAAavjC,KAAKgM,YAAY,cAC9Bw3B,EAAaxjC,KAAKgM,YAAY,cAiBlC,GAdArG,EAAW2e,aAAe,GAC1B3e,EAAW89B,cAAmChkC,IAAxBkG,EAAW89B,UAAyB33B,OAAOgB,KAAK4I,aAAa/P,EAAW89B,UAC9F99B,EAAW49B,WAAa59B,EAAW49B,YAAcA,EACjD59B,EAAW69B,WAAa79B,EAAW69B,YAAcA,EACjD79B,EAAW+9B,WAAa/9B,EAAW49B,WAG/B59B,EAAW89B,WACuC,IAA9C99B,EAAW+9B,WAAWC,OAAO,cAC7Bh+B,EAAW+9B,WAAa/9B,EAAW+9B,WAAa,IAAM/9B,EAAW69B,YAKrE79B,EAAW6F,MAAO,CAElB,IAAIq4B,EAAO/3B,OAAOgB,KAAKg3B,cAAcC,qBAAqBp+B,EAAW6F,MAAO7F,EAAW89B,UAEvF,GAAY,GAARI,EAAW,CA5BR7jC,KA8BEwL,MAAQ7F,EAAW6F,MACxB,IAAIw4B,EAAqBl4B,OAAOC,aAAaC,YAAY,sBACzDrG,EAAW2e,aAAexY,OAAOgB,KAAKg3B,cAAcG,WAAWJ,EAAMl+B,EAAW+9B,WAAYM,QAhCzFhkC,KAkCEwL,MAAQ,OAQzBmV,cAAe,WACX,IACIhb,EADO3F,KACW2F,WAClBrB,EAFOtE,KAESyR,cAAcwN,YAAY,QAC1CguB,EAA0BtnC,EAAW49B,WAAWx5B,UAAU,EAAGpE,EAAW49B,WAAW7gC,QAAQ,MAAMwqC,YAAY,KAC7G3J,EAAc0J,EAA0B,EAAKtnC,EAAW49B,WAAWx5B,UAAU,EAAGkjC,GAA2BtnC,EAAW49B,WAY1H,OATWrnC,EAAEqjB,SAASjb,GAClBm/B,SAAU99B,EAAW89B,SACrBj4B,MAAO7F,EAAW6F,MAClBiK,SAAU9P,EAAW8P,SACrB8tB,WAAYz3B,OAAO6H,WAAyD,IAA7C7H,OAAO6H,SAASw5B,yBAAoC5J,EAAWxb,cAAgBwb,EAC9GC,WAAa79B,EAAW89B,UAAYwJ,EAA0B,EAAKtnC,EAAW49B,WAAWx5B,UAAUkjC,GAA2B,GAC9HG,IAAgC,OAA1BznC,EAAWiQ,eASzBkD,kBAAmB,SAAUu0B,EAAYC,GACrC,IAAIvtC,EAAOC,KACP2F,EAAa5F,EAAK4F,WAGlBw+B,EAAcpkC,EAAKqkC,iBACnBmJ,EAAcxtC,EAAKytC,iBAGnB7nC,EAAW8nC,MACXtJ,EAAYsJ,MACRA,KAAM9nC,EAAW8nC,OAKzBtJ,EAAYp/B,KAAK,SAAU,WACvBhF,EAAK2tC,oBAEL/nC,EAAW89B,UACX8J,EAAYxoC,KAAK,SAAU,SAAUnH,EAAG0vC,GAChCvtC,EAAK4tC,oBACE5tC,EAAK4tC,aAGhB5tC,EAAK2tC,gBAAgBJ,MAQjCI,gBAAiB,aAGjBnpB,gBAAiB,SAAU/Y,GACvB,IAEI8Y,EADA3e,EADO3F,KACW2F,WAGtB,IAAKA,EAAW2e,cAAgB9Y,EAAO,CACnC,IAAIq4B,EAAO/3B,OAAOgB,KAAKg3B,cAAcC,qBAAqBv4B,EAAO7F,EAAW89B,UACxEO,EAAqBl4B,OAAOC,aAAaC,YAAY,sBACzDsY,EAAexY,OAAOgB,KAAKg3B,cAAcG,WAAWJ,EAAMl+B,EAAW+9B,WAAYM,QAEjF1f,EAAe,GAInB,OAAO3e,EAAW2e,cAAgBA,GAAgB,IAMtDtK,YAAa,SAAUF,GACnB,IACInU,EADO3F,KACW2F,WAGlBuP,EAAQvP,EAAWuP,MACnB1J,EALOxL,KAKMyiB,WAEjB,GAPWziB,KAOF8iB,0BAEAhX,OAAOgB,KAAKkL,QAAQ9C,GACrB,GAAKpJ,OAAOgB,KAAKkL,QAAQxM,GAUJ,KAAVA,IACPsO,EAAanU,EAAWuP,OAAS,QAXJ,CAE7B,IAAI2uB,EAAO/3B,OAAOgB,KAAKg3B,cAAcC,qBAAqBv4B,EAAO7F,EAAW89B,eACvD,IAAV,GACM,IAATI,IACKl+B,EAAW89B,UACZI,EAAKY,SAAS,EAAG,EAAG,EAAG,GAE3B3qB,EAAanU,EAAWuP,OAASpJ,OAAOgB,KAAKg3B,cAAc8J,gBAAgB/J,GAAM,MAazGO,eAAgB,aAKhBoJ,eAAgB,aAKhBniC,QAAS,SAAUqP,GACf,IASY3G,EATRhU,EAAOC,KACX2F,EAAa5F,EAAK4F,WAGd0mC,EAASrsC,KAAKyM,OAAOiO,GACrBlP,EAAQzL,EAAK0iB,WACjB,GAAIjX,KACsD,IAAlDM,OAAOgB,KAAK4I,aAAa/P,EAAW8P,WAKvB,IAJbjK,EAAQM,OAAOgB,KAAKg3B,cAAcC,qBAAqBv4B,EAAO7F,EAAW89B,YAIzD,CAMZ,GAJAj4B,EAAMqiC,WAAW,GACjBriC,EAAMsiC,gBAAgB,GAGlBnoC,EAAWokC,WAA4C,iBAAxBpkC,EAAWokC,UAAuD,iBAAvBpkC,EAAWokC,UAAuB,CAC5G,IAAIA,EAAyC,iBAAvBpkC,EAAWokC,SAAuBj+B,OAAOgB,KAAKg3B,cAAcC,qBAAqBp+B,EAAWokC,SAAUpkC,EAAW89B,UAAY,IAAIe,KAAK7+B,EAAWokC,UACvKA,EAAS8D,WAAW,GACpB9D,EAAS+D,gBAAgB,GAErBtiC,EAAQu+B,IACRh2B,EAAU/T,KAAKgM,YAAY,kCAAkCkT,WAAW,UAAWvZ,EAAWuR,aAAagI,WAAW,aAAcpT,OAAOgB,KAAKg3B,cAAcG,WAAW8F,EAAUpkC,EAAW+9B,aAC9LhpB,EAAgBxZ,MACZgU,MAAOvP,EAAWuP,MAClBnB,QAASA,IAEbs4B,GAAS,GAKjB,GAAI1mC,EAAWskC,WAA2C,iBAAvBtkC,EAAWskC,UAAsD,iBAAvBtkC,EAAWskC,UAAuB,CAC3G,IAAIA,EAAyC,iBAAvBtkC,EAAWskC,SAAuBn+B,OAAOgB,KAAKg3B,cAAcC,qBAAqBp+B,EAAWskC,SAAUtkC,EAAW89B,UAAY,IAAIe,KAAK7+B,EAAWskC,UACvKA,EAAS4D,WAAW,GACpB5D,EAAS6D,gBAAgB,GAErBtiC,EAAQy+B,IACRl2B,EAAU/T,KAAKgM,YAAY,kCAAkCkT,WAAW,UAAWvZ,EAAWuR,aAAagI,WAAW,aAAcpT,OAAOgB,KAAKg3B,cAAcG,WAAWgG,EAAUtkC,EAAW+9B,aAC9LhpB,EAAgBxZ,MACZgU,MAAOvP,EAAWuP,MAClBnB,QAASA,IAEbs4B,GAAS,IAQ7B,GAAI1mC,EAAW89B,WAC2C,IAAlD33B,OAAOgB,KAAK4I,aAAa/P,EAAW8P,WAEhC9P,EAAW+M,UAAY3S,EAAKoiB,WAAY,CAGxC,IAAIgiB,EAAcpkC,EAAKqkC,iBACnBmJ,EAAcxtC,EAAKytC,iBAGvB,GAAIrJ,EAAYpiC,OAAS,GAAKwrC,EAAYxrC,OAAS,GAC3CoiC,EAAYzhB,MAAM3gB,OAAS,GAAiC,GAA5BwrC,EAAY7qB,MAAM3gB,OAMlD,OALAgS,EAAUhU,EAAKiM,YAAY,wBAAwBkT,WAAW,UAAWvZ,EAAWuR,aACpFwD,EAAgBxZ,MACZgU,MAAOvP,EAAWuP,MAClBnB,QAASA,KAEN,EAO3B,OAAOs4B,KCvPfnwC,EAAEmV,MAAMjS,OAAO,oCAMX0S,eAAgB,SAAU9Q,GACXhB,KAGNyM,OAAOzL,GAGZhB,KAAKiU,cAAgBnI,OAAOgB,KAAKmH,eAAeC,QANrClU,OAOXA,KAAK+tC,cAAc/tC,KAAK2F,WAAWqoC,SAGnC,IAAIroC,EAAa3F,KAAK2F,WAKtB,GAFAA,EAAWqoC,SAAWhuC,KAAK2F,WAAWqoC,UAAY,EAE9CroC,EAAWsoC,4BAA6B,CACxC,IAAIl6B,EAAUpO,EAAWuoC,0BAhBlBluC,KAgBmDgM,YAAY,kDAEtErG,EAAWwoC,mBAAqBC,WAAczoC,EAAWsoC,4BAA6Bl6B,QAAWA,KAOzG4M,cAAe,WACX,IAAIrc,EAAWtE,KAAKyR,cAAcwN,YAAY,gBAQ9C,OALW/iB,EAAEqjB,SAASjb,GAClB+pC,kBAAiD,IAA3BruC,KAAK2F,WAAgB,MAC3C8P,SAAUzV,KAAK2F,WAAW8P,YASlC6L,WAAY,WACR,IAAIvhB,EAAOC,KACXD,EAAK0M,SAEL,IAAIoS,EAAU9e,EAAKmhB,aACnBnhB,EAAKuuC,SAAWzvB,EAAQvd,KAAK,YAGzBvB,EAAKuuC,SACLvuC,EAAKuuC,SAAS9tC,KAAK+R,OAAQ,SAE3BxS,EAAKuuC,SAAS9tC,KAAK+R,OAAQ,SAIA,WAA3BxS,EAAK4F,WAAW4Q,QAChBxW,EAAKypC,sBAMbA,mBAAoB,aAMpB1wB,kBAAmB,WACf,IAAI/Y,EAAOC,KACP2F,EAAa5F,EAAK4F,WAIlBA,EAAW4X,WACXxd,EAAKuuC,SAASzd,KAAK,YAAalrB,EAAW4X,WAE3C5X,EAAWqoC,SACXjuC,EAAKuuC,SAASzd,KAAK,OAAQlrB,EAAWqoC,UAEtCjuC,EAAKuuC,SAASzd,KAAK,OAAQ,GAI/B9wB,EAAKuuC,SAASvpC,KAAK,SAAU,WAGzBhF,EAAK8jB,SAAS9jB,EAAKuuC,SAAS5rB,OAG5B,IAAI6rB,KACJ,GAA0B,cAAtB5oC,EAAW4Q,OACX,GAAIxW,EAAKsL,QAAQkjC,SAAiE,IAAlC5oC,EAA4B,kBAExE5F,EAAK8jB,SAAS9jB,EAAKuuC,SAAS5rB,OAAO,OAChC,CAEH,IAAI3O,EAAUw6B,EAAmB,GAAGx6B,QACpCjI,OAAO8nB,eAAe7f,EAAS,SAAU,YAMrDhU,EAAKuuC,SAASvpC,KAAK,OAAQ,WAEvBhF,EAAK8jB,SAAS9jB,EAAKuuC,SAAS5rB,UASpCrX,QAAS,SAAUqP,GACf,IAEI3G,EADApO,EADO3F,KACW2F,WAIlB0mC,EAASrsC,KAAKyM,OAAOiO,GACrBlP,EANOxL,KAMMyiB,WACb+rB,EAAQ,IAAI1/B,OAAO,yDAA0D,KA+BjF,OA5BI9O,KAAKiU,eAAiBnI,OAAOgB,KAAK8gB,mBAClCpiB,EAAQA,GAA4B,iBAAZ,GAAwBA,EAAMA,MAAQA,EAAMA,MAAQA,GAI5E7F,EAAWwoC,kBAEP3iC,IAAWA,EAAMb,MAAM6jC,KAAahjC,EAAMb,MAAM,IAAImE,OAAOnJ,EAAWwoC,kBAAkBC,cAjBrFpuC,KAiB2G2F,YAAwC,aAjBnJ3F,KAiB8H2F,WAAWuP,QAC5InB,EAAUpO,EAAWwoC,kBAAkBp6B,QACvC2G,EAAgBxZ,MAAMgU,MAAOvP,EAAWuP,MAAOnB,QAASA,IACxDs4B,GAAS,IAEL7gC,IAAWA,EAAMb,MAAM6jC,IAAahjC,EAAMb,MAAM,IAAImE,OAAOnJ,EAAWwoC,kBAAkBC,eACxFr6B,EAAUpO,EAAWwoC,kBAAkBp6B,QACvC2G,EAAgBxZ,MAAMgU,MAAOvP,EAAWuP,MAAOnB,QAASA,IACxDs4B,GAAS,GAIb7gC,GAAUA,EAAMb,MAAM,IAAImE,OAAO,aAAc,OAAWtD,EAAMb,MAAM,IAAImE,OAAO,iBAAkB,OAC/FnJ,EAAW8P,WACX1B,EAAU/T,KAAKgM,YAAY,kDAC3B0O,EAAgBxZ,MAAMgU,MAAOvP,EAAWuP,MAAOnB,QAASA,IACxDs4B,GAAS,GAKdA,GAQXtqB,gBAAiB,SAAUvW,GACvB,IACIqT,EADO7e,KACQkhB,aACfutB,EAAe3iC,OAAOgB,KAAK4hC,UAAUljC,GAEzC,GAAgC,GAJrBxL,KAIF2F,WAAW8P,UAEM,iBAAX,EAAqB,CAG5B,IAAIk5B,EAAiB7iC,OAAOgB,KAAKkY,oBAT9BhlB,KASuDukB,mBAE1D1F,EAAQza,KAAKuqC,GAXV3uC,KAgBN6jB,SAAS4qB,GAAc,IAQhCz0B,YAAa,SAAUF,GAEnB9Z,KAAKyM,OAAOqN,IAShB+J,SAAU,SAAUrY,GAChB,IAAIijC,EAAe3iC,OAAOgB,KAAK4hC,UAAUljC,GAEzCxL,KAAKyM,OAAOgiC,IAShB9B,cAAe,SAAU9tB,EAAS+oB,EAAcgF,GAC5C/tB,EAAQ7d,KAAK,WAAY4mC,GACzB/oB,EAAQ6D,IAAI,IAET7D,EAAQ7d,KAAK,eAAe6d,EAAQuiB,QAAQ,WAE/CviB,EAAQzT,KAAK,QAASwhC,GACtB/tB,EAAQuiB,UAER,IAAIyL,EAAgB3wC,EAAE4wC,eACtBjuB,EAAQuiB,UAAUjgC,GAAG,cAAe,SAAU2P,EAAOhG,GACjDA,EAAGs2B,QAAQ2L,OAAOF,KAItBhuB,EAAQuiB,QAAQ,QAEhBv3B,WAAW,WACPgV,EAAQpM,SACT,MAUPi2B,cAAe,SAAUl9B,EAAO+R,GAC5B,OAAGA,EAAU,GAAK/R,EAAMzJ,QAAQwb,EAAiB/R,EAC1CA,EAAMlB,OAAO,EAAGiT,MCxP/BrhB,EAAEmV,MAAMjS,OAAO,4BAKX0S,eAAgB,SAAU9Q,GACtB,IAAIjB,EAAOC,KAEXD,EAAK6uC,aAAe9iC,OAAO0K,MAAMxV,EAAK2E,YAEtC3F,KAAKyM,OAAOzL,GAGZ,IAKI6tC,EACAC,EANAnpC,EAAa3F,KAAK2F,WAEtB5F,EAAKgvC,iBAKLhvC,EAAKqrB,WACLrrB,EAAKyvB,cACLzvB,EAAKivC,iBACLjvC,EAAKkvC,oBACLlvC,EAAKmvC,yBACLhzC,EAAE2E,KAAKG,EAAKgV,SAAU,SAAUnS,EAAGukC,GAC/B,IAAI+G,EAAmB/G,EAAOnyB,OAAOtQ,WAGjCwpC,EAAiBC,UACjBzpC,EAAWypC,QAAUD,EAAiBj6B,OAAS,GAC/CvP,EAAW0pC,eAAiBvjC,OAAOgB,KAAKkL,QAAQrS,EAAWypC,UAMjC,kBAA1BD,EAAiB5wC,MAA4B4wC,EAAiBG,cAC9D3pC,EAAW4pC,mBAAoB,EAC/BxvC,EAAKivC,cAAcG,EAAiBj6B,WAInCnV,EAAK4F,WAAW2Q,aACjB8xB,EAAOnyB,OAAOtQ,WAAW8P,UAAW,GAIxC,IAAI+5B,EAAezvC,EAAK0R,cAAcmR,WAClCrkB,KAAM4wC,EAAiB5wC,KACvByC,KAAMonC,EAAOnyB,OACbzN,OAAQzI,EACR0vC,eAAgB9pC,EAAW8pC,iBAG/B1vC,EAAKqrB,QAAQlqB,KAAKsuC,GAClBzvC,EAAKyvB,WAAWtuB,KAAKknC,EAAOnyB,OAAOtQ,WAAWwP,IAE1Cg6B,EAAiB15B,WACjBo5B,GAA0B,GAG1BM,EAAiBO,UAAYP,EAAiBO,SAAS7O,YACvDiO,GAA2B,EAG3BK,EAAiBO,SAAS3sB,OAASosB,EAAiBO,SAAS3sB,WAC7DosB,EAAiBO,SAAS3sB,OAAOG,UAAiDzjB,IAA1C0vC,EAAiBO,SAAS3sB,OAAOG,MAAqBisB,EAAiBO,SAAS3sB,OAAOG,QAKxG,QAA3Bvd,EAAWiQ,cACX7V,EAAKqrB,QAAUrrB,EAAKqrB,QAAQukB,WAG5BhqC,EAAW2Q,aAAeu4B,IAC1BlpC,EAAW2Q,YAAa,EACxB3Q,EAAWk2B,WAAY,GAIvBiT,IACAnpC,EAAWiqC,aAAc,EACzBjqC,EAAWkqC,YAAc,IAIjCd,eAAgB,WACZ,IAAIhvC,EAAOC,KACPgU,EAAOjU,EAAKqS,mBACZzM,EAAa5F,EAAK4F,WAKtBA,EAAW8P,SAAW3J,OAAOgB,KAAK4I,aAAa/P,EAAW8P,YAAa,EACvE9P,EAAWk2B,UAA8D,MAAlD/vB,OAAOgB,KAAK4I,aAAa/P,EAAWk2B,YAAqB/vB,OAAOgB,KAAK4I,aAAa/P,EAAWk2B,WACpHl2B,EAAW2Q,WAAgE,MAAnDxK,OAAOgB,KAAK4I,aAAa/P,EAAW2Q,aAAsBxK,OAAOgB,KAAK4I,aAAa/P,EAAW2Q,YACtH3Q,EAAWm2B,aAAoE,MAArDhwB,OAAOgB,KAAK4I,aAAa/P,EAAWm2B,eAAwBhwB,OAAOgB,KAAK4I,aAAa/P,EAAWm2B,cAK1Hn2B,EAAWg2B,SAA4D,MAAjD7vB,OAAOgB,KAAK4I,aAAa/P,EAAWg2B,WAAoB7vB,OAAOgB,KAAK4I,aAAa/P,EAAWg2B,UAClHh2B,EAAWqc,YAAarc,EAAmB,WAAuD,MAAlDmG,OAAOgB,KAAK4I,aAAa/P,EAAWqc,YAAsBlW,OAAOgB,KAAK4I,aAAa/P,EAAWqc,YAG9Irc,EAAWq2B,YAAkE,MAApDlwB,OAAOgB,KAAK4I,aAAa/P,EAAWq2B,cAAuBlwB,OAAOgB,KAAK4I,aAAa/P,EAAWq2B,aAGxHr2B,EAAWo2B,YAAkE,MAApDjwB,OAAOgB,KAAK4I,aAAa/P,EAAWo2B,cAAuBjwB,OAAOgB,KAAK4I,aAAa/P,EAAWo2B,aAGxHp2B,EAAWmqC,UAAY,GACvBnqC,EAAW3E,KAAO2E,EAAW3E,MAAQ,KACrC2E,EAAWyY,YAAc,QACzBzY,EAAWoqC,gBAAkBpqC,EAAWoqC,kBAAmB,EAC3DpqC,EAAWqqC,UAAYlkC,OAAOgB,KAAK4I,aAAa/P,EAAWqqC,aAAc,EACzErqC,EAAWsqC,YAAcnkC,OAAOgB,KAAK4I,aAAa/P,EAAWsqC,eAAgB,EAC7EtqC,EAAW0pC,eAAgB,EAC3B1pC,EAAWypC,QAAU,GACrBzpC,EAAWuqC,aAAevqC,EAAWuqC,cAAgB,KACrDvqC,EAAWwqC,UAAYnwC,KAAKgM,YAAY,0BACxCrG,EAAWyqC,eAAiBtkC,OAAOgB,KAAK4I,aAAa/P,EAAWyqC,kBAAmB,EACnFzqC,EAAW0qC,WAAa1qC,EAAW0qC,YAAc,MACjD1qC,EAAW2qC,aAAexkC,OAAOgB,KAAK4I,aAAa/P,EAAW2qC,eAAiB,QAC/E3qC,EAAW4qC,eAAiBzkC,OAAOgB,KAAK4I,aAAa/P,EAAW4qC,kBAAmB,EAEnF5qC,EAAW6qC,OAAS7qC,EAAW6qC,OAAS7qC,EAAW6qC,OAAS7qC,EAAW3E,MAAQ2E,EAAW3E,KAAKyvC,KAAO9qC,EAAW3E,KAAKyvC,KAAO9qC,EAAWmqC,UACxInqC,EAAW+qC,eAAqCjxC,IAAzBkG,EAAW+qC,WAAoD,OAAzB/qC,EAAW+qC,UAA+C,SAAzB/qC,EAAW+qC,UAAuB,MAAQ,OAAU/qC,EAAW3E,MAAQ2E,EAAW3E,KAAK2vC,MAAQhrC,EAAW3E,KAAK2vC,MAAQ,MACrNhrC,EAAW8qC,KAAO9qC,EAAW6qC,OAAS,IAAM7qC,EAAW+qC,UAEvD/qC,EAAWkqC,YAAclqC,EAAW0pC,cAAgB,IAAQ1pC,EAAWkqC,aAAe,GACtFlqC,EAAW4F,KAAO,EAClB5F,EAAWkI,QAAU,EACrBlI,EAAW66B,WAAa,EAExB76B,EAAWirC,SAAWjrC,EAAWirC,UAAY5wC,KAAKgM,YAAY,yBAA2BrG,EAAWuR,YACpGvR,EAAWkrC,UAAYlrC,EAAWkrC,WAAa30C,EAAEuhB,KAAKzd,KAAKgM,YAAY,2BAA6B,IAAMrG,EAAWuR,YACrHvR,EAAWmrC,YAAcnrC,EAAWmrC,aAAe9wC,KAAKgM,YAAY,gCAAkC,IAAMrG,EAAWuR,YACvHvR,EAAWorC,mBAAqBprC,EAAWorC,oBAAsB/wC,KAAKgM,YAAY,oCAAsCrG,EAAWuR,YACnIvR,EAAWqrC,YAAcrrC,EAAWqrC,aAAehxC,KAAKgM,YAAY,4CAIpErG,EAAWsrC,cAAgBtrC,EAAWwa,UAAY,GAElDxa,EAAWurC,cAAe,EAGI,UAA1BvrC,EAAW0V,cACX1V,EAAW0V,YAAoD,mBAA9Btb,EAAKyI,OAAO6nB,eAAgCtwB,EAAKyI,OAAO6nB,iBAAmB,IAQhH,KACStwB,EAAKyI,QAAoD,kBAAnCzI,EAAKyI,OAAO7C,WAAW8P,WAA0B1V,EAAKyI,OAAO7C,WAAW8P,WAAc9P,EAAW8P,YACxH9P,EAAWg2B,UAAW,EACtBh2B,EAAWk2B,WAAY,EACvBl2B,EAAWq2B,aAAc,EACzBr2B,EAAW2Q,YAAa,EACxB3Q,EAAWqc,WAAY,EACvBrc,EAAW8P,UAAW,GAE5B,MAAO7X,IAMJ+H,EAAWk2B,YAAel2B,EAAW2Q,YAAe3Q,EAAWm2B,gBAChEn2B,EAAW8P,UAAW,GAI1B9P,EAAW+Y,WAAa,EACxB/Y,EAAWgZ,WAAa,OAGxBhZ,EAAWwrC,sBAAwBxrC,EAAWwrC,4BAAyB1xC,EAEvEkG,EAAW8pC,iBAAiB3jC,OAAOgB,KAAKkL,QAAQrS,EAAW8pC,iBAAyB9pC,EAAW8pC,eAG/F9pC,EAAWmY,YAAe9J,EAAK9U,QAAU8U,EAAK9U,OAAO8B,MAAQgT,EAAK9U,OAAO8B,KAAK8c,YAAe9J,EAAK9U,OAAO8B,KAAK8c,YAAc,KAG5H/d,EAAKqxC,WAGLrxC,EAAKsxC,iBAIDtxC,EAAKuxC,SAA8B,MAAnB3rC,EAAW3E,OAC3B2E,EAAW3E,KAAK2L,KAAO5M,EAAKwxC,gBAAgB5rC,EAAW3E,KAAK2L,QAOpEwV,SAAU,WACN,OAAOniB,KAAK2F,WAAW3E,MAAQhB,KAAK2F,WAAW3E,KAAK2L,KAAK5K,OAAS,GAGtEuvC,MAAO,WACH,IAAI3rC,EAAa3F,KAAK2F,WACtB,OAAKA,GACoC,iBAA1BA,EAAWiQ,aAAmE,OAAxCjQ,EAAWiQ,YAAYmS,eAEhFwpB,gBAAiB,SAAUvwC,GACvB,IAEIwwC,EAFAC,KACA9kC,EAAO3L,MAaX,OAVA9E,EAAE2E,KAAK8L,EAAM,SAAU0F,EAAK7G,GAExBgmC,EAAShmC,EAAMkmC,SACfD,EAAkBjmC,EAAMmkC,WAERhhB,QAAQ6iB,GAExB7kC,EAAK0F,GAAOo/B,IAGT9kC,GAQXglC,uBAAwB,SAAU3wC,EAAM4wC,GACpC,IAAIjlC,EAAO3L,MACP6wC,EAAmB,EAavB,OAZIllC,EAAK5K,OAAS,IAEd8vC,EAAmBllC,EAAK,GAAG5K,OAAS6vC,EAAa,GAEjDC,EAAmB,GACnB31C,EAAE2E,KAAK8L,EAAM,SAAU0F,EAAK7G,GAExB,IAAK,IAAI3H,EAAI,EAAGA,EAAIguC,EAAkBhuC,IAClC2H,EAAM2F,QAIXxE,GAMXiW,UAAW,SAAU1N,GACjB,IACIzP,EAAS,KAWb,OAVAvJ,EAAE2E,KAFSb,KAECorB,QAAS,SAAUvnB,EAAGukC,GAE1BA,EAAOziC,WAAWuP,OAASA,GAC3BkzB,EAAOziC,WAAWwP,IAAMD,GACxBkzB,EAAOziC,WAAWuP,MAAQ,IAAMkzB,EAAOziC,WAAWwP,IAAMD,IAExDzP,EAAS2iC,KAIV3iC,GAGXqsC,cAAe,SAAU38B,GACrB,IACI48B,EADO/xC,KACYwvB,WAAW9sB,QAAQyS,GAE1C,OAAoB,GAAhB48B,EAHO/xC,KAIKorB,QAAQ2mB,GAAapsC,WAAWpH,KAGzC,MAOXoiB,cAAe,WACX,IAAI5gB,EAAOC,KACP2F,EAAa3F,KAAK2F,WAClB8jB,EAAQ,IAAIvtB,EAAE0b,SAIL,cADF7X,EAAKoT,YAEZxN,EAAW3E,KAAOjB,EAAKknC,gBAG3B,IAAI3iC,EAAWvE,EAAKiyC,kBAGhB5tC,EAAOrE,EAAKkyC,cAAc3tC,GAG1B4tC,KAcJ,OAbAh2C,EAAE2E,KAAKd,EAAKqrB,QAAS,SAAUvnB,EAAGukC,GAG9B,IAAI3iC,EAAS2iC,EAAO+J,aAChB1sC,GACAysC,EAAmBhxC,KAAKuE,KAIhCvJ,EAAEyU,KAAKxC,MAAMjS,EAAGg2C,GAAoBrhC,KAAK,WACrC4Y,EAAM7Q,QAAQxU,KAGXqlB,EAAM1R,WAKjBuJ,WAAY,WACR,IACIzC,EADO7e,KACQkhB,aAGnBlhB,KAAKyM,SAILoS,EAAQ9d,SAAS,mCACZA,SAAS,mCAMlBixC,gBAAiB,WACb,OAAOhyC,KAAKyR,cAAcwN,YAAY,SAM1CgzB,cAAe,SAAU3tC,GACrB,IACIqB,EADO3F,KACW2F,WAGtB,OAFAiQ,YAFW5V,KAEQ2F,WAAWiQ,YAEvB1Z,EAAEqjB,SAASjb,GACd6Q,GAAIrJ,OAAOgB,KAAKslC,YAAYzsC,EAAWuP,OACvCgC,YAAapL,OAAOgB,KAAKslC,YAAYzsC,EAAWuR,aAChDykB,SAAUh2B,EAAWg2B,SACrBiV,SAAUjrC,EAAWirC,YAO7BhwB,eAAgB,WAMZ,OALW5gB,KAKC2gB,iBAKhBme,cAAe,SAAU5/B,GACrB,IAAIa,EAAOC,KACP2F,EAAa5F,EAAK4F,WAoBtB,OAjBAzG,EAASA,MACThD,EAAEkD,OAAOF,GACL66B,IAAKp0B,EAAWo5B,QAChB7pB,MAAOvP,EAAWuP,MAClBkG,SAAUzV,EAAWwP,GACrBnD,aAAcrM,EAAWqM,aACzBqJ,YAAa1V,EAAWmY,YACxB5L,YAAavM,EAAWuM,YACxBu+B,KAAM9qC,EAAW6qC,OACjBG,MAAOhrC,EAAW0sC,SAClB9mC,KAAM5F,EAAW4F,KACjBoB,KAAMhH,EAAWkqC,YACjByC,aAAc3sC,EAAW2sC,aACzB18B,YAAajQ,EAAWiQ,aAAe,QAIvCjQ,EAAWwrC,sBACJxrC,EAAWwrC,sBAAsBjyC,GAGjCa,EAAK2R,YAAYwJ,cAAcq3B,YAAYrzC,GAAQ4yB,KAAK,SAAU9wB,GASrE,OARAjB,EAAK6uC,aAAe7uC,EAAK6uC,iBACzB7uC,EAAK6uC,aAAa5tC,KAAO8K,OAAO0K,MAAMxV,GAGtC2E,EAAW4F,KAAOvK,EAAKuK,KACvB5F,EAAWkI,QAAU7M,EAAK6M,QAC1BlI,EAAW66B,WAAax/B,EAAKw/B,WAEtBx/B,KAOnBwxC,cAAe,SAAUxxC,EAAMzB,GAGd,cAFFS,KACKmT,WACanS,GAAQA,EAAK2L,MACtCzQ,EAAE2E,KAAKG,EAAK2L,KAAM,SAAU0F,EAAK7G,GAC7B,IAAIinC,EAAclzC,GAASyB,EAAK2L,KAAK0F,GAAKtQ,OAC1Cf,EAAK2L,KAAK0F,GAAKoK,OAAOg2B,EAAa,EAAG,OAKlDC,qBAAsB,SAAS1xC,EAAMzB,GAGpB,cAFFS,KACKmT,WACanS,GAAQA,EAAK2U,SACtCzZ,EAAE2E,KAAKG,EAAK2U,QAAS,SAAUtD,EAAK7G,GAChC,IAAIinC,EAAclzC,GAASyB,EAAK2U,QAAQtD,GAAKtQ,OAC7Cf,EAAK2U,QAAQtD,GAAKoK,OAAOg2B,EAAa,GAAG,MAKrDE,sBAAuB,SAAS3xC,EAAMzB,GAGrB,cAFFS,KACKmT,WACanS,GAAQA,EAAKyU,UACtCvZ,EAAE2E,KAAKG,EAAKyU,SAAU,SAAUpD,EAAK7G,GACjC,IAAIinC,EAAclzC,GAASyB,EAAKyU,SAASpD,GAAKtQ,OAC9Cf,EAAKyU,SAASpD,GAAKoK,OAAOg2B,EAAa,GAAG,MAQtDxL,aAAc,WACV,IACIthC,EADO3F,KACW2F,WACtB,GAAIA,EAAW3E,KACX,OAAO2E,EAAW3E,KAMlB,IAHA,IAAI4xC,GAAe,KAGV/uC,EAAI,EAAGA,EATT7D,KASkBorB,QAAQrpB,OAAQ8B,IACrC+uC,EAAY1xC,KAAK,IAUrB,OANIqK,KAAQ,EACRqC,MAAS,EACTC,QAAW,EACXlB,MAASimC,KAUrB1U,kBAAmB,SAAU/oB,GACzB,IACIxP,EADO3F,KACW2F,WAElBuP,EAAQvP,EAAWuP,MAHZlV,KAGyB6yC,qBAAqB19B,GAEzD,OALWnV,KAKC0R,YAAYysB,gBACpBpE,IAAKp0B,EAAWy4B,QAChBhjB,SAAUzV,EAAWwP,GACrBD,MAAOA,EACPlD,aAAcrM,EAAWqM,aACzBE,YAAavM,EAAWuM,YACxBmJ,YAAa1V,EAAWmY,eAOhC0gB,kBAAmB,SAAUrpB,EAAInU,GAC7B,IAAIjB,EAAOC,KACP2F,EAAa5F,EAAK4F,WAGlButB,EAAkB,KAClBlyB,EAAKmyB,YACLD,EAAkBh3B,EAAEyU,KAAKxC,MAAMjS,EAAG8E,EAAKmyB,kBAChCnyB,EAAKmyB,WAIhB,IAAInhB,EAAerM,EAAWqM,aAAajQ,OAAS,EAAI4D,EAAWqM,aAAe,IAAMrM,EAAWuP,MAAQnV,EAAK8yC,qBAAqB19B,GAAMxP,EAAWuP,MAAQnV,EAAK8yC,qBAAqB19B,GAExL,OAAOjZ,EAAEyU,KAAKuiB,GAAiBhM,KAAK,WAEhC,OADAnnB,EAAKgO,eACEhO,EAAK2R,YAAY+sB,gBACpB1E,IAAKp0B,EAAW+4B,QAChBtjB,SAAUzV,EAAWwP,GACrBD,MAAOvP,EAAWuP,MAClBlD,aAAcA,EACdgc,WAAYhtB,EACZqa,YAAa1V,EAAWmY,YACxBg1B,6BAA8B9xC,EAAK8xC,+BAAgC,IACpE5rB,KAAK,SAAU6rB,GAEd,OADAhzC,EAAK+U,aACEi+B,IACRl3B,KAAK,SAAU8iB,GACd,IAAI3qB,EAAOjU,EAAKqS,mBACZ2B,EAAW4qB,EAAqB,aAAIA,EAAS/pB,aAAoC,iBAAZ+pB,EAAwBA,EAAWA,EAASl0B,WAErH,GAAsB,iBAAXsJ,EACP,IACIA,EAAUU,KAAKC,MAAMX,GAASA,QAChC,MAAOnW,GAELmW,GADAA,EAAUA,EAAQpJ,MAAM,oBAAoB,IAC1BL,OAAO,GAAIyJ,EAAQhS,OAAS,SAG1CgS,EAAQA,UAChBA,EAAU4qB,GAEd3qB,EAAK6e,eACL7e,EAAKK,0BACLL,EAAK4iB,qBAAqB7iB,QAQtCsqB,oBAAqB,SAAUlpB,GAC3B,IAAIpV,EAAOC,KACP2F,EAAa5F,EAAK4F,WAElBuP,EAAQvP,EAAWuP,MAAQnV,EAAK8yC,qBAAqB19B,GAEzD,OAAOpV,EAAK2R,YAAY4sB,kBACpBvE,IAAKp0B,EAAW44B,UAChBnjB,SAAUzV,EAAWwP,GACrBD,MAAOA,EACPlD,aAAcrM,EAAWqM,aACzBE,YAAavM,EAAWuM,YACxBmJ,YAAa1V,EAAWmY,cACzBoJ,KAAK,SAAUlmB,GACd,GAAiB,sBAAbA,EAAKzC,KAA8B,CACnC,IAAIyV,EAAOjU,EAAKqS,mBACZ2B,EAAU/S,EAAKk0B,SAAS0D,KAAK,KACjC5kB,EAAKohB,aAAarhB,QAASA,IAG/B,OAAO/S,KAOf88B,iBAAkB,WACd,IACIn4B,EADO3F,KACW2F,WAgBtB,OAjBW3F,KAGQ0R,YAAYqsB,eAC3BhE,IAAKp0B,EAAWq4B,OAChB5iB,SAAUzV,EAAWwP,GACrBD,MAAOvP,EAAWuP,MAClBlD,aAAcrM,EAAWqM,aACzBqJ,YAAa1V,EAAWmY,YACxB5L,YAAavM,EAAWuM,cAGCgV,KAAK,SAAUlmB,GAExC,OAAOA,EAAKi9B,WAGMlmB,WAM1B6mB,sBAAuB,SAAU1/B,GAC7B,IACIyG,EADO3F,KACW2F,WAEtB,OAHW3F,KAGC0R,YAAYmtB,oBACpB9E,IAAKp0B,EAAWy0B,YAChBhf,SAAUzV,EAAWwP,GACrBD,MAAOvP,EAAWuP,MAClBlD,aAAcrM,EAAWqM,aACzBE,YAAahT,EAASA,EAAOgT,YAAcvM,EAAWuM,YACtDmJ,YATOrb,KASW2F,WAAW0V,aAAe,MAMpD23B,kBAAmB,SAAU9zC,GACzB,IAEIiW,GADJjW,EAASA,OACOiW,GACZD,EAAQhW,EAAOgW,MACf1J,EAAQtM,EAAOsM,MACf7K,OAAsC,IAApBzB,EAAc,SAAoBA,EAAOyB,QAC3DsyC,EAAY/zC,EAAOg0C,UAAW,EANvBlzC,KAQNoxC,QAAQj8B,GARFnV,KAQaoxC,QAAQj8B,OARrBnV,KASNoxC,QAAQj8B,GAAID,GAAS1J,EAEtB7K,GAXOX,KAYFkc,qBAAqB7J,IAAK8C,EAAIizB,OAAQlzB,EAAOg+B,QAASD,KAKnEE,8BAA+B,SAAUj+B,GACrC,IAAInV,EAAOC,KACP2F,EAAa5F,EAAK4F,WAGlBijB,GACAO,WACIjU,MAAOvP,EAAWuP,MAClBkU,QAAS,eACT/Q,SAAU,QAEdwQ,YACII,SAAU,MACVH,cAEQC,QACIE,SAAU,cACV/T,MAAOvP,EAAWuP,MAAQ,MAAQA,EAClCgU,aAAc,OACd7Q,SAAUnD,MAK1ByT,cAAehjB,EAAWuP,QAI9BhZ,EAAEyU,KAAK5Q,EAAKuT,SACPzC,KAAK,WACS9Q,EAAKqS,mBACXkX,gBAAgBpU,EAAO0T,MAMxC5O,YAAa,SAAUF,GACnB,IAAI/Z,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBytC,KAEJ,GAAIrzC,EAAKkvC,iBAEL,IAAK,IAAI/5B,KAASnV,EAAKkvC,iBAAkB,CACrC,IAAIoE,EAAyBtzC,EAAKkvC,iBAAiB/5B,GAC/Co+B,EAAsBvzC,EAAKivC,cAAc95B,GAC7C,GAAIm+B,GAA0BC,EAG1Bx5B,EAD2BnU,EAAWuP,MAAQ,IAAMA,EAAQ,UAAYA,IACnC,EAKjD,IAAK,IAAIC,KAAMpV,EAAKqxC,QAAS,CAEzB,GAAU,WAANj8B,EACA,IAAK,IAAIo+B,KAAexzC,EAAKqxC,QAAQj8B,GAEjC,GAAIpV,EAAKyzC,gBAAgBr+B,EAAIo+B,GAAc,CACnCr+B,EAAQvP,EAAWuP,MAAQnV,EAAK8yC,qBAAqB19B,GAAM,IAAMo+B,EAArE,IACI/nC,EAAQzL,EAAKqxC,QAAQj8B,GAAIo+B,GAE7Bz5B,EAAa5E,GAAS1J,EAMlC4nC,EAAalyC,KAAKiU,GAItB,GAAIpV,EAAKkvC,iBACL,IAAK,IAAI/5B,KAASnV,EAAKkvC,iBAAkB,CACjCoE,EAAyBtzC,EAAKkvC,iBAAiB/5B,GAC/Co+B,EAAsBvzC,EAAKivC,cAAc95B,GAC7C,GAAIm+B,GAA0BC,EAAqB,CAC/C,IAAIG,EAAgB1zC,EAAKkvC,iBAAiB/5B,GAC1C,GAAIu+B,GAAiBA,EAAcjoC,MAE/BsO,EAD+BnU,EAAWuP,MAAQnV,EAAK8yC,qBAAqBY,EAAcphC,KAAO,IAAM6C,GAC9Du+B,EAAcjoC,OASvEtP,EAAE2E,KAAKuyC,EAAc,SAAU/gC,EAAKqhC,UACzB3zC,EAAKqxC,QAAQsC,MAI5Bz5B,WAAY,SAAUxU,GAElB,OAAKvJ,EAAEu8B,cADIz4B,KACeoxC,UAIjBl1C,EAAEu8B,cALAz4B,KAKmBivC,oBACtBxpC,EAAOvE,MAAK,IACL,IALXuE,EAAOvE,MAAK,IACL,IAcfsyC,gBAAiB,SAAUr+B,EAAIo+B,GAC3B,IAAiB1vC,EAAGqN,EACpB,IAAKrN,KADM7D,KACIorB,QACX,GAFOprB,KAEEorB,QAAQ0F,eAAejtB,GAAI,CAChC,IAAIukC,EAHDpoC,KAGeorB,QAAQvnB,GAC1B,GAA+B,oBAA3BukC,EAAOziC,WAAWpH,MAClB,GAAI6pC,EAAOziC,WAAWuP,OAASq+B,EAAa,CACxC,IAAII,EANT3zC,KAM6B4zC,gBAAgBz+B,EAAIizB,EAAO2J,YAAc,GACjE,OAAO3J,EAAOruB,UAAU5E,EAAIw+B,SAGhC,IAAKziC,KAAKk3B,EAAOziC,WACb,GAAIyiC,EAAOziC,WAAWmrB,eAAe5f,IAC6B,oBAA1Di3B,OAAOj6B,UAAUzD,SAAS0D,MAAMi6B,EAAOziC,WAAWuL,KAC1Ck3B,EAAOziC,WAAWuL,GAAG5G,OAAO89B,EAAOziC,WAAWuL,GAAGg8B,YAAY,KAAO,KAC9DqG,EACV,OAAO,EAUnC,OAAO,GAKXx5B,UAAW,WACP,IACIpU,EADO3F,KACW2F,WAItB,QAHkBmG,OAAOgB,KAAK4I,aAAa/P,EAAWyiB,eAAgB,IAGjDziB,EAAW2Q,aAAc3Q,EAAWqc,WAAc9lB,EAAEu8B,cAL9Dz4B,KAKiFoxC,WAQhGyC,aAAc,SAAUxhC,EAAK6C,GAGzB,IAFA,IACIlU,EADOhB,KACK2F,WAAW3E,KAAK2L,KACvB9I,EAAI,EAAGA,EAAI7C,EAAKe,OAAQ8B,IAC7B,GAAI7C,EAAK6C,GAAG,IAAMwO,EACd,IAAK,IAAInB,EAAI,EAAGA,EAJblR,KAIsBorB,QAAQrpB,OAAQmP,IAAK,CAC1C,GALDlR,KAKUorB,QAAQla,GAAGvL,WAAWuP,OAASA,EAEpC,OADalU,EAAK6C,GAAGqN,EAAI,GAMzC,OAAO,MAKX4iC,oBAAqB,SAAUzhC,EAAK6C,GAChC,IAEI2J,EAFO7e,KAEQ+zC,eAAe1hC,EAAK6C,GACvC,OAAI2J,GAAuC,mBAArBA,EAAQ4D,SACnB5D,EAAQ4D,WAEZ,MAKXsxB,eAAgB,SAAU1hC,EAAK6C,GAC3B,IAAInV,EAAOC,KACP6e,EAAU,KACd,QAA6B,IAAjB9e,EAAY,QACpB,IAAK,IAAImR,EAAI,EAAGA,EAAInR,EAAKqrB,QAAQrpB,OAAQmP,IACrC,GACInR,EAAKqrB,QAAQla,GAAGvL,WAAWuP,OAASA,GACpCnV,EAAKqrB,QAAQla,GAAGvL,WAAWwP,IAAMD,GACjCnV,EAAKqrB,QAAQla,GAAGvL,WAAWuP,MAAQ,IAAMnV,EAAKqrB,QAAQla,GAAGvL,WAAWwP,IAAMD,EAC5E,CACE2J,EAAU9e,EAAKqrB,QAAQla,GAAG2V,aAAaxU,GACvC,MAKZ,OAAOwM,GAGX8E,eAAgB,SAAUtL,GACtBrY,KAAK2F,WAAW+M,SAAW2F,EAC3BrY,KAAKikB,oBAAoB5L,IAG7B4L,oBAAqB,SAAU5L,GAC3B,IAAIwG,EAAU7e,KAAKkhB,aAEfrC,EAAQ9c,OAAS,IACM,cAAnB/B,KAAKmT,UACqC,GAAtCrH,OAAOgB,KAAK4I,aAAa2C,IAAqBrY,KAAK2F,WAAW8P,SAC9DoJ,EAAQ9d,SAAS,yBAEjB8d,EAAQtd,YAAY,yBAGkB,GAAtCuK,OAAOgB,KAAK4I,aAAa2C,KAAsBrY,KAAKmiB,YAAcniB,KAAK2F,WAAW8P,SAClFoJ,EAAQ9d,SAAS,yBAEjB8d,EAAQtd,YAAY,0BAKhCvB,KAAKkkB,yBAMTsK,QAAS,aAKTwlB,SAAU,SAAU3hC,EAAKkhC,KAKzB7oB,0BAA2B,SAAUrY,EAAK6C,EAAOmD,KAKjDoS,gBAAiB,SAAUpY,EAAK6C,EAAOmD,KAKvCuL,qBAAsB,SAAUvR,EAAK6C,EAAOmD,KAK5C47B,sBAAuB,SAAU5hC,EAAK6C,EAAOmD,KAK7CyS,mBAAoB,SAAUzY,EAAK6C,EAAOmD,KAK1C67B,qBAAsB,SAAU7hC,EAAK6C,EAAOmD,KAM5C87B,mBAAoB,SAAU9hC,EAAK6C,EAAOmD,KAM1C+7B,mBAAoB,SAAU/hC,EAAK6C,EAAOmD,KAM1Cg8B,cAAe,SAAUhiC,EAAK6C,KAG9BoD,kBAAmB,SAAUD,GACzB,IAAItY,EAAOC,KACP6e,EAAU9e,EAAKmhB,aAEnBnhB,EAAKu0C,WAAWzjC,KAAK,WAGjB,IAAI0jC,EAA0B,WAAZl8B,EAAwBtY,EAAK8V,mBAAmBJ,SAAU3J,OAAOgB,KAAK4I,aAAa2C,GACjG1S,GAAcA,WAAYzJ,EAAEkD,QAAQqW,SAAU8+B,GAAcx0C,EAAK6uC,eAGrE/vB,EAAQtZ,QAERuG,OAAOsJ,UAAUa,OAAO/H,UAAU4D,eAAe3D,MAAMpO,GAAO4F,IAE9D5F,EAAKgvC,iBACLhvC,EAAKy0C,yBAAyBn8B,GAEW,mBAA9BtY,EAAKugB,uBACZpkB,EAAEyU,KAAK5Q,EAAKugB,yBAAyBzP,KAAK,SAAUzM,GAChDya,EAAQra,OAAOJ,GACfrE,EAAK0Z,kBAAkB1Z,EAAKe,cAS5CwzC,SAAU,WACN,IACI7qB,EAAQvtB,EAAE0b,WAEVjL,EAAOzQ,EAAE,+BAHF8D,KAGuCc,SAASQ,KAAK,uBAYhE,OAXIqL,EAAK5K,OAAS,GACd4K,EAAOzQ,EAAEuS,IAAI9B,EAAM,SAAU+B,EAAK7K,GAC9B,OAAO3H,EAAEwS,GAAK1N,KAAK,kBANhBhB,KAQFy0C,oBAAoB9nC,GAAMkE,KAAK,WAChC4Y,EAAM7Q,aAGV6Q,EAAM7Q,UAGH6Q,EAAM1R,WAGjBy8B,yBAA0B,SAAUhpC,GAChC,IACI4f,EADOprB,KACQorB,YAEnBlvB,EAAE2E,KAAKuqB,EAAS,SAAUvnB,EAAGukC,GACzBA,EAAOziC,WAAW8P,SAAoB,WAATjK,EAAqB48B,EAAOvyB,mBAAmBJ,SAAY3J,OAAOgB,KAAK4I,aAAalK,MAOzHkpC,YAAa,SAAUx1C,GACnB,IAAIa,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClB0M,EAAMnT,EAAOmT,IACb+1B,EAASlpC,EAAOkpC,OAChBp2B,EAAwC,KAAxB9S,EAAO8S,aAAuB9S,EAAO8S,aAAe,IAAMjS,EAAK4F,WAAWuP,MAAQnV,EAAK8yC,qBAAqBxgC,GAAOtS,EAAK4F,WAAWuP,MAAQnV,EAAK8yC,qBAAqBxgC,GACrLsiC,EAAO50C,EAAKg0C,eAAe1hC,EAAKnT,EAAOkpC,QAEvC9sB,EADOvb,EAAKqS,mBACEzM,WAAWwP,GAE7B,GAAKw/B,EAQL,OAHAA,EAAK5/B,kBAGE7Y,EAAEyU,KAAK5Q,EAAK2R,YAAYwJ,cAAc05B,iBACzCx5B,SAAUzV,EAAWwP,GACrBizB,OAAQuM,EAAKhvC,WAAWwP,GACxBjD,YAAavM,EAAWuM,YACxBF,aAAcA,EACdsJ,OAAQA,EACRu5B,WAAYF,EAAKhvC,WAAWpH,QAC5BsS,KAAK,SAAU7P,GAEf,IAAI8zC,EAAe,SAAUvxC,GACzB,OAAIA,GAA2B,iBAAVA,GAAsBA,EAAOxB,QAAU,EAChDwB,EAAO,GAAGxB,QAAU,EAAKwB,EAAO,GAAG,GAAKA,EAAO,GAEpD,IAEPkpC,EAAWqI,EAAa9zC,EAAK2L,MAC7B8I,EAAWq/B,EAAa9zC,EAAKyU,UAC5B3J,OAAOgB,KAAKioC,UAAUt/B,KACvBA,EAAWA,IAAY,GAE3B,IAAIE,EAAUm/B,EAAa9zC,EAAK2U,SAC3B7J,OAAOgB,KAAKioC,UAAUp/B,KACvBA,EAAUA,IAAW,GAIzB5V,EAAK6jB,qBAAqBvR,EAAK+1B,EAAQzyB,GACvC5V,EAAKk0C,sBAAsB5hC,EAAK+1B,EAAQ3yB,GAGxCk/B,EAAK9wB,SAAS4oB,GACdkI,EAAK5yB,gBAAgB0qB,GAGrB1sC,EAAKmc,qBAAqB7J,IAAKA,EAAK+1B,OAAQA,EAAQjsB,SAAS,IAK1C1c,MAAfk1C,EAAKvM,QAAqD,WAA9Bt8B,OAAOgB,KAAKsS,gBACxCrf,EAAKi1C,2BAA2B3iC,EAAKo6B,EAAUkI,EAAKvM,OAAO2J,aAI/DhyC,EAAKiV,gBAAiB4T,OAAQ,mBAOtC1M,oBAAqB,SAAUhd,GAE3BA,EAASA,MAEJ4M,OAAOgB,KAAKkL,QAAQ9Y,IAA6B,GAAlBA,EAAOid,UAHhCnc,KAIF2F,WAAWsvC,eAAgB,GAJzBj1C,KAKN+S,eAAe,gBAChBkD,OANOjW,KAOPm2B,aAAcj3B,EAAOmT,IACrB+1B,OAAQlpC,EAAOkpC,OACfjsB,QAASjd,EAAOid,QAChB+4B,WAAYh2C,EAAOg2C,WACnBhC,QAASh0C,EAAOg0C,WAOxB9kB,SAAU,WACNpuB,KAAKqL,aAKTA,QAAS,SAAUqP,GACf,IAAI3a,EAAOC,KACPqsC,GAAS,EAOb,GAJAtsC,EAAKo1C,WAAY,EACjBp1C,EAAKmiB,qBAAqB,IAGtBniB,EAAK4F,WAAW3E,MAAQjB,EAAK4F,WAAW3E,KAAK2L,KAAM,CACnD,IAAIyoC,EAAUr1C,EAAKs1C,iBAGG,GAAlBD,EAAQrzC,QAAe+J,OAAOgB,KAAK4I,aAAa3V,EAAK4F,WAAW+M,YAC3D3S,EAAKoiB,aACNpO,QAAUhU,EAAKiM,YAAY,wBAAwBkT,WAAW,UAAWnf,EAAK4F,WAAWuR,aACzFwD,EAAgBxZ,MACZgU,MAAOnV,EAAK4F,WAAWuP,MACvBnB,QAASA,UAEbs4B,GAAS,IAMjB,IAFA,IAAIrrC,EAAO9E,EAAEo5C,MAAMp5C,EAAEo5C,SAAUv1C,EAAK4F,WAAW3E,KAAK2L,MAAOyoC,GAElDvxC,EAAI,EAAGA,EAAI9D,EAAKqrB,QAAQrpB,OAAQ8B,IAAK,CAI1C,IAHA,IAAIqxB,KACAqgB,KAEKrkC,EAAI,EAAGA,EAAIlQ,EAAKe,OAAQmP,IAAK,CAClC,IAAI1F,EAAQxK,EAAKkQ,GAAGrN,EAAI,GACpBwO,EAAMrR,EAAKkQ,GAAG,GACNnR,EAAKqrB,QAAQvnB,GAAG8B,WAAWuP,WACbzV,IAAtBM,EAAKqxC,QAAQ/+B,SAA8E5S,IAAxDM,EAAKqxC,QAAQ/+B,GAAKtS,EAAKqrB,QAAQvnB,GAAG8B,WAAWuP,SAChF1J,EAAQzL,EAAKqxC,QAAQ/+B,GAAKtS,EAAKqrB,QAAQvnB,GAAG8B,WAAWuP,QAIxCnV,EAAKqrB,QAAQvnB,GAAG2xC,aAAanjC,EAAK7G,EAAO0pB,EAAUn1B,EAAK6zC,gBAAgBvhC,EAAKxO,MAE1FwoC,GAAS,EAETtsC,EAAKo1C,WAAY,EACjBp1C,EAAKi0C,SAAS3hC,EAAKtS,EAAKqrB,QAAQvnB,GAAG8B,WAAWuP,QAGtD,IAAK,IAAIugC,EAAI,EAAGC,EAAiBxgB,EAASnzB,OAAQ0zC,EAAIC,EAAgBD,IAC/B,MAA/BF,EAAergB,EAASugB,MACxBF,EAAergB,EAASugB,IAAMvgB,EAASugB,IAI/C,GAAIvgB,EAASnzB,OAAS,EAAG,CACrB,IAAI4zC,EAAwB51C,EAAKiM,YAAY,0BAA0BkT,WAAW,SAAUnf,EAAK4F,WAAWuR,aAC5G,IAAK7E,KAAOkjC,EACR76B,EAAgBxZ,MACZgU,MAAOnV,EAAK4F,WAAWuP,MACvBnB,QAAS4hC,EAAwB,IAAMtjC,MAO3D,OAAOg6B,GAKXxrB,wBAAyB,aAMzB+yB,gBAAiB,SAAUvhC,EAAK+1B,GAC5B,IAAIroC,EAAOC,KAGXqS,EAAM3T,OAAO2T,GACb+1B,EAAS1pC,OAAO0pC,GAGhB,IAAI+G,EAAmBpvC,EAAKqrB,QAAQgd,GAAQziC,WAW5C,OAVK5F,EAAKsxC,cAAch/B,KACpBtS,EAAKsxC,cAAch/B,OAClBtS,EAAKsxC,cAAch/B,GAAK+1B,KACzBroC,EAAKsxC,cAAch/B,GAAK+1B,IACpBzyB,QAASw5B,EAAiBx5B,QAC1BF,SAAU05B,EAAiB15B,SAC3B/C,SAAUy8B,EAAiBz8B,WAI5B3S,EAAKsxC,cAAch/B,GAAK+1B,IAMnCwN,iBAAkB,SAAU50C,EAAMoqB,GAC9B,IACI/Y,EAGJ,GAAIrR,EAAK2U,QACL,IAAK,IAAI9R,EAAI,EAAGC,EAAM9C,EAAK2U,QAAQ5T,OAAQ8B,EAAIC,EAAKD,IAAK,CACrDwO,EAAMrR,EAAK2U,QAAQ9R,GAAG,GACtB,IAAK,IAAIqN,EAAI,EAAG2kC,EAAQ70C,EAAK2U,QAAQ9R,GAAG9B,OAAQmP,EAAI2kC,EAAO3kC,IAEnDA,EAAI,IATTlR,KAUU4zC,gBAAgBvhC,EAAKnB,EAAI,GAAGyE,QAAU7J,OAAOgB,KAAK4I,aAAa1U,EAAK2U,QAAQ9R,GAAGqN,KAMpG,GAAIlQ,EAAKyU,SACL,IAAS5R,EAAI,EAAGC,EAAM9C,EAAKyU,SAAS1T,OAAQ8B,EAAIC,EAAKD,IAAK,CACtDwO,EAAMrR,EAAKyU,SAAS5R,GAAG,GACvB,IAASqN,EAAI,EAAG2kC,EAAQ70C,EAAKyU,SAAS5R,GAAG9B,OAAQmP,EAAI2kC,EAAO3kC,IAExD,GAAIA,EAAI,EAAG,CACP,IAAIyR,GAAiByI,GAAUtf,OAAOgB,KAAK4I,aAAa0V,EAAQla,EAAI,GAAGvL,WAAW8P,UAtBvFzV,KAuBU4zC,gBAAgBvhC,EAAKnB,EAAI,GAAGuE,WAAWkN,GAAiB7W,OAAOgB,KAAK4I,aAAa1U,EAAKyU,SAAS5R,GAAGqN,KAOvH,GAAIlQ,EAAK0R,SACL,IAAS7O,EAAI,EAAGC,EAAM9C,EAAK0R,SAAS3Q,OAAQ8B,EAAIC,EAAKD,IAAK,CACtDwO,EAAMrR,EAAK0R,SAAS7O,GAAG,GACvB,IAASqN,EAAI,EAAG2kC,EAAQ70C,EAAK0R,SAAS7O,GAAG9B,OAAQmP,EAAI2kC,EAAO3kC,IAEpDA,EAAI,IAnCTlR,KAoCU4zC,gBAAgBvhC,EAAKnB,EAAI,GAAGwB,SAAW5G,OAAOgB,KAAK4I,aAAa1U,EAAK0R,SAAS7O,GAAGqN,OAQ1GksB,WAAY,WACR,IACIp8B,EAAO9E,EAAEo5C,MADFt1C,KACa2F,WAAW3E,KAAK2L,KAD7B3M,KACwCq1C,kBACnD,OAAOn5C,EAAEuS,IAAIzN,EAAM,SAAU4O,EAAM/L,GAC/B,OAAO+L,EAAK,MAOpBylC,eAAgB,WACZ,IAAIt1C,EAAOC,KACPo1C,KAaJ,MAX8B,iBAAnBr1C,EAAK+1C,YAA2B55C,EAAEu8B,cAAc14B,EAAK+1C,aAC5D55C,EAAE2E,KAAKd,EAAK+1C,WAAY,SAAUtE,GAC9B,IAAIuE,KACJA,EAAU70C,KAAKxC,OAAO8yC,IACtB,IAAK,IAAI3tC,EAAI,EAAG9B,EAAShC,EAAKqrB,QAAQrpB,OAAQ8B,EAAI9B,EAAQ8B,IACtDkyC,EAAU70C,KAAKnB,EAAK+zC,oBAAoBtC,EAAQzxC,EAAKqrB,QAAQvnB,GAAG8B,WAAWuP,QAG/EkgC,EAAQl0C,KAAK60C,KAGdX,GAOXY,iBAAkB,SAAU92C,GACxB,IACIyG,EADO3F,KACW2F,WAEtB,OAHW3F,KAGC0R,YAAYskC,kBACpB56B,SAAUzV,EAAWwP,GACrBnD,aAAcrM,EAAWqM,cAAgB,GACzCE,YAAavM,EAAWuM,YACxB+jC,YAAa/2C,EAAO+2C,YACpBC,WAAYh3C,EAAOg3C,WACnBzF,KAAM9qC,EAAW8qC,KACjBjmB,UAVOxqB,KAUSuqB,eAChBjP,OAXOtb,KAWMoS,mBAAmBzM,WAAWwP,MAKnDghC,oBAAqB,WAEjB,OADWn2C,KACCsd,eAAe,MAAM,IAGrC7J,QAAS,WACL,IAAI1T,EAAOC,KAEX6J,WAAW,WACH9J,EAAKqrB,SACLlvB,EAAE2E,KAAKd,EAAKqrB,QAAS,SAAUvnB,EAAGukC,GAC9BA,EAAO30B,aAGhB3H,OAAO6H,SAASC,aAAe,IAGlC7T,EAAK0M,UAGT2pC,iBAAkB,SAAUl3C,GACxB,IAAIa,EAAOC,KACP2F,EAAa5F,EAAK4F,WACtBzG,EAASA,MACThD,EAAEkD,OAAOF,GACL66B,IAAKp0B,EAAWo5B,QAChB7pB,MAAOvP,EAAWuP,MAClBkG,SAAUzV,EAAWwP,GACrBnD,aAAcrM,EAAWqM,aACzBqJ,YAAa1V,EAAWmY,YACxB5L,YAAavM,EAAWuM,YACxBvF,KAAMhH,EAAWkqC,YACjBwG,YAAan3C,EAAOgW,QAGxB,IAAIuU,EAAQ,IAAIvtB,EAAE0b,SAclB,OAZA7X,EAAK2R,YAAYwJ,cAAco7B,8BAA8Bp3C,GAAQ2R,KAAK,SAAU7P,GAEhF2E,EAAW4F,KAAOvK,EAAKuK,KACvB5F,EAAWkI,QAAU7M,EAAK6M,QAC1BlI,EAAW66B,WAAax/B,EAAKw/B,WAGzBzgC,EAAKuxC,UACLtwC,EAAK2L,KAAO5M,EAAKwxC,gBAAgBvwC,EAAK2L,OAE1C8c,EAAM7Q,QAAQ5X,KAEXyoB,EAAM1R,WAGjB86B,qBAAsB,SAAUxgC,GAC5B,OAAIvG,OAAOgB,KAAK+V,UAAUxQ,GAAa,OAASA,EAAM,IAC/C,QAAUA,EAAM,MAG3BkkC,gBAAiB,WAEbv2C,KAAK81C,eAWT39B,sBAAuB,SAAUzN,GAC7B1K,KAAKyM,OAAO/B,GAEZ,IAAImU,EAAU7e,KAAKkhB,aAInB,OAHArC,EAAQvd,KAAK,4BAA4Bd,IAAI,mBAAoBkK,EAAO,cACxEmU,EAAQvd,KAAK,iCAAiCd,IAAI,mBAAoBkK,EAAO,cAEtE1K,MAOXw2C,eAAgB,WACZ,IAAIC,EAAez2C,KAAK2F,WAAW8wC,iBAEnC,QAAOA,IAAgB3qC,OAAOgB,KAAKkL,QAAQy+B,EAAa/rC,QAS5DgsC,iBAAkB,SAASluC,EAAQoN,GAC/B,OAAMA,GAA+B,SAAhBA,IAA2BpN,EAIzC,SAAS6U,KAAKzH,GAHV5V,KAAK02C,iBAAiBluC,EAAOA,OAAQA,EAAO7C,WAAWiQ,cAUtE+gC,YAAa,WACT,IAAI52C,EAAOC,KACP8Z,KAEJ,IAAK,IAAI3E,KAAMpV,EAAKqxC,QAEhB,GAAW,YAAPj8B,EACA,IAAK,IAAIo+B,KAAexzC,EAAKqxC,QAAQj8B,GAEjC,GAAIpV,EAAKyzC,gBAAgBr+B,EAAIo+B,GAAc,CACvC,IAAIr+B,EAAQnV,EAAK4F,WAAWuP,MAAQnV,EAAK8yC,qBAAqB19B,GAAM,IAAMo+B,EACtE/nC,EAAQzL,EAAKqxC,QAAQj8B,GAAIo+B,GAE7Bz5B,EAAa5E,GAAS1J,EAMtC,OAA4C,IAArC28B,OAAOlM,KAAKniB,GAAc/X,QAErC60C,wBAAyB,SAASC,GAC9B,IAAIrrC,KACJ,IAAK,IAAI0J,KAASlV,KAAKgvC,cACnB,GAAIhvC,KAAKgvC,cAAcle,eAAe5b,GAAQ,CAC1C,IAAI4hC,GAAO92C,KAAKgvC,cAAc95B,QAAc5T,KAAK,SAASzB,GACtD,OAAOA,EAAGsV,IAAM0hC,GAASh3C,EAAGsc,UAE5B26B,IACAtrC,EAAM0J,GAAS4hC,EAAItrC,OAI/B,OAAOA,KCj5CftP,EAAEmV,MAAMjS,OAAO,8BAKXuhB,cAAe,WACX,MAAuB,WAAnB3gB,KAAKmT,UACE,QAAUrH,OAAOC,aAAaC,YAAY,6BAA+B,SAEzE,WAOfsV,WAAY,WACR,IAAI3b,EAAa3F,KAAK2F,WAGtB3F,KAAKyM,cAGoBhN,IAArBkG,EAAW6F,OACXxL,KAAK+hB,gBAAgBpc,EAAW6F,UCzB5CtP,EAAEmV,MAAMjS,OAAO,6BAOX0S,eAAgB,SAAU9Q,GACtB,IAAIjB,EAAOC,KAGXD,EAAK0M,OAAOzL,GAGKjB,EAAK4F,WACX+M,UAAW,EAGtB3S,EAAK4F,WAAWyY,YAAc,QAE9Bre,EAAK4F,WAAWuR,YAAclW,EAAK2E,WAAWuR,aAAe,GAEzDpL,OAAOgB,KAAK4I,aAAa3V,EAAK4F,WAAWoxC,qBACzC/2C,KAAK2F,WAAWuR,YAAclW,EAAK2E,WAAWuR,aAAepL,OAAOC,aAAaC,YAAY,sCAGjGjM,EAAKi3C,eAGLj3C,EAAKoe,oCAMTmD,WAAY,WACRthB,KAAKyM,SAELzM,KAAKilB,oBAAoB,SAGY,mBAA1BjlB,KAAKi3C,mBACZj3C,KAAKi3C,qBAMb11B,mBAAoB,WAChBvhB,KAAKyM,SAELzM,KAAKilB,oBAAoB,SACzBjlB,KAAKklB,iBAAiBllB,KAAK2F,WAAWoY,YAAc,SAOxD1S,QAAS,SAAUqP,KAQnBX,UAAW,WAEP,OAAO,GAGXi9B,aAAc,WACV,IAAIj3C,EAAOC,KAEPD,EAAK4F,WAAWoxC,mBAAqBh3C,EAAK4F,WAAW6F,QACd,iBAA3BzL,EAAK4F,WAAgB,OAAkB5F,EAAK4F,WAAW6F,MAAM,GACrEzL,EAAK4F,WAAWuR,YAAcnX,EAAK4F,WAAW6F,MAAM,GAAGA,MACb,iBAA3BzL,EAAK4F,WAAgB,OAA4C,KAA1B5F,EAAK4F,WAAW6F,QACtEzL,EAAK4F,WAAWuR,YAAcnX,EAAK4F,WAAW6F,SAK1DsX,sBAAuB,WAEnB,OAAO,KCrFf5mB,EAAEmV,MAAMjS,OAAO,8BAMX0S,eAAgB,SAAU9Q,GACXhB,KAGNyM,OAAOzL,GAGZ,IAAI2E,EAAa3F,KAAK2F,WAEtBA,EAAWuxC,YAAcvxC,EAAWuxC,gBAGpCvxC,EAAWw6B,WAAazhC,OAAOiH,EAAWw6B,aAAe,GACzDx6B,EAAWwxC,eAA0E,OAAxDrrC,OAAOgB,KAAK4I,aAAa/P,EAAWwxC,iBAAoCrrC,OAAOgB,KAAK4I,aAAa/P,EAAWwxC,gBACzIxxC,EAAWyxC,aAAqE,OAAtDtrC,OAAOgB,KAAK4I,aAAa/P,EAAWyxC,eAAyBtrC,OAAOgB,KAAK4I,aAAa/P,EAAWyxC,cAC3HzxC,EAAW26B,gBAAkB36B,EAAW26B,kBAAmB,EAC3D36B,EAAWg2B,SAAW7vB,OAAOgB,KAAK4I,aAAa/P,EAAWg2B,YAAa,EACvEh2B,EAAW0xC,YAAmE,OAArDvrC,OAAOgB,KAAK4I,aAAa/P,EAAW0xC,cAAwBvrC,OAAOgB,KAAK4I,aAAa/P,EAAW0xC,aACzH1xC,EAAW0xC,cAAcvrC,OAAOgB,KAAK4I,aAAa/P,EAAWyxC,eAAuBzxC,EAAW0xC,YAC/F1xC,EAAW2xC,WAAiE,OAApDxrC,OAAOgB,KAAK4I,aAAa/P,EAAW2xC,aAAuBxrC,OAAOgB,KAAK4I,aAAa/P,EAAW2xC,YACvH3xC,EAAW8P,SAA6D,OAAlD3J,OAAOgB,KAAK4I,aAAa/P,EAAW8P,WAAqB3J,OAAOgB,KAAK4I,aAAa/P,EAAW8P,UAGnH9P,EAAW4xC,aAAe5xC,EAAW4xC,cAAgB,EAGrD5xC,EAAW6xC,oBAAqB,EAChC7xC,EAAW8xC,YAAc,IAIrB9xC,EAAWwxC,gBAAqC,cA9BzCn3C,KA8B2BmT,YAClCxN,EAAW2X,eAAiBxR,OAAOgB,KAAK4I,aAAa/P,EAAW2X,kBAAmB,EACnF3X,EAAW2X,kBAAkB3X,EAAW+xC,eAAiB,GAAK,IAAI/xC,EAAW2X,iBAQrFqD,cAAe,WACX,IACIhb,EADO3F,KACW2F,WAClBrB,EAFOtE,KAESyR,cAAcwN,YAAY,UAE9C,OAAO/iB,EAAEqjB,SAASjb,GACd6Q,GAAIxP,EAAWwP,GACfD,MAAOvP,EAAWuP,MAClBmiC,YAAa1xC,EAAW0xC,YACxBF,eAAgBxxC,EAAWwxC,eAC3BC,aAAczxC,EAAWyxC,aACzB3hC,SAAU9P,EAAW8P,SACrB6hC,WAAY3xC,EAAW2xC,WACvBn1B,SAZOniB,KAYQmiB,cASvB6c,QAAS,SAAU9/B,GACf,IAAIa,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClB8jB,EAAQ,IAAIvtB,EAAE0b,SACd5D,EAAOjU,EAAKqS,mBACZ0L,EAAc9J,EAAKqc,kBAAoBrc,EAAK9U,OAAOmc,cAAe,EAmBtE,GAjBAnc,EAASA,MAGLa,EAAK4F,WAAW0V,YAChBnc,EAAOy4C,cAAgB53C,EAAK4F,WAAW0V,YAChCyC,IACP5e,EAAOy4C,cAAgB75B,GAG3B5e,EAAOy4C,cAAgB53C,EAAK4F,WAAWiyC,2BAA6B,WAAa14C,EAAOy4C,cAGpFz4C,GAAUA,EAAOy4C,eAA0C,aAAzBz4C,EAAOy4C,gBACzChyC,EAAWqM,aAAe,IAI1BrM,EAAWkyC,KAAKn1C,QAAQ,MAAS,EAAG,CACpC,IAAIo1C,EAAS,IAAIhpC,OAAO,IAAM,KAC9BnJ,EAAWkyC,KAAOlyC,EAAWkyC,KAAKhyC,QAAQiyC,EAAQ,UAItD,GAAInyC,EAAWkyC,KAAKn1C,QAAQ,MAAS,EAAG,CAChCo1C,EAAS,IAAIhpC,OAAO,IAAM,KAC9BnJ,EAAWkyC,KAAOlyC,EAAWkyC,KAAKhyC,QAAQiyC,EAAQ,KA2BtD,OAvBA/3C,EAAK2R,YAAYwJ,cAAc68B,eAC3Bhe,IAAKp0B,EAAWo5B,QAChB1jB,YAAanc,EAAOy4C,cACpBziC,MAAOvP,EAAWuP,MAClBkG,SAAUzV,EAAWwP,GACrBnD,aAAcrM,EAAWqM,aACzBE,YAAavM,EAAWuM,YACxB2lC,KAAOlyC,EAA0B,gBAAI,IAAMA,EAAWkyC,KAAOlyC,EAAWkyC,KACxE1Q,MAAOjoC,IACR2R,KAAK,SAAU7P,GAEd2E,EAAW3E,KAAOA,EAClByoB,EAAM7Q,QAAQjT,EAAW3E,QAC1B6a,KAAK,SAAU7a,GACd,IAAIg3C,EAAah3C,EAAKg3C,aAAc,EAEpCvuB,EAAM7Q,YAEDo/B,GACDj4C,EAAKY,QAAQ,gBAAiBK,KAI/ByoB,EAAM1R,QAAQ0R,IASzB5F,SAAU,SAAUrY,EAAOsY,GAEvBA,OAAkCrkB,IAAlBqkB,GAA8BA,EADnC9jB,KAGNyM,OAAOjB,EAAOsY,GAENrkB,MAAT+L,GACAxL,KAAKwL,MAAQA,EACbxL,KAAKi4C,cAAgBzsC,EAAMoT,QAE3B5e,KAAKwL,MAAQ,KACbxL,KAAKi4C,cAAgB,OAK7BzP,SAAU,SAAUh9B,GAChB,OAAIA,GAASA,EAAMi9B,YAEXtzB,GAAI3J,EAAMA,MACVA,MAAOA,EAAMoT,MACbA,MAAOpT,EAAMoT,OAIdpT,GAMXwO,YAAa,SAAUF,GACnB,IACI5E,EADOlV,KACM2F,WAAWuP,MACxB1J,EAFOxL,KAEMyiB,WAEjB,GAJWziB,KAIF8iB,0BAGAhX,OAAOgB,KAAKkL,QAAQ9C,IAArB,MAA+B1J,EAAkD,CAEjF,GAAsB,iBAAX,QAAoC/L,IAAb+L,EAAM2J,GACpC,OAEJ2E,EAAa5E,GAAS1J,IASlCwiB,WAAY,WACR,IACIhtB,KADOhB,KAIDiiB,OACNjhB,EALOhB,KAKG2F,WAAWuP,OALdlV,KAK4ByiB,YAL5BziB,KASNsd,eAAetc,OAAMvB,GAAW,IAQzC4L,QAAS,SAAUqP,GACf,OAAO1a,KAAKyM,OAAOiO,IAGvByH,SAAU,WACN,IAAI3W,EAAQxL,KAAKyiB,WAEjB,YAAsB,IAAX,GAAmC,MAATjX,IAEhB,iBAAVA,GAAmC,KAAbA,EAAM2J,SAAmC,IAAd3J,EAAQ,KAC5DM,OAAOgB,KAAKkL,QAAQxM,KAahCs7B,WAAY,SAAUt7B,GAClB,OAAOM,OAAOgB,KAAKg6B,WAAWt7B,MCxOtCtP,EAAEmV,MAAMjS,OAAO,4BAMX0S,eAAgB,SAAU9Q,GAEtBhB,KAAKyM,OAAOzL,GAGZ,IAAI2E,EAAa3F,KAAK2F,WAEtB,GAAIA,EAAWsoC,4BAA6B,CACxC,IAAIl6B,EAAUpO,EAAWuoC,0BAA4BluC,KAAKgM,YAAY,kDACtErG,EAAWwoC,mBAAqBC,WAAczoC,EAAWsoC,4BAA6Bl6B,QAAWA,KAQzG4M,cAAe,WACX,IAAIrc,EAAWtE,KAAKyR,cAAcwN,YAAY,QAU9C,OAPW/iB,EAAEqjB,SAASjb,GAClBkH,MAAOxL,KAAK2F,WAAW6F,MACvB6iC,kBAAiD,IAA3BruC,KAAK2F,WAAgB,MAC3C6X,SAAUxd,KAAK2F,WAAW6X,SAC1B/H,SAAUzV,KAAK2F,WAAW8P,YASlCmL,eAAgB,WACZ,IAAItc,EAAWtE,KAAKyR,cAAcwN,YAAY,kBAC1CzT,EAAQxL,KAAKyiB,WAOjB,OALI3W,OAAOgB,KAAKiY,SAASvZ,KACrBA,EAAQA,EAAM0T,WAAW,IAAK,UAI3BhjB,EAAEqjB,SAASjb,GAAWkH,MAAOA,EAAOiK,SAAUzV,KAAK2F,WAAW8P,YAMzE6L,WAAY,WAERthB,KAAKyM,SAELzM,KAAKwnB,MAAQxnB,KAAKkhB,aAAa5f,KAAK,SAGL,WAA3BtB,KAAK2F,WAAW4Q,QAChBvW,KAAKwpC,sBAMbA,mBAAoB,aAMpB1wB,kBAAmB,WACf,IAAI/Y,EAAOC,KACP2F,EAAa5F,EAAK4F,WAGlBA,EAAW8nC,MACX1tC,EAAKynB,MAAMimB,MAAMA,KAAM9nC,EAAW8nC,OAGtC1tC,EAAKynB,MAAMziB,KAAK,SAAU,WAGtBhF,EAAK8jB,SAAS9jB,EAAKynB,MAAM9E,OAAO,GAIN,cAAtB/c,EAAW4Q,SACPxW,EAAKsL,kBAAyE,IAAlC1F,EAA4B,oBAExE5F,EAAK8jB,SAAS9jB,EAAKynB,MAAM9E,OAAO,KAIzCopB,SAAS,SAAUluC,GAElB,IAAIwtC,GADJxtC,EAAIH,OAAOqT,OAASlT,GACDytC,UAAYztC,EAAE0tC,aAEvB7rC,IAAN7B,GACkB,IAAdwtC,GACAlvC,EAAE8D,MAAMW,QAAQ,aAWhC0K,QAAS,SAAUqP,GACf,IACI/U,EADO3F,KACW2F,WAElB0mC,EAASrsC,KAAKyM,OAAOiO,GACrBlP,EAJOxL,KAIMyiB,WAIjB,GAAoB,iBAATjX,EACP,GAAI7F,EAAWwoC,kBAAmB,CAC9B,IAAI+J,EAAQ,IAAIppC,OAAO,IACvB,IACIopC,EAAQ,IAAIppC,OAAOnJ,EAAWwoC,kBAAkBC,YAClD,MAAOxwC,GACDkO,OAAO6H,SAASwkC,wBAChBrsC,OAAO+V,IAAIjkB,GACX8c,EAAgBxZ,MAAMgU,MAAOvP,EAAWuP,MAAOnB,QAASnW,EAAEmW,UAC1Ds4B,GAAS,GAIjB,GAAI7gC,IAAWA,EAAMb,MAAM,IAAImE,OAAO,yDAA0D,QAAYtD,EAAMb,MAAMutC,IArBrHl4C,KAqBoI2F,YAAwC,aArB5K3F,KAqBuJ2F,WAAWuP,OAAwB,CACzL,IAAInB,EAAUpO,EAAWwoC,kBAAkBp6B,QAC3C2G,EAAgBxZ,MAAMgU,MAAOvP,EAAWuP,MAAOnB,QAASA,IACxDs4B,GAAS,OAET,GAAI7gC,IAAWA,EAAMb,MAAM,IAAImE,OAAO,yDAA0D,QAAYtD,EAAMb,MAAMutC,IAAU,CAC1HnkC,EAAUpO,EAAWwoC,kBAAkBp6B,QAC3C2G,EAAgBxZ,MAAMgU,MAAOvP,EAAWuP,MAAOnB,QAASA,IACxDs4B,GAAS,QAOjB,GAAI7gC,GAAUA,EAAMb,MAAM,IAAImE,OAAO,aAAc,OAAWtD,EAAMb,MAAM,IAAImE,OAAO,iBAAkB,OAC/FnJ,EAAW8P,SAAU,CACjB1B,EAAU/T,KAAKgM,YAAY,kDAE/B0O,EAAgBxZ,MAAMgU,MAAOvP,EAAWuP,MAAOnB,QAASA,IACxDs4B,GAAS,EAMzB,OAAOA,GAOXtqB,gBAAiB,SAAUvW,GACvB,IACIqT,EADO7e,KACQkhB,aACfutB,EAAe3iC,OAAOgB,KAAK4hC,UAAUljC,GAEzC,IAAKM,OAAOgB,KAAK4I,aAJN1V,KAIwB2F,WAAW8P,UAE1C,GAAuB,iBAAZ,EAAsB,CAE7B,IAAIk5B,EAAiB7iC,OAAOgB,KAAKkY,oBAR9BhlB,KAQuDukB,mBAE1D1F,EAAQza,KAAK,mCAAqCuqC,EAAiB,iBAE/D7iC,OAAOgB,KAAKsrC,OAAO5sC,IACnBqT,EAAQza,KAAK,IAbdpE,KAmBN6jB,SAAS4qB,GAAc,IAOhC5qB,SAAU,SAAUrY,GAChBxL,KAAKyM,OAAOjB,IAShBmhC,cAAe,SAAU9tB,EAAS+oB,EAAcgF,GAC5C/tB,EAAQ7d,KAAK,WAAY4mC,GACzB/oB,EAAQ6D,IAAI,IAET7D,EAAQ7d,KAAK,eAAe6d,EAAQuiB,QAAQ,WAE/CviB,EAAQzT,KAAK,QAASwhC,GACtB/tB,EAAQuiB,UAER,IAAIyL,EAAgB3wC,EAAE4wC,eACtBjuB,EAAQuiB,UAAUjgC,GAAG,cAAe,SAAU2P,EAAOhG,GACjDA,EAAGs2B,QAAQ2L,OAAOF,KAItBhuB,EAAQuiB,QAAQ,QAEhBv3B,WAAW,WACPgV,EAAQpM,SACT,MAWPi2B,cAAe,SAAUl9B,EAAO+R,GAC5B,OAAIA,EAAY,GAAK/R,EAAMzJ,QAAUwb,EAAkB/R,EAChDA,EAAMlB,OAAO,EAAGiT,MC/O/BrhB,EAAEmV,MAAMjS,OAAO,iCAKX0S,eAAgB,SAAU9Q,GAGtBhB,KAAKyM,OAAOzL,GAGZ,IAAI2E,EAAa3F,KAAK2F,WACtBA,EAAW0yC,WAAavsC,OAAOgB,KAAK4I,aAAa/P,EAAW0yC,cAAe,EANhEr4C,KAON6jB,SAASle,EAAW+F,OAPd1L,KAQNynB,uBAMTnG,WAAY,WACR,IACIzC,EADO7e,KACQkhB,aADRlhB,KAINyM,SAJMzM,KAKNs4C,eAAiBp8C,EAAE,+DAAgE2iB,IAM5F8B,cAAe,WACX,IAAI5gB,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBrB,EAAWvE,EAAK0R,cAAcwN,YAAYlf,EAAKymC,mBAC/C96B,EAAQ3L,EAAK4F,WAAW+F,UAS5B,OAPWxP,EAAEqjB,SAASjb,EAAUpI,EAAEkD,OAAOW,EAAK4mC,qBAC1CxxB,GAAIxP,EAAWwP,GACfD,MAAOvP,EAAWuP,MAClB0xB,OAAQ96B,OAAOgB,KAAK+5B,aAAa,IAAO,KACxC30B,YAAavM,EAAWuM,YACxBxG,MAAOA,MASf86B,gBAAiB,WACb,MAAO,aAOXO,UAAW,WACP,OAAO,GAOXC,gBAAiB,WACb,OAAO,GAMXL,kBAAmB,WAIf,OACI4R,UAJOv4C,KACW2F,WAGI0yC,aAM9B/wB,UAAW,aAIXzD,SAAU,SAAUrY,GAChBxL,KAAKwL,MAAQM,OAAO0K,MAAMhL,IAG9BiX,SAAU,SAAUzhB,GAChB,OAAOhB,KAAKwL,aChGpBtP,EAAEmV,MAAMjS,OAAO,6BAIXQ,KAAM,SAASV,GAEXc,KAAKyM,OAAOvN,IAMhB4S,eAAgB,SAAS9Q,GAGrBhB,KAAKyM,OAAOzL,IAOhB2f,cAAe,WACX,IAEIrc,EAFOtE,KACW2F,WAMtB,OAFArB,EALWtE,KAKKyR,cAAcwN,YAAY,gBACnC/iB,EAAEqjB,SAASjb,OAQtBk0C,kBAAmB,SAAUC,EAAYC,GACrC,IAAI34C,EAAOC,KACXD,EAAK04C,WAAaA,GAAc,KAChC14C,EAAK24C,WAAaA,GAAc,KAChC,IAAI75B,EAAU9e,EAAKmhB,aAEfy3B,EAAaz8C,EAAE,oBAAqB2iB,GACpC+5B,EAAa18C,EAAE,oBAAqB2iB,GAKxC9e,EAAK84C,mBAAmBD,EAAYH,GACpC14C,EAAK84C,mBAAmBF,EAAYD,IAMxCj2B,SAAU,WASN,OAHIjY,IALOxK,KACSy4C,WAAWh2B,WAK3BvZ,IANOlJ,KAES04C,WAAWj2B,aASnCo2B,mBAAoB,SAAUC,EAASj6B,GACnC3iB,EAAEyU,KAAKkO,EAAQ5I,OAAO,WAAWpF,KAAK,SAAUzM,GAC5C00C,EAAQvzC,QAAQf,OAAOJ,GACvBya,EAAQpF,kBAAkBq/B,QCvEtC58C,EAAEmV,MAAMjS,OAAO,iCAKX25C,mBAAoB,SAAU75C,GAC1B,IAEI85C,EAAUltC,OAAOsJ,UAAUyuB,KAAKzkC,QAChC65C,SAAU,SAAUp6B,GAChB7e,KAAKk5C,SAAWl5C,KAAKk5C,aACrBl5C,KAAKk5C,SAASh4C,KAAK2d,IAGvBs6B,OAAQ,SAAU3tC,GACd,IAAK,IAAI3H,EAAI7D,KAAKk5C,SAASn3C,OAAS,EAAI8B,GAAK,EAAGA,IAC5C7D,KAAKk5C,SAASr1C,GAAG2oC,eAAehhC,IAIxCqY,SAAU,SAAUrY,GAChBA,EAAQA,GAAS,GACjBxL,KAAKyM,OAAOjB,GACZxL,KAAKm5C,OAAO3tC,MAIhB4tC,EAAUttC,OAAOsJ,UAAUyuB,KAAKzkC,QAChC65C,SAAU,SAAUp6B,GAChB7e,KAAKk5C,SAAWl5C,KAAKk5C,aACrBl5C,KAAKk5C,SAASh4C,KAAK2d,IAGvBs6B,OAAQ,SAAU3tC,GACd,IAAK,IAAI3H,EAAI7D,KAAKk5C,SAASn3C,OAAS,EAAG8B,GAAK,EAAGA,IAC3C7D,KAAKk5C,SAASr1C,GAAG6oC,eAAelhC,IAIxCqY,SAAU,SAAUrY,GAChBA,EAAQA,GAAS,GACjBxL,KAAKyM,OAAOjB,GACZxL,KAAKm5C,OAAO3tC,MAKhBitC,EAAa,IAAIO,EAzCVh5C,KAyCuBq5C,oBAAoB,QAClDX,EAAa,IAAIU,EA1CVp5C,KA0CuBq5C,oBAAoB,QAEtDZ,EAAWQ,SAASP,GACpBA,EAAWO,SAASR,GA7CTz4C,KAgDNw4C,kBAAkBC,EAAYC,IAGvCW,oBAAqB,SAAUC,GAC3B,IACItlC,EADOhU,KACKoS,mBACZzM,EAFO3F,KAEW2F,WAElB4zC,GACAv4C,MACI2E,YACIwP,GAAMxP,EAAWwP,GACjBD,MAASvP,EAAWuP,MAAQ,IAAMokC,EAClCl7B,YAAe,UAGvB1H,KAAM,UACNlO,OAAQwL,EACRvC,cAdOzR,KAcayR,cACpBE,UAAW7F,OAAOC,aAClB2F,YAhBO1R,KAgBW0R,aAStB,OALI6nC,EAAiBv4C,KAAK2E,WAAWuR,YADZ,QAArBoiC,EAC+C,OAEA,KAG5CC,KCnFfr9C,EAAEmV,MAAMjS,OAAO,kCAKX25C,mBAAoB,WAChB,IAEIS,EAAW1tC,OAAOsJ,UAAUqkC,MAAMr6C,QAClC65C,SAAU,SAAUp6B,GAChB7e,KAAKk5C,SAAWl5C,KAAKk5C,aACrBl5C,KAAKk5C,SAASh4C,KAAK2d,IAGvBs6B,OAAQ,SAAU3tC,GACd,IAAK,IAAI3H,EAAI7D,KAAKk5C,SAASn3C,OAAS,EAAI8B,GAAK,EAAGA,IAC5C7D,KAAKk5C,SAASr1C,GAAG2oC,eAAehhC,IAIxCqY,SAAU,SAAUrY,GAChBA,EAAQA,GAAS,GACjBxL,KAAKyM,OAAOjB,GACZxL,KAAKm5C,OAAO3tC,MAIhBkuC,EAAW5tC,OAAOsJ,UAAUqkC,MAAMr6C,QAClC65C,SAAU,SAAUp6B,GAChB7e,KAAKk5C,SAAWl5C,KAAKk5C,aACrBl5C,KAAKk5C,SAASh4C,KAAK2d,IAGvBs6B,OAAQ,SAAU3tC,GACd,IAAK,IAAI3H,EAAI7D,KAAKk5C,SAASn3C,OAAS,EAAG8B,GAAK,EAAGA,IAC3C7D,KAAKk5C,SAASr1C,GAAG6oC,eAAelhC,IAIxCqY,SAAU,SAAUrY,GAChBA,EAAQA,GAAS,GACjBxL,KAAKyM,OAAOjB,GACZxL,KAAKm5C,OAAO3tC,MAIhBitC,EAAa,IAAIe,EAxCVx5C,KAwCwBq5C,oBAAoB,QACnDX,EAAa,IAAIgB,EAzCV15C,KAyCwBq5C,oBAAoB,QAEvDZ,EAAWQ,SAASP,GACpBA,EAAWO,SAASR,GA5CTz4C,KA8CNw4C,kBAAkBC,EAAYC,IAIvCW,oBAAqB,SAAUC,GAC3B,IACItlC,EADOhU,KACKoS,mBACZzM,EAFO3F,KAEW2F,WAgBtB,OAbI3E,MACI2E,YACIwP,GAAMxP,EAAWwP,GACjBD,MAASvP,EAAWuP,MAAQ,IAAMokC,EAClCl7B,YAAe,UAGvB1H,KAAM,UACNlO,OAAQwL,EACRvC,cAdOzR,KAcayR,cACpBE,UAAW7F,OAAOC,aAClB2F,YAhBO1R,KAgBW0R,gBCzE7BxV,EAAEmV,MAAMjS,OAAO,mCAKZ25C,mBAAoB,WAChB,IAEIY,EAAY7tC,OAAOsJ,UAAUwkC,OAAOx6C,QACpC65C,SAAU,SAAUp6B,GAChB7e,KAAKk5C,SAAWl5C,KAAKk5C,aACrBl5C,KAAKk5C,SAASh4C,KAAK2d,IAGvBs6B,OAAQ,SAAU3tC,GACd,IAAK,IAAI3H,EAAI7D,KAAKk5C,SAASn3C,OAAS,EAAI8B,GAAK,EAAGA,IAC5C7D,KAAKk5C,SAASr1C,GAAG2oC,eAAehhC,IAIxCqY,SAAU,SAAUrY,GAChBA,EAAQA,GAAS,GACjBxL,KAAKyM,OAAOjB,GACZxL,KAAKm5C,OAAO3tC,MAIhBquC,EAAY/tC,OAAOsJ,UAAUwkC,OAAOx6C,QACpC65C,SAAU,SAAUp6B,GAChB7e,KAAKk5C,SAAWl5C,KAAKk5C,aACrBl5C,KAAKk5C,SAASh4C,KAAK2d,IAGvBs6B,OAAQ,SAAU3tC,GACd,IAAK,IAAI3H,EAAI7D,KAAKk5C,SAASn3C,OAAS,EAAG8B,GAAK,EAAGA,IAC3C7D,KAAKk5C,SAASr1C,GAAG6oC,eAAelhC,IAIxCqY,SAAU,SAAUrY,GAChBA,EAAQA,GAAS,GACjBxL,KAAKyM,OAAOjB,GACZxL,KAAKm5C,OAAO3tC,MAIhBitC,EAAa,IAAIkB,EAxCV35C,KAwCyBq5C,oBAAoB,QACpDX,EAAa,IAAImB,EAzCV75C,KAyCyBq5C,oBAAoB,QAExDZ,EAAWQ,SAASP,GACpBA,EAAWO,SAASR,GA5CTz4C,KA8CNw4C,kBAAkBC,EAAYC,IAIvCW,oBAAqB,SAAUC,GAC3B,IACItlC,EADOhU,KACKoS,mBACZzM,EAFO3F,KAEW2F,WAiBtB,OAdI3E,MACI2E,YACIwP,GAAMxP,EAAWwP,GACjBD,MAASvP,EAAWuP,MAAQ,IAAMokC,EAClCl7B,YAAe,UAGvB1H,KAAM,UACNlO,OAAQwL,EACRvC,cAdOzR,KAcayR,cACpBE,UAAW7F,OAAOC,aAClB2F,YAhBO1R,KAgBW0R,gBC1E9BxV,EAAEmV,MAAMjS,OAAO,sCAKX0S,eAAgB,SAAU9Q,GACtB,IAAIjB,EAAOC,KAEXA,KAAKyM,OAAOzL,GACZ,IAAIgT,EAAOjU,EAAKqS,mBAChBpS,KAAK85C,SAAW9lC,EAAKrO,WAAWm0C,UAAY,GAC5C,IAAIpjC,EAAO3W,EAAKoT,UACZxN,EAAa5F,EAAK4F,WAEtB5F,EAAKg6C,gBAAkB,IAAI79C,EAAE0b,SAC7B7X,EAAKg6C,gBAAgBhiC,UAET,aAARrB,IACA3W,EAAKi6C,OAAS,IAAIluC,OAAOmuC,gBACrBxoC,cAAe1R,EAAK0R,cACpBqY,OAAO,EACPowB,kBAAkB,EAClBC,aAAcx0C,EAAWy0C,kBAKjCr6C,EAAKs6C,0BACDC,QAAWv6C,EAAKmqB,YAChBqwB,YAAex6C,EAAK4F,WAAW60C,WAC/Bp/B,SAAYrb,EAAK4F,WAAWwP,GAC5BnD,aAAgBgC,EAAKrO,WAAWqM,aAChCE,YAAe8B,EAAKrO,WAAWuM,YAC/B2c,SAAY,OACZ4rB,eAAkB16C,EAAK4F,WAAW+0C,cAClCC,MAAS56C,EAAK4F,WAAWi1C,aACzBC,UAAa96C,EAAK4F,WAAWm1C,SAC7BC,aAAgBh7C,EAAK4F,WAAWq1C,cAGpCj7C,EAAKk7C,kCACDF,aAAgBh7C,EAAK4F,WAAWq1C,aAChC5/B,SAAYrb,EAAK4F,WAAWwP,GAC5BnD,aAAgBgC,EAAKrO,WAAWqM,aAChCE,YAAe8B,EAAKrO,WAAWuM,YAC/BgpC,cAAiBv1C,EAAWy0C,eAC5BvrB,SAAY,eACZmsB,aAAgBj7C,EAAK4F,WAAWq1C,cAGpCj7C,EAAK4F,WAAWgZ,WAAa,IAC7B5e,EAAK4F,WAAWyY,YAAc,QAC9B,IAAI+8B,EAA+C,mBAAzBn6C,EAAK2E,WAAWpH,KAC1CwB,EAAK4F,WAAWy1C,kBAAuD,IAAhCp6C,EAAK2E,WAAWy1C,aACjDD,EAAsBn6C,EAAK2E,WAAWy1C,aAC5Cr7C,EAAK4F,WAAW01C,kBAAuD,IAAhCr6C,EAAK2E,WAAW01C,cAC1Cr6C,EAAK2E,WAAW01C,aAC7Bt7C,EAAK4F,WAAW21C,iBAAqD,IAA/Bt6C,EAAK2E,WAAW21C,aACxCt6C,EAAK2E,WAAW21C,YAC9Bv7C,EAAK4F,WAAWy0C,oBAA2D,IAAlCp5C,EAAK2E,WAAWy0C,eACnD,GAAKp5C,EAAK2E,WAAWy0C,eAC3Br6C,EAAK4F,WAAW41C,kBAAkD,IAA3B51C,EAAW41C,aAC5C51C,EAAW41C,aAAe,OAEhCx7C,EAAK4F,WAAW6kB,UAAYxW,EAAK9U,OAAO8B,KAAKwpB,UAExCzqB,EAAK4F,WAAW6F,MAGsB,iBAAzBzL,EAAK4F,WAAW6F,QAC9BzL,EAAK4F,WAAW6F,MAAQzL,EAAKyL,MAAQiJ,KAAKC,MAAM3U,EAAK4F,WAAW6F,SAHhEzL,EAAK4F,WAAW6F,MAAQzL,EAAKyL,SAC7BzL,EAAK4F,WAAWsY,mBAWxBu9B,yBAA0B,SAAU5yB,GAChC,IAAI7oB,EAAOC,KAEPgU,EAAOjU,EAAKqS,mBAEZqpC,GACArgC,SAAYrb,EAAK4F,WAAWwP,GAC5BnD,aAAgBgC,EAAKrO,WAAWqM,aAChCE,YAAe8B,EAAKrO,WAAWuM,YAC/B2c,SAAY,gBACZ4rB,eAAkB16C,EAAK4F,WAAW+0C,cAClCgB,YAAe9yB,EAAOxC,WACtBu1B,YAAelnC,KAAKqB,QAChBwhB,aAAgB1O,EAAO0O,aACvByjB,aAAgBh7C,EAAK4F,WAAWq1C,aAChC9oC,YAAe0W,EAAO1W,eAI9BnS,EAAK2R,YAAYkqC,eAAeH,GAAmC5qC,KAAK,SAAU7P,GAC9EjB,EAAK87C,gBAAgB76C,EAAM4nB,KAC5B/M,KAAK,SAAU1Z,GAEdpC,EAAK87C,gBAAgB,QAASjzB,MAStCizB,gBAAiB,SAAU9mB,EAAU+mB,KAQrCl7B,eAAgB,WACZ,OAAO5gB,KAAK2gB,iBAMhBY,mBAAoB,WAChBvhB,KAAK2F,WAAWo2C,UAAW,EAC3B/7C,KAAKshB,cAOTX,cAAe,WACX,IAGIrc,EAHAvE,EAAOC,KACP2F,EAAa5F,EAAK4F,WAGlBvB,EAAO,GAGX,GAAY,UALDrE,EAAKoT,UAKM,CAClB7O,EAAWvE,EAAK0R,cAAcwN,YAAY,gCAC1C,IAAI/f,GACAX,KAAMoH,EAAWpH,KACjB88C,aAAc11C,EAAW01C,aACzBC,YAAa31C,EAAW21C,YACxBU,gBAA4C,QAA3Br2C,EAAW41C,aAC5BH,aAAcz1C,EAAWy1C,cAE7Bh3C,EAAOlI,EAAEqjB,SAASjb,EAAUpF,QACrByG,EAAW+0C,gBAClBp2C,EAAWvE,EAAK0R,cAAcwN,YAAY,yBAC1C7a,EAAOlI,EAAEqjB,SAASjb,GAAY82C,aAAcr7C,EAAK4F,WAAWy1C,gBAEhE,OAAOh3C,GASXiH,QAAS,SAAUqP,GACf,IAAI3a,EAAOC,KACP2F,EAAa5F,EAAK4F,WACV5F,EAAK0iB,WAIjB,OAAoD,GAAhD3W,OAAOgB,KAAK4I,aAAa/P,EAAWgQ,WAIa,GAAjD7J,OAAOgB,KAAK4I,aAAa/P,EAAW8P,cAKpC9P,EAAW+M,WACP3S,EAAKyL,SACDzL,EAAKyL,MAAMzJ,OAAS,IAExBgS,QAAUhU,EAAKiM,YAAY,mCAC3B0O,EAAgBxZ,MAAOgU,MAAOvP,EAAWuP,MAAOnB,QAASA,WAClD,MAWnBgO,gBAAiB,SAAUvW,GACZxL,KACQkhB,aADRlhB,KAIN6jB,SAASrY,GAAO,IAOzBywC,cAAe,SAAUrzB,GACrB,IAAI7oB,EAAOC,KACPk8C,EAActzB,EAAOszB,aAAe,GACpCC,EAAM,IAAIjgD,EAAE0b,SAOhB,OALAgR,EAAOgV,YAAc79B,EAAKqS,mBAAmBzM,WAAWi4B,YAKhDhV,EAAOwzB,YACX,IAAK,UAED,IAAIl9C,GACAm9C,YAAaH,GAGjBhgD,EAAEyU,KAAK5Q,EAAK2R,YAAY4qC,aAAap9C,IAAS2R,KAAK,SAAUpL,GACrDA,EAAO62C,aAEPpgD,EAAEyU,KAAK5Q,EAAKw8C,kBACRC,YAAaN,EACbO,MAAO7zB,EAAO1R,YACd0mB,YAAahV,EAAOgV,eACpB/sB,KAAK,SAAUymB,GACf1O,EAAO0O,aAAeA,EACtB6kB,EAAIvjC,QAAQgQ,KAIhBuzB,EAAIvjC,QAAQgQ,KAIpB,MACJ,IAAK,OAEDuzB,EAAIvjC,QAAQgQ,GACZ,MACJ,IAAK,OAEGA,EAAO5W,aACP9V,EAAEyU,KAAK5Q,EAAK28C,4BAA4B9zB,IAAS/X,KAAK,SAAUymB,GAC5D1O,EAAO0O,aAAeA,EACtB6kB,EAAIvjC,QAAQgQ,MAIU,SAAtBA,EAAOwzB,aACPxzB,EAAO5W,kBAAevS,EACtBmpB,EAAO9K,YAAc,iBACrB8K,EAAO4xB,WAAa5xB,EAAO4xB,YAAcz6C,EAAK4F,WAAW60C,YAG7Dt+C,EAAEyU,KAAK5Q,EAAK48C,kBAAkB/zB,IAAS/X,KAAK,SAAUymB,GAClD1O,EAAO0O,aAAeA,EACtB6kB,EAAIvjC,QAAQgQ,MAM5B,OAAOuzB,EAAIpkC,WAOf6kC,iBAAkB,SAAUh0B,GACxB,IAAI7oB,EAAOC,KACP68C,EAAc98C,EAAK0iB,WACnB8e,EAAaxhC,EAAKqS,mBAAmBgB,YAEzCwV,EAAO1pB,OAAS0pB,EAAO1pB,WAEvB,IAAI0+B,EAAc79B,EAAK4F,WAAWqM,aAElC,OAAQ4W,EAAOwzB,YACX,IAAK,UACDxzB,EAAO1pB,QACHo4B,aAAc1O,EAAO0O,aACrBwlB,iBAAkB/8C,EAAK4F,WAAWo3C,gBAAgBnkB,KAAK,KACvDokB,iBAAkBzb,EAAWnX,YAActe,OAAOoI,QAAQ+oC,WAC1Drf,YAAaA,GAEjB,MACJ,IAAK,OACDhV,EAAO1pB,QACHo4B,aAAc1O,EAAO0O,aACrBwlB,iBAAkB/8C,EAAK4F,WAAWo3C,gBAAgBnkB,KAAK,KACvDskB,YAAan9C,EAAK4F,WAAWq1C,aAC7BgC,iBAAkBzb,EAAWnX,YAActe,OAAOoI,QAAQ+oC,WAC1Dhf,SAAUrV,EAAOqV,UAErB,MACJ,IAAK,OACDrV,EAAO1pB,QACH87C,aAAcpyB,EAAOoyB,cAAgB,GACrCpd,YAAaA,GAKzB,IAAIuf,EAAsBrxC,OAAO0K,MAAMqmC,GACvCM,EAAoBj8C,KAAK0nB,GACzB7oB,EAAK8jB,SAASs5B,GACdp9C,EAAKgiB,gBAAgBo7B,IAOzBC,oBAAqB,SAAU79C,GAC3B,IACI49C,EAAsBrxC,OAAO0K,MADtBxW,KACiCyiB,YAC5C06B,EAAoB1gC,OAAOld,EAAO,GAFvBS,KAGN6jB,SAASs5B,GAHHn9C,KAIN+hB,gBAAgBo7B,IAMzBnjC,YAAa,SAAUF,GAEnB,GADW9Z,KACF8iB,wBAAyB,CAC9B,IACI5N,EAHGlV,KAEe2F,WACCuP,MACnBmoC,EAJGr9C,KAIiByiB,WACpB9W,KACJzP,EAAE2E,KAAKw8C,EAAc,SAAU99C,EAAOiM,GAClC,IAAIod,KACJA,EAAO1pB,OAASsM,EAAMtM,WACtB0pB,EAAOxC,WAAa5a,EAAM4a,WAE1Bza,EAAQzK,KAAK0nB,KAEjB9O,EAAa5E,GAA4B,GAAlBvJ,EAAQ5J,OAAe,GAAK0S,KAAKqB,OAAOnK,KASvE2xC,iBAAkB,SAAU10B,GACxB,IACIpd,EADOxL,KACMyiB,WACb86B,EAAQ,EAMZ,OALArhD,EAAE2E,KAAK2K,EAAO,SAAU6G,EAAK7G,GACrBA,EAAM4a,YAAcwC,EAAOxC,YAC3Bm3B,MAGDA,GAQXC,2BAA4B,SAAUC,GAalC,IAZA,IACIzpC,EADOhU,KACKoS,mBAWPvO,EAAI,EAAmCqN,EAAvBusC,EAAe17C,OAAoB8B,EAAIqN,EAAGrN,GAAK,EAKnC,IAA7B45C,EAAe55C,GAAG9B,SAClB07C,EAAe55C,GAAG4Y,OAAO,EAAG,EAAG,IAEH,WAAxBghC,EAAe55C,GAAG,IAAmBmQ,EAAKrO,WAAWqM,eACrDyrC,EAAe55C,GAAG,GAAKmQ,EAAKrO,WAAWqM,eAKnD,OAAOyrC,KClZfvhD,EAAEmV,MAAMjS,OAAO,sCAIXQ,KAAM,SAAUV,GAEZc,KAAKyM,OAAOvN,IAMhB4S,eAAgB,SAAS9Q,GACrB,IAAIjB,EAAOC,KAEXA,KAAKyM,OAAOzL,GACZ,IAAIgT,EAAOjU,EAAKqS,mBAEhBrS,EAAKg6C,gBAAkB,IAAI79C,EAAE0b,SAC7B7X,EAAKg6C,gBAAgBhiC,UAGrBhY,EAAKs6C,0BACDC,QAAWv6C,EAAKmqB,YAChBqwB,YAAex6C,EAAK4F,WAAW60C,WAC/Bp/B,SAAYrb,EAAK4F,WAAWwP,GAC5BnD,aAAgBgC,EAAKrO,WAAWqM,aAChCE,YAAe8B,EAAKrO,WAAWuM,YAC/B2c,SAAY,OACZ4rB,eAAkB16C,EAAK4F,WAAW+0C,eAGtC36C,EAAK4F,WAAWgZ,WAAa,IAC7B5e,EAAK4F,WAAWyY,YAAc,QAC9Bre,EAAK4F,WAAWy1C,kBAAuD,IAAhCp6C,EAAK2E,WAAWy1C,cAAsCp6C,EAAK2E,WAAWy1C,aAEzGr7C,EAAK4F,WAAW6F,MAEsB,iBAAzBzL,EAAK4F,WAAW6F,QAC7BzL,EAAK4F,WAAW6F,MAAQzL,EAAKyL,MAAQiJ,KAAKC,MAAM3U,EAAK4F,WAAW6F,QAFhEzL,EAAK4F,WAAW6F,MAAQzL,EAAKyL,UASrCmV,cAAe,WACX,IAEIrc,EAFAvE,EAAOC,KAGPoE,EAAO,GAUX,MARY,UAJDrE,EAAKoT,WAKZ7O,EAAWvE,EAAK0R,cAAcwN,YAAY,gCAC1C7a,EAAOlI,EAAEqjB,SAASjb,OAEdvE,EAAK4F,WAAW+0C,gBACpBp2C,EAAWvE,EAAK0R,cAAcwN,YAAY,yBAC1C7a,EAAOlI,EAAEqjB,SAASjb,GAAW82C,aAAcr7C,EAAK4F,WAAWy1C,gBAExDh3C,GAMXiH,QAAS,SAAUqP,GACJ1a,KACW2F,WADtB,IAGI0mC,EAASrsC,KAAKyM,OAAOiO,GAHd1a,KAIMyiB,WAEjB,OAAO4pB,GAMXtqB,gBAAiB,SAAUvW,GACZxL,KACQkhB,aADRlhB,KAIN6jB,SAASrY,GAAO,MCpF7BtP,EAAEmV,MAAMjS,OAAO,2CAIdQ,KAAM,SAASV,GAEdc,KAAKyM,OAAOvN,IAMb4S,eAAgB,SAAS9Q,GACxB,IAAIjB,EAAOC,KAEXA,KAAKyM,OAAOzL,GACZ,IAAIgT,EAAOjU,EAAKqS,mBAChBpS,KAAK85C,SAAW9lC,EAAKrO,WAAWm0C,UAAY,GACjC/5C,EAAKoT,UAEhBpT,EAAKg6C,gBAAkB,IAAI79C,EAAE0b,SAC7B7X,EAAKg6C,gBAAgBhiC,UAErBhY,EAAK4F,WAAWgZ,WAAa,IAC7B5e,EAAK4F,WAAWyY,YAAc,QAC9Bre,EAAK4F,WAAW21C,iBAAqD,IAA/Bt6C,EAAK2E,WAAW21C,aAAsCt6C,EAAK2E,WAAW21C,YAC5Gv7C,EAAK4F,WAAWo3C,gBAAkBh9C,EAAK4F,WAAWo3C,oBAE9Ch9C,EAAK4F,WAAW6F,MAGsB,iBAAzBzL,EAAK4F,WAAW6F,QAChCzL,EAAK4F,WAAW6F,MAAQzL,EAAKyL,MAAQiJ,KAAKC,MAAM3U,EAAK4F,WAAW6F,SAHhEzL,EAAK4F,WAAW6F,MAAQzL,EAAKyL,SAC7BzL,EAAK4F,WAAWsY,kBAMjBle,EAAKs6C,0BACJC,QAAWv6C,EAAKmqB,YAChBqwB,YAAex6C,EAAK4F,WAAW60C,WAC/Bp/B,SAAYrb,EAAK4F,WAAWwP,GAC5BnD,aAAgBgC,EAAKrO,WAAWqM,aAChCE,YAAe8B,EAAKrO,WAAWuM,YAC/B2c,SAAY,OACZ8rB,MAAS56C,EAAK29C,WAAW39C,EAAK4F,WAAWi1C,UACzCkC,iBAAoB/8C,EAAK4F,WAAWo3C,kBAStCvB,yBAA0B,SAAS5yB,GAClC,IAAI7oB,EAAOC,KAEPgU,EAAOjU,EAAKqS,mBAEZurC,GACHviC,SAAYrb,EAAK4F,WAAWwP,GAC5BnD,aAAgBgC,EAAKrO,WAAWqM,aAChCE,YAAe8B,EAAKrO,WAAWuM,YAC/B2c,SAAY,qBACZ4rB,eAAkB16C,EAAK4F,WAAW+0C,cAClCkD,iBAAoBh1B,EAAOi1B,gBAC3BlC,YAAelnC,KAAKqB,QACnBwhB,aAAgB1O,EAAO0O,aACvByjB,aAAgBh7C,EAAK4F,WAAWq1C,aAChC9oC,YAAe0W,EAAO1W,eAIxBnS,EAAK2R,YAAYkqC,eAAe+B,GAAwC9sC,KAAK,SAAS7P,GACrFjB,EAAK87C,gBAAgB76C,EAAK+zB,SAAUnM,KAClC/M,KAAK,SAAS1Z,GAEhBpC,EAAK87C,gBAAgB,QAASjzB,MAQhCizB,gBAAiB,SAAS9mB,EAAU+mB,KAQpCl7B,eAAgB,WACf,OAAO5gB,KAAK2gB,iBAMbY,mBAAoB,WACnBvhB,KAAK2F,WAAWo2C,UAAW,EAC3B/7C,KAAKshB,cAONX,cAAe,WACd,IAGIrc,EAFAqB,EADO3F,KACW2F,WAGlBvB,EAAO,GAGX,GAAW,UAPApE,KAEKmT,UAKK,CACpB7O,EARUtE,KAQMyR,cAAcwN,YAAY,qCAC1C,IAAI/f,GACHX,KAAMoH,EAAWpH,KACjB+8C,YAAa31C,EAAW21C,aAEzBl3C,EAAOlI,EAAEqjB,SAASjb,EAAUpF,QACnByG,EAAW+0C,gBACpBp2C,EAfUtE,KAeMyR,cAAcwN,YAAY,8BAC1C7a,EAAOlI,EAAEqjB,SAASjb,IAEnB,OAAOF,GASRiH,QAAS,SAASqP,GACN1a,KACQ2F,WADnB,IAGI0mC,EAASrsC,KAAKyM,OAAOiO,GAHd1a,KAIMyiB,WAEjB,OAAO4pB,GAORtqB,gBAAiB,SAASvW,GACdxL,KAEN6jB,SAASrY,GAAO,IAOtBywC,cAAe,SAASrzB,GACvB,IAAI7oB,EAAOC,KACPk8C,EAActzB,EAAOk1B,YAAc,GACnC3B,EAAM,IAAIjgD,EAAE0b,SAQhB,OANMgR,EAAOgV,YAAc79B,EAAKqS,mBAAmBzM,WAAWi4B,YAMvDhV,EAAOwzB,YACb,IAAK,UAEJ,IAAIl9C,GACHm9C,YAAaH,GAGdhgD,EAAEyU,KAAK5Q,EAAK2R,YAAY4qC,aAAap9C,IAAS2R,KAAK,SAASpL,GACxDA,EAAO62C,aAETpgD,EAAEyU,KAAK5Q,EAAKw8C,kBACXC,YAAaN,EACbO,MAAO7zB,EAAOm1B,aACOngB,YAAahV,EAAOgV,eACtC/sB,KAAK,SAASymB,GACjB1O,EAAO0O,aAAeA,EACtB6kB,EAAIvjC,QAAQgQ,KAIbuzB,EAAIvjC,QAAQgQ,KAId,MACD,IAAK,OAEJuzB,EAAIvjC,QAAQgQ,GACZ,MACD,IAAK,OACJ1sB,EAAEyU,KAAK5Q,EAAK48C,kBAAkB/zB,IAAS/X,KAAK,SAASymB,GACpD1O,EAAO0O,aAAeA,EACtB6kB,EAAIvjC,QAAQgQ,KAKf,OAAOuzB,EAAIpkC,WAOZ6kC,iBAAkB,SAASh0B,GAC1B,IAAI7oB,EAAOC,KACP68C,EAAc98C,EAAK0iB,WACnB8e,EAAaxhC,EAAKqS,mBAAmBgB,YAEzCwV,EAAO1pB,OAAS0pB,EAAO1pB,WAEjB,IAAI0+B,EAAc79B,EAAK4F,WAAWqM,aAExC,OAAO4W,EAAOwzB,YACb,IAAK,UACJxzB,EAAO1pB,QACN49C,iBAAkB/8C,EAAK4F,WAAWo3C,gBAAgBnkB,KAAK,KACvDokB,iBAAkBzb,EAAWnX,YAActe,OAAOoI,QAAQ+oC,WAC3Crf,YAAaA,QAEkB,IAAxBhV,EAAO0O,eACd1O,EAAO1pB,OAAOo4B,aAAe1O,EAAO0O,cAEpD,MACD,IAAK,OACJ1O,EAAO1pB,QACNo4B,aAAc1O,EAAO0O,aACrBwlB,iBAAkB/8C,EAAK4F,WAAWo3C,gBAAgBnkB,KAAK,KACvDskB,YAAan9C,EAAK4F,WAAWq1C,aAC7BgC,iBAAkBzb,EAAWnX,YAActe,OAAOoI,QAAQ+oC,WAC1Dhf,SAAUrV,EAAOqV,SACjBuc,WAAY5xB,EAAO4xB,YAQtBqC,EAAY37C,KAAK0nB,GACjB7oB,EAAK8jB,SAASg5B,GACd98C,EAAKgiB,gBAAgB86B,IAOtBO,oBAAqB,SAAS79C,GAC7B,IACIiM,EADOxL,KACMyiB,WACjBjX,EAAMiR,OAAOld,EAAO,GAFTS,KAGN6jB,SAASrY,GAHHxL,KAIN+hB,gBAAgBvW,IAMtBwO,YAAa,SAASF,GAErB,GADW9Z,KACH8iB,wBAAyB,CAChC,IACI5N,EAHMlV,KAEY2F,WACCuP,MACnBmoC,EAJMr9C,KAIcyiB,WACpB9W,KACJzP,EAAE2E,KAAKw8C,EAAc,SAAS99C,EAAOiM,GACpC,IAAIod,KACJA,EAAO1pB,OAASsM,EAAMtM,WACtB0pB,EAAOxC,WAAa5a,EAAMsyC,YAActyC,EAAM4a,WAC9CwC,EAAO1R,YAAc1L,EAAM0L,YAC3B0R,EAAOi1B,gBAAkBryC,EAAMqyC,gBAC/Bj1B,EAAOwzB,WAAa5wC,EAAM4wC,WAC1BxzB,EAAO5W,aAAexG,EAAMwG,aAC5B4W,EAAO4xB,WAAahvC,EAAMgvC,WAC1B7uC,EAAQzK,KAAK0nB,KAEd9O,EAAa5E,GAA4B,GAAlBvJ,EAAQ5J,OAAe,GAAK0S,KAAKqB,OAAOnK,KASjE2xC,iBAAkB,SAAS10B,GAC1B,IACIpd,EADOxL,KACMyiB,WACb86B,EAAQ,EAMZ,OALArhD,EAAE2E,KAAK2K,EAAO,SAAS6G,EAAK7G,GACxBA,EAAM4a,YAAcwC,EAAOxC,YAC7Bm3B,MAGKA,GAQRG,WAAY,SAASM,GAIpB,IAFA,IAAIv4C,KAEI5B,GAHRm6C,EAAUA,OAGUj8C,OAAQ8B,EAAI,EAAGA,IAClC4B,EAAOvE,KAAK88C,EAAQn6C,EAAI,GAAG2H,OAE5B,OAAQ/F,EAAO1D,OAAS,EAAK0D,EAAS,MChUxCvJ,EAAEmV,MAAMjS,OAAO,8BAOX0S,eAAgB,SAAU9Q,GAEtBhB,KAAKyM,OAAOzL,GAGZ,IAAI2E,EAAa3F,KAAK2F,WACtBA,EAAWD,QAAUC,EAAWD,SAAW,GAG3CC,EAAWyY,YAAc,QAGzBzY,EAAW+M,UAAW,EAItB/M,EAAWjE,eAAiBiE,EAAWjE,iBAAkB,GAO7Dif,cAAe,WACX,IACIrc,EADOtE,KACSyR,cAAcwN,YAAY,UAG9C,OAAO/iB,EAAEqjB,SAASjb,GACdoB,QALO1F,KAKO2F,WAAWD,QACzBya,SANOngB,KAMQ2F,WAAWya,UAAY,GACtC3K,SAPOzV,KAOQ2F,WAAW8P,YAQlCmL,eAAgB,WAEZ,OAAO5gB,KAAK2gB,iBAMhBY,mBAAoB,WAEhBvhB,KAAKyM,SAELzM,KAAKykB,WAAW1jB,SAAS,0BAM7BugB,WAAY,WAERthB,KAAKyM,SAELzM,KAAKykB,WAAW1jB,SAAS,0BAO7B+xB,SAAU,WAEN,OADW9yB,KAAKoS,mBACJ0gB,YAOhBgD,cAAe,WACX,IAAI/1B,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBqM,EAAerM,EAAWqM,cAAgB,GAS9C,OAPIrM,EAAWs4C,gCACXjsC,EAAeA,EAAeA,EAAe,IAAMrM,EAAWs4C,8BAAgCt4C,EAAWs4C,+BAI7Gl+C,EAAKqS,mBAAmBrE,eAEjBhO,EAAK2R,YAAYwJ,cAAc4a,eAClC1a,SAAUzV,EAAWwP,GACrBD,MAAOvP,EAAWuP,OAAS,GAC3BlD,aAAcA,GAAgB,GAC9BE,YAAavM,EAAWuM,cACzB4J,OAAO,WAEN,OADA/b,EAAKqS,mBAAmB0C,aACjB1G,UAAYA,UAAU,QAAK3O,KAQ1C82B,YAAa,WACEv2B,KAAKoS,mBACXmkB,YAAYv2B,KAAK2F,WAAWwP,KAOrCqY,cAAe,WACAxtB,KAEF2F,WAAW8P,UAFTzV,KAIFk+C,mBASbhiC,oBAAqB,SAAUhd,GAC3B,IAGIg0C,GAFJh0C,EAASA,OAEYg0C,UAAW,EAHrBlzC,KAKN+S,eAAe,gBAAiBkD,OAL1BjW,KAKwCkzC,QAASA,KAOhEgL,gBAAiB,WACb,IAAIn+C,EAAOC,KAGXD,EAAKqS,mBAAmBiC,0BAExBtU,EAAK+yB,WAAW5L,KAAK,WACjB,OAAOnnB,EAAK+1B,kBACbjlB,KAAK,SAAUpL,GAEd,GAAc,MAAVA,GAA4B,GAAVA,GAAoC,YAAlBA,EAAOA,QAAwC,YAAhBA,EAAOlH,KAC1E,OAAOwB,EAAKw2B,cACT,GAAoB,uBAAhB9wB,EAAOlH,KACd,IAEIwB,EAAKqS,mBAAmBwkB,qBAAqBnxB,EAAOyvB,UACtD,MAAOt3B,OAGdie,KAAK,SAAU1Z,GAEd,IAEI,IAAIg8C,EAAYryC,OAAOgB,KAAKsxC,kBAAkBj8C,GAC1C4R,OAAiC,IAAhB,GACjBA,QAAWjI,OAAOC,aAAaC,YAAY,6BAC3CmyC,EAEJp+C,EAAKqS,mBAAmBgjB,YAAYrhB,GACtC,MAAOnW,QAOjBwjB,cAAe,SAAUN,EAAeiC,GAChCjC,IACA9gB,KAAKmY,sBAAsB4K,EAAOE,YAClCjjB,KAAKyM,QAAQqU,EAAeiC,KAIpC5K,sBAAuB,SAAUzN,GAC7B,YAAqB,IAAVA,EAA8B1K,MAE3B,SAAV0K,EACA1K,KAAKulB,qBAAqBvlB,KAAKkhB,cAAcjjB,MAAM,aAAcyM,EAAO,aAExE1K,KAAKulB,qBAAqBvlB,KAAKkhB,cAAc1gB,IAAI,aAAc,IAG5DR,OAGXulB,qBAAsB,SAAU84B,GAC5B,OAAOniD,EAAE,QAASmiD,IAOtBtkC,UAAW,WAEP,OAAO,KCpNf7d,EAAEmV,MAAMjS,OAAO,iCAKX0S,eAAgB,SAAU9Q,GAGtBhB,KAAKyM,OAAOzL,GAGZ,IAAI2E,EAAa3F,KAAK2F,WACtBA,EAAWD,QAAWC,EAAWD,SAAiC,KAAtBC,EAAWD,QAAiBC,EAAWD,QAAU,oCAC7FC,EAAW24C,WAAa34C,EAAW24C,WAAa34C,EAAW24C,WAAa,EAGxE34C,EAAWyY,YAAc,QAGzBpe,KAAKme,mCAGLxY,EAAW+M,UAAW,GAK1BiO,cAAe,WACX,IACIhb,EADO3F,KACW2F,WAClBrB,EAFOtE,KAESyR,cAAcwN,YAAY,aAE9C,OAAO/iB,EAAEqjB,SAASjb,GACdoB,QAASC,EAAWD,WAM5Bkb,eAAgB,WAIZ,OAHW5gB,KAGC2gB,iBAMhB49B,gBAAiB,SAAUtI,GACvB,IACItwC,EADO3F,KACW2F,WAEtB,OAHW3F,KAGC0R,YAAY6sC,iBACpBnjC,SAAUzV,EAAWwP,GACrBnD,aAAcrM,EAAWqM,cAAgB,GACzCE,YAAavM,EAAWuM,YACxB+jC,YAAaA,EACbzrB,UAROxqB,KAQSuqB,kBAQxBgM,YAAa,WACT,IACI5wB,EADO3F,KACW2F,WADX3F,KAGKoS,mBACXmkB,YAAY5wB,EAAWwP,KAMhC2d,SAAU,WAGN,OAFW9yB,KACKoS,mBACJ0gB,cChFpB52B,EAAEmV,MAAMjS,OAAO,4BAOX0S,eAAgB,SAAU9Q,GAEtBhB,KAAKyM,OAAOzL,GAGZ,IAAI2E,EAAa3F,KAAK2F,WACtBA,EAAW+M,UAAW,EACtB/M,EAAWyY,YAAc,QAGzBpe,KAAKme,oCAOTwC,cAAe,WACX,IACIrc,EADOtE,KACSyR,cAAcwN,YAAY,QAG9C,OAAO/iB,EAAEqjB,SAASjb,GACd4S,YALOlX,KAKW2F,WAAWuR,YAC7BwR,MANO1oB,KAMK2F,WAAWqY,WACvBvI,SAPOzV,KAOQ2F,WAAW8P,YAOlC6L,WAAY,WACRthB,KAAKyM,SACLzM,KAAKykB,WAAW1jB,SAAS,0BAO7B6f,eAAgB,WAEZ,OAAO5gB,KAAK2gB,iBAMhBY,mBAAoB,WAChBvhB,KAAKyM,SACLzM,KAAKykB,WAAW1jB,SAAS,0BAO7BsK,QAAS,SAAUqP,KAQnBqH,gBAAiB,SAAUvW,KAQ3BuO,UAAW,WACP,OAAO,KClFf7d,EAAEmV,MAAMjS,OAAO,mCAMXQ,KAAM,SAAUoB,GAEZhB,KAAKyM,OAAOzL,GACZhB,KAAKw+C,YAAc/gD,OAAOghD,UAAUD,YAEpC,IAAI74C,EAAa3F,KAAK2F,WACtBA,EAAW+4C,aAAmE,IAArD5yC,OAAOgB,KAAK4I,aAAa/P,EAAW+4C,cAOjE/9B,cAAe,WACX,IACIrc,EADOtE,KACSyR,cAAcwN,YAAY,eAI9C,OADW/iB,EAAEqjB,SAASjb,EAJXtE,KAI0B2F,aAQzC0F,QAAS,SAAUqP,GAEf,OAAO1a,KAAKyM,OAAOiO,IAQvBqH,gBAAiB,SAAUvW,GAEvBxL,KAAK6jB,SAASrY,GAAO,IAOzBsN,kBAAmB,aASnB6lC,mBAAoB,SAAUC,EAAiBlxC,GAC3C,IAAI3N,EAAOC,KAEX,QAAkC,IAAtBD,EAAgB,YAA5B,CAkBA,OAAOA,EAAKy+C,YAAYG,mBAZR,SAAUvgD,GAClBwgD,GACAA,EAAgBxgD,IAGV,SAAU+D,GACpB,IAAIq3B,EAAaz5B,EAAK8+C,gBAAgB18C,GAElCuL,GACAA,EAAc8rB,KAdd9rB,GACAA,EAAc5B,OAAOC,aAAaC,YAAY,wCAAwCnG,QAAQ,MAAO9F,EAAK4F,WAAWpH,QAwBjIsgD,gBAAiB,SAAU18C,GACvB,IAAIq3B,EAAa,GAGjB,OAAQr3B,EAAMwS,MACV,KAAKxS,EAAM28C,kBACX,KAAK,EACDtlB,EAAa1tB,OAAOC,aAAaC,YAAY,wCAC7C,MACJ,KAAK7J,EAAM48C,qBACX,KAAK,EACDvlB,EAAa1tB,OAAOC,aAAaC,YAAY,2CAC7C,MACJ,KAAK7J,EAAM68C,QACX,KAAK,EACDxlB,EAAa1tB,OAAOC,aAAaC,YAAY,8BAC7C,MACJ,QACIwtB,EAAa,OAAS1tB,OAAOC,aAAaC,YAAY,wCAI9D,OAAOwtB,GAQXylB,iBAAkB,SAAUj+C,GACxB,IAAIw9C,EAAcx9C,EAAKisB,MAAM,MAAQ,GAErC,IAAKuxB,EAAa,OAAOx9C,EAEzB,IACI,IAAIk+C,EAAW5/B,WAAWk/B,EAAY,GAAG/gC,QACrC0hC,EAAY7/B,WAAWk/B,EAAY,GAAG/gC,QAE1C,OAAOyhC,EAASE,YAAY,IAAM,IAAMD,EAAUC,YAAY,IAChE,MAAOxhD,GACL,OAAOoD,MClInB9E,EAAEmV,MAAMjS,OAAO,mCAKX0S,eAAgB,SAAU9Q,GACXhB,KAGNyM,OAAOzL,GAEZ,IAAI2E,EALO3F,KAKW2F,WAGtBA,EAAWkpB,SAAW,UACtBlpB,EAAWyV,SATApb,KASgB2F,WAAWwP,GACtCxP,EAAW05C,eAA4C,IAAxB15C,EAAW05C,WAA4BvzC,OAAOgB,KAAK4I,aAAa/P,EAAW05C,WAC1G15C,EAAW25C,aAAwC,IAAtB35C,EAAW25C,SAA0BxzC,OAAOgB,KAAK4I,aAAa/P,EAAW25C,SACtG35C,EAAW45C,UAAY55C,EAAW25C,QAIlC35C,EAAW65C,SAAW75C,EAAW65C,aACjC75C,EAAW85C,UAAY95C,EAAW85C,cAE9B95C,EAAW6F,OAnBJxL,KAoBF0/C,wBASb/+B,cAAe,WACX,IAAI5gB,EAAOC,KACPsE,EAAWvE,EAAK0R,cAAcwN,YAAY,eAC1Ck9B,EAAM,IAAIjgD,EAAE0b,SAyBhB,OAvBA7X,EAAK4F,WAAWkpB,SAAW,UAC3B9uB,EAAK4F,WAAWyV,SAAWrb,EAAK4F,WAAWwP,GAG3CjZ,EAAEyU,KAAK5Q,EAAK4/C,sBACP9uC,KAAK,SAAU+uC,GAGZ7/C,EAAK8/C,eAEL9/C,EAAK4F,WAAW25C,QAAUxzC,OAAOgB,KAAK4I,aAAakqC,KAAS,EAE5D,IAAIx7C,EAAOlI,EAAEqjB,SAASjb,EAAUvE,EAAK4F,YACjCm6C,cAAe//C,EAAK+/C,cACpBC,oBAAqBhgD,EAAKggD,sBAI9BhgD,EAAK8jB,SAASpP,KAAKqB,OAAO/V,EAAK4F,WAAWq6C,aAE1C7D,EAAIvjC,QAAQxU,KAGb+3C,EAAIpkC,WAOf4nC,mBAAoB,WAIhB,MAAY,aAHD3/C,KACKmT,WADLnT,KAIK0R,YAAYiuC,mBAJjB3/C,KAIyC2F,aAQxD4e,gBAAiB,WAIb,OAHWvkB,KACMyiB,YAQrB+jB,gBAAiB,WACb,MAAO,eASXsZ,cAAe,WACX,IACIn6C,EADO3F,KACWgB,KAClBA,KACAi/C,EAAkBt6C,EAAW25C,QAAU35C,EAAW85C,UAAY95C,EAAW65C,SAM7E,OAJAtjD,EAAE2E,KAAKo/C,EAAiB,SAAS5tC,EAAKzC,GAClC5O,EAAKE,MAAOiU,GAAIvF,EAAKuF,GAAI3J,MAAOoE,EAAKpE,UAGlCxK,GAMX++C,oBAAqB,SAAUG,GAC3B,IACIv6C,EADO3F,KACWgB,KAClBm/C,KAGAC,EAAY,SAAUF,EAAQG,GAC9B,IAAIC,GAAU,EAOd,OANApkD,EAAE2E,KAAK8E,EAAWq6C,WAAWx0C,MAAO,SAAU6G,EAAK7G,IAC1C80C,GAAW90C,EAAM2J,IAAM+qC,GAAU10C,EAAMA,MAAM9I,QAAQ29C,IAAY,IAClEC,GAAU,KAIXA,GAwBX,OApBI36C,EAAW25C,QAEXpjD,EAAE2E,KAAK8E,EAAW65C,SAAU,SAAUntC,EAAKrR,GACvCm/C,EAAYj/C,MACRiU,GAAInU,EAAKmU,GACTtJ,KAAM7K,EAAKwK,MACX80C,QAASF,EAAUp/C,EAAKmU,GAAI+qC,OAKpChkD,EAAE2E,KAAK8E,EAAW85C,UAAW,SAAUptC,EAAKrR,GACxCm/C,EAAYj/C,MACRiU,GAAInU,EAAKmU,GACTtJ,KAAM7K,EAAKwK,MACX80C,QAASF,EAAUF,EAAQl/C,EAAKmU,QAKrCgrC,GAIXI,cAAe,SAAUL,EAAQM,GAC7B,IAAIzgD,EAAOC,KAEX9D,EAAE2E,KAAKd,EAAK4F,WAAWq6C,WAAWx0C,MAAO,SAAU6G,EAAKrR,GAChDjB,EAAK4F,WAAW25C,QACZt+C,EAAKmU,IAAMqrC,GAEXtkD,EAAE2E,KAAKd,EAAK4F,WAAWq6C,WAAWx0C,MAAM6G,GAAY,MAAG,SAAUorB,EAAWgjB,GACpEP,GAAUO,GAEV1gD,EAAK4F,WAAWq6C,WAAWx0C,MAAM6G,GAAY,MAAEoK,OAAOghB,EAAW,KAItEz8B,EAAKmU,IAAM+qC,GAElBhkD,EAAE2E,KAAKd,EAAK4F,WAAWq6C,WAAWx0C,MAAM6G,GAAY,MAAG,SAAUorB,EAAWgjB,GACpED,GAAWC,GAEX1gD,EAAK4F,WAAWq6C,WAAWx0C,MAAM6G,GAAY,MAAEoK,OAAOghB,EAAW,OAKjF19B,EAAK8jB,SAASpP,KAAKqB,OAAO/V,EAAK4F,WAAWq6C,cAI9CU,WAAY,SAAUR,EAAQM,GAC1B,IAAIzgD,EAAOC,KAEX9D,EAAE2E,KAAKd,EAAK4F,WAAWq6C,WAAWx0C,MAAO,SAAU6G,EAAKrR,GAChDjB,EAAK4F,WAAW25C,QACZt+C,EAAKmU,IAAMqrC,GAEXzgD,EAAK4F,WAAWq6C,WAAWx0C,MAAM6G,GAAY,MAAEnR,KAAKg/C,GAEjDl/C,EAAKmU,IAAM+qC,GAElBngD,EAAK4F,WAAWq6C,WAAWx0C,MAAM6G,GAAY,MAAEnR,KAAKs/C,KAG5DzgD,EAAK8jB,SAASpP,KAAKqB,OAAO/V,EAAK4F,WAAWq6C,cAG9CH,aAAc,WACV,IAAI9/C,EAAOC,KACXD,EAAK4F,WAAWq6C,WAAajgD,EAAK4F,WAAWq6C,aACzCW,UAAW5gD,EAAK4F,WAAWg7C,UAC3BC,WAAY7gD,EAAK4F,WAAWi7C,WAC5BC,aAAc9gD,EAAK4F,WAAWk7C,aAC9BC,cAAe/gD,EAAK4F,WAAWm7C,cAC/Bt1C,MAAOzL,EAAK4F,WAAW6F,QAQ/B2W,SAAU,WAGN,GAFWniB,KAEF2F,WAAWq6C,WAChB,IAAIe,EAHG/gD,KAGW2F,WAAWq6C,WAAWx0C,WAExCu1C,EALO/gD,KAKO2F,WAAW6F,MAI7B,IAAK,IAAI3H,EAAI,EAAGoY,EAAI8kC,EAAOh/C,OAAQ8B,EAAIoY,EAAGpY,IAAK,CAC3C,IAAI7C,EAAO+/C,EAAOl9C,GAClB,GAAI7C,GAAQA,EAAKwK,MAAMzJ,OAAS,EAC5B,OAAO,EAIf,OAAO,GAOX29C,qBAAsB,WAMlB,IALA,IACI/5C,EADO3F,KACW2F,WAClBo7C,EAASp7C,EAAW6F,MACpB/F,KAEK5B,EAAI,EAAGoY,EAAI8kC,EAAOh/C,OAAQ8B,EAAIoY,EAAGpY,IAAK,CAC3C,IAAI2H,EAAQu1C,EAAOl9C,GACnB4B,EAAOvE,MAAOiU,GAAI3J,EAAM,GAAIA,MAAOA,EAAM,KAG7C7F,EAAW6F,MAAQ/F,KChQ3BvJ,EAAEmV,MAAMjS,OAAO,8BAKX0S,eAAgB,SAAU9Q,GACtB,IAAIjB,EAAOC,KAGXD,EAAK0M,OAAOzL,GAEZ,IAAIgT,EAAOjU,EAAKqS,mBAGZzM,EAAa3F,KAAK2F,WAElBq7C,EAAwBtiD,OAAOiH,EAAWs7C,UAAY,EACtDC,EAAiD,oBAAtB,sBAAoF,IAAvCC,gBAAiC,kBAAoBziD,OAAOyiD,gBAAgBC,mBAAqB,QAM7K,GAJAz7C,EAAWs7C,QAAUD,GAAyBE,EAC9Cv7C,EAAW07C,SAAW3iD,OAAOiH,EAAW07C,WAAa,IACrD17C,EAAW27C,gBAAkB37C,EAAW27C,iBAAmB,GAEvD37C,EAAW27C,gBAAgBv/C,OAAS,GAAK4D,EAAW27C,gBAAgB5+C,QAAQ,KAAO,EAAG,CAItF,IAHA,IAAI6+C,EAAmB57C,EAAW27C,gBAAgBz7C,QAAQ,OAAQ,IAAIonB,MAAM,KACxEu0B,KAEK39C,EAAI,EAAGA,EAAI09C,EAAiBx/C,OAAQ8B,IACzC,GAAI09C,EAAiB19C,GAAG9B,OAAS,EAC7By/C,EAActgD,KAAK,KAAOqgD,EAAiB19C,QACxC,CAES09C,EAAiB7+C,QAAQ6+C,EAAiB19C,IACtD09C,EAAiB9kC,OAAO5Y,EAAG,GAInC8B,EAAW27C,gBAAkBE,EAAc5oB,KAAK,KAGpDjzB,EAAWq4B,OAASr4B,EAAWq4B,QAAUj+B,EAAK2R,YAAY+vC,kBAC1D97C,EAAW44B,UAAY54B,EAAW44B,gBAAa9+B,EAC/CkG,EAAW8P,SAAW3J,OAAOgB,KAAK4I,aAAa/P,EAAW8P,YAAa,EACvE9P,EAAWq2B,cAAoE,OAArDlwB,OAAOgB,KAAK4I,aAAa/P,EAAWq2B,eAAyBr2B,EAAW8P,WAAY3J,OAAOgB,KAAK4I,aAAa/P,EAAWq2B,aAElJr2B,EAAW0V,YAAerH,EAAK9U,QAAU8U,EAAK9U,OAAO8B,MAAQgT,EAAK9U,OAAO8B,KAAK8c,YAAe9J,EAAK9U,OAAO8B,KAAK8c,YAAc,GAC5HnY,EAAW+8B,gBAAkB/8B,EAAW+8B,kBAAmB,EAG3D3iC,EAAKsjC,MAAQ19B,EAAW6F,UACxBzL,EAAKu+C,WAAav+C,EAAKsjC,MAAMthC,QAOjC4e,cAAe,WAgBX,IAfA,IAAI5gB,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBrB,EAAWvE,EAAK0R,cAAcwN,YAAY,UAG1C7a,EAAOlI,EAAEqjB,SAASjb,GAClB4Q,MAAOpJ,OAAOgB,KAAKslC,YAAYryC,EAAKujC,kBACpC7tB,SAAU9P,EAAW8P,SACrBisC,UAA+B,IAApB3hD,EAAKu+C,WAChBqD,QAA6B,IAApB5hD,EAAKu+C,WACd5b,gBAAiB/8B,EAAW+8B,kBAI5Bh3B,EAAQ,GACH7H,EAAI,EAAGA,EAAI9D,EAAKu+C,WAAYz6C,IAAK,CACtC,IAAI+9C,GAAQzsC,GAAIpV,EAAKsjC,MAAMx/B,GAAG,GAAIg+C,SAAU9hD,EAAKsjC,MAAMx/B,GAAG,IAG1D6H,GAFW3L,EAAK+hD,iBAAiBF,GAMrC,OADAx9C,EAAOrE,EAAKgiD,iBAAiB39C,EAAMsH,IAQvCkV,eAAgB,WACZ,OAAO5gB,KAAK2gB,iBAQhBmhC,iBAAkB,SAAUF,GACxB,IAAI7hD,EAAOC,KACP0W,EAAO3W,EAAKoT,UACZ6uC,EAAejiD,EAAKkiD,sBACpB39C,EAAWvE,EAAK0R,cAAcwN,YAAY+iC,GAG1CjoB,EAAOh6B,EAAK0rB,kBAAyB1rB,EAAKmiD,aAAaN,GAAvB,GAWpC,OATW1lD,EAAEqjB,SAASjb,GAClB6Q,GAAIysC,EAAKzsC,GACTuB,KAAMA,EACNqjB,IAAKA,EACLiC,YAAaj8B,EAAK4F,WAAWq2B,YAC7BmmB,SAAUP,EAAKC,SACfpsC,SAAU1V,EAAK4F,WAAW8P,YAWlCysC,aAAc,SAAUN,GACpB,IACIj8C,EADO3F,KACW2F,WAClBqO,EAFOhU,KAEKoS,mBAEhB,OAJWpS,KAIC0R,YAAY0wC,kBACpBhnC,SAAUzV,EAAWwP,GACrBD,MANOlV,KAMKsjC,iBACZtxB,aAAcrM,EAAWqM,aACzBE,YAAavM,EAAWuM,YACxBmwC,OAAQT,EAAKzsC,GACbqV,UAAWxW,EAAKrO,WAAW6kB,UAC3BnP,YAAa1V,EAAW0V,eAUhC0mC,iBAAkB,SAAU39C,EAAMyB,GAC9B,OAAOzB,EAAKyB,QAAQ,YAAaA,IASrCy8C,iBAAkB,SAAU1yC,EAAMyyC,GAC9B,IAAItiD,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBuP,EAAQnV,EAAKujC,kBAAoBx3B,OAAOgB,KAAK+V,UAAUw/B,GAAU,OAASA,EAAS,IAAM,QAAUA,EAAS,MAEhH,OAAOtiD,EAAK2R,YAAY6wC,kBACpBxoB,IAAKp0B,EAAW44B,UAChBnjB,SAAUzV,EAAWwP,GACrBD,MAAOA,EACPlD,aAAcrM,EAAWqM,aACzBE,YAAavM,EAAWuM,YACxBmJ,YAAa1V,EAAW0V,cACzB6L,KAAK,WAGJnnB,EAAKu+C,WAAav+C,EAAKu+C,WAAa,EAGpCv+C,EAAKsjC,MAAQnnC,EAAEsmD,KAAKziD,EAAKsjC,MAAO,SAAUof,GACtC,OAAOA,EAAS,IAAMJ,OASlCtoC,UAAW,WAEP,OAAO,GAQX8J,SAAU,SAAUrY,EAAOsY,GACZ9jB,KAGNqjC,MAAQ73B,MAHFxL,KAINs+C,WAJMt+C,KAIYqjC,MAAMthC,OAJlB/B,KAONyM,OAAOjB,EAAOsY,IAOvBrB,SAAU,WACN,OAAOziB,KAAKqjC,OAQhBh4B,QAAS,SAAUqP,GACf,IAEI3G,EAFAhU,EAAOC,KACP2F,EAAa5F,EAAK4F,WAElB0mC,GAAS,EAMb,GAHAtsC,EAAKmiB,qBAAqB,IAGtBvc,EAAW+M,UAAY/M,EAAW8P,SAAU,CAC5C,IAAIitC,EAAS3iD,EAAKkiB,MAAQliB,EAAKkiB,KAAKkJ,iBAAiBhd,MAAMpO,GAE3D,GAAIA,EAAKu+C,YAAc,IAAMoE,IACR3iD,EAAKkiB,MAAOliB,EAAKkiB,KAAKtc,WAAW2Q,cAG9CvC,EAAUhU,EAAKiM,YAAY,0BAA0BkT,WAAW,UAAWvZ,EAAWuR,aACtFwD,EAAgBxZ,MAAMgU,MAAOvP,EAAWuP,MAAOnB,QAASA,IACxDs4B,GAAS,GAKrB,OAAOA,GAMXsW,eAAgB,WACZ,IAAI5iD,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBqO,EAAOjU,EAAKqS,mBACZpR,KACA4hD,EAAS7iD,EAAKsR,MAAMqY,4BAExB1oB,EAAK4hD,EAAS,SAAW7iD,EAAKujC,iBAC9BtiC,EAAK4hD,EAAS,YAAcj9C,EAAWwP,GACvCnU,EAAK4hD,EAAS,gBAAkBj9C,EAAWqM,aAC3ChR,EAAK4hD,EAAS7iD,EAAKsR,MAAMoxB,eAAiB98B,EAAWuM,YACrDlR,EAAKjB,EAAKsR,MAAMixB,2BAA6B,aAAetuB,EAAKrO,WAAW6kB,UAC5ExpB,EAAK4hD,EAAS,eAAiBj9C,EAAW0V,YAE1C,IACyC,oBAA1B,oBACPra,EAAK6hD,qBAAuB7uC,EAAKrO,WAAW6kB,UAE5CxpB,EAAiB,WAAIgT,EAAKrO,WAAW6kB,UAE3C,MAAO5sB,GACLoD,EAAiB,WAAIgT,EAAKrO,WAAW6kB,UAGzC,OAAOxpB,GAOXsiC,eAAgB,WACZ,OAAOtjC,KAAK2F,WAAWuP,OAG3B8O,cAAe,SAAUtJ,GACrB,IAAI3a,EAAOC,KACP2F,EAAa5F,EAAK4F,WAEtB,GAAImG,OAAOgB,KAAK4I,aAAa/P,EAAW+M,UACpC,GAAI3S,EAAKkiB,OAA2C,IAAnCliB,EAAKkiB,KAAKtc,WAAWqc,WAClC,IAAKjiB,EAAKoiB,aAAgBpiB,EAAKmhB,aAAa4hC,QAAQ,MAAM9hD,KAAK,WAE3D,OADAjB,EAAKgjD,kBAAkBroC,EAAiB/U,IACjC,OAGX,IAAK5F,EAAKoiB,WAEN,OADApiB,EAAKgjD,kBAAkBroC,EAAiB/U,IACjC,EAKnB,OAAO,GAGXo9C,kBAAmB,SAAUroC,EAAiB/U,GAC1C,IACIoO,EADO/T,KACQgM,YAAY,wBAAwBkT,WAAW,UAAWvZ,EAAWuR,aACxFwD,EAAgBxZ,MAAMgU,MAAOvP,EAAWuP,MAAOnB,QAASA,KAM5DkuC,oBAAqB,WACjB,MAAO,gBCzTf/lD,EAAEmV,MAAMjS,OAAO,2BAMX0S,eAAgB,SAAU9Q,GACtB,IAAIjB,EAAOC,KAEXA,KAAKyM,OAAOzL,GAEZ,IACI2E,GADA5F,EAAOC,MACW2F,WAMtB,GAJAA,EAAWs7C,QAAUviD,OAAOiH,EAAWs7C,WAA0C,oBAAtB,sBAAoF,IAAvCE,gBAAiC,kBAAoBziD,OAAOyiD,gBAAgBC,mBAAqBz7C,EAAWs7C,QAAUviD,OAAOiH,EAAWs7C,UAAY,SAC5Pt7C,EAAWq9C,SAAWtkD,OAAOiH,EAAW07C,WAAa,IACrD17C,EAAW27C,gBAAkB37C,EAAW27C,iBAAmB,GAEvD37C,EAAW27C,gBAAgBv/C,OAAS,GAAK4D,EAAW27C,gBAAgB5+C,QAAQ,KAAO,EAAG,CAEtF,IADA,IAAI6+C,EAAmB57C,EAAW27C,gBAAgBr0B,MAAM,KAC/CppB,EAAI,EAAGA,EAAI09C,EAAiBx/C,OAAQ8B,IACzC09C,EAAiB19C,GAAK,KAAO09C,EAAiB19C,GAElD8B,EAAW27C,gBAAkBC,EAAiB3oB,KAAK,KAGvDjzB,EAAWq4B,OAASj+B,EAAK2R,YAAYywB,eAAeC,OAAO,yBAA2B,wBACtFz8B,EAAWy4B,QAAUr+B,EAAK2R,YAAYywB,eAAeC,OAAO,yBAA2B,+BACvFz8B,EAAW44B,UAAY54B,EAAW44B,gBAAa9+B,EAC/CkG,EAAWq2B,YAAmE,OAArDlwB,OAAOgB,KAAK4I,aAAa/P,EAAWq2B,cAAwBlwB,OAAOgB,KAAK4I,aAAa/P,EAAWq2B,aACzHr2B,EAAWs9C,QAAUn3C,OAAOgB,KAAKslC,YAAYzsC,EAAWuP,OACxDvP,EAAWu9C,kBAA2CzjD,IAA5BkG,EAAWu9C,cAA0D,OAA5Bv9C,EAAWu9C,cAA+Bp3C,OAAOgB,KAAK4I,aAAa/P,EAAWu9C,cAEjJ,IAAI3f,EAAavjC,KAAKgM,YAAY,cAC9Bw3B,EAAaxjC,KAAKgM,YAAY,cAGlCrG,EAAW2e,aAAe,GAC1B3e,EAAW89B,cAAmChkC,IAAxBkG,EAAW89B,UAAyB33B,OAAOgB,KAAK4I,aAAa/P,EAAW89B,UAC9F99B,EAAW49B,WAAa59B,EAAW49B,YAAcA,EACjD59B,EAAW69B,WAAa79B,EAAW69B,YAAcA,EACjD79B,EAAW+9B,WAAa/9B,EAAW49B,WAGnCxjC,EAAKsjC,MAAQ19B,EAAW6F,UACxBzL,EAAKu+C,WAAav+C,EAAKsjC,MAAMthC,OAE7B4D,EAAWqM,aAAehS,KAAKwI,OAAO7C,WAAWqM,cAAgBrM,EAAWqM,cAAgB,IAUhG2O,cAAe,SAAUwiC,EAAaC,GAClC,IAAIrjD,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBrB,EAAWvE,EAAK0R,cAAcwN,YAAY,OAC1CvI,EAAO3W,EAAKoT,UACZsW,EAAQ,IAAIvtB,EAAE0b,SAElBjS,EAAW6F,MAAQ,IAAqB43C,EAAeC,aAAcD,EAAevB,WAAa9hD,EAAKyL,MACtG,IAAIpH,EAAOlI,EAAEqjB,SAASjb,EAAUqB,GAC5B29C,iBAAkBvjD,EAAKujD,iBACvBC,QAASxjD,EAAKwjD,UAGlB,GAA6B9jD,MAAzBM,EAAK4F,WAAW6F,MAAoB,CAEpC,IAAIg4C,EAAezjD,EAAK4F,WAAW6F,MAAMzJ,OAEpB,IAAjByhD,GACA/5B,EAAM7Q,QAAQxU,GAGlBlI,EAAE2E,KAAKd,EAAK4F,WAAW6F,MAAO,SAAU6G,EAAK7G,GACzC,IAAIxK,KAEJA,EAAKqiD,aAAe73C,EAAM,GAC1BxK,EAAK6gD,SAAWr2C,EAAM,GACtBxK,EAAKkR,YAAcnS,EAAK4F,WAAWuM,YACnClR,EAAKgR,aAAejS,EAAKkS,kBACzBjR,EAAKspC,MAAQvqC,EAAK4F,WAAWuP,MAC7BlU,EAAKyU,SAAW1V,EAAK4F,WAAW8P,SAChCzU,EAAKyiD,SAAW1jD,EAAK4F,WAAW89C,SAEhC,IAAIzvC,EAAOjU,EAAKqS,mBACZ4B,GAAQA,EAAKrO,YAAcqO,EAAKrO,WAAW6kB,YAC3CxpB,EAAKwpB,UAAYxW,EAAKrO,WAAW6kB,WAGxB,cAAT9T,GACAxa,EAAEyU,KAAK5Q,EAAK2jD,iBAAiB1iD,EAAMoiD,IAAiBvyC,KAAK,SAAUjB,GAC/D4zC,IAEI13C,OAAO63C,OAAOC,qBAA6E,IAAtD93C,OAAO63C,OAAOC,oBAAoBlhD,QAAQ,UAC/EkN,EAAOA,EAAKsP,WAAW,wBAAyB,sBAGpD9a,EAAOrE,EAAK8jD,gBAAgBz/C,EAAMrE,EAAK4F,WAAWwP,GAAK,IAAMnU,EAAKqiD,aAAczzC,GAC3D,IAAjB4zC,GACA/5B,EAAM7Q,QAAQxU,YAO9BqlB,EAAM7Q,QAAQxU,GAElB,OAAOqlB,EAAM1R,WAGjB8rC,gBAAiB,SAAUz/C,EAAM+Q,EAAItP,GACjC,OAAOzB,EAAKyB,QAAQ,KAAOsP,EAAK,KAAMtP,IAG1C69C,iBAAkB,SAAU1iD,EAAMoiD,GAC9B,IAAIrjD,EAAOC,KACPgU,EAAOjU,EAAKqS,mBACZ0xC,EAAmB/jD,EAAK0R,cAAcwN,YAAY,gBAElD+S,EAAW91B,EAAE0b,WAmCjB,OAjCA1b,EAAEyU,KAAK5Q,EAAK2R,YAAYqyC,eAAe/iD,GACnC,GAAoBoiD,GAAkBrjD,EAAK2R,YAAYsyC,kBAAkBhjD,IAC3E6P,KAAK,SAAUozC,EAAUb,GAEvBA,EAAe,GAAGpiD,KAAOA,EAGzBoiD,EAAe,GAAGpxC,aAAeoxC,EAAe,GAAGpxC,cAAgBgC,EAAKrO,WAAWqM,cAAgB,GACnGoxC,EAAe,GAAGluC,MAAQnV,EAAK4F,WAAWuP,MAE1C+uC,EAAS,GAAG9B,SAAWnhD,EAAK6gD,SAC5BoC,EAAS,GAAGlqB,IAAMh6B,EAAKmiD,aAAakB,EAAe,IAGnDa,EAAS,GAAGC,cAAgBd,EAAe,GAAGe,UAC9CF,EAAS,GAAGG,cAAgBhB,EAAe,GAAGiB,UAC9CJ,EAAS,GAAGK,wBAA0BlB,EAAe,GAAGmB,oBACxDN,EAAS,GAAGO,gBAAkBpB,EAAe,GAAGpnB,YAChDioB,EAAS,GAAGQ,uBAAyBrB,EAAe,GAAGsB,mBACvDT,EAAS,GAAGU,cAAgBvB,EAAe,GAAGwB,UAC9CX,EAAS,GAAGY,kBAAoBzB,EAAe,GAAG0B,cAClDb,EAAS,GAAGc,wBAA0B3B,EAAe,GAAG4B,oBACxDf,EAAS,GAAGgB,cAAgBjkD,EAAKyU,UAAY2tC,EAAe,GAAGvnB,UAC/DooB,EAAS,GAAGC,cAAgBd,EAAe,GAAGe,UAC9CF,EAAS,GAAGiB,cAAgB9B,EAAe,GAAGC,aAC9CY,EAAS,GAAG/uC,MAAQkuC,EAAe,GAAGluC,MACtC+uC,EAAS,GAAGz4C,MAAQM,OAAOgB,KAAK4I,aAAa0tC,EAAe,GAAG53C,OAC/Dy4C,EAAS,GAAGkB,WAAar5C,OAAOsT,eAEhC,IAAIhb,EAAOlI,EAAEqjB,SAASukC,EAAkBG,EAAS,IACjDjyB,EAASpZ,QAAQxU,KAGd4tB,EAASja,WAGpBwrC,QAAS,SAAU3B,GACf,IAAIwD,EAAYplD,KAAKsjD,iBAAiB1B,GAGtC,OAFa,MAAO,OAAQ,MAAO,MAAO,OAE5Bl/C,QAAQ0iD,EAAUr9B,gBAAkB,GAGtDg6B,iBAAkB,SAAU39C,EAAMyB,GAC9B,OAAOzB,EAAKyB,QAAQ,YAAaA,IAOrC+a,eAAgB,WACZ,OAAO5gB,KAAK2gB,iBAOhB5G,UAAW,WAEP,OAAO,GAQXmoC,aAAc,SAAUN,GACpB,IACIyD,EAAcv5C,OAAOw5C,OAAO,cAMhC,OAJI1D,EAAK5gD,OACL4gD,EAAK5gD,MAAQ6gD,SAAUD,EAAKC,SAAU4B,SAAU7B,EAAK6B,WAJ9CzjD,KAOC0R,YAAY6zC,eACpBlC,aAAczB,EAAKyB,aACnB/Y,MAAOsX,EAAK1sC,OAAS0sC,EAAKtX,MAC1Bt4B,aAAc4vC,EAAK5vC,aACnByxC,SAAU7B,EAAK5gD,KAAKyiD,SACpBvxC,YAZOlS,KAYW2F,WAAWuM,YAC7B2vC,SAAUD,EAAK5gD,KAAK6gD,SAASh8C,QAAQ,KAAM,KAC3Cw/C,YAAaA,EACb76B,UAAWo3B,EAAK5gD,KAAKwpB,WAAa,MAI1Cm4B,eAAgB,WACZ,IACIh9C,EADO3F,KACW2F,WAClB3E,KAUJ,OANAA,EAAKspC,MAAQ3kC,EAAWuP,MACxBlU,EAAKyiD,SAAW99C,EAAW89C,SAC3BziD,EAAKgR,aAAerM,EAAWqM,aAC/BhR,EAAKwkD,cACLxkD,EAVWhB,KAUDqR,MAAMqY,4BAVL1pB,KAUwCqR,MAAMoxB,eAAiB98B,EAAWuM,YAE9ElR,GAQXsiD,iBAAkB,SAAUzB,GAExB,OADAA,EAAWA,GAAY,IACP50B,MAAM,KAAK9b,OAQ/B0S,SAAU,SAAUrY,EAAOsY,GACvB,IAAI/jB,EAAOC,KACP2F,EAAa5F,EAAK4F,WAGtB5F,EAAK0M,OAAOjB,EAAOsY,GAGnB/jB,EAAKsjC,MAAQ19B,EAAW6F,UACxBzL,EAAKu+C,WAAcv+C,EAAKsjC,MAAY,OAAItjC,EAAKsjC,MAAMthC,OAAS4D,EAAW6F,OAO3EyG,gBAAiB,WACb,OAAOjS,KAAK2F,WAAWqM,cAAgB,IAO3CsxB,eAAgB,WACZ,OAAOtjC,KAAK2F,WAAWuP,OAS3BotC,iBAAkB,SAAU1yC,EAAMyyC,GAC9B,IAAItiD,EAAOC,KACP2F,EAAa5F,EAAK4F,WAElBzG,GACAmkD,aAAchB,EACd/X,MAAO3kC,EAAWuP,MAClBuuC,SAAU99C,EAAW89C,SACrBvxC,YAAavM,EAAWuM,YACxBF,aAAcjS,EAAKkS,mBAGvB,OAAOlS,EAAK2R,YAAY+zC,cAAcvmD,GAAQgoB,KAAK,WAG/CnnB,EAAKu+C,WAAav+C,EAAKu+C,WAAa,EAGpCv+C,EAAKsjC,MAAQnnC,EAAEsmD,KAAKziD,EAAKsjC,MAAO,SAAUof,GACtC,OAAOA,EAAS,IAAMJ,OAWlCqD,eAAgB,SAAUrD,GACtB,IACI18C,EADO3F,KACW2F,WAElBzG,GACAmkD,aAAchB,EACd/X,MAAO3kC,EAAWuP,MAClBuuC,SAAU99C,EAAW89C,SACrBvxC,YAAavM,EAAWuM,YACxBF,aAROhS,KAQYiS,mBAGvB,OAXWjS,KAWC0R,YAAYi0C,aAAazmD,IASzC0mD,iBAAkB,SAAUvD,GACxB,IACI18C,EADO3F,KACW2F,WAElBzG,GACAmkD,aAAchB,EACd/X,MAAO3kC,EAAWuP,MAClBuuC,SAAU99C,EAAW89C,SACrBvxC,YAAavM,EAAWuM,YACxBF,aAROhS,KAQYiS,mBAGvB,OAXWjS,KAWC0R,YAAYm0C,eAAe3mD,MCxV/ChD,EAAEmV,MAAMjS,OAAO,6BAMX0S,eAAgB,SAAU9Q,GAEtBhB,KAAKyM,OAAOzL,GAGZ,IAAI2E,EAAa3F,KAAK2F,WACtBA,EAAW6F,WAAqC,IAArB7F,EAAgB,MAAmBmG,OAAOgB,KAAK4I,aAAa/P,EAAW6F,OAAS,MAM/GmV,cAAe,WACX,IAAIrc,EAAWtE,KAAKyR,cAAcwN,YAAY,SAC1C6pB,EAAWh9B,OAAOgB,KAAK+5B,aAAa,IAAK,KAQ7C,OALW3qC,EAAEqjB,SAASjb,GAClB6Q,GAAI2zB,EACJrzB,SAAUzV,KAAK2F,WAAW8P,YASlC8O,gBAAiB,WACb,IAAI/Y,EAAQxL,KAAKyiB,WAEjB,OAAwC,IAApC3W,OAAOgB,KAAK4I,aAAalK,GAClBxL,KAAKgM,YAAY,uBACmB,IAApCF,OAAOgB,KAAK4I,aAAalK,GACzBxL,KAAKgM,YAAY,qBAEjB,IAQfmW,SAAU,WACN,IAAI3W,EAAQxL,KAAKyiB,WAEjB,OAAI3W,OAAOgB,KAAKg5C,aAAat6C,IACc,OAApCM,OAAOgB,KAAK4I,aAAalK,MCrDxCtP,EAAEmV,MAAMjS,OAAO,8BAMX0S,eAAgB,SAAU9Q,GAEtBhB,KAAKyM,OAAOzL,GAGZhB,KAAK+lD,cAAe,GAQxBplC,cAAe,WACX,IAAIrc,EAAWtE,KAAKyR,cAAcwN,YAAY,UAG9C,OAAO/iB,EAAEqjB,SAASjb,IAOtBsc,eAAgB,WACZ,IAAItc,EAAWtE,KAAKyR,cAAcwN,YAAY,mBAG9C,OAAO/iB,EAAEqjB,SAASjb,IAMtB0hD,iBAAkB,WAId,OAFAhmD,KAAK+lD,cAAe,EAEb/lD,KAAK0R,YAAYs0C,kBACpBjsB,IAAK/5B,KAAK2F,WAAWy8B,OACrBhnB,SAAUpb,KAAK2F,WAAWwP,GAC1BD,MAAOlV,KAAKimD,WACZj0C,aAAchS,KAAKkmD,kBACnBh0C,YAAalS,KAAK2F,WAAWuM,eAQrCi0C,kBAAmB,SAAUlnB,GACzB,OAAOj/B,KAAK0R,YAAYy0C,mBACpBpsB,IAAK/5B,KAAK2F,WAAW+4B,QACrBtjB,SAAUpb,KAAK2F,WAAWwP,GAC1BD,MAAOlV,KAAKimD,WACZj0C,aAAchS,KAAKkmD,kBACnBh0C,YAAalS,KAAK2F,WAAWuM,YAC7B+sB,QAASA,KAOjBmnB,qBAAsB,WAClB,OAAOpmD,KAAK0R,YAAY00C,sBACpBhrC,SAAUpb,KAAK2F,WAAWwP,GAC1BD,MAAOlV,KAAKimD,WACZj0C,aAAchS,KAAKkmD,kBACnBh0C,YAAalS,KAAK2F,WAAWuM,eAOrC4gB,SAAU,WAGN,OAFW9yB,KACKoS,mBACJ0gB,YAGhBznB,QAAS,SAAUqP,GACf,IAEI3G,EADApO,EADO3F,KACW2F,WAItB,OAAoD,GAAhDmG,OAAOgB,KAAK4I,aAAa/P,EAAWgQ,WAGa,GAAjD7J,OAAOgB,KAAK4I,aAAa/P,EAAW8P,YAR7BzV,KAWNkiB,qBAAqB,KAGtBvc,EAAW+M,UACc,GAflB1S,KAeE+lD,eACLhyC,EAhBG/T,KAgBYgM,YAAY,+BAA+BkT,WAAW,UAAWvZ,EAAWuR,aAC3FwD,EAAgBxZ,MAAMgU,MAAOvP,EAAWuP,MAAOnB,QAASA,KACjD,MAUnBkyC,SAAU,WACN,OAAOjmD,KAAK2F,WAAWuP,OAM3BgxC,gBAAiB,WACb,OAAOlmD,KAAK2F,WAAWqM,gBC/H/B9V,EAAEmV,MAAMjS,OAAO,gCAMX0S,eAAgB,SAAU9Q,GAEtBhB,KAAKyM,OAAOzL,GAGZ,IAAI2E,EAAa3F,KAAK2F,WAEtBA,EAAWyY,YAAc,QACzBzY,EAAW0gD,UAAmE,MAAvDv6C,OAAOgB,KAAK4I,aAAa1V,KAAK2F,WAAW0gD,YAAqBv6C,OAAOgB,KAAK4I,aAAa1V,KAAK2F,WAAW0gD,WAG9HrmD,KAAKme,oCAOTwC,cAAe,WACX,IACIhb,EADO3F,KACW2F,WAClBrB,EAFOtE,KAESyR,cAAcwN,YAAY,YAG9C,OAAO/iB,EAAEqjB,SAASjb,GACd6Q,GAAIxP,EAAWwP,GACfuT,MAAO/iB,EAAWqY,WAClB9G,YAAavR,EAAWuR,YACxB1L,MAAO7F,EAAW6F,MAClBiK,SAAU9P,EAAW8P,SACrB6wC,WAAYx6C,OAAOgB,KAAK4I,aAAa/P,EAAW2gD,cAAe,KAQvE1lC,eAAgB,WAEZ,OAAO5gB,KAAK2gB,iBAOhBW,WAAY,WACRthB,KAAKyM,SACLzM,KAAKykB,WAAW1jB,SAAS,0BAM7BwgB,mBAAoB,WAChBvhB,KAAKyM,SACLzM,KAAKykB,WAAW1jB,SAAS,0BAO7Bm9B,kBAAmB,WACf,IACIv4B,EADO3F,KACW2F,WAGtB,OAAKA,EAAW8P,UAAa9P,EAAW6F,MAJ7BxL,KAOC0R,YAAY60C,cACpBxsB,IAAKp0B,EAAWy4B,QAChBhjB,SAAUzV,EAAWwP,GACrBD,MAVOlV,KAUKwmD,mBACZx0C,aAAcrM,EAAWqM,aACzBE,YAAavM,EAAWuM,cAPjB,MAgBfssB,kBAAmB,SAAUx9B,GACzB,IAAIjB,EAAOC,KACP2F,EAAa5F,EAAK4F,WAGtB,IAAKA,EAAW8P,WAAa9P,EAAW6F,MACpC,OAAO,KAEX,IAAI0J,EAAQnV,EAAKymD,mBACbx0C,EAAekD,EAMnB,YAJyC,IAA7BvP,EAAuB,cAAiD,KAA5BA,EAAWqM,eAC/DA,EAAekD,EAAQvP,EAAWqM,aAAe,IAAMkD,EAAQvP,EAAWqM,cAGvEjS,EAAK2R,YAAY+0C,cACpB1sB,IAAKp0B,EAAW+4B,QAChBtjB,SAAUzV,EAAWwP,GACrBnD,aAAcA,EACdgc,WAAYhtB,IACb6P,KAAK,SAAUkkB,GACd,IAAI2xB,GAAwB,EAExB3xB,GAA8B,uBAAlBA,EAASx2B,OACrBmoD,GAAwB,GAExBA,GACA3mD,EAAKud,sBASjBshB,sBAAuB,SAAU1/B,GAC7B,IAAIa,EAAOC,KACP2F,EAAa5F,EAAK4F,WAEtB,OAAOzJ,EAAEyU,KAEAhL,EAAW8P,UAAa9P,EAAW6F,MAI7BzL,EAAK2R,YAAYyoB,kBACpBJ,IAAKp0B,EAAWy0B,YAChBhf,SAAUzV,EAAWwP,GACrBD,MAAOnV,EAAKymD,mBACZx0C,aAAcrM,EAAWqM,aACzBE,YAAahT,EAASA,EAAOgT,YAAcvM,EAAWuM,cARnD,OAkBnBy0C,oBAAqB,WACjB,IAAI5mD,EAAOC,KACP2F,EAAa5F,EAAK4F,WAEtB,OAAOzJ,EAAEyU,KAEAhL,EAAW8P,UAAa9P,EAAW6F,MAG7BzL,EAAK2R,YAAYuoB,gBACpBF,IAAKp0B,EAAWu0B,UAChB9e,SAAUzV,EAAWwP,GACrBD,MAAOnV,EAAKymD,mBACZx0C,aAAcrM,EAAWqM,aACzBE,YAAavM,EAAWuM,cAPrB,OAiBnB00C,wBAAyB,WACrB,IAAI7mD,EAAOC,KACP2F,EAAa5F,EAAK4F,WAEtB,OAAOzJ,EAAEyU,KAEAhL,EAAW8P,UAAa9P,EAAW6F,MAG7BzL,EAAK2R,YAAYooB,gBACpBC,IAAKp0B,EAAWq0B,cAChB5e,SAAUzV,EAAWwP,GACrBD,MAAOnV,EAAKymD,mBACZx0C,aAAcrM,EAAWqM,aACzBE,YAAavM,EAAWuM,cAPrB,OAiBnB20C,kBAAmB,WACf,IAAI9mD,EAAOC,KACP2F,EAAa5F,EAAK4F,WAEtB,OAAOzJ,EAAEyU,KAEAhL,EAAW8P,UAAa9P,EAAW6F,MAK7BzL,EAAK2R,YAAYsc,YACpB+L,IAAKp0B,EAAWq0B,cAChBpR,OAAQ,aACRxN,SAAUzV,EAAWwP,GACrBD,MAAOnV,EAAKymD,mBACZx0C,aAAcrM,EAAWqM,aACzBE,YAAavM,EAAWuM,cAVrB,OAoBnB7G,QAAS,SAAUqP,KAQnB8rC,iBAAkB,WACd,OAAOxmD,KAAK2F,WAAWuP,OAO3B6E,UAAW,WACP,OAAO,GAOXgI,gBAAiB,SAAUvW,OC5P/BtP,EAAEmV,MAAMjS,OAAO,mCAEXkjC,2BAA4Bx2B,OAAOmK,OAAOssB,SAASC,QAAQF,2BAC3D5Y,4BAA6B5d,OAAOmK,OAAOssB,SAASC,QAAQ9Y,8BAM5D9pB,KAAM,SAAUV,GACDc,KAGNyM,OAAOvN,GAHDc,KAMN8mD,cANM9mD,KAONkmC,aAAc,GAMvBp0B,eAAgB,SAAU9Q,GACXhB,KAGNyM,OAAOzL,GAGZ,IAAI2E,EAAa3F,KAAK2F,WACtBA,EAAWogC,eAAej6B,OAAOgB,KAAKkL,QAAQrS,EAAWohD,cAAephD,EAAWogC,aAE/EpgC,EAAW6F,YAAiC/L,IAAxBkG,EAAW6F,MAAM2J,KACrCxP,EAAW6F,MAAQ,MAVZxL,KAYNwL,MAAQ7F,EAAW6F,MAGpB7F,EAAWogC,eACXpgC,EAAW3E,KAhBJhB,KAgBgBimC,eAAetgC,EAAW3E,QAMzD2f,cAAe,WACX,IAAI5gB,EAAOC,KACP0W,EAAO3W,EAAKoT,UAGZ4zC,EAAchnD,EAAKgnD,YAAchnD,EAAKomC,iBAC1C,GAAmB,MAAf4gB,EAAqB,CACrB,IAAI5pC,EAAarR,OAAOgB,KAAKsQ,cAAc2pC,EAAYphD,WAAWpH,MAE9D,oBAAoB8e,KAAKF,KACzBpd,EAAKmmC,aAAc,GAK3BnmC,EAAKinD,4BAA6B,EAGlC,IAAIvhD,EAASzF,KAAKyM,SAMlB,MAJa,cAATiK,IACA3W,EAAKinD,4BAA6B,GAG/BvhD,GAMXqT,kBAAmB,WACJ9Y,KACNgnD,4BAA6B,EADvBhnD,KAIFkmC,aAJElmC,KAKF+mD,YAAYE,mBALVjnD,OASfknD,0BAA2B,WACZlnD,KACNgnD,4BAA6B,EADvBhnD,KAIFkmC,aAJElmC,KAKF+mD,YAAYE,mBALVjnD,OAWfwuB,QAAS,SAAUtvB,EAAQioD,GACvB,IAAIpnD,EAAOC,KAGX9D,EAAEyU,KAAK5Q,EAAK+X,cAAcjH,KAAK,WAM3B,IAAIgO,EAAU9e,EAAKmhB,aACfxK,EAAO3W,EAAKoT,UAChB0L,EAAQtZ,QAGRrJ,EAAEyU,KAAK5Q,EAAKsmC,YAAYnnC,IAAS4yB,KAAK,SAAU1tB,GAE5Cya,EAAQza,KAAKA,GAGbrE,EAAKuhB,aAEO,aAAR5K,GACA3W,EAAK+Y,yBAIerZ,IAApBM,EAAK0iB,YACL1iB,EAAKgiB,gBAAgBhiB,EAAK0iB,YAG1B1iB,EAAKqnD,iBACLrnD,EAAKqnD,gBAAgBxuC,UAGzB7Y,EAAKY,QAAQ,UAAWZ,EAAKyL,MAAO27C,SAShDnoB,QAAS,SAAU9/B,GACf,IAAIa,EAAOC,KAIX,MAAY,aAHDD,EAAKoT,UAGgBpT,EAAKknC,eAGjClnC,EAAKmmC,aACDnmC,EAAKgnD,aAAe7nD,IACpBa,EAAK4F,WAAWuhC,kBAAmB,GAOpB,KAFAnnC,EAAKgnD,YAAyB,cAAIhnD,EAAKgnD,YAAY9O,cAAc9iC,GAAK,IAG9EnV,KAAKyM,OAAOvN,OAMpBc,KAAKyM,OAAOvN,IAOvB+nD,mBAAoB,SAAUI,GAC1B,IAAItnD,EAAOC,KACPmd,EAAarR,OAAOgB,KAAKsQ,cAAciqC,EAAe1hD,WAAWpH,MAGjE,oBAAoB8e,KAAKF,KAGzBpd,EAAK+mD,WAAW5lD,KAAKmmD,GAGrBA,EAAeC,iBAAmB,SAAUx2C,EAAOlB,EAAMu3C,GAErDpnD,EAAKwnD,sBAAsBF,EAAgBz3C,EAAKuF,GAAIpV,EAAKynD,eAAgBL,GAGpEA,GAEDE,EAAeI,cAIlB1nD,EAAK2nD,cAAc,WACpB3nD,EAAKgF,KAAK,SAAUsiD,EAAeC,kBAIlCx7C,OAAOgB,KAAKkL,QAAQjY,EAAK0iB,aAGtB1iB,EAAK4F,WAAWogC,cAChBhmC,EAAKwnD,sBAAsBF,EAAgBtnD,EAAK0iB,WAAWtN,MAM3EuyC,cAAe,SAAU52C,GACrB,YAAgE,IAArD5U,EAAEyrD,MAAM3nD,KAAK4R,kBAAkBrR,IAAI,GAAI,gBAGyB,IAA5DrE,EAAEyrD,MAAM3nD,KAAK4R,kBAAkBrR,IAAI,GAAI,UAAUuQ,IAYpE82C,qBAAsB,SAAUP,GAE5BrnD,KAAKgT,OAAO,SAAUq0C,EAAeC,mBAMzCC,sBAAuB,SAAUM,EAAWC,EAAar1C,EAAO00C,GAC5D,IACIjoD,KACJA,EAFWc,KAECqR,MAAMixB,2BAA6B,UAAYwlB,EAE3DD,EAAUT,gBAAkBlrD,EAAE0b,WAEzBuvC,GAEDU,EAAUhkC,SAAS,IAAI,GAG3BgkC,EAAUr5B,QAAQtvB,EAAQioD,GAEtB10C,GACAvW,EAAEyU,KAAKk3C,EAAUT,gBAAgBrvC,WAAWlH,KAAK,WAC7Cg3C,EAAUE,WAAWpnD,QAAQ,YASzC8lB,gCAAiC,WACfzmB,KAAKkhB,aACX3b,SAMZkiD,WAAY,WACRznD,KAAK+S,eAAe,UAAWoC,GAAI,KAMvCgxB,eAAgB,WACZ,IACIxgC,EADO3F,KACW2F,WAGtB,QAA+BlG,IAA3BkG,EAAWohD,YACX,OAAO,KAaX,IAVA,IAAI/yC,EAROhU,KAQKoS,mBACZ+K,EAAarR,OAAOgB,KAAKsQ,cATlBpd,KASqC2F,WAAWpH,MACvDu8B,EAAW,oBAAoBzd,KAAKF,GAAcnJ,EAAKib,gBAAgBtpB,EAAWpH,SAElFsF,EAAI,EACJqN,EAAI,EACJ4xC,KAEAjkC,EAAU,KAEPhb,EAAIi3B,EAAS/4B,OAAQ8B,IACpB8B,EAAWohD,cAAgBjsB,EAASj3B,GAAG8B,WAAWwP,IAClD2tC,EAAQ5hD,MAAM2d,QAASic,EAASj3B,GAAItE,MAAOsE,IAInD,GAAIi/C,EAAQ/gD,OAAS,GAGjB,IAFA,IAAIimD,EAAmCC,EAEhC/2C,EAAI4xC,EAAQ/gD,OAAQmP,IAOvB,GAHA82C,GADAC,EAFSnF,EAAQ5xC,GAAG2N,QACClZ,WAAWuP,MACN+X,MAAM,MACLlrB,OACbkmD,EAAYr9C,MAAM,EAAGo9C,EAAe,GAAGpvB,KAAK,OAEtCjzB,EAAWuP,MAAO,CAClC2J,EAAUic,EAASgoB,EAAQ5xC,GAAG3R,OAC9B,YAIRsf,EAAU7K,EAAKqb,cAAc1pB,EAAWohD,aAI5C,OAAOloC,GAMX9E,UAAW,WAIP,OAHW/Z,KAGCyM,UAAYX,OAAOgB,KAAKozB,WAHzBlgC,KAGyC8mD,aAOxD9f,gBAAiB,WAGb,MAAY,aAFDhnC,KAAKmT,WASpB0N,wBAAyB,WACV7gB,KAEDkoD,aAFCloD,KAIFyM,SAJEzM,KAKFkoD,YAAa,IAI1Bv+B,uBAAwB,SAAU3oB,EAAMuoB,GACpC,IACIE,EAAQ,IAAIvtB,EAAE0b,SAElB,OAHW5X,KAGFkmC,aAHElmC,KAGkB+Z,kBAAqCta,IAHvDO,KAGsCmoD,aAHtCnoD,KAIKyM,OAAOzL,EAAMuoB,GACtBE,EAAM7Q,WAKjBgJ,wBAAyB,WACrB,IAAI7hB,EAAOC,KAEXD,EAAK0M,SAED1M,EAAKyL,OAA6B,GAApBzL,EAAKmmC,cACnBnmC,EAAK+hB,6BAA8B,EACnC/hB,EAAKY,QAAQ,UAAWZ,EAAKyL,OAAO,KAGxCzL,EAAK+hB,6BAA8B,KCzX3C5lB,EAAEmV,MAAMjS,OAAO,4BAOX0S,eAAgB,SAAS9Q,GAErBhB,KAAKyM,OAAOzL,GAGZ,IAAI2E,EAAa3F,KAAK2F,WACtBA,EAAWyiD,SAAWziD,EAAWyiD,UAAY,GAQjD5hB,gBAAiB,WACb,MAAO,QAQXQ,gBAAiB,WACb,OAAO,KC/Bf9qC,EAAEmV,MAAMjS,OAAO,mCAMX0S,eAAgB,SAAU9Q,GAEtBhB,KAAKyM,OAAOzL,GACRqnD,MAAMt5B,QAAQ/uB,KAAKwL,SACnBxL,KAAKwL,MAAQxL,KAAK2F,WAAW6F,MAAQiJ,KAAKqB,QAAQtK,MAASxL,KAAKwL,QAChExL,KAAK2F,WAAWsY,cAAgBje,KAAK2F,WAAWuY,cAAgBle,KAAKwL,OAGzE,IAAI7F,EAAa3F,KAAK2F,WACtBA,EAAW8P,SAA6D,OAAlD3J,OAAOgB,KAAK4I,aAAa/P,EAAW8P,WAAqB3J,OAAOgB,KAAK4I,aAAa/P,EAAW8P,UACnH9P,EAAWw6B,WAAazhC,OAAOiH,EAAWw6B,aAAe,IAO7Dxf,cAAe,WACX,IACIhb,EADO3F,KACW2F,WAClBrB,EAFOtE,KAESyR,cAAcwN,YAAY,oBAE9C,OAAO/iB,EAAEqjB,SAASjb,GACd6Q,GAAIxP,EAAWwP,GACfD,MAAOvP,EAAWuP,MAClBO,SAAU9P,EAAW8P,SACrBiT,MAAO/iB,EAAWqY,aAElB8oB,WAVO9mC,KAUU8mC,cAOzBlmB,eAAgB,WACZ,IACIjb,EADO3F,KACW2F,WAClBrB,EAFOtE,KAESyR,cAAcwN,YAAY,oBAE9C,OAAO/iB,EAAEqjB,SAASjb,GACd6Q,GAAIxP,EAAWwP,GACfD,MAAOvP,EAAWuP,MAClBO,SAAU9P,EAAW8P,SACrBiT,MAAO/iB,EAAWqY,aAElB8oB,WAVO9mC,KAUU8mC,cAQzB9H,QAAS,WACL,IAAIj/B,EAAOC,KACPypB,EAAQ,IAAIvtB,EAAE0b,SACdjS,EAAa3F,KAAK2F,WAqCtB,OAlCA5F,EAAK2R,YAAYwJ,cAAc8jB,SAC3BjF,IAAKp0B,EAAWo5B,QAChB7pB,MAAOvP,EAAWuP,MAClBkG,SAAUzV,EAAWwP,GACrBnD,aAAcrM,EAAWqM,aACzBqJ,YAAa1V,EAAW0V,aAAe,KACvCnJ,YAAavM,EAAWuM,cACzBrB,KAAK,SAAU7P,GACd2E,EAAW3E,KAAOjB,EAAKuoD,cAActnD,GAErCyoB,EAAM7Q,QAAQjT,EAAW3E,QAE1B6a,KAAK,SAAU7a,GACd,GAAkB,kBAAdA,EAAKzC,KAAT,CAIA,IACIyV,EAAOjU,EAAKqS,mBACZk1B,EAASvnC,EAAK4F,WAAWuR,YAAc,KAQ3CowB,IANmB,iBAARtmC,EACEyT,MAAQA,KAAKC,MAAM1T,IAAS9E,EAAEsrC,UAAUxmC,GAExCA,GAGI+S,QAEjBC,EAAK4iB,qBAAqB0Q,GAE1B7d,EAAMG,OAAO5oB,MAGVyoB,EAAM1R,WAQjB8L,SAAU,SAAUrY,EAAOsY,GACvBA,OAAkCrkB,IAAlBqkB,GAA8BA,EAGnDtY,EADQ68C,MAAMt5B,QAAQvjB,GACdiJ,KAAKqB,QAAQtK,MAASA,IAEtBA,EAGHxL,KAAKyM,OAAOjB,EAAOsY,IAOvB/B,gBAAiB,SAAUvW,GACZxL,KAGN6jB,SAASrY,GAAO,IAOzBuO,UAAW,WACP,OAAO,GAOX0I,SAAU,WACN,OAAOziB,KAAKwL,WAOhB+8C,aAAc,WAGV,IAGI,OAFO9zC,KAAKC,MAAM1U,KAAKwL,OAEXA,UACd,MAAO5N,GACL,WAQRukB,SAAU,WACN,IAAI4+B,EAAS/gD,KAAKuoD,eAElB,OAAOxH,GAAUA,EAAOh/C,OAAS,GAGrCwjB,qBAAsB,SAAUrR,GAC5B,OAAOhY,EAAE,kEAAmEgY,IAOhFwsC,WAAY,SAAUl1C,GAClB,IAAIihC,EAAWzsC,KAAKuoD,eAEpB9b,EAASvrC,KAAKsK,GAEdxL,KAAK6jB,SAAS4oB,IAOlB8T,cAAe,SAAU/0C,GACrB,IAAIg9C,EAAah9C,EAAM2J,GACnBs3B,EAAWzsC,KAAKuoD,eACflmC,OAAO,SAAUzS,GACd,OAAOA,EAAKuF,KAAOqzC,IAG3BxoD,KAAK6jB,SAAS4oB,IAMlBze,WAAY,WACR,IAAIhtB,KAGJA,EAAKhB,KAAK2F,WAAWuP,OAASlV,KAAKyiB,WAGnCziB,KAAKsd,eAAetc,IAQxBynD,cAAe,SAAUtzC,GACrB,IAAIpV,EAAOC,KAEX,OAAOD,EAAK03B,SAASixB,KAAK,SAAU94C,EAAMrQ,GACtC,IAAIopD,EAAQ/4C,EAAKuF,KAAOA,EAGxB,OADIwzC,GAAO5oD,EAAK03B,SAAShb,OAAOld,EAAO,GAChCopD,KAIfvI,UAAW,SAAUW,EAAQ5rC,GACzB,OAAO4rC,EAAO2H,KAAK,SAAU94C,GACzB,OAAOA,EAAKuF,IAAMA,KAS1ByzC,gBAAiB,SAAUC,GACvB,IAAI9oD,EAAOC,KAWX,OAVqBiK,SAAS4+C,EAAeroD,IAAI,UACjCqoD,EAAexlD,WAG1BylD,UACAC,OAAO,SAAUC,EAAKhyC,GAEnB,OADAgyC,GAAOjpD,EAAKkpD,gBAAgBjyC,IAE7B,GAEkCjX,EAAKsR,MAAM63C,mBASxDD,gBAAiB,SAAUnoD,GACvB,IAAIqoD,EAAS1rD,OAAO2rD,iBAAiBtoD,GAErC,OADiB5E,EAAE4E,GAASqI,cAExB,eACA,gBACA,cACA,gBACF4/C,OAAO,SAAUC,EAAKn6B,GAEpB,OADAm6B,GAAO/+C,SAASk/C,EAAOt6B,KAExB,IAQPw6B,WAAY,SAAUC,EAAO9jD,GAEzBA,EAAW6c,OAAO,WACd,IAAIknC,EAAkBrtD,EAAE8D,MAAM40B,OAAO7M,cACjCyhC,EAAiBF,EAAMvhC,cAE3B,GAAIwhC,EAAgB7mD,QAAQ8mD,IAAmB,EAC3C,OAAOttD,EAAE8D,MAET9D,EAAE8D,MAAMiB,SAEbQ,QAOPgoD,oBAAqB,aAQrBC,aAAc,SAAUv0C,GACpB,OAAQnV,KAAK2F,WAAW3E,UAAYM,KAAK,SAAUsO,GAC/C,OAAOA,EAAKuF,IAAMA,KAc1B2xB,WAAY,SAAUt7B,GAClB,OAAOM,OAAOgB,KAAKg6B,WAAWt7B,IAOlC88C,cAAe,SAAUtnD,GAKrB,OAJCA,OAAYshB,QAAQ,SAAU1S,GAC3BA,EAAKpE,WAAgC,IAAhBoE,EAAU,OAAoC,OAAfA,EAAKpE,MAAiBoE,EAAKpE,MAAQ,KAGpFxK,KCpVf9E,EAAEmV,MAAMjS,OAAO,kCAOX0S,eAAgB,SAAS9Q,GACVhB,KAGNyM,OAAOzL,GAGZ,IAAI2E,EAAa3F,KAAK2F,WACtBA,EAAWw6B,WAAazhC,OAAOiH,EAAWw6B,aAAe,GACzDx6B,EAAW8P,SAA6D,OAAlD3J,OAAOgB,KAAK4I,aAAa/P,EAAW8P,WAAqB3J,OAAOgB,KAAK4I,aAAa/P,EAAW8P,UARxGzV,KAWN6jB,SAASle,EAAW6F,QAO7BmV,cAAe,WACX,IACIhb,EADO3F,KACW2F,WAClBrB,EAFOtE,KAESyR,cAAcwN,YAAY,cAE9C,OAAO/iB,EAAEqjB,SAASjb,GACd6Q,GAAIxP,EAAWwP,GACfD,MAAOvP,EAAWuP,MAClB1J,MAAO7F,EAAW6F,MAClB6rC,YAAa1xC,EAAW0xC,YACxB3rC,MAAO/F,EAAW6F,MAClBm+C,gBAAehkD,EAAWuxC,YAC1BzhC,SAAU9P,EAAW8P,WAErBqxB,WAbO9mC,KAaU8mC,cAQzBlmB,eAAgB,WACZ,OAAO5gB,KAAK2gB,iBAQhBkD,SAAU,SAASrY,GACfxL,KAAKwL,MAAQiJ,KAAKqB,QAAStK,MAASA,IACpCxL,KAAKkc,uBAQTwkC,WAAY,SAASl1C,GACjB,IAAIo+C,EAAOn1C,KAAKC,MAAM1U,KAAKwL,OAE3Bo+C,EAAKp+C,MAAMtK,KAAKsK,GAEhBxL,KAAK6jB,SAAS+lC,EAAKp+C,QAQvB+0C,cAAe,SAAS/0C,GACpB,IAAIo+C,EAAOn1C,KAAKC,MAAM1U,KAAKwL,OACvB/F,KAEJvJ,EAAE2E,KAAK+oD,EAAKp+C,MAAO,SAAS6G,EAAKqQ,GACzBA,EAAIvN,IAAM3J,EAAM2J,IAChB1P,EAAOvE,MAAOiU,GAAIuN,EAAIvN,GAAI3J,MAAOkX,EAAIlX,UAI7CxL,KAAK6jB,SAASpe,IAOlBokD,kBAAmB,WACf,IAAID,EAAOn1C,KAAKC,MAAM1U,KAAKwL,OAEvBo+C,EAAKp+C,MAAMzJ,OAAS,IACpB6nD,EAAKp+C,MAAM2F,MACXnR,KAAK6jB,SAAS+lC,EAAKp+C,SAS3BwzB,QAAS,SAAS9/B,GACd,IAAIa,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClB8jB,EAAQ,IAAIvtB,EAAE0b,SAyBlB,OAtBA7X,EAAK2R,YAAYqmC,eACbhe,IAAKp0B,EAAWo5B,QAChB7pB,MAAOvP,EAAWuP,MAClBkG,SAAUzV,EAAWwP,GACrBnD,aAAcrM,EAAWqM,aACzBE,YAAavM,EAAWuM,YACxB2lC,KAAMlyC,EAAWkyC,KACjB1Q,MAAOjoC,IACR2R,KAAK,SAAS7P,GAEb2E,EAAW3E,KAAOA,EAClByoB,EAAM7Q,QAAQjT,EAAW3E,QAC1B6a,KAAK,SAAS7a,GACb,IAAIg3C,EAAah3C,EAAKg3C,aAAc,EAEpCvuB,EAAM7Q,YAEDo/B,GACDj4C,EAAKY,QAAQ,gBAAiBK,KAI/ByoB,EAAM1R,WAOjBiW,WAAY,WACR,IAAIhtB,KAGJA,EAAKhB,KAAK2F,WAAWuP,OAASlV,KAAKyiB,WAGnCziB,KAAKsd,eAAetc,IAOxB+Y,UAAW,WACP,OAAO,GAOXoI,SAAU,WAGN,OAFWniB,KAAK8pD,eAEJ/nD,OAAS,GAGzB+nD,aAAc,WACV,IAAIt+C,EAAQxL,KAAKyiB,WAGjB,OAFoC,iBAAZ,EAAuBhO,KAAKC,MAAMlJ,GAAOA,MAAQA,EAAMA,YAenFs7B,WAAY,SAAUt7B,GAClB,OAAOM,OAAOgB,KAAKg6B,WAAWt7B,MC9LtCtP,EAAEmV,MAAMjS,OAAO,6BAOX0S,eAAgB,SAAU9Q,GACXhB,KAGNyM,OAAOzL,GAGZ,IAAI2E,EANO3F,KAMW2F,WAClBod,EAAS/iB,KAAKgM,YAAY,iBAK9B,GAFArG,EAAWkgC,gBAAgD,IAA3BlgC,EAAqB,YAAoBA,EAAWkgC,WAEhFlgC,EAAWkgC,WAAY,CACvB,IAAIb,EAAmD,oBAAnC,6BAAiDF,6BAA6BE,OAASjiB,EAAOiiB,OAClHr/B,EAAWq/B,OAASr/B,EAAWmgC,eAAiBngC,EAAWmgC,eAAiBd,OAE5Er/B,EAAWq/B,OAAS,GAGxBr/B,EAAW4/B,aAAc,KC3BjCrpC,EAAEmV,MAAMjS,OAAO,6BAMX0S,eAAgB,SAAU9Q,GAGtBhB,KAAKyM,OAAOzL,GAGZ,IAAI2E,EAAa3F,KAAK2F,WACtBA,EAAW0yC,WAAavsC,OAAOgB,KAAK4I,aAAa/P,EAAW0yC,cAAe,EAG3E1yC,EAAWihC,OAAS96B,OAAOgB,KAAK+5B,aAAa,IAAM,MAQvDL,gBAAiB,WACb,MAAO,SAQXO,UAAW,WACP,OAAO,GAQXC,gBAAiB,WACb,OAAO,GAOXL,kBAAmB,WACf,IACIhhC,EADO3F,KACW2F,WAEtB,OACI4yC,UAAW5yC,EAAW0yC,WACtBA,WAAY1yC,EAAW0yC,aAO/B/wB,UAAW,WACP,IACI9b,GAAS2J,GAAI,GAAIyJ,MAAO,IADjB5e,KAEac,QAAQQ,KAAK,2BAExBC,YAAY,0BAJdvB,KAKN+hB,gBAAgBvW,GALVxL,KAMN6jB,SAASrY,GAAO,GANVxL,KAONunB,qBAOTzE,sBAAuB,WACnB,IACInd,EADO3F,KACW2F,WAElB6F,EAHOxL,KAGMyiB,WACbkD,EAAehgB,EAAWsY,cAC1B2H,EAAYjgB,EAAWkgB,aAoC3B,OAhCIra,QAA0B/L,IAAjB+L,EAAMzJ,SACfyJ,EAAQA,EAAM,IAEdma,QAAwClmB,IAAxBkmB,EAAa5jB,SAC7B4jB,EAAeA,EAAa,IAE5BC,QAAkCnmB,IAArBmmB,EAAU7jB,SACvB6jB,EAAYA,EAAU,IAG1Bpa,EAAQA,QAAsB/L,IAAb+L,EAAM2J,GAAmB3J,EAAM2J,GAAK3J,EACrDma,EAAeA,QAAoClmB,IAApBkmB,EAAaxQ,GAAmBwQ,EAAaxQ,GAAKwQ,OAG/DlmB,KAFlBmmB,EAAYA,QAA8BnmB,IAAjBmmB,EAAUzQ,GAAmByQ,EAAUzQ,GAAKyQ,IAG5DA,GAAapa,GAAWA,GAASma,MAGnB,OAAVna,GAA4B,KAAVA,GAAmC,OAAjBma,GAA0C,KAAjBA,IAGpDA,GAAgBna,IAInB,OAAVA,GAA4B,KAAVA,GAAmC,OAAjBma,GAA0C,KAAjBA,IAGpDA,GAAgBna,GAStC2V,kCAAmC,WACjBnhB,KAAKkhB,aACX3b,WC/HhBrJ,EAAEmV,MAAMjS,OAAO,0BAEXkjC,2BAA4Bx2B,OAAOmK,OAAOssB,SAASC,QAAQF,2BAC3D5Y,4BAA6B5d,OAAOmK,OAAOssB,SAASC,QAAQ9Y,4BAC5D+Y,cAAe32B,OAAOmK,OAAOssB,SAASC,QAAQC,gBAO9C3wB,eAAgB,SAAU9Q,GACXhB,KAGNyM,OAAOzL,GAGZ,IAAI2E,EAAa3F,KAAK2F,WAClBs7C,EAAU,QAYd,GAVGt7C,EAAWs7C,QACVA,EAAUviD,OAAOiH,EAAWs7C,SACQ,oBAAtB,sBAAoF,IAAvCE,gBAAiC,oBAC5FF,EAAUviD,OAAOyiD,gBAAgBC,oBAGrCz7C,EAAWs7C,QAAUA,EACrBt7C,EAAW8P,UAA6D,IAAlD3J,OAAOgB,KAAK4I,aAAa/P,EAAW8P,UAC1D9P,EAAW27C,gBAAkB37C,EAAW27C,iBAAmB,GAEvD37C,EAAW27C,gBAAgBv/C,OAAS,GAAK4D,EAAW27C,gBAAgB5+C,QAAQ,KAAO,EAAG,CAGtF,IAFA,IAAI6+C,EAAmB57C,EAAW27C,gBAAgBz7C,QAAQ,OAAQ,IAAIonB,MAAM,KAEnEppB,EAAI,EAAGA,EAAI09C,EAAiBx/C,OAAQ8B,IACzC,GAAkC,GAA9B09C,EAAiB19C,GAAG9B,OACpBw/C,EAAiB19C,GAAK,KAAO09C,EAAiB19C,GAAGqb,WAAW,IAAK,QAC9D,CAESqiC,EAAiB7+C,QAAQ6+C,EAAiB19C,IACtD09C,EAAiB9kC,OAAO5Y,EAAG,GAInC8B,EAAW27C,gBAAkBC,EAAiB3oB,KAAK,KAGvDjzB,EAAWq4B,OAASr4B,EAAWq4B,QAnCpBh+B,KAmCmC0R,YAAYq4C,oBAAoBpkD,EAAWqkD,kBACzFrkD,EAAWq2B,YAAmE,OAArDlwB,OAAOgB,KAAK4I,aAAa/P,EAAWq2B,aAE7Dr2B,EAAWskD,aAAc,EACzBtkD,EAAWukD,cAAe,GAEA,IAAtBvkD,EAAWxI,OACXwI,EAAWxI,MAAQ,OACnBwI,EAAWskD,aAAc,GAEzBtkD,EAAWxI,MAAQwI,EAAWxI,MAAQ,MAGf,IAAvBwI,EAAWxH,QACXwH,EAAWxH,OAAS,OACpBwH,EAAWukD,cAAe,GAE1BvkD,EAAWxH,OAASwH,EAAWxH,OAAS,MAQhDwiB,cAAe,WACX,IAAI5gB,EAAOC,KACPm8C,EAAM,IAAIjgD,EAAE0b,SACZtT,EAAWvE,EAAK0R,cAAcwN,YAAY,SAe9C,OAbA/iB,EAAEyU,KAAK5Q,EAAKmiD,gBAAgBrxC,KAAK,SAAUkuB,GACvC,IAAKh/B,EAAK8T,aAAc,CACpB9T,EAAK4F,WAAWo0B,IAAkB,KAAZgF,EAAiBA,EAAU,GACjDh/B,EAAK4F,WAAW6F,MAAQzL,EAAKyL,MAAQzL,EAAK4F,WAAWo0B,IAAIh4B,OAAS,GAAKhC,EAAK4F,WAAWo0B,KAAO,KAC9Fh6B,EAAK8jB,SAAS9jB,EAAK4F,WAAW6F,OAE9B,IAAIpH,EAAOlI,EAAEqjB,SAASjb,GAAYy1B,IAAKh6B,EAAK4F,WAAWo0B,MACvDoiB,EAAIvjC,QAAQxU,MAEjByX,KAAK,SAAU1Z,GACfg6C,EAAIvyB,OAAOznB,KAGPg6C,EAAIpkC,WAOf6I,eAAgB,WACZ,IAAItc,EAAWtE,KAAKyR,cAAcwN,YAAY,kBAG9C,OAFW/iB,EAAEqjB,SAASjb,IAS1B6lD,gBAAiB,WACb,OAAOnqD,KAAKyR,cAAcwN,YAAY,eAQ1C6iC,iBAAkB,SAAUF,GACxB,IAAI7hD,EAAOC,KACP0W,EAAO3W,EAAKoT,UACZgpC,EAAM,IAAIjgD,EAAE0b,SACZtT,EAAWvE,EAAKoqD,kBAkBpB,OAhBAjuD,EAAEyU,KAAK5Q,EAAKmiD,gBAAgBrxC,KAAK,SAAUkuB,GACvC,IAAIhF,EAAMgF,GAAW,GAEjB36B,EAAOlI,EAAEqjB,SAASjb,GAClBy1B,IAAKA,EACLiC,YAAaj8B,EAAK4F,WAAWq2B,YAC7BvmB,SAAU1V,EAAK4F,WAAW8P,SAC1BiB,KAAMA,IAGV3W,EAAK4F,WAAWo0B,IAAMA,EACtBh6B,EAAK4F,WAAW6F,MAAQuuB,EAAIh4B,OAAS,GAAKg4B,GAAO,KAEjDoiB,EAAIvjC,QAAQxU,KAGT+3C,EAAIpkC,WAQfmqC,aAAc,SAAUhjD,GACpB,IAAIa,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBw2C,EAAM,IAAIjgD,EAAE0b,SACZmiB,EAAM,GAEV,GAAK/5B,KAAKyrB,kBAGH,CACH,IAAIzB,GACA+P,IAAKp0B,EAAWo5B,QAChB7pB,MAAOvP,EAAWuP,MAClBkG,SAAUzV,EAAWwP,GACrBnD,aAAcrM,EAAWqM,aACzBE,YAAavM,EAAWuM,YACxB2c,SAAU3vB,GAAUA,EAAO2vB,SAAW3vB,EAAO2vB,SAAW,cACxDmS,SAAU,QAGVr7B,EAAW0V,cACX2O,EAAW3O,YAAc1V,EAAW0V,aAGpC1V,EAAWqkD,mBACXjqD,EAAKqqD,YAAct+C,OAAOs+C,YAAYC,OACtCrgC,EAAWhY,aAAe,wBAA0BjS,EAAKqqD,YAAc,IACvEpgC,EAAW3O,YAAc,SACzB2O,EAAWkM,aAAen2B,EAAKqqD,aAGnCrqD,EAAK2R,YAAYwJ,cAAcovC,gBAAgBtgC,EAAY,QACtDnZ,KAAK,SAAU7P,GACW,MAAnBA,EAAKupD,OAAO,KACZvpD,EAAOA,EAAK4J,MAAM,GAAI,IAGb,KAAT5J,IACA+4B,EAAM,yBAA2B/4B,GAGrCm7C,EAAIvjC,QAAQmhB,KACble,KAAK,SAAU1Z,GAClBg6C,EAAIvyB,OAAOznB,UApCf43B,EAAM,GACNoiB,EAAIvjC,QAAQmhB,GAuChB,OAAOoiB,EAAIpkC,WAGfyyC,oBAAqB,SAASxgC,GAC1B,IAAImyB,EAAM,IAAIjgD,EAAE0b,SAEZjS,EADO3F,KACW2F,WAClB47B,EAFOvhC,KAEWyqD,gBAClBC,GAAoB,EACpBC,EAAUhlD,EAAWuP,MACrBvP,EAAWilD,iBACXD,EAAUhlD,EAAWilD,eACrBF,GAAoB,GAEpB1gC,GACAxV,OAAQ+sB,EAAW/sB,OACnB4V,WAAYmX,EAAWnX,WACvBjV,GAAIw1C,EACJt3B,YAAakO,EAAWlO,YACxBq3B,kBAAmBA,GAOvB,OALAxuD,EAAEyU,KAhBS3Q,KAgBC0R,YAAYm5C,gBAAgB7gC,EAAY,WACnDnZ,KAAM,SAASi6C,GACZnlD,EAAW6F,MAAQs/C,EACnB3O,EAAIvjC,QAAQ9M,OAAOgB,KAAKi+C,WAAWplD,MAEhCw2C,EAAIpkC,WAQfizC,iBAAkB,SAAUC,GACxB,IAAIlrD,EAAOC,KACPm8C,EAAM,IAAIjgD,EAAE0b,SACZszC,EAAc,IAAIhvD,EAAE0b,SACpBgzC,EAAiB7qD,EAAK4F,WAAWuP,MAAQ,IAAMpJ,OAAOgB,KAAK+5B,eAE/D,GAAG9mC,EAAKorD,SAAS,CACb,IAAItJ,EAAW9hD,EAAKqjD,eAAev3C,KAM/Bo/C,EALCn/C,OAAOgB,KAAKu8B,kBAKNv9B,OAAOgB,KAAKs+C,MAAMC,aAAaJ,GAJ/Bn/C,OAAOgB,KAAKs+C,MAAME,qBAAqBL,GAOlD,IAAIM,EAAe,SAAUppD,GACzB2J,OAAO+V,IAAI,gCAAiC1f,GAC5C+oD,EAAYthC,OAAOznB,IAGvB1E,OAAO+tD,0BAA0BP,EAAM,SAAUQ,GAC7CA,EAAU7J,KAAK,SAAUA,GACrB,IAAI8J,EAAS,IAAIC,WACjBD,EAAOE,UAAY,WACf,IAAIC,EAAO,IAAIC,MAAM9rD,KAAKyF,SAAUlH,KAAMqjD,EAAKrjD,OAC/CstD,EAAKhgD,KAAOg2C,EACZqJ,EAAYtyC,QAAQizC,IAExBH,EAAOK,kBAAkBnK,IAC1B2J,IACJA,QAGHL,EAAYtyC,QAAQqyC,GA4BxB,OAzBA/uD,EAAEyU,KAAKu6C,GACNr6C,KAAM,SAASm7C,GAEZ,IAAIzqB,EAAaxhC,EAAK0qD,gBAClBzgC,GACAxV,OAAQ+sB,EAAW/sB,OACnB4V,WAAYmX,EAAWnX,WACvBjV,GAAIy1C,EACJqB,cAAe,UACf54B,YAAakO,EAAWlO,aAG5Bn3B,EAAEyU,KAAK5Q,EAAK2R,YAAYw6C,iBAAiBliC,EAAYgiC,IACpDn7C,KAAM,WACH9Q,EAAK4F,WAAWilD,eAAiBA,EACjCzO,EAAIvjC,YAEPiD,KAAM,SAASonB,GACZkZ,EAAIvyB,OAAOqZ,OAGlBpnB,KAAM,SAASswC,GACZhQ,EAAIvyB,OAAOuiC,KAGRhQ,EAAIpkC,WAOfq0C,iBAAkB,WACd,IAAIjQ,EAAM,IAAIjgD,EAAE0b,SAShB,OAPA1b,EAAEyU,KAAK3Q,KAAKkiD,cAAcrzB,SAAY,qBACjChe,KAAK,SAAUkuB,GACZod,EAAIvjC,QAAQmmB,KACbljB,KAAK,SAAU1Z,GAClBg6C,EAAIvyB,OAAOznB,KAGRg6C,EAAIpkC,WAOfgC,UAAW,WAEP,OAAO,GAQX8J,SAAU,SAAUrY,EAAOsY,GAEvB9jB,KAAKyM,OAAOjB,EAAOsY,IAOvBrB,SAAU,WACN,OAAOziB,KAAK2F,WAAW6F,WAQ3BH,QAAS,SAAUqP,GACf,IAAI3a,EAAOC,KAGX,IAA0D,IAAtD8L,OAAOgB,KAAK4I,aAAa3V,EAAK4F,WAAWgQ,SACzC,OAAO,EAIX,IAA2D,IAAvD7J,OAAOgB,KAAK4I,aAAa3V,EAAK4F,WAAW8P,UACzC,OAAO,EAOX,IAHA1V,EAAKmiB,qBAAqB,IAGtBniB,EAAK4F,WAAW+M,cACH3S,EAAKkiB,MAAQliB,EAAKkiB,KAAKkJ,iBAAiBhd,MAAMpO,KAKlC,IAFTA,EAAK0iB,WAEP1gB,QAAc,CACpB,IAAIgS,EAAUhU,EAAKiM,YAAY,wBAAwBkT,WAAW,UAAWnf,EAAK4F,WAAWuR,aAE7F,OADAwD,EAAgBxZ,MAAOgU,MAAOnV,EAAK4F,WAAWuP,MAAOnB,QAASA,KACvD,EAKnB,OAAO,GAMX4uC,eAAgB,WACZ,IAAI5iD,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClBqO,EAAOjU,EAAKqS,mBACZpR,KAEJA,EAAKjB,EAAKsR,MAAMqY,4BAA8B,SAAW3pB,EAAKujC,iBAC9DtiC,EAAKjB,EAAKsR,MAAMqY,4BAA8B,YAAc/jB,EAAWwP,GACvEnU,EAAKjB,EAAKsR,MAAMqY,4BAA8B,gBAAkB/jB,EAAWqM,aAC3EhR,EAAKjB,EAAKsR,MAAMqY,4BAA8B3pB,EAAKsR,MAAMoxB,eAAiB98B,EAAWuM,YACrFlR,EAAKjB,EAAKsR,MAAMixB,2BAA6B,aAAetuB,EAAKrO,WAAW6kB,UAC5ExpB,EAAKjB,EAAKsR,MAAMqY,4BAA8B,UAAY,WAEtD/jB,EAAW0V,cACXra,EAAKjB,EAAKsR,MAAMqY,4BAA8B,eAAiB/jB,EAAW0V,aAG9E,IACyC,oBAA1B,oBACPra,EAAK6hD,qBAAuB7uC,EAAKrO,WAAW6kB,UAE5CxpB,EAAiB,WAAIgT,EAAKrO,WAAW6kB,UAE3C,MAAO5sB,GACLoD,EAAiB,WAAIgT,EAAKrO,WAAW6kB,UAGzC,OAAOxpB,GAOXsiC,eAAgB,WACZ,OAAOtjC,KAAK2F,WAAWuP,OAM3BiM,kCAAmC,WAChBnhB,KAAKkhB,aACX3b,WCvajBrJ,EAAEmV,MAAMjS,OAAO,2CASXitD,oBAAqB,WACjB,OAAO,MAGX/qC,WAAY,WACR,IAAIvhB,EAAOC,KAGXD,EAAK0M,SAEL,IAAIgd,EAAQvtB,EAAE0b,WACV00C,EAAmBvsD,EAAKssD,sBAe5B,OAdIC,GAAoBA,EAAiBvqD,OAAS,EAC9C+J,OAAO63C,OAAO4I,SAASD,GAC/Bx6B,KAAK,WAEF/xB,EAAKugB,wBACLmJ,EAAM7Q,YAID1c,EAAEyU,KAAM5Q,EAAKysD,0BAA0B37C,KAAK,WACxC4Y,EAAM7Q,YAIP6Q,EAAM1R,WAGjBy0C,uBAAwB,WACpB,IAAIzsD,EAAOC,KACP6e,EAAU9e,EAAKmhB,aACfvb,EAAa5F,EAAK4F,WAClBw2C,EAAM,IAAIjgD,EAAE0b,SAEZjS,EAAW8mD,cAAgB9mD,EAAW8mD,aAAa1qD,OAAS,EAC5DhC,EAAK0sD,aAAe3gD,OAAOy2B,SAASmqB,KAAKllB,UAAU7hC,EAAW8mD,cAE9D1sD,EAAK0sD,gBAIT,IACQE,EAYR,OAZQA,EAAsB5sD,EAAK6sD,wBAE3B7sD,EAAKynB,MAAQ3I,EAAQza,KAAKuoD,IAE9B5sD,EAAK8sD,gBACL1Q,EAAIvjC,UAODujC,EAAIpkC,WAGfwJ,mBAAoB,WAChB,IAAIxhB,EAAOC,KACP6e,EAAU9e,EAAKmhB,aACfvb,EAAa5F,EAAK4F,WAElBA,EAAW8mD,cAAgB9mD,EAAW8mD,aAAa1qD,OAAS,EAC5DhC,EAAK0sD,aAAe3gD,OAAOy2B,SAASmqB,KAAKllB,UAAU7hC,EAAW8mD,cAE9D1sD,EAAK0sD,gBAGT,IAAIK,EAAwB,WACxB,IACI,IAAIC,EAAsBhtD,EAAKitD,qBAC3BD,IACAhtD,EAAKynB,MAAQ3I,EAAQza,KAAK2oD,IAE9BhtD,EAAK8sD,gBAEP,MAAO1qD,GACL,IAAI+U,EAAcnX,EAAK4F,WAAWuR,aAAe,SACjD2H,EAAQza,KAAK,OAAS8S,EAAe,WAKzCnX,EAAKuT,MACLvT,EAAKuT,QAAQzC,KAAK,WACdi8C,MAGJA,KAIRvoC,gBAAiB,WAEb,OADWvkB,KACCitD,oBAMhBlrC,gBAAiB,SAAUvW,GACZxL,KAGN6jB,SAASrY,GAHHxL,KAMNktD,iBAAiB1hD,IAG1BiX,SAAU,WAEN,OADWziB,KACCmtD,oBAGhBC,iBAAkB,SAAUC,EAAcnuD,GACtC,IAAIa,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClB8jB,EAAQ,IAAIvtB,EAAE0b,SAsBlB,OArBA7X,EAAK2R,YAAYwJ,cAAcovC,iBAC3BvwB,IAAKp0B,EAAWo5B,QAChB7pB,MAAOvP,EAAWuP,MAClBkG,SAAUzV,EAAWwP,GACrBnD,aAAcrM,EAAWqM,aACzBE,YAAavM,EAAWuM,YACxB2c,SAAUw+B,EACVlmB,MAAOjoC,EACP8hC,SAAU9hC,EAASA,EAAO8hC,SAAW,OACtCnwB,KAAK,SAAU7P,GACG,SAAbA,EAAKzC,MAELwB,EAAKqS,mBAAmB6kB,gBAAgBj2B,EAAK+S,SAC7C0V,EAAMG,OAAO5oB,IAEbyoB,EAAM7Q,QAAQ5X,KAEnB6a,KAAK,SAAUyxC,EAAOC,EAAYC,GACjC/jC,EAAMG,OAAO0jC,EAAOC,EAAYC,KAG7B/jC,EAAM1R,WAMjB+a,SAAU,WAGN,OAFW9yB,KACKoS,mBACJ0gB,YAMhB26B,kBAAmB,SAAUv4C,GACzB,IACIzP,EAASvJ,IACT4+B,EAFO96B,KAESoS,mBAAmBkI,WAAWpF,GAKlD,OAJAhZ,EAAE2E,KAAKi6B,EAAU,SAAUj3B,EAAG+L,GAC1BnK,EAASA,EAAOmG,IAAI1P,EAAE0T,EAAK9O,YAGxB2E,GAGXioD,qBAAsB,SAAUC,GAC5B,IACI5zB,EAAM,uCACVA,EAAMA,EAAIl0B,QAAQ,MAFP7F,KAEmB2F,WAAWioD,eACzCD,EAAWA,EAAS9nD,QAAQ,KAAM,MAAMA,QAAQ,IAAK,MACrD,IAAIwmB,EAASvgB,OAAOgB,KAAKsS,eAIzB,OAFA2a,GADAA,EAAMA,EAAIl0B,QAAQ,MAAOwmB,IACfxmB,QAAQ,MAAO8nD,IAQ7BE,eAAgB,SAAU34C,GACtB,IAEI2J,EADAic,EADO96B,KACSoS,mBAAmBkI,WAAWpF,GAOlD,OALAhZ,EAAE2E,KAAKi6B,EAAU,SAAUv7B,EAAOqQ,GACzBiP,IAAWjP,EAAKjK,WAAW8P,WAC5BoJ,EAAUjP,KAGdiP,EACOA,EAAQ4D,WAER,MAOf8T,YAAa,WACT,IACI5wB,EADO3F,KACW2F,WADX3F,KAGKoS,mBACXmkB,YAAY5wB,EAAWwP,KAMhC24C,WAAY,SAAU/zB,EAAK76B,GACvB4M,OAAOgB,KAAK4X,cAAc,yCAM9BqpC,UAAW,SAAUh0B,EAAK76B,GACtB4M,OAAOgB,KAAK4X,cAAc,wCAG9B+C,oBAAqB,WACNznB,KACN2F,WAAWsY,cADLje,KAC0BwL,MAD1BxL,KACuC2F,WAAW6F,SAOrEtP,EAAEmV,MAAMjS,OAAO,sCAKXwtD,mBAAoB,aAGpBC,cAAe,aAIfM,iBAAkB,WACd,OAAOrhD,OAAOsJ,UAAUa,OAAO/H,UAAUuU,SAAStU,MAAMnO,KAAMoO,YAIlE8+C,iBAAkB,SAAU1hD,GACxB,OAAOM,OAAOsJ,UAAUa,OAAO/H,UAAU2V,SAAS1V,MAAMnO,KAAMoO,YAGlE4+C,mBAAoB,aAGpBC,iBAAkB,WAEd,OAAOnhD,OAAOsJ,UAAUa,OAAO/H,UAAUqW,gBAAgBpW,MAAMnO,KAAMoO,YAGzEqF,QAAS,WACMzT,KAGNyM,YASbvQ,EAAEmV,MAAMjS,OAAO,wCAKXQ,KAAM,SAAUV,GACDc,KAGNyM,OAAOvN,GAHDc,KAKNguD,cAAgB9uD,EALVc,KAMN4tD,cAAgB5tD,KAAK2F,WAAWioD,cAN1B5tD,KAONiuD,cAAgBjuD,KAAK2F,WAAWkZ,SAMzCoC,mBAAoB,WAChB,IAAIlhB,EAAOC,KACX9D,EAAEyU,KAAK5Q,EAAKmuD,uBACXr9C,KAAK,SAAUgO,GAYZ,OAXAA,EAAQ/d,QAAUf,EAAKe,QAGnBf,EAAKqoC,SACLvpB,EAAQsvC,UAAW,EACnBtvC,EAAQoD,KAAOliB,EAAKkiB,KACpBpD,EAAQsX,aAAep2B,EAAKo2B,aAC5BtX,EAAQlZ,WAAWqM,aAAejS,EAAKquD,uBAAuBvvC,GAC9DA,EAAQqC,WAAanhB,EAAKqoC,OAAOlnB,YAG9BrC,EAAQoC,wBAOvBmtC,uBAAwB,SAAUvvC,GAC9B,IACIlZ,EAAakZ,EAAQlZ,WAEzB,OAAIkZ,EAAQsvC,SACDxoD,EAAWqM,aAAajQ,OAAS,EAAI4D,EAAWqM,aAAe,IAAM6M,EAAQoD,KAAKtc,WAAWuP,MAAQ,OAAS2J,EAAQsX,aAAe,IAAMtX,EAAQoD,KAAKtc,WAAWuP,MAAQ,OAAS2J,EAAQsX,aAAe,IAG/MxwB,EAAWqM,cAItBq8C,qBAAsB,SAASnvD,GAC3BgD,QAAQ2f,IAAI,oBAMhBysC,0BAA2B,SAAUzvC,SACjC,IAAI9e,KAAOC,KACX,IAAK,IAAIqS,OAAOwM,QAAQxN,MAAMnD,UAEf,QAAPmE,KAAwB,eAAPA,KAA+B,SAAPA,KAAyB,aAAPA,KAA6B,eAAPA,KAC1E,WAAPA,KAA2B,UAAPA,KAA0B,kBAAPA,KAAkC,WAAPA,MAGtEtS,KAAKsS,KAAO64B,KAAK,mFAAqF74B,IAAM,iEAIhHwM,QAAQlZ,WAAa5F,KAAK4F,WAC1BkZ,QAAQrT,MAAQzL,KAAKyL,OAGzBiI,QAAS,WACL,IAAI1T,EAAOC,KAEX6J,WAAW,WACH9J,EAAKwuD,oBACLxuD,EAAKwuD,kBAAkBv7C,OAAO,gBAC9BjT,EAAKwuD,kBAAkB96C,YAE5B3H,OAAO6H,SAASC,aAAe,IAGlC7T,EAAK0M,YCjXbvQ,EAAEmV,MAAMjS,OAAO,gCAMX0S,eAAgB,SAAU9Q,GAEtBhB,KAAKyM,OAAOzL,GAEZ,IAAI2E,EAAa3F,KAAK2F,WAEtBA,EAAWyoB,SAA4D,MAAjDtiB,OAAOgB,KAAK4I,aAAa/P,EAAWyoB,WAAoBtiB,OAAOgB,KAAK4I,aAAa/P,EAAWyoB,UAClHzoB,EAAW6oD,uBAAuB7oD,EAAW6oD,sBAAuB7oD,EAAW6oD,qBAC/E7oD,EAAW8oD,mBAA6ChvD,IAA7BkG,EAAW8oD,eAA8B9oD,EAAW8oD,cAC/E9oD,EAAWnB,SAASmB,EAAWnB,QAASmB,EAAWnB,OAE/CmB,EAAWD,SACXC,EAAWD,QAAUoG,OAAOgB,KAAK2Q,KAAK9X,EAAWD,SAEf,IAA9BC,EAAWD,QAAQ3D,SACnB4D,EAAWD,QAAU1F,KAAKgM,YAAY,2CAG1CrG,EAAWD,QAAU1F,KAAKgM,YAAY,0CAQ9C2U,cAAe,WACX,IAAI5gB,EAAOC,KAEXD,EAAK2uD,mBAEL,IAAI/oD,EAAa5F,EAAK4F,WAClB+Q,EAAO3W,EAAKoT,UACZw7C,EAAuBhpD,EAAW6oD,qBAClCC,EAAgB9oD,EAAW8oD,cAC3BnqD,EAAWvE,EAAK0R,cAAcwN,YAAYlf,EAAKkf,eAC/C2vC,EAAYjpD,EAAW6F,UACvBm2C,GAAUiN,GAAkC,IAArBA,EAAU7sD,OAGjCqC,EAAOrE,EAAK8uD,eAAevqD,EAAUoS,EAAMi4C,EAAsBF,EAAe9oD,EAAYg8C,GAG5Fj2C,EAAQ1L,KAAK8uD,oBAAoBF,GAIrC,OAHAljD,GAAS1L,KAAK+uD,kBAAkBH,EAAWjN,EAASgN,GAEpDvqD,EAAOrE,EAAKgiD,iBAAiB39C,EAAMsH,IAcvCmjD,eAAgB,SAAUvqD,EAAUoS,EAAMi4C,EAAsBF,EAAe9oD,EAAYg8C,GAGvF,OAAOzlD,EAAEqjB,SAASjb,GACd0qD,kBAAkB,EAClBv5C,SAAmB,cAATiB,EACVA,KAAMA,EACN83C,qBAAsBG,EACtBj8C,SAAU/M,EAAW+M,SACrBu8C,cAAeR,EACfv5C,MATOlV,KASKimD,SAAStgD,EAAWuP,OAChC1Q,OAAQmB,EAAWnB,OACnBkB,QAASC,EAAWD,QACpBi8C,QAASA,EACTjf,gBAAiB/8B,EAAW+8B,mBASpCujB,SAAU,SAAU/wC,GAChB,OAAOA,GAMXw5C,iBAAkB,aAOlBQ,eAAgB,WACZ,OAAO,GAQXC,iBAAkB,SAAUj6C,GACxB,OAAOA,GAOXgxC,gBAAiB,WACb,OAAOlmD,KAAK2F,WAAWqM,cAQ3Bo9C,mBAAoB,SAAUxN,GAC1B,IAAI7hD,EAAOC,KACP0W,EAAO3W,EAAKoT,UACZ7O,EAAWvE,EAAK0R,cAAcwN,YAAYlf,EAAKoqD,mBAC/CpwB,EAAMh6B,EAAKmiD,aAAaN,GAc5B,MAXa,cAATlrC,IAAsBqjB,EAAM,uBAErB79B,EAAEqjB,SAASjb,GAClBy1B,IAAKA,EACLiC,YAAaj8B,EAAK4F,WAAWq2B,YAC7BmmB,SAAUP,EAAKC,SACfnrC,KAAMA,EACNjB,SAAU1V,EAAK4F,WAAW8P,SAC1B45C,QAAQ,KAWhBnN,aAAc,SAAUN,GACpB,IAAI7hD,EAAOC,KACP2F,EAAa5F,EAAK4F,WAEtB,OAAO5F,EAAK2R,YAAY0wC,kBACpBhnC,SAAUzV,EAAWwP,GACrBD,MAAOnV,EAAKovD,iBAAiBxpD,EAAWuP,OACxClD,aAAcjS,EAAKmmD,kBACnBh0C,YAAavM,EAAWuM,YACxBmwC,OAAQT,EAAKzsC,GACbqV,UAAWzqB,EAAKwqB,kBAQxB+kC,qBAAsB,WAClB,IAAIvvD,EAAOC,KACP2F,EAAa5F,EAAK4F,WAWtB,OATiB5F,EAAK2R,YAAY69C,4BAC9Br6C,MAAOnV,EAAKovD,iBAAiBxpD,EAAWuP,OACxClD,aAAcjS,EAAKmmD,kBACnBh0C,YAAavM,EAAWuM,YACxBsC,OAAQ7O,EAAW6pD,OACnBvS,WAAYt3C,EAAW8pD,WACvBjlC,UAAWzqB,EAAKwqB,kBAUxBjJ,WAAY,WAIR,OAFAthB,KAAKyM,SAEE,eAMX8U,mBAAoB,WAChB,IAAIxhB,EAAOC,KAGX,GAAa,WAFFD,EAAKoT,UAEO,CACnB,IAAI0L,EAAU9e,EAAKmhB,aACfwuC,EAAc3vD,EAAK4gB,gBAEvB9B,EAAQra,OAAOkrD,GAEf3vD,EAAK4vD,0BAA0B9wC,GAG/B9e,EAAKuhB,eAQbsuC,kBAAmB,WAGf,OADW5vD,KAAKoS,mBACJygB,gBAOhBxE,KAAM,WAGF,OAFWruB,KAAKoS,mBAEJ0gB,YAShBivB,iBAAkB,SAAU39C,EAAMyB,GAC9B,OAAOzB,EAAKyB,QAAQ,YAAaA,IASrCgqD,mBAAoB,SAAUzrD,EAAMyB,GAChC,OAAOzB,EAAKyB,QAAQ,cAAeA,IAOvCkU,UAAW,WAEP,OAAO,GAQX1O,QAAS,SAAUqP,GACf,IAEI3G,EAFAhU,EAAOC,KACP2F,EAAa5F,EAAK4F,WAItB,OAAqD,IAAjDmG,OAAOgB,KAAK4I,aAAa/P,EAAWgQ,YAIc,IAAlD7J,OAAOgB,KAAK4I,aAAa/P,EAAW8P,YAKxC1V,EAAKmiB,qBAAqB,MAGtBvc,EAAW+M,WAAa/M,EAAWmqD,gBAC/B/vD,EAAKyL,SACDzL,EAAKyL,MAAMzJ,OAAS,IACxBgS,EAAUhU,EAAKiM,YAAY,iCAC3B0O,EAAgBxZ,MAAMgU,MAAOvP,EAAWuP,MAAOnB,QAASA,KACjD,OAUnB+E,kBAAmB,WACf,IAAI/Y,EAAOC,KACP6e,EAAU9e,EAAKmhB,aACfxK,EAAO3W,EAAKoT,UAGhBpT,EAAK0M,SAGL,IAAIsjD,EAAe7zD,EAAE,sCAAuC2iB,GAC/C,cAATnI,GACAq5C,EAAa/tD,MAAM,SAAUpE,GACzB,IAAIA,EAAEoyD,uBAAN,CAKA,GAJApyD,EAAEwD,kBAEFrB,EAAK4F,WAAWmqD,gBAAiB,EAE7B/vD,EAAK4F,WAAWyoB,SAEFruB,EAAK6vD,qBAEf7vD,EAAKkwD,gCAITlwD,EAAKkwD,2BAGTlwD,EAAK4F,WAAWmqD,gBAAiB,KAKzC5zD,EAAE,8BAA+B2iB,GAAS7c,MAAM,SAAUpE,GAClDA,EAAEoyD,yBACNpyD,EAAEwD,kBAEFrB,EAAKmwD,oBAAoBh0D,EAAE8D,MAAMgB,KAAK,OAAQ9E,EAAE8D,MAAMgB,KAAK,gBAI/D9E,EAAE,6CAA8C2iB,GAAS7c,MAAM,SAAUpE,GACjEA,EAAEoyD,yBACNpyD,EAAEwD,kBAEFrB,EAAKowD,uBAAuBj0D,EAAE8D,MAAMgB,KAAK,iBAQjDmvD,uBAAwB,SAAUhO,GAC9B,IAAIpiD,EAAOC,KACPd,GACAgW,MAAOnV,EAAK4F,WAAWuP,MAAQ,cAAgBitC,EAAW,KAC1D/mC,SAAUrb,EAAK4F,WAAWwP,GAC1BnD,aAAcjS,EAAKmmD,kBACnBh0C,YAAanS,EAAK4F,WAAWuM,aAGjCnS,EAAKgO,eAEL7R,EAAEyU,KAAK5Q,EAAK2R,YAAY6wC,iBAAiBrjD,IACpC2R,KAAK,WACF3U,EAAEyU,KAAK5Q,EAAK2R,YAAYwJ,cAAcovC,iBAClCp1C,MAAOnV,EAAK4F,WAAWuP,MACvBkG,SAAUrb,EAAK4F,WAAWwP,GAC1BnD,aAAcjS,EAAKmmD,kBACnBh0C,YAAanS,EAAK4F,WAAWuM,YAC7B2c,SAAU,WACVhe,KAAK,SAAU+9C,GACf7uD,EAAKqwD,8BAA8BxB,GAAW,EAAO7uD,EAAK4F,WAAW6oD,sBAGrEzuD,EAAK+U,kBAQrBm7C,yBAA0B,WACtB,IAAIlwD,EAAOC,KACP2F,EAAa5F,EAAK4F,WAEtB5F,EAAKgO,eAGLpI,EAAW0qD,aAAetwD,EAAKmmD,kBAC/BvgD,EAAWuP,MAAQnV,EAAKovD,iBAAiBxpD,EAAWuP,OAEpDnV,EAAKsuB,OAAOxd,KAAK,WAEb/E,OAAO8tB,sBAAuB,EAE9B19B,EAAEyU,KAAK5Q,EAAK2R,YAAY4+C,yBAAyB3qD,IAC5CkL,KAAK,WAGF3U,EAAEyU,KAAK5Q,EAAK2R,YAAYwJ,cAAcovC,iBAClCp1C,MAAOvP,EAAWuP,MAClBkG,SAAUzV,EAAWwP,GACrBnD,aAAcjS,EAAKmmD,kBACnBh0C,YAAavM,EAAWuM,YACxB2c,SAAU,WACVhe,KAAK,SAAU+9C,GACf7uD,EAAKwwD,gCAAgC3B,GAAW,EAAOjpD,EAAW6oD,sBAGlEzuD,EAAK+U,iBAGV+G,KAAK,SAAU1Z,GAClBpC,EAAK+U,aAGL/U,EAAKuU,iBAAiBnS,OAE3B0Z,KAAK,SAAU9H,GACdhU,EAAK+U,aAGL/U,EAAKuU,iBAAiBP,MAQ9BO,iBAAkB,SAAUnS,GACxB,IACI6R,EADOhU,KACKoS,mBACZo+C,EAFOxwD,KAEY2R,UAAU3F,YAAY,+BAA+BnG,QAAQ,MAAOs7C,gBAAgBC,mBAE3G,IACIoP,EAAcruD,QAAyC,IAAxBA,EAAkB,aAAoBsS,KAAKC,MAAMvS,EAAMyS,cAAcb,QAAU5R,EAChH,MAAOvE,IAGToW,EAAKijB,gBAAgBu5B,GACrBx8C,EAAKc,cAMT27C,kBAAmB,aAQnBP,oBAAqB,SAAUn2B,EAAKooB,KAQpCuO,kBAAmB,SAAU9O,GAEzB,GAAYniD,MAARmiD,GAAqC,IAAhBA,EAAK+O,OAC1B,MAAO,8CAKX,OAFgB/O,EAAKt3C,OAAQs3C,EAAK1U,YAAY,KAAO,IAGjD,IAAK,OACD,MAAO,qCACX,IAAK,MACD,MAAO,qCACX,IAAK,OACD,MAAO,qCACX,QACI,MAAO,gDAUnB0jB,gBAAiB,SAAUhC,EAAWjN,EAASgN,GAC3C,IACI9vC,EADO7e,KACQkhB,aACf9c,EAAO,GACPysD,EAAoB30D,EAAE,2BAA4B2iB,GAGtDgyC,EAAkBtrD,QAGlBnB,GAAQpE,KAAK8uD,oBAAoBF,GAGjCxqD,GAAQpE,KAAK+uD,kBAAkBH,EAAWjN,EAASgN,GAEnDkC,EAAkBrsD,OAAOJ,GAddpE,KAiBN6jB,SAAS+qC,IAQlBkC,0BAA2B,SAAUlP,GACjC,IAAI7hD,EAAOC,KACP2F,EAAa5F,EAAK4F,WAClB+Q,EAAO3W,EAAKoT,UAEZ7O,EAAWvE,EAAK0R,cAAcwN,YAAYlf,EAAKoqD,mBAC/CpwB,EAAMh6B,EAAKuvD,uBAGF,cAAT54C,IAAsBqjB,EAAM,uBAEhC,IAAI31B,EAAOlI,EAAEqjB,SAASjb,GAClBy1B,IAAKA,EACLiC,YAAar2B,EAAWq2B,YACxBmmB,SAAUP,EAAKC,SACfnrC,KAAMA,EACN24C,QAAQ,IAGZ,OAAOtvD,EAAKgxD,mBAAmB3sD,IAQnC2sD,mBAAoB,SAAU3sD,GAC1B,IAAI4sD,EAAa5sD,EAAK1B,QAAQ,0DAE9B,GAAIsuD,EAAa,EAAG,CAChB,IAAIC,EAAa7sD,EAAK2F,UAAUinD,GAC5BE,EAAcD,EAAWvuD,QAAQ,WAAa,EAElD,OAAO0B,EAAK2F,UAAU,EAAGinD,GAAcC,EAAWlnD,UAAUmnD,GAE5D,OAAO9sD,GAUfmsD,gCAAiC,SAAU3B,EAAWjN,EAASgN,GAE3D3uD,KAAK4wD,gBAAgBhC,EAAWjN,EAASgN,GACzC3uD,KAAKwL,MAAQojD,EAGb5uD,KAAKywD,oBACLzwD,KAAK8Y,qBASTs3C,8BAA+B,SAAUxB,EAAWjN,EAASgN,GAEzD3uD,KAAK4wD,gBAAgBhC,EAAWjN,EAASgN,GACzC3uD,KAAKwL,MAAQojD,EAGb5uD,KAAK8Y,qBAQTg2C,oBAAqB,SAAUF,GAG3B,IAFA,IAAIljD,EAAQ,GAEH7H,EAAI,EAAGA,EAAI+qD,EAAU7sD,OAAQ8B,IAAK,CACvC,IAAInG,GAAYyX,GAAIy5C,EAAU/qD,GAAG,GAAIg+C,SAAU+M,EAAU/qD,GAAG,IAG5D6H,GAFW1L,KAAKovD,mBAAmB1xD,GAKvC,OAAOgO,GAUXqjD,kBAAmB,SAAUH,EAAWjN,EAASgN,GAC7C,IAAIhjD,EAAU,GAEd,GAAIgjD,IAA0BhN,GAAWiN,EAAU7sD,OAAS,EAAI,CAC5D,IAAIovD,GAA4BtP,SAAU7hD,KAAKgM,YAAY,yCAG3DL,GAFa3L,KAAK8wD,0BAA0BK,GAKhD,OAAOxlD,GAGXsT,YAAa,WACT,MAAO,YAGXkrC,gBAAiB,WACb,MAAO,iBAGXiH,iBAAkB,WACd,MAAO,cAGXC,oBAAqB,WACjB,MAAO,qBAGXC,oBAAqB,WACjB,MAAO,uBC3oBfxlD,OAAOsJ,UAAUtU,QAAQ1B,OAAO,sCAI5BQ,KAAM,SAAUV,GAEZc,KAAKyM,OAAOvN,GAEZc,KAAKuxD,eAAiBryD,EAAO0nB,UAC7B5mB,KAAKgB,KAAO9B,EAAO8B,KACf9B,EAAOuwC,gBACPzvC,KAAK4mB,UAAY,IAAI5mB,KAAKuxD,gBACtBvwD,KAAMhB,KAAKgB,KACXwH,OAAQxI,KAAKwI,OACbiJ,cAAezR,KAAKyR,cACpBC,YAAa1R,KAAK0R,cAEtB1R,KAAK4mB,UAAU1F,WAAalhB,KAAKkhB,WACjChiB,EAAO0nB,UAAY5mB,KAAK4mB,UACxB5mB,KAAK4mB,UAAUjhB,WAAWwoD,UAAW,GAErCnuD,KAAKwxD,mBAETxxD,KAAKiiB,KAAO/iB,EAAOsJ,OAGnB,IAAI7C,EAAa3F,KAAK2F,WACtBA,EAAW8rD,cAAsE,MAAtD3lD,OAAOgB,KAAK4I,aAAa/P,EAAW8rD,gBAAyB3lD,OAAOgB,KAAK4I,aAAa/P,EAAW8rD,eAC5H9rD,EAAW+iB,MAAQ/iB,EAAW+iB,OAAS,SACvC/iB,EAAW+X,WAAa/X,EAAW+X,eACnC/X,EAAW2X,oBAAsD,IAA7B3X,EAAW2X,gBAAiCxR,OAAOgB,KAAK4I,aAAa/P,EAAW2X,gBACpH3X,EAAW8pC,eAAiBvwC,EAAOuwC,eACnC9pC,EAAW8P,cAA0C,IAAvB9P,EAAW8P,UAA2B3J,OAAOgB,KAAK4I,aAAa/P,EAAW8P,UACxG9P,EAAWgQ,aAAwC,IAAtBhQ,EAAWgQ,SAA0B7J,OAAOgB,KAAK4I,aAAa/P,EAAWgQ,SACtGhQ,EAAW+M,cAA0C,IAAvB/M,EAAW+M,UAA2B5G,OAAOgB,KAAK4I,aAAa/P,EAAW+M,UACxG/M,EAAW+rD,gBAA8C,IAAzB/rD,EAAW+rD,YAA6B5lD,OAAOgB,KAAK4I,aAAa/P,EAAW+rD,YAG5G,IACQxyD,EAAOsJ,QAAsD,kBAArCtJ,EAAOsJ,OAAO7C,WAAW8P,WAA0BvW,EAAOsJ,OAAO7C,WAAW8P,WACpG9P,EAAW8P,UAAW,GAE5B,MAAO7X,IAIToC,KAAK2xD,cAAmClyD,IAAxBkG,EAAWgsD,UAAyBhsD,EAAWgsD,SAC3D3xD,KAAK2xD,WAAUhsD,EAAW8P,SAAW/C,UAAW,GAGpD1S,KAAK6V,mBAAqBpB,KAAKC,MAAMD,KAAKqB,OAAOnQ,KAMrDisD,WAAY,WACR,OAAO,GAOX1wC,WAAY,WAER,OAAOhlB,EAAE,4BADE8D,KACgCc,SADhCd,KACgD4R,oBAK/DiV,aAAc,SAAUsP,GACpB,IAAIp2B,EAAOC,KAEX,GADiBD,EAAK4F,WACP8pC,eACX,OAAO1vC,EAAK6mB,UAGZ,IAAIA,EAAY7mB,EAAKyxD,gBAAgBr7B,GACrC,GAAiB12B,MAAbmnB,EAAwB,CACW,iBAAxB7mB,EAAKyxD,kBACZzxD,EAAKyxD,oBAET,IAAIK,EAAyB,IAAI7xD,KAAKuxD,gBAClCvwD,KAAM8K,OAAO0K,MAAMxW,KAAKgB,MACxBwH,OAAQxI,KAAKwI,OACbiJ,cAAezR,KAAKyR,cACpBC,YAAa1R,KAAK0R,cAEtBkV,EAAYirC,EACZ9xD,EAAKyxD,gBAAgBr7B,GAAgB07B,EAGrCjrC,EAAUuP,aAAeA,EAGzBp2B,EAAK+xD,eAAelrC,GAGA,WAAhBuP,GAA0D,eAA7BvP,EAAUjhB,WAAWpH,MAAsD,gBAA7BqoB,EAAUjhB,WAAWpH,OAEhGqoB,EAAU7E,gBAAkB,SAAUvW,GACpBxL,KAAKkhB,aAGX9c,KAAKoH,KAIzB,OAAOob,GAMftT,MAAO,WACH,OAAOtT,KAAK8mB,cAAc/O,WAM9Bo6B,WAAY,aAMZp4B,UAAW,SAAUoc,EAAckb,GAC/B,IACIzqB,EADO5mB,KACU6mB,aAAasP,GAMlC,OAJIkb,IACAzqB,EAAUjhB,WAAWgQ,QAAU07B,EAAc17B,QAC7CiR,EAAUjhB,WAAW8P,SAAW47B,EAAc57B,UAE3CmR,EAAU7M,cAPN/Z,KAO4B2F,WAAW8P,UAPvCzV,KAOwDia,eAAmB2M,EAAUjhB,WAAW8P,UAPhGzV,KAOiHia,cAAkB2M,EAAUjhB,WAA6B,oBAKzL6vC,aAAc,SAAUrf,EAAc3qB,EAAO0pB,EAAU68B,GACnD,IACInrC,EADO5mB,KACU6mB,aAAasP,GAC9Bzb,KAgBJ,OAdIq3C,EAAkBp8C,UAJX3V,KAKF6jB,SAASsS,EAAc3qB,GAG5Bob,EAAUjhB,WAAazJ,EAAEkD,OAAOwnB,EAAUjhB,WAAYosD,GAR/C/xD,KAUEiiB,WAAmC,IAApB2E,EAAc,OAClCA,EAAU3E,KAXPjiB,KAWmBiiB,MAI1B2E,EAAUvb,QAAQqP,MAGlBA,EAAgB3Y,OAAS,KACzB7F,EAAE2E,KAAK6Z,EAAiB,SAAU7W,EAAGmuD,GACjC98B,EAASh0B,KAAK8wD,EAAej+C,YAE1B,IAQf+9C,eAAgB,SAAUlrC,KAM1B3Q,OAAQ,SAAUkgB,EAAc3qB,GAC5B,IAAIzL,EAAOC,KACP2F,EAAa5F,EAAK4F,WAElBihB,EAAY7mB,EAAK8mB,aAAasP,GAgBlC,GAfAvP,EAAU3E,KAAOliB,EAAKkiB,KACtB2E,EAAUwhB,OAASpoC,KACnB4mB,EAAUuP,aAAeA,EAGzBp2B,EAAK8jB,SAASsS,EAAc3qB,GAG5BzL,EAAKkyD,kCAAkC97B,GAGvCp2B,EAAKoc,SAAU,GAIVxW,EAAW8P,UAA6B,wCAAjBrH,UAAU,GAClC,OAAOrO,EAAK6gB,eAAezS,MAAMpO,EAAMqO,WAG3CrO,EAAK+mB,cAAgB,IAAI5qB,EAAE0b,SAC3B,IAAI+8B,EAAO/tB,EAAU3Q,OAAO,QAW5B,OARA2Q,EAAU7hB,KAAK,eAAgB,WAC3BhF,EAAKoc,SAAU,IAGnBpc,EAAKgF,KAAK,WAAY,WAClBhF,EAAK+mB,cAAclO,YAGhB+7B,GAKXrzB,WAAY,SAAU6U,EAAcwe,GACrB30C,KACU6mB,aAAasP,GACxB1c,kBAAkBk7B,IAKhC/zB,eAAgB,SAAUuV,EAAc3qB,GACpC,IAAIzL,EAAOC,KAEP4mB,EAAY7mB,EAAK8mB,aAAasP,GAClCvP,EAAU3E,KAAOliB,EAAKkiB,KACtB2E,EAAUwhB,OAASpoC,KACnB4mB,EAAUuP,aAAeA,EAGzBp2B,EAAK8jB,SAASsS,EAAc3qB,GAG5BzL,EAAKkyD,kCAAkC97B,GAGvCvP,EAAUjhB,WAAW8P,UAAW,EAGhC1V,EAAK+mB,cAAgB,IAAI5qB,EAAE0b,SAC3B,IAAInS,EAASmhB,EAAU3Q,OAAO,iBAO9B,OALAlW,EAAKgF,KAAK,WAAY,WAClBhF,EAAK+mB,cAAclO,YAIhBnT,GAMXysD,cAAe,SAAU7/C,EAAK7G,GAC1B,IACI/F,EADOzF,KACOyR,cAAcwN,YAAY,gBAC5C,OAAO/iB,EAAE47B,KAAKryB,GAAQrB,QAM1Bmd,mBAAoB,SAAU4U,EAAcwe,GACxC,IACI/tB,EADO5mB,KACU6mB,aAAasP,GAC9B1gB,EAFOzV,KAES2F,WAAW8P,SAC/BmR,EAAUjhB,WAAW8P,UAAW,EAHrBzV,KAIF2F,WAAW8pC,iBAChB7oB,EAAU9lB,QAAU6zC,GAExB/tB,EAAUnN,kBAAkBk7B,GAC5B/tB,EAAUjhB,WAAW8P,SAAWA,GAMpC08C,kBAAmB,WACf,OAAO,GAMXC,QAAS,WACL,OAAOpyD,KAAK4mB,UAAUrC,mBAK1B8tC,gBAAiB,SAAUhgD,GACvBrS,KAAKm2B,aAAe9jB,GAKxBwR,SAAU,SAAUsS,EAAc3qB,GAC9B,IAEIob,EAFO5mB,KAEU6mB,aAAasP,GACjB,aAAbvP,GAAyC,MAAbA,IAE5BA,EAAUjhB,WAAWsY,cAAgBzS,EACrCob,EAAUjhB,WAAWuY,cAAgB1S,EAEhC,MAACA,QAA4E/L,IAR3EO,KAQ+C2F,WAAW2sD,mBAA+D7yD,IARzHO,KAQ6F2F,WAAWkgB,cAAiDpmB,MAAlBmnB,EAAU3E,OACpJzW,EATGxL,KASUuyD,gBAAgBp8B,EAAcvP,IAG/CA,EAAUjhB,WAAW6F,MAAQA,EAC7Bob,EAAU/C,SAASrY,GAAO,KAOlC+mD,gBAAiB,SAAUp8B,EAAcvP,GACrC,IACIpb,EADOxL,KACM2F,WAAW2sD,cADjBtyD,KACsC2F,WAAWkgB,aAK5D,OAHAe,EAAU3E,KAAKmvB,QAAQjb,GAAgBvP,EAAU3E,KAAKmvB,QAAQjb,OAC9DvP,EAAU3E,KAAKmvB,QAAQjb,GAJZn2B,KAI+B2F,WAAWuP,OAAS1J,EAEvDA,GAKXiX,SAAU,SAAU0T,GAGhB,OAFWn2B,KACU6mB,aAAasP,GACjB1T,YAKrB+vC,kBAAmB,SAAUr8B,GACzB,OAAOn2B,KAAKyiB,SAAS0T,IAKzB7jB,eAAgB,WACZ,OAAOxG,OAAOsJ,UAAUtU,QAAQ0Q,qBAKpCyI,WAAY,WACR,OAAOja,KAAKmc,SAKhBxb,QAAS,SAAUiH,EAAW5G,GACtBhB,KAAK4mB,WACL5mB,KAAK4mB,UAAUjmB,QAAQiH,EAAW5G,IAK1C+R,eAAgB,SAAUnL,EAAW5G,GAC7BhB,KAAK4mB,WACL5mB,KAAK4mB,UAAU7T,eAAenL,EAAW5G,IAKjD+D,KAAM,SAAU6C,EAAW7I,GACnBiB,KAAK4mB,WACL5mB,KAAK4mB,UAAU7hB,KAAK6C,EAAW7I,IAKvCiU,OAAQ,SAAUpL,EAAW7I,GACrBiB,KAAK4mB,WACL5mB,KAAK4mB,UAAU5T,OAAOpL,EAAW7I,IAKzCkzD,kCAAmC,SAAU97B,GACzC,IACIvP,EADO5mB,KACU6mB,aAAasP,GAGlCvP,EAAUjhB,WAAW8P,SAAWzV,KAAK2F,WAAW8P,SAChDmR,EAAUjhB,WAAWgQ,QAAU3V,KAAK2F,WAAWgQ,QAC/CiR,EAAUjhB,WAAW+M,SAAW1S,KAAK2F,WAAW+M,UAGpD+/C,mBAAoB,SAAU9sD,GAC1B,IAAI5F,EAAOC,KAEXD,EAAK4F,WAAW8P,SAAW9P,EAAW8P,UAAY1V,EAAK4F,WAAW8P,SAClE1V,EAAK4F,WAAWgQ,QAAUhQ,EAAWgQ,SAAW5V,EAAK4F,WAAWgQ,QAChE5V,EAAK4F,WAAW+M,SAAW/M,EAAW+M,UAAY3S,EAAK4F,WAAW+M,UAMtEggD,YAAa,WACT,IAGI9rC,EAHO5mB,KAGU2yD,0BACrB,OAAI/rC,GAAaA,EAAUgsC,cAChBhsC,EAAUgsC,gBALV5yD,KASC2F,WAAWuP,OAM3By9C,wBAAyB,WACrB,IACIziD,EAGJ,IAAKA,KAASlQ,KAAKwxD,gBAAiB,MAGpC,OAAIthD,EAAclQ,KAAKwxD,gBAAgBthD,GAEhC,MAGXuD,QAAS,WACL,IAAI1T,EAAOC,KAEX6J,WAAW,WACH9J,EAAK6mB,YACL7mB,EAAK6mB,UAAU5T,OAAO,gBACtBjT,EAAK6mB,UAAUnT,WAGf1T,EAAKyxD,iBACL1lD,OAAOgB,KAAK+lD,UAAU9yD,EAAKyxD,gBAAiB,SAAUn/C,EAAK4D,GACnDA,IACAA,EAAOjD,OAAO,gBACdiD,EAAOxC,cAIpB3H,OAAO6H,SAASC,aAAe,IAGlC7T,EAAK0M,YC1cbvQ,EAAEmV,MAAMjS,OAAO,wCAKXQ,KAAM,SAAUV,GAEZc,KAAKyM,OAAOvN,GAGKc,KAAK2F,WAGX8P,SAAW/C,UAAW,GAMrCk/C,WAAY,WACR,OAAO,GAOX37C,OAAQ,SAAUkgB,EAAc3qB,GAC5B,MAAqB,iBAAVA,GACPA,EAAQM,OAAOgB,KAAK0X,aAAahZ,IACN0T,WAAW,MAAO,SAASA,WAAW,KAAM,SAGxD,OAAV1T,EACE,GAGJA,GAMX8V,WAAY,SAAU6U,EAAcwe,KAOpC/zB,eAAgB,SAAUuV,EAAc3qB,GACpC,OAAOxL,KAAKiW,OAAOkgB,EAAc3qB,IAMrC+V,mBAAoB,SAAU4U,EAAcwe,KAO5Ca,aAAc,WAEV,OAAO,KCnEft5C,EAAEmV,MAAMjS,OAAO,qCAKXQ,KAAM,SAAUV,GAEZc,KAAKyM,OAAOvN,GAGZ,IAAIyG,EAAa3F,KAAK2F,WACtBA,EAAWyhC,YAAct7B,OAAOgB,KAAK4I,aAAa/P,EAAWyhC,eAAgB,GAOjF0qB,eAAgB,SAAUlrC,GACtB,IAAIjhB,EAAa3F,KAAK2F,WAEtB3F,KAAKyM,OAAOma,GAEPjhB,EAAWyhC,cACZxgB,EAAUksC,gBAAkBlsC,EAAUoY,QACtCpY,EAAUoY,QAAUh/B,KAAK+yD,mBACzBnsC,EAAUosC,aAAehzD,KAAKgzD,eAItCA,aAAc,SAAU79C,GACpB,IACI1P,KASJ,OARIzF,KAAKooC,QAAUpoC,KAAKooC,OAAOC,WAC3BnsC,EAAE2E,KAAKb,KAAKooC,OAAOC,UAAW,SAAUh2B,EAAK7G,GACrCA,EAAM2J,IAAMA,IACZ1P,EAAS+F,KAKd/F,GAMXstD,mBAAoB,SAAU7zD,GAC1B,IAAIkpC,EAASpoC,KAAKooC,OAClB,OAAIA,EAAOC,UAAkBD,EAAOC,UAChCD,EAAO6qB,aAAqB7qB,EAAO7B,aAGvC6B,EAAO6qB,cAAe,EACtB7qB,EAAO7B,YAAcrqC,EAAEyU,KAAK3Q,KAAK8yD,gBAAgB5zD,IAChDgoB,KAAK,SAAUzhB,GAGZ,OAFA2iC,EAAOC,UAAY5iC,EACnB2iC,EAAO6qB,cAAe,EACfxtD,IAGJ2iC,EAAO7B,cAMlB1iB,SAAU,SAASsS,EAAc3qB,GAC7B,IAAIzL,EAAOC,KACP4mB,EAAY7mB,EAAK8mB,aAAasP,GAClC,GAAkB,OAAdvP,EAAJ,CAKA,GAAoB,WAAhBuP,EAA2B,OAAOp2B,EAAK0M,OAAO0pB,EAAc3qB,GAEhE,GAAIA,GAASM,OAAOgB,KAAKiY,SAASvZ,GAC9BzL,EAAK0M,OAAO0pB,EAAc3qB,QACvB,GAAIA,GAASA,EAAMzJ,OAAS,EAAG,CAElC,IAAI0qC,GACAt3B,GAAI3J,EAAM,GAAG,GACbA,MAAOA,EAAM,GAAGzJ,OAAS,EAAI7F,EAAEsmD,KAAKh3C,EAAM,GAAI,SAASoE,EAAM/L,GAAK,OAAY,GAALA,IAAa2H,EAAM,GAAG,IAGnGzL,EAAK0M,OAAO0pB,EAAcsW,GAC1B7lB,EAAUqxB,cAAgBxL,EAASjhC,WAC5BA,GAASA,EAAM2J,IAAM3J,EAAMA,OAClCzL,EAAK0M,OAAO0pB,EAAc3qB,GAC1Bob,EAAUqxB,cAAgBzsC,EAAMA,OACD,eAAxBzL,EAAK4F,WAAWpH,MACvBwB,EAAK0M,OAAO0pB,EAAc,MAC1BvP,EAAUqxB,cAAgBzsC,GACnBA,GAA2B,iBAAX,EACvBzL,EAAK0M,OAAO0pB,EAAc3qB,IAG1BzL,EAAK0M,OAAO0pB,EAAc,MAC1BvP,EAAUqxB,cAAgB,MAOnCsa,gBAAiB,SAAUp8B,EAAcvP,GACpC,IACIpb,EADOxL,KACM2F,WAAWkgB,aAAa,GAKzC,OAHAe,EAAU3E,KAAKmvB,QAAQjb,GAAgBvP,EAAU3E,KAAKmvB,QAAQjb,OAC9DvP,EAAU3E,KAAKmvB,QAAQjb,GAJZn2B,KAI+B2F,WAAWuP,OAAS1J,EAAM2J,GAE7D3J,GAMXgnD,kBAAmB,SAAUr8B,GACzB,IACIvP,EADO5mB,KACU6mB,aAAasP,GAC9B3qB,EAAQob,EAAUnE,WAClB7D,EAAQgI,EAAU+gB,mBAGlBurB,KASJ,OARI1nD,IAAUA,EAAM2J,GAAK,GAAKrJ,OAAOgB,KAAKiY,SAASvZ,EAAM2J,MACrD+9C,EAAahyD,SACbgyD,EAAa,GAAGhyD,KAAKsK,EAAM2J,IAC3B+9C,EAAa,GAAGhyD,KAAK0d,IAErBs0C,EAAahyD,SAGVgyD,GAMXzwC,SAAU,SAAU0T,GAChB,IAEI3qB,EAFOxL,KACU6mB,aAAasP,GACZ1T,WACtB,OAAIjX,EAAcA,EAAM2J,GACjB3J,GAOXyK,OAAQ,SAAUkgB,EAAc3qB,EAAO2nD,GACnC,IACIvsC,EADO5mB,KACU6mB,aAAasP,GAC9BxwB,EAFO3F,KAEW2F,WAGlBA,EAAWyhC,aACXxgB,EAAU6gB,YAId,IAAIz1B,EAAerM,EAAWqM,aAAajQ,OAAS,EAAI4D,EAAWqM,aAAe,IAVvEhS,KAUkFiiB,KAAKtc,WAAWuP,MAAQ,OAASihB,EAAe,IAVlIn2B,KAU6IiiB,KAAKtc,WAAWuP,MAAQ,OAASihB,EAAe,IAMxM,OALAvP,EAAUjhB,WAAWqM,aAAeA,EAGvBhS,KAAKyM,OAAO0pB,EAAc3qB,EAAO2nD,IAKlDvyC,eAAgB,SAAUvO,EAAK7G,GAC3B,IACIob,EADO5mB,KACU6mB,aAAaxU,GAC9B1M,EAFO3F,KAEW2F,WAGlBqM,EAAerM,EAAWqM,aAAajQ,OAAS,EAAI4D,EAAWqM,aAAe,IALvEhS,KAKkFiiB,KAAKtc,WAAWuP,MAAQ,OAAS7C,EAAM,IALzHrS,KAKoIiiB,KAAKtc,WAAWuP,MAAQ,OAAS7C,EAAM,IAMtL,OALAuU,EAAUjhB,WAAWqM,aAAeA,EAGvBhS,KAAKyM,OAAO4F,EAAK7G,MCtLtCtP,EAAEmV,MAAMjS,OAAO,oCAKXykB,SAAU,SAAUsS,EAAc3qB,GAC9B,IAAIzL,EAAOC,KACP4mB,EAAY7mB,EAAK8mB,aAAasP,GAClC,GAAkB,OAAdvP,EAAJ,CAQA,GANA7mB,EAAK0M,OAAO0pB,EAAc3qB,GACtB,MAACA,QAA2E/L,IAAjCM,EAAK4F,WAAW2sD,eAC3D9mD,EAAQzL,EAAKwyD,gBAAgBp8B,EAAcvP,IAI1B,YAAjBuP,EAA4B,OAAOp2B,EAAK0M,OAAO0pB,EAAc3qB,GAEpD,MAATA,IACAob,EAAU/C,SAASrY,GAAO,GAC1Bob,EAAUjhB,WAAW2e,aAAe,IAGxC,IAAIuf,EAAO/3B,OAAOgB,KAAKg3B,cAAcC,qBAAqBv4B,EAAOob,EAAUjhB,WAAW89B,UAOtF,GALa,IAATI,IAEAA,EAAO/3B,OAAOgB,KAAKg3B,cAAcC,qBAAqBv4B,GAAQob,EAAUjhB,WAAW89B,WAG1E,IAATI,EAAY,CACZ,IAAIG,EAAqBl4B,OAAOC,aAAaC,YAAY,sBACrDonD,EAAgBtnD,OAAOgB,KAAKg3B,cAAcG,WAAWJ,EAAMjd,EAAUjhB,WAAW+9B,WAAYM,GAGhGpd,EAAUjhB,WAAW2e,aAAe8uC,EAGpCxsC,EAAU/C,SAASrY,GAAO,MAOlC+mD,gBAAiB,SAAUp8B,EAAcvP,GACrC,IACIpb,EADOxL,KACM2F,WAAW2sD,aAS5B,OAPA1rC,EAAU3E,KAAKmvB,QAAQjb,GAAgBvP,EAAU3E,KAAKmvB,QAAQjb,OAE9D3qB,EAAQM,OAAOgB,KAAKg3B,cAAcC,qBAAqBv4B,EAAOob,EAAUjhB,WAAW89B,WAAY,GAE/Fj4B,EAAQM,OAAOgB,KAAKg3B,cAAc8J,gBAAgBpiC,GAAO,GACzDob,EAAU3E,KAAKmvB,QAAQjb,GARZn2B,KAQ+B2F,WAAWuP,OAAS1J,EAEvDA,KCzDftP,EAAEmV,MAAMjS,OAAO,sCAIXQ,KAAM,SAAUV,GAEZc,KAAKyM,OAAOvN,GAGZ,IAAIyG,EAAa3F,KAAK2F,WAElBA,EAAWwxC,gBAAqC,cAAnBn3C,KAAKmT,YAClCxN,EAAW2X,eAAiBxR,OAAOgB,KAAK4I,aAAa/P,EAAW2X,kBAAmB,EACnF3X,EAAW2X,kBAAkB3X,EAAW+xC,eAAiB,GAAK,IAAI/xC,EAAW2X,iBAQrFw0C,eAAgB,SAAUlrC,GAItB,IAAI5U,EAHJhS,KAAKyM,OAAOma,GAMR5U,EADAhS,KAAK2F,WAAWqM,aAAajQ,OAAS,EACvB/B,KAAK2F,WAAWqM,aAAe,IAAMhS,KAAKiiB,KAAKtc,WAAWuP,MAAQ,OAAS0R,EAAUuP,aAAe,IAEpGn2B,KAAKiiB,KAAKtc,WAAWuP,MAAQ,OAAS0R,EAAUuP,aAAe,IAGlFvP,EAAUjhB,WAAWqM,aAAeA,GAOxCiE,OAAQ,SAAUkgB,EAAc3qB,EAAO2nD,GACnC,IACIvsC,EADO5mB,KACU6mB,aAAasP,GAWlC,OAZWn2B,KAEW2F,WAGPyhC,aACXxgB,EAAU6gB,YAIDznC,KAAKyM,OAAO0pB,EAAc3qB,EAAO2nD,IAQlD1wC,SAAU,SAAU0T,GAChB,IAEI3qB,EAFOxL,KACU6mB,aAAasP,GACZ1T,WACtB,OAAIjX,GAA2B,iBAAX,EAA4BA,EAAM2J,GAE/C3J,GAGXqY,SAAU,SAAUsS,EAAc3qB,GAC9B,IAAIzL,EAAOC,KACP4mB,EAAY7mB,EAAK8mB,aAAasP,GAClC,GAAkB,OAAdvP,EAAJ,CAKA,GAAoB,WAAhBuP,EAA2B,OAAOp2B,EAAK0M,OAAO0pB,EAAc3qB,GAEhE,GAAIA,GAASA,EAAMzJ,OAAS,EAAG,CAE3B,IAAI0qC,GACAt3B,GAAI3J,EAAM,GAAG,GACbA,MAAOA,EAAM,GAAGzJ,OAAS,EAAI7F,EAAEsmD,KAAKh3C,EAAM,GAAI,SAAUoE,EAAM/L,GAC1D,OAAY,GAALA,IACN2H,EAAM,GAAG,IAGlBzL,EAAK0M,OAAO0pB,EAAcsW,GAC1B7lB,EAAUqxB,cAAgBxL,EAASjhC,WAC5BA,GAASA,EAAM2J,IAAM3J,EAAMA,OAClCzL,EAAK0M,OAAO0pB,EAAc3qB,GAC1Bob,EAAUqxB,cAAgBzsC,EAAMA,OACzBA,GAASA,EAAM2J,IAAM3J,EAAMoT,OAClC7e,EAAK0M,OAAO0pB,EAAc3qB,GAC1Bob,EAAUqxB,cAAgBzsC,EAAMoT,QAEhC7e,EAAK0M,OAAO0pB,EAAc3qB,GAC1Bob,EAAUqxB,cAAgB,QCjGtC/7C,EAAEmV,MAAMjS,OAAO,oCAIXQ,KAAM,SAAU8R,GACZ1R,KAAKqzD,aACLrzD,KAAK0R,YAAcA,GAMvB4hD,cAAe,aAKfC,eAAgB,WACZ,OAAOr3D,EAAEyU,KAAKxC,MAAMjS,GAAI8D,KAAKszD,gBAAiBtzD,KAAKwzD,mBAKvDA,cAAe,aAKfC,aAAc,SAASnvD,EAAUovD,GAC7B,IAAI3zD,EAAOC,KAGX,OAAO8L,OAAO6nD,gBAAgB10C,YAAYy0C,EAAqBpvD,GACtDuM,KAAK,SAAU+iD,GAChB7zD,EAAKszD,UAAU/uD,GAAYsvD,KAMvCC,kBAAmB,SAAUvvD,GACzB,OAAOtE,KAAKqzD,UAAU/uD,IAK1BuS,aAAc,SAAU3X,GAGpB,IAAIX,EAAOW,EAAOX,KACdyC,EAAO9B,EAAO8B,KACd8yD,EAAkB53D,EAAEkD,OAAOF,GAC3BuS,cAAezR,KACf0R,YAAaxS,EAAOwS,aAAe1R,KAAK0R,cAG5C,MAAY,QAARnT,EACO,IAAIuN,OAAOsJ,UAAUpB,KAAK8/C,GAGzB,cAARv1D,EACO,IAAIuN,OAAOsJ,UAAU2+C,WAAWD,GAG/B,YAARv1D,EACO,IAAIuN,OAAOsJ,UAAU4+C,aAAaF,GAGjC,aAARv1D,EACO,IAAIuN,OAAOsJ,UAAUsa,UAAUokC,GAG9B,UAARv1D,EACO,IAAIuN,OAAOsJ,UAAUzC,OAAOmhD,GAG3B,aAARv1D,EACO,IAAIuN,OAAOsJ,UAAU6+C,UAAUH,GAG9B,SAARv1D,EACO,IAAIuN,OAAOsJ,UAAUuqB,MAAMm0B,GAG1B,gBAARv1D,GAAkC,gBAARA,EACnB,IAAIuN,OAAOsJ,UAAU8+C,aAAaJ,GAGnB,cAAtBv1D,EAAKm8B,cACE,IAAI5uB,OAAOsJ,UAAU++C,WAAWL,GAG/B,OAARv1D,EACO,IAAIuN,OAAOsJ,UAAUxT,IAAIkyD,GAGxB,WAARv1D,GAA6B,WAARA,EACd,IAAIuN,OAAOsJ,UAAUg/C,QAAQN,GAG5B,cAARv1D,EACO,IAAIuN,OAAOsJ,UAAUijC,WAAWyb,GAG/B,aAARv1D,EACO,IAAIuN,OAAOsJ,UAAUi/C,UAAUP,GAG9B,iBAARv1D,EACO,IAAIuN,OAAOsJ,UAAUk/C,cAAcR,GAGlC,SAARv1D,EACO,IAAIuN,OAAOsJ,UAAUm/C,MAAMT,GAG1B,eAARv1D,EACO,IAAIuN,OAAOsJ,UAAUo/C,YAAYV,GAGhC,cAARv1D,GACAu1D,EAAgB5/C,QAAU,SAC1B4/C,EAAgBz4C,YAAc,WACvB,IAAIvP,OAAOsJ,UAAUq/C,WAAWX,KAI3ChoD,OAAO+V,IAAItjB,EAAO,mCAAoCyC,EAAM,SACrD,OAKXyV,UAAW,SAAUvX,GAGjB,IAAIX,EAAOW,EAAOX,KACdyC,EAAO9B,EAAO8B,KACd0zD,EAAex4D,EAAEkD,OAAOF,GACxBuS,cAAezR,KACf0R,YAAaxS,EAAOwS,aAAe1R,KAAK0R,cAM5C,OAHKnT,IACDA,EAAO,SAEC,QAARA,EACiBuN,OAAOgB,KAAK4I,aAAa1U,EAAK2E,WAAW8Z,cAAe,EAI9D,IAAI3T,OAAOsJ,UAAUu/C,aAAaD,GAItC,IAAI5oD,OAAOsJ,UAAUwf,KAAK8/B,GAEzB,cAARn2D,EACO,IAAIuN,OAAOsJ,UAAUw/C,WAAWF,GAG/B,eAARn2D,EACO,IAAIuN,OAAOsJ,UAAU+qC,YAAYuU,GAGhC,SAARn2D,EACO,IAAIuN,OAAOsJ,UAAUwJ,MAAM81C,GAG1B,UAARn2D,EACO,IAAIuN,OAAOsJ,UAAU2yB,OAAO2sB,GAG3B,UAARn2D,EACO,IAAIuN,OAAOsJ,UAAUwkC,OAAO8a,GAG3B,SAARn2D,EACO,IAAIuN,OAAOsJ,UAAUqkC,MAAMib,GAG1B,QAARn2D,EACO,IAAIuN,OAAOsJ,UAAUyuB,KAAK6wB,GAGzB,WAARn2D,EAGe,UAFDyC,EAAK2E,WAAWye,SAAW,UAI9B,IAAItY,OAAOsJ,UAAUy/C,MAAMH,GAI/B,IAAI5oD,OAAOsJ,UAAU0/C,MAAMJ,GAG1B,SAARn2D,EACO,IAAIuN,OAAOsJ,UAAUsyB,MAAMgtB,GAGlC,oBAAoBr3C,KAAK9e,GAClB,IAAIuN,OAAOsJ,UAAU2/C,eAAeL,GAGnC,QAARn2D,EACO,IAAIuN,OAAOsJ,UAAUw0C,KAAK8K,GAGzB,eAARn2D,EACO,IAAIuN,OAAOsJ,UAAU4/C,YAAYN,GAGhC,SAARn2D,EACO,IAAIuN,OAAOsJ,UAAU6/C,MAAMP,GAG1B,SAARn2D,EAEO,IAAIuN,OAAOsJ,UAAU8/C,MAAMR,GAE1B,aAARn2D,EAEO,IAAIuN,OAAOsJ,UAAU+/C,IAAIT,GAGxB,UAARn2D,EACO,IAAIuN,OAAOsJ,UAAUggD,OAAOV,GAE3B,QAARn2D,EACO,IAAIuN,OAAOsJ,UAAU6M,KAAKyyC,GAGzB,eAARn2D,EACO,IAAIuN,OAAOsJ,UAAU6M,KAAKyyC,GAGzB,UAARn2D,EACO,IAAIuN,OAAOsJ,UAAUuuB,OAAO+wB,GAG3B,WAARn2D,GACAm2D,EAAa1zD,KAAK2E,WAAWiyC,4BAA6B,EACnD,IAAI9rC,OAAOsJ,UAAUuuB,OAAO+wB,IAG3B,cAARn2D,EACO,IAAIuN,OAAOsJ,UAAUigD,WAAWX,GAG/B,UAARn2D,EACO,IAAIuN,OAAOsJ,UAAUkgD,OAAOZ,GAG3B,UAARn2D,EACO,IAAIuN,OAAOsJ,UAAUxQ,OAAO8vD,GAG3B,YAARn2D,EACO,IAAIuN,OAAOsJ,UAAUmgD,SAASb,GAG7B,QAARn2D,EACO,IAAIuN,OAAOsJ,UAAUogD,KAAKd,GAGzB,eAARn2D,EACO,IAAIuN,OAAOsJ,UAAUqgD,YAAYf,GAGhC,cAARn2D,EACO,IAAIuN,OAAOsJ,UAAUsgD,WAAWhB,GAG/B,eAARn2D,EACO,IAAIuN,OAAOsJ,UAAUugD,YAAYjB,GAGhC,cAARn2D,EACO,IAAIuN,OAAOsJ,UAAUwgD,WAAWlB,GAG/B,kBAARn2D,EACO,IAAIuN,OAAOsJ,UAAUygD,eAAenB,GAGnC,gBAARn2D,EACO,IAAIuN,OAAOsJ,UAAU0gD,aAAapB,GAGjC,eAARn2D,EACO,IAAIuN,OAAOsJ,UAAU2gD,YAAYrB,GAGhC,qBAARn2D,EACO,IAAIuN,OAAOsJ,UAAU4gD,kBAAkBtB,GAGtC,kBAARn2D,EACO,IAAIuN,OAAOsJ,UAAU6gD,eAAevB,GAGnC,iBAARn2D,EACO,IAAIuN,OAAOsJ,UAAU8gD,cAAcxB,GAGlC,gBAARn2D,EACO,IAAIuN,OAAOsJ,UAAU+gD,aAAazB,GAGjC,kBAARn2D,EACO,IAAIuN,OAAOsJ,UAAUghD,eAAe1B,GAGnC,uBAARn2D,EACO,IAAIuN,OAAOsJ,UAAUihD,oBAAoB3B,GAGxC,aAARn2D,EACO,IAAIuN,OAAOsJ,UAAUkhD,iBAAiB5B,GAInB,GAA1Bn2D,EAAKmE,QAAQ,UACN1C,KAAKu2D,gBAAgBr3D,GAGH,GAAzBX,EAAKmE,QAAQ,SACN1C,KAAKw2D,eAAet3D,GAGnB,YAARX,EACO,IAAIuN,OAAOsJ,UAAU1X,SAASg3D,GAG7B,SAARn2D,EACO,IAAIuN,OAAOsJ,UAAU8/C,MAAMR,GAE1B,aAARn2D,EACO,IAAIuN,OAAOsJ,UAAUqhD,UAAU/B,GAE9B,eAARn2D,EACO,IAAIuN,OAAOsJ,UAAUopC,YAAYkW,GAGhC,uBAARn2D,EACO,IAAIuN,OAAOsJ,UAAUshD,oBAAoBhC,GAGxC,WAARn2D,EACO,IAAIuN,OAAOsJ,UAAUuhD,QAAQjC,GAG5B,aAARn2D,EACO,IAAIuN,OAAOsJ,UAAUwhD,UAAUlC,GAG9B,cAARn2D,EACO,IAAIuN,OAAOsJ,UAAUyhD,WAAWnC,GAG/B,eAARn2D,EACO,IAAIuN,OAAOsJ,UAAU0hD,YAAYpC,GAGhC,qBAARn2D,EACO,IAAIuN,OAAOsJ,UAAU2hD,kBAAkBrC,IAIlD5oD,OAAO+V,IAAItjB,EAAO,mCAAoCyC,EAAM,SACrD,OAKX4hB,UAAW,SAAU1jB,GACjB,IAAIX,EAAOW,EAAOX,KACdyC,EAAO9B,EAAO8B,KACdg2D,EAAe96D,EAAEkD,OAAOF,GACxBuS,cAAezR,KACf0R,YAAaxS,EAAOwS,aAAe1R,KAAK0R,YACxC+9B,iBAAgB3jC,OAAOgB,KAAKkL,QAAQ9Y,EAAOuwC,iBAAyBvwC,EAAOuwC,iBAG/E,GAAY,cAARlxC,EAAsB,CACtB,IAAIkhB,EAAa3T,OAAOgB,KAAK4I,aAAa1U,EAAK2E,WAAW8Z,cAAe,EASzE,OALIu3C,EAAapwC,UAFbnH,EAEyB3T,OAAOsJ,UAAUu/C,aAGjB7oD,OAAOsJ,UAAUwf,KAEvC,IAAI9oB,OAAOsJ,UAAUgW,QAAQwJ,KAAKoiC,GAG7C,GAAY,oBAARz4D,EAEA,OADAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAUigD,WACnC,IAAIvpD,OAAOsJ,UAAUgW,QAAQiqC,WAAW2B,GAGnD,GAAY,gBAARz4D,EAEA,OADAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAUwkC,OACnC,IAAI9tC,OAAOsJ,UAAUgW,QAAQwuB,OAAOod,GAG/C,GAAY,eAARz4D,EAEA,OADAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAUqkC,MACnC,IAAI3tC,OAAOsJ,UAAUgW,QAAQwuB,OAAOod,GAG/C,GAAY,cAARz4D,EAEA,OADAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAUyuB,KACnC,IAAI/3B,OAAOsJ,UAAUgW,QAAQyY,KAAKmzB,GAG7C,GAAY,iBAARz4D,EAAyB,CAGzB,GAAe,UAFDyC,EAAK2E,WAAWye,SAAW,WAKrC,GADA4yC,EAAapwC,UAAY9a,OAAOsJ,UAAUy/C,MACtC31D,EAAO8B,KAAK2E,WAAW2pC,YACvB,OAAO,IAAIxjC,OAAOsJ,UAAUgW,QAAQ6rC,eAAeD,QAIvDA,EAAapwC,UAAY9a,OAAOsJ,UAAU0/C,MAE9C,OAAO,IAAIhpD,OAAOsJ,UAAUgW,QAAQgd,OAAO4uB,GAG/C,MAAY,eAARz4D,GACAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAUsyB,MACnC,IAAI57B,OAAOsJ,UAAUgW,QAAQsc,MAAMsvB,IAGlC,eAARz4D,GACAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAU6/C,MACnC,IAAInpD,OAAOsJ,UAAUgW,QAAQ6pC,MAAM+B,IAGlC,cAARz4D,GACAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAUw0C,KACnC,IAAI99C,OAAOsJ,UAAUgW,QAAQw+B,KAAKoN,IAGjC,gBAARz4D,GACAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAU2yB,OACnC,IAAIj8B,OAAOsJ,UAAUgW,QAAQgd,OAAO4uB,IAGnC,gBAARz4D,GACAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAUggD,OACnC,IAAItpD,OAAOsJ,UAAUgW,QAAQgqC,OAAO4B,IAGnC,eAARz4D,GACAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAU8/C,MACnC,IAAIppD,OAAOsJ,UAAUgW,QAAQ8pC,MAAM8B,IAGlC,mBAARz4D,GACAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAU+/C,IACnC,IAAIrpD,OAAOsJ,UAAUgW,QAAQ8rC,UAAUF,IAEtC,cAARz4D,GACAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAUogD,KACnC,IAAI1pD,OAAOsJ,UAAUgW,QAAQoqC,KAAKwB,IAGjC,kBAARz4D,GACAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAUmgD,SACnC,IAAIzpD,OAAOsJ,UAAUgW,QAAQoqC,KAAKwB,IAGjC,mBAARz4D,GACAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAUkhD,iBACnC,IAAIxqD,OAAOsJ,UAAUgW,QAAQgd,OAAO4uB,IAGnC,gBAARz4D,GACAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAUuuB,OACnC,IAAI73B,OAAOsJ,UAAUgW,QAAQuY,OAAOqzB,IAGnC,eAARz4D,GACAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAUwJ,MACnC,IAAI9S,OAAOsJ,UAAUgW,QAAQgd,OAAO4uB,IAGnC,kBAARz4D,GACAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAUwJ,MACnC,IAAI9S,OAAOsJ,UAAUgW,QAAQumC,SAASqF,IAGrC,kBAARz4D,GACAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAU1X,SACnC,IAAIoO,OAAOsJ,UAAUgW,QAAQ1tB,SAASs5D,IAGrC,gBAARz4D,GACAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAUkgD,OACnC,IAAIxpD,OAAOsJ,UAAUgW,QAAQkqC,OAAO0B,IAGnC,gBAARz4D,GACAy4D,EAAapwC,UAAY9a,OAAOsJ,UAAUxQ,OACnC,IAAIkH,OAAOsJ,UAAUgW,QAAQxmB,OAAOoyD,KAI/ClrD,OAAO+V,IAAItjB,EAAO,mCAAoCyC,EAAM,SACrD,OAKXu1D,gBAAiB,SAAUr3D,GACvB,IAAIX,EAAOW,EAAOX,KACdyC,EAAO9B,EAAO8B,KACd8+B,EAAe5jC,EAAEkD,OAAOF,GACxBuS,cAAezR,KACf0R,YAAaxS,EAAOwS,aAAe1R,KAAK0R,cAG5C,MAAY,cAARnT,EACiBuN,OAAOgB,KAAK4I,aAAa1U,EAAK2E,WAAW8Z,cAAe,EAI9D,IAAI3T,OAAOsJ,UAAUu/C,aAAa70B,GAItC,IAAIh0B,OAAOsJ,UAAUwf,KAAKkL,GAGzB,iBAARvhC,EAGe,UAFDyC,EAAK2E,WAAWye,SAAW,UAI9B,IAAItY,OAAOsJ,UAAUy/C,MAAM/0B,GAI/B,IAAIh0B,OAAOsJ,UAAU0/C,MAAMh1B,GAG1B,gBAARvhC,EACgC,IAA5ByC,EAAK2E,WAAWq7B,SAET,IAAIl1B,OAAOsJ,UAAU+hD,yBAAyBr3B,GAElD,IAAIh0B,OAAOsJ,UAAUwkC,OAAO9Z,GAG3B,eAARvhC,EACO,IAAIuN,OAAOsJ,UAAUqkC,MAAM3Z,GAG1B,cAARvhC,EACO,IAAIuN,OAAOsJ,UAAUyuB,KAAK/D,GAGzB,eAARvhC,EACO,IAAIuN,OAAOsJ,UAAUsyB,MAAM5H,GAG1B,iBAARvhC,EACO,IAAIuN,OAAOsJ,UAAUuuB,OAAO7D,GAG3B,eAARvhC,EACO,IAAIuN,OAAOsJ,UAAUwJ,MAAMkhB,IAItCh0B,OAAO+V,IAAItjB,EAAO,mCAAoCyC,EAAM,SACrD,OAKXw1D,eAAgB,SAAUt3D,GACtB,IAAIX,EAAOW,EAAOX,KACdyC,EAAO9B,EAAO8B,KACd8+B,EAAe5jC,EAAEkD,OAAOF,GACxBuS,cAAezR,KACf0R,YAAaxS,EAAOwS,aAAe1R,KAAK0R,cAG5C,MAAY,aAARnT,EACiBuN,OAAOgB,KAAK4I,aAAa1U,EAAK2E,WAAW8Z,cAAe,EAI9D,IAAI3T,OAAOsJ,UAAUgiD,kBAAkBt3B,GAI3C,IAAIh0B,OAAOsJ,UAAUiiD,UAAUv3B,GAG9B,gBAARvhC,EAGe,UAFDyC,EAAK2E,WAAWye,SAAW,UAI9B,IAAItY,OAAOsJ,UAAUkiD,WAAWx3B,GAIpC,IAAIh0B,OAAOsJ,UAAUmiD,WAAWz3B,GAG/B,eAARvhC,EAEO,IAAIuN,OAAOsJ,UAAUoiD,YAAY13B,GAGhC,cAARvhC,EACO,IAAIuN,OAAOsJ,UAAUqiD,WAAW33B,GAG/B,aAARvhC,EACO,IAAIuN,OAAOsJ,UAAUsiD,UAAU53B,GAG9B,cAARvhC,EACO,IAAIuN,OAAOsJ,UAAUuiD,WAAW73B,GAG/B,uBAARvhC,EACO,IAAIuN,OAAOsJ,UAAUwiD,oBAAoB93B,GAGxC,gBAARvhC,EACO,IAAIuN,OAAOsJ,UAAUyiD,aAAa/3B,GAGjC,cAARvhC,EACO,IAAIuN,OAAOsJ,UAAU0iD,WAAWh4B,GAG/B,aAARvhC,EACO,IAAIuN,OAAOsJ,UAAU2iD,UAAUj4B,GAG9B,oBAARvhC,EACO,IAAIuN,OAAOsJ,UAAU4iD,iBAAiBl4B,GAGrC,eAARvhC,EACO,IAAIuN,OAAOsJ,UAAU6iD,YAAYn4B,GAGhC,cAARvhC,EACO,IAAIuN,OAAOsJ,UAAU8iD,WAAWp4B,GAG/B,cAARvhC,EACO,IAAIuN,OAAOsJ,UAAU+iD,WAAWr4B,GAG/B,kBAARvhC,EACO,IAAIuN,OAAOsJ,UAAUgjD,eAAet4B,GAGnC,gBAARvhC,EACO,IAAIuN,OAAOsJ,UAAUijD,aAAav4B,GAGjC,mBAARvhC,EACO,IAAIuN,OAAOsJ,UAAUkjD,gBAAgBx4B,GAGpC,eAARvhC,EACO,IAAIuN,OAAOsJ,UAAU2yB,OAAOjI,IAIvCh0B,OAAO+V,IAAItjB,EAAO,mCAAoCyC,EAAM,SACrD,OAKXie,YAAa,SAAU3a,GAEnB,OADWtE,KACCqzD,UAAU/uD,MCrrB9BpI,EAAEmV,MAAMjS,OAAO,sCAMXQ,KAAM,SAAUV,GACZc,KAAKu4D,iBAAmBzsD,OAAOgB,KAAKsS,eACpCpf,KAAKw4D,kBAUTC,iBAAkB,SAAU/mD,EAAa2a,GACrC,IAAItsB,EAAOC,KACXqsB,EAASA,GAAU,UACnB,IAAI5C,EAAQ,IAAIvtB,EAAE0b,SA+DlB,YA7D0C,IAA/B7X,EAAKy4D,cAAcnsC,IAE1BtsB,EAAKy4D,cAAcnsC,GAAQpM,cAAe,EAE1CwJ,EAAM7Q,QAAQ7Y,EAAKy4D,cAAcnsC,KAGlB,UAAXA,GAGAtsB,EAAKy4D,cAAcnsC,GAAU,IAAIvgB,OAAOsJ,UAAUsjD,MAAMC,QAAQjnD,GAGhE3R,EAAKy4D,cAAcnsC,GAAQknC,iBACtB1iD,KAAK,WAEF4Y,EAAM7Q,QAAQ7Y,EAAKy4D,cAAcnsC,OAGvB,YAAXA,GAGPtsB,EAAKy4D,cAAcnsC,GAAU,IAAIvgB,OAAOsJ,UAAUsmB,QAAQi9B,QAAQjnD,GAGlE3R,EAAKy4D,cAAcnsC,GAAQknC,iBACtB1iD,KAAK,WAEF4Y,EAAM7Q,QAAQ7Y,EAAKy4D,cAAcnsC,OAGlCvgB,OAAOgB,KAAKuS,eAAegN,IAGlCtsB,EAAKy4D,cAAcnsC,GAAU,IAAIvgB,OAAOsJ,UAAUwjD,OAAOD,QAAQjnD,GAGjE3R,EAAKy4D,cAAcnsC,GAAQknC,iBACtB1iD,KAAK,WAEF4Y,EAAM7Q,QAAQ7Y,EAAKy4D,cAAcnsC,OAElCvgB,OAAOgB,KAAK+rD,mBAAmBxsC,IAGtCtsB,EAAKy4D,cAAcnsC,GAAU,IAAIvgB,OAAOsJ,UAAUlI,WAAWyrD,QAAQjnD,GAGrE3R,EAAKy4D,cAAcnsC,GAAQknC,iBACtB1iD,KAAK,WAGF4Y,EAAM7Q,QAAQ7Y,EAAKy4D,cAAcnsC,QAIzCvgB,OAAO8nB,eAAe,yBAA2BvH,GACjD5C,EAAMG,OAAO,yBAA2ByC,IAIzC5C,EAAM1R,WAOjB+gD,eAAgB,WACZ,OAAO94D,KAAK0R,eC1FpB5F,OAAOsJ,UAAYtJ,OAAOsJ,cAO1BlZ,EAAEmV,MAAMjS,OAAO,2BACX4U,UAAMvU,EACNs5D,kBAAmB,IAAI78D,EAAE0b,WAKzBhY,KAAM,SAAUV,GACZA,EAASA,MAGTc,KAAK4R,kBAAoB1V,MAGzB,IAAImwB,EAASntB,EAAOmtB,QAAU,GAG9BrsB,KAAKg5D,cAAgB,IAAIltD,OAAOsJ,UAAUiX,OAAOssC,QAGjD34D,KAAK0R,YAAc,IAAI5F,OAAOmK,OAAOssB,SAASC,QAAQtjC,GAGtDc,KAAKyR,cAAgBzR,KAAKg5D,cAAcP,iBAAiBz4D,KAAK0R,YAAa2a,IAE/E4sC,WAAY,WAER,OACID,cAFOh5D,KAEag5D,cACpBtnD,YAHO1R,KAGW0R,YAClBD,cAJOzR,KAIayR,gBAM5BynD,UAAW,WACPl5D,KAAK4R,kBAAkB7M,KAAKoJ,MAAMnO,KAAK4R,kBAAmBxD,YAK9D+qD,YAAa,WACTn5D,KAAK4R,kBAAkBoB,OAAO7E,MAAMnO,KAAK4R,kBAAmBxD,YAKhEgrD,QAAS,WACL,OAAOp5D,KAAK4R,kBAAkBmB,eAAe5E,MAAMnO,KAAK4R,kBAAmBxD,YAK/EirD,OAAQ,SAAUn6D,GAQd,OAJIA,EAAOwX,OAHA1W,KAIF0W,KAAOxX,EAAOwX,MAJZ1W,KAOCq2B,QAAQn6B,EAAEkD,QAClB44B,OAROh4B,KAQMg4B,OACbthB,KATO1W,KASI0W,MACZxX,KAMPm3B,QAAS,SAAUn3B,GACf,IAAIa,EAAOC,KACPs5D,EAAMt5D,KAAKu5D,cACX57D,EAAOzB,EAAE,OAAQo9D,GAiBrB,GAhBAp6D,EAASA,MAGLa,EAAKg5D,mBAAqBh5D,EAAKg5D,kBAAkBx4C,MACX,YAAlCxgB,EAAKg5D,kBAAkBx4C,UACvBxgB,EAAKg5D,kBAAoB78D,EAAE0b,YAG/B7X,EAAKg5D,kBAAoB78D,EAAE0b,WAI/B9L,OAAOmmB,OAAOC,aAAa,kBAAkB,GAC7CpmB,OAAOsJ,UAAUa,OAAO8G,yBAGK,IAAjB7d,EAAW,OACd4M,OAAOgB,KAAKkL,QAAQva,OAAO+7D,SAAS71B,QAAS,CAC9C,IAAI81B,EAAc3tD,OAAOgB,KAAK4sD,iBAC9Bx6D,EAAOwX,KAAO+iD,EAAkB,KAKxC,IAAIzhC,EAASj4B,EAAKi4B,OAAS94B,EAAO84B,OAAS94B,EAAO84B,QAAU97B,EAAE,WAAW4I,SAASnH,GAyFlF,OAxFAoC,EAAK2W,KAAOxX,EAAOwX,KAEnB3W,EAAK45D,QAAQz6D,GAAQ2R,KAAK,SAAUmD,GAG3B9U,EAAO06D,YACR5hC,EAAOzyB,QAIXyyB,EAAOxzB,OAAOwP,EAAKO,WAGnBrY,EAAE8X,EAAK6lD,aAAaC,aAAa9lD,EAAKO,WAGtCxU,EAAKiU,KAAOA,EACZjU,EAAKiU,KAAKwkB,SAASr7B,MAAO4C,EAAKg6D,UAAW57D,OAAQ4B,EAAKi6D,aAGvDnwD,WAAW,WACP9J,EAAKg6D,UAAY79D,EAAEuB,QAAQN,QAC3B4C,EAAKi6D,WAAa99D,EAAEuB,QAAQU,SACxBV,OAAOsC,OAAStC,OAAOY,KACvB0B,EAAKk6D,qBACV,KAGHjmD,EAAKjB,eAAe,iBAGpBhT,EAAKq5D,QAAQ,6BAGbr5D,EAAKm6D,iBAAiBlmD,EAAMgkB,GAC5Bj4B,EAAKo6D,iBAAiBnmD,EAAMgkB,GAC5Bj4B,EAAKq6D,qBAAqBpmD,EAAMgkB,GAChCj4B,EAAKs6D,gBAAgBrmD,GACrBjU,EAAKu6D,wBAAwBtmD,GAGzB9U,EAAOywB,aACP3b,EAAKO,UAAUxT,SAAS,0BAI5B+K,OAAOmmB,OAAOsoC,WAAW,aACzBzuD,OAAOmmB,OAAOsoC,WAAW,kBACzBzuD,OAAOmmB,OAAOsoC,WAAW,cACzBzuD,OAAOmmB,OAAOsoC,WAAW,mBACzBzuD,OAAOmmB,OAAOsoC,WAAW,WAGzBzuD,OAAOsJ,UAAUa,OAAO+G,mBAGpBlR,OAAO6H,SAAS6mD,qBAChBz6D,EAAKsR,MAAM2C,KAAOjU,EAAKiU,KACvBjU,EAAKsR,MAAM0nD,kBAAkBngD,QAAQ7Y,EAAKiU,OAG9CjU,EAAKg5D,kBAAkBngD,QAAQ7Y,EAAKiU,QAErC6H,KAAK,SAAU9H,EAASI,GAEvBjY,EAAEyU,KAAK5Q,EAAK0R,eACPZ,KAAK,SAAUY,QAEW,IAAZsC,GAAuC,KAAZA,IAClCA,EAAUjI,OAAOC,aAAaC,YAAY,yBAG9C,IAAIyuD,EAAgBhpD,EAAcoiD,kBAAkB,cAEpD77B,EAAOzyB,QACPyyB,EAAOxzB,OAAOtI,EAAE47B,KAAK2iC,GACjB1mD,QAASA,KAEbhU,EAAKq5D,QAAQ,8BAA+BrlD,GAC5ChU,EAAKi4B,OAAOjlB,eAAe,YAAagB,GAExCjI,OAAOmmB,OAAOsoC,WAAW,aACzBzuD,OAAOmmB,OAAOsoC,WAAW,kBAEzBx6D,EAAKg5D,kBAAkBnvC,aAI5B7pB,EAAKg5D,kBAAkBhhD,WAKlCzE,MAAO,WACH,OAAOtT,KAAK+4D,kBAAkBhhD,WAMlC4hD,QAAS,SAAUz6D,GACf,IAAIa,EAAOC,KACPypB,EAAQ,IAAIvtB,EAAE0b,SAGd2uB,EAAcxmC,EAAK2R,YAAYgpD,YAAYx7D,GAE3C84B,EAASj4B,EAAKi4B,QAAU94B,EAAO84B,OAuDnC,OArDAlsB,OAAO8tB,sBAAuB,EAE9B19B,EAAEyU,KAAK41B,EAAaxmC,EAAK0R,eACpBZ,KAAK,SAAU7P,EAAMyQ,GAIlB,GAHA3F,OAAO8tB,sBAAuB,EAG1B9tB,OAAOgB,KAAKkL,QAAQhX,GAGpB,OAFAjB,EAAKq5D,QAAQ,sBACb3vC,EAAM5N,OAIV,GAAI7a,GAAqB,UAAbA,EAAKzC,MACTyV,EAAOjU,EAAKiU,QAEZA,EAAKc,aACLd,EAAKP,WAGTukB,EAAOjlB,eAAe,gBAEnB,GAAI/R,GAAqB,aAAbA,EAAKzC,KAAqB,CACzC,IAAIk8D,EAAgBhpD,EAAcwN,YAAY,gBAC1ClL,EAAUjI,OAAOC,aAAaC,YAAY,yBAC9B9P,EAAE47B,KAAK2iC,GACnB1mD,QAASA,IAGHjP,SAASkzB,GAEnBvO,EAAM5N,YAEH,GAAI7a,GAAqB,SAAbA,EAAKzC,KAAiB,CACjCW,EAAO4xB,eAAe,mBACtB9vB,EAAOjB,EAAK46D,qBAAqB35D,IAC5BgT,KAAKrO,WAAW8P,SAAW,SAGpC3J,OAAOmmB,OAAOC,aAAa,aAC3BhzB,EAAOX,KAAQyC,EAAKgT,MAAQhT,EAAKgT,KAAKrO,WAAWpH,MAASW,EAAOX,KACjE,IAAIyV,EAAOjU,EAAK66D,YAAY55D,EAAKgT,KAAMvC,EAAevS,GAGtDuqB,EAAM7Q,QAAQ5E,QAGdjU,EAAK86D,gBAAgB75D,EAAMyoB,KAEhC5N,KAAK,SAAUqb,GAClBn3B,EAAK86D,gBAAgB3jC,EAAczN,KAGhCA,EAAM1R,WAMjB4iD,qBAAsB,SAAU35D,GAC5B,IAAIjB,EAAOC,KACX,OAAY,MAARgB,EACOA,GAGPA,EAAK8vB,eAAe,SAAwB,QAAb9vB,EAAKzC,MACpCyC,EAAKmU,GAAKnU,EAAKmU,GAAK,SACpBnU,EAAK26B,SAAW,QAChB36B,EAAKg7B,YAAc,QACnBh7B,EAAK66B,UAAY,QACjB76B,EAAKquC,cAAgB,QACrBruC,EAAKgvC,UAAY,QACjBhvC,EAAKs6C,YAAc,SAEnBp/C,EAAE2E,KAAKG,EAAM,SAAUqR,EAAK7G,GACF,iBAAX,IACPxK,EAAKqR,GAAOtS,EAAK46D,qBAAqB35D,EAAKqR,OAIhDrR,IAKX65D,gBAAiB,SAAU3jC,EAAczN,GACrC,IACI1V,EAAU,GACV+mD,KACJ,IACIA,EAAmBrmD,KAAKC,MAAMwiB,EAAatiB,cAC7C,MAAOhX,GACLk9D,GAAoB/mD,QAASmjB,EAAatiB,aAAcT,UAAW,gBAInE2mD,EAAiB/mD,SACjBA,GAAW,mBAAqB+mD,EAAiB3mD,UACjDJ,GAAW,sBAAwB+mD,EAAiB/mD,SAElB,+BAA9B+mD,EAAiB3mD,YACjBJ,GAAW,sBAAwBjI,OAAOC,aAAaC,YAAY,oBAKzC,gBAA9B8uD,EAAiB3mD,UACjBsV,EAAMG,OAAO7V,EAAS+mD,EAAiB3mD,WAGvCsV,EAAMG,OAAO7V,IAMrB6mD,YAAa,SAAU55D,EAAMyQ,EAAevS,GACxC,IAAI8U,EAAOvC,EAAcoF,aAAa3a,EAAEkD,OAAOF,GAC3CX,KAAMW,EAAOX,MAAQ,OACrByC,KAAMA,KAIV,GAAiC,oBAAtB+5D,qBAC6B,OAA/B/mD,EAAKrO,WAAWiQ,aAA8C,OAAtBmlD,qBAAgC/mD,EAAKzR,QAAQR,OAAS,EAAG,CAClG,IAAIi5D,EAAchnD,EAAKzR,QAAQ,GAE/ByR,EAAKzR,QAAQka,OAAO,EAAG,GACvBzI,EAAKzR,QAAQrB,KAAK85D,GAO1B,OAFAhnD,EAAKiC,SAEEjC,GAKXzB,OAAQ,SAAU0I,GACHjb,KACFgU,MADEhU,KAEFgU,KAAKrT,QAAQ,eAAgBsa,IAM1Ci/C,iBAAkB,SAAUlmD,EAAMgkB,GAC9B,IAAIj4B,EAAOC,KAGXgU,EAAKjP,KAAK,UAAW,SAAU2xB,EAAGukC,GAG9B,IAAIzyD,EAASwL,EAAKO,UAAU/L,SAExB8sB,GADJ9sB,EAASsD,OAAOgB,KAAKwoB,UAAU9sB,IACR8sB,YAEvBp5B,EAAE6D,EAAKiU,MAAMrT,QAAQ,oBAGrBqT,EAAKP,QAAQwnD,GACbjjC,EAAOkjC,YACP,IAAIC,EAAenjC,EAAOxvB,SACtB2yD,EAAa75D,KAAK,+BAA+BS,OAAS,GAC1Do5D,EAAa75D,KAAK,+BAA+BgC,SAGjDvD,EAAKg5D,mBAAqBh5D,EAAKg5D,kBAAkBx4C,OACX,YAAlCxgB,EAAKg5D,kBAAkBx4C,UACvBxgB,EAAKg5D,kBAAoB78D,EAAE0b,YAInC,IAAI2pB,EAAaxhC,EAAKiU,KAAKZ,YAgB3B,OAdAlX,EAAEyU,KAAK5Q,EAAKs2B,QAAQn6B,EAAEkD,OAAO67D,GACzBjjC,OAAQA,EACR4hC,YAAY,EACZplD,OAAQ+sB,EAAW/sB,OACnB0C,YAAaqqB,EAAWrqB,gBACvBrG,KAAK,WAGNhH,WAAW,WACPrB,EAAO8sB,UAAUA,GACjBp5B,EAAE6D,EAAKiU,MAAMrT,QAAQ,sBACtB,OAGAZ,EAAKg5D,kBAAkBhhD,aAMtCsiD,gBAAiB,SAAUrmD,GACvB,IAAIjU,EAAOC,KAGXgU,EAAKjP,KAAK,eAAgB,SAAU2xB,EAAGzb,GAGnC,GAFAA,EAAOA,OAEHlb,EAAKq7D,cAAT,CA2BAr7D,EAAKq7D,cAAgBvxD,WAzBN,WAEX,IAAI1M,EAAQjB,EAAEuB,QAAQN,QAClBgB,EAASjC,EAAEuB,QAAQU,UACnB8c,EAAKogD,aAAel+D,GAAS4C,EAAKg6D,aAGlCjuD,OAAOmmB,OAAOC,aAAa,UAG3Ble,EAAKzB,QACDpV,MAAOA,EACPgB,OAAQA,IAEZ4B,EAAKg6D,UAAY58D,EACjB4C,EAAKi6D,WAAa77D,EAGlB2N,OAAOmmB,OAAOsoC,WAAW,UACzBzuD,OAAOmmB,OAAOpQ,IAAI,WAGtB9hB,EAAKq7D,cAAgB,KACrB5vB,aAAazrC,EAAKq7D,gBAEoB,MAG9Cr7D,EAAKwS,UAKT4nD,iBAAkB,SAAUnmD,EAAMgkB,GAE9BhkB,EAAKjP,KAAK,UAAW,SAAUmP,EAASonD,GAEpCtnD,EAAKP,UAGLukB,EAAOjlB,eAAe,UAAWuoD,MAMzChB,wBAAyB,SAAUtmD,GAC/B,IAAIjU,EAAOC,KAGXgU,EAAKjP,KAAK,gBAAiB,SAAU2xB,EAAGzb,GAEpC,OAAOlb,EAAKq5D,QAAQn+C,EAAKrT,UAAWqT,EAAKja,SAMjDo5D,qBAAsB,SAAUpmD,EAAMgkB,GAClC,IAAIj4B,EAAOC,KAEXgU,EAAKjP,KAAK,qBAAsB,SAAU+L,EAAOomB,GAC7Ch7B,EAAEyU,KAAK5Q,EAAK0R,eACPZ,KAAK,SAAUY,GACZ,IAAIsC,EAAU,cAEdmjB,EAAeA,EAAarxB,QAAQ,iBAAkB,IAEtD,IAAIi1D,EAAmBrmD,KAAKC,MAAMwiB,GAC9B4jC,EAAiB/mD,UACjBA,GAAW+mD,EAAiB/mD,QAC5BA,GAAW,mBAAqB+mD,EAAiB3mD,WAErD,IAAIsmD,EAAgBhpD,EAAcoiD,kBAAkB,cAEpD77B,EAAOzyB,QACPyyB,EAAOxzB,OAAOtI,EAAE47B,KAAK2iC,GACjB1mD,QAASA,KAGbhU,EAAKi4B,OAAOjlB,eAAe,YAAa,mBAExCjH,OAAOmmB,OAAOsoC,WAAW,kBACzBzuD,OAAOmmB,OAAOsoC,WAAW,kBAKzC9mD,QAAS,WACMzT,KACFgU,MADEhU,KAEFgU,KAAKP,UAEd3H,OAAOgB,KAAK2G,QAJDzT,OAOfi6D,kBAAmB,WACf,GAAI/9D,EAAE,0BAA0B6F,OAAS,GAA0C,SAArC+J,OAAOgB,KAAK4sD,iBAAiBn7D,KAAiB,CACxF,IAAIg9D,EAA8Br/D,EAAE,0BAA0BiC,UAAY,EACtEq9D,EAAat/D,EAAE,8DACfu/D,EAAkBv/D,EAAE,8BAA+B,0BACnDw/D,EAAwBD,EAAgBryD,eAAiB,EACzDuyD,EAAiB7vD,OAAOgB,KAAK4sD,iBAAiBiC,gBAAkB,GAGpE,GAAsB,UAFtBA,EAAiBA,EAAe91D,QAAQ,IAAK,KAEd,CAC3B,QAAuC,IAA3B9F,KAAsB,kBAAkB,CAChD,IAAI67D,EAAe1/D,EAAE,0BAA0BiC,SAAW,IAAM,IAChEjC,EAAE,kBAAkBiC,OAAOy9D,GAC3B1/D,EAAE,kBAAkBsE,IAAI,YAAa,eAClCtE,EAAE,0BAA0BiC,OAAOjC,EAAE,0BAA0BiC,SAAWjC,EAAE,+BAA+BiC,SAAW,IAC7HjC,EAAE,+BAA+BsE,IAAI,WAAY,YACjDtE,EAAE,+BAA+B4I,SAAS,0BACtC5I,EAAE,+BAA+B6F,OAAS,IAC1C7F,EAAE,qCAAqC+E,OACvCu6D,EAAWh7D,IAAI,YAAa,UAGhCi7D,EAAgB15D,OAAS,GAEzBy5D,EAAWr9D,OAAOo9D,EAA8B,GAAKG,GAEC,GAAtDx/D,EAAE,+BAA+BmH,WAAWtB,OAC5C7F,EAAE,kBAAkBiC,OAAOjC,EAAE,kBAAkBiC,SAAWu9D,IAE1DD,EAAgBt+D,MAAM,QACtBs+D,EAAgBj7D,IAAI,aAAc,GAClCi7D,EAAgBj7D,IAAI,SAAU,QAEU,UAArCsL,OAAOgB,KAAK4sD,iBAAiBn7D,OACpCrC,EAAE,QAAQsE,IAAI,YAAa,UAC1BtE,EAAE,WAAWiC,UAAYV,OAAOo+D,YAAc,EAAK3/D,EAAE,QAAQsE,IAAI,YAAa,UACzEtE,EAAE,QAAQsE,IAAI,YAAa,UACjCtE,EAAE,sBAAsBiC,OAAO","sourcesContent":["/**\r\n * Autor: Ricardo Pérez\r\n */\r\n\r\n(function ($) {\r\n\r\n    $.fn.material_bizagi_tabs = function (options, params) {\r\n\r\n        var opts = $.extend({}, $.fn.material_bizagi_tabs.defaults, options);\r\n\r\n        var base = {\r\n            index: 0,\r\n            tabs: [],\r\n            $el: undefined,\r\n            $active: undefined,\r\n            $active_content: undefined, \r\n            init: function(el, params){\r\n                var self = this;\r\n                var $tabs = $(\">ul.bz-tabs\", el);\r\n                var $content_tabs = self.$el = $(el);\r\n                var $ind;\r\n                self.index = opts.active_index_tab;\r\n\r\n                function updatePositions(active, $indicator){\r\n                    if (typeof $indicator !== \"undefined\"){\r\n                        var info = updateIndicatorState($tabs.get(0), active.get(0), opts.direction);\r\n                        $indicator.css(\"left\", info.left).css(\"width\", info.width);\r\n                    }\r\n        \r\n                    var scroll_info = scrollSelectedIntoView($tabs.get(0), active.get(0), opts.direction);                        \r\n                    $tabs.scrollLeft(scroll_info);\r\n                    $tabs.trigger(\"updatePositions\", getTabsMetaInfo($tabs.get(0), active.get(0), opts.direction));\r\n                }\r\n\r\n                $(\">li.bz-tab\", $tabs).each(function(index, element) {\r\n                    if (index === opts.active_index_tab){\r\n                        self.$active = $(this);\r\n                        self.$active.addClass(\"active\");\r\n                    }\r\n                    else {\r\n                        $($(element).data(\"reference\"), $content_tabs).hide();\r\n                    }\r\n                    self.tabs.push({index: index, element: element});\r\n                });\r\n                \r\n                self.$active_content = $(self.$active.data(\"reference\"), $content_tabs);\r\n                \r\n                //Updates the initial position\r\n                updatePositions(self.$active);\r\n                \r\n                $tabs.on('click', '> li.bz-tab', function (e) {\r\n                    e.stopPropagation();\r\n        \r\n                    if (typeof $ind === \"undefined\"){\r\n                        $ind = $(\"<li class='bz-indicator-bar'></li>\");\r\n                        var info = updateIndicatorState($tabs.get(0), self.$active.get(0), opts.direction);\r\n                        $ind.css(\"left\", info.left).css(\"width\", info.width);\r\n                        $ind = $tabs.prepend($ind).find(\".bz-indicator-bar\");\r\n                    }\r\n        \r\n                    self.$active.removeClass('active');            \r\n                    self.$active_content.hide();\r\n        \r\n                    self.$active = $(this);\r\n        \r\n                    var reference = self.$active.data(\"reference\");\r\n                    self.index = self.$active.data(\"index\");\r\n\r\n                    self.$active_content = $(reference, $content_tabs);\r\n        \r\n                    self.$active.addClass('active');\r\n\r\n                    //Updates to the current position\r\n                    updatePositions(self.$active, $ind);\r\n                    $tabs.trigger(\"updateActive\", {index: self.index});\r\n\r\n                    self.$active_content.show();\r\n                    e.preventDefault();\r\n                });\r\n\r\n            },\r\n            getActiveTab: function(){\r\n                return {\r\n                    index: this.index,\r\n                    tab: this.$active,\r\n                    contantTab : this.$active_content\r\n                };\r\n            },\r\n            moveToNextTab: function(){\r\n                var index = ((this.index + 1) < this.tabs.length) ? this.index + 1 : 0;\r\n                this.tabs[index].element.click();\r\n            },\r\n            refreshPositions: function(){\r\n                this.tabs[this.index].element.click();\r\n            }\r\n        };\r\n\r\n        \r\n        if (typeof options == \"string\" && options) {\r\n            base = $(this).data(\"base\");\r\n            if (typeof base == \"undefined\"){\r\n                console.error(\"this plugin is has not been initialized!!\");\r\n            }\r\n            return base[options](params);\r\n        }\r\n        else {\r\n            return this.each(function () {\r\n                base.init(this, params);\r\n                $(this).data(\"base\", base);\r\n            });\r\n        }\r\n    };\r\n\r\n    $.fn.material_bizagi_tabs.defaults = {\r\n        direction: 'ltr',\r\n        active_index_tab: 0\r\n    }\r\n\r\n    function updateIndicatorState(tabs, active_tab, direction) {\r\n        var tabs_meta = getTabsMetaInfo(tabs, active_tab, direction);\r\n        var tabs_info = tabs_meta.tabsMetaInfo;\r\n        var tab_info = tabs_meta.tabMetaInfo;\r\n\r\n        var left = 0;\r\n        if (tabs_info && tab_info) {\r\n            var tmp_left = \"rtl\" === direction ? tabs_info.scrollLeftNormalized + tabs_info.clientWidth - tabs_info.scrollWidth : tabs_info.scrollLeft;\r\n            left = tab_info.left - tabs_info.left + tmp_left;\r\n        }\r\n        return {\r\n            left: left,\r\n            width: tab_info ? tab_info.width : 0\r\n        }\r\n    }\r\n\r\n    function getTabsMetaInfo(tabs, active_tab, direction) {\r\n        var tabs_meta_info = void 0;\r\n        if (tabs) {\r\n            var r = tabs.getBoundingClientRect();\r\n            tabs_meta_info = {\r\n                clientWidth: tabs ? tabs.clientWidth : 0,\r\n                scrollLeft: tabs ? tabs.scrollLeft : 0,\r\n                scrollLeftNormalized: tabs ? getNormalizedScrollLeft(tabs, direction) : 0,\r\n                scrollWidth: tabs ? tabs.scrollWidth : 0,\r\n                left: r.left,\r\n                right: r.right\r\n            }\r\n        }\r\n        var tab_meta_info = void 0;\r\n        if (tabs && false !== active_tab) {\r\n            tab_meta_info = active_tab.getBoundingClientRect();\r\n        }\r\n\r\n        return {\r\n            tabsMetaInfo: tabs_meta_info,\r\n            tabMetaInfo: tab_meta_info\r\n        }\r\n    }\r\n\r\n    function getNormalizedScrollLeft(tabs, direction) {\r\n        var a = tabs.scrollLeft;\r\n        if (\"rtl\" !== direction)\r\n            return a;\r\n        var n = getScrollType(tabs);\r\n        if (\"indeterminate\" === n)\r\n            return Number.NaN;\r\n        switch (n) {\r\n            case \"negative\":\r\n                return e.scrollWidth - e.clientWidth + a;\r\n            case \"reverse\":\r\n                return e.scrollWidth - e.clientWidth - a\r\n        }\r\n        return a\r\n    }\r\n\r\n    function getScrollType(tabs) {\r\n        if (!tabs || !window.document.body)\r\n            return \"indeterminate\";\r\n\r\n        var e = window.document.createElement(\"div\");\r\n        e.appendChild(document.createTextNode(\"ABCD\"));\r\n        e.dir = \"rtl\";\r\n        e.style.fontSize = \"14px\";\r\n        e.style.width = \"4px\";\r\n        e.style.height = \"1px\";\r\n        e.style.position = \"absolute\";\r\n        e.style.top = \"-1000px\";\r\n        e.style.overflow = \"scroll\";\r\n        document.body.appendChild(e);\r\n        type = \"reverse\";\r\n        if (e.scrollLeft > 0)\r\n            type = \"default\";\r\n        else {\r\n            e.scrollLeft = 1;\r\n            0 === e.scrollLeft && (type = \"negative\")\r\n        }\r\n        document.body.removeChild(e);\r\n        return type;\r\n    }\r\n\r\n    scrollSelectedIntoView = function (tabs, active_tab, direction) {\r\n        var tabs_meta = getTabsMetaInfo(tabs, active_tab, direction)\r\n        var tabs_info = tabs_meta.tabsMetaInfo;\r\n        var tab_info = tabs_meta.tabMetaInfo;\r\n\r\n        if (!tab_info || !tabs_info)\r\n            return;\r\n        \r\n        var scroll_info = void 0;\r\n        if (tab_info.left < tabs_info.left) {\r\n            scroll_info = tabs_info.scrollLeft + (tab_info.left - tabs_info.left);\r\n        } else if (tab_info.right > tabs_info.right) {\r\n            scroll_info = tabs_info.scrollLeft + (tab_info.right - tabs_info.right);\r\n        }             \r\n        return scroll_info;\r\n    }\r\n    \r\n})($);","/**\r\n * Material floating button\r\n * By: Nobita\r\n * Repo and docs: https://github.com/nobitagit/material-floating-button\r\n *\r\n * License: MIT\r\n */\r\n\r\n// build script hook - don't remove\r\n(function ($) {\r\n    $.fn.mfb = function (options) {\r\n        \"use strict\";\r\n\r\n        var animations = [\"mfb-zoomin\", \"mfb-slidein\", \"mfb-slidein-spring\", \"mfb-fountain\"];\r\n        var placements = [\"mfb-component--tl\", \"mfb-component--tr\", \"mfb-component--bl\", \"mfb-component--br\"];\r\n\r\n        /**\r\n         * Some defaults\r\n         */\r\n        var self = this;\r\n        var overlay = {\r\n            element: $(\"<div class='mfb-component__overlay'></div>\"),\r\n            opened: false\r\n        };\r\n\r\n        options = options || {};\r\n        options.buttons = options.buttons || [];\r\n        options.activePrincipalButton = options.activePrincipalButton || false;\r\n        options.placement = typeof options.placement !== \"undefined\" ? (placements.indexOf(options.placement) !== -1 ? options.placement : \"mfb-component--br\") : \"mfb-component--br\";\r\n        options.efect = typeof options.efect !== \"undefined\" ? (animations.indexOf(options.efect) !== -1 ? options.efect : \"mfb-slidein\") : \"mfb-slidein\";\r\n        options.clickHoverOpt = options.clickHoverOpt ||\"click\";\r\n        options.toggleMethod = options.toggleMethod || \"data-mfb-toggle\";\r\n        options.menuState = options.menuState || \"data-mfb-state\";\r\n        options.menuStateValue =  options.menuStateValue || \"closed\";\r\n        options.isOpen = options.isOpen||  \"open\";\r\n        options.isClosed = options.isClosed || \"closed\";\r\n        options.mainButtonClass = options.mainButtonClass || \"mfb-component__button--main\";\r\n        options.restingIcon = options.restingIcon || \"mo-icon bz-plus\";\r\n        options.activeIcon = options.activeIcon || \"mo-icon bz-cross\";\r\n\r\n        /**\r\n         * @todo ask: I think this is useless cause we don't need to remove the main button, remove the complete component will be cleaner\r\n         */\r\n        // $(\"[\" + options.toggleMethod + \"='\" + options.clickHoverOpt + \"'] .\" + options.mainButtonClass, this).remove();\r\n        $(this).children(\".mfb-component-holder\").remove();\r\n        /**\r\n         * @fix How about the events that was bind before?\r\n         */\r\n\r\n        var tmpl =\r\n            \"<ul class=\\\"mfb-component-holder #: data.placement # #: data.efect #\\\" #: data.toggleMethod #=\\\"#: data.clickHoverOpt #\\\" #: data.menuState#=\\\"#: data.menuStateValue #\\\">\" +\r\n            \"   <li class=\\\"mfb-component__wrap\\\">\" +\r\n            \"      #if (data.activePrincipalButton && data.buttons.length >= 1){#\" +\r\n            \"       <a #if(typeof data.buttons[0].label !== \\\"undefined\\\"){# data-mfb-label=\\\"#: data.buttons[0].label #\\\"#}# class=\\\"mfb-component__button--main\\\">\" +\r\n            \"           <i class=\\\"mfb-component__main-icon--resting mfb-icon-font bz-#:data.restingIcon#\\\"></i><i class=\\\"mfb-component__main-icon--active mfb-icon-font bz-#:data.buttons[0].icon#\\\"></i>\" +\r\n            \"       </a>\" +\r\n            \"       #}else{#\" +\r\n            \"       <a #if(typeof data.label !== \\\"undefined\\\"){# data-mfb-label=\\\"#: data.label #\\\"#}# class=\\\"mfb-component__button--main\\\">\" +\r\n            \"           <i class=\\\"mfb-component__main-icon--resting mfb-icon-font bz-#:data.restingIcon#\\\"></i><i class=\\\"mfb-component__main-icon--active mfb-icon-font bz-#:data.activeIcon#\\\"></i>\" +\r\n            \"       </a>\" +\r\n            \"       #}#\" +\r\n            \"       # if(data.buttons.length > 0){#\" +\r\n            \"       <ul class=\\\"mfb-component__list\\\">\" +\r\n            \"           #for(var i = (data.activePrincipalButton ? 1 : 0), len = data.buttons.length; i< len; i++){#\" +\r\n            \"           <li data-id=\\\"#: data.buttons[i].id #\\\">\" +\r\n            \"               <a href=\\\"#: data.buttons[i].link #\\\" data-index=\\\"#: i#\\\" #if(typeof data.buttons[i].label !== \\\"undefined\\\"){# data-mfb-label=\\\"#: data.buttons[i].label #\\\"#}# class=\\\"mfb-component__button--child\\\">\" +\r\n            \"                  <i class=\\\"mfb-component__child-icon mfb-icon-font bz-#: data.buttons[i].icon #\\\"></i>\" +\r\n            \"               </a>\" +\r\n            \"           </li>\" +\r\n            \"           #}#\" +\r\n            \"       </ul>\" +\r\n            \"       #}#\" +\r\n            \"   </li>\" +\r\n            \"</ul>\";\r\n\r\n        /**\r\n         * Internal references\r\n         */\r\n        var target,\r\n            currentState;\r\n\r\n        /**\r\n         * For every menu we need to get the main button and attach the appropriate evt.\r\n         */\r\n        function attachEvt(elems, evt, handler) {\r\n            for (var i = 0, len = elems.length; i < len; i++) {\r\n                elems[i].addEventListener(evt, handler, false);\r\n            }\r\n        }\r\n\r\n        function configureBlur(element, blur){\r\n            if(blur){\r\n                element.siblings().addClass(\"mfb-component__overlay--blur\");\r\n                element.closest(\"[data-role]\").siblings().addClass(\"mfb-component__overlay--blur\");\r\n            }else{\r\n                element.siblings().removeClass(\"mfb-component__overlay--blur\");\r\n                element.closest(\"[data-role]\").siblings().removeClass(\"mfb-component__overlay--blur\");\r\n            }\r\n        }\r\n\r\n        /**\r\n         * The open/close action is performed by toggling an attribute\r\n         * on the menu main element.\r\n         *\r\n         * First, check if the target is the menu itself. If it's a child\r\n         * keep walking up the tree until we found the main element\r\n         * where we can toggle the state.\r\n         */\r\n        function toggleButton(evt) {\r\n            target = evt.target;\r\n            while (target && !target.getAttribute(options.toggleMethod)) {\r\n                target = target.parentNode;\r\n                if (!target) {\r\n                    return;\r\n                }\r\n            }\r\n            currentState = target.getAttribute(options.menuState) === options.isOpen ? options.isClosed : options.isOpen;\r\n\r\n            if (options.activePrincipalButton && currentState !== \"open\") {\r\n                var button = options.buttons[0];\r\n                if (options.click) {\r\n                    options.click(evt, $.extend(button, {principal: true}), this);\r\n                }\r\n                configureBlur($(target), true);\r\n            }\r\n\r\n            if (currentState === \"open\" && !overlay.opened) {\r\n                overlay.element.appendTo(target).bind(\"click\", function() {\r\n                    this.remove();\r\n                    overlay.opened = false;\r\n                    target.setAttribute(options.menuState, \"close\");\r\n                    configureBlur($(target), false);\r\n                });\r\n                configureBlur($(target), true);\r\n            } else {\r\n                overlay.element.remove();\r\n                configureBlur($(target), false);\r\n            }\r\n\r\n            overlay.opened = !overlay.opened;\r\n\r\n            target.setAttribute(options.menuState, currentState);\r\n        }\r\n\r\n        function clickChildButton(evt) {\r\n            var index = $(this).data(\"index\");\r\n            var button = options.buttons[index];\r\n\r\n            $(\".mfb-component__overlay\", self).click();\r\n\r\n            if (options.click){\r\n                evt.preventDefault();\r\n                options.click(evt, $.extend(button, {principal: false}), this);\r\n            }\r\n        }\r\n\r\n        function clickPrincipalButton(evt) {\r\n            if (options.click) {\r\n                evt.preventDefault();\r\n                options.click(evt, { principal: true }, this);\r\n            }\r\n        }\r\n\r\n        var template = kendo.template(tmpl, { useWithBlock: false });\r\n        var html = template(options);\r\n\r\n        if (options.position === \"prepend\") {\r\n            this.prepend(html);\r\n        } else {\r\n            this.append(html);\r\n        }\r\n\r\n        // Principal button to toggle\r\n        var toggle = options.buttons.length > 0 ? toggleButton : clickPrincipalButton;        \r\n        attachEvt($(\"[\" + options.toggleMethod + \"='\" + options.clickHoverOpt + \"'] .\" + options.mainButtonClass, this), \"click\", toggle);        \r\n\r\n        // Secondary buttons to click\r\n        attachEvt($(\".mfb-component__button--child\", this), \"click\", clickChildButton);\r\n    };\r\n\r\n// build script hook - don't remove\r\n})(jQuery);\r\n\r\n\r\n(function ($) {\r\n    $.fn.bz_navigation_buttons = function (options) {        \r\n        options = options || {};\r\n        var MARGIN = 2;\r\n        var buttons = options.buttons || [];\r\n        var isDesign = options.isDesign || false;\r\n        var lastActionExecuted = options.lastActionExecuted || false;\r\n        var allowAddButtons = options.allowAddButtons || false;\r\n        var $element = this;\r\n        \r\n\r\n        var addButtonTemplate = '<div class=\"bz-button--add\"><svg class=\"ico_16x16\" ><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-plus\"></use></svg></div>';        \r\n        var containerTemplate = '<ul class=\"bz-buttons--container\"></ul>';\r\n        var buttonTemplate ='<li class=\"bz-button--container\"><button class=\"bz-btn\">{0}</button></li>';        \r\n        var rightNavigationButton = '<div class=\"bz-button--rigth\"><svg class=\"ico_16x16\" ><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-arrow-rigth\"></use></svg></div>';\r\n        var leftNavigationButton = '<div class=\"bz-button--left\"><svg class=\"ico_16x16\" ><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-arrow-left\"></use></svg></div>';       \r\n        \r\n        $element.empty();\r\n        $element.addClass('bz-buttons--navigation');\r\n\r\n        var $container = $(containerTemplate);\r\n        $container.appendTo($element);    \r\n                   \r\n        \r\n        var processButtons = function(){                      \r\n            var result = MARGIN;\r\n            for (var index = 0; index < buttons.length; index++) {\r\n                (function(button){\r\n                    var caption = button.properties.caption;                            \r\n                    var $elementButton =  $(buttonTemplate.replace(\"{0}\", caption));\r\n                    var height = 0;    \r\n\r\n                    var handlerOnClickButton = function(){                                                \r\n                        $container.trigger('onSelectButton', {\r\n                            $element: $elementButton,\r\n                            button: button\r\n                        });\r\n                        \r\n                        var targetElement = $container.get(0);\r\n                        var clientWidth = targetElement.clientWidth; \r\n                        var offset = isDesign ? 35 : 0;\r\n\r\n                        if (targetElement.scrollWidth > clientWidth){\r\n                            if (height > clientWidth) { targetElement.scrollLeft = (height - clientWidth) + offset }\r\n                            else {\r\n                                if ((height - targetElement.scrollLeft) < targetElement.scrollLeft) { targetElement.scrollLeft = (height - (targetElement.scrollLeft + offset)); }\r\n                            }                            \r\n                        }\r\n                    };\r\n                    \r\n                    $elementButton    \r\n                        .on('click', handlerOnClickButton)\r\n                        .appendTo($container);\r\n                    \r\n                    height = result = result + $elementButton.get(0).offsetWidth + MARGIN;    \r\n\r\n                }(buttons[index].button), result)                                                                                                                                                      \r\n            };\r\n                             \r\n            \r\n            if (isDesign) {\r\n                var $addButton = $(addButtonTemplate);\r\n                \r\n                if (allowAddButtons){\r\n                    $addButton.click(function(){                   \r\n                        $container.trigger('onAddButton');                                                            \r\n                    });\r\n        \r\n                    $addButton.appendTo($element);\r\n                }\r\n                \r\n                var htmlButtons = $container.get(0);\r\n\r\n                var heightAddButton = $addButton.get(0).scrollWidth;\r\n                var heightWrapper = $element.get(0).scrollWidth;\r\n                var heightButtons =  htmlButtons.scrollWidth;          \r\n                \r\n                \r\n                var $rightNavigationButton = $(rightNavigationButton);\r\n                var rightNavigationButtonIsLocated = heightButtons > (heightWrapper - heightAddButton);\r\n\r\n                if (rightNavigationButtonIsLocated) { $rightNavigationButton.insertAfter($container); }\r\n\r\n                $rightNavigationButton.on(\"click\", function(){\r\n                    htmlButtons.scrollLeft += 40;\r\n                });\r\n                \r\n                var leftNavigationButtonIsLocated = false;\r\n                var $leftNavigationButton = $(leftNavigationButton);\r\n                                \r\n\r\n                $leftNavigationButton.on(\"click\", function(){                    \r\n                    htmlButtons.scrollLeft -= 40;                    \r\n                });\r\n\r\n                $container.on(\"scroll\", function(ev){\r\n                    var targetElement = ev.target;                     \r\n                    var maxScrollLeft = targetElement.scrollWidth - targetElement.clientWidth;\r\n                    var scrollLeft = targetElement.scrollLeft;\r\n\r\n                    if ( scrollLeft === 0 && leftNavigationButtonIsLocated) {\r\n                        leftNavigationButtonIsLocated = false;\r\n                        $leftNavigationButton.detach();\r\n                    }\r\n\r\n                    if (rightNavigationButtonIsLocated && scrollLeft === maxScrollLeft) {\r\n                        rightNavigationButtonIsLocated = false;\r\n                        $rightNavigationButton.detach();\r\n                    }\r\n                                        \r\n                    if (!leftNavigationButtonIsLocated && scrollLeft > 0){\r\n                       \r\n                        $leftNavigationButton.prependTo($element);     \r\n                        leftNavigationButtonIsLocated = true;\r\n                    }\r\n                    \r\n                    if (!rightNavigationButtonIsLocated && scrollLeft < maxScrollLeft){\r\n                        rightNavigationButtonIsLocated = true;\r\n                        $rightNavigationButton.insertAfter($container);       \r\n                    }                    \r\n                });\r\n                \r\n                if (lastActionExecuted === \"addButton\") {\r\n                    if (rightNavigationButtonIsLocated){\r\n                        htmlButtons.scrollLeft = (htmlButtons.scrollWidth - htmlButtons.clientWidth);  \r\n                    }                    \r\n                }\r\n            }\r\n        }              \r\n\r\n        processButtons();\r\n        \r\n        return  $container; \r\n    }\r\n\r\n})(jQuery);    ","/*\r\nAdd the Material Design Style Ripple Effect on Click / Touch.\r\n*/\r\n(function ($) { \r\n    var transparent;\r\n    //only run this once. this addes an empty elment in boody root and gets the defintion of the browsers transparent color scheme.\r\n    if (typeof (transparent) == \"undefined\") {\r\n        // Get this browser's definition of no back ground / transprent, rgba(0,0,0,0) etc..\r\n        // Must be appended else Chrome etc return 'initial'\r\n        var $temp = $('<div style=\"background:none;display:none;\"/>').appendTo('body');\r\n        //now we just get the value given back to use by the browser for its spcific transparent color scheme.\r\n        transparent = $temp.css('backgroundColor');\r\n        //remove the temp object since were done with it.\r\n        $temp.remove();\r\n    }\r\n\r\n\r\n    //add Material desing style rippple effect to a given element that animates on click / touch.\r\n    $.fn.rippleEffect = function (options) {\r\n        // Extend our default options with those provided.\r\n        var opts = $.extend({}, $.fn.rippleEffect.defaults, options);\r\n\r\n\r\n        return this.each(function () {\r\n            $(this).on(\"click\", function (e) {\r\n                var $thisElement = $(this),\r\n                eventPageX,\r\n                eventPageY,\r\n                inkX,\r\n                inkY,\r\n                maxDiameter,\r\n                eventType = e.type,\r\n                rippleColor,\r\n                $inkSpan,\r\n                $inkparent;\r\n\r\n                //default append\r\n                $inkparent = $thisElement;\r\n\r\n                function getRippleColorFromTraverse() {\r\n                    if (opts.inkColor != \"\") {\r\n                        return opts.inkColor;\r\n                    } else {\r\n                        //try and get from elemnt or parent what ever has a bg color and it will lighten or dark based on color.\r\n                        return getInkColor($inkparent, opts.inkDefaultColor);\r\n                    }\r\n                }\r\n                //check to see if were appending ink to a parent element other than the trigger\r\n                //if you append to a parent item that item will have the ripple span and it may block access to links\r\n                //all i had to do was give any of the siblings of the ripple a z-index of 1, some i had to set position to relative.\r\n                if (opts.appendInkTo != \"\") {\r\n                    $inkparent = $thisElement.closest(opts.appendInkTo);\r\n                }\r\n                // check to se if we have an ink, if not we need to add it in, we only need to do this once.\r\n                if ($inkparent.find(\".\" + opts.inkClass).length == 0) {\r\n                    //add ink \r\n                    $inkparent.append('<span class=\"' + opts.inkContainerClass + '\"><span class=\"' + opts.inkClass + '\"></span></span>');\r\n                }\r\n                //set the ink var targeting the ink within the element to prevent dup ink animates.\r\n                $inkSpan = $inkparent.find(\".\" + opts.inkContainerClass + \" > \" + \" .\" + opts.inkClass);\r\n                //incase of quick double click or animate is present. remove the animation\r\n                $inkSpan.removeClass(\"animate\");\r\n\r\n                //now if the ink has no height set we need to add it in.\r\n                if (!$inkSpan.height() && !$inkSpan.width()) {\r\n                    //use $thisElement width or height whichever is larger for the diameter to make a circle which can cover the entire element.\r\n                    maxDiameter = Math.max($inkparent.outerWidth(), $inkparent.outerHeight());\r\n                    //set width and height and get bg color for the\r\n                    //see if ripple color was provided via data attr.\r\n                    if (typeof ($thisElement.data(\"ripple\")) != \"undefined\" && $thisElement.data(\"ripple\") != \"\") {\r\n                        rippleColor = $thisElement.data(\"ripple\");\r\n                    } else {\r\n                        //check if a target element id to get a ripple color from is provided\r\n                        if (typeof ($thisElement.data(\"ripple-getcolorfromid\")) != \"undefined\" && $thisElement.data(\"ripple-getcolorfromid\") != \"\") {\r\n                            var idToUse = $thisElement.data(\"ripple-getcolorfromid\");\r\n                            //make sure element is on page.\r\n                            if ($(idToUse).length > 0) {\r\n                                //set from given elmements bgcolor.\r\n                                rippleColor = $(idToUse).css(\"background-color\");\r\n                            } else {\r\n                                //get from default ways\r\n                                rippleColor = getRippleColorFromTraverse();\r\n                            }\r\n                        } else {\r\n                            //get from default ways\r\n                            rippleColor = getRippleColorFromTraverse();\r\n                        }\r\n                    }\r\n                    //set h and w and ripple color.\r\n                    $inkSpan.css({ height: maxDiameter, width: maxDiameter, \"background-color\": rippleColor });\r\n                }\r\n                \r\n                //now that the ink is taken care of we need to set the position where it starts, which if from click.\r\n                //get event type.\r\n                if(eventType === \"click\"){\r\n                    eventPageX = e.pageX; \r\n                    eventPageY = e.pageY;\r\n                } else if(eventType === \"touchstart\") {\r\n                    var touch = (e.originalEvent.touches[0] || e.originalEvent.changedTouches[0]);\r\n                    eventPageX = touch.pageX;\r\n                    eventPageY = touch.pageY\r\n                }\r\n               \r\n                inkX = (eventPageX - $inkparent.offset().left - $inkSpan.width() / 2);\r\n                inkY = (eventPageY - $inkparent.offset().top - $inkSpan.height() / 2);\r\n                $inkSpan.css({ top: inkY + 'px', left: inkX + 'px' }).addClass(\"animate\");\r\n                //remove animation after a little bit.\r\n                setTimeout(function () {\r\n                    $inkSpan.removeClass(\"animate\")\r\n                }, 400);\r\n\r\n            });\r\n        });\r\n    };\r\n    // Plugin defaults – added as a property on our plugin function.\r\n    $.fn.rippleEffect.defaults = {\r\n        inkContainerClass: \"ripple\",\r\n        inkClass: \"ink\",\r\n        //to avoid a global default you can add data-ripple=\"#ff00ff\" to the element that will have the ripple and that color will be used.\r\n        //or to use a tagrget elements background color for the ripple you can set the data-ripple=\"\" and data-ripple-getcolorfromid=\"#elmentWIthBGColorToUSe\"\r\n        inkDefaultColor: \"#F0F0F0\", //falback color to use if using parent traversing to get a bg color.\r\n        inkColor: \"\", //the ink color you want the element to use, this will override any bg checks for element and parent traversing, but if the ement has data-ripple=\"#fff\" the #fff will be used above all else\r\n        //if you append to a parent item that item will have the ripple span and it may block access to links and child elements\r\n        //all i had to do was give any of the children of the appended element a z-index of 1, some i had to set position to relative.\r\n        appendInkTo: \"\" //append ink to a diffrent element. will find closest element matching.\r\n    };\r\n\r\n    //Now users can include a line like this in their scripts:\r\n    //$.fn.rippleEffect.defaults.inkDefaultColor = \"#0000FF\";\r\n\r\n    // Define our get background color function.\r\n    //this will try and get a background color for the ink color manipulation \r\n    //by starting with the element provided and going as far back to the body unless a value is found.\r\n    //providing a falback value will make sure that an actual color is returned\r\n    function getBackgroundColorForInk($element, fallback) {\r\n        function getBgColor($elementToCheckForBg) {\r\n            //here we check against the @transparent var that is set on load.\r\n            if ($elementToCheckForBg.css('backgroundColor') == transparent) {\r\n                //here we check if were not at body, if not, then run again on the elments parent, if were at body use fallback or the browers take on transparent.\r\n                return !$elementToCheckForBg.is('body') ? getBgColor($elementToCheckForBg.parent()) : fallback || transparent;\r\n            } else {\r\n                //it was not transparent return this color.\r\n                return $elementToCheckForBg.css('backgroundColor');\r\n            }\r\n        }\r\n        //run the function which will repeate as long as it needs until it hits body to find a color to use.\r\n        return getBgColor($element);\r\n    };\r\n\r\n    //create as a property so users can set make there own lum check.\r\n    //returns the direction lumination should go for ink contrast.\r\n    //get the lumination value for a given color.\r\n    $.fn.rippleEffect.getLuminationValue = function (hexcolor) {\r\n        var hexcolor = hexcolor.substring(1);      // strip #\r\n        var rgb = parseInt(hexcolor, 16);   // convert rrggbb to decimal\r\n        var r = (rgb >> 16) & 0xff;  // extract red\r\n        var g = (rgb >> 8) & 0xff;  // extract green\r\n        var b = (rgb >> 0) & 0xff;  // extract blue\r\n\r\n        var luma = 0.2126 * r + 0.7152 * g + 0.0722 * b; // per ITU-R BT.709\r\n        return luma;\r\n    }\r\n\r\n    //create as property, for user override. \r\n    //this was from a site point article.\r\n    //get a new color luminance -0.15 is darker by 15% and 0.20 is lighter by 20%\r\n    $.fn.rippleEffect.getColorLuminance = function (hexcolor, lum) {\r\n        // validate hex string\r\n        hexcolor = String(hexcolor).replace(/[^0-9a-f]/gi, '');\r\n        if (hexcolor.length < 6) {\r\n            hexcolor = hexcolor[0] + hexcolor[0] + hexcolor[1] + hexcolor[1] + hexcolor[2] + hexcolor[2];\r\n        }\r\n        //set a default lum value.\r\n        lum = lum || 0;\r\n\r\n        // convert to decimal and change luminosity\r\n        var resultHex = \"#\", c, i;\r\n        for (i = 0; i < 3; i++) {\r\n            c = parseInt(hexcolor.substr(i * 2, 2), 16);\r\n            c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\r\n            resultHex += (\"00\" + c).substr(c.length);\r\n        }\r\n\r\n        return resultHex;\r\n    }\r\n\r\n    //create property for overide if wanted, this converts an rgb value to hex.\r\n    //it does not work right with rgba though it just returns the bas rgb part so the trans is not claculated in.\r\n    $.fn.rippleEffect.colorToHex = function (rgb) {\r\n        //first echeck to see if we already have a hex color, if so just return.\r\n        if (rgb.substr(0, 1) === '#') {\r\n            return color;\r\n        }\r\n        rgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\r\n        return (rgb && rgb.length === 4) ? \"#\" +\r\n         (\"0\" + parseInt(rgb[1], 10).toString(16)).slice(-2) +\r\n         (\"0\" + parseInt(rgb[2], 10).toString(16)).slice(-2) +\r\n         (\"0\" + parseInt(rgb[3], 10).toString(16)).slice(-2) : '';\r\n    }\r\n\r\n    //this is the base function that does all of the magic, it gets a bkg color, \r\n    //then changes the colors lumanince so the ink is visiable when being animated.\r\n    function getInkColor($element, fallBackColor) {\r\n        var backgroundOrInhreitedBackGround,\r\n            hex,\r\n            luma,\r\n            returnLumintion;\r\n        //get back ground color of element / or parent with an actual color or use fallback of a lighter gray \r\n        // Call our getBackgroundColorForInk function.\r\n\r\n        backgroundOrInhreitedBackGround = getBackgroundColorForInk($element, fallBackColor);\r\n        //convert to hex, this returns hex if it is already hex.\r\n        //call our colorToHex function\r\n        hex = $.fn.rippleEffect.colorToHex(backgroundOrInhreitedBackGround);\r\n        //now get the lumination value of this bg.\r\n        //call our getLuminationValue function\r\n        luma = $.fn.rippleEffect.getLuminationValue(hex);\r\n\r\n        //239 for lighter lumination ok \r\n        if (luma <= 239) {\r\n            //go lighter alwasy prefered.\r\n            //we need to make sure we are light enough though\r\n            if (luma <= 70) {\r\n                returnLumintion = $.fn.rippleEffect.getColorLuminance(hex, 0.80);\r\n            } else {\r\n                returnLumintion = $.fn.rippleEffect.getColorLuminance(hex, 0.20);\r\n            }\r\n        } else {\r\n            //go darker\r\n            returnLumintion = $.fn.rippleEffect.getColorLuminance(hex, -0.15);\r\n        }\r\n        return returnLumintion;\r\n    };\r\n\r\n})(jQuery);","/*\r\n*   Name: Bizagi Grid for Smartphone\r\n*   Author: Bizagi UI Forms\r\n*   Comments:\r\n*   -   This widget will extend the bizagi grid widget to specialize into a smartPhone view\r\n*\r\n*   \r\n*\r\n*   Styles:\r\n*   - css/bizagi/smarpthone/controls/bizagi.grid.css\r\n*/\r\n\r\n(function ($) {\r\n    $.widget('ui.bizagi_grid_smartphone', $.ui.bizagi_grid, {\r\n\r\n        /*\r\n        *   Method to attach any handler to the grid\r\n        */\r\n        attachHandlers: function () {\r\n            var self = this;\r\n\r\n            // Add paging events\r\n            var pager = self._getComponent(\"pager\");\r\n            pager.on(\"click\", \"div.bz-btn-icn\", function () {\r\n                var pageNumber = $(this).attr(\"data-page-number\");\r\n                if (pageNumber && self.isValid()) {\r\n                    self.changePage(pageNumber);\r\n                }\r\n            });\r\n\r\n            pager.on(\"change\", \"input\", function () {\r\n                var page = this.value;\r\n                if (page && self.isValid()) {\r\n                    var _input = this;\r\n                    self.changePage(page, /*success*/function () { }, /*fail*/function () {\r\n                        _input.value = self.page;\r\n                    });\r\n                }\r\n            });\r\n\r\n            if (self._getComponent(\"buttons\") != undefined) {\r\n                var items = [];\r\n                if (self.options.actions.add) {\r\n                    items.push({\r\n                        name: bizagi.localization.getResource(\"render-grid-add-label\"),\r\n                        fn: function () {\r\n                            self.processAction(\"add\");\r\n                            self.unselectRow();\r\n                        }\r\n                    });\r\n                }\r\n\r\n                if (self.options.actions.hasTotalizer) {\r\n                    items.push({\r\n                        name: \"Totalizer\", // TODO: Add resource\r\n                        fn: function () {\r\n                            self.totalizer();\r\n                        }\r\n                    });\r\n                }\r\n\r\n                self._getComponent(\"buttons\").find(\".bz-btn-icn\").overflowMenu({ items: items });\r\n            }\r\n\r\n            // Bind special cell button action\r\n            var _row_buttons = self._getComponent(\"rowButtons\");\r\n            if (_row_buttons){\r\n                _row_buttons.on(\"click\", \"[data-action]\", function () {\r\n                    self.processAction($(this).attr(\"data-action\"), {});\r\n                });\r\n            } \r\n        },\r\n        /* popup Total\r\n         *\r\n         */\r\n        totalizer: function () {\r\n            var self = this;\r\n            self.options.totalData();\r\n        },\r\n\r\n        /*totalData\r\n         *   prepare totalizer\r\n        */\r\n        draw: function () {\r\n            var self = this;\r\n            self._super();\r\n            var verifyTotalizer = self.options.actions.totalizer;\r\n            if (self.data.rows.length == 0) {\r\n                var rowButtons =  self._getComponent(\"rowButtons\");\r\n                if (rowButtons){\r\n                    rowButtons.hide();\r\n                }\r\n                self.element.addClass(\"bz-mobile-grid--empty\");\r\n            }\r\n            //Verify totalizer to activate action sheet\r\n            if (verifyTotalizer) {\r\n                if (typeof self.actualActionSheet != \"undefined\" && !bizagi.util.isObjectEmpty(self.actualActionSheet)) {\r\n                    self.actualActionSheet.data(\"kendoMobileActionSheet\").destroy();\r\n                }\r\n\r\n                self.actualActionSheet = self.element.find(\"#ui-bizagi-menu-totalizer\").kendoMobileActionSheet();\r\n            }\r\n\r\n            //hide loader\r\n            bizagi.util.smartphone.stopLoading();\r\n        },\r\n\r\n        drawRow: function (rowData, isNewRow) {\r\n            this.selectedBusinessKey = rowData[this.columnKeyIndex];\r\n            return this._super(rowData, isNewRow);\r\n        },\r\n\r\n        changePage: function (page, success_callback, fail_callback) {\r\n            var self = this;\r\n            var currentPage = Number(self.data.page);\r\n            //in the smartphone the original  self.data.total is always 1  this change to self.data.records refers in this case a total pages\r\n            var total = self.data.records;\r\n            var newPage = page;\r\n\r\n            // Process previous page\r\n            if (page == \"previous\") {\r\n                if (currentPage > 1) newPage = currentPage - 1;\r\n                else {\r\n                    if (fail_callback) fail_callback();\r\n                    return;\r\n                }\r\n            }\r\n            // Process next page\r\n            if (page == \"next\") {\r\n                if (currentPage < total) newPage = currentPage + 1;\r\n                else {\r\n                    if (fail_callback) fail_callback();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (page !== \"next\" && page !== \"previous\" && typeof page === \"string\") {\r\n                try {\r\n                    newPage = Number(page);\r\n                }\r\n                catch (e) {\r\n                    if (fail_callback) fail_callback();\r\n                    return;\r\n                }\r\n                if (newPage == NaN || newPage > total || newPage < 0) {\r\n                    if (fail_callback) fail_callback();\r\n                    return;\r\n                };\r\n            }\r\n\r\n            //show loader\r\n            bizagi.util.smartphone.startLoading();\r\n            setTimeout(function () {\r\n                bizagi.util.smartphone.stopLoading();\r\n            }, 1000);\r\n\r\n            // Update internal options\r\n            self.page = Number(newPage);\r\n\r\n            // Execute handler\r\n            self.onPageRequested();\r\n            if (success_callback) {\r\n                success_callback();\r\n            }\r\n        },\r\n\r\n        /*\r\n        *   Executes the row selected handler\r\n        */\r\n        onRowSelected: function () {\r\n            var self = this;\r\n            // Call base\r\n            $.ui.bizagi_grid.prototype.onRowSelected.apply(self, arguments);\r\n        },\r\n\r\n        /*\r\n        *   Executes the row un-selected handler\r\n        */\r\n        onRowUnselected: function () {\r\n            var self = this;\r\n            // Call base\r\n            $.ui.bizagi_grid.prototype.onRowUnselected.apply(self, arguments);\r\n        },\r\n\r\n        /*\r\n        *  Template method to check if buttons component must be rendered\r\n        */\r\n        _canShowButtons: function () {\r\n            var self = this;\r\n            var actions = self.options.actions;\r\n            return actions[\"add\"] || actions[\"hasTotalizer\"];\r\n        },\r\n\r\n        /*\r\n        *  Template method to check if row buttons must be displayed when the row is selected\r\n        */\r\n        _canShowRowButtons: function () {\r\n            var self = this;\r\n            var actions = self.options.actions;\r\n            return actions[\"edit\"] || actions[\"remove\"] || actions[\"details\"];\r\n        },\r\n\r\n        /*\r\n        *   Return the new created ids\r\n        */\r\n        getNewRowKeys: function () {\r\n            var self = this;\r\n            var rows = self._getComponent(\"rows\").find(\"[data-new-row]\");\r\n            return $.map(rows, function (row, i) {\r\n                return $(row).data(\"business-key\");\r\n            });\r\n        },\r\n\r\n\r\n        /*\r\n        *   Show the row buttons\r\n        */\r\n        _showRowButtons: function () {\r\n        },\r\n\r\n        /*\r\n        *   Hide the row buttons\r\n        */\r\n        _hideRowButtons: function () {\r\n        },\r\n\r\n        /**\r\n         * Replaces a matched element in the container for the specified \"replace\" element\r\n         * @param html\r\n         * @param element\r\n         * @param replace\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _replaceElement: function (html, element, replace) {\r\n            return html.replace(new RegExp(\"{{element \" + element + \"}}\", 'g'), replace);\r\n        },\r\n        \r\n        /**\r\n         * Check if row its new\r\n         * @param {} businessKey\r\n         * @returns {}\r\n         */\r\n        isNewRecord: function (businessKey) {\r\n            var self = this;\r\n            var row = self._getComponent(\"rows\");\r\n\r\n            if (row) {\r\n                businessKey = row.find(\"[data-business-key='\" + businessKey + \"']\");\r\n                if ($(businessKey).data(\"new-row\")) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    });\r\n\r\n})(jQuery);\r\n","/**\r\n * Name:\r\n *   Author: Bizagi Mobile team\r\n *   Comments:\r\n * Structure to applicate plugin\r\n *  <div class=\"bz-bizagi-container-tap-popup\"> //container\r\n    <div class=\"cell bz-container-items-tabs\"> // represent item of tab\r\n    <span >${displayName}</span>// the first span always is the title                                    \r\n    <span> ........</span> // after the span can place the items you want\r\n    <div> .........</div> // etc\r\n    </div> <!-- end cell-->\r\n    </div><!-- end bz-bizagi-container-tap-popup-->\r\n**/\r\n(function ($) {\r\n    $.fn.bztabs = function (params) {\r\n\r\n        var self = $(this);\r\n\r\n        params = params || {};\r\n        params.activeTab = params.activeTab || 0;\r\n        params.tabNumber = params.tabNumber || 1;\r\n\r\n\r\n        var activate = (params.activate && typeof params.activate === \"function\") ? params.activate : function () { };\r\n        var beforeActivate = (params.beforeActivate && typeof params.beforeActivate === \"function\") ? params.beforeActivate : function () { };\r\n\r\n        // PopUp control\r\n        var popUp = self.find(\">div.bz-bizagi-container-tap-popup\").hide();\r\n        // Depending on tabNumber a percentage will be in the width of each tab\r\n        var tabCountPopup = popUp.children().length;\r\n        // Base to build the header of tabs\r\n        var tabHeader = $(\"<div class='bz-header_select'></div>\");\r\n\r\n        var tabCountReal = (params.tabNumber > tabCountPopup) ? tabCountPopup : params.tabNumber;\r\n\r\n        // round down\r\n        var widthRow = Math.floor(100 / Number(tabCountReal));\r\n\r\n        // Duplicate the tabs to create the header\r\n        popUp.children().each(function (i, item) {\r\n            tabHeader.append(\r\n                \"<div class='bz-wp-tabs-ui bz-wp-tabs-item' data-index='\" + i + \"' data-reference-tab='\" +\r\n                item.getAttribute(\"data-reference-tab\") + \"'><span>\" +\r\n                item.textContent + \"</span></div>\");\r\n        });\r\n\r\n        tabHeader.find(\"> .bz-wp-tabs-ui\").css(\"width\", widthRow + \"%\");        \r\n        tabHeader.append(\"<div class='bz-wp-tabs-arrow-container'><div class='bz-cm-icon bz-mo-icon bz-plus'></div></div>\");\r\n\r\n        self.prepend(tabHeader);\r\n\r\n        var tabCurrent = self.find(\"> .bz-bizagi-container-tap-popup > .bz-container-items-tabs\").eq(params.activeTab);\r\n        var itemCurrent = $($(tabCurrent).data(\"reference-tab\"), self);\r\n\r\n        itemCurrent.addClass(\"childrenActive\");\r\n        tabCurrent.addClass(\"tabSelected\");\r\n\r\n        // Mark the selected tab in the header\r\n        var activeTab = $(\".bz-wp-tabs-ui:nth-child(\" + (params.activeTab + 1) + \")\", tabHeader).addClass(\"tabSelected\");\r\n\r\n        // The new width will be added to the tabSelected in order to complete the 100% on tabs\r\n        var widthTabSelected = widthRow + (100 - (widthRow * tabCountReal));\r\n        activeTab.css(\"width\", widthTabSelected + \"%\");\r\n\r\n        function updateTabSize() {\r\n            if (params.tabNumber < tabCountPopup) {\r\n                // Select the current tab\r\n                $(\".bz-wp-tabs-arrow-container\", self).first().addClass(\"show-pluss\");\r\n                tabHeader.addClass(\"show-pluss\");\r\n                activeTab.trigger(\"click\", { origin: \"popUp\" });\r\n            } else {\r\n                $(\".bz-wp-tabs-arrow-container\", self).removeClass(\"show-pluss\");\r\n                tabHeader.removeClass(\"show-pluss\");\r\n                tabHeader.find(\"> .bz-wp-tabs-ui:last\").addClass(\"bz-wp-no-border\");\r\n            }\r\n        }\r\n\r\n        // Reorder tabs\r\n        function reorderTabs(dataRef) {\r\n\r\n            var tempTabs = tabHeader.find(\".bz-wp-tabs-ui\");\r\n            var moveAtTheEnd = true;\r\n\r\n            tempTabs.each(function (i, item) {\r\n                if (dataRef !== item.getAttribute(\"data-reference-tab\") && moveAtTheEnd) {\r\n                    tabHeader.remove(\"[data-reference-tab='\" + dataRef + \"']\");\r\n                    tabHeader.append(item);\r\n                } else {\r\n                    moveAtTheEnd = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        // Change tabs\r\n        function changeTab(e, params) {\r\n\r\n            params = params || {};\r\n            params.origin = params.origin || \"header\";\r\n\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            if ($(this).hasClass(\"tabSelected\") && params.origin !== \"popUp\") {\r\n                return;\r\n            }\r\n\r\n            var dataRef = e.currentTarget.getAttribute(\"data-reference-tab\");\r\n            var tabChildren = $(dataRef, self);\r\n\r\n            activeTab = $(e.currentTarget);\r\n            // Changes the visibility of the contents of the tabs\r\n            self.find(\">div.childrenActive\").removeClass(\"childrenActive\");\r\n            tabChildren.addClass(\"childrenActive\");\r\n\r\n            // Add the normal width\r\n            tabHeader.find(\">div.tabSelected\").removeClass(\"tabSelected\").css(\"width\", widthRow + \"%\");\r\n\r\n            if (popUp.css(\"display\") === \"block\") {\r\n                popUp.toggle();\r\n            }\r\n\r\n            if (params.origin && params.origin === \"popUp\") {\r\n                activeTab = $(\"[data-reference-tab='\" + dataRef + \"']\", tabHeader);\r\n                reorderTabs(dataRef);\r\n            }\r\n\r\n            // Add the new width for tabSelected to complete the 100%\r\n            activeTab.addClass(\"tabSelected\").css(\"width\", widthTabSelected + \"%\");\r\n            activate(e, params);\r\n        }\r\n\r\n        if (typeof (params.domIncluded) !== \"undefined\") {\r\n            // Until the control is added to the DOM can be known widths to add the icon popup         \r\n            $.when(params.domIncluded).done(function () {\r\n                updateTabSize();\r\n            });\r\n        } else {\r\n            updateTabSize();\r\n        }\r\n\r\n        // Attach events\r\n        self.find(\".bz-wp-tabs-arrow-container\").first().bind(\"click\", function (event) {\r\n\r\n            // Determine if an item is visible or not\r\n            var headerWidth = (tabHeader.innerWidth() - 29);\r\n            var totalWidth = 0;\r\n\r\n            // Remove the visible elements\r\n            $(\".bz-container-items-tabs\", popUp).removeClass(\"show\");\r\n\r\n            tabHeader.find(\".bz-wp-tabs-ui\").each(function (i, item) {\r\n\r\n                totalWidth += $(\":first-child\", item).outerWidth();\r\n\r\n                // If \"true\" then it is a tab to display the popup\r\n                if (totalWidth > headerWidth) {\r\n\r\n                    popUp.children().each(function (j, pop) {\r\n                        if (pop.textContent === item.textContent) {\r\n                            $(pop).addClass(\"show\");\r\n                            $(\".cell.bz-container-items-tabs\").css(\"border-bottom\", \"\");\r\n                            $(\".cell.bz-container-items-tabs.show\").last().css(\"border-bottom\", \"none\");\r\n\r\n                            return;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            popUp.toggle();\r\n        });\r\n\r\n        $(\">div.cell\", popUp).bind(\"click\", function (e) {\r\n            changeTab(e, { origin: \"popUp\" });\r\n        });\r\n\r\n        $(\".bz-wp-tabs-ui\", tabHeader).bind(\"click\", changeTab);\r\n\r\n        tabHeader.bind(\"resizeHeader\", function () {\r\n            updateTabSize();\r\n        });\r\n    };\r\n})(jQuery);","/*\r\n*   Name: BizAgi Element Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a base class with common stuff related to all renders and containers\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.element\", {\r\n    ELEMENT_TYPE_CONTAINER: 1,\r\n    ELEMENT_TYPE_RENDER: 2,\r\n    ELEMENT_TYPE_COLUMN: 3\r\n}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Set render factory\r\n        this.renderFactory = params.renderFactory;\r\n\r\n        // Set data service\r\n        this.dataService = params.dataService;\r\n\r\n        // Set reference to parent\r\n        this.parent = params.parent;\r\n\r\n        // Set l10n service\r\n        this.resources = bizagi.localization;\r\n\r\n        // Set the observable element\r\n        this.observableElement = $(\"<div />\");\r\n\r\n        // Set the dispose flag\r\n        this.disposed = false;\r\n\r\n        // Update data\r\n        this.initializeData(params.data);\r\n\r\n        // Define an object to hold the subscribe collection\r\n        this.subscribers = [];\r\n    },\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Set the internal data\r\n        this.properties = {};\r\n        if (data && data.properties) this.properties = data.properties;\r\n\r\n        // Set xpath context\r\n        this.properties.xpathContext = this.getXpathContext();\r\n\r\n        // Set page cache\r\n        this.properties.idPageCache = this.getPageCache();\r\n    },\r\n\r\n    /*\r\n    *   Returns the xpath context of the element\r\n    */\r\n    getXpathContext: function () {\r\n        // By default return parent's xpath context\r\n        // This method is overriden in form container which contains the real xpath context\r\n\r\n        return (this.parent != undefined && typeof this.parent.getXpathContext == \"function\") ? this.parent.getXpathContext() : \"\";\r\n    },\r\n\r\n    /*\r\n    *   Returns the page cache for the current element\r\n    */\r\n    getPageCache: function () {\r\n        // By default return parent's page cache\r\n        // This method is overriden in form container which contains the real page cache\r\n\r\n        return (this.parent != undefined && typeof this.parent.getPageCache == \"function\") ? this.parent.getPageCache() : \"\";\r\n    },\r\n\r\n    /*\r\n    *   Returns the form containing the element\r\n    */\r\n    getFormContainer: function () {\r\n        // By default return parent's form container\r\n        // This method is overriden in form container which returns itself\r\n        if (typeof (this.parent) != \"undefined\")\r\n        return this.parent.getFormContainer();\r\n    },\r\n\r\n\r\n    /*\r\n    *   Returns the mapped resource\r\n    */\r\n    getResource: function (key) {\r\n        return this.resources.getResource(key);\r\n    },\r\n\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () { },\r\n\r\n    /* \r\n    *   Resizes the element \r\n    */\r\n    resize: function (size) {\r\n\r\n    },\r\n\r\n    /*\r\n    *   Focus on the current element\r\n    */\r\n    focus: function () {\r\n\r\n        if (this.properties.required) {\r\n            var layout = $(\"#ui-bizagi-wp-app-render-form-content\");\r\n            // Check if element is visible into scroll\r\n            if (!bizagi.util.isScrolledIntoView(this.element, layout)) {\r\n                $(this.element).attr('tabindex', -1).focus();\r\n            }\r\n            if (this.element) {\r\n                this.element.effect('highlight', 2000);\r\n            }\r\n        }\r\n\r\n        //Check if the element has parent\r\n        if (this.parent && typeof this.parent.focus == 'function') {\r\n            this.parent.focus();\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Publish a global event that the facade will replicate\r\n    */\r\n    triggerGlobalHandler: function (eventType, data) {\r\n        if (this.disposed) return null;\r\n        if (this.parent) return this.parent.triggerGlobalHandler(eventType, data);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Triggers an event inside the control\r\n    */\r\n    trigger: function (eventType, data) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.trigger(eventType, data);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Triggers an event handler inside the control\r\n    */\r\n    triggerHandler: function (eventType, data) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.triggerHandler(eventType, data);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Binds to an event\r\n    */\r\n    bind: function (eventType, fn) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.bind(eventType, fn);\r\n        this.subscribers.push({ event: eventType });\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Un-binds to an event\r\n    */\r\n    unbind: function (eventType, fn) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.unbind(eventType, fn);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Binds a one time event\r\n    */\r\n    one: function (eventType, fn) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.one(eventType, fn);\r\n        this.subscribers.push({ event: eventType });\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Return the rendered element\r\n    */\r\n    getRenderedElement: function () { },\r\n\r\n    /*\r\n    *   Get current rendering mode\r\n    */\r\n    getMode: function () {\r\n        if (this.parent) return this.parent.getMode();\r\n    },\r\n\r\n    /*\r\n    *   Get current rendering params\r\n    */\r\n    getParams: function () {\r\n        if (this.parent) return this.parent.getParams();\r\n    },\r\n\r\n    /*\r\n    * Get current form type (ex. queryform, form)\r\n    */\r\n    getFormType: function () {\r\n        var self = this;\r\n\r\n        var form = self.getFormContainer();\r\n        return form.properties.type || \"form\";\r\n    },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () { },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready to save\r\n    */\r\n    isReadyToSave: function () { },\r\n\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Dispose the class so we can detect when a class is invalid already\r\n    */\r\n    dispose: function () {\r\n        var self = this;\r\n        self.disposed = true;\r\n\r\n        setTimeout(function () {\r\n            if (self.subscribers != null) {\r\n                // Remove all subcriptions\r\n                $.each(self.subscribers, function (i, item) {\r\n                    self.unbind(item.event);\r\n                });\r\n            }\r\n            delete self.subscribers;\r\n\r\n            if (self.observableElement) self.observableElement.off();\r\n            bizagi.util.dispose(self);\r\n        }, bizagi.override.disposeTime || 50);\r\n    },\r\n\r\n    /*\r\n    *   Check if the current object is disposed\r\n    */\r\n    isDisposed: function () {\r\n        return this.disposed;\r\n    },\r\n\r\n    /*\r\n    *   This method process the error or alert messages coming from the server, and adds them to the validation controller\r\n    */\r\n    processFailMessage: function(message) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        if (message.errorType === \"CustomMessageException\") {\r\n            // Clear previous validations\r\n            form.validationController.clearValidationMessages();\r\n            var error = bizagi.localization.getResource(message.message);\r\n            form.validationController.showErrorMessage(error);\r\n        } else if (message.errorType === \"InvalidCaseStateException\") {\r\n            var params = form.getParams()\r\n\r\n            form.validationController.clearValidationMessages();\r\n           \r\n            // Redirection Here\r\n            form.container.trigger(\"routing\", { idCase: params.idCase || bizagi.context.idCase });\r\n        } else {\r\n            var message = message || {};\r\n            message = typeof (message) == \"string\" ? JSON.parse(message) : message;\r\n            var type = message.type || \"error\";\r\n            var code = message.code || \"code\";\r\n            message = message.responseText || (message.message || message);\r\n\r\n            // Omit processing when the ajax didn't process\r\n            if (type === \"not-processed\") return;\r\n            if (type === \"not-shown\") return;\r\n            if (isOfflineForm && code === \"AUTH_ERROR\") return;\r\n\r\n            // Clear previous validations\r\n            form.validationController.clearValidationMessages();\r\n            if (type == \"alert\") {\r\n                form.validationController.showAlertMessage(message);\r\n            } else {\r\n                form.validationController.showErrorMessage(message);\r\n            }\r\n        }\r\n\r\n        return message;\r\n    },\r\n\r\n    /*\r\n    *   Sets a waiting overlay above the current element\r\n    */\r\n    startLoading: function () {  /* Override in implementations */ },\r\n\r\n    /*\r\n    *   Removes the waiting overlay\r\n    */\r\n    endLoading: function () { /* Override in implementations */ },\r\n\r\n    /**\r\n    *   Prepare control to remove it from the render, that allows to\r\n    *   clean all elements of the control or to do any stuff before to remove\r\n    */\r\n    beforeToRefresh: function () { /* Implement in each render and container if you need */ },\r\n\r\n    /**\r\n    *   Run before that the control has been refreshed\r\n    */\r\n    afterToRefresh: function () { \r\n        /* Implement in each render and container if you need */ \r\n        var formContainer = this.getFormContainer();\r\n        formContainer.tryToExecuteFunction(this.properties.xpath || this.properties.id); \r\n    }\r\n});\r\n\r\n","/*\r\n *   Name: BizAgi Container Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define a base container class with common stuff related to all containers\r\n */\r\n\r\nbizagi.rendering.element.extend(\"bizagi.rendering.container\", {\r\n    TYPE_QUERY_FORM: \"queryForm\"\r\n}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Set defaults\r\n        var properties = self.properties;\r\n        properties.uniqueId = Math.ceil(Math.random() * 1000000);\r\n        properties.editable = (typeof properties.editable != \"undefined\") ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.visible = (typeof properties.visible != \"undefined\") ? bizagi.util.parseBoolean(properties.visible) : true;\r\n\r\n        // Override orientation from parent if not set\r\n        properties.orientation = properties.orientation || \"auto\";\r\n\r\n        // Save original properties\r\n        this.originalProperties = JSON.parse(JSON.encode(properties));\r\n\r\n        // Create children\r\n        this.children = [];\r\n        this.childrenHash = {};\r\n\r\n        if (data.elements) {\r\n            $.each(data.elements, function(i, element) {\r\n                if (element.render) {\r\n                    self.createRenderElement(element);\r\n                } else if (element.container) {\r\n                    self.createContainerElement(element);\r\n                } else if (element.form) {\r\n                    self.createFormElement(element);\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Creates a render element\r\n    */\r\n    createRenderElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var originalElement;\r\n\r\n        // Replicate editable property when container is not editable\r\n        if (properties.editable == false) {\r\n            element.render.properties.editable = properties.editable;\r\n            if (element.render.properties.type == \"grid\")\r\n                element.render.properties.inlineEdit = false;\r\n        }\r\n\r\n        // Replicate required property when container is not required\r\n        if (properties.required === false) {\r\n            element.render.properties.required = properties.required;\r\n        }\r\n\r\n        //clone originalElement to apply duplicate render properties correctly\r\n        if (element.render.properties.retype == \"duplicate\") {\r\n            originalElement = bizagi.clone(element);\r\n        }\r\n\r\n        var render = self.renderFactory.getRender({\r\n            type: element.render.properties.type,\r\n            data: element.render,\r\n            dataService: self.dataService,\r\n            parent: self,\r\n            mode: self.getMode()\r\n        });\r\n\r\n        // Add to children\r\n        self.children.push(render);\r\n\r\n        // Check for duplicate\r\n        if (element.render.properties.retype == \"duplicate\") {\r\n            self.processDuplicateRender(render, originalElement);\r\n        }\r\n\r\n        //TODO: at this point not posible add the retype double at this point not exist input\r\n\r\n        // Register in form container\r\n        self.getFormContainer().registerRender(render);\r\n    },\r\n    /*\r\n    *   Creates a container element\r\n    */\r\n    createContainerElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Replicate editable property when container is not editable\r\n        if (properties.editable == false) {\r\n            element.container.properties.editable = properties.editable;\r\n        }\r\n\r\n        // Replicate required property when container is not required\r\n        if (properties.required === false) {\r\n            element.container.properties.required = properties.required;\r\n        }\r\n\r\n        var container = self.renderFactory.getContainer({\r\n            type: element.container.properties.type,\r\n            data: element.container,\r\n            parent: self,\r\n            dataService: self.dataService,\r\n            mode: self.getMode(),\r\n            isDesign: self.getMode() === \"design\"\r\n        });\r\n\r\n        self.children.push(container);\r\n\r\n        // Register in form container\r\n        self.getFormContainer().registerRender(container);\r\n    },\r\n    /*\r\n    *   Creates a form element\r\n    */\r\n    createFormElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Replicate editable property when container is not editable\r\n        if (properties.editable == false) {\r\n            element.container.properties.editable = properties.editable;\r\n        }\r\n\r\n        var form = self.renderFactory.getContainer({\r\n            type: (element.form.properties.type || \"form\"),\r\n            data: element.form,\r\n            parent: self,\r\n            dataService: self.dataService,\r\n            mode: self.getMode()\r\n        });\r\n        self.children.push(form);\r\n    },\r\n    /* \r\n    *   Gets the current container \r\n    */\r\n    getElement: function () {\r\n        var self = this;\r\n        return self.container;\r\n    },\r\n    /* \r\n    *   Gets a collection for all elements matching a type \r\n    */\r\n    getElementsByType: function (type, elements) {\r\n        elements = elements || [];\r\n        var self = this;\r\n\r\n        // Iterate through elements\r\n        $.each(self.children, function (i, child) {\r\n            if (child.properties.type == type) {\r\n                elements.push(child);\r\n            }\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.getElementsByType(type, elements);\r\n            }\r\n        });\r\n\r\n        return elements;\r\n    },\r\n    /*\r\n    *   Process renders with duplicate property\r\n    */\r\n    processDuplicateRender: function (render, element) {\r\n        var self = this;\r\n        var clonedElement = JSON.parse(JSON.encode(element.render));\r\n\r\n        // Changes properties\r\n        clonedElement.properties.displayName = clonedElement.properties.displayName + \" \" + self.getResource(\"render-text-duplicate-label-sufix\");\r\n        clonedElement.properties.xpath = clonedElement.properties.xpath + \".clone\";\r\n        clonedElement.properties.isClone = true;\r\n\r\n        // Creates clone\r\n        var clone = self.renderFactory.getRender({\r\n            type: clonedElement.properties.type,\r\n            data: clonedElement,\r\n            parent: self,\r\n            mode: self.getMode()\r\n        });\r\n\r\n        // Associates with main render\r\n        render.cloneRender = clone;\r\n\r\n        // Add to collection\r\n        self.children.push(clone);\r\n    },\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () {\r\n        return bizagi.rendering.element.ELEMENT_TYPE_CONTAINER;\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    */\r\n    render: function () {\r\n        var self = this,\r\n            mode = self.getMode(),\r\n            result;\r\n\r\n        // Render container\r\n        result = self.internalRender();\r\n\r\n        // Apply container defaults\r\n        self.applyContainerDefaults();\r\n\r\n        // Add container id\r\n        result.attr(\"data-container-id\", self.properties.id);\r\n\r\n        //Add container tag property\r\n        if (self.properties.tag) {\r\n            result.attr(\"data-tag\", self.properties.tag);\r\n        }\r\n\r\n        //Add class to the requested form, to specify if is add form, edit form, or detail form\r\n        if (self.params)\r\n            if (self.params.requestedForm)\r\n                result.addClass(self.params.requestedForm);\r\n\r\n        return result;\r\n    },\r\n    /*\r\n    *   Internal  rendering\r\n    */\r\n    internalRender: function () {\r\n        var self = this;\r\n\r\n        // Render the container\r\n        var html = self.renderContainerHtml();\r\n\r\n        // Convert html string to jquery object\r\n        var container = self.container = $(html);\r\n\r\n        // Post-render\r\n        self.postRenderContainer(container);\r\n\r\n        return self.container;\r\n    },\r\n    /*\r\n    *   Renders container html\r\n    */\r\n    renderContainerHtml: function () {\r\n        var self = this;\r\n        // Start rendering deferred\r\n        self.renderingDeferred = self.renderingDeferred || new $.Deferred();\r\n\r\n        return this.renderContainer();\r\n    },\r\n    /*\r\n    *   Check if the jquery element is ready or not\r\n    */\r\n    isRendered: function () {\r\n        var self = this;\r\n        if (!self.renderingDeferred)\r\n            return false;\r\n        return self.renderingDeferred.promise();\r\n    },\r\n    /*\r\n    *   Return the rendered element\r\n    */\r\n    getRenderedElement: function () {\r\n        if (bizagi.util.isEmpty(this.container))\r\n            alert(\"container hasn't been rendered!\");\r\n\r\n        return this.container;\r\n    },\r\n    /* \r\n    *   Set container defaults\r\n    */\r\n    applyContainerDefaults: function () {\r\n        var self = this,\r\n                properties = self.properties;\r\n\r\n        // Set customizations\r\n        if (properties.backgroundColor)\r\n            self.changeBackgroundColor(properties.backgroundColor);\r\n\r\n        // Set editability and visiblity\r\n        if (!properties.visible)\r\n            self.changeVisibility(properties.visible);\r\n    },\r\n    /* \r\n    *  Changes background color \r\n    */\r\n    changeBackgroundColor: function (color) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        properties.backgroundColor = color;\r\n\r\n        // Iterate through elements\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.changeBackgroundColor(color);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                child.changeBackgroundColor(color);\r\n            }\r\n        });\r\n    },\r\n    /* \r\n    *   Hides / Show container \r\n    */\r\n    changeVisibility: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Store in properties\r\n        properties.visible = bizagi.util.parseBoolean(argument);\r\n\r\n        // Hide - show the render\r\n        if (properties.visible) {\r\n            self.container.show();\r\n\r\n        } else {\r\n            self.container.hide();\r\n        }\r\n    },\r\n    /* Changes editability */\r\n    changeEditability: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Store in properties\r\n        properties.editable = argument == \"Default\" ? self.originalProperties.editable: bizagi.util.parseBoolean(argument);\r\n\r\n        // Iterate through elements\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.changeEditability(argument);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                child.changeEditability(argument);\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Replaces a <x/> tag in the container for the specified \"replace\" element\r\n    */\r\n    replaceTag: function (container, tag, replace) {\r\n        bizagi.util.replaceSelector(container, tag, replace);\r\n    },\r\n    /*\r\n    *   Replaces a <children/> tag in the container for the specified \"replace\" element\r\n    */\r\n    replaceChildrenTag: function (container, replace) {\r\n        this.replaceTag(container, \".children\", replace);\r\n    },\r\n    /*\r\n    *   Replaces a {{children}} string in the specified element\r\n    */\r\n    replaceChildrenHtml: function (html, replace) {\r\n        return html.replaceFirstWithoutPatterns(\"{{children}}\", replace);\r\n    },\r\n    /*\r\n    *   Template method to render the container layout, returns a string with all the builded html,\r\n    *   must be overriden in all children\r\n    */\r\n    renderContainer: function () {\r\n    },\r\n    /*\r\n    *   Template method to process each jquery object\r\n    *   must be overriden in each container\r\n    */\r\n    postRenderContainer: function (container) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n\r\n        // Resolve rendering deferred\r\n        if (self.renderingDeferred)\r\n            self.renderingDeferred.resolve();\r\n\r\n        // Process children elements\r\n        self.container = container;\r\n        self.executeChildrenPostRender(container);\r\n\r\n        if (mode == \"execution\") {\r\n            // Apply handlers\r\n            self.configureHandlers();\r\n            self.applyPlaceHolderPolyfill();\r\n\r\n        }\r\n        if (mode == \"design\") {\r\n            // Configure view\r\n            self.configureDesignView();\r\n        }\r\n        if (mode == \"layout\") {\r\n            // Configure view\r\n            self.configureDesignView();\r\n            self.configureLayoutView();\r\n        }\r\n    },\r\n\r\n    applyPlaceHolderPolyfill: function () {\r\n        var self = this;\r\n        var config = window.placeHolderConfig || {};\r\n        if (('placeholder' in $('<input>')[0] || 'placeHolder' in $('<input>')[0]) && !config.forceApply) {\r\n            // don't run the polyfill when the browser has native support\r\n            return;\r\n        }\r\n        Placeholders.enable();\r\n    },\r\n    /*\r\n    *   Process container children\r\n    */\r\n    executeChildrenPostRender: function (container) {\r\n        var self = this;\r\n        var childrenElements = container.children();\r\n\r\n        $.each(childrenElements, function (i, childElement) {\r\n            childElement = $(childElement);\r\n            var id = Number(childElement.data(\"unique-id\"));\r\n            if (id) {\r\n                var child = self.childrenHash[id];\r\n                if (child) {\r\n                    var type = child.getElementType();\r\n                    if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER)\r\n                        child.postRenderElement(childElement);\r\n                    if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER)\r\n                        child.postRenderContainer(childElement);\r\n                }\r\n            } else {\r\n                self.executeChildrenPostRender(childElement);\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour when rendering in design mode\r\n    */\r\n    configureDesignView: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to show layout\r\n    */\r\n    configureLayoutView: function () {\r\n\r\n    },\r\n    /**\r\n    *   Renders all children html\r\n    */\r\n    renderChildrenHtml: function () {\r\n        var self = this;\r\n        var temp = \"\";\r\n\r\n        $.each(self.children, function (i, child) {\r\n            var type = child.getElementType();\r\n            if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER)\r\n                temp += child.renderElement();\r\n            if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER)\r\n                temp += child.renderContainerHtml();\r\n            self.childrenHash[child.properties.uniqueId] = child;\r\n        });\r\n\r\n        return temp;\r\n    },\r\n    /*\r\n    *   Iterate through all the renders in the container and fills the hashtable\r\n    */\r\n    collectRenderValues: function (renderValues) {\r\n        var self = this;\r\n        if (self.children) {\r\n            $.each(self.children, function (i, child) {\r\n                if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                    // Go though container\r\n                    child.collectRenderValues(renderValues);\r\n\r\n                } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                    // Check if the render can be sent to the server\r\n                    if (child.canBeSent()) {\r\n                        child.collectData(renderValues);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Iterate through all the renders and check if has changed\r\n    */\r\n    hasChanged: function (result) {\r\n        var self = this;\r\n        result = result || [];\r\n\r\n        if (!result.length) {\r\n            if(self.children){\r\n                $.each(self.children, function (i, child) {\r\n                    if (result.length || child.hasChanged(result)) {\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            return result;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *    Creates a json array parameters to search result\r\n    */\r\n    collectRenderValuesQueryForm: function (renderValues) {\r\n        var self = this;\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                // Go though container\r\n                child.collectRenderValuesQueryForm(renderValues);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                // Check if the render can be sent to the server\r\n                if (child.canBeSentQueryForm()) {\r\n                    child.collectDataQueryForm(renderValues);\r\n                }\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Gets the first child\r\n    */\r\n    firstChild: function () {\r\n        return this.children[0];\r\n    },\r\n    /*\r\n    *   Method to find all the renders matching an xpath inside the container\r\n    */\r\n    getRenders: function (xpath, renders) {\r\n        var self = this;\r\n\r\n        renders = renders || [];\r\n\r\n        // Remove [] filters for grid columns xpaths to fully identify the grid as the xpath target\r\n        if (xpath.indexOf(\"[\") > 0) {\r\n            xpath = xpath.substring(0, xpath.indexOf(\"[\"));\r\n        }\r\n\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                // Go though container\r\n                child.getRenders(xpath, renders);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                if (xpath == child.properties.xpath) {\r\n                    renders.push(child);\r\n                }\r\n            }\r\n        });\r\n\r\n        return renders;\r\n    },\r\n    /* \r\n    *   Gets the first editable render \r\n    */\r\n    getRender: function (xpath) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        var result = null;\r\n        $.each(renders, function (i, render) {\r\n            if (render.properties.editable) {\r\n                if (result == null)\r\n                    result = render;\r\n            }\r\n        });\r\n\r\n        // if no render has been found, skip editable condition\r\n        if (result == null) {\r\n            $.each(renders, function (i, render) {\r\n                result = render;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n     *   Gets all renders by xpath\r\n     */\r\n    getRendersByXpath: function (xpath) {\r\n        var self = this;\r\n        return self.getRenders(xpath);\r\n    },\r\n\r\n    /* \r\n    *   Gets a container by the id\r\n    */\r\n    getContainer: function (id) {\r\n        var self = this;\r\n\r\n        if (self.properties.id == id)\r\n            return this;\r\n\r\n        var result;\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                // Go though container\r\n                var o = child.getContainer(id);\r\n                if (o != null) {\r\n                    result = o;\r\n                    return false;\r\n                }\r\n            }\r\n        });\r\n\r\n        return result;\r\n    },\r\n    /* \r\n    *   Validate all renders in the container \r\n    */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n\r\n        if (self.children) {\r\n            $.each(self.children, function (i, child) {\r\n                if (child.properties.visible) {\r\n                    if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                        // Go though container\r\n                        child.isValid(invalidElements);\r\n                    } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                        // Go to the render\r\n                        child.isValid(invalidElements);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        return invalidElements.length == 0;\r\n    },\r\n\r\n    /*\r\n   *   Validate all grids in the container\r\n   */\r\n    hasValidGrids: function (invalidElements) {\r\n        var self = this;\r\n\r\n        $.each(self.children, function (i, child) {\r\n            if (child.properties.visible) {\r\n                if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                    // Go though container\r\n                    child.hasValidGrids(invalidElements);\r\n\r\n                } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER && typeof (child.grid) != \"undefined\") {\r\n                    // Go to the render\r\n                    child.isValid(invalidElements);\r\n                }\r\n            }\r\n        });\r\n\r\n        return invalidElements.length == 0;\r\n    },\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n        return $.when(self.parent.ready(), self.isRendered());\r\n    },\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready to save\r\n    */\r\n    isReadyToSave: function () {\r\n        var self = this;\r\n        var childrenPromises = $.map(self.children, function (child) {\r\n            return child.isReadyToSave();\r\n        });\r\n        return $.when.apply($, childrenPromises);\r\n    },\r\n    /*  \r\n    *   Return the current focuses container\r\n    */\r\n    getFocus: function () {\r\n        var self = this;\r\n        var focus;\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                var result = child.getFocus();\r\n                if (!bizagi.util.isEmpty(result)) {\r\n                    focus = result;\r\n                }\r\n            }\r\n        });\r\n\r\n        return focus;\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n\r\n        if (form) {\r\n            return form.getCustomHandlers();\r\n        }\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandler: function (key) {\r\n        var self = this;\r\n        var customHandlers = self.getCustomHandlers();\r\n\r\n        if (customHandlers) {\r\n            return customHandlers[key];\r\n        }\r\n    },\r\n    /*\r\n    *   Dispose the class so we can detect when a class is invalid already\r\n    */\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        // Iterate through elements\r\n        setTimeout(function () {\r\n            if (self.children) {\r\n                $.each(self.children, function (i, child) {\r\n                    child.dispose();\r\n                });\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    },\r\n\r\n    /*\r\n    *   Refresh the current container\r\n    */\r\n    refreshContainer: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n\r\n        // Start waiting\r\n        self.startLoading();\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh();\r\n\r\n        // Call the service\r\n        return $.when(self.dataService.multiaction().refreshControl({\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: (properties.xpathContext || args.xpathContext),\r\n            contexttype: self.properties.contexttype || \"\",\r\n            idForm: (form && form.properties && form.properties.id) ? form.properties.id : \"\" //To fix BA56877.\r\n        })).done(function (data) {\r\n\r\n            if (!self.isDisposed()) {\r\n\r\n                // Unregister children of container to replace in hash self.rendersById and self.rendersByXpath\r\n                self.unregisterChildren();\r\n                delete self.children;\r\n                delete self.childrenHash;\r\n\r\n                self.getFormContainer().removeActions();\r\n\r\n                // update editable\r\n                if (self.properties.editable === false) {\r\n                    data.container && data.container.properties ? (data.container.properties.editable = false) : \"\";\r\n                }\r\n\r\n                // Update the data\r\n                self.initializeData(data.container);\r\n\r\n                // Render the container again\r\n                var currentContainer = self.container;\r\n                var result = self.render();\r\n\r\n                if (self.properties.type == \"tabItem\") {\r\n                    $(result).addClass(\"childrenActive\");\r\n                }\r\n\r\n                currentContainer.replaceWith(result);\r\n\r\n                // Rebind the actions\r\n                var actions = data.container && data.container.actions ? data.container.actions : [];\r\n                self.getFormContainer().refreshActions(actions);\r\n\r\n                self.triggerChildrenActions();\r\n\r\n                // Execute personalized stuff after to refresh it\r\n                self.afterToRefresh();\r\n\r\n            }\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n\r\n        }).always(function () {\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Refresh the current container\r\n     */\r\n    refreshDesignContainer: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh(data);\r\n        //self.setActiveTab(data.elements);\r\n\r\n        $.extend(data.properties, {\r\n            editable: properties.editable,\r\n            contexttype: (properties.contexttype || \"\"),\r\n            idPageCache: properties.idPageCache,\r\n            idRender: properties.id,\r\n            messageValidation: properties.messageValidation,\r\n            uniqueId: properties.uniqueId,\r\n            visible:properties.visible,\r\n            xpath: properties.xpath,\r\n            mode: \"design\",\r\n            xpathContext: properties.xpathContext || \"\"\r\n        });\r\n\r\n\r\n        if (!self.isDisposed()) {\r\n            // Unregister children of container to replace in hash self.rendersById and self.rendersByXpath\r\n            self.unregisterChildren();\r\n            delete self.children;\r\n            delete self.childrenHash;\r\n\r\n            // update editable\r\n            if (self.properties.editable === false) {\r\n                data.container && data.container.properties ? (data.container.properties.editable = false) : \"\";\r\n            }\r\n\r\n            // Update the data\r\n            self.initializeData(data.container);\r\n\r\n            // Render the container again\r\n            var currentContainer = self.container;\r\n            var result = self.render();\r\n\r\n            if (self.properties.type == \"tabItem\") {\r\n                $(result).addClass(\"childrenActive\");\r\n            }\r\n\r\n            currentContainer && currentContainer.replaceWith(result);\r\n\r\n            // Execute personalized stuff after to refresh it\r\n            self.afterToRefresh();\r\n        }\r\n    },\r\n\r\n    beforeToRefresh: function () {\r\n        var self = this;\r\n\r\n        // Call beforeToRefresh of each children\r\n        for (var i = 0; i < self.children.length; i++) {\r\n            self.children[i].beforeToRefresh();\r\n        }\r\n    },\r\n\r\n    afterToRefresh: function () {\r\n        var self = this;\r\n\r\n        var formContainer = self.getFormContainer();\r\n        formContainer.tryToExecuteFunction(self.properties.id);\r\n\r\n        // Call beforeToRefresh of each children\r\n        for (var i = 0; i < self.children.length; i++) {\r\n            self.children[i].afterToRefresh();\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Re-execute children actions\r\n    */\r\n    triggerChildrenActions: function () {\r\n        var self = this;\r\n\r\n        var form = self.getFormContainer();\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n            var type = child.getElementType();\r\n\r\n            if (type === bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.triggerChildrenActions();\r\n            }\r\n            else if (type === bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                child.triggerRenderChange({ changed: false });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /*\r\n    * register actions container\r\n    */\r\n    registerActions: function (actions) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n\r\n        if (actions) {\r\n            form.actionController.buildActions(actions);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * unregister children container\r\n    */\r\n    unregisterChildren: function () {\r\n        var self = this;\r\n\r\n        var form = self.getFormContainer();\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n            var type = child.getElementType();\r\n\r\n            if (type === bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.unregisterChildren();\r\n            }\r\n            else if (type === bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                form.unregisterRender(child);\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * Replace child\r\n    */\r\n    replaceChild: function (element) {\r\n        var self = this;\r\n\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n\r\n            if (child.properties.uniqueId == element.properties.uniqueId) {\r\n                children.splice(i, 1);\r\n                children.splice(i, 0, element);\r\n                break;\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * Gets child\r\n    */\r\n    getChildById: function (id) {\r\n\r\n        var self = this;\r\n\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n\r\n            if (child.properties.id == id) {\r\n                return child;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: Bizagi Render Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a base render class with common stuff related to all renders\r\n */\r\n\r\nbizagi.rendering.element.extend(\"bizagi.rendering.render\", {\r\n    postRenderTimeout: 0,\r\n    maxRendersPerScreen: 50,\r\n    rendersExecuted: 0,\r\n    renderOptimization: false,\r\n    TYPE_QUERY_FORM: \"queryForm\",\r\n    startOptimization: function () {\r\n        bizagi.rendering.render.postRenderTimeout = 500;\r\n        bizagi.rendering.render.rendersExecuted = 0;\r\n        // Cancelled optimization temporally, because its on experimental stage\r\n        bizagi.rendering.render.renderOptimization = false;\r\n    },\r\n    stopOptimization: function () {\r\n        bizagi.rendering.render.postRenderTimeout = 0;\r\n        bizagi.rendering.render.rendersExecuted = 0;\r\n        bizagi.rendering.render.renderOptimization = false;\r\n    }\r\n}, {\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        var form = self.getFormContainer();\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n\r\n        properties.included = (typeof properties.included != \"undefined\") ? bizagi.util.parseBoolean(properties.included) : false;\r\n        properties.uniqueId = Math.ceil(Math.random() * 1000000);\r\n        properties.displayName = properties.displayName || \"\";\r\n        properties.editable = (typeof properties.editable != \"undefined\") ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.visible = (typeof properties.visible != \"undefined\") ? bizagi.util.parseBoolean(properties.visible) : true;\r\n        properties.includedInResult = (typeof properties.includedInResult != \"undefined\") ? bizagi.util.parseBoolean(properties.includedInResult) : false;\r\n\r\n        var renderType = bizagi.util.normalizeType(properties.type);\r\n        if (/^hidden$/i.test(renderType)) {\r\n            properties.visible = false;\r\n        }\r\n\r\n        properties.required = (typeof properties.required != \"undefined\") ? bizagi.util.parseBoolean(properties.required) : false;\r\n        properties.submitOnChange = (typeof properties.submitOnChange != \"undefined\") ? bizagi.util.parseBoolean(properties.submitOnChange) : false;\r\n        properties.maxLength = properties.maxLength || 0;\r\n        properties.helpText = bizagi.util.trim(properties.helpText) || \"\";\r\n        properties.textFormat = properties.textFormat || {};\r\n        properties.valueFormat = properties.valueFormat || {};\r\n        properties.isHidden = (typeof properties.isHidden != \"undefined\") ? bizagi.util.parseBoolean(properties.isHidden) : false;\r\n        properties.visible = (properties.isHidden) ? false : properties.visible;\r\n        //BUG 26867 -    Verify if the control was editable in sometime. Apply only in the column grid (canBeSent). \r\n        //Change the value property on changeEditability, changeEditabilityCellControl\r\n        properties.editabilityEnabled = false;\r\n\r\n        // Old color and background color\r\n        if (properties.color) {\r\n            properties.textFormat.color = properties.color;\r\n        }\r\n\r\n        if (properties.backgroundColor) {\r\n            properties.textFormat.backgroundColor = properties.backgroundColor;\r\n        }\r\n\r\n        // Non-editable fields cannot be required\r\n        properties.required = properties.editable ? properties.required : false;\r\n\r\n        // Override orientation from parent if not set\r\n        properties.orientation = properties.orientation || \"auto\";\r\n\r\n        // Check contexttype\r\n        properties.contexttype = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : \"\";\r\n\r\n        // Save original properties\r\n        self.originalProperties = {\r\n            textFormat: {\r\n                color: properties.textFormat.color,\r\n                backgroundColor: properties.textFormat.backgroundColor\r\n            },\r\n            valueFormat: {\r\n                color: properties.textFormat.color,\r\n                backgroundColor: properties.textFormat.backgroundColor\r\n            },\r\n            visible: properties.visible,\r\n            editable: properties.editable,\r\n            required: properties.required,\r\n            labelAlign: properties.labelAlign,\r\n            valueAlign: properties.valueAlign\r\n        };\r\n\r\n        // Create value property\r\n        self.value = typeof (properties.value) !== \"undefined\" ? properties.value : null;\r\n\r\n        // Register original value property\r\n        self.properties.originalValue = self.value;\r\n        self.properties.previousValue = self.value;\r\n\r\n        // Calculate layout properties\r\n        self.calculateInitialLayoutProperties();\r\n    },\r\n    /*\r\n    *   Calculate aligns, display types, rtl and widths\r\n    */\r\n    calculateInitialLayoutProperties: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set visual defaults\r\n        properties.displayType = properties.displayType || \"normal\";\r\n        properties.labelAlign = properties.labelAlign || self.getDefaultLabelAlign(properties.displayType);\r\n        properties.valueAlign = properties.valueAlign || self.getDefaultValueAlign(properties.displayType);\r\n\r\n        // Check rtl orientation\r\n        if (properties.orientation === \"rtl\") {\r\n            properties.labelAlign = self.getRTLAlign(properties.labelAlign);\r\n            properties.valueAlign = self.getRTLAlign(properties.valueAlign);\r\n        }\r\n\r\n        // Calculate render with\r\n        var renderWidth = self.calculateRenderWidth(properties.labelWidth, properties.valueWidth, properties.displayType);\r\n        properties.labelWidth = renderWidth.label;\r\n        properties.valueWidth = renderWidth.control;\r\n\r\n        if (properties.layoutType === \"percentage\") {\r\n            properties.valueWidth = renderWidth.control;\r\n        }\r\n\r\n        if (properties.labelWidth == 0) {\r\n            properties.displayType = \"value\";\r\n            properties.valueWidth = renderWidth.control;\r\n        }\r\n\r\n        if (properties.valueWidth == 0) {\r\n            properties.displayType = \"label\";\r\n        }\r\n\r\n        if (properties.type === \"userfield\") {\r\n            if (properties.displayType === \"both\") {\r\n                properties.valueWidth = properties.valueWidth || 50;\r\n                properties.labelWidth = properties.labelWidth || 50;\r\n            } else if (properties.displayType === \"vertical\") {\r\n                properties.valueWidth = 100;\r\n                properties.labelWidth = 100;\r\n            } else {\r\n                properties.valueWidth = 100;\r\n                properties.labelWidth = 0;\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () {\r\n        return bizagi.rendering.element.ELEMENT_TYPE_RENDER;\r\n    },\r\n    /*\r\n    *   Returns the html templated element\r\n    */\r\n    render: function (renderTemplateName) {\r\n        return this.renderElement(renderTemplateName);\r\n    },\r\n    /*\r\n    *   Returns the html templated element\r\n    */\r\n    renderElement: function (renderTemplateName) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        // Start rendering deferred\r\n        self.renderingDeferred = new $.Deferred();\r\n\r\n        // Set render template\r\n        renderTemplateName = renderTemplateName || \"render\";\r\n        var renderTemplate = self.renderFactory.getTemplate(renderTemplateName);\r\n\r\n        // Resolve render label\r\n        var label = properties.displayName;\r\n        if (typeof label == \"string\") {\r\n            label = label.replaceAll(\"&\", \"&amp;\");\r\n            label = label.replaceAll(\"$\", \"&#36;\");\r\n            label = label.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\r\n            label = label.replaceAll(\"\\\"\", \"&#34;\").replaceAll(\"'\", \"&#39;\").replaceAll(\"/\", \"&#47;\");\r\n            label = label.replaceAll(\"\\\\n\", \"<br/>\");\r\n            label = label.replaceAll(\"\\n\", \"<br/>\");\r\n        }\r\n\r\n        var isFullRender = bizagi.util.detectDevice() !== \"desktop\" && (properties.type === \"association\" || properties.type === \"uploadecm\" || ((properties.type === \"actionLauncher\" || properties.type === \"polymorphicLauncher\") && bizagi.util.isTabletDevice()) || (properties.type === \"grid\" && !bizagi.util.isTabletDevice()));\r\n        var labelWidth = parseFloat(properties.labelWidth);\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(renderTemplate, {\r\n            label: label, helpText: properties.helpText,\r\n            editable: properties.editable,\r\n            isExtendedText: (properties.type == \"text\" && properties.isExtended),\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            tag: properties.tag,\r\n            displayType: properties.displayType,\r\n            displayOptionClass: self.getDisplayOptionClass(properties.displayType),\r\n            labelAlignClass: self.getAlignClass(properties.labelAlign),\r\n            valueAlignClass: self.getAlignClass(properties.valueAlign),\r\n            labelWidth: labelWidth,\r\n            stringLabelWidth: labelWidth + (properties.layoutType == 'pixels' ? 'px' : '%'),\r\n            valueWidth: parseFloat(properties.valueWidth),\r\n            stringValueWidth: parseFloat(properties.valueWidth) + (properties.layoutType == 'pixels' ? 'px' : '%'),\r\n            layoutType: properties.layoutType,\r\n            isDesign: self.getMode() === \"design\",\r\n            messageValidation: properties.messageValidation,\r\n            printVersion: form.params.printversion,\r\n            cssClass: properties.cssclass || \"\",\r\n            includedInResult: properties.includedInResult,\r\n            included: properties.included,\r\n            type: properties.type,\r\n            showFullRender: isFullRender,\r\n            required: properties.required,\r\n            helpText: properties.helpText\r\n        });\r\n\r\n        // Render internal control html\r\n        var result = self.internalRenderControl();\r\n        if (!result) {\r\n            result = \"\";\r\n        }\r\n\r\n        // Check if this is an async element or not\r\n        var async = typeof (result) === \"object\" && result.done;\r\n        if (!async) {\r\n            html = self.replaceControlHtml(html, result);\r\n\r\n        } else {\r\n            if (result.state() === \"resolved\") {\r\n                // Fetch resolved result\r\n                html = self.replaceControlHtml(html, self.resolveResult(result));\r\n                self.asyncRenderDeferred = null;\r\n            } else {\r\n                // Wait for result\r\n                self.asyncRenderDeferred = result;\r\n                html = self.replaceControlHtml(html, \"\");\r\n            }\r\n        }\r\n\r\n        return html;\r\n    },\r\n    /*\r\n    *   Returns the resolved result from a promise when the promise has been executed already\r\n    */\r\n    resolveResult: function (promise) {\r\n        return bizagi.resolveResult(promise);\r\n    },\r\n    /*\r\n    *   Check if the jquery element is ready or not\r\n    */\r\n    isRendered: function () {\r\n        var self = this;\r\n        if (!self.renderingDeferred) {\r\n            return false;\r\n        }\r\n        return self.renderingDeferred.promise();\r\n    },\r\n    /*\r\n    *   Renders the control html\r\n    */\r\n    internalRenderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        self.control = null;\r\n\r\n        if (self.renderFactory.printVersion) {\r\n            properties.editable = false;\r\n            return self.renderControl();\r\n        } else if (properties.editable) {\r\n            return self.renderControl();\r\n        }\r\n\r\n        return self.renderReadOnly();\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    postRenderElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set element variable\r\n        self.element = element;\r\n\r\n        if (properties.submitOnChange)\r\n            self.configureSubmitOnChange();\r\n\r\n        // Process internal layout\r\n        isLabelFormat = true;\r\n\r\n        var executePostRender = function (_element) {\r\n            if (bizagi.rendering.render.renderOptimization &&\r\n                bizagi.rendering.render.rendersExecuted > bizagi.rendering.render.maxRendersPerScreen) {\r\n\r\n                // Execute post-render control\r\n                setTimeout(function () {\r\n                    self.internalPostRender(_element);\r\n                    bizagi.rendering.render.postRenderTimeout += 50;\r\n                }, bizagi.rendering.render.postRenderTimeout);\r\n\r\n            } else {\r\n                self.internalPostRender(_element);\r\n            }\r\n            bizagi.rendering.render.rendersExecuted++;\r\n        };\r\n\r\n        if (self.asyncRenderDeferred) {\r\n            // Wait for async result\r\n            $.when(self.asyncRenderDeferred)\r\n                .done(function (html) {\r\n                    var control = self.getControl();\r\n                    if (typeof self.emptyControlByAsyncRenderDeferred == \"function\") {\r\n                        self.emptyControlByAsyncRenderDeferred();\r\n                    }\r\n                    control.append(html);\r\n\r\n                    // Execute post-render control\r\n                    executePostRender(element);\r\n                    self.processLayout(!isLabelFormat, self.properties.valueFormat || {});\r\n                });\r\n        } else {\r\n            // Execute post-render control\r\n            executePostRender(element);\r\n        }\r\n    },\r\n    /*\r\n    *   Executes the post render handlers\r\n    */\r\n    internalPostRender: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n\r\n        self.control = self.getControl();\r\n\r\n        // Resolve rendering deferred\r\n        if (self.renderingDeferred) {\r\n            self.renderingDeferred.resolve();\r\n        }\r\n\r\n        // Execute post-renders\r\n        if (properties.editable) {\r\n            // Post-render editable version\r\n            if (self.renderFactory.printVersion && self.postRenderPrintVersion) {\r\n                self.postRenderPrintVersion();\r\n            } else {\r\n                self.postRender();\r\n            }\r\n\r\n        } else {\r\n            // Post-render readonly version\r\n            self.postRenderReadOnly(element);\r\n        }\r\n\r\n        // Perform execution mode methods\r\n        if (mode == \"execution\") {\r\n            self.performExecutionModeMethods();\r\n        } else {\r\n            self.performDesignModeMethods();\r\n        }\r\n\r\n        self.processLayout(isLabelFormat, self.properties.textFormat || {});\r\n        self.processLayout(!isLabelFormat, self.properties.valueFormat || {});\r\n    },\r\n    /*\r\n    *   Execute runtime only methods\r\n    */\r\n    performExecutionModeMethods: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (self.getFormType() == self.Class.TYPE_QUERY_FORM) {\r\n            self.configureHandlersQueryForm();\r\n        }\r\n\r\n        // Apply handlers\r\n        if (properties.editable) {\r\n            self.configureHandlers();\r\n        } else {\r\n            self.configureHandlersReadOnly();\r\n        }\r\n\r\n        // Set initial value\r\n        self.internalSetInitialValue();\r\n    },\r\n    /**\r\n     * Execute design only methods\r\n     */\r\n    performDesignModeMethods: function () {\r\n        var self = this;\r\n\r\n        // Execute custom code for each render\r\n        self.configureDesignView();\r\n\r\n        // Set initial value\r\n        self.internalSetInitialValue();\r\n    },\r\n    /*\r\n    *   Replaces a {{control}} string in the specified element\r\n    */\r\n    replaceControlHtml: function (html, replace) {\r\n        html = html || \"\";\r\n        replace = replace || \"\";\r\n        return html.replaceFirstWithoutPatterns(\"{{control}}\", replace);\r\n    },\r\n    /*\r\n    *   Return the rendered element\r\n    */\r\n    getRenderedElement: function () {\r\n        if (bizagi.util.isEmpty(this.element)) {\r\n            bizagi.log(\" render hasn't been rendered!\", this, \"error\");\r\n        }\r\n\r\n        return this.element;\r\n    },\r\n    /*\r\n    *   Sets the initial value for the renders\r\n    */\r\n    internalSetInitialValue: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        self.internalSetInitialValueFlag = true;\r\n\r\n        // Set the initial value\r\n        if (properties.editable) {\r\n            if (!bizagi.util.isEmpty(self.value)) {\r\n                self.setDisplayValue(self.value);\r\n            }\r\n        } else {\r\n            if (!bizagi.util.isEmpty(self.value)) {\r\n                self.setDisplayValue(self.value);\r\n            }\r\n        }\r\n        self.internalSetInitialValueFlag = false;\r\n    },\r\n    /*\r\n    * Public method to determine if a value is valid or not\r\n    */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n        var inlineAdd = self.grid && self.grid.properties && self.grid.properties.inlineAdd;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) === false) {\r\n            return true;\r\n        }\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) === false && !inlineAdd) {\r\n            return true;\r\n        }\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (bizagi.util.parseBoolean(properties.required)) {\r\n            var form = self.getFormContainer();\r\n            var hasValue = false;\r\n            var renders = self.grid ? [self] : form.getRenders(properties.xpath);\r\n            var isQueryForm = /^query/i.test(properties.type);\r\n\t               \r\n            renders.filter(function (render) {\r\n                return render.properties.id == properties.id;\r\n            }).forEach(function (render) {\r\n                if (render.hasValue() && (render.properties.editable || inlineAdd)) {\r\n                    hasValue = true;\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            if (!hasValue && !self.properties.isClone) {\r\n                message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                var messageData = {xpath: properties.xpath, message: message};\r\n\r\n                if (isQueryForm) {\r\n                    messageData = $.extend({}, messageData, {\r\n                        id: properties.id,\r\n                        isQuery: isQueryForm\r\n                    });\r\n                }\r\n\r\n                invalidElements.push(messageData);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // Check retypes\r\n        if (properties.retype == \"duplicate\") {\r\n            // Don't process cloned renders, just originals\r\n            if (self.cloneRender) {\r\n                if (self.cloneRender.getValue() != self.getValue()) {\r\n                    message = self.getResource(\"render-text-retype-error\");\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    return false;\r\n                }\r\n            }\r\n        } else if (properties.retype == \"double\") {\r\n            var control = $(\"input\", self.element);\r\n\r\n            //Waits until the control has the second value written\r\n            if (control && control.data(\"oldValue\")) {\r\n                if (control.val() === \"\") {\r\n\r\n                    message = self.getResource(\"render-text-retype-error\");\r\n                    invalidElements.push({\r\n                        xpath: properties.xpath,\r\n                        message: message\r\n                    });\r\n\r\n                    return false;\r\n                } else if (control.val() != control.data(\"oldValue\")) {\r\n                    message = self.getResource(\"render-text-retype-error\");\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Check maxlength\r\n        var columnEditable = self.grid && self.grid.getColumn ? self.grid.getColumn(self.properties.xpath).properties.editable : true;\r\n        if (properties.type !== \"userPassword\" && properties.maxLength !== undefined && properties.maxLength > 0 && bizagi.util.isNumeric(properties.maxLength)) {\r\n            if (columnEditable || (!columnEditable && self.controlValueIsChanged())) {\r\n                var maxLength = new Number(properties.maxLength);\r\n                var value = self.getValue();\r\n\r\n                if (value && value.toString().length > maxLength) {\r\n                    message = self.getResource(\"render-text-maxLength-error\").replaceAll(\"#maxLength#\", maxLength);\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Check if a render has no value for required validation\r\n    */\r\n    hasValue: function () {\r\n        var self = this;\r\n        // Next line decides if only spaces are accepted as valid texts or not. Anyway the spaces are still saved as self.value has not changed\r\n        var value = self.getValue();\r\n\r\n        if (value && self.properties.type === \"text\") {\r\n            value = typeof (value) === \"string\" ? value.trim() : value;\r\n        }\r\n\r\n        return !bizagi.util.isEmpty(value);\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    postRender: function () {       \r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed in read-only mode\r\n    */\r\n    postRenderReadOnly: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers when the control is readonly\r\n    */\r\n    configureHandlersReadOnly: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour when rendering in design mode\r\n    */\r\n    configureDesignView: function () {\r\n    },\r\n    /*\r\n    *   Method to process the render the layout\r\n    */\r\n    processLayout: function (isLabelFormat, format) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (self.getControl() == null) return;\r\n\r\n        // Set customizations\r\n        format = format || {};\r\n\r\n        if (format.color) {\r\n            self.changeColor(format.color, isLabelFormat);\r\n        }\r\n        if (format.background) {\r\n            self.changeBackgroundColor(format.background);\r\n        }\r\n        //if bold is true in modeler, we receive nothing in execution (!formal.bold)\r\n        if (format.bold || !format.bold || !isLabelFormat) {\r\n            self.changeFontBold(format.bold, isLabelFormat);\r\n        }\r\n        if (format.italic) {\r\n            self.changeFontItalic(format.italic, isLabelFormat);\r\n        }\r\n        if (format.underline) {\r\n            self.changeFontUnderline(format.underline, isLabelFormat);\r\n        }\r\n        if (format.strikethru) {\r\n            self.changeFontStrikethru(format.strikethru, isLabelFormat);\r\n        }\r\n        if (format.size) {\r\n            self.changeFontSize(format.size, isLabelFormat);\r\n        }\r\n\r\n        // Set required and visiblity\r\n        properties.required = properties.required != undefined ? bizagi.util.parseBoolean(properties.required) : false;\r\n        var visible = properties.visible != undefined ? bizagi.util.parseBoolean(properties.visible) : true;\r\n        if (properties.required) {\r\n            self.changeRequired(properties.required);\r\n        }\r\n        if (!visible) {\r\n            if (self.grid) {\r\n                self.changeCellVisibility(visible);\r\n            } else {\r\n                self.changeVisibility(visible);\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        triggerEvents = triggerEvents !== undefined ? triggerEvents : true;\r\n\r\n        if (!(bizagi.util.identicalObjects(value, self.value))) {\r\n            // set previous value\r\n            self.properties.previousValue = self.properties.originalValue = self.value;\r\n\r\n            // Change internal value\r\n            self.value = self.properties.value = value;\r\n            if (self.properties.required && self.getMode() == \"execution\") {\r\n\r\n                if (self.checkRequired([])) {\r\n                    self.changeRequiredLabel(false);\r\n                } else {\r\n                    self.changeRequiredLabel(true);\r\n                }\r\n            }\r\n\r\n            // Trigger events\r\n            if (triggerEvents && !self.internalSetInitialValueFlag) {\r\n                self.triggerRenderChange();\r\n                self.triggerRenderValidate();\r\n            }\r\n        }\r\n    },\r\n\r\n    checkRequired: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (bizagi.util.parseBoolean(properties.required)) {\r\n            if (!self.hasValue()) {\r\n                message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                invalidElements.push({\r\n                    xpath: properties.xpath,\r\n                    message: message\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n\r\n    validateInputRetype: function () {\r\n        var self = this;\r\n        if (self.properties.retype && self.cloneRender) {\r\n            return self.getValue() == self.cloneRender.getValue();\r\n        }\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Triggers the render change event\r\n    */\r\n    triggerRenderChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        params.changed = params.changed !== undefined ? params.changed : true;\r\n        self.triggerHandler(\"renderchange\", {render: self, changed: params.changed});\r\n    },\r\n    /*\r\n    *   Triggers the render validate event\r\n    */\r\n    triggerRenderValidate: function () {\r\n        var self = this;\r\n        self.triggerHandler(\"rendervalidate\", {render: self});\r\n    },\r\n    /*\r\n    *   Sets the value in the rendered control\r\n    */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n\r\n        if (!self.properties.editable && (self.properties.display !== \"check\" || (self.properties.display === \"check\" && bizagi.override.enableCheck === true))) {\r\n            // Render as simple value\r\n            var displayValue = self.getDisplayValue(value);\r\n            if (typeof (displayValue) == \"string\" || typeof (displayValue) == \"number\") {\r\n                displayValue = bizagi.util.sanitizeHTML(displayValue);\r\n                $(control).html(\"<label class='readonly-control'>\" + displayValue + \"</label>\");\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *   Returns the internal value\r\n    */\r\n    getValue: function () {\r\n        return this.value;\r\n    },\r\n    /*\r\n    *   Returns the value to display, ex. non-editable renders\r\n    */\r\n    getDisplayValue: function () {\r\n        return this.getValue();\r\n    },\r\n    /*\r\n    *   Template method to get the label element\r\n    */\r\n    getLabel: function () {\r\n        bizagi.util.mustImplement(\"getLabel\");\r\n    },\r\n    /*\r\n    *   Template method to get the control element\r\n    */\r\n    getControl: function () {\r\n        bizagi.util.mustImplement(\"getControl\");\r\n    },\r\n    /*\r\n    *   Template method to get the control filler element\r\n    */\r\n    getControlFiller: function () {\r\n        bizagi.util.mustImplement(\"getControlFiller\");\r\n    },\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n    },\r\n    /*\r\n    *   Adds a validation message to the render\r\n    */\r\n    setValidationMessage: function (message) {\r\n        this.validationMessage = message;\r\n    },\r\n    /*\r\n    *   Method to render non editable values\r\n    */\r\n    renderReadOnly: function () {\r\n        var result = this.getValue();\r\n        var readOnlyValue = \"\";\r\n\r\n        if (bizagi.util.isObject(result) && typeof (result.value) !== \"undefined\") {\r\n            readOnlyValue = bizagi.util.sanitizeHTML(result.value);\r\n        } else if (!bizagi.util.isEmpty(result)) {\r\n            if (bizagi.util.isString(result)) {\r\n                readOnlyValue = bizagi.util.decodedDisplayValue(result);\r\n            } else {\r\n                readOnlyValue = result;\r\n            }\r\n        }\r\n\r\n        return readOnlyValue;\r\n    },\r\n\r\n    /*\r\n    *  Method to render print version\r\n    */\r\n    postRenderPrintVersion: function () {\r\n    },\r\n\r\n    /*\r\n    *   Customizes render display type with custom css classes\r\n    */\r\n    changeDisplayOption: function (displayType) {\r\n        this.properties.displayType = displayType;\r\n    },\r\n\r\n    /*\r\n    *   Return the right display option class\r\n    */\r\n    getDisplayOptionClass: function (displayType) {\r\n        return \"\";\r\n    },\r\n\r\n    /*\r\n    *   Customizes render label align\r\n    */\r\n    changeLabelAlign: function (alignType) {\r\n        this.properties.labelAlign = alignType;\r\n    },\r\n\r\n    /*\r\n    *   Customizes render value align\r\n    */\r\n    changeValueAlign: function (alignType) {\r\n        this.properties.valueAlign = alignType;\r\n    },\r\n\r\n    /*\r\n    *   Return the right align class\r\n    */\r\n    getAlignClass: function (alignType) {\r\n        return \"\";\r\n    },\r\n\r\n    /*\r\n    *   Customizes render label and value width\r\n    */\r\n    customizeRenderWidth: function () {\r\n    },\r\n\r\n    /* Customizes render color*/\r\n    changeColor: function (color, isLabelFormat) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var label = self.getLabel();\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        if (control && label) {\r\n            if (color != 'none') {\r\n                // Hide - show the render\r\n                if (self.properties.displayType === \"value\" || !isLabelFormat) {\r\n                    self.getElementsToStylize(self.getControl()).css(\"color\", color, \"!important\");\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"color\", color, \"!important\");\r\n                    });\r\n                } else {\r\n                    self.element.each(function () {\r\n                        this.style.setProperty('color', color, 'important');\r\n                    });\r\n\r\n                    if (self.properties.type == \"grid\") {\r\n                        self.getControl().find(\".bz-mobile-grid__header-title\").each(function () {\r\n                            this.style.setProperty('color', color, 'important');\r\n                        });\r\n                    }\r\n\r\n                    self.getLabel().find(\"label\").css(\"color\", color, \"!important\");\r\n                    if (self.properties.editable === false) {\r\n                        self.getElementsToStylize(self.getControl()).css(\"color\", color, \"!important\");\r\n                        self.getElementsToStylize($(\"label\", self.getControl()).css(\"color\", color, \"!important\"));\r\n                    }\r\n                }\r\n            } else {\r\n                self.element.css(\"color\", \"\");\r\n                self.getLabel().find(\"label\").css(\"color\", \"\");\r\n                self.getControl().css(\"color\", \"\");\r\n\r\n                self.getControl().find(\"input, textarea\").each(function (i, element) {\r\n                    var originalColor = $(element).data(\"originalColor\") || \"\";\r\n                    self.getElementsToStylize(element).css(\"color\", originalColor);\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes render background color*/\r\n    changeBackgroundColor: function (color) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var label = self.getLabel();\r\n\r\n        if (control && label) {\r\n            if (color != 'none') {\r\n                self.element.each(function () {\r\n                    this.style.setProperty('background-color', color, 'important');\r\n                });\r\n\r\n                if (typeof (label.find('label').style) !== \"undefined\") {\r\n                    self.getLabel().find(\"label\").style(\"background-color\", color, \"important\");\r\n                } else {\r\n                    self.getLabel().find(\"label\").css(\"background-color\", color, \"!important\");\r\n                }\r\n\r\n                var currentStyle = self.getLabel().attr(\"style\");\r\n                currentStyle += \"; background-color:\" + color + \"!important\";\r\n                self.getLabel().attr(\"style\", currentStyle);\r\n            } else {\r\n                self.element.css(\"background-color\", \"\");\r\n                self.getLabel().find(\"label\").css(\"background-color\", \"\");\r\n                self.getControl().css(\"background-color\", \"\");\r\n                self.getControl().find(\"input, textarea\").each(function (i, element) {\r\n                    var originalColor = $(element).data(\"originalColor\") || \"\";\r\n                    $(element).css(\"background-color\", originalColor);\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Returns the formatting label to be used for bold, italic, underline, strikethrough and size*/\r\n    getFormattingLabel: function () {\r\n        var self = this;\r\n        return self.getLabel().find(\"label\");\r\n    },\r\n\r\n    /* Customizes the font weight */\r\n    changeFontBold: function (bold, isLabelFormat) {\r\n        var self = this;\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(bold) != false && isLabelFormat) {\r\n            self.getFormattingLabel().css(\"font-weight\", \"bold\", \"!important\");\r\n            self.getControl().each(function (i, element) {\r\n                $(element).css(\"font-weight\", \"bold\", \"!important\");\r\n            });\r\n\r\n        } else {\r\n            if (isLabelFormat)\r\n                self.getFormattingLabel().css(\"font-weight\", \"normal\", \"!important\");\r\n        }\r\n        if (!isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(bold) == true) {\r\n                self.getControl().find(\"*\").each(function (i, element) {\r\n                    $(element).css(\"font-weight\", \"bold\", \"!important\");\r\n                });\r\n            } else {\r\n                self.getControl().find(\"*\").each(function (i, element) {\r\n                    $(element).css(\"font-weight\", \"normal\", \"!important\");\r\n                });\r\n                self.getControl().css(\"font-weight\", \"normal\", \"!important\");\r\n            }\r\n        }\r\n    },\r\n\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var value = self.getValue();\r\n        var compareValue = properties.originalValue;\r\n        var baseValue = properties.defaultValue;\r\n        var result = true;\r\n        var renderType = bizagi.util.normalizeType(properties.type);\r\n\r\n        // Flag to force to collect data\r\n        if ($.forceCollectData) {\r\n            return true;\r\n        }\r\n\r\n        // Verify if control has been ready\r\n        if (renderType === \"grid\" && self.ready().state() === \"pending\") {\r\n            return false;\r\n        }\r\n\r\n        if ([\"combo\", \"queryCombo\", \"list\", \"queryList\",\"radio\", \"queryRadio\"].includes(renderType) || /^cascadingcombo$/i.test(renderType)) {\r\n            if (value && value.length !== undefined) {\r\n                value = value[0];\r\n            }\r\n            if (compareValue && compareValue.length !== undefined) {\r\n                compareValue = compareValue[0];\r\n            }\r\n            if (baseValue && baseValue.length !== undefined) {\r\n                baseValue = baseValue[0];\r\n            }\r\n            value = value && value.id ? value.id : value;\r\n            compareValue = compareValue && compareValue.id ? compareValue.id : compareValue;\r\n            baseValue = baseValue && baseValue.id ? baseValue.id : baseValue;\r\n            if (typeof baseValue != \"undefined\" && baseValue != null) {\r\n                result = (compareValue == value) && (compareValue != baseValue) ? false : true;\r\n            } else {\r\n                result = (compareValue == value) ? false : true;\r\n            }\r\n        } else if (renderType === \"boolean\" || renderType === \"queryBoolean\" || renderType === \"queryCheck\") {\r\n            result = (bizagi.util.parseBoolean(compareValue) == bizagi.util.parseBoolean(value)) ? false : true;\r\n        } else if (renderType === \"searchNumber\") {\r\n            result = !!(value);\r\n        } else if (renderType === \"number\") {\r\n            if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue === value) ? false : true;\r\n            }\r\n        } else if (renderType === \"text\") {\r\n            if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue === value) ? false : true;\r\n            }\r\n        } else if (renderType === \"date\") {\r\n            if (!compareValue && !value) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue == value) ? false : true;\r\n            }\r\n        } else if (renderType === \"actionLauncher\") {\r\n            //Object must be an array\r\n            result = false;\r\n            var compareValueObj = [];\r\n            try {\r\n                if (typeof compareValue === \"string\") {\r\n                    compareValueObj = JSON.parse(compareValue);\r\n                } else {\r\n                    compareValueObj = compareValue;\r\n                }\r\n            } catch (e) {\r\n            }\r\n\r\n            var _findAction = function (guid, targetObj) {\r\n                guid = guid || \"\";\r\n                targetObj = targetObj || [];\r\n                var result = false;\r\n                for (var i = 0, l = targetObj.length; i < l; i++) {\r\n                    if (targetObj[i].guidAction == guid) {\r\n                        result = true;\r\n                        break;\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n\r\n            if (compareValueObj.length == value.length) {\r\n                for (var i = 0, l = compareValueObj.length; i < l; i++) {\r\n                    if (!_findAction(compareValueObj[i].guidAction, value)) {\r\n                        result = true;\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                result = true;\r\n            }\r\n        } else if (renderType === \"polymorphicLauncher\" || renderType === \"entityTemplate\") {\r\n            //Object must be an array\r\n            if (compareValue.length != value.length) {\r\n                result = true;\r\n            } else {\r\n                result = (JSON.encode(value) == JSON.encode(compareValue)) ? false : true;\r\n            }\r\n        } else if (renderType === \"image\") {\r\n            if (compareValue == null && value.indexOf(true) < 0) {\r\n                result = false;\r\n            } else {\r\n                result = true;\r\n            }\r\n        } else if (renderType === \"searchList\") {\r\n            var objectValue = {};\r\n            try {\r\n                objectValue = JSON.parse(value);\r\n            } catch (e) {\r\n                console.log(\"Error when detect change value on searchList control\")\r\n            }\r\n            result = (JSON.encode(compareValue) == JSON.encode(objectValue.value)) ? false : true;\r\n        } else {\r\n            result = (compareValue === value) ? false : true;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /* Customizes the font italic style */\r\n    changeFontItalic: function (italic, isLabelFormat) {\r\n        var self = this;\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(italic) == true) {\r\n                if (isLabelFormat)\r\n                    self.getFormattingLabel().css(\"font-style\", \"italic\", \"!important\");\r\n\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"font-style\", \"italic\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"font-style\", \"italic\", \"!important\");\r\n                }\r\n            } else {\r\n                if (isLabelFormat)\r\n                    self.getFormattingLabel().css(\"font-style\", \"normal\", \"!important\");\r\n\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"font-style\", \"normal\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"font-style\", \"normal\", \"!important\");\r\n                }\r\n            }\r\n        } else {\r\n            if (bizagi.util.parseBoolean(italic) == true) {\r\n                self.getFormattingLabel().css(\"font-style\", \"italic\", \"!important\");\r\n            } else {\r\n                self.getFormattingLabel().css(\"font-style\", \"normal\", \"!important\");\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes the font underline */\r\n    changeFontUnderline: function (underline, isLabelFormat) {\r\n        var self = this;\r\n        var textFormat = self.properties.textFormat || {};\r\n        var valueFormat = self.properties.valueFormat || {};\r\n        var strikethru = bizagi.util.parseBoolean(textFormat.strikethru) ? \"line-through \" : \"\";\r\n        var valuestrikethru = bizagi.util.parseBoolean(valueFormat.strikethru) ? \"line-through \" : \"\";\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(underline) == true && isLabelFormat) {\r\n            self.getFormattingLabel().css(\"text-decoration\", strikethru + \"underline\", \"!important\");\r\n            self.getControl().each(function (i, element) {\r\n                self.getElementsToStylize(element).css(\"text-decoration\", strikethru + \"underline\");\r\n            });\r\n        } else {\r\n            if (isLabelFormat)\r\n                self.getFormattingLabel().css(\"text-decoration\", strikethru, \"!important\");\r\n        }\r\n        if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(underline) == true) {\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"text-decoration\", valuestrikethru + \"underline\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"text-decoration\", valuestrikethru + \"underline\", \"!important\");\r\n                }\r\n            } else {\r\n                self.getControl().find(\"*\").each(function (i, element) {\r\n                    self.getElementsToStylize(element).css(\"text-decoration\", valuestrikethru, \"!important\");\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes the font Strikethrough property */\r\n    changeFontStrikethru: function (strikethru, isLabelFormat) {\r\n        var self = this;\r\n        var textFormat = self.properties.textFormat || {};\r\n        var valueFormat = self.properties.valueFormat || {};\r\n        var underline = bizagi.util.parseBoolean(textFormat.underline) ? \"underline \" : \"\";\r\n        var valueunderline = bizagi.util.parseBoolean(valueFormat.underline) ? \"underline \" : \"\";\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(strikethru) == true && isLabelFormat) {\r\n            self.getFormattingLabel().css(\"text-decoration\", underline + \"line-through\", \"!important\");\r\n        } else {\r\n            if (isLabelFormat)\r\n                self.getFormattingLabel().css(\"text-decoration\", underline, \"!important\");\r\n        }\r\n\r\n        if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(strikethru) == true) {\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"text-decoration\", valueunderline + \"line-through\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"text-decoration\", valueunderline + \"line-through\", \"!important\");\r\n                }\r\n            } else {\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"text-decoration\", valueunderline, \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"text-decoration\", valueunderline, \"!important\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes the font size property */\r\n    changeFontSize: function (size, isLabelFormat) {\r\n        var self = this;\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (size != \"0\") {\r\n            var label = self.getFormattingLabel();\r\n            var newFontSize = (100 + Number(size) * 10) + \"%\";\r\n            if (isLabelFormat) {\r\n                label.css(\"font-size\", newFontSize, \"!important\");\r\n            }\r\n            if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n                var control = self.getControl();\r\n                if (typeof control.children() == \"object\" && control.children().length > 0) {\r\n                    self.getElementsToStylize(control.children()).css(\"font-size\", newFontSize, \"!important\");\r\n                } else {\r\n                    self.getElementsToStylize(control).css(\"font-size\", newFontSize, \"!important\");\r\n                    // Next line applies to Cascading combo and combo in order to increase the control space with large value fonts\r\n                    if (self.properties.type.indexOf(\"ombo\") != -1 && size > 4) (\".ui-selectmenu\", control).children(0).height(2 * size + 20);\r\n                }\r\n\r\n                self.getElementsToStylize(control.find(\".ui-bizagi-render-date\")).css(\"line-height\", \"normal\");\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * in mobiles, don't apply styles to icon's elements\r\n     */\r\n    getElementsToStylize: function (context) {\r\n        return $(context);\r\n    },\r\n\r\n    /* Changes the render visibility*/\r\n    changeVisibility: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(argument) == true) {\r\n            if (properties.type !== \"hidden\") {\r\n                self.element.show();\r\n                self.element.css(\"display\", \"\");\r\n\r\n                if (properties.required) {\r\n                    if (!self.hasValue()) {\r\n                        self.changeRequiredLabel(true);\r\n                    }\r\n                }\r\n            }\r\n        } else if (self.element) {\r\n            self.element.hide();\r\n        }\r\n\r\n        // Update properties\r\n        properties.visible = argument;\r\n    },\r\n    /* Changes the render editability*/\r\n    changeEditability: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        // Renders again\r\n        properties.editable = argument == \"Default\" ? self.originalProperties.editable: bizagi.util.parseBoolean(argument);\r\n        properties.editabilityEnabled = properties.editabilityEnabled || properties.editable; \r\n\r\n        // Clears control\r\n        control.empty();\r\n\r\n        if (typeof self.internalRenderControl == \"function\") {\r\n            $.when(self.internalRenderControl()).done(function (html) {\r\n                if (typeof self.emptyControlByChangeEditability == \"function\")\r\n                    self.emptyControlByChangeEditability();\r\n                if (!self.asyncRenderDeferred)\r\n                    control.append(html);\r\n                self.postRenderElement(self.element);\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    * change cell editability and attach bindings\r\n    */\r\n    changeEditabilityCellControl: function (argument, key, xpath) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        var renderColumn = self.grid.getColumn(xpath);\r\n        var decorated = renderColumn.getDecorated(key);\r\n\r\n        // Renders again\r\n        properties.editable = argument == \"Default\" ? self.originalProperties.editable: bizagi.util.parseBoolean(argument);\r\n        properties.editabilityEnabled = properties.editabilityEnabled || properties.editable; \r\n\r\n        // Clears control\r\n        control.empty();\r\n        if (typeof self.internalRenderControl == \"function\") {\r\n            $.when(self.internalRenderControl()).done(function (html) {\r\n                if (!self.asyncRenderDeferred) {\r\n                    control.append(html);\r\n                }\r\n\r\n                self.postRenderElement(self.element);\r\n\r\n                if (properties.editable) {\r\n\r\n                    renderColumn.bind(\"rendered\", function () {\r\n                        renderColumn.readyDeferred.resolve();\r\n                    });\r\n\r\n                    decorated.unbind(\"renderchange\");\r\n\r\n                    // If the render changes set the flag on\r\n                    decorated.bind(\"renderchange\", function (render, args) {\r\n                        renderColumn.changed = true;\r\n                        self.grid.onCellChange(renderColumn, null, key, args);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    changeRequired: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var label = properties.displayName || \"\";\r\n        var labelElement = $(\"label\", self.getLabel());\r\n        var controlElement = self.getControl();\r\n\r\n        // Update properties\r\n        properties.required = argument;\r\n\r\n        // Changes label\r\n        if (self.getMode() == \"execution\" && self.checkRequired([])) {\r\n            self.changeRequiredLabel(false);\r\n        } else if (bizagi.util.parseBoolean(argument) == true && properties.editable) {\r\n            if (self.properties.orientation == \"rtl\") {\r\n                controlElement.prepend('<div class=\"ui-bizagi-render-control-required-rtl\"></div>');\r\n            } else {\r\n                controlElement.addClass('control-required');\r\n                controlElement.prepend('<div class=\"ui-bizagi-render-control-required\"></div>');\r\n            }\r\n        } else {\r\n            // if element has required label and through action change it, remove element.\r\n            if (self.properties.orientation == \"rtl\") {\r\n                $(\".ui-bizagi-render-control-required-rtl\", controlElement).remove();\r\n            } else {\r\n                controlElement.removeClass('control-required');\r\n                $(\".ui-bizagi-render-control-required\", controlElement).remove();\r\n            }\r\n        }\r\n\r\n        // Set text, HTML is more suitable for the content\r\n        labelElement.html(label);\r\n\r\n        // Perform validations again to check if the form is valid after this change\r\n        self.triggerRenderValidate();\r\n    },\r\n    /**\r\n     * This method just make a toggle of red label indicator\r\n     * Does't change internal value of control, if you need it\r\n     * please use changeRequired method\r\n     *\r\n     * @argument {boolean} argument\r\n     */\r\n    changeRequiredLabel: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var label = properties.displayName || \"\";\r\n        var labelElement = $(\"label\", self.getLabel());\r\n        var controlElement = self.getControl();\r\n\r\n        // Changes label\r\n        if (bizagi.util.parseBoolean(argument) == true && properties.editable) {\r\n            if (self.properties.orientation == \"rtl\") {\r\n                controlElement.prepend('<div class=\"ui-bizagi-render-control-required-rtl\"></div>');\r\n            } else {\r\n                controlElement.addClass('control-required');\r\n                controlElement.append('<div class=\"ui-bizagi-render-control-required\"></div>');\r\n            }\r\n        } else {\r\n            // if element has required label and through action change it, remove element.\r\n            if (self.properties.orientation == \"rtl\") {\r\n                $(\".ui-bizagi-render-control-required-rtl\", controlElement).remove();\r\n            } else {\r\n                controlElement.removeClass('control-required');\r\n                $(\".ui-bizagi-render-control-required\", controlElement).remove();\r\n            }\r\n        }\r\n\r\n        // Set text, HTML is more suitable for the content\r\n        labelElement.html(label);\r\n\r\n        // Perform validations again to check if the form is valid after this change\r\n        self.triggerRenderValidate();\r\n    },\r\n    /*\r\n    *   Refresh the control with a new data\r\n    */\r\n    refreshControl: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var originalValue = self.value;\r\n        var form = self.getFormContainer();\r\n        var idForm = form.properties.id || \"\";\r\n\r\n        args = args || {};\r\n\r\n        // Start waiting\r\n        self.startLoading();\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh();\r\n\r\n        // Call the ajax service\r\n        return $.when(self.dataService.multiaction().refreshControl({\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: (properties.xpathContext || args.xpathContext),\r\n            idForm: idForm\r\n        })).pipe(function (data) {\r\n            // Clear variables\r\n            self.control = self.controlFiller = self.label = null;\r\n\r\n            // Update properties data\r\n            var currentElement = self.element;\r\n            self.initializeData(data.render);\r\n\r\n            // Render the control again\r\n            return $.when(self.render()).pipe(function (html) {\r\n                var result = $(html);\r\n                //Dont remove unused rendered var\r\n                var rendered = self.postRenderElement(result);\r\n                self.properties.originalValue = self.value;\r\n                return result;\r\n            }).pipe(function (result) {\r\n                // When the content has been post-renderized, replace it\r\n                currentElement.replaceWith(result);\r\n\r\n                // Prevent multiple refresh on grid\r\n                if (!self.grid) {\r\n                    self.triggerRenderChange({changed: false});\r\n                }\r\n\r\n                // Execute personalized stuff before to refresh it\r\n                self.afterToRefresh();\r\n            });\r\n\r\n        }).fail(function (message) {\r\n            var message = self.processFailMessage(message);\r\n\r\n        }).always(function () {\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Refresh the control with a new data\r\n     */\r\n    refreshDesignControl: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh();\r\n\r\n        // Clear variables\r\n        self.control = self.controlFiller = self.label = null;\r\n\r\n        $.extend(data.render.properties, {\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: (properties.xpathContext || \"form\"),\r\n            idPageCache: properties.idPageCache\r\n        });\r\n\r\n        // Update properties data\r\n        var currentElement = self.element;\r\n        self.initializeData(data.render);\r\n\r\n        // Render the control again\r\n        return $.when(self.render()).pipe(function (html) {\r\n            var result = $(html);\r\n            //Dont remove unused rendered var\r\n            var rendered = self.postRenderElement(result);\r\n            self.properties.originalValue = self.value;\r\n            return result;\r\n        }).pipe(function (result) {\r\n            // When the content has been post-renderized, replace it\r\n            currentElement.replaceWith(result);\r\n            self.triggerRenderChange();\r\n\r\n            // Execute personalized stuff before to refresh it\r\n            self.beforeToRefresh();\r\n        });\r\n    },\r\n\r\n    /*\r\n    * Cleans current value\r\n    */\r\n    cleanData: function () {\r\n        var self = this;\r\n\r\n        self.setValue(\"\");\r\n        self.clearDisplayValue();\r\n    },\r\n\r\n    /*\r\n     *   Sets the value in the rendered control\r\n     */\r\n    clearDisplayValue: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var input = control.find(\"input\");\r\n\r\n        if (input.length > 0) {\r\n            input.val(self.getValue());\r\n        } else if (self.properties.editable === false) {\r\n            $(control).html(\"<label class='readonly-control'></label>\");\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Updates original value for some comparisons\r\n    */\r\n    updateOriginalValue: function () {\r\n        var self = this;\r\n        self.properties.originalValue = self.value;\r\n    },\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            if (!bizagi.util.isEmpty(xpath)) {\r\n                if (!bizagi.util.isEmpty(value)) {\r\n                    renderValues[properties.xpath] = value;\r\n                } else if (value === \"\" || value === null) {\r\n                    renderValues[properties.xpath] = \"\";\r\n                }\r\n            }\r\n        }\r\n\r\n        //Validate if the input has a retype configured and check that both values matches, otherwise delete the original value\r\n        if (!self.validateInputRetype()) {\r\n            renderValues[properties.xpath] = \"\";\r\n        }\r\n    },\r\n\r\n    hasChanged: function (result) {\r\n        var self = this;\r\n        if (self.controlValueIsChanged()) {\r\n            result.push(true);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *  Configure aditional Handlers for queryForm type\r\n    */\r\n    configureHandlersQueryForm: function () {\r\n        var self = this;\r\n        var checkIncluded = self.element.find(\".ui-bizagi-render-control-included\");\r\n        checkIncluded.change(function () {\r\n            self.properties.included = $(this).is(\":checked\");\r\n        });\r\n    },\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectDataQueryForm: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n        var queryValue = null;\r\n        if (!bizagi.util.isEmpty(xpath)) {\r\n            if (value !== null && typeof (value) !== \"undefined\") {\r\n                var isObject = typeof (value.id) !== \"undefined\";\r\n                if (isObject) {\r\n                    queryValue = (!bizagi.util.isEmpty(value.id)) ? [value] : null;\r\n                } else {\r\n                    queryValue = (value !== \"\") ? value : null;\r\n                }\r\n            }\r\n            if (queryValue !== null || properties.included) {\r\n\r\n                if (!(properties.display == \"check\" && properties.value == false)) {\r\n\r\n                    var searchType = self.properties.typeSearch || self.properties.rangeQuery || \"NONE\";\r\n                    searchType = searchType.toUpperCase();\r\n                    var newParameter = {\r\n                        \"value\": queryValue,\r\n                        \"included\": self.properties.included,\r\n                        \"xpath\": properties.xpath,\r\n                        \"searchType\": searchType,\r\n                        \"orderType\": \"NONE\"\r\n                    };\r\n                    if (typeof properties.displayXpath !== \"undefined\" && properties.displayXpath !== \"\") {\r\n                        //newParameter.displayXpath= properties.xpath+\".\"+properties.displayXpath;\r\n                        newParameter.displayXpath = properties.displayXpath;\r\n                    }\r\n                    renderValues.push(newParameter);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *  Method to determine if the render value can be sent to the server or not\r\n    */\r\n    canBeSent: function () {\r\n        var self = this, force;\r\n        var properties = self.properties;\r\n        var displayOnly = bizagi.util.parseBoolean(properties.displayOnly) || false;\r\n        var editable = properties.editable;\r\n\r\n        // The render can be sent if it is editable and is not \"display only\"\r\n        if (!displayOnly && editable) {\r\n            return true;\r\n        }\r\n\r\n        // Don't send the clones\r\n        if (properties.isClone) {\r\n            return false;\r\n        }\r\n\r\n        if (properties.xpath) {\r\n            var form = self.getFormContainer();\r\n            if (form.getRenders(properties.xpath).length == 1) {\r\n                force = $.forceCollectData ? $.forceCollectData.toString() : false;\r\n                $.forceCollectData = force ? undefined : $.forceCollectData;\r\n                if (self.controlValueIsChanged()) {\r\n                    $.forceCollectData = force ? bizagi.util.parseBoolean(force) : $.forceCollectData;\r\n                    return true;\r\n                }\r\n                $.forceCollectData = force ? bizagi.util.parseBoolean(force) : $.forceCollectData;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n    /*\r\n    *  Method to determine if the render value can be sent to search\r\n    */\r\n    canBeSentQueryForm: function () {\r\n        var self = this, force;\r\n        var properties = self.properties;\r\n        // Don't send the clones\r\n        if (properties.isClone) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    /*\r\n    *   Focus on the current element\r\n    */\r\n    focus: function (time) {\r\n        var self = this;\r\n\r\n        // Focus is only allowed when the render is visible\r\n        if (!self.properties.visible) return;\r\n\r\n        // Call base\r\n        this._super();\r\n        var layout = $(\"#ui-bizagi-wp-app-render-form-content\");\r\n\r\n        // Configures effect\r\n        var effect = function () {\r\n            var control = self.getControl();\r\n            var defaultControl = (self.properties.type != \"grid\") ? $(\"input, select, option, textarea\", control) : $(\"input, select, option, textarea\", control).first();\r\n            if (defaultControl.length > 0) {\r\n\r\n                // Focus control\r\n                $.each(defaultControl, function (i) {\r\n                    var innerControl = defaultControl[i];\r\n                    if ($(innerControl).attr(\"type\") != \"hidden\" && $(innerControl).css(\"display\") != \"none\" && $(innerControl).css(\"visibility\") != \"hidden\") {\r\n\r\n                        try {\r\n                            if (!bizagi.util.isIE()) {\r\n                                bizagi.util.autoScrollBottom(layout);\r\n                            }\r\n                            innerControl.focus();\r\n                        } catch (e) {\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        // Wait until the render is ready to apply the focus effect\r\n        $.when(self.ready())\r\n            .done(function () {\r\n                // Run effect\r\n                if (time > 0) {\r\n                    setTimeout(effect, time);\r\n                } else {\r\n                    effect();\r\n                }\r\n            });\r\n    },\r\n\r\n    /*\r\n    *   Resolves default align for each display type\r\n    */\r\n    getDefaultLabelAlign: function (displayType) {\r\n        return \"default\";\r\n    },\r\n\r\n    /*\r\n    *   Resolves default value align for each display type\r\n    */\r\n    getDefaultValueAlign: function (displayType) {\r\n        return \"default\";\r\n    },\r\n    /*\r\n    *   Transform the align type when using RTL orientation\r\n    */\r\n    getRTLAlign: function (align) {\r\n        /* if (align === \"default\"){ \r\n            return \"right\";\r\n        } */\r\n        return align;\r\n    },\r\n\r\n    /*\r\n    *   Enables submit on change feature for the current render\r\n    */\r\n    configureSubmitOnChange: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = \"\";\r\n\r\n        if (!properties.editable) return;\r\n\r\n        // Build action\r\n        properties.dependencies = properties.dependencies || 'all';\r\n\r\n        if (properties.xpath) {\r\n            if (properties.submitOnChangexpathContext) {\r\n                xpath = properties.submitOnChangexpathContext + \".\" + properties.xpath;\r\n            } else {\r\n                xpath = properties.xpath;\r\n            }\r\n        } else {\r\n            if (properties.submitOnChangexpathContext) {\r\n                xpath = properties.submitOnChangexpathContext + \".\" + properties.id;\r\n            } else {\r\n                xpath = properties.id;\r\n            }\r\n        }\r\n\r\n        var action = {\r\n            \"conditions\": {\r\n                \"expressions\": [\r\n                    {\r\n                        \"simple\": {\r\n                            \"xpath\": xpath,\r\n                            \"operator\": \"changes\",\r\n                            \"argumentType\": \"const\"\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            \"commands\": [\r\n                {\r\n                    \"xpath\": xpath,\r\n                    \"command\": 'submit-value',\r\n                    \"argument\": properties.dependencies\r\n                }\r\n            ],\r\n            \"dependencies\": [xpath],\r\n            \"elseCommands\": []\r\n        };\r\n\r\n        // Add action when form ends its rendering\r\n        $.when(self.ready()).done(function () {\r\n            var form = self.getFormContainer();\r\n            form.addSubmitAction(xpath, action);\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Sends all the info to the server then refreshes the form\r\n    *   Returns a deferred\r\n    */\r\n    submitOnChange: function (data, bRefreshForm, notCollect) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n\r\n        // Add context parameter\r\n        if (self.properties.contexttype != \"\" && data) {\r\n            data[self.dataService.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = self.properties.contexttype;\r\n        }\r\n\r\n        $.when(self.isReadyToSave()).done(function () {\r\n            self.internalSubmitOnChange(data, bRefreshForm, notCollect).done(function () {\r\n                defer.resolve();\r\n            }).fail(function () {\r\n                defer.reject();\r\n            });\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    getCacheIdCase: function () {\r\n        var self = this;\r\n        var idCase = self.getParams().idCase;\r\n\r\n        if (bizagi.cache === undefined) {\r\n            bizagi.cache = {};\r\n            bizagi.cache.idCaseObject = {\r\n                idCase: idCase !== undefined ? idCase : (bizagi.cache.idCase !== undefined ? bizagi.cache.idCase : undefined)\r\n            };\r\n        } else {\r\n            if (idCase !== undefined && bizagi.cache.idCaseObject !== undefined) {\r\n                bizagi.cache.idCaseObject.idCase = idCase;\r\n            } else {\r\n                if (idCase !== undefined && bizagi.cache.idCaseObject === undefined) {\r\n                    bizagi.cache.idCaseObject = {};\r\n                    bizagi.cache.idCaseObject.idCase = idCase;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (idCase === undefined) {\r\n            if (bizagi.cache.idCaseObject === undefined) {\r\n                idCase = undefined;\r\n            } else {\r\n                idCase = bizagi.cache.idCaseObject.idCase;\r\n            }\r\n        } else {\r\n            idCase = idCase;\r\n        }\r\n\r\n        return idCase;\r\n    },\r\n    /*\r\n    *   Internal method\r\n    *   Sends all the info to the server then refreshes the form\r\n    *   Returns a deferred\r\n    */\r\n    internalSubmitOnChange: function (data, bRefreshForm, notCollect) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n        var parameters = {\r\n            data: data,\r\n            bRefreshForm: bRefreshForm,\r\n            notCollect: notCollect,\r\n            properties: {\r\n                idCase: self.getCacheIdCase(),\r\n                id: properties.id,\r\n                xpath: properties.xpath,\r\n                idPageCache: properties.idPageCache,\r\n                contexttype: properties.contexttype\r\n            }\r\n        }\r\n\r\n        return form.internalSubmitOnChange(parameters);\r\n    },\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n        return $.when(self.parent.ready(), self.isRendered());\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n\r\n        if (form) {\r\n            return form.getCustomHandlers();\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandler: function (key) {\r\n        var self = this;\r\n        var customHandlers = self.getCustomHandlers();\r\n\r\n        if (customHandlers) {\r\n            return customHandlers[key];\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n    *   Calculates render label and value width\r\n    */\r\n    calculateRenderWidth: function (labelWidth, valueWidth, displayType) {\r\n        var self = this;\r\n        // Read values\r\n        // If the label width or the value width are 0, the BAS means that no value is used, so we need to adjust them to 50%\r\n        if (valueWidth == \"100\" && typeof labelWidth === \"undefined\") {\r\n            labelWidth = \"0\";\r\n        } else {\r\n            labelWidth = labelWidth ? (labelWidth != \"0\" ? labelWidth : \"50\") : \"50%\";\r\n        }\r\n        valueWidth = valueWidth ? (valueWidth != \"0\" ? valueWidth : \"50\") : \"50%\";\r\n\r\n        if (displayType == \"normal\" || displayType == \"both\" || displayType == \"reversed\") {\r\n\r\n            // Special case with lower values, so they want both fields in \"auto\" width\r\n            if (labelWidth && bizagi.util.percent2Number(labelWidth) < 5 &&\r\n                valueWidth && bizagi.util.percent2Number(valueWidth) < 5) {\r\n                return {label: 0, control: 100};\r\n            }\r\n            // Normalize percentages\r\n            if (labelWidth && !valueWidth) {\r\n                labelWidth = bizagi.util.percent2Number(labelWidth);\r\n                valueWidth = 100 - labelWidth;\r\n\r\n            } else if (!labelWidth && valueWidth) {\r\n                valueWidth = bizagi.util.percent2Number(valueWidth);\r\n                labelWidth = 100 - valueWidth;\r\n            } else {\r\n                labelWidth = bizagi.util.percent2Number(labelWidth);\r\n                valueWidth = bizagi.util.percent2Number(valueWidth);\r\n\r\n                // Check 100% percentage\r\n                if ((labelWidth + valueWidth) != 100 && typeof (self.properties) != \"undefined\" && self.properties.layoutType != \"pixels\") {\r\n                    valueWidth = 100 - labelWidth;\r\n                }\r\n            }\r\n        } else {\r\n            labelWidth = 100;\r\n            valueWidth = 100;\r\n        }\r\n\r\n        return {label: labelWidth, control: valueWidth};\r\n    },\r\n    /*\r\n    *   Get param value idCase\r\n    */\r\n    getIdCase: function () {\r\n        var self = this;\r\n        return self.getFormContainer().params.idCase || bizagi.context.idCase;\r\n    },\r\n    /*\r\n    *   Get param value idWorkitem\r\n    */\r\n    getIdWorkitem: function () {\r\n        var self = this;\r\n        return self.getFormContainer().params.idWorkitem || bizagi.context.idWorkitem;\r\n    },\r\n    /*\r\n    *   Get param value idTask\r\n    */\r\n    getidTask: function () {\r\n        var self = this;\r\n        return self.getFormContainer().params.idTask || bizagi.context.idTask;\r\n    },\r\n    /*\r\n    *   Get param value sessionId\r\n    */\r\n    getSessionId: function () {\r\n        var self = this;\r\n        return self.getFormContainer().properties.sessionId;\r\n    },\r\n\r\n    /*\r\n    *   CELL STUFF\r\n    *   TODO: Move to other place\r\n    */\r\n\r\n    /* Customizes cell color*/\r\n    changeCellColor: function (color) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        if (control) {\r\n            if (color != 'none') {\r\n                control.css(\"color\", color);\r\n                control.find(\"input, textarea, label\").each(function (i, element) {\r\n                    $(element).css(\"color\", color);\r\n                });\r\n            } else {\r\n                control.css(\"color\", \"\");\r\n                control.find(\"input, textarea, label\").each(function (i, element) {\r\n                    $(element).css(\"color\", \"\");\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Customizes cell background color\r\n     * @param color\r\n     */\r\n    changeCellBackgroundColor: function (color) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var backgroundColor = \"\";\r\n        var backgroundImage = \"\";\r\n\r\n        if (control) {\r\n            if (color != 'none') {\r\n                backgroundColor = color;\r\n                backgroundImage = \"none\";\r\n            }\r\n\r\n            if (self.properties.editable) {\r\n                var needBGPaint = false;\r\n\r\n                control.find(\"input, textarea, .ui-selectmenu\").each(function (i, element) {\r\n\r\n                    if (((element.type == \"text\") || (element.type == \"textarea\")) && !($(element).hasClass('ui-select-data')))\r\n                        needBGPaint = true;\r\n\r\n                    $(element).css({\r\n                        \"background-color\": backgroundColor,\r\n                        \"background-image\": backgroundImage\r\n                    });\r\n                });\r\n\r\n                if (!needBGPaint) {\r\n                    control.closest(\"td\").each(function (i, element) {\r\n                        $(element).css({\r\n                            \"background-color\": backgroundColor,\r\n                            \"background-image\": backgroundImage\r\n                        });\r\n                    });\r\n                }\r\n\r\n            } else {\r\n                control.each(function (i, element) {\r\n                    //TODO: Validar si se aplican los estilos en tablet aun sin esta linea, cuidado con desktop\r\n                    var item = ($(element).hasClass(\"ui-bizagi-cell-readonly\")) ? control.closest(\"td\") : $(element);\r\n                    item.css({\r\n                        \"background-color\": backgroundColor,\r\n                        \"background-image\": backgroundImage\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n    },\r\n\r\n    /**\r\n     * Changes the cell visibility\r\n     * @param argument\r\n     */\r\n    changeCellVisibility: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        if (control) {\r\n            // Hide - show the render\r\n            if (bizagi.util.parseBoolean(argument) == true) {\r\n                //control.show();\r\n                control.css(\"visibility\", \"visible\");\r\n                control.css(\"display\", \"\");\r\n\r\n                self.element && self.element.show();\r\n            } else {\r\n                //control.hide();\r\n                control.css(\"visibility\", \"hidden\");\r\n            }\r\n        }\r\n\r\n        // Update properties\r\n        properties.visible = argument;\r\n    },\r\n\r\n    /**\r\n     * Changes the cell required\r\n     * @param argument\r\n     */\r\n    changeCellRequired: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        if (control) {\r\n            // Check if argument is true and control donot have any value\r\n            if (bizagi.util.parseBoolean(argument) == true && bizagi.util.isEmpty(self.value)) {\r\n                control.addClass('control-required');\r\n                control.append('<div class=\"ui-bizagi-render-control-required\"></div>');\r\n            } else {\r\n                control.removeClass('control-required');\r\n                $(\".ui-bizagi-render-control-required\", control).remove();\r\n            }\r\n            // Update properties\r\n            properties.required = argument;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to create deferred at the moment to start multiaction\r\n     */\r\n    startActionExecution: function () {\r\n        var self = this;\r\n        self.startLoading();\r\n        self.actionExecutionDeferred = new $.Deferred();\r\n    },\r\n\r\n    /**\r\n     * method to resolve the deferred when multiaction finish\r\n     */\r\n    endActionExecution: function () {\r\n        var self = this;\r\n        self.endLoading();\r\n        if (self.actionExecutionDeferred) self.actionExecutionDeferred.resolve();\r\n        delete self.actionExecutionDeferred;\r\n    },\r\n\r\n    /**\r\n     * Method to return the promise to anyone that needs to know if multiaction ended\r\n     * @returns {*}\r\n     */\r\n    readyActionExecution: function () {\r\n        var self = this;\r\n        if (!self.actionExecutionDeferred) return $.when(true);\r\n        return self.actionExecutionDeferred.promise();\r\n    },\r\n\r\n    /**\r\n     * Verifies is the elements was inside a new row in a grid\r\n     * @returns {boolean}\r\n     */\r\n    isFromCreatedRow: function () {\r\n        var self = this;\r\n\r\n        if (self.grid) {\r\n            var i = self.grid.columns.length;\r\n\r\n            while (i-- > 0) {\r\n                if (self.grid.columns[i].properties.xpath == self.properties.xpath) {\r\n                    if (self.grid.columns[i].isNewRow == true) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    /**\r\n     * Submits a invalidate page cache request\r\n     * @param params\r\n     */\r\n    submitInvalidatePageCacheRequest: function (params) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var pageCacheToInvalidate = params ? params.idPageCache : properties.idPageCache;\r\n\r\n\r\n        self.dataService.invalidatePageCache({idPageCache: pageCacheToInvalidate});\r\n    },\r\n\r\n    /**\r\n     * Check is design mode\r\n     */\r\n    isDesignMode: function () {\r\n        return this.getMode() === \"design\";\r\n    },\r\n\r\n    /**\r\n     * Check is design mode\r\n     */\r\n    isExecutionMode: function () {\r\n        return this.getMode() === \"execution\";\r\n    },\r\n\r\n    /***/\r\n    preventDefaultForAnchorTag: function(){        \r\n        if (bizagi.util.isSharepointContext()){\r\n            $(\"a[href='#']\", this.getControl()).click(function(ev){\r\n                ev.preventDefault();          \r\n            });\r\n        }    \r\n    }\r\n});\r\n","/*\r\n *   Name: Bizagi Render Base Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a base render class with common stuff related to all renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.render.base\", {}, {\r\n\r\n    /**\r\n     * Method to process the render the layout\r\n     * @param {boolean} isLabelFormat\r\n     * @param {string} format\r\n     */\r\n    processLayout: function (isLabelFormat, format) {\r\n        var properties = this.properties;\r\n\r\n        if (typeof isLabelFormat !== \"boolean\") {\r\n            console.warm(\"error calling processLayout, 'isLabelFormat' is not boolean\");\r\n            return;\r\n        }\r\n\r\n        if (isLabelFormat) {\r\n            this.processLabelLayout(format);\r\n        } else {\r\n            this.processControlLayout(format);\r\n\r\n            // Set required and visiblity\r\n            properties.required = typeof (properties.required) !== \"undefined\" ? bizagi.util.parseBoolean(properties.required) : false;\r\n            var visible = typeof (properties.visible) !== \"undefined\" ? bizagi.util.parseBoolean(properties.visible) : true;\r\n\r\n            if (properties.required) {\r\n                this.changeRequired(properties.required);\r\n            }\r\n\r\n            if (!visible) {\r\n                this.changeVisibility(visible);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to process the label in the layout\r\n     * @param {} format\r\n     * @returns {}\r\n     */\r\n    processLabelLayout: function (format) {\r\n        var $label = this.getLabel();\r\n        if ($label == null) return;\r\n\r\n        // Set customizations\r\n        format = format || {};\r\n        if (typeof format.bold === \"undefined\") {\r\n            format.bold = true; // Default value\r\n        }\r\n\r\n        this.changeBackgroundColor(format.background)\r\n            .changeFontColor($label, format.color)\r\n            .changeFontBold($label, format.bold)\r\n            .changeFontSize($label, format.size)\r\n            .changeFontItalic($label, format.italic)\r\n            .changeTextDecoration($label, (format.underline ? \"underline\" : \"\") + (format.strikethru ? \" line-through\" : \"\"));\r\n    },\r\n\r\n    /**\r\n     * Method to process the control in the layout\r\n     * @param {} format\r\n     * @returns {}\r\n     */\r\n    processControlLayout: function (format) {\r\n        var $control = this.getControl();\r\n        var $elements = this.getElementsToStylize($control);\r\n\r\n        // Set customizations\r\n        format = format || {};\r\n\r\n        this.changeFontColor($elements, format.color)\r\n            .changeFontBold($elements, format.bold)\r\n            .changeFontItalic($elements, format.italic)\r\n            .changeFontSize($elements, format.size)\r\n            .changeTextDecoration($elements, (format.underline ? \"underline\" : \"\") + (format.strikethru ? \" line-through\" : \"\"));\r\n    },\r\n\r\n    /**\r\n     * Customizes render color\r\n     * @param {} color\r\n     * @returns {}\r\n     */\r\n    changeColor: function (color) {\r\n        var $label = this.getLabel();\r\n        var $control = this.getControl();\r\n        var $elements = this.getElementsToStylize($control);\r\n\r\n        return this\r\n            .changeFontColor($label, color)\r\n            .changeFontColor($elements, color);\r\n    },\r\n\r\n    /**\r\n     * Customizes render color\r\n     * @param {} $element\r\n     * @param {} color\r\n     * @returns {}\r\n     */\r\n    changeFontColor: function ($element, color) {\r\n        if ($element === undefined) return this;\r\n        if (color === undefined) return this;\r\n\r\n        var style = color !== \"none\" ? color : \"\";\r\n        $element.css(\"color\", style);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font size property\r\n     * @param {} $element\r\n     * @param {} size\r\n     * @returns {}\r\n     */\r\n    changeFontSize: function ($element, size) {\r\n        if (size === undefined) return this;\r\n        if ($element === undefined) return this;\r\n\r\n        if (size !== \"0\") {\r\n            var newFontSize = 100 + Number(size) * 10 + \"%\";\r\n            $element.css(\"font-size\", newFontSize);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font Strikethrough or underline property\r\n     * @param {} $element\r\n     * @param {} textDecoration\r\n     * @returns {}\r\n     */\r\n    changeTextDecoration: function ($element, textDecoration) {\r\n        if (textDecoration === undefined) return this;\r\n        if ($element === undefined) return this;\r\n\r\n        textDecoration && $element.css(\"text-decoration\", textDecoration);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font italic style\r\n     * @param {} $element\r\n     * @param {} italic\r\n     * @returns {}\r\n     */\r\n    changeFontItalic: function ($element, italic) {\r\n        var style = bizagi.util.parseBoolean(italic) ? \"italic\" : \"normal\";\r\n\r\n        $element.css(\"font-style\", style);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font weight\r\n     * @param {} $label\r\n     * @param {} bold\r\n     * @returns {}\r\n     */\r\n    changeFontBold: function ($label, bold) {\r\n        var style = bizagi.util.parseBoolean(bold) ? \"bold\" : \"normal\";\r\n\r\n        $label.css(\"font-weight\", style);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes render background color\r\n     * @param {} color\r\n     * @returns {}\r\n     */\r\n    changeBackgroundColor: function (color) {\r\n        if (typeof color === \"undefined\") return this;\r\n\r\n        if (color !== \"none\") {\r\n            this.element.css(\"background-color\", color);\r\n        } else {\r\n            this.element.css(\"background-color\", \"\");\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * This method just make a toggle of red label indicator\r\n     * @argument {boolean} argument\r\n     */\r\n    changeRequiredLabel: function () {\r\n    },\r\n\r\n    /**\r\n     * Change cell required and attach bindings\r\n     * @param argument\r\n     */\r\n    changeCellRequired: function (argument) {\r\n        this.changeRequired(argument);\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    getRTLAlign: function (align) {\r\n        if (typeof align == \"undefined\" || align == \"\") {\r\n            return \"default\";\r\n        }\r\n        return align;\r\n    },\r\n\r\n    /**\r\n     * TODO: This override should be removed after genome, just because the align shoudnt be depend of the display type\r\n     */\r\n    getDefaultLabelAlign: function(){\r\n        return \"default\";\r\n    },\r\n\r\n    /**\r\n     * TODO: This override should be removed after genome, just because the align shoudnt be depend of the display type\r\n     */\r\n    getDefaultValueAlign: function(){\r\n        return \"default\";\r\n    }\r\n});","/**\r\n *   Name: Bizagi Form Container Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a form container class that defines basic stuff regarding the device\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.form\", {}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n        var data = params.data;\r\n        var device = bizagi.util.detectDevice();\r\n\r\n        // Creates a hashtable to maintain references by id\r\n        self.rendersById = {};\r\n        self.rendersByXpath = {};\r\n        self.rendersByXpathId = {};\r\n        self.rendersByType = {};\r\n\r\n        // Set page cache id\r\n        self.idPageCache = data.pageCacheId;\r\n\r\n        // Set default mode\r\n        self.mode = params.mode || \"execution\";\r\n        self.focus = params.focus;\r\n\r\n        // Set rendering params\r\n        self.params = params;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Define confirmation message \r\n        var message = \"\";\r\n\r\n        if (device !== \"desktop\") {\r\n            message = this.getResource(\"render-form-user-confirmation-message\").replace(/<br(\\/| \\/)>/g, \"\\n\");\r\n        } else {\r\n            message = this.getResource(\"render-form-user-confirmation-message\");\r\n        }\r\n\r\n        // Default properties\r\n        var properties = self.properties;\r\n        properties.sessionId = data.sessionId;\r\n        properties.displayAsReadOnly = bizagi.util.parseBoolean(data.displayAsReadOnly) || false;\r\n        properties.userConfirmationMessage = properties.userConfirmationMessage || message;\r\n        properties.orientation = properties.orientation || \"ltr\";\r\n        properties.hasRule = bizagi.util.parseBoolean(properties.hasRule) || false;\r\n        properties.contexttype = params.contexttype || \"\";\r\n        properties.paramsRender = params.paramsRender || {};\r\n        properties.processPath = params.data.processPath ? params.data.processPath.replaceAll(\"|/|\", \"  &rsaquo;  \") : \"\";\r\n        properties.breadCrumb = params.data.processPath ? params.data.processPath.split(\"|/|\") : [];\r\n\r\n        // Set validations & actions\r\n        this.validations = data.validations;\r\n        this.actions = data.actions;\r\n\r\n        // Enable the \"Validate and Save\" action for Form Buttons\r\n        self.allowValidateAndSaveAction = bizagi.override && bizagi.override.enableActionValidateAndSave === true;\r\n\r\n        // Initialize buttons\r\n        self.initializeButtons(data);\r\n\r\n        // Define transitions to Complex Gateway\r\n        if (data.transitions) {\r\n            self.transitions = data.transitions;\r\n        }\r\n\r\n        this.originalProcessButton = this.processButton;\r\n\r\n        //Custom behaviour for application parent activated.\r\n        self.isRoutingDisabled = false;\r\n        if (params.applicationParent) {\r\n            switch (params.applicationParent) {\r\n                case 'NEWWORKPORTAL':\r\n                    self.isRoutingDisabled = true;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        self.isOfflineFormsV2Supported = bizagi.util.isMobileDevice() && bizagi.util.isOfflineFormsV2Supported();\r\n        self.isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n    },\r\n\r\n    /*\r\n    *   Initializes button metadata\r\n    */\r\n    initializeButtons: function (data) {\r\n        var self = this;\r\n\r\n        self.buttons = [];\r\n\r\n        // Process buttons\r\n        if (data.buttons) {\r\n            $.each(data.buttons, function (i, item) {\r\n                var button = item.button.properties;\r\n\r\n                // Process caption\r\n                button.caption = !bizagi.util.isEmpty(button.caption) && self.getResource(button.caption) != button.caption ? self.getResource(button.caption) : button.caption;\r\n\r\n                // Process actions\r\n                if (button.actions) {\r\n                    $.each(button.actions, function (i, action) {\r\n                        button[action] = true;\r\n                    });\r\n                }\r\n\r\n                // Add other properties\r\n                button.ordinal = i;\r\n                button.action = button.next ? \"next\" :\r\n                    button.nextWithoutValidations ? \"nextWithoutValidations\" :\r\n                        button.submitData ? \"save\" :\r\n                            button.cancel ? \"cancel\" :\r\n                                button.back ? \"back\" :\r\n                                    button.createnewcase ? \"createnewcase\" :\r\n                                        button.validate ? \"validate\" : \"\";\r\n\r\n                // Explicit add save operation\r\n                button.save = (button.action === \"save\");\r\n\r\n                // Add inherent behaviours\r\n                if (button.next || button.back || button.nextWithoutValidations) {\r\n                    button.routing = true;\r\n                }\r\n\r\n                if (button.hasRule) {\r\n                    button.executeRule = true;\r\n                }\r\n\r\n                if (self.allowValidateAndSaveAction && button.validate) {\r\n                    button.submitData = true;\r\n                    button.refresh = true;\r\n                    button.save = true;\r\n                    if (button.action === \"next\" || button.action === \"createnewcase\") {\r\n                        button.refresh = false;\r\n                    }\r\n                }\r\n\r\n                // Prepare button style\r\n                button.style = self.buildButtonStyle(button);\r\n\r\n                // Add to button array\r\n                if (self.properties.orientation === \"rtl\" && !self.properties.useCustomButtons) {\r\n                    self.buttons.unshift(button);\r\n                } else {\r\n                    self.buttons.push(button);\r\n                }\r\n\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Get the original params used to fetch the form\r\n    */\r\n    getParams: function () {\r\n        return this.params;\r\n    },\r\n\r\n    setParam: function (property, value) {\r\n        if (this.params) {\r\n            this.params[property] = value;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Get current rendering mode\r\n    */\r\n    getMode: function () {\r\n        return this.mode;\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        var self = this;\r\n        if (self.params) {\r\n            return self.params.customHandlers;\r\n        }\r\n    },\r\n    /*\r\n    * Method to index renders\r\n    */\r\n    registerRender: function (render) {\r\n        var self = this;\r\n        var xpath = render.properties.xpath;\r\n        var id = render.properties.id;\r\n        var type = render.properties.type;\r\n        var xpathId = xpath ? xpath + \".\" + id : undefined;\r\n\r\n        self.rendersById[id] = render;\r\n        if (xpath) {\r\n            if (!self.rendersByXpath[xpath]) {\r\n                self.rendersByXpath[xpath] = [];\r\n            }\r\n            self.rendersByXpath[xpath].push(render);\r\n        }\r\n\r\n        if (xpathId) {\r\n            if (!self.rendersByXpathId[xpathId]) {\r\n                self.rendersByXpathId[xpathId] = [];\r\n            }\r\n            self.rendersByXpathId[xpathId].push(render);\r\n        }\r\n\r\n        if (!self.rendersByType[type]) {\r\n            self.rendersByType[type] = [];\r\n        }\r\n        self.rendersByType[type].push(render);\r\n    },\r\n    /*\r\n    * Method to unregister render\r\n    */\r\n    unregisterRender: function (render) {\r\n        var self = this;\r\n\r\n        if (self.rendersById[render.properties.id]) {\r\n            delete self.rendersById[render.properties.id];\r\n        }\r\n\r\n        if (render.properties.xpath) {\r\n            if ($.isArray(self.rendersByXpath[render.properties.xpath])\r\n                && self.rendersByXpath[render.properties.xpath].length > 1) {\r\n                for (var i = 0, l = self.rendersByXpath[render.properties.xpath].length; i < l; i++) {\r\n                    var element = self.rendersByXpath[render.properties.xpath][i];\r\n                    if (element.properties.id === render.properties.id) {\r\n                        self.rendersByXpath[render.properties.xpath].splice(i, 1);\r\n                        self.rendersByXpathId[render.properties.xpath + '.' + render.properties.id].splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                delete self.rendersByXpath[render.properties.xpath];\r\n            }\r\n        }\r\n\r\n        // Unregister from renders by type\r\n        if (render.properties.type) {\r\n            var listRendesByType = self.getRenderByType(render.properties.type);\r\n            var listRendesByTypeLength = listRendesByType.length;\r\n            var renderKey = render.properties.id || render.properties.xpath;\r\n\r\n            for (var i = 0; i < listRendesByTypeLength; i++) {\r\n                var listRender = listRendesByType[i];\r\n                if ((typeof listRender.properties.id != \"undefined\" && listRender.properties.id == renderKey) ||\r\n                    (typeof listRender.properties.xpath != \"undefined\" && listRender.properties.xpath == renderKey)) {\r\n                    // Unregister element\r\n                    self.rendersByType[render.properties.type].splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * Method to access a render by id\r\n    */\r\n    getRenderById: function (id) {\r\n        var self = this;\r\n\r\n        return self.rendersById[id];\r\n    },\r\n\r\n    getGridByColumn: function (id) {\r\n        var self = this;\r\n        var grids = self.getRenderByType('grid');\r\n        var i = 0, columnIndex;\r\n\r\n        for (; i < grids.length; i++) {\r\n            columnIndex = grids[i].columnsIds.indexOf(id);\r\n            if (columnIndex != -1) {\r\n                return grids[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Method to find all the renders matching an xpath inside the container\r\n    */\r\n    getRenders: function (xpath) {\r\n        var self = this;\r\n\r\n        // Remove [] filters for grid columns xpaths to fully identify the grid as the xpath target\r\n        if (xpath && xpath.indexOf)\r\n            if (xpath.indexOf(\"[\") > 0) {\r\n                xpath = xpath.substring(0, xpath.indexOf(\"[\"));\r\n            }\r\n\r\n        return self.rendersByXpathId[xpath] ?\r\n            self.rendersByXpathId[xpath] : self.rendersByXpath[xpath] ?\r\n                self.rendersByXpath[xpath] : [];\r\n    },\r\n    /**\r\n     * Get all render with the same type\r\n     */\r\n    getRenderByType: function (type) {\r\n        var self = this;\r\n\r\n        // Check that type is defined\r\n        if (typeof type == \"string\" && type.length > 0) {\r\n            // Search controls by type\r\n            return (self.rendersByType[type]) ? self.rendersByType[type] : [];\r\n        }\r\n        return [];\r\n    },\r\n\r\n    /*\r\n    *   Build the container html\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"form\");\r\n        var idCase = \"\";\r\n\r\n        // Render the form\r\n        var html = $.fasttmpl(template, {\r\n            buttons: self.buttons,\r\n            transitions: self.transitions,\r\n            uniqueId: properties.uniqueId,\r\n            helptext: properties.helpText,\r\n            mode: self.getMode(),\r\n            queryForm: self.getFormType() == \"queryForm\",\r\n            summaryForm: self.params.summaryForm || false,\r\n            globalForm: self.properties.displayAsReadOnly || false,\r\n            idCase: idCase,\r\n            displayName: self.params.displayName || idCase,\r\n            processPath: properties.processPath,\r\n            breadCrumb: properties.breadCrumb,\r\n            orientation: properties.orientation\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n    /*\r\n    *   Process the html rendering object\r\n    */\r\n    postRenderContainer: function (form) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        // Add a mode class\r\n        form.addClass(\"ui-bizagi-rendering-mode-\" + mode);\r\n\r\n        // Call base\r\n        this._super(form);\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var complexGatewayContainer;\r\n        var form = self.container;\r\n\r\n        if (form.length > 1) {\r\n            $(form).each(function () {\r\n                if ($(this).hasClass('ui-bizagi-container-complexgateway')) {\r\n                    complexGatewayContainer = this;\r\n                }\r\n            });\r\n        } else {\r\n            complexGatewayContainer = $(\".ui-bizagi-container-complexgateway\", form);\r\n        }\r\n\r\n        // activeTransitions is used to store ids of activities in Complex Gateway\r\n        self.activeTransitions = {};\r\n\r\n        // Process buttons\r\n        self.processButtons(form);\r\n\r\n        // Check for dom included event\r\n        self.bind(\"ondomincluded\", function (e, mainForm) {\r\n            // Creates validation controller after the form is ready\r\n            self.validationController = new bizagi.command.controllers.validation(self, self.validations, mainForm);\r\n            // Creates action controller after the form is ready\r\n            self.actionController = new bizagi.command.controllers.action(self, self.actions);\r\n\r\n            // Resolve this deferred to start executing DOM dependant plugins\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n        // Set events for complex gateway interface\r\n        $(complexGatewayContainer).find(\".ui-checkbox\").bind(\"click\", function () {\r\n            var checkboxLabel = $(\"label\", this);\r\n\r\n            var transitionId = checkboxLabel.data(\"value\") || \"\";\r\n            if (typeof self.activeTransitions[transitionId] == \"undefined\") {\r\n                self.activeTransitions[transitionId] = false;\r\n            }\r\n\r\n            if (bizagi.util.parseBoolean(checkboxLabel.data(\"checked\"))) {\r\n                // Uncheck element\r\n                checkboxLabel.removeClass(\"ui-checkbox-state-checked\");\r\n                checkboxLabel.removeClass(\"bz-check\").addClass(\"bz-full-ball\");\r\n                checkboxLabel.data(\"checked\", false);\r\n                self.activeTransitions[transitionId] = false;\r\n            } else {\r\n                // Check element\r\n                checkboxLabel.addClass(\"ui-checkbox-state-checked\");\r\n                checkboxLabel.addClass(\"bz-mo-icon\").addClass(\"bz-check\").removeClass(\"bz-full-ball\");\r\n                checkboxLabel.data(\"checked\", true);\r\n                self.activeTransitions[transitionId] = true;\r\n            }\r\n        });\r\n\r\n\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour when rendering in design mode\r\n    */\r\n    configureDesignView: function () {\r\n        var self = this;\r\n\r\n\r\n        // Check for dom included event\r\n        self.bind(\"ondomincluded\", function () {\r\n            // Resolve this deferred to start executing DOM dependant plugins\r\n            self.readyDeferred.resolve();\r\n        });\r\n    },\r\n    /*\r\n    *   Format form buttons to allow further customization\r\n    */\r\n    buildButtonStyle: function (button) {\r\n\r\n        var style = {};\r\n        if (button.format) {\r\n            if (button.format.size) {\r\n                if (button.format.size != \"0\") {\r\n                    var newFontSize = (100 + Number(button.format.size) * 10) + \"%\";\r\n                    style[\"font-size\"] = newFontSize + \" !important\";\r\n                }\r\n            }\r\n            if (button.format.bold) {\r\n                style[\"font-weight\"] = \"bold !important\";\r\n                if (bizagi.util.isIE()) {\r\n                    style[\"font-family\"] = \"'Open Sans', 'Helvetica Neue', Arial, Helvetica, sans-serif !important\";\r\n                }\r\n            }\r\n            if (button.format.italic) {\r\n                style[\"font-style\"] = \"italic !important\";\r\n            }\r\n            if (button.format.underline || button.format.strikethru) {\r\n                var strikethru = bizagi.util.parseBoolean(button.format.strikethru) ? \"line-through \" : \"\";\r\n                var underline = bizagi.util.parseBoolean(button.format.underline) ? \"underline \" : \"\";\r\n                style[\"text-decoration\"] = strikethru + underline + \" !important\";\r\n            }\r\n            if (button.format.background) {\r\n                style[\"background-color\"] = button.format.background + \" !important\";\r\n                style[\"background-image\"] = \"none !important\";\r\n            }\r\n            if (button.format.color) {\r\n                style[\"color\"] = button.format.color + \" !important\";\r\n            }\r\n        }\r\n\r\n        var strStyle = \"\";\r\n        for (key in style) {\r\n            strStyle += key + \":\" + style[key] + \";\";\r\n        }\r\n        return strStyle;\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    *   Returns a promise\r\n    */\r\n    render: function () {\r\n        var self = this;\r\n\r\n        // Creates a deferred, so we can check when form has been included in dom\r\n        if (!self.readyDeferred)\r\n            self.readyDeferred = new $.Deferred();\r\n\r\n        // Call base\r\n        var result = this._super();\r\n\r\n        return result;\r\n    },\r\n    /*\r\n    *   Sets a promise that the form will be included in the DOM\r\n    *   so we can apply some tedious plugins that require that\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n\r\n        return self.readyDeferred.promise();\r\n    },\r\n    /*\r\n    *   Returns the xpath context of the element\r\n    */\r\n    getXpathContext: function () {\r\n        return this.properties.xpathContext || \"\";\r\n    },\r\n    /*\r\n    *  Return context type, when the parent form is entity\r\n    */\r\n    getContextType: function () {\r\n        return this.properties.contexttype || \"\";\r\n    },\r\n\r\n    /*\r\n    * Return the endpoint action, when the form will be refresh\r\n    */\r\n    getEndPointAction: function () {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        if (properties.formtype == \"startform\")\r\n            return \"LOADSTARTFORM\";\r\n\r\n        return undefined;\r\n\r\n    },\r\n\r\n    /*\r\n    *   Returns the page cache id for the element\r\n    */\r\n    getPageCache: function () {\r\n        return this.idPageCache;\r\n    },\r\n    /*\r\n    *   Returns the form containing the element\r\n    */\r\n    getFormContainer: function () {\r\n        return this;\r\n    },\r\n    /*\r\n    *   Method to process button actions in the form\r\n    */\r\n    processButtons: function () {\r\n        var self = this;\r\n        var buttons = self.getButtons();\r\n\r\n        // Don't process buttons if they are undefined in the template\r\n        if (!buttons || buttons.length == 0) {\r\n            return;\r\n        }\r\n\r\n        // Attach a handler for each button\r\n        buttons.on(\"click\", function (e) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n\r\n            self.startLoading();\r\n\r\n            var button = $(this);\r\n            var ordinal = button.attr(\"ordinal\");\r\n            var buttonProperties = self.buttons[ordinal];\r\n\r\n            self.lastActionButton = buttonProperties;\r\n            if (buttonProperties.action === \"next\") {\r\n                buttonProperties.routingDisabled = self.isRoutingDisabled;\r\n            }\r\n\r\n            button.prop(\"disabled\", true); //disable button to prevent multiple click actions\r\n\r\n            if (button.hasOwnProperty('disabled')) {\r\n                button.button(\"disable\"); //Setting styles\r\n            }\r\n\r\n            // External Events\r\n            self.propagateExternalEvents(e);\r\n\r\n            // Execute button\r\n            //QAF-1418 - add setTimeout\r\n            setTimeout(function () {\r\n                $.when(self.processButton(buttonProperties)).always(function () {\r\n                    self.processDefer = undefined;\r\n                    self.endLoading();\r\n                    if ($.contains(document.documentElement, button.get(0))) { //check if button is still in DOM\r\n                        button.prop(\"disabled\", false);  //enable button\r\n\r\n                        if (button.hasOwnProperty('enable')) {\r\n                            button.button(\"enable\"); //Setting styles\r\n                        }\r\n                    }\r\n                });\r\n            }, 100);\r\n        });\r\n    },\r\n    /*\r\n    * Execute codes just before sending information to server\r\n    */\r\n    preProcessButton: function (buttonProperties) {\r\n        return true;\r\n    },\r\n    /*\r\n    * Execute codes just after sending information to server\r\n    */\r\n    postProcessButton: function (responses, buttonProperties) {\r\n        return true; // true means continue\r\n    },\r\n\r\n    setLoaderDeferred: function () {\r\n        var self = this;\r\n\r\n        self.loaderDeferred = $.Deferred().resolve();\r\n    },\r\n\r\n    deleteLoaderDeferred: function () {\r\n        var self = this;\r\n\r\n        if (self.isLoaderDeferredSet()) {\r\n            $.when(self.loaderDeferred.promise()).done(function () {\r\n                delete self.loaderDeferred;\r\n            }).fail(function () {\r\n                delete self.loaderDeferred;\r\n            });\r\n        }\r\n    },\r\n\r\n    useOrSetLoaderDeferred: function () {\r\n        var self = this;\r\n\r\n        if (!self.isLoaderDeferredSet()) {\r\n            self.setLoaderDeferred();\r\n        }\r\n    },\r\n\r\n    getLoaderPromise: function () {\r\n        var self = this;\r\n\r\n        if (self.isLoaderDeferredSet()) {\r\n            return self.loaderDeferred.promise();\r\n        } else {\r\n            return;\r\n        }\r\n    },\r\n\r\n    isLoaderDeferredSet: function () {\r\n        var self = this;\r\n\r\n        if (self.loaderDeferred) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    appendWaitForLoader: function (params) {\r\n        var self = this;\r\n        var promise = params.promise;\r\n        var create = params.create || false;\r\n\r\n        if (!self.isLoaderDeferredSet()) {\r\n            if (create) {\r\n                self.setLoaderDeferred();\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n\r\n        self.loaderDeferred = self.loaderDeferred.then(function () {\r\n            return (function () {\r\n                return promise;\r\n            })();\r\n        });\r\n    },\r\n\r\n    getResolveOrReject: function () {\r\n        var self = this;\r\n        var deferred = $.Deferred();\r\n\r\n        if (self.isLoaderDeferredSet()) {\r\n            $.when(self.loaderDeferred.promise()).done(function () {\r\n                deferred.resolve();\r\n            }).fail(function () {\r\n                deferred.resolve();\r\n            });\r\n        } else {\r\n            deferred.resolve();\r\n        }\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n\r\n    /*\r\n    *   Executes a single button action\r\n    */\r\n    processButton: function (buttonProperties) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n        var properties = self.properties;\r\n        if (!buttonProperties.routing) {\r\n            bizagi.chrono.initAndStart(\"submitForm\");\r\n        }\r\n        bizagi.chrono.init(\"waiting\");\r\n\r\n        // First hide and clear validation box\r\n        self.validationController.clearValidationMessages();\r\n\r\n        // Resolve asynchronous tabItems\r\n        var form = self.getFormContainer();\r\n        var getAllTabs = form.getRenderByType(\"tabItem\");\r\n        var getAllTabsLength = getAllTabs.length;\r\n\r\n        form.innerTabsLoading = true;\r\n\r\n        self.useOrSetLoaderDeferred();\r\n\r\n        // Check\r\n        for (var i = 0; i < getAllTabsLength; i++) {\r\n            var render = getAllTabs[i];\r\n            // Resolve internal deferred\r\n            if (render.loadingDeferred && render.parent.container) {\r\n                render.loadingDeferred.resolve();\r\n            }\r\n        }\r\n\r\n        delete form.innerTabsLoading;\r\n\r\n        $.when(self.ready(), self.getResolveOrReject()).done(function () {\r\n            self.deleteLoaderDeferred();\r\n            // Validate the form\r\n            var valid = bizagi.util.parseBoolean(buttonProperties.validate) ? self.validationController.performValidations() : true;\r\n            if (valid) {\r\n\r\n                if ([\"save\", \"next\", \"back\", \"createnewcase\", \"nextWithoutValidations\"].includes(buttonProperties.action)) {\r\n                    $(document).data('auto-save', '');\r\n                }\r\n\r\n                // Check for user confirmation if configured and the button is configured to enroute\r\n                if (bizagi.util.parseBoolean(self.properties.needsUserConfirmation) && bizagi.util.parseBoolean(buttonProperties.routing)) {\r\n                    self.endLoading();\r\n                    $.when(bizagi.showConfirmationBox(properties.userConfirmationMessage, null, false)).done(function () {\r\n                        // Submits the form\r\n                        if (self.preProcessButton(buttonProperties)) {\r\n                            //Trigger the event after ProcessButton\r\n                            self.triggerGlobalHandler(\"renderActionButton\", buttonProperties);\r\n                            $.when(self.submitForm(buttonProperties)).done(function () {\r\n                                defer.resolve();\r\n                            }).fail(function () {\r\n                                defer.reject(arguments);\r\n                            });\r\n                        }\r\n                    }).fail(function () {\r\n                        defer.reject();\r\n                    });\r\n\r\n                } else {\r\n                    if (self.preProcessButton(buttonProperties)) {\r\n                        //Trigger the event after ProcessButton\r\n                        self.triggerGlobalHandler(\"renderActionButton\", buttonProperties);\r\n                        $.when(self.submitForm(buttonProperties)).done(function () {\r\n                            $(document).trigger(\"FORMACTION\", buttonProperties);\r\n                            defer.resolve();\r\n                        }).fail(function () {\r\n                            defer.reject(arguments);\r\n                        });\r\n                    }\r\n                }\r\n\r\n            } else {\r\n\r\n                self.endLoading();\r\n                if (buttonProperties.submitData) {\r\n                    $.when(self.submitData()).done(function () {\r\n                        defer.reject();\r\n                    });\r\n                } else {\r\n                    defer.reject();\r\n                }\r\n\r\n                self.validationController.expandNotificationBox();\r\n            }\r\n\r\n            var customHandler = self.getCustomHandler(\"afterFormButtonClick\");\r\n            if (customHandler) {\r\n                customHandler(buttonProperties);\r\n            }\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n    /*\r\n    *   Public method to perform validations externally\r\n    */\r\n    validateForm: function () {\r\n        var self = this;\r\n\r\n        // First hide and clear validation box\r\n        self.validationController.clearValidationMessages();\r\n\r\n        // Validate the form\r\n        return self.validationController.performValidations();\r\n    },\r\n    /*\r\n    *   Submits all the form to the server and returns a deferred to check when the process finishes\r\n    */\r\n    saveForm: function () {\r\n        var self = this;\r\n\r\n        // Avoid the execution of server actions for mobile offline\r\n        if(bizagi.util.isNativeMobileDevice() && !this.allowOnlineActions()){\r\n            return $.when(function() {\r\n                return null;\r\n            });\r\n        }\r\n\r\n        // Check is offline form        \r\n        var isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n\r\n        // Collect data\r\n        var data = self.collectRenderValuesForSubmit();\r\n\r\n        // Check if there are deferreds to wait\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        // Wait for deferreds\r\n        return $.when(deferredsToWait).pipe(function () {\r\n            self.startLoading();\r\n            \r\n            var saveParams = {\r\n                action: \"SAVE\",\r\n                data: data,\r\n                idCase: self.params.idCase,\r\n                idWorkitem: self.params.idWorkitem,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                isOfflineForm: isOfflineForm || false\r\n            };\r\n\r\n            if (isOfflineForm){\r\n                saveParams.offlineType = self.params.offlineType;\r\n            }\r\n\r\n            // Submit the form\r\n            return $.when(self.dataService.submitData(saveParams))\r\n            .always(function () {\r\n                self.endLoading();\r\n            });\r\n        });\r\n    },\r\n    /*\r\n    *   Creates a json array with key values to send to the server\r\n    */\r\n    submitForm: function (buttonProperties) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n\r\n        // Check is offline form                \r\n        var isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n\r\n        $.when(self.isReadyToSave())\r\n            .done(function () {\r\n                if (isOfflineForm) {\r\n                    self.internalSubmitFormOffline(buttonProperties);\r\n                    return;\r\n                }\r\n                $.when(self.internalSubmitForm(buttonProperties)).done(function () {\r\n                    defer.resolve();\r\n                }).fail(function () {\r\n                    defer.reject(arguments);\r\n                });\r\n\r\n            }).fail(function () {\r\n            self.endLoading();\r\n            bizagi.log(\"The form is not saved, no changes were found\");\r\n            defer.reject();\r\n        });\r\n        return defer.promise();\r\n    },\r\n    checkWidgetsData: function () {\r\n        //\r\n    },\r\n    isComplexGatewayPainted: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Get last action button\r\n     * @returns {*}\r\n     */\r\n    getLastActionButton: function () {\r\n        return this.lastActionButton;\r\n    },\r\n\r\n    /**\r\n     * Internal - Creates a json array with key values to send to the database\r\n     * @param {} buttonProperties\r\n     * @returns {}\r\n     */\r\n    internalSubmitFormOffline: function (buttonProperties) {\r\n        var self = this;\r\n        var message = \"\";\r\n        var data;\r\n\r\n        // Check is offline form                \r\n        var isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n\r\n        if (isOfflineForm && (self.properties && !self.properties.idPageCache)) {\r\n            self.properties.idPageCache = \"\";\r\n        }\r\n\r\n        // Fill data hash\r\n        if (buttonProperties.submitData || buttonProperties.executeRule) {\r\n            // Collect data\r\n            data = self.collectRenderValuesForSubmit();\r\n        }\r\n\r\n        if (self.transitions) {\r\n            var transitions = [];\r\n            $.each(this.activeTransitions, function (key, value) {\r\n                (value) ? transitions.push(key) : \"\";\r\n            });\r\n\r\n            if (bizagi.util.countProps(transitions) == 0) {\r\n                bizagi.showMessageBox(\r\n                    bizagi.localization.getResource(\"render-widget-complexgateway-path\"),\r\n                    bizagi.localization.getResource(\"render-widget-complexgateway-error\"), \"info\", false\r\n                );\r\n                self.endLoading();\r\n                return \"\";\r\n            }\r\n        }\r\n\r\n        $.when(self.dataService.submitData({\r\n            action: buttonProperties.action,\r\n            data: data,\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache,\r\n            idForm: self.properties.id,\r\n            prepare: true,\r\n            transitions: transitions || \"\",\r\n            idCase: self.params.idCase,\r\n            idWorkitem: self.params.idWorkitem,\r\n            isOfflineForm: isOfflineForm || false,\r\n            offlineType: self.params.offlineType || \"\"\r\n        })).done(function (responses) {\r\n\r\n            if (!self.postProcessButton(responses, buttonProperties)) {\r\n                return;\r\n            }\r\n\r\n            //Offline action stored\r\n            var isSaveForDraft = self.params.offlineType !== \"task\" && buttonProperties.action === \"save\";\r\n            if (self.online && self.isOfflineFormsV2Supported && !isSaveForDraft) {\r\n                bizagi.loading.start();\r\n                var tryPushResponsePromise = new $.Deferred();\r\n                self.params.responsePromise = tryPushResponsePromise;\r\n                $(document).trigger(\"tryPushCase.offline\", self.params);\r\n            }\r\n            //Backward comp\r\n            if (!self.isOfflineFormsV2Supported) {\r\n                $(document).trigger(\"tryPushData.offline\");\r\n            }\r\n\r\n\r\n            $.when(tryPushResponsePromise)\r\n                .then(function (result) {\r\n                    bizagi.loading.stop();\r\n                    if (buttonProperties.routing) {\r\n                        if (!self.online && self.isOfflineFormsV2Supported) {\r\n                            self.triggerHandler(\"routing\", {\r\n                                offlineAction: buttonProperties.action,\r\n                                idCase: self.params.idCase,\r\n                                idWorkitem: self.params.idWorkitem\r\n                            });\r\n                        } else {\r\n                            self.triggerHandler(\"routing\", {\r\n                                idCase: result.IdCase,\r\n                                caseNumber: result.CaseNumber\r\n                            });\r\n                        }\r\n                    } else {\r\n                        if(self.online && isSaveForDraft){\r\n                            bizagi.util.recreateNativeButtons(self);\r\n                        }\r\n                        message = bizagi.util.isValidResource(\"workportal-mobile-offline-form-successful\")\r\n                            ? bizagi.localization.getResource(\"workportal-mobile-offline-form-successful\")\r\n                            : \"Saved\";\r\n\r\n                        bizagi.util.showNotification({text: message, type: \"success\"});\r\n                    }\r\n                })\r\n                .fail(function (error) {\r\n                    bizagi.loading.stop();\r\n                    bizagi.util.recreateNativeButtons(self);\r\n                    if ($.isArray(error)) {\r\n                        var responses = error;\r\n                        var bHasValidations;\r\n                        var alertMessage = \"\";\r\n                        $.each(responses, function (i, response) {\r\n                            var propertiesToDisplayMessages = self.validationToDisplayMessages(bHasValidations, response.result.type, response.result.messages, alertMessage);\r\n                            bHasValidations = propertiesToDisplayMessages.bHasValidations;\r\n                            alertMessage = propertiesToDisplayMessages.alertMessage;\r\n                        });\r\n                        if (bHasValidations && alertMessage !== \"\") {\r\n                            bizagi.modalError.show(alertMessage, 'workportal-general-word-information', false);\r\n                        }\r\n                    }\r\n                    self.failHandler(error);\r\n                });\r\n\r\n        }).fail(function (error) {\r\n            message = bizagi.util.isValidResource(\"workportal-mobile-offline-successful-fail\")\r\n                ? bizagi.localization.getResource(\"workportal-mobile-offline-successful-fail\")\r\n                : \"Not saved\";\r\n\r\n            bizagi.util.showNotification({text: message, type: \"error\"});\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Internal - Creates a json array with key values to send to the server\r\n    */\r\n    internalSubmitForm: function (buttonProperties) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n        var data = {};\r\n\r\n        // Fill data hash\r\n        if (buttonProperties.submitData || buttonProperties.executeRule || buttonProperties.createnewcase || buttonProperties.back) {\r\n            // Collect data\r\n            data = self.collectRenderValuesForSubmit();\r\n        }\r\n\r\n        // Start asynchronous operation\r\n        $.when(self.startLoading()).done(function () {\r\n            $('html, body').animate({scrollTop: $('.ui-bizagi-loading-icon')}, 'slow');\r\n        });\r\n\r\n        var submitDataAction = null;\r\n        var executeButtonAction = null;\r\n        var performAction = null;\r\n        var checkpointAction = null;\r\n        var commitAction = null;\r\n        var waitingDeferreds = [];\r\n        var deferredsToWait = null;\r\n\r\n        // Prepare actions\r\n        if (buttonProperties.executeRule) {  // When the button has to execute any rule (MUST SUBMIT DATA BEFORE ALWAYS)\r\n\r\n            if (data.deferreds) {\r\n                deferredsToWait = $.when.apply($, data.deferreds);\r\n                waitingDeferreds.push(deferredsToWait);\r\n                delete data.deferreds;\r\n            }\r\n\r\n            submitDataAction = self.dataService.submitData({\r\n                action: \"SUBMITDATA\",\r\n                data: data,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true\r\n            });\r\n            submitDataAction.tag = \"submitData\";\r\n\r\n            checkpointAction = self.prepareCheckpointAction(buttonProperties.id);\r\n\r\n            // Reset data because when an execute rule operation has been performed, it saved already all the data\r\n            data = {};\r\n            executeButtonAction = self.dataService.executeButton({\r\n                idRender: buttonProperties.id,\r\n                xpathContext: self.properties.xpathContext || \"\",\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true\r\n            });\r\n            executeButtonAction.tag = \"executeRule\";\r\n\r\n            commitAction = self.prepareCommitAction(buttonProperties.id);\r\n        }\r\n\r\n        if (buttonProperties.next || buttonProperties.back || buttonProperties.save || buttonProperties.createnewcase || buttonProperties.nextWithoutValidations) {\r\n            // Verify transitions\r\n            if (self.transitions) {\r\n                var transitions = [];\r\n                $.each(this.activeTransitions, function (key, value) {\r\n                    (value) ? transitions.push(key) : \"\";\r\n                });\r\n\r\n                if (bizagi.util.countProps(transitions) == 0) {\r\n                    bizagi.showMessageBox(bizagi.localization.getResource(\"render-widget-complexgateway-path\"), bizagi\r\n                        .localization.getResource(\"render-widget-complexgateway-error\"), \"info\", false);\r\n                    self.endLoading();\r\n                    defer.reject();\r\n                    return defer.promise();\r\n                }\r\n            }\r\n\r\n            if (data && data.deferreds) {\r\n                deferredsToWait = $.when.apply($, data.deferreds);\r\n                waitingDeferreds.push(deferredsToWait);\r\n                delete data.deferreds;\r\n            }\r\n\r\n\r\n            performAction = self.dataService.submitData({\r\n                action: self.getButtonAction(buttonProperties.action),\r\n                forcePlanCompletion: buttonProperties.forcePlanCompletion,\r\n                data: data,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true,\r\n                transitions: transitions || \"\",\r\n                contexttype: self.properties.contextType,\r\n                surrogatekey: self.properties.surrogateKey\r\n            });\r\n            performAction.tag = \"performAction\";\r\n        }\r\n\r\n        // Assemble the actions\r\n        var actions = [];\r\n\r\n        if (executeButtonAction) {\r\n            actions.push(submitDataAction);\r\n            actions.push(checkpointAction);\r\n            actions.push(executeButtonAction);\r\n            actions.push(commitAction);\r\n        }\r\n\r\n        if (performAction) {\r\n            actions.push(performAction);\r\n        }\r\n\r\n        // Execute the batch\r\n        bizagi.chrono.initAndStart(\"submitForm-ajax\");\r\n\r\n\r\n        //Evaluate if there are deferreds to evaluate, like inline add in grid, that must send a ADDRELATIONWITHDATA before to savedata\r\n        var flowControlDeferred = new $.Deferred();\r\n        if (data && data.deferreds) {\r\n            $.when.apply(this, data.deferreds)\r\n                .done(function (response) {\r\n                    flowControlDeferred.resolve(response);\r\n                })\r\n                .fail(function () {\r\n                    flowControlDeferred.reject();\r\n                    console.log(\"Error: It was not possible resolve async actions on form \")\r\n                })\r\n        } else {\r\n            flowControlDeferred.resolve();\r\n        }\r\n\r\n        waitingDeferreds.push(flowControlDeferred);\r\n\r\n        $.when.apply($, waitingDeferreds).done(function () {\r\n            $.when(self.dataService.multiaction().execute({actions: actions})).done(function (responses) {\r\n                bizagi.chrono.stop(\"submitForm-ajax\");\r\n                // End asynchronous operation\r\n                self.endLoading();\r\n                // Find validations\r\n                var bHasValidations;\r\n                var alertMessage = \"\";\r\n                $.each(responses, function (i, response) {\r\n\r\n                    var propertiesToDisplayMessages = self.validationToDisplayMessages(bHasValidations, response.result.type, response.result.messages, alertMessage);\r\n                    bHasValidations = propertiesToDisplayMessages.bHasValidations;\r\n                    alertMessage = propertiesToDisplayMessages.alertMessage;\r\n\r\n                });\r\n\r\n                if (!bHasValidations) {\r\n                    // Everything went ok .. succesfully response from the server\r\n                    if (!self.postProcessButton(responses, buttonProperties)) {\r\n                        return;\r\n                    }\r\n\r\n                    // After successfully response refresh the form\r\n                    if (buttonProperties.refresh) {\r\n                        self.refreshForm();\r\n                    }\r\n\r\n                    // If needs routing publish an event\r\n                    if (buttonProperties.routing) {\r\n                        bizagi.jqxhrList.abortAll(\"rendering_\" + self.dataService.guid);\r\n                        self.triggerHandler(\"routing\", {\r\n                            idCase: self.params.idCase,\r\n                            routingDisabled: buttonProperties.routingDisabled\r\n                        });\r\n                    }\r\n\r\n                    // Create case\r\n                    if (buttonProperties.createnewcase) {\r\n                        if (responses.length > 0) {\r\n                            bizagi.jqxhrList.abortAll(\"rendering_\" + self.dataService.guid);\r\n                            self.triggerHandler(\"routing\", {\r\n                                idCase: responses[0].result.IdCase,\r\n                                caseNumber: responses[0].result.CaseNumber\r\n                            });\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (alertMessage !== \"\") { /*If there is an alertMessage show in a modal error*/\r\n                        bizagi.modalError.show(alertMessage, 'workportal-general-word-information', false);\r\n                    }\r\n                    if (buttonProperties.executeRule) {\r\n                        self.sendRollbackAction(buttonProperties.id);\r\n                    }\r\n                }\r\n\r\n                defer.resolve();\r\n            }).fail(function (_, _, response) {\r\n                if (buttonProperties.executeRule) {\r\n                    self.sendRollbackAction(buttonProperties.id);\r\n                }\r\n\r\n                if (response && response.error && (response.error.errorType === \"WaitForCompletionPlanException\" ||\r\n                    response.error.errorType === \"InvalidPlanStateException\" || response.error.errorType === \"CustomMessageException\")) {\r\n                    self.endLoading();\r\n                    $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(response.error.message), null, false)).then(function () {\r\n                        return $.when(self.internalSubmitForm($.extend({}, buttonProperties, {forcePlanCompletion: true})));\r\n                    }).done(function () {\r\n                        defer.resolve();\r\n                    }).fail(function () {\r\n                        defer.reject();\r\n                    });\r\n                } else {\r\n                    self.failHandler(response);\r\n                    defer.reject(response);\r\n                }\r\n            });\r\n        });\r\n        return defer.promise();\r\n    },\r\n    validationToDisplayMessages: function (bHasValidations, messageType, message, alertMessage) {\r\n        var self = this;\r\n\r\n        if (messageType == \"validationMessages\") {\r\n            // Something went wrong, we gotta display messages in notifications grid\r\n            self.addValidationMessage(message);\r\n            bHasValidations = true;\r\n        }\r\n        if (bizagi.detectDevice() == \"desktop\" && messageType == \"alertMessages\") {\r\n            // Something went wrong, we gotta display alert message\r\n            if (alertMessage === \"\") {\r\n                alertMessage = message;\r\n            } else {\r\n                alertMessage = alertMessage + \"\\n\\n\" + message;\r\n            }\r\n\r\n            bHasValidations = true;\r\n        }\r\n\r\n        return {\"bHasValidations\": bHasValidations, \"alertMessage\": alertMessage};\r\n    },\r\n\r\n    /*\r\n    *   Add a validation message to the form\r\n    */\r\n    addValidationMessage: function (validationMessage, focus, icon, itemAdditionalClass, autofocus, type) {\r\n        var self = this;\r\n\r\n        // Clean messages for mobile offline\r\n        if (bizagi.util.isNativeMobileDevice() && !this.allowOnlineActions())\r\n            this.clearValidationMessages();\r\n\r\n        if (!self.validationController) {\r\n            self.validationController = new bizagi.command.controllers.validation(self);\r\n        }\r\n\r\n        if (typeof (validationMessage) == \"string\") {\r\n            self.validationController.showValidationMessage(validationMessage, focus, icon, itemAdditionalClass, type);\r\n        } else {\r\n            $.each(validationMessage, function (i, message) {\r\n                self.validationController.showValidationMessage(message, focus, icon, itemAdditionalClass, type);\r\n            });\r\n        }\r\n        self.validationController.expandNotificationBox(autofocus);\r\n    },\r\n    /*\r\n    *   Public method to perform validations externally\r\n    */\r\n    clearValidationMessages: function (params) {\r\n        var self = this;\r\n\r\n        // First hide and clear validation box\r\n        if (self.validationController) {\r\n            self.validationController.clearValidationMessages(params);\r\n        }\r\n\r\n    },\r\n    /*\r\n    *   Add an error message to the form\r\n    */\r\n    addErrorMessage: function (errorMessage) {\r\n        var self = this;\r\n\r\n        // Clean messages for mobile offline\r\n        if (bizagi.util.isNativeMobileDevice() && !this.allowOnlineActions())\r\n            this.clearValidationMessages();\r\n\r\n        self.validationController.showErrorMessage(errorMessage);\r\n        self.validationController.expandNotificationBox();\r\n    },\r\n    /*\r\n    *   Refresh the current form\r\n    */\r\n    refreshForm: function (focus) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var deferred = $.Deferred();\r\n\r\n        focus = focus || self.getFocus();\r\n\r\n        // Normalize new focus structure if not present\r\n        if (focus && !focus.id) {\r\n            focus = {\r\n                id: focus\r\n            };\r\n        }\r\n\r\n        var options = {\r\n            idCase: self.params.idCase || \"\",\r\n            idWorkitem: self.params.idWorkitem || \"\",\r\n            idTask: self.params.idTask || \"\",\r\n            focus: focus,\r\n            selectedTabs: self.getSelectedTabs(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            isRefresh: true,\r\n            contextType: self.getContextType() || \"\",\r\n            action: self.getEndPointAction(),\r\n            idStartScope: self.properties.idStartScope || \"\"\r\n        };\r\n\r\n        // Notify the refresh event so the consumer takes the decision about what to do\r\n        self.startLoading();\r\n        $.when(self.triggerHandler(\"refresh\", options)).done(function () {\r\n            self.endLoading();\r\n            deferred.resolve();\r\n        }).fail(function () {\r\n            self.endLoading();\r\n            deferred.reject();\r\n        });\r\n        return deferred.promise();\r\n    },\r\n    /*\r\n    *   Get opened tabs configuration\r\n    */\r\n    getSelectedTabs: function () {\r\n        var self = this;\r\n        var tabContainers = self.getElementsByType(\"tab\");\r\n        var tabs = $.map(tabContainers, function (tabContainer) {\r\n            return {tab: tabContainer.properties.id, selected: tabContainer.activeTab};\r\n        });\r\n        var selectedTabs = {};\r\n        for (var i = 0, length = tabs.length; i < length; i++) {\r\n            selectedTabs[tabs[i].tab] = tabs[i].selected;\r\n        }\r\n        return selectedTabs;\r\n    },\r\n    /*\r\n    *   Template method to get the buttons objects\r\n    */\r\n    getButtons: function () {\r\n    },\r\n    /*\r\n    *   Adds an action on the fly to process the submit on change\r\n    */\r\n    addSubmitAction: function (xpath, action) {\r\n        var self = this;\r\n        self.actionController.processInternalSubmitAction(xpath, action);\r\n    },\r\n    /**\r\n     *   Adds an overlay to the form, and sets a waiting message\r\n     *\r\n     *   @argument {bool} delay Apply delay\r\n     */\r\n    startLoading: function () {\r\n        var self = this;\r\n        var waitingTemplate = self.renderFactory.getTemplate(\"form-waiting\");\r\n\r\n        if (self.waitingOverlay && self.waitingMessage)\r\n            return;\r\n\r\n        // This hack is only for desktop\r\n        if (!bizagi.util.isTabletDevice()) {\r\n            // Detect canvas parent with scroll\r\n            var isSharePoint = self.params.context === \"sharepoint\";\r\n            var canvas = self.params.canvas;\r\n            if (isSharePoint) {\r\n                canvas = bizagi.util.scrollTop(canvas);\r\n\r\n                if (!!!canvas.context) {\r\n                    canvas = $(\"body\", $(document));\r\n                }\r\n            } else {\r\n                canvas = $(\"body\", $(document));\r\n            }\r\n\r\n            // Configures overlay\r\n            var size = this.getSize();\r\n            var position = this.getOffset();\r\n            if (size.height == $(window).height()) {\r\n                position.top = 0;\r\n            }\r\n            self.waitingOverlay = $('<div class=\"ui-widget-overlay\" />').appendTo(canvas);\r\n            self.waitingMessage = $.tmpl(waitingTemplate).appendTo(canvas);\r\n            self.waitingOverlay.css({\r\n                \"height\": \"100%\",\r\n                \"width\": \"100%\",\r\n                \"min-height\": size.height,\r\n                \"min-width\": size.width\r\n            });\r\n            self.waitingMessage.css({\r\n                \"top\": (position.top + Math.ceil((size.height - self.waitingMessage.outerHeight()) / 2)) + \"px\",\r\n                \"left\": (Math.ceil((size.width - self.waitingMessage.outerWidth()) / 2)) + \"px\"\r\n            });\r\n            canvas.css(\"position\", \"relative\");\r\n\r\n        } else {\r\n            // Configures overlay\r\n            self.waitingOverlay = $('<div class=\"ui-widget-overlay\" />').appendTo(\"body\", $(document));\r\n            self.waitingMessage = $.tmpl(waitingTemplate).appendTo(\"body\", $(document));\r\n        }\r\n    },\r\n    /*\r\n    *   Removes the overlay and restores the form edition\r\n    */\r\n    endLoading: function () {\r\n        var self = this;\r\n        if (self.waitingOverlay && self.waitingMessage) {\r\n            self.waitingOverlay.remove();\r\n            self.waitingMessage.remove();\r\n            self.waitingOverlay = null;\r\n            self.waitingMessage = null;\r\n\r\n            var canvas = self.params.canvas;\r\n\r\n            if (canvas != undefined)\r\n                canvas.css(\"position\", \"\");\r\n        }\r\n    },\r\n    /*\r\n    *   Get the focused render in the current request\r\n    */\r\n    getFocusedElement: function () {\r\n        var self = this;\r\n        return self.focus;\r\n    },\r\n    /*\r\n    *   Set the focused render in the current request\r\n    */\r\n    setFocusedElement: function (focus) {\r\n        var self = this;\r\n        self.focus = focus;\r\n    },\r\n    /*\r\n    *   Publish a global event that the facade will replicate\r\n    */\r\n    triggerGlobalHandler: function (eventType, data) {\r\n        return this.triggerHandler(\"globalHandler\", {eventType: eventType, data: data});\r\n    },\r\n    /*\r\n    *   Generic handler to attach fail workflow for some operations\r\n    */\r\n    failHandler: function (error) {\r\n        var self = this;\r\n\r\n        // Check if the error is in multiaction format\r\n        try {\r\n            error = JSON.parse(error);\r\n        } catch (e) {\r\n        }\r\n\r\n        //This double validation has the purpose to get the real error object from two different levels ( error.error or error.error.error )\r\n        if (error & error.length && error.length > 1) error = error[0];\r\n        if (error.error) error = error.error;\r\n        if (error.error) error = error.error;\r\n\r\n        // Handle normal messages\r\n        if (typeof error == \"object\" && error.message) {\r\n            if (error.errorType === \"WaitForCompletionPlanException\" || error.errorType === \"InvalidPlanStateException\" || error.errorType === \"CustomMessageException\") {\r\n                error = bizagi.localization.getResource(error.message);\r\n            } else {\r\n                error = error.message;\r\n            }\r\n\r\n        } else if (typeof error == \"string\") {\r\n            // Parse to json\r\n            try {\r\n                var errorJson = JSON.parse(error);\r\n                if (errorJson.errorType === \"WaitForCompletionPlanException\" || errorJson.errorType === \"InvalidPlanStateException\" || error.errorType === \"CustomMessageException\") {\r\n                    errorJson.message = bizagi.localization.getResource(errorJson.message);\r\n                }\r\n                error = errorJson.message;\r\n            } catch (e) {\r\n            }\r\n        }\r\n\r\n        // Workflow engine error, we gotta show it with error\r\n        self.addErrorMessage(error);\r\n        self.endLoading();\r\n    },\r\n    /* \r\n    *   Resizes the element\r\n    */\r\n    resize: function (size) {\r\n        // Just save the size, for reference\r\n        this.setSize(size);\r\n    },\r\n    /*\r\n    *   Sets the internal size for the form\r\n    */\r\n    setSize: function (size) {\r\n        this.size = size;\r\n    },\r\n    /*\r\n    *   Gets the internal size for the form\r\n    */\r\n    getSize: function () {\r\n        if (this.size) {\r\n            return this.size;\r\n        }\r\n        var canvas = (this.params.canvas) ? this.params.canvas : this.getFormContainer().container;\r\n\r\n        var canvasWidth = canvas.width();\r\n        var canvasHeight = canvas.height();\r\n\r\n        return {\r\n            width: canvasWidth,\r\n            height: canvasHeight\r\n        };\r\n    },\r\n    getOffset: function () {\r\n        var canvas = this.getFormContainer().container;\r\n\r\n        return canvas.offset();\r\n    },\r\n\r\n    /**\r\n     * This function execute action to save all data of render, but\r\n     * the server service dont execute any rule on the server\r\n     */\r\n    submitData: function (args) {\r\n        var self = this;\r\n\r\n        // Avoid the execution of server actions for mobile offline\r\n        if (bizagi.util.isNativeMobileDevice() && !this.allowOnlineActions())\r\n            return;\r\n\r\n        // Collect data\r\n        var data = self.collectRenderValuesForSubmit();\r\n\r\n        // Check is offline form        \r\n        var isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n        if (isOfflineForm && (self.properties && !self.properties.idPageCache)) {\r\n            self.properties.idPageCache = \"\";\r\n        }\r\n\r\n        // Mark data collected as original values\r\n        $.each(data, function (key, value) {\r\n            var renders = self.getRenders(key);\r\n            $.each(renders, function (i, render) {\r\n                render.updateOriginalValue();\r\n            });\r\n        });\r\n\r\n        // Don't do anything if there is no data\r\n        if ($.isEmptyObject(data)) {\r\n            return;\r\n        }\r\n\r\n        // Call the service\r\n        if (isOfflineForm) {\r\n            return $.when(self.dataService.submitData({\r\n                action: \"save\",\r\n                data: data,\r\n                xpathContext: self.properties.xpathContext,\r\n                contexttype: self.properties.contexttype || \"\",\r\n                isOfflineForm: isOfflineForm,\r\n                offlineType: self.params.offlineType,\r\n                idCase: self.params.idCase,\r\n                idWorkitem: self.params.idWorkitem\r\n            })).fail(function (message) {\r\n                message = self.processFailMessage(message);\r\n            });\r\n        } else {\r\n            return $.when(self.dataService.multiaction().submitData({\r\n                action: \"SUBMITDATA\",\r\n                data: data,\r\n                idPageCache: self.properties.idPageCache,\r\n                xpathContext: self.properties.xpathContext,\r\n                contexttype: self.properties.contexttype || \"\"\r\n            })).fail(function (message) {\r\n                message = self.processFailMessage(message);\r\n            });\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * This function send a request to the server to execute a rule\r\n     */\r\n    executeRule: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n        var deferred = $.Deferred();\r\n\r\n        // Concat inheritance context\r\n        if (properties.xpathContext !== \"\") {\r\n            xpathContext = (xpathContext !== \"\") ? properties.xpathContext + \".\" + xpathContext : properties.xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        $.when(self.dataService.multiaction().executeRule({\r\n            idPageCache: properties.idPageCache,\r\n            rule: args.rule,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            var type = message && message.type ? message.type : \"\";\r\n            var form = self.getFormContainer();\r\n\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages({clearOnlyServer: true});\r\n\r\n            if ([\"validationMessages\", \"alertMessages\"].includes(type)) {\r\n                if (type === \"alertMessages\") {\r\n                    bizagi.modalError && bizagi.modalError.show(message.messages.join(\"\\n\\n\"), 'workportal-general-word-information', false);\r\n                } else {\r\n                    form.addValidationMessage.apply(self, [message.messages, undefined, undefined, undefined, false, \"serverMessage\"]);\r\n                }\r\n\r\n                deferred.reject(message);\r\n            } else {\r\n                deferred.resolve(message);\r\n            }\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n            deferred.reject(message);\r\n        });\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    /**\r\n     * This function send a request to the server to execute an interface\r\n     */\r\n    executeInterface: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties.xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeInterface({\r\n            idPageCache: properties.idPageCache,\r\n            interface: args.interface,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages();\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage(message.messages);\r\n            }\r\n\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n    },\r\n    executeSAPConnector: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties.xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeSAPConnector({\r\n            idPageCache: properties.idPageCache,\r\n            guidsap: args.guidsap,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages();\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage(message.messages);\r\n            }\r\n\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n\r\n    },\r\n\r\n    executeConnector: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties\r\n                .xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeConnector({\r\n            idPageCache: properties.idPageCache,\r\n            guidConnector: args.guidConnector,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages();\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage(message.messages);\r\n            }\r\n\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n\r\n    },\r\n\r\n    /*\r\n    *   Re-binds pending actions that could not be set because the renders did not exist when the form loaded\r\n    */\r\n    refreshActions: function (actions) {\r\n        var self = this;\r\n        self.actionController.refreshActions(actions);\r\n    },\r\n\r\n    /***/\r\n    tryToExecuteFunction: function(xpath){\r\n        if (this.getMode() == \"execution\"){\r\n            this.actionController && this.actionController.tryToExecuteFunction(xpath);\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Re-binds pending actions that could not be set because the renders did not exist when the form loaded\r\n    */\r\n    removeActions: function () {\r\n        var self = this;\r\n        self.actionController.unbindActions();\r\n    },\r\n    /*\r\n    *   Iterate through all renders and collect the data to send, then update original values for each render\r\n    */\r\n    collectRenderValuesForSubmit: function (data) {\r\n        var self = this;\r\n        data = data || {};\r\n\r\n        // Collect data\r\n        self.collectRenderValues(data);\r\n\r\n        // Mark data collected as original values\r\n        $.each(data, function (key, value) {\r\n            var renders = self.getRenders(key);\r\n            $.each(renders, function (i, render) {\r\n                render.updateOriginalValue();\r\n            });\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param params {data, bRefreshForm,properties}\r\n     * @returns {*}\r\n     */\r\n    internalSubmitOnChange: function (params) {\r\n        params = params || {};\r\n        var self = this;\r\n        var properties = params.properties;\r\n        var defer = new $.Deferred();\r\n        var data = params.data || {};\r\n        var bRefreshForm = typeof (params.bRefreshForm) != \"undefined\" ? params.bRefreshForm : true;\r\n        var notCollect = params.notCollect ? params.notCollect : undefined;\r\n\r\n        // Collect data\r\n        if (!(notCollect && !$.isEmptyObject(data))) {\r\n            self.collectRenderValuesForSubmit(data);\r\n        }\r\n\r\n        self.startLoading();\r\n\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        $.when(deferredsToWait).then(function () {\r\n            // Submit the form\r\n            self.dataService.multiaction().submitData({\r\n                action: \"SUBMITONCHANGE\",\r\n                data: data,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: properties.idPageCache,\r\n                contexttype: properties.contexttype\r\n            }).done(function (response) {\r\n                // Cancel previous multiactions and process property value\r\n                self.cancelPreviousRequest();\r\n                // After successfully response refresh the form\r\n                self.endLoading();\r\n                // If response message has error in validation, do not refresh the form\r\n                // and show validation message\r\n                if (response && response.type == \"validationMessages\") {\r\n                    if (typeof self.clearValidationMessages == \"function\") {\r\n                        self.clearValidationMessages();\r\n                    }\r\n\r\n                    self.addValidationMessage(response.messages);\r\n                    defer.resolve();\r\n                } else if (bRefreshForm) {\r\n                    var focusIdentifier = {\r\n                        id: properties.id,\r\n                        xpath: properties.xpath\r\n                    };\r\n                    if (properties.idCase !== undefined) {\r\n                        $.extend(focusIdentifier, {\r\n                            idCaseObject: bizagi.cache.idCaseObject\r\n                        });\r\n                    }\r\n                    if (response.IdScope) {\r\n                        self.properties.idStartScope = response.IdScope;\r\n                    }\r\n                    $.when(self.refreshForm(focusIdentifier)).done(function () {\r\n                        defer.resolve();\r\n                    }).fail(function () {\r\n                        defer.resolve();\r\n                    });\r\n                } else {\r\n                    defer.resolve();\r\n                }\r\n            }).fail(function (message) {\r\n                self.endLoading();\r\n                var objMessage = typeof message == 'object' ? message.responseText ? JSON.parse(message.responseText) : message : {};\r\n                var strMessage = objMessage.message || message;\r\n                // Clear previous validations\r\n                self.validationController.clearValidationMessages();\r\n                if (objMessage.type == \"alert\") {\r\n                    self.validationController.showAlertMessage(strMessage);\r\n                } else {\r\n                    self.validationController.showErrorMessage(strMessage);\r\n                }\r\n                defer.resolve();\r\n            });\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    cancelPreviousRequest: function () {\r\n        if (bizagi.multiactionConnection && bizagi.multiactionConnection.length) {\r\n            var length = bizagi.multiactionConnection.length;\r\n            var i = 0, connection;\r\n            for (; i < length; i++) {\r\n                connection = bizagi.multiactionConnection.pop();\r\n                if (connection && connection.abort) {\r\n                    bizagi.showErrorAlertDialog = false;\r\n                    connection.abort();\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    prepareCheckpointAction: function (buttonId) {\r\n        var self = this;\r\n\r\n        var checkpointAction = self.dataService.sendCheckpoint({\r\n            url: self.properties.checkpointUrl,\r\n            idRender: buttonId,\r\n            xpath: \"\",\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache,\r\n            prepare: true\r\n        });\r\n\r\n        checkpointAction.tag = \"checkpoint\";\r\n\r\n        return checkpointAction;\r\n    },\r\n\r\n    prepareCommitAction: function (buttonId) {\r\n        var self = this;\r\n\r\n        var commitAction = self.dataService.commitLinkForm({\r\n            url: self.properties.commitUrl,\r\n            idRender: buttonId,\r\n            xpath: \"\",\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache,\r\n            prepare: true\r\n        });\r\n\r\n        commitAction.tag = \"commit\";\r\n\r\n        return commitAction;\r\n    },\r\n\r\n    sendRollbackAction: function (buttonId) {\r\n        var self = this;\r\n\r\n        self.dataService.rollbackLinkForm({\r\n            url: self.properties.rollbackUrl,\r\n            idRender: buttonId,\r\n            xpath: \"\",\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache\r\n        });\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n        self.endLoading();\r\n\r\n        setTimeout(function () {\r\n            if (self.params) {\r\n                delete self.params.canvas;\r\n            }\r\n            delete self.params;\r\n            delete self.control;\r\n            if (self.validationController) {\r\n                self.unbind(\"rendervalidate\");\r\n                delete self.validationController;\r\n            }\r\n\r\n            if (self.actionController) {\r\n                self.actionController.unbindActions();\r\n                delete self.actionController;\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    },\r\n    getButton: function (guid) {\r\n        return $(\".ui-bizagi-button[data-id='\" + guid + \"']\", this.container);\r\n    },\r\n\r\n    getFloatingButton: function (guid) {\r\n        return $(\"li[data-id='\" + guid + \"']\", this.container);\r\n    },\r\n\r\n    propagateExternalEvents: function (evt) {\r\n        // Menu-Overflow\r\n        var $menuOverflow = $(\".bz-overflow-menu\");\r\n        if ($menuOverflow)\r\n            $(document).trigger('click.overflow');\r\n\r\n        // ECM with preview image\r\n        var zoomIsOpen = $(\".jquery-image-zoom\") && $(\".jquery-image-zoom\").css(\"display\") == \"block\";\r\n\r\n        if (zoomIsOpen)\r\n            $(\"div.jquery-image-zoom a\").click();\r\n    },\r\n\r\n    getButtonAction: function (action) {\r\n        return this.allowValidateAndSaveAction && action === \"validate\" ? \"save\" : action;\r\n    },\r\n\r\n    /**\r\n     * Add handlers to network management\r\n     */\r\n    configureNetworkHandlers: function () {\r\n        var self = this;\r\n        self.online = bizagi.util.isConnected();\r\n        if(self.isOfflineForm && (bizagi.util.isMobileDevice() && (\"\" + BIZAGI_ENVIRONMENT).toLowerCase() === \"debug\")){\r\n            self.online = false;\r\n        }\r\n\r\n        // Update the online status based on connectivity\r\n        if (bizagi.util.isNativeMobileDevice() || (bizagi.util.isMobileDevice() && (\"\" + BIZAGI_ENVIRONMENT).toLowerCase() === \"debug\")) {\r\n            $(document).off(\"online.form\");\r\n            $(document).on(\"online.form\", this.handleConnectionChange.bind(self));\r\n\r\n            $(document).off(\"offline.form\");\r\n            $(document).on(\"offline.form\", this.handleConnectionChange.bind(self));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Event handler\r\n     * @param event\r\n     */\r\n    handleConnectionChange: function (event) {\r\n        var form = this.getFormContainer();\r\n        if (bizagi.util.isMobileDevice() && (\"\" + BIZAGI_ENVIRONMENT).toLowerCase() === \"debug\"){\r\n            this.online = event.type === \"online\";\r\n        }\r\n        else{\r\n            this.online = bizagi.util.isConnected();\r\n        }\r\n\r\n        // You lost connection.\r\n        if (event.type === \"offline\") {\r\n            form.triggerHandler(\"offlineForm\");\r\n        }\r\n\r\n        // You are now back online.\r\n        if (event.type === \"online\") {\r\n            form.triggerHandler(\"onlineForm\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if allow to call the button actions\r\n     * @returns {boolean|*}\r\n     */\r\n    allowOnlineActions: function () {\r\n        if (typeof (this.online) === \"undefined\") return true;\r\n        return this.online || (!this.online && this.isOfflineForm);\r\n    }\r\n\r\n});\r\n","/**\r\n * Render a new type of form called template\r\n *\r\n * @author Edward Morales\r\n */\r\n$.Class.extend(\"bizagi.rendering.formTemplate\", {\r\n\r\n    /**\r\n     *   Constructor\r\n     */\r\n    init: function (params) {\r\n        this._super(params);\r\n        if(params.paramsRender && params.paramsRender.contextEvent){\r\n            self.contextEvent = params.paramsRender.contextEvent;\r\n        }\r\n    },\r\n\r\n\t/**\r\n\t * Process controls on template\r\n\t * @param template\r\n\t * @param controls\r\n\t * @return {*}\r\n\t */\r\n\tprocessTemplate: function(template, controls) {\r\n\t    var regexControl = /\\{\\{([\\w:]*)\\s*(\\{[\"':,-\\[\\]\\w\\s]*\\})\\}\\}/g;\r\n\t\tvar regexRepeater = /\\{\\{(((repeater)\\s*(\\{[\"':,-\\[\\]\\w\\s]*\\}))|([\\/repeater]+:item)|(\\/repeater)|(repeater)|(separator))\\}\\}/g;\r\n\r\n\t\t// Remove all repeaters key words\r\n\t\tvar processedTemplate = template.replace(regexRepeater, \"\");\r\n\r\n\t\t// replace controls\r\n\t\tprocessedTemplate = processedTemplate.replace(regexControl, function(match, g1, g2, offset, string) {\r\n\t\t    var parameters = JSON.parse(g2);\r\n            \r\n\t\t\treturn controls[parameters.id] || '';\r\n\t\t});\r\n\r\n\t    processedTemplate = processedTemplate.replace(/{{([\\w:]*)\\s*}}/g, function() {\r\n\t        return '';\r\n\t    });\r\n\r\n\r\n\t\treturn processedTemplate;\r\n\t},\r\n\r\n\t/**\r\n\t * Render layout container\r\n\t * @return {*}\r\n\t */\r\n\trenderContainer: function() {\r\n\t\tvar self = this;\r\n\t\tvar layoutCollection = self.getRenderByType(\"layout\");\r\n\t\tvar layout = (layoutCollection.length > 0) ? layoutCollection[0] : {};\r\n\t\tvar template = (typeof layout.getTemplate == \"function\") ? layout.getTemplate() : \"\";\r\n\t\tvar css = (typeof layout.getCss == \"function\") ? layout.getCss() : \"\";\r\n\t\tvar mode = self.getMode();\r\n\t\tvar layoutGuid = self.properties.layoutguid || Math.guid();\r\n\r\n\t\tvar controls = {};\r\n\r\n\t\t/**\r\n\t\t * Render all elements within first layout container\r\n\t\t */\r\n\t\tif(layout.children) {\r\n\t\t\t$.each(layout.children, function(i, child) {\r\n\t\t\t    // ignore layoutPlaceholder control in execution\r\n\t\t\t    if (!(mode == 'execution' && child.properties.type == 'layoutPlaceholder')) {\r\n\r\n\t\t\t        var type = child.getElementType();\r\n\t\t\t        if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n\t\t\t            controls[child.properties.id] = child.renderElement();\r\n\t\t\t        }\r\n\t\t\t        if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n\t\t\t            controls[child.properties.id] = child.renderContainerHtml();\r\n\t\t\t        }\r\n\t\t\t        self.childrenHash[child.properties.uniqueId] = child;\r\n\t\t\t    }\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Load css\r\n\t\tbizagi.util.loadStyle(css, layoutGuid);\r\n\r\n\t\treturn self.processTemplate(template, controls);\r\n\t},\r\n\r\n    /**\r\n     * Get the context in which loads the formTemplate\r\n     *\r\n     */\r\n    getContextEvent: function(){\r\n        return self.contextEvent;\r\n    }\r\n});\r\n","$.Class.extend(\"bizagi.rendering.layout\", {}, {\r\n\r\n\t/**\r\n\t * Get html template\r\n\t * @return {*}\r\n\t */\r\n\tgetTemplate: function() {\r\n\t    var self = this;\r\n\t    var mode = self.getMode();\r\n\t    var html = self.properties.html || \"\";\r\n\r\n        // Add a container, this is important in design to calculate the scroll \r\n\t    if (mode == 'design' && html) {\r\n            html = \"<div class='bz-design-template'>\" + html + \"</div>\"\r\n\t    }\r\n\t\t\r\n\t\treturn bizagi.util.stripslashes(html);\r\n\t},\r\n\r\n\t/**\r\n\t * Get string css of layout container\r\n\t * @return {*}\r\n\t */\r\n\tgetCss: function() {\r\n\t    var self = this;\r\n\t\tvar css = self.properties.css || \"\";\r\n\r\n\t\tvar mode = self.getMode();\r\n\t\tif (mode == \"design\") {\r\n\t\t    css = css && css.desktop;\r\n\t\t}\r\n\r\n\t\treturn bizagi.util.stripslashes(css);\r\n\t},\r\n\r\n\r\n\t/*\r\n\t *   Template method to process each jquery object\r\n\t *   must be overriden in each container\r\n\t */\r\n\tpostRenderContainer: function(container) {\r\n\t\tvar self = this;\r\n\t\tvar mode = self.getMode();\r\n\r\n\t\t// Resolve rendering deferred\r\n\t\tif(self.renderingDeferred)\r\n\t\t\tself.renderingDeferred.resolve();\r\n\r\n\t\t// Process children elements\r\n\t\tself.container = container;\r\n\t\tself.executeChildrenPostRender(container);\r\n\r\n\t\tif(mode == \"execution\") {\r\n\t\t\t// Apply handlers\r\n\t\t\tself.configureHandlers();\r\n\t\t}\r\n\t\tif(mode == \"design\") {\r\n\t\t\t// Configure view\r\n\t\t\tself.configureDesignView();\r\n\t\t}\r\n\t\tif(mode == \"layout\") {\r\n\t\t\t// Configure view\r\n\t\t\tself.configureDesignView();\r\n\t\t\tself.configureLayoutView();\r\n\t\t}\r\n\t}\r\n});","/*\r\n*   Name: BizAgi Accordion Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a accordion container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.accordion\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Enumerate the children appending a property\r\n        $.each(self.children, function (i, child) {\r\n            child.properties.ordinal = i;\r\n        });\r\n    },\r\n\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"accordion\");\r\n\r\n        // Render the accordion\r\n        var html = $.fasttmpl(template, {\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Accordion Item Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a accordion item class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.accordionItem\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"accordionItem\");\r\n\r\n        // Render the accordionItem\r\n        var html = $.fasttmpl(template, {\r\n            id: properties.id,\r\n            ordinal: properties.ordinal,\r\n            displayName: properties.displayName,\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Fires when the accordionItem is selected \r\n    */\r\n    activate: function () {\r\n        var self = this;\r\n        self.active = true;\r\n    },\r\n\r\n    /*  \r\n    *   Return the current focuses container\r\n    */\r\n    getFocus: function () {\r\n        var self = this;\r\n        var focus = self._super();\r\n        if (bizagi.util.isEmpty(focus) && self.active) {\r\n            focus = self.properties.id;\r\n        }\r\n\r\n        return focus;\r\n    }\r\n\r\n\r\n});\r\n\r\n","/*\r\n*   Name: Bizagi Render CollectionNavigator\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define basic stuff for collection navigator renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.collectionnavigator\", {}, {\r\n\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        self._super(params);\r\n\r\n        var properties = self.properties;\r\n        properties.allowAdd = (typeof properties.allowAdd != \"undefined\") ? bizagi.util.parseBoolean(properties.allowAdd) : true;\r\n        properties.withAddForm = properties.withAddForm && properties.allowAdd;\r\n        properties.allowEdit = (typeof properties.allowEdit != \"undefined\") ? bizagi.util.parseBoolean(properties.allowEdit) : true;\r\n        properties.withEditForm = properties.withEditForm && properties.allowEdit;\r\n        properties.allowDetail = (typeof properties.allowDetail != \"undefined\") ? bizagi.util.parseBoolean(properties.allowDetail) : false;\r\n        properties.inlineAdd = (typeof properties.inlineAdd != \"undefined\") ? bizagi.util.parseBoolean(properties.inlineAdd) : true;\r\n        properties.inlineAdd = properties.inlineAdd && properties.allowAdd;\r\n        properties.inlineEdit = (typeof properties.inlineEdit != \"undefined\") ? bizagi.util.parseBoolean(properties.inlineEdit) : true;\r\n        properties.inlineEdit = properties.inlineEdit && properties.allowEdit;\r\n        properties.allowDelete = (typeof properties.allowDelete != \"undefined\") ? bizagi.util.parseBoolean(properties.allowDelete) : true;\r\n\r\n        self.orientation = self.properties.orientation || \"ltr\",\r\n        self.data = self.properties.data;\r\n        self.keys = self.data ? self.getKeys(self.data.rows) : [];\r\n        self.pointer = 0;\r\n        self.totalRows = 0;\r\n        self.inlineAddRecords = [];\r\n\r\n        if (self.data) {\r\n            self.totalRows = self.data.rows.length;\r\n        }\r\n    },\r\n    /*\r\n    * Normalize keys\r\n    */\r\n    getKeys: function (rows) {\r\n        rows = rows || [];\r\n        var keys = [];\r\n\r\n        for (var i = 0, l = rows.length; i < l; i++) {\r\n            var row = rows[i];\r\n            keys.push(row[0]);\r\n        }\r\n        return keys;\r\n    },\r\n\r\n    /*\r\n    *   Render the control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var templateItem = \"collectionnavigator\";\r\n        var template = self.renderFactory.getTemplate(templateItem);\r\n        var mode = self.getMode();\r\n\r\n        // Render the container\r\n        var html = $.fasttmpl(template, {\r\n            uniqueId: properties.uniqueId,\r\n            displayName: properties.displayName ? properties.displayName : \"\",\r\n            id: properties.id,\r\n            guid: properties.guid,\r\n            showPreview: self.showPreview(),\r\n            mode: mode,\r\n            orientation: self.getFormContainer().properties.orientation\r\n        });\r\n\r\n        html = self.drawControls(html);\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    * Render version readonly of control\r\n    */\r\n    renderReadOnly: function () {        \r\n        return this.renderControl();\r\n    },\r\n\r\n    /*\r\n    * Draw navigation controls\r\n    */\r\n    drawControls: function (html) {\r\n\r\n    },\r\n\r\n    /*\r\n    *  render several actions in the navigation palete\r\n    *  ex. save, cancel \r\n    */\r\n    drawActions: function (controls) {\r\n\r\n    },\r\n\r\n    /*\r\n    * Render navigation controls (next, previous, last, first. etc )\r\n    */\r\n    drawControl: function (controls) {\r\n\r\n    },\r\n\r\n    /*\r\n    * Draw forms options (add form, edit form, navigation form)\r\n    */\r\n    drawForms: function (controls) {\r\n\r\n    },\r\n\r\n    /*\r\n    * Draw a preview views, it will be show when the collection hasn't records\r\n    */\r\n    drawPreview: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var templateItem = (mode === \"execution\") ? \"collectionnavigator-execution\" : \"collectionnavigator-preview\";\r\n        var template = self.renderFactory.getTemplate(templateItem);\r\n        var html = $.tmpl(template);\r\n\r\n        self.canvas.append(html);\r\n\r\n    },\r\n\r\n    /*\r\n    * Returns true if the collection has data\r\n    */\r\n    hasData: function () {        \r\n        return this.getTotalRows() > 0;\r\n    },\r\n\r\n    /*\r\n    * Returns the key of current row\r\n    */\r\n    getRow: function () {        \r\n        return this.keys[this.pointer];\r\n    },\r\n\r\n    /*\r\n    * Returns the key of next row\r\n    */\r\n    getNextRow: function () {\r\n        var self = this;\r\n\r\n        if (self.getTotalRows() > (self.pointer + 1))\r\n            self.pointer += 1;\r\n\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the key of previous row\r\n    */\r\n    getPreviousRow: function() {\r\n        var self = this;\r\n\r\n        if (self.pointer > 0)\r\n            self.pointer -= 1;\r\n\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the key of first row\r\n    */\r\n    getFirstRow: function () {\r\n        var self = this;\r\n\r\n        self.pointer = 0;\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the key of last row\r\n    */\r\n    getLastRow: function () {\r\n        var self = this;\r\n\r\n        self.pointer = self.keys.length - 1;\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the total numbers of rows in collection\r\n    */\r\n    getTotalRows: function () {        \r\n        return this.keys.length;\r\n    },\r\n\r\n    getIndexes: function () {        \r\n        return this.properties.data.rows;\r\n    },\r\n\r\n    /*\r\n    * Sets the pointer to a specific position\r\n    */\r\n    setPointer: function (index) {        \r\n        this.pointer = index - 1;\r\n    },\r\n\r\n    /*\r\n    * Returns true is there is a inline row pending to save\r\n    */\r\n    isTherePendingInlineRow: function() {\r\n        return this.inlineAddRecords.length > 0;\r\n    },\r\n\r\n    /*\r\n    * Adds new row to collection\r\n    */\r\n    addKey: function (newId) {        \r\n        this.keys.push(newId);\r\n    },\r\n\r\n    /*\r\n    * Removes row in collection\r\n    */\r\n    removeKey: function () {\r\n        var self = this;\r\n        var index = self.pointer;\r\n\r\n        if (index >= 0) {\r\n            self.keys.splice(index, 1);\r\n\r\n            var totalRows = self.getTotalRows();\r\n            if (totalRows > 0 && index >= totalRows) {\r\n                self.setPointer(totalRows);\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Returns true if the control should show the preview view\r\n    * ex. if the collection is empty \r\n    */\r\n    showPreview: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var properties = self.properties;\r\n\r\n        if (mode == \"execution\") {\r\n            return !self.hasData();\r\n        } else {\r\n            return !bizagi.util.parseBoolean(properties.navigationform);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Returns the parameters needed for the request\r\n    */\r\n    getParameters: function (params) {\r\n        var self = this;\r\n\r\n        var parameters = {};\r\n        var properties = self.properties;\r\n        var recordXpath = properties.xpath + \"[id=\" + params.id + \"]\";\r\n\r\n        parameters.idRender = properties.id;\r\n        parameters.recordXPath = recordXpath;\r\n        parameters.xpathContext = properties.xpathContext;\r\n        parameters.idPageCache = properties.idPageCache;\r\n        parameters.requestedForm = params.requestedForm;\r\n        parameters.contextType = properties.contextType || properties.contexttype;\r\n        parameters.url = params.url;\r\n        parameters.editable = params.editable;\r\n        orientation: properties.orientation || \"ltr\";\r\n\r\n\r\n        return parameters;\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection navigator add record request\r\n    *   Returns a deferred when done, the server returns an id for the new record\r\n    */\r\n    submitAddRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var request = self.dataService.addGridRecord({\r\n            url: properties.addUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType || properties.contexttype,\r\n            idPageCache: properties.idPageCache,\r\n            orientation: properties.orientation || \"ltr\"\r\n        });\r\n\r\n        var filterResponse = request.pipe(function (data) {\r\n            // Parses response\r\n            return data.idEntity;\r\n        });\r\n\r\n        return filterResponse.promise();\r\n    },\r\n\r\n    /*\r\n    *   Submits a edit record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitEditRequest: function (id) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        return self.dataService.editGridRecord({\r\n            url: properties.editUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType || properties.contexttype || '',\r\n            orientation: properties.orientation || \"ltr\"\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection delete record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitDeleteRequest: function (id) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        return self.dataService.deleteGridRecord({\r\n            url: properties.deleteUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType || properties.contexttype\r\n        }).pipe(function (data) {\r\n            if (data.type == \"validationMessages\") {\r\n                var form = self.getFormContainer();\r\n                var message = data.messages.join(\" \");\r\n                form.failHandler({ message: message });\r\n            }\r\n\r\n            return data;\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection navigator edit record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitSaveRequest: function (id, data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = $.Deferred();\r\n\r\n        // Calculate xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + properties.xpath + \"[id=\" + id + \"]\" : properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        $.when(deferredsToWait).then(function() {\r\n\r\n            self.dataService.saveGridRecord({\r\n                url: properties.saveUrl,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: xpathContext,\r\n                contexttype: properties.contextType || properties.contexttype || \"\",\r\n                submitData: data\r\n            }).done(function(response) {\r\n                defer.resolve(response);\r\n            }).fail(function (dataFail) {\r\n                var form = self.getFormContainer();\r\n                var message = (dataFail.responseText) ? dataFail.responseText : ((typeof dataFail == \"string\") ? dataFail : dataFail.toString());\r\n                //Convert String to object\r\n                if (typeof message == \"string\") {\r\n                    try {\r\n                        message = JSON.parse(message).message;\r\n                    } catch (e) {\r\n                        message = message.match(/\"message\":(.*)\",/)[0];\r\n                        message = message.substr(11, message.length - 13);\r\n                    }\r\n    \r\n                } else if (!message.message) {\r\n                    message = dataFail;\r\n                }\r\n                form.validateForm();\r\n                form.clearValidationMessages();\r\n                form.addValidationMessage(message);\r\n            });\r\n\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection navigator rollback request\r\n    *   Returns a deferred when done\r\n    */\r\n    submitRollbackRequest: function (error) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.rollbackGridAction({\r\n            url: properties.rollbackUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: error.idPageCache,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        });\r\n    },\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set params\r\n        params = params || {};\r\n        $.extend(params, {\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType || properties.contexttype,\r\n            idPageCache: properties.idPageCache\r\n\r\n        });\r\n\r\n        return self.dataService.getData(params);\r\n    },\r\n\r\n    isValid: function (invalidElements) {\r\n        var form = this.form;\r\n\r\n        if (typeof (form) !== \"undefined\") {\r\n            (form.children || []).forEach(function (child) {\r\n                if (child.properties.visible) {\r\n                    if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                        // Go though container\r\n                        child.isValid(invalidElements);\r\n\r\n                    } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                        // Go to the render\r\n                        if (!child.isValid(invalidElements)) {\r\n                            var content = invalidElements[invalidElements.length - 1];\r\n                            invalidElements[invalidElements.length - 1] = $.extend(content, {\r\n                                id: child.properties.id\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        return invalidElements.length === 0;\r\n    },\r\n\r\n    validateControls: function(invalidElements) {\r\n        if (!this.form) return false;\r\n        return this.form.validationController.performValidations(invalidElements);\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Group Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a group container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.group\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Default properties\r\n        var properties = self.properties;\r\n\r\n        properties.helpText = properties.helpText || properties.displayName;\r\n\r\n        // Extend css property \r\n        properties.cssclass = properties.cssclass || \"cssClassContainer\";\r\n\r\n        properties.collapse = (typeof properties.collapse != \"undefined\" && bizagi.util.parseBoolean(properties.collapse)) ? true : false;\r\n    },\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"group\");\r\n\r\n        // Define icons\r\n        self.expandedIcon = self.getExpandedIcon();\r\n        self.collapsedIcon = self.getCollapsedIcon();\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            expandedClassIcon: self.expandedIcon,\r\n            displayName: properties.displayName,\r\n            editable: properties.editable,\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            collapse: properties.collapse,\r\n            isDesign: (self.getMode() !== \"execution\"),            \r\n            messageValidation: properties.messageValidation,\r\n            cssclass: properties.cssclass,\r\n            guid: properties.guid\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Returns the expanded icon\r\n    */\r\n    getExpandedIcon: function () { },\r\n\r\n    /*\r\n    *   Returns the collapsed icon\r\n    */\r\n    getCollapsedIcon: function () { },\r\n\r\n    /* \r\n    *   Expands or collapse the container \r\n    */\r\n    toogleContainer: function (argument, bImmediate) { }\r\n\r\n});","/*\r\n*   Name: BizAgi Horizontal Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a tab item class for all devices\r\n*/\r\n\r\n\r\n$.Class.extend(\"bizagi.rendering.horizontal\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"horizontal\");\r\n\r\n        // Render the container\r\n        var html = $.fasttmpl(template, {\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Panel Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a panel container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.panel\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function(params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Override properties\r\n        var properties = self.properties;\r\n        properties.displayName = properties.displayName || \"\";\r\n    },\r\n\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function() {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"panel\");\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            displayName: properties.displayName,\r\n            loading: properties.loading,\r\n            message: properties.message,\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            cssClass: properties.cssclass\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Process the html rendering object\r\n    */\r\n    postRenderContainer: function(panel) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set height\r\n        if (properties.height) {\r\n            panel.height(properties.height);\r\n        }\r\n\r\n        // Call base\r\n        self._super(panel);\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Panel Container Class\r\n*   Author: David Romero\r\n*   Comments:\r\n*   -   This script will define a panel container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.contentPanel\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Override properties\r\n        var properties = self.properties;\r\n        properties.displayName = properties.displayName || \"\";\r\n    },\r\n\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"contentPanel\");\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            displayName: properties.displayName,\r\n            mode: self.getMode(),\r\n            uniqueId: properties.uniqueId,\r\n            isDesign: self.getMode() === \"design\",\r\n            messageValidation: properties.messageValidation,\r\n            cssClass: properties.cssclass,\r\n            guid: properties.guid\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Process the html rendering object\r\n    */\r\n    postRenderContainer: function (panel) {\r\n        // Call base\r\n        this._super(panel);\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Panel Container Class\r\n *   Author: Bizagi UI Forms\r\n *   Comments:\r\n *   -   This script will define a panel container class for all devices\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.searchForm\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"searchForm\");\r\n\r\n        if (properties.contexttype !== \"entity\" && self.parent) {\r\n            properties.contexttype = (typeof self.parent.getContextType == 'function') ? self.parent.getContextType() : \"\";\r\n        }\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            displayName: properties.displayName,\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n\r\n        // Render result\r\n        html = html.replaceFirstWithoutPatterns(\"{{result}}\", self.renderResult());\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Perform a search and render the results\r\n    */\r\n    performSearch: function (searchParams) {\r\n        var properties = this.properties;\r\n\r\n        // Set parameter to search\r\n        properties.searchParams = searchParams;\r\n\r\n        // Submit the search to the server\r\n        this.submitSearch();\r\n    },\r\n\r\n    /*\r\n    *   Submits the query to the server\r\n    */\r\n    submitSearch: function () {\r\n        // Makes the results to update its contents\r\n        this.refreshResults();\r\n    },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        return this.parent.ready();\r\n    },\r\n\r\n    /*\r\n    *   Method to fill the result data\r\n    *   (THIS IS CALLED WITHIN GRID RENDER SCOPE)\r\n    */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        // Collect data\r\n        var data = self.collectSearchValues();\r\n\r\n        if (bizagi.util.isMapEmpty(data)) {\r\n            bizagi.showMessageBox(this.getResource(\"render-search-advanced-no-filters\"), this.getResource(\"render-form-dialog-box-search\"), \"error\");\r\n            return null;\r\n        }\r\n\r\n        params.rows = (properties.searchParams && properties.searchParams.maxRecords && properties.searchParams.maxRecords > 0) ? properties.searchParams.maxRecords : params.rows;\r\n\r\n        // The Grid only support one row per page in smartphone (DRAGON-41733 / QAF-3916)         \r\n        if (properties.searchParams && typeof (properties.searchParams.maxRows) !== \"undefined\") {\r\n            params.rows = properties.searchParams.maxRows || params.rows;\r\n        }\r\n\r\n        // Resolve with remote data\r\n        self.dataService.submitSearch($.extend(params, {\r\n            url: properties.dataUrl,\r\n            idRender: properties.idRender,\r\n            idPageCache: properties.idPageCache,\r\n            idSearchForm: properties.id,\r\n            allowFullSearch: (properties.searchParams.allowFullSearch ? properties.searchParams.allowFullSearch : null),\r\n            maxRecords: (properties.searchParams.maxRecords > 0 ? properties.searchParams.maxRecords : null),\r\n            criteria: data\r\n\r\n        })).done(function (response) {\r\n\r\n            // Resolve with fetched data    \r\n            properties.page = response.page;\r\n            properties.records = response.records;\r\n            properties.totalPages = response.totalPages || 0;\r\n\r\n            //In tablets are allowed about 10000 records as maximum\r\n            if (response.records > 10000) {\r\n                properties.deviceMaxRecordsExceeded = true;\r\n                response.deviceMaxRecordsExceeded = true;\r\n            } else {\r\n                delete properties.deviceMaxRecordsExceeded;\r\n            }\r\n\r\n            defer.resolve(response);\r\n\r\n            // Call virtual method\r\n            self.onSearchFinished();\r\n        }).fail(function (errorObject) {\r\n            bizagi.showErrorAlertDialog = false;\r\n            if (errorObject.responseText) {\r\n                try {\r\n                    var message = JSON.parse(errorObject.responseText).message;\r\n                    bizagi.showMessageBox(message, \"\", \"error\");\r\n                } catch (e) {\r\n                }\r\n            }\r\n            defer.reject();\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Iterate through all the renders in the container and fills the hashtable\r\n    *   - Overriden because server needs this in array\r\n    */\r\n    collectSearchValues: function () {\r\n        var self = this;\r\n\r\n        // Collect data\r\n        var data = {};\r\n        this.collectRenderValues(data);\r\n\r\n        // Changes to array\r\n        var submitArray = [];\r\n        for (key in data) {\r\n            var xpath = key;\r\n            var value = data[key];\r\n            var operation = self.getCriteriaOperation(self.getRender(xpath));\r\n            var criteriaData = {};\r\n            if (!bizagi.util.isEmpty(value)) {\r\n                criteriaData[\"xpath\"] = xpath;\r\n                criteriaData[\"value\"] = value;\r\n                criteriaData[\"operation\"] = operation;\r\n                submitArray.push(criteriaData);\r\n            }\r\n        }\r\n\r\n        return submitArray;\r\n    },\r\n\r\n    /*\r\n    *   This method find out the criterial operation to be executed according to\r\n    *   data type. Text renders use LIKE operation, but other data types such like\r\n    *   numerics use exact match operatiors\r\n    */\r\n    getCriteriaOperation: function (render) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var operation = \"EQUALS\";\r\n        if (render.properties.dataType == \"15\") {\r\n            if (typeof render.properties.typeSearch === \"undefined\" || render.properties.typeSearch === \"approx\") {\r\n                if (properties.allowFullSearch) {\r\n                    operation = \"FULLLIKE\";\r\n                } else {\r\n                    operation = \"LIKE\";\r\n                }\r\n            }\r\n        }\r\n        return operation;\r\n    },\r\n\r\n    /*\r\n    *   Render the result controls for the query\r\n    *   Resolved in each device\r\n    */\r\n    renderResult: function () {\r\n    },\r\n\r\n    /*\r\n    *   Refresh the result panel, making it to query data with current criteria\r\n    */\r\n    refreshResults: function () {\r\n    },\r\n\r\n    /*\r\n    *   Function to parse the dataType\r\n    */\r\n    parseAdditionalProperties: function (dataType) {\r\n\r\n        // Number\r\n        if (dataType == 1 || dataType == 2 || dataType == 3 ||\r\n            dataType == 4 || dataType == 6 || dataType == 7 ||\r\n            dataType == 10 || dataType == 11) {\r\n            return {type: \"columnNumber\"};\r\n        }\r\n\r\n        // Oracle Number\r\n        if (dataType == 29) {\r\n            return {type: \"columnNumberScientificNotation\"};\r\n        }\r\n\r\n        // Money\r\n        if (dataType == 8) {\r\n            return {type: \"columnMoney\"};\r\n        }\r\n\r\n        // Date\r\n        if (dataType == 12 || dataType == 13) {\r\n            return {type: \"columnDate\"};\r\n        }\r\n\r\n        // Boolean\r\n        if (dataType == 5) {\r\n            return {type: \"columnBoolean\"};\r\n        }\r\n\r\n        // Text\r\n        return {type: \"columnText\"};\r\n    },\r\n\r\n    /*\r\n    *\r\n    */\r\n    onSearchFinished: function () {\r\n        // Empty function, overrided for Tablet version for now\r\n    }\r\n\r\n\r\n});\r\n\r\n","/*\r\n *   Name: BizAgi Tab Container Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define a tab container class for all devices\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.tab\", {}, {\r\n\r\n    /*\r\n     *   Constructor\r\n     */\r\n    initializeData: function(params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Default properties\r\n        var properties = self.properties;\r\n        properties.helpText = properties.helpText || properties.displayName;\r\n\r\n        // Extend css property\r\n        properties.cssclass = properties.cssclass || \"\";\r\n    },\r\n\r\n    /*\r\n     *   Render the container layout\r\n     */\r\n    renderContainer: function() {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var tabItems = $.map(self.children, function(child, key) {\r\n            child.properties.counter = key;\r\n            child.properties.tooltip =  child.properties.tooltip || child.properties.displayName || \"\";\r\n            return child.properties;\r\n        });\r\n        var template = self.renderFactory.getTemplate(\"tab\");\r\n        var mode = self.getMode();\r\n\r\n        // Render the tab\r\n        var html = $.fasttmpl(template, {\r\n            id: properties.id,\r\n            tabs: tabItems,\r\n            mode: mode,\r\n            isDesign: (self.getMode() !== \"execution\"),\r\n            editable: properties.editable,\r\n            tabOrientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            cssclass: properties.cssclass\r\n        });\r\n\r\n        // Get active container based on focus\r\n        var activeTab = self.activeTab = self.getActiveTab();\r\n\r\n        // Render children\r\n        for (var i = 0, length = self.children.length; i < length; i++) {\r\n            // Load on demand other tabs besides the first one\r\n            self.children[i].properties.loadOnDemand = (i != activeTab);\r\n        }\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     *   Return the active tab containing the focus, or the first tab\r\n     */\r\n    getActiveTab: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var formParams = this.getFormContainer().getParams();\r\n        var mode = self.getMode();\r\n\r\n        if (mode === \"execution\") {\r\n            if (!formParams.isRefresh && properties.activeTab) {\r\n                self.getFormContainer().setFocusedElement(properties.activeTab);\r\n            }\r\n        }\r\n\r\n        var selectedTabs = formParams && formParams.selectedTabs ? formParams.selectedTabs : {};\r\n\r\n        // Fetch from selected tabs collection\r\n        if (selectedTabs[self.properties.id] >= 0) {\r\n            return selectedTabs[self.properties.id];\r\n        }\r\n\r\n        // Check for focused elements\r\n        for (var i = 0, length = self.children.length; i < length; i++) {\r\n            // Load on demand other tabs besides the first one\r\n            if (self.children[i].containsFocusedElement()) return i;\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    /**\r\n     * Update position of tab\r\n     * @param index\r\n     */\r\n    setActiveTab: function (index) {\r\n        var self = this;\r\n\r\n        self.triggerHandler(\"selected\", { index: index, tab: self.children[index] });\r\n\r\n        if (self.children[index]) {\r\n            var form = self.getFormContainer();\r\n\r\n            self.children[index].activate();\r\n            self.activeTab = index;\r\n\r\n            var selectedTab = {};\r\n            selectedTab[self.children[index].parent.properties.id] = index;\r\n            form.setParam(\"selectedTabs\", selectedTab);\r\n        }\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tab Item Container Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a tab item class for all devices\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.tabItem\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"tabItem\");\r\n\r\n        // Render the tabItem\r\n        var html = $.fasttmpl(template, {\r\n            id: properties.id,\r\n            uniqueId: properties.uniqueId,\r\n            counter: properties.counter,\r\n            tabOrientation: properties.orientation,\r\n            isDesign: (self.getMode() !== \"execution\")\r\n        });\r\n\r\n        // Render content\r\n        html = self.renderTabContent(html);\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    * Renders the tab content\r\n    */\r\n    renderTabContent: function (html) {\r\n        // Render children\r\n        return this.replaceChildrenHtml(html, this.renderChildrenHtml());\r\n    },\r\n\r\n    /*\r\n    *   Fires when the tab is selected \r\n    */\r\n    activate: function () {\r\n        this.active = true;\r\n    },\r\n\r\n    /*  \r\n    *   Return the current focuses container\r\n    */\r\n    getFocus: function () {\r\n        var self = this;\r\n        var focus = self._super();\r\n        if (bizagi.util.isEmpty(focus) && self.active) {\r\n            focus = self.properties.id;\r\n        }\r\n\r\n        return focus;\r\n    },\r\n\r\n    /*\r\n    *   Return true if this tab contains the active focused element\r\n    */\r\n    containsFocusedElement: function () {\r\n        var self = this;\r\n        var focus = self.getFormContainer().getFocusedElement();\r\n\r\n        if (focus) {\r\n\r\n            // Locate element\r\n            if (focus.xpath) {\r\n                // Search by xpath and id\r\n                var elements = self.getFormContainer().getRenders(focus.xpath);\r\n                var element;\r\n\r\n                $.each(elements, function (i, item) {\r\n                    // Just select editable control\r\n                    if (item.properties.id == focus.id && item.properties.editable) {\r\n                        element = item;\r\n                    }\r\n                });\r\n            } else {\r\n                // Search just using id\r\n                var element = self.getFormContainer().getContainer(focus) || self.getFormContainer().getRenderById(focus);\r\n            }\r\n\r\n            // Search element parent\r\n            if (element) {\r\n                while (element.parent) {\r\n                    if (element.properties.id == self.properties.id || element.parent.properties.id == self.properties.id) return true;\r\n                    element = element.parent;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n});\r\n\r\n","/*\r\n*   Name: BizAgi Render Layout Render Class\r\n*   Author: Andrés Fernando Muñoz\r\n*   Comments:\r\n*   -   This script will define a base layout render class with common stuff related to all renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutRender\", {}, {\r\n\t/*\r\n\t *   Returns the html templated element\r\n\t */\r\n\trenderElement: function (template) {\r\n\t\tvar self = this;\r\n\t\tvar properties = self.properties;\r\n\t\tvar form = self.getFormContainer();\r\n\t\t// Start rendering deferred\r\n\t\tself.renderingDeferred = new $.Deferred();\r\n\r\n\t\t// Set render template\r\n\t\ttemplate = template || \"render-layout\";\r\n\t\tvar renderTemplate = self.renderFactory.getTemplate(template);\r\n\r\n\t\t// Resolve render label\r\n\t\tvar label = properties.displayName;\r\n\t\tif (typeof label == \"string\") {\r\n\t\t\tlabel = label.replaceAll(\"&\", \"&amp;\");\r\n\t\t\tlabel = label.replaceAll(\"$\", \"&#36;\");\r\n\t\t\tlabel = label.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\r\n\t\t\tlabel = label.replaceAll(\"\\\"\", \"&#34;\").replaceAll(\"'\", \"&#39;\").replaceAll(\"/\", \"&#47;\");\r\n\t\t\tlabel = label.replaceAll(\"\\\\n\", \"<br/>\");\r\n\t\t\tlabel = label.replaceAll(\"\\n\", \"<br/>\");\r\n\t\t}\r\n\r\n\t\t// Render template\r\n\t\tvar html = $.fasttmpl(renderTemplate, {\r\n\t\t\tlabel: label,\r\n\t\t\tisExtendedText: (properties.type == \"text\" && properties.isExtended),\r\n\t\t\torientation: properties.orientation,\r\n\t\t\tuniqueId: properties.uniqueId,\r\n\t\t\tid: properties.id,\r\n\t\t\tisDesign: self.getMode() === \"design\",\r\n\t\t\tmessageValidation: properties.messageValidation,\r\n\t\t\tprintVersion: form.params.printversion,\r\n\t\t\tcssClass: properties.cssclass || \"\",\r\n\t\t\thide: properties.hide\r\n\t\t});\r\n\r\n\t\t// Render internal control html\r\n\t\tvar result = self.internalRenderControl();\r\n\t\tif (!result) {\r\n\t\t\tresult = \"\";\r\n\t\t}\r\n\r\n\t\t// Check if this is an async element or not\r\n\t\tvar async = typeof (result) === \"object\" && result.done;\r\n\t\tif (!async) {\r\n\t\t\thtml = self.replaceControlHtml(html, result);\r\n\r\n\t\t} else {\r\n\t\t\tif (result.state() === \"resolved\") {\r\n\t\t\t\t// Fetch resolved result\r\n\t\t\t\thtml = self.replaceControlHtml(html, self.resolveResult(result));\r\n\t\t\t\tself.asyncRenderDeferred = null;\r\n\t\t\t} else {\r\n\t\t\t\t// Wait for result\r\n\t\t\t\tself.asyncRenderDeferred = result;\r\n\t\t\t\thtml = self.replaceControlHtml(html, \"\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t},\r\n\r\n    /*\r\n    *   Template method to get the control element\r\n    */\r\n\tgetControl: function () {\r\n\t\tvar self = this;\r\n\t\tif (!self.control || (self.control instanceof jQuery && self.control.length === 0)) {\r\n\t\t\tself.control = self.element;\r\n\t\t}\r\n\t\tif (!self.control || self.control.length == 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn self.control;\r\n\t},\r\n\r\n    /*\r\n    * Customizes the font italic style *\r\n    */\r\n\tchangeFontItalic: function (italic) {\r\n\t\tif (bizagi.util.parseBoolean(italic)) {\r\n\t\t\tthis.getControl().css(\"font-style\", \"italic\", \"!important\");\r\n\t\t} else {\r\n\t\t\tthis.getControl().css(\"font-style\", \"normal\", \"!important\");\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n    /*\r\n    * Customizes the font underline\r\n    */\r\n\tchangeFontUnderline: function (underline) {\r\n\t\tvar valueFormat = this.properties.valueFormat || {},\r\n\t\t\tvaluestrikethru = bizagi.util.parseBoolean(valueFormat.strikethru) ? \"line-through \" : \"\";\r\n\r\n\t\tif (bizagi.util.parseBoolean(underline)) {\r\n\t\t\tthis.getControl().css(\"text-decoration\", valuestrikethru + \"underline\", \"!important\");\r\n\t\t} else {\r\n\t\t\tthis.getControl().find(\"*\").each(function (i, element) {\r\n\t\t\t\t$(element).css(\"text-decoration\", valuestrikethru, \"!important\");\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n});","/*\r\n*   Name: BizAgi render layout Image Class\r\n*   Author: Andrés Fernando Muñoz\r\n*   Comments:\r\n*   -   This script will define basic stuff for non editable image control inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutImage\", { }, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this,\r\n            mode = self.getMode(),\r\n            useDefaultImage = false,\r\n            valueObj = self.properties.value || {},\r\n            uri= \"\";\r\n\r\n        //\r\n        var templateUri = self.renderFactory.getTemplate(\"layout-image\");\r\n\r\n        //Solucion temporal mientras se ajusta la respuesta del servicio cambiar despues de demo de 21/07/2015\r\n        /*if (value.value && value.value !== \"\" && value.value.length > 100){\r\n            var template64 = self.renderFactory.getTemplate(\"layout-image64\");\r\n            return $.fasttmpl(template64, { url: value.value, useDefaultImage: useDefaultImage });\r\n        }*/\r\n\r\n        /* if (mode === 'execution' && valueObj.value && valueObj.value.length > 0) {\r\n            uri = self.getImageUri();\r\n        }\r\n        else{\r\n            useDefaultImage = true;\r\n        } */\r\n\r\n        return $.fasttmpl(templateUri, {useDefaultImage: true });\r\n    },\r\n\r\n    /**\r\n     * Gets the base 64 image, specify in each device in order to change the size\r\n     */\r\n    getImage64: function () {\r\n        var self = this;\r\n        //Gets the real value of the image\r\n        var params = {\r\n            xpath: self.properties.xpath,\r\n            entity: self.value.guid,\r\n            surrogateKey: self.value.surrogateKey,\r\n            width: 96,\r\n            height: 96\r\n        };\r\n\r\n        return self.dataService.getEntityImage64(params);\r\n    },\r\n\r\n    /**\r\n     * Gets the url to get the array image, specify in each device in order to change the size\r\n     */\r\n    getImageUri: function () {\r\n        var self = this;\r\n\r\n        var map = {\r\n            entity: self.value.guid,\r\n            surrogateKey: self.value.surrogateKey,\r\n            xpath: self.properties.xpath,\r\n            width: 96,\r\n            height: 96,\r\n            hash: self.value.value\r\n        };\r\n\r\n        return self.dataService.serviceLocator.getUrl(\"render-entity-layout-imageByteArray\").replaceMultiple(map);\r\n    }\r\n\r\n});","/*\r\n *   Name: BizAgi Render Layout Simple Link Class\r\n *   Author: Andrés Fernando Muñoz\r\n *   Comments:\r\n *   -   This script will define basic stuff for non editable link renders inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutLink\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-link\");\r\n        // Render template\r\n        var html = $.fasttmpl(template, {displayName: self.properties.displayName});\r\n        return html;\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Layout Label Class\r\n *   Author: Mauricio Sánchez\r\n *   Comments:\r\n *   -   This script will define basic stuff for labels inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutLabel\", {}, {\r\n\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        this.properties.required = false;\r\n\r\n        // Set properties\r\n        this.properties.displayType = \"label\";\r\n        this.properties.labelAlign = this.originalProperties.labelAlign || \"left\";\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n\r\n\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-label\");\r\n        var value = self.properties.displayName || self.properties.value || \"\";\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: value});\r\n        return html;\r\n    }\r\n});\r\n","/*\r\n*   Name: BizAgi Render Layout Text Class\r\n*   Author: Mauricio Sanchez\r\n*   Comments:\r\n*   -   This script will define basic stuff for text renders inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutText\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        //properties.editable = false;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-text\");\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: self.properties.value,editable: self.properties.editable});\r\n        return html;\r\n    },\r\n    /*\r\n     *   Method to render non editable values\r\n     */\r\n    renderReadOnly: function() {\r\n        var self = this;\r\n        // Executes the same template than normal render\r\n        return self.renderControl();\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Layout Simple Upload Class\r\n *   Author: Elkin Fernando Siabato Cruz\r\n *   Comments:\r\n *   -   This script will define basic stuff for non editable upload renders inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutUpload\", {\r\n   // Statics\r\n   BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n   BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\r\n   BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE\r\n}, {\r\n   /**\r\n    * Constructor\r\n    */\r\n   init: function (params) {\r\n      // Call base\r\n      this._super(params);\r\n   },\r\n\r\n   /**\r\n    *   Update or init the element data\r\n    */\r\n   initializeData: function (data) {\r\n      var self = this;\r\n      // Call base\r\n      this._super(data);\r\n\r\n      var form = self.getFormContainer();\r\n\r\n      // Fill default properties\r\n      var properties = this.properties;\r\n\r\n      properties.editable = true;\r\n      properties.allowDelete = true;\r\n\r\n      properties.contexttype = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : \"\";\r\n      properties.allowSendInMail = properties.allowSendInMail || false;\r\n   },\r\n\r\n   /**\r\n    * Get value files by data\r\n    */\r\n   getValueFilesByData: function(properties){\r\n      var self = this;\r\n      var defer = $.Deferred();\r\n      var dataFiles;\r\n      if (properties.value.value) {//Normal entityTemplate in form QAF-2319\r\n          dataFiles = properties.value.value;\r\n      }\r\n      else {//QAF-2210\r\n          dataFiles = properties.value;\r\n      }\r\n      var valueAuxFiles;\r\n      try{\r\n         if(self.isContextContainerWidgetRender()){\r\n            valueAuxFiles = JSON.parse(\"{ \\\"files\\\": \" + dataFiles  + \"}\");\r\n            defer.resolve(properties, valueAuxFiles);\r\n         }\r\n         else{//context: my stuff\r\n            $.when(self.getDataFilesWithoutScope()).done(function(valueResult){\r\n               valueAuxFiles = JSON.parse(\"{ \\\"files\\\": \" + valueResult  + \"}\");\r\n               defer.resolve(properties, valueAuxFiles);\r\n            });\r\n         }\r\n      }\r\n      catch(err){\r\n         valueAuxFiles = JSON.parse(\"{ \\\"files\\\": []}\");\r\n         defer.resolve(properties, valueAuxFiles);\r\n         console.warn(\"Exception converting data files. Error: \", err);\r\n      }\r\n      return defer.promise();\r\n   },\r\n\r\n   isContextContainerWidgetRender: function(){\r\n      var self = this;\r\n\r\n      var formContainer = self.getFormContainer();\r\n      return formContainer.params.paramsRender && formContainer.params.paramsRender.idRender;\r\n   },\r\n\r\n\r\n   /**\r\n    * Get data files when access from My stuff\r\n    */\r\n   getDataFilesWithoutScope: function(){\r\n      var self = this;\r\n      //Gets the real value of the image\r\n      var params = {\r\n         xpath: self.properties.xpath,\r\n         entity: self.value.guid,\r\n         surrogateKey: self.value.surrogateKey\r\n      };\r\n\r\n      return self.dataService.getFilesDataForLayoutUploadControl(params);\r\n   },\r\n\r\n   /**\r\n    *   Returns the internal value\r\n    */\r\n   getValue: function () {\r\n      return this.files;\r\n   },\r\n\r\n   /**\r\n    *   Returns the xpath to be used\r\n    */\r\n   getUploadXpath: function () {\r\n      return this.properties.xpath;\r\n   }\r\n\r\n});","/*\r\n*   Name: BizAgi Render Layout Boolean Class\r\n*   Author: Alexander Mejia\r\n*   Comments:\r\n*   -   This script will define basic stuff for boolean renders inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutBoolean\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.editable = false;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-boolean\");\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: this.properties.value});\r\n        return html;\r\n    },\r\n    /*\r\n     *   Method to render non editable values\r\n     */\r\n    renderReadOnly: function() {\r\n        var self = this;\r\n        // Executes the same template than normal render\r\n        return self.renderControl();\r\n    },\r\n\r\n    setValue: function (value, triggerEvents) {\r\n        if(value === null || value === \"\"){\r\n            this.properties.value = \"\";\r\n        }\r\n        else if (value.toString().toLowerCase() === \"true\" || value.toString().toLowerCase() === \"false\"){\r\n            this.properties.value = bizagi.util.parseBoolean(value) ? this.getResource(\"render-boolean-yes\") : this.getResource(\"render-boolean-no\");\r\n        }\r\n        this._super(this.properties.value, triggerEvents);\r\n    }\r\n});","/**\r\n * Name: BizAgi Render Layout DateTime Class\r\n * Author: Andres Fernando Muñoz\r\n * Comments:\r\n * - This script will define basic stuff for text renders inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutDateTime\", {}, {\r\n    /**\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n        var dateFormat = self.getResource(\"dateFormat\");\r\n        var timeFormat = self.getResource(\"timeFormat\");\r\n\r\n        // We will hold here the value to display\r\n        properties.displayValue = \"\";\r\n        properties.showTime = properties.showTime !== undefined ? bizagi.util.parseBoolean(properties.showTime) : false;\r\n        properties.dateFormat = properties.dateFormat || dateFormat;\r\n        properties.timeFormat = properties.timeFormat || timeFormat;\r\n        properties.fullFormat = properties.dateFormat;\r\n\r\n        // Check if it has the showtime property\r\n        if (properties.showTime) {\r\n            if (properties.fullFormat.search(/[h|H]+/ig) === -1) {\r\n                properties.fullFormat = properties.fullFormat + ' ' + properties.timeFormat;\r\n            }\r\n        }\r\n        else{\r\n            var indexHour = properties.fullFormat.search(/[h|H]+/ig);\r\n            if (indexHour !== -1) {\r\n                properties.fullFormat = properties.fullFormat.substring(0, indexHour - 1);\r\n            }\r\n        }\r\n\r\n        // Read always parameter from server in invariant format\r\n        if (properties.value) {\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(properties.value, properties.showTime);\r\n\r\n            // Format date to current format\r\n            if (date != 0) {\r\n                var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n                self.value = properties.value; // Value must always hold the value with invariant format\r\n                properties.displayValue = bizagi.util.dateFormatter.formatDate(date, properties.fullFormat, datePickerRegional);\r\n            }\r\n            else {\r\n                self.value = null;\r\n            }\r\n        }\r\n        else {\r\n            self.value = null;\r\n            properties.value = \"\";\r\n            properties.displayValue = \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-date-time\");\r\n        var value = (self.properties.value === null || self.properties.value === \"\") ?  \"\" : self.properties.value;\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {value: value});\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this, dateObj;\r\n        var properties = self.properties;\r\n        var dateControl = self.getDateControl();\r\n        var INVARIANT_FORMAT = \"MM/dd/yyyy H:mm:ss\";\r\n        self.i18n = bizagi.localization.getResource(\"datePickerRegional\");\r\n\r\n        if (value.length == INVARIANT_FORMAT.length || value.length == (INVARIANT_FORMAT.length + 1)) {\r\n            dateObj = bizagi.util.dateFormatter.getDateFromInvariant(value, true);\r\n        }\r\n        else {\r\n            dateObj = bizagi.util.dateFormatter.getDateFromInvariant(value);\r\n            if (dateObj && !isNaN(Date.parse(dateObj)) && !$.isNumeric(dateObj)) {\r\n                dateObj.setHours(0, 0, 0, 0);\r\n            }\r\n\r\n        }\r\n        // Set value in input\r\n        if (value && !isNaN(Date.parse(value))) {\r\n            var formattedDateTime = bizagi.util.dateFormatter.formatDate(dateObj, properties.fullFormat, self.i18n);\r\n            dateControl.text(formattedDateTime);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Gets the date control\r\n     */\r\n    getDateControl: function () {\r\n        var self = this;\r\n        self.dateControl = $(\".ui-bizagi-render-date-time\", self.getControl());\r\n        return self.dateControl;\r\n    }\r\n});","/*\r\n*   Name: BizAgi Render Layout number Class\r\n*   Author: Andres Fernando Muñoz\r\n*   Comments:\r\n*   -   This script will define basic stuff for text renders inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutNumber\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        properties.allowDecimals = typeof (properties.allowDecimals) !== \"undefined\" ? bizagi.util.parseBoolean(properties.allowDecimals) : this.getDefaultAllowDecimals(properties.dataType);\r\n        properties.numDecimals = properties.allowDecimals ? (properties.numDecimals ? properties.numDecimals : (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalDigits : 2)) : 0;\r\n        properties.symbol = '';\r\n        properties.positiveFormat = format.positiveFormat;\r\n        properties.negativeFormat = format.negativeFormat;\r\n        properties.decimalSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator : format.decimalSymbol;\r\n        properties.digitGroupSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.groupSeparator : format.digitGroupSymbol;\r\n        properties.groupDigits = this.getDefaultGroupDigits(properties.dataType);\r\n        properties.colorize = properties.colorizeOnNegative || false;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-number\");\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: self.properties.value});\r\n        return html;\r\n    },\r\n    /*\r\n     *   Method to render non editable values\r\n     */\r\n    renderReadOnly: function() {\r\n        var self = this;\r\n        // Executes the same template than normal render\r\n        return self.renderControl();\r\n    },\r\n\r\n    /*\r\n     *   Returns the display value of the render\r\n     */\r\n    getDisplayValue: function (value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        // Workaround to get the display value by the format currency plugin, because it requires a control\r\n        var label = $('<label/>').html(value);\r\n        var regExp2 = /[\\u20AC \\u0024\\u00A3]/;\r\n        if (!value.toString().match(regExp2)) {\r\n            label.formatCurrency(\r\n                {\r\n                    symbol: properties.symbol,\r\n                    positiveFormat: properties.positiveFormat,\r\n                    negativeFormat: properties.negativeFormat,\r\n                    decimalSymbol: properties.decimalSymbol,\r\n                    digitGroupSymbol: properties.digitGroupSymbol,\r\n                    groupDigits: properties.groupDigits,\r\n                    roundToDecimalPlace: properties.numDecimals,\r\n                    colorize: properties.colorize\r\n                });\r\n        }\r\n        return label.text();\r\n    },\r\n\r\n    /*\r\n     *   Return the allow decimals default property based on the datatype\r\n     */\r\n    getDefaultAllowDecimals: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType == 1 || dataType == 2 || dataType == 3 || dataType == 4 || dataType == 7) {\r\n                return false;\r\n            }\r\n            // Decimal data types\r\n            if (dataType == 6 || dataType == 8 || dataType == 10 || dataType == 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    /*\r\n     *   Return the group digits default property based on the datatype\r\n     */\r\n    getDefaultGroupDigits: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType == 1 || dataType == 2 || dataType == 3 || dataType == 4 || dataType == 7) {\r\n                return false;\r\n            }\r\n            // Decimal data types\r\n            if (dataType == 6 || dataType == 8 || dataType == 10 || dataType == 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n});","/*\r\n*   Name: BizAgi Render Layout Money Class\r\n*   Author: Andrés Fernando Muñoz\r\n*   Comments:\r\n*   -   This script will define basic stuff for money renders inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutMoney\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        // Configures symbol\r\n        properties.showsymbol = typeof (properties.showsymbol) !== \"undefined\" ? properties.showsymbol : true;\r\n\r\n        if (properties.showsymbol) {\r\n            properties.symbol = properties.currencySymbol ? properties.currencySymbol :\r\n                (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.symbol : format.symbol);\r\n        }\r\n        else {\r\n            properties.symbol = \"\";\r\n        }\r\n        properties.groupDigits = true;\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Layout Label Class\r\n *   Author: Mauricio Sánchez\r\n *   Comments:\r\n *   -   This script will define basic stuff for labels inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutPlaceholder\", {}, {\r\n\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n                \r\n    },\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n             \r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-placeholder\");\r\n        var value = self.properties.value || self.properties.displayName || \"\";\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: value});\r\n        return html;\r\n    }\r\n});\r\n","/*\r\n*   Name: BizAgi Nested Form Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a nested form container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.nestedForm\", {}, {\r\n\r\n});","/**\r\n *   Name: Bizagi Render Combo Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for combo renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.combo\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        properties.hasLocalData = properties.data || false;\r\n        // TODO: Review additional value in radio control\r\n        properties.value = properties.value && properties.value.length > 0 ? properties.value[0] : (properties.defaultValue && properties.defaultValue.length > 0 ? properties.defaultValue[0] : null);\r\n\r\n        if (typeof (properties.enableTyping) === \"undefined\") properties.enableTyping = true;\r\n        if (properties.value && properties.value.id === undefined) properties.value = null;\r\n        this.value = properties.value;\r\n\r\n        // Add empty node if configured\r\n        if (properties.hasLocalData) {\r\n            properties.data = this.complementData(properties.data);\r\n        }\r\n\r\n        // This line is to set a flag to fetch the data when rendering, or on demand, by default is false, overriding it on desktop implementation\r\n        properties.loadOnDemand = false;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var params = {};\r\n        var renderType = bizagi.util.normalizeType(self.properties.type);\r\n\r\n        if (self.isDependant && self.properties && /^cascadingcombo$/i.test(renderType) && self.getParentCombo) {\r\n            var valueControl = self.getParentCombo().getValue();\r\n            if (valueControl && valueControl.id) {\r\n                params[self.Class.BA_ACTION_PARAMETER_PREFIX + \"parent\"] = valueControl.id;\r\n            }\r\n        }\r\n\r\n        return self.renderCombo(params);\r\n    },\r\n\r\n    /*\r\n    *   Renders the combo\r\n    */\r\n    renderCombo: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (properties.loadOnDemand) {\r\n            // Render the combo without data\r\n            var html = self.renderComboTemplate();\r\n            return html;\r\n        } else {\r\n\r\n            // Set data promise \r\n            var defer = new $.Deferred();\r\n            var dataPromise = self.getData(params);\r\n\r\n            // Attach callback \r\n            $.when(dataPromise).done(function (data) {\r\n                // Render combo\r\n                var html = self.renderComboTemplate(data);\r\n                self.properties.data = data;\r\n                defer.resolve(html);\r\n\r\n            }).fail(function (data) {\r\n                var html = self.renderComboTemplate({});\r\n                defer.resolve(html);\r\n            });\r\n\r\n            // Returns a promise so we can hold post-render method until this is done\r\n            return defer.promise();\r\n        }\r\n    },\r\n\r\n    renderComboTemplate: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(self.getTemplateName());\r\n        var emptyValue = bizagi.override.emptyLabelForCombo || self.getResource(\"render-combo-empty-selection\");\r\n        var value = properties.value ? \"\" : emptyValue;\r\n        data = data || self.properties.data || {};\r\n\r\n        if (self.properties.type === \"columnCombo\" && value === \"\" && typeof properties.value === \"object\" && properties.value.id === \"\" && (properties.value.value === \"\" || properties.value.value === self.getResource(\"render-combo-empty-value\"))) {\r\n            value = self.getResource(\"render-combo-empty-selection\");\r\n        }\r\n\r\n        var html = $.fasttmpl(template, $.extend(self.getTemplateParams(), {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            unique: bizagi.util.randomNumber(10000, 1000000),\r\n            idPageCache: properties.idPageCache,\r\n            items: data,\r\n            align: properties.valueAlign,\r\n            value: value,\r\n            editable: properties.editable\r\n        }));\r\n\r\n\r\n        return html;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed in read-only mode\r\n    */\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n        self._super();\r\n        var item = self.getValue();\r\n        var control = self.getControl();\r\n\r\n        if (self.control && self.control.parent()) {\r\n            self.control.parent().addClass(\"ui-bizagi-noneditable-\" + self.properties.displayType);\r\n        }\r\n        if (item) {\r\n\r\n            if (item.value != null && typeof (item.value) === \"boolean\") {\r\n                if (bizagi.util.parseBoolean(item.value) === true) {\r\n                    item.value = this.getResource(\"render-boolean-yes\");\r\n\r\n                } else if (bizagi.util.parseBoolean(item.value) == false) {\r\n                    item.value = this.getResource(\"render-boolean-no\");\r\n                }\r\n            }\r\n\r\n            // Returns the cached value from the properties to avoid server side fetching\r\n            if (self.getResource(\"render-combo-empty-value\") === item.value || self.getResource(\"render-combo-empty-selection\") === item.value) {\r\n                control.text(\"\");\r\n            } else {\r\n                control.html(\"<label class='readonly-control'>\" + self.formatItem(item.value) + \"</label>\");\r\n            }\r\n        } else {\r\n            // Render empty \r\n            control.text(\"\");\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Gets the template used by the combo render\r\n    *   can be overriden in subclasses to reuse logic and just change the template\r\n    */\r\n    getTemplateName: function () {\r\n        return \"combo\";\r\n    },\r\n\r\n    /*\r\n    *   Determines if we need to show the empty node or not\r\n    *   Can be overriden to change behaviour\r\n    */\r\n    showEmpty: function () {\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Determines if we need to show the current data regardless if it belongs to data or not\r\n    *   Can be overriden to change behaviour\r\n    */\r\n    showCurrentData: function () {\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        var mode = self.getMode();\r\n        var isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n\r\n        // Just execute ajax calls when rendering in execution mode\r\n        if (mode !== \"execution\") return self.getDummyData();\r\n\r\n        if (properties.hasLocalData || isOfflineForm) {\r\n\r\n            // Resolve with local data    \r\n            defer.resolve(properties.data);\r\n\r\n        } else {\r\n            var renderType = bizagi.util.normalizeType(properties.type);\r\n\r\n            // Check if the data has been cached\r\n            if (properties.remoteDataLoaded && !(/^cascadingcombo$/i.test(renderType))) {\r\n                defer.resolve(properties.data);\r\n            } else {\r\n                // Go to server\r\n                self.dataService.multiaction().getData({\r\n                    url: properties.dataUrl,\r\n                    xpath: properties.xpath,\r\n                    idRender: properties.id,\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache,\r\n                    extra: params,\r\n                    contexttype: self.properties.contexttype || null\r\n                }).done(function (data) {\r\n\r\n                    // Resolve the data\r\n                    if (!properties.recalculate) {\r\n                        properties.remoteDataLoaded = true;\r\n                    }\r\n                    properties.data = self.complementData(data);\r\n                    defer.resolve(properties.data);\r\n\r\n                }).fail(function (data) {\r\n\r\n                    var allowActions = true;\r\n                    var form = self.getFormContainer();\r\n\r\n                    if (bizagi.util.isNativeMobileDevice() && typeof (form) !== \"undefined\")\r\n                        allowActions = form.allowOnlineActions();\r\n\r\n                    if (data.type === \"not-processed\" && allowActions)\r\n                        return;\r\n\r\n                    // Show error from server\r\n                    var msgObj = self.properties.displayName + \": \";\r\n\r\n                    if (typeof data === \"string\") {\r\n                        var auxMsg = JSON && JSON.parse(data) || $.parseJSON(data);\r\n                    } else {\r\n                        var auxMsg = data;\r\n                    }\r\n\r\n                    msgObj += auxMsg.message;\r\n\r\n                    form.addValidationMessage(msgObj);\r\n\r\n                    defer.reject(data);\r\n                });\r\n            }\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Creates a set of dummy data in order to display it when rendering in design or layout mode\r\n    */\r\n    getDummyData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (properties.data) {\r\n            return properties.data;\r\n\r\n        } else {\r\n            properties.data = [];\r\n            properties.data = self.complementData(properties.data);\r\n\r\n            // Add another data\r\n            properties.data.push({id: \"\", value: \"Item 1\"});\r\n            properties.data.push({id: \"\", value: \"Item 2\"});\r\n\r\n            return properties.data;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Resets the data in order to fetch it again when needed\r\n    */\r\n    resetData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        properties.hasLocalData = false;\r\n        properties.data = null;\r\n        properties.remoteDataLoaded = false;\r\n    },\r\n\r\n    /* \r\n    *   Gets the display value of the render\r\n    */\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n\r\n        if (self.combo && self.combo.length > 0) {\r\n            // When there is a combo painted, we fetch the selected value from it\r\n            return self.getSelectedValue();\r\n        } else {\r\n            var displayValue = \"\";\r\n            var item = self.getValue();\r\n\r\n            if (item) {\r\n                // Check on cached propert from server first if the key exists\r\n                displayValue = self.formatItem(item.value);\r\n            }\r\n\r\n            return displayValue;\r\n        }\r\n    },\r\n\r\n\r\n    /*\r\n    *   Returns the selected value in the template\r\n    */\r\n    getSelectedValue: function () {\r\n    },\r\n\r\n    /*\r\n    *   Adds custom parameters to process the template\r\n    */\r\n    getTemplateParams: function () {\r\n        return {};\r\n    },\r\n\r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n\r\n        if (value !== undefined && value !== null) {\r\n            if ($.isArray(value)) {\r\n\r\n                for (var i = 0, length = value.length; i < length; i++) {\r\n                    if (value[i] != null && typeof (value[i]) === \"boolean\") {\r\n                        if (bizagi.util.parseBoolean(value[i]) === true) {\r\n                            value[i] = this.getResource(\"render-boolean-yes\");\r\n                        } else if (bizagi.util.parseBoolean(value[i]) === false) {\r\n                            value[i] = this.getResource(\"render-boolean-no\");\r\n                        }\r\n                    }\r\n                }\r\n                return value.join(\" - \");\r\n            } else {\r\n                return value;\r\n            }\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            // Remove empty validation for value for combos        \r\n            if (!bizagi.util.isEmpty(xpath) && value !== null && typeof (value) !== \"undefined\") {\r\n                // Add a validation because sometimes value contains an empty not null object\r\n                if (typeof (value) === \"object\" && (value.id === undefined || value.id === \"\")) {\r\n                    renderValues[properties.xpath] = \"\";\r\n                } else {\r\n                    // Add the value to the server\r\n                    renderValues[properties.xpath] = typeof (value.id) !== \"undefined\" ? value.id : \"\";\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var currentValue = self.getValue();\r\n        var originalValue = properties.originalValue;\r\n        var defaultValue = properties.defaultValue;\r\n\r\n        var result = true;\r\n\r\n        if ($.forceCollectData) {\r\n            return result;\r\n        }\r\n\r\n        currentValue = currentValue && currentValue.length !== undefined ? currentValue[0] : currentValue;\r\n        originalValue = originalValue && originalValue.length !== undefined ? originalValue[0] : originalValue;\r\n        defaultValue = defaultValue && defaultValue.length !== undefined ? defaultValue[0] : defaultValue;\r\n\r\n        currentValue = currentValue && currentValue.id !== undefined ? currentValue.id : currentValue;\r\n        originalValue = originalValue && originalValue.id !== undefined ? originalValue.id : originalValue;\r\n        defaultValue = defaultValue && defaultValue.id !== undefined ? defaultValue.id : defaultValue;\r\n\r\n        if (defaultValue !== undefined) {\r\n            if (defaultValue != originalValue || defaultValue != currentValue) {\r\n                result = true;\r\n            } else {\r\n                result = false;\r\n            }\r\n        } else {\r\n            result = currentValue != originalValue ? true : false;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    * Parses additional values info in order to format them correctly\r\n    */\r\n    parseAdditionalValues: function (data) {\r\n        var self = this;\r\n\r\n        return $.map(data, function (item) {\r\n            var value = item.value ? self.formatItem(item.value) : item;\r\n            var newItem = {id: item.id, value: value};\r\n\r\n            if (item.hidden) newItem.hidden = true;\r\n            return item;\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Complement data from server before control implementation\r\n    */\r\n    complementData: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var bCurrentDataFound = false;\r\n        $.each(data, function (i, item) {\r\n\r\n            if (item.value !== undefined && item.value !== null) {\r\n                item.value = self.formatItem(item.value);\r\n                if (properties.value) {\r\n                    if (item.id == properties.value.id) {\r\n                        bCurrentDataFound = true;\r\n                    }\r\n                }\r\n            } else {\r\n                item.value = \"\";\r\n            }\r\n        });\r\n\r\n        // Add empty node if configured\r\n        if (self.showEmpty()) {\r\n            var emptyFound = false;\r\n            for (var i = 0, length = data.length; i < length; i++) {\r\n                if (data[i].id === \"\") {\r\n                    emptyFound = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!emptyFound) {\r\n                var dataValue = bizagi.override.emptyLabelForCombo || bizagi.localization.getResource(\"render-combo-empty-value\")\r\n                data.unshift({id: \"\", value: dataValue});\r\n            }\r\n        }\r\n\r\n        if (properties.value) {\r\n            if (!bCurrentDataFound && self.showCurrentData()) {\r\n                data.unshift({id: properties.value.id, value: properties.value.value, hidden: true});\r\n            }\r\n        }\r\n\r\n        // Add additional value\r\n        return self.parseAdditionalValues(data);\r\n    },\r\n\r\n    /*\r\n    *   Check if a render has no value for required validation\r\n    */\r\n    hasValue: function () {\r\n        var self = this;\r\n        var currentValue = self.getValue();\r\n\r\n        if (bizagi.util.isEmpty(currentValue)) return false;\r\n        if (Object.prototype.toString.apply(currentValue) === \"[object Object]\" && (bizagi.util.isEmpty(currentValue.id) || currentValue.id == 0)) return false;\r\n\r\n        // Else\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    * Cleans current data\r\n    */\r\n    cleanData: function () {\r\n        var self = this;\r\n        var value = {id: \"\", label: \"\"};\r\n\r\n        self.setDisplayValue(value);\r\n        self.setValue(value, false);\r\n    },\r\n\r\n    beforeToRefresh: function () {\r\n        this.column && !this.column.comboData && this.getData();\r\n    },\r\n\r\n    isExtraItem: function () {\r\n        var self = this;\r\n        var data = self.value || {};\r\n        var value = data.value || \"\";\r\n\r\n        return value === \"\" || value === self.getResource(\"render-combo-empty-selection\") || value === self.getResource(\"render-combo-empty-value\");\r\n    },\r\n\r\n    escapeValue: function (value) {\r\n        if (bizagi.util.isString(value)) {\r\n            var valueToReturn = value.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\r\n            return valueToReturn;\r\n        } else {\r\n            return value;\r\n        }\r\n    },\r\n\r\n    /**\r\n     *  Maps the value, when this one comes from actions\r\n     * @param value\r\n     * @returns {*}\r\n     */\r\n    mapValue: function (value) {\r\n        if (value && value.fromAction) {\r\n            return {\r\n                id: value.value,\r\n                value: value.label,\r\n                label: value.label\r\n            }\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    validateValue: function (value) {\r\n        if ((value.id != undefined) && ((typeof value.id === \"number\" && value.id !== null) || (typeof value.id === \"string\" && value.id.length > 0))) {\r\n            if (value.value !== null && typeof value.value === \"boolean\") {\r\n                translated = true;\r\n                if (bizagi.util.parseBoolean(value.value) === true) {\r\n                    value.value = bizagi.localization.getResource(\"render-boolean-yes\");\r\n                } else if (bizagi.util.parseBoolean(value.value) === false) {\r\n                    value.value = bizagi.localization.getResource(\"render-boolean-no\");\r\n                }\r\n            } else if (value.value != null && typeof value.value === \"object\") {\r\n                for (var i = 0, length = value.value.length; i < length; i++) {\r\n                    if (value.value[i] != null && typeof (value.value[i]) === \"boolean\") {\r\n                        if (bizagi.util.parseBoolean(value.value[i]) === true) {\r\n                            value.value[i] = bizagi.localization.getResource(\"render-boolean-yes\");\r\n                        } else if (bizagi.util.parseBoolean(value.value[i]) === false) {\r\n                            value.value[i] = bizagi.localization.getResource(\"render-boolean-no\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    /**\r\n     * Finds an element in the combo data values by id\r\n     * @param {int} id\r\n     * @returns {Object}\r\n     */\r\n    findDataValueById: function (id) {\r\n        return (this.properties.data || []).find(function (e) {\r\n            return e.id == id;\r\n        });\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render Check Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for check renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.check\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.value = typeof (properties.value) != \"undefined\" ? bizagi.util.parseBoolean(properties.value) : null;\r\n\r\n        properties.showLetters = (bizagi.override && bizagi.override.enableCheck === true) && !properties.editable;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"check\");\r\n        var randomId = bizagi.util.randomNumber(100, 10000000);\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            id: randomId,\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Gets the display value of the render\r\n     */\r\n    getDisplayValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.parseBoolean(value) === true) {\r\n            return this.getResource(\"render-boolean-yes\");\r\n        } else if (bizagi.util.parseBoolean(value) === false) {\r\n            return this.getResource(\"render-boolean-no\");\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if a render has no value for required validation\r\n     */\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.isEmpty(value)) return false;\r\n\r\n        var booleanValue = bizagi.util.parseBoolean(value);\r\n\r\n        return !(booleanValue === false && this.properties.required);\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Render Number Class\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define basic stuff for numbers\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.number\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        properties.allowDecimals = (typeof (properties.allowDecimals) !== \"undefined\") ? bizagi.util.parseBoolean(properties.allowDecimals) : this.getDefaultAllowDecimals(properties.dataType);\r\n        properties.numDecimals = properties.allowDecimals ? (properties.numDecimals ? properties.numDecimals : (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalDigits : 2)) : 0;\r\n        properties.symbol = '';\r\n        properties.positiveFormat = format.positiveFormat;\r\n        properties.negativeFormat = format.negativeFormat;\r\n        properties.decimalSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator : format.decimalSymbol;\r\n        properties.digitGroupSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.groupSeparator : format.digitGroupSymbol;\r\n        properties.groupDigits = this.setGroupDigits();\r\n        properties.colorize = properties.colorizeOnNegative || false;\r\n        properties.dataTypeMinValue = this.calculateMinValue(properties.dataType);\r\n        properties.dataTypeMaxValue = this.calculateMaxValue(properties.dataType);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"number\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            editable: self.properties.editable,\r\n            value: bizagi.isMobile() ? self.getDisplayValue() : \"\", // Only apply to mobile because in the template value is required (Bug: 11624)\r\n            type: bizagi.util.isAndroidDevice() ? \"tel\" : \"text\", // Change type control for android device\r\n            isDesign: self.getMode() !== \"execution\"\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n\r\n        self._super();\r\n\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n\r\n        self.numericInput = control.find(\"input\");\r\n\r\n        // Add numeric plugin to avoid invalid keystrokes\r\n        self.numericInput.numeric(self.properties.decimalSymbol);\r\n\r\n        // Attach event for retype double\r\n        if (properties.retype === \"double\") {\r\n            self.attachRetypeDouble();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        // Attach Format Currency Plugin to format the input\r\n        this.attachFormatCurrency();\r\n    },\r\n\r\n    /**\r\n     * Removes Validation Messages\r\n     */\r\n    removeValidations: function () {\r\n        var form = this.getFormContainer().parent || this.getFormContainer();\r\n\r\n        form.clearValidationMessages();\r\n    },\r\n\r\n    /**\r\n     * Function virtual implements on children (desktop,smartphone...).\r\n     * @returns {}\r\n     */\r\n    attachRetypeDouble: function () {\r\n    },\r\n\r\n    /**\r\n     * Adds the format currency plugin\r\n     * @returns {}\r\n     */\r\n    attachFormatCurrency: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message = bizagi.localization.getResource(\"render-number-retype-fail\");\r\n        self.isValidRender = self.isValidRender || true;\r\n\r\n        // Extend formatCurrency language\r\n        if ($.formatCurrency.regions[bizagi.language] == null)\r\n            $.formatCurrency.regions[bizagi.language] = this.getResource(\"numericFormat\");\r\n\r\n        // Attach events\r\n        self.numericInput.blur(function () {\r\n            if (typeof (self.getFormContainer().validationController) == \"undefined\") self.getFormContainer().validationController = new bizagi.command.controllers.validation(self.getFormContainer(), self.validations);\r\n            var validationController = self.getFormContainer().validationController || self.getFormContainer().parent.validationController;\r\n            var decimalSeparator = \".\";\r\n            var digitGroupSeparator = \",\";\r\n            if (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) == \"undefined\") {\r\n                decimalSeparator = self.getResource(\"numericFormat\").decimalSymbol || \".\";\r\n                digitGroupSeparator = self.getResource(\"numericFormat\").digitGroupSymbol || \",\";\r\n            }\r\n            else {\r\n                decimalSeparator = BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator;\r\n                digitGroupSeparator = BIZAGI_DEFAULT_CURRENCY_INFO.groupSeparator;\r\n            }\r\n\r\n            var minValue = self.getMinValue();\r\n            var maxValue = self.getMaxValue();\r\n\r\n            if(properties.percentage)self.numericInput.val(self.numericInput.val().replace(\"%\", \"\"));\r\n            var inputValue = self.numericInput.val();\r\n            inputValue = (decimalSeparator == \",\") ? inputValue.replace(/\\,0+$/, '') : inputValue.replace(/\\.0+$/, '');\r\n            inputValue = inputValue.replace(properties.symbol, \"\");\r\n            //Replace all the ocurrences of the digitGroupSeparator\r\n            inputValue = bizagi.util.replaceAll(inputValue, digitGroupSeparator, \"\");\r\n            if (inputValue.toString().indexOf(decimalSeparator) != -1) {\r\n                if (decimalSeparator == \",\") inputValue = inputValue.replace(/([0-9]+(\\,[0-9]+[1-9])?)(\\,?0+$)/, '$1');\r\n                if (decimalSeparator == \".\") inputValue = inputValue.replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/, '$1');\r\n            }\r\n\r\n            if (inputValue != undefined && inputValue.length > 0) self.numericInput.val(inputValue);\r\n\r\n            if (/(.+)-$/.test(inputValue)) {\r\n                inputValue = inputValue.replace(/(.+)-$/, '-$1');\r\n                self.numericInput.val(inputValue);\r\n            }\r\n\r\n            var inputLength = inputValue.replace(/[^0-9]+/g, \"\").length;\r\n            var xPath = self.properties.xpath;\r\n            var oldVal = self.numericInput.val();\r\n\r\n\r\n            if ((self.isInvalidFormat != null && self.isInvalidFormat == true)\r\n                || (inputValue != \"\" && [\"$\", \"£\", \"€\", \"¥\", properties.symbol].indexOf(inputValue) != -1)) {\r\n                self.setValue(\"\");\r\n                self.getControl().find(\"input\").val(\"\");\r\n                self.numericInput.val(\"\");\r\n                return;\r\n            }\r\n\r\n            if (bizagi.util.trim(inputValue) == \"\") {\r\n                self.setValue(\"\");\r\n                return;\r\n            }\r\n\r\n            //The \",\" is changed to \".\" For the correct operation of \"parseFloat ()\"\r\n            var tempValue = parseFloat(inputValue.replace(\",\", \".\"));\r\n            if (isNaN(tempValue)) {\r\n                tempValue = self.numericInput.asNumber();\r\n            }\r\n\r\n            if (minValue !== undefined && minValue != null && tempValue < minValue) {\r\n                message = bizagi.localization.getResource(\"render-numeric-minimum-validation\")\r\n                    .replaceAll(\"#label#\", properties.displayName + \" (\" + oldVal + \")\")\r\n                    .replaceAll(\"#minValue#\", minValue.toString());\r\n            }\r\n            else if (maxValue !== undefined && maxValue !== null && tempValue > maxValue) {\r\n                message = bizagi.localization.getResource(\"render-numeric-maximum-validation\")\r\n                    .replaceAll(\"#label#\", properties.displayName + \" (\" + oldVal + \")\")\r\n                    .replaceAll(\"#maxValue#\", maxValue.toString());\r\n            } else\r\n                message = message + \" \" + oldVal + \"\";\r\n\r\n\r\n            // Do datatype validations\r\n            if (\r\n                (minValue !== undefined && minValue !== null && tempValue < minValue)\r\n                || (maxValue !== undefined && maxValue !== null && tempValue > maxValue)\r\n                || (self.properties.dataType == 10 && inputLength > 15)\r\n                || (self.properties.dataType == 1 && inputLength > 19)\r\n                || (self.properties.dataType == 11 && inputLength > 7)\r\n                || (self.properties.dataType == 11 && inputLength > 7)\r\n                || (oldVal.match(/[^$£€¥,-.()\\d]/))\r\n            ) {\r\n                if (typeof validationController != \"undefined\" && validationController != null) {\r\n                    self.removeValidations();\r\n\r\n                    var messageToShow = message;\r\n                    if(messageToShow.indexOf(oldVal) === -1){\r\n                        messageToShow = message + \" \" + oldVal + \"\";\r\n                    }\r\n\r\n                    validationController.showValidationMessage(messageToShow, xPath);\r\n                    self.isValidRender = false;\r\n                    self.isValidRenderMessage = messageToShow;\r\n                }\r\n                message = message.replace(oldVal, \"\");\r\n                return;\r\n            }\r\n            else {\r\n                self.isValidRender = true;\r\n                self.isValidRenderMessage = \"\";\r\n            }\r\n\r\n            // Fix decimals specially when it starts with 0 (0000234 -> 234, 00000 -> 0)\r\n            if (this.value.toString().length > 0 && !properties.allowDecimals && !properties.groupDigits) {\r\n                this.value = this.value.toString().replace(/^0+/, '');\r\n                if (properties.symbol.length > 0) this.value = this.value.toString().replace(properties.symbol + \"0\", properties.symbol);\r\n                this.value = this.value.toString().replace(/^0+/, '');\r\n                if (this.value.replaceAll('0', '').length == 0)\r\n                    this.value = properties.symbol + \"0\";\r\n                else if (this.value.toString() == parseInt(this.value)) this.value = properties.symbol + this.value;\r\n            } else {\r\n                //Fix type money when number start with 0 (0000234 -> 234, 00000 -> 0)\r\n                if(self.properties.type === \"money\" || self.properties.type === \"number\" || self.properties.type === \"columnMoney\" || self.properties.type === \"columnNumber\"){\r\n                    this.value = this.value.toString().replace(/^0+/, '');\r\n                    if(this.value === \"\"){\r\n                        this.value = 0;\r\n                    }\r\n                }\r\n            }\r\n            self.executeFormatCurrencyPlugin();\r\n\r\n            // Updates internal value\r\n            self.setValue(self.numericInput.asNumber({\r\n                symbol: properties.symbol,\r\n                positiveFormat: properties.positiveFormat,\r\n                negativeFormat: properties.negativeFormat,\r\n                decimalSymbol: properties.decimalSymbol,\r\n                digitGroupSymbol: properties.digitGroupSymbol,\r\n                groupDigits: properties.groupDigits\r\n            }));\r\n\r\n            if (properties.percentage) {\r\n                if (self.numericInput && self.numericInput.val().indexOf(\"%\") == -1)\r\n                    self.numericInput.val(self.numericInput.val() + '%');\r\n            }\r\n            message = message.replace(oldVal, \"\");\r\n        })\r\n\r\n        // Avoiding pasting invalid characters\r\n            .bind('paste', function (e) {\r\n                try {\r\n                    var tmpData = (bizagi.util.isIE() || bizagi.util.isIE11()) ? window.clipboardData.getData(\"text\") : e.originalEvent.clipboardData.getData(\"Text\");\r\n\r\n\r\n\r\n                    // Next lines checks if there is something different to numbers symbol, decimalSymbol and digitGroupSybol\r\n                    var totalVal = \"/[^0-9\";\r\n                    if (properties.decimalSymbol.length > 0) {\r\n                        totalVal += properties.decimalSymbol;\r\n                    }\r\n                    // Next lines only for currency type\r\n                    if (properties.dataType == 8) {\r\n                        if (properties.symbol.length > 0) {\r\n                            totalVal += properties.symbol;\r\n                        }\r\n                        if (properties.digitGroupSymbol.length > 0) {\r\n                            totalVal += properties.digitGroupSymbol;\r\n                        }\r\n                    }\r\n                    totalVal += \"\\\\-\\\\s]/gi\";\r\n                    try {\r\n                        if (tmpData.replace(eval(totalVal), '').length != tmpData.length)\r\n                            e.preventDefault();\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    bizagi.log(\"Error to pasting content\");\r\n                    self.isInvalidFormat = true;\r\n                }\r\n            })\r\n            // Now we implement keydown instead of keyup in order to include preventDefault\r\n            .keydown(function (e) {\r\n                self.previousValue = this.value;\r\n                e = (window.event && window.event.preventDefault) ? window.event : e;\r\n                var keyUnicode = e.charCode || e.keyCode;\r\n                // Validation for currency info\r\n                if (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) != \"undefined\")\r\n                    if (BIZAGI_DEFAULT_CURRENCY_INFO.decimalDigits == 0) properties.allowDecimals = false;\r\n                if (properties.dataType < 5 || (properties.dataType == 8 && properties.allowDecimals == false))\r\n                    if (keyUnicode == 188 || keyUnicode == 190 || keyUnicode == 110)\r\n                        e.preventDefault();\r\n                if (this.value)\r\n                    if (e !== undefined && this.value.length > 0 && (properties.dataType == 8 || properties.dataType == 10)) {\r\n                        // Just numbers\r\n                        if (keyUnicode > 47 && keyUnicode < 58) {\r\n                            if (self.formatTimeout) {\r\n                                clearTimeout(self.formatTimeout);\r\n                            }\r\n\r\n                            var floatPart = this.value + \"\";\r\n                            //var  floatPart = stringPart.replaceAll(properties.digitGroupSymbol, \"\").replaceAll(properties.symbol,\"\").trim().replaceAll(properties.decimalSymbol,\".\");\r\n                            if (properties.digitGroupSymbol && properties.digitGroupSymbol.length > 0) {\r\n                                floatPart = floatPart.replaceAll(properties.digitGroupSymbol, \"\");\r\n                            }\r\n                            if (properties.symbol.length > 0) {\r\n                                floatPart = floatPart.replaceAll(properties.symbol, \"\");\r\n                            }\r\n\r\n                            floatPart = $.trim(floatPart);\r\n                            if (properties.decimalSymbol && properties.decimalSymbol.length > 0) {\r\n                                floatPart = floatPart.replaceAll(properties.decimalSymbol, \".\");\r\n                            }\r\n                            // If increasing one digit (x10) will overtake the maxValue\r\n                            if (floatPart * 10 > properties.dataTypeMaxValue) {\r\n                                e.preventDefault();\r\n                            }\r\n                        }                  \r\n                        else if (keyUnicode == 109 || keyUnicode == 189) {\r\n                            if (this.selectionStart != 0 || this.selectionEnd != this.value.length) {\r\n                                var currentPosition = this.selectionEnd;\r\n                                this.value = properties.symbol + \"-\" + this.value.replace(properties.symbol, \"\");\r\n                                this.selectionStart = this.selectionEnd = currentPosition + 1;\r\n                            } else if (this.selectionStart == 0 && this.selectionEnd == this.value.length) {\r\n                                this.value = \"-\";\r\n                                this.selectionStart = this.selectionEnd = this.value.length;\r\n                            }\r\n                        }\r\n                    }                    \r\n            })\r\n\r\n            .keyup(function (e) {\r\n                e = window.event || e;\r\n                var keyUnicode = e.charCode || e.keyCode;\r\n                if (e !== undefined) {\r\n                    switch (keyUnicode) {\r\n                        case 16:\r\n                            break; // Shift\r\n                        case 17:\r\n                            break; // Ctrl\r\n                        case 13:\r\n                            break; // Intro\r\n                        case 18:\r\n                            break; // Alt\r\n                        case 27:\r\n                            this.value = '';\r\n                            break; // Esc: clear entry\r\n                        case 35:\r\n                            break; // End\r\n                        case 36:\r\n                            break; // Home\r\n                        case 37:\r\n                            break; // cursor left\r\n                        case 38:\r\n                            break; // cursor up\r\n                        case 39:\r\n                            break; // cursor right\r\n                        case 40:\r\n                            break; // cursor down\r\n                        case 78:\r\n                            break; // N (Opera 9.63+ maps the \".\" from the number key section to the \"N\" key too!) (See: http://unixpapa.com/js/key.html search for \". Del\")\r\n                        case 110:\r\n                            break; // . number block (Opera 9.63+ maps the \".\" from the number block to the \"N\" key (78) !!!)\r\n                        case 188:\r\n                            break; // , comma\r\n                        case 190:\r\n                            break; // .\r\n                        default:\r\n                        {\r\n\r\n                        }\r\n                    }\r\n                }                \r\n            }).keypress(function (e) {\r\n            e = (window.event && window.event.preventDefault) ? window.event : e;\r\n            var keyUnicode = e.charCode || e.keyCode;\r\n            if (typeof (e) !== \"undefined\") {\r\n                if (keyUnicode == 35 || keyUnicode == 37 || keyUnicode == 39) {\r\n                    e.preventDefault();\r\n                } else if (properties.dataType != 8 && keyUnicode == 36) {\r\n                    e.preventDefault();\r\n                }\r\n\r\n                // When no decimals are permited\r\n                var character = String.fromCharCode(keyUnicode);\r\n                if (properties.allowDecimals === false && properties.numDecimals === 0 && character === properties.decimalSymbol)\r\n                    e.preventDefault();\r\n            }\r\n        });\r\n\r\n    },\r\n\r\n    executeFormatCurrencyPlugin: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (self.numericInput) {\r\n            self.numericInput.formatCurrency({\r\n                symbol: properties.symbol,\r\n                positiveFormat: properties.positiveFormat,\r\n                negativeFormat: properties.negativeFormat,\r\n                decimalSymbol: properties.decimalSymbol,\r\n                digitGroupSymbol: properties.digitGroupSymbol,\r\n                groupDigits: properties.groupDigits,\r\n                roundToDecimalPlace: properties.numDecimals,\r\n                colorize: properties.colorize\r\n            });\r\n        }\r\n\r\n        if (properties.dataType !== 8 && bizagi.override.removeTrailingZeros === true) {\r\n            var value = self.numericInput.val();\r\n            var positive = true;\r\n\r\n            if (value.indexOf(\")\") !== -1) {\r\n                positive = false;\r\n                value = value.replace(\"(\", \"\").replace(\")\", \"\")\r\n            }\r\n\r\n            var regExp = new RegExp(\"(\" + properties.decimalSymbol + \"\\\\d*?[1-9])0+$\", \"g\");\r\n            value = value.replace(regExp, \"$1\")\r\n\r\n            regExp = new RegExp(\"\\\\\" + properties.decimalSymbol + \"0+$\", \"g\");\r\n            value = value.replace(regExp, \"\");\r\n            self.numericInput.val(value);\r\n\r\n            if (!positive) self.numericInput.val(\"(\" + value + \")\");\r\n        }\r\n\r\n        if (properties.percentage)\r\n            self.numericInput.val(self.numericInput.val() + '%');\r\n    },\r\n\r\n    /**\r\n     * Returns the display value of the render\r\n     * @returns {*}\r\n     */\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n        var value = self.getValue() !== undefined ? self.getValue() : $(\"input\", control).val() || \"\";\r\n\r\n        // Workaround to get the display value by the format currency plugin, because it requires a control\r\n        var label = $('<label/>').html(value);\r\n\r\n        label.formatCurrency({\r\n            symbol: properties.symbol,\r\n            positiveFormat: properties.positiveFormat,\r\n            negativeFormat: properties.negativeFormat,\r\n            decimalSymbol: properties.decimalSymbol,\r\n            digitGroupSymbol: properties.digitGroupSymbol,\r\n            groupDigits: properties.groupDigits,\r\n            roundToDecimalPlace: properties.numDecimals,\r\n            colorize: properties.colorize\r\n        });\r\n\r\n        if (properties.percentage)\r\n            label = $('<label/>').html(label.text() + '%');\r\n\r\n        // Removing unrequired zeros as requested by BA26331\r\n        if (!properties.editable && properties.dataType !== 8 && bizagi.override.removeTrailingZeros === true) {\r\n            value = label.text();\r\n            var positive = true;\r\n\r\n            if (value.toString().indexOf(\")\") !== -1) {\r\n                positive = false;\r\n                value = value.replace(\"(\", \"\").replace(\")\", \"\");\r\n            }\r\n\r\n            var re = new RegExp(\"(\" + properties.decimalSymbol + \"\\\\d*?[1-9])0+$\", \"g\");\r\n            value = value.replace(re, \"$1\");\r\n\r\n            re = new RegExp(\"\\\\\" + properties.decimalSymbol + \"0+$\", \"g\");\r\n            value = value.replace(re, \"\");\r\n\r\n            if (!positive) value = \"(\" + value + \")\";\r\n            return value;\r\n        }\r\n\r\n        return label.text();\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @returns {*}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        var message;\r\n        var minValue = self.getMinValue();\r\n        var maxValue = self.getMaxValue();\r\n\r\n        if (typeof (value) == \"string\" && value != \"\") {\r\n            value = Number(value);\r\n        }\r\n\r\n        // Check min value\r\n        if (self.hasValue()) {\r\n            if (!bizagi.util.isEmpty(minValue)) {\r\n                if (value < minValue) {\r\n                    message = this.getResource(\"render-numeric-minimum-validation\").replaceAll(\"#label#\", properties.displayName.toString() + \" (\" + value + \")\").replaceAll(\"#minValue#\", minValue.toString());\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n            // Check max value\r\n            if (!bizagi.util.isEmpty(maxValue)) {\r\n                if (value > maxValue) {\r\n                    message = this.getResource(\"render-numeric-maximum-validation\").replaceAll(\"#label#\", properties.displayName.toString() + \" (\" + value + \")\").replaceAll(\"#maxValue#\", maxValue.toString());\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (self.isValidRender === false && !(bValid && bizagi.util.isMobileDevice())) {\r\n            bValid = false;\r\n            var validMessage = self.isValidRenderMessage ? self.isValidRenderMessage : \"error\";\r\n            invalidElements.push({xpath: properties.xpath, message: validMessage});\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Get minimum value\r\n     * @returns {*}\r\n     */\r\n    getMinValue: function () {\r\n        var minValue = this.properties.minValue;\r\n\r\n        if (minValue !== undefined && minValue !== null)\r\n            return minValue;\r\n\r\n        return this.properties.dataTypeMinValue;\r\n    },\r\n\r\n    /**\r\n     * Get maximum value\r\n     * @returns {*}\r\n     */\r\n    getMaxValue: function () {\r\n        var maxValue = this.properties.maxValue;\r\n\r\n        if (maxValue !== undefined && maxValue !== null)\r\n            return maxValue;\r\n\r\n        return this.properties.dataTypeMaxValue;\r\n    },\r\n\r\n    /**\r\n     * Return the allow decimals default property based on the datatype\r\n     * @param dataType\r\n     * @returns {boolean}\r\n     */\r\n    getDefaultAllowDecimals: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType === 1 || dataType === 2 || dataType === 3 || dataType === 4 || dataType === 7) {\r\n                return false;\r\n            }\r\n            // Decimal and money data types\r\n            if (dataType === 6 || dataType === 8 || dataType === 10 || dataType === 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    /**\r\n     * Return the group digits default property based on the datatype\r\n     * @param dataType\r\n     * @returns {boolean}\r\n     */\r\n    getDefaultGroupDigits: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType === 1 || dataType === 2 || dataType === 3 || dataType === 4 || dataType === 7) {\r\n                return false;\r\n            }\r\n\r\n            // Decimal data types\r\n            if (dataType === 6 || dataType === 8 || dataType === 10 || dataType === 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Return the group digits default property based on digitGroupSymbol\r\n     * @returns {*}\r\n     */\r\n    setGroupDigits: function () {\r\n        var self = this;\r\n        if (typeof (self.properties.thousands) !== \"undefined\") {\r\n            if (self.properties.digitGroupSymbol) { //some cultures\r\n                return bizagi.util.parseBoolean(self.properties.thousands);\r\n            } else {\r\n                return false;\r\n            }\r\n        } else if (self.properties.digitGroupSymbol) { //some cultures\r\n            return this.getDefaultGroupDigits(self.properties.dataType);\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Calculate Minimum Value\r\n     * @param dataType\r\n     * @returns {*}\r\n     */\r\n    calculateMinValue: function (dataType) {\r\n        if (dataType === 8 || dataType === 10) {\r\n            return -922337203685477; // Money\r\n        }\r\n        if (dataType === 4) {\r\n            return 0; // tinyint\r\n        }\r\n        if (dataType === 3) {\r\n            return -32768; // smallint\r\n        }\r\n        if (dataType === 2) {\r\n            return -2147483648; // int\r\n        }\r\n        if (dataType === 1) {\r\n            return -999999999999999; // bigint\r\n        }\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * Calculate Maximum Value\r\n     * @param dataType\r\n     * @returns {*}\r\n     */\r\n    calculateMaxValue: function (dataType) {\r\n        if (dataType === 8 || dataType === 10) {\r\n            return 922337203685477; // Money\r\n        }\r\n        if (dataType === 4) {\r\n            return 255; // tinyint\r\n        }\r\n        if (dataType === 3) {\r\n            return 32767; // smallint\r\n        }\r\n        if (dataType === 2) {\r\n            return 2147483647; // int\r\n        }\r\n        if (dataType === 1) {\r\n            return 999999999999999; // bigint\r\n        }\r\n        return null;\r\n    },\r\n\r\n    changeMinValue: function (value) {\r\n        var self = this;\r\n        var newValue = Number(value);\r\n\r\n        self.properties.minValue = self.properties.dataTypeMinValue = Number.isNaN(newValue) ? self.calculateMinValue(self.properties.dataType) : newValue;\r\n    },\r\n\r\n    changeMaxValue: function (value) {\r\n        var newValue = Number(value);\r\n\r\n        this.properties.maxValue = this.properties.dataTypeMaxValue = Number.isNaN(newValue) ? this.calculateMaxValue(this.properties.dataType) : newValue;\r\n    },\r\n\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        control.data(\"oldValue\", currentValue);\r\n        control.val(\"\");\r\n\r\n        try {\r\n            // Destroy tooltips\r\n            control.tooltip(\"destroy\");\r\n        } catch (e) {\r\n        }\r\n\r\n        control.attr(\"title\", currentTitle);\r\n        control.tooltip();\r\n\r\n        var toolTipZindex = $.getMaxZindex();\r\n        control.tooltip().on(\"tooltipopen\", function (event, ui) {\r\n            ui.tooltip.zIndex(toolTipZindex);\r\n        });\r\n\r\n        // Create new tooltip\r\n        control.tooltip(\"open\");\r\n\r\n        setTimeout(function () {\r\n            control.focus();\r\n        }, 100);\r\n    }\r\n});\r\n\r\n","\r\n/*\r\n*   Name: Bizagi Render Number Scientific notation Class\r\n*   Author: Laura Ariza\r\n*   Comments:\r\n*   -   This script will define basic stuff for scientific notation numbers\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.numberScientificNotation\", {\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n\r\n        properties.decimalSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\"\r\n            ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator : format.decimalSymbol;\r\n    },\r\n\r\n    renderControl: function() {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"numberScientificNotation\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {});\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function() {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        self.numericInput = control.find(\"input\");\r\n        // Add numeric plugin to avoid invalid keystrokes\r\n        self.numericInput.numericSN(self.properties.decimalSymbol);\r\n\r\n    },\r\n\r\n    getDisplayValue: function() {\r\n        var self = this;\r\n        return self.getValue().replace('.', self.properties.decimalSymbol);\r\n    },\r\n\r\n    setValue: function(value) {\r\n        var self = this;\r\n        value = (value || '').toString().replace(self.properties.decimalSymbol, '.');\r\n        self._super(value);\r\n    },\r\n    controlValueIsChanged: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var value = self.getValue() || \"\";\r\n        var compareValue = properties.originalValue || \"\";\r\n        var result = true;\r\n\r\n        // Flag to force to collect data\r\n        if ($.forceCollectData) {\r\n            return true;\r\n        }\r\n        result = (compareValue.toLowerCase() == value.toLowerCase()) ? false : true;\r\n        return result;\r\n    }\r\n\r\n});","/*\r\n*   Name: BizAgi Render Date Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for date renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.date\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var dateFormat = this.getResource(\"dateFormat\");\r\n        var timeFormat = this.getResource(\"timeFormat\");\r\n\r\n        // We will hold here the value to display\r\n        properties.displayValue = \"\";\r\n        properties.showTime = properties.showTime !== undefined ? bizagi.util.parseBoolean(properties.showTime) : false;\r\n        properties.dateFormat = properties.dateFormat || dateFormat;\r\n        properties.timeFormat = properties.timeFormat || timeFormat;\r\n        properties.fullFormat = properties.dateFormat;\r\n\r\n        // Check if it has the showtime property\r\n        if (properties.showTime) {\r\n            if (properties.fullFormat.search(/[h|H]+/ig) === -1) {\r\n                properties.fullFormat = properties.fullFormat + ' ' + properties.timeFormat;\r\n            }\r\n        }\r\n\r\n        // Read always parameter from server in invariant format\r\n        if (properties.value) {\r\n\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(properties.value, properties.showTime);\r\n            // Format date to current format\r\n            if (date != 0) {\r\n                // Value must always hold the value with invariant format\r\n                self.value = properties.value;\r\n                var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n                properties.displayValue = bizagi.util.dateFormatter.formatDate(date, properties.fullFormat, datePickerRegional);\r\n            } else {\r\n                self.value = null;\r\n            }\r\n        }\r\n    },\r\n    \r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"date\");\r\n        var indexDateTimeSeparation = properties.dateFormat.substring(0, properties.dateFormat.indexOf(\":\")).lastIndexOf(\" \");\r\n        var dateFormat = (indexDateTimeSeparation > 0) ? properties.dateFormat.substring(0, indexDateTimeSeparation) : properties.dateFormat;\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            showTime: properties.showTime,\r\n            value: properties.value,\r\n            editable: properties.editable,\r\n            dateFormat: bizagi.override && bizagi.override.uppercaseDatePlaceholder === true ? dateFormat.toUpperCase() : dateFormat,\r\n            timeFormat: (properties.showTime && indexDateTimeSeparation > 0) ? properties.dateFormat.substring(indexDateTimeSeparation) : \"\",\r\n            rtl: (properties.orientation == \"rtl\")\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n    */\r\n    configureHandlers: function (intHandler, isNow) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set control references\r\n        var dateControl = self.getDateControl();\r\n        var timeControl = self.getTimeControl();\r\n\r\n        // Set mask\r\n        if (properties.mask) {\r\n            dateControl.mask({\r\n                mask: properties.mask\r\n            });\r\n        }\r\n\r\n        // Attach change event\r\n        dateControl.bind(\"change\", function () {\r\n            self.onChangeHandler();\r\n        });\r\n        if (properties.showTime) {\r\n            timeControl.bind(\"change\", function (e, isNow) {\r\n                if (self.updatingTime) {\r\n                    delete self.updatingTime;\r\n                    return;\r\n                }\r\n                self.onChangeHandler(isNow);\r\n            });\r\n        }\r\n    },\r\n\r\n    /* \r\n    *   Formats the date time value to the hidden control\r\n    */\r\n    onChangeHandler: function () {\r\n    },\r\n\r\n    getDisplayValue: function (value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var displayValue;\r\n\r\n        if (!properties.displayValue && value) {\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(value, properties.showTime);\r\n            var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n            displayValue = bizagi.util.dateFormatter.formatDate(date, properties.fullFormat, datePickerRegional);\r\n        } else {\r\n            displayValue = \"\";\r\n        }\r\n\r\n        // We can return the display value isntance\r\n        return properties.displayValue || displayValue || \"\";\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            if (!bizagi.util.isEmpty(xpath)) {\r\n                if (!bizagi.util.isEmpty(value)) {\r\n                    // Formats the value in full invariant (with time) in order to send to the server\r\n                    var date = bizagi.util.dateFormatter.getDateFromInvariant(value, properties.showTime);\r\n                    if (typeof (date) != \"undefined\")\r\n                        if (date !== 0) {\r\n                            if (!properties.showTime) {\r\n                                date.setHours(0, 0, 0, 0);\r\n                            }\r\n                            renderValues[properties.xpath] = bizagi.util.dateFormatter.formatInvariant(date, true);\r\n                        }\r\n                } else if (value === \"\") {\r\n                    renderValues[properties.xpath] = \"\";\r\n                }\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Gets the date control\r\n    */\r\n    getDateControl: function () { },\r\n\r\n    /*\r\n    *   Gets the time control\r\n    */\r\n    getTimeControl: function () { },\r\n\r\n    /* \r\n    * Public method to determine if a value is valid or not\r\n    */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n        properties = self.properties;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        if (value) {\r\n            if (bizagi.util.parseBoolean(properties.editable) === true) {\r\n                value = bizagi.util.dateFormatter.getDateFromInvariant(value, properties.showTime);\r\n                var message;\r\n\r\n                // Check that we have a valid data\r\n                if (value != 0) {\r\n                    // Clear seconds and milliseconds for validations\r\n                    value.setSeconds(0);\r\n                    value.setMilliseconds(0);\r\n\r\n                    // Check min value\r\n                    if (properties.minValue && (typeof properties.minValue === 'string' || typeof properties.minValue == 'number')) {\r\n                        var minValue = typeof properties.minValue == 'string' ? bizagi.util.dateFormatter.getDateFromInvariant(properties.minValue, properties.showTime) : new Date(properties.minValue);\r\n                        minValue.setSeconds(0);\r\n                        minValue.setMilliseconds(0);\r\n\r\n                        if (value < minValue) {\r\n                            message = this.getResource(\"render-date-minimum-validation\").replaceAll(\"#label#\", properties.displayName).replaceAll(\"#minValue#\", bizagi.util.dateFormatter.formatDate(minValue, properties.fullFormat));\r\n                            invalidElements.push({\r\n                                xpath: properties.xpath,\r\n                                message: message\r\n                            });\r\n                            bValid = false;\r\n                        }\r\n                    }\r\n\r\n                    // Check max value\r\n                    if (properties.maxValue && (typeof properties.maxValue == 'string' || typeof properties.maxValue == 'number')) {\r\n                        var maxValue = typeof properties.maxValue == 'string' ? bizagi.util.dateFormatter.getDateFromInvariant(properties.maxValue, properties.showTime) : new Date(properties.maxValue);\r\n                        maxValue.setSeconds(0);\r\n                        maxValue.setMilliseconds(0);\r\n\r\n                        if (value > maxValue) {\r\n                            message = this.getResource(\"render-date-maximum-validation\").replaceAll(\"#label#\", properties.displayName).replaceAll(\"#maxValue#\", bizagi.util.dateFormatter.formatDate(maxValue, properties.fullFormat));\r\n                            invalidElements.push({\r\n                                xpath: properties.xpath,\r\n                                message: message\r\n                            });\r\n                            bValid = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Check that both controls (data and time) are filled out\r\n        if (properties.showTime) {\r\n            if (bizagi.util.parseBoolean(properties.editable) === true) {\r\n                // Check required\r\n                if (properties.required && self.hasValue()) {\r\n\r\n                    // Check both controls\r\n                    var dateControl = self.getDateControl();\r\n                    var timeControl = self.getTimeControl();\r\n\r\n                    // If date is filled but time is not ... show validation\r\n                    if (dateControl.length > 0 && timeControl.length > 0) {\r\n                        if (dateControl.val().length > 0 && timeControl.val().length == 0) {\r\n                            message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                            invalidElements.push({\r\n                                xpath: properties.xpath,\r\n                                message: message\r\n                            });\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Text Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for text renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.extendedText\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Check if offline forms is supported\r\n        this.isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n        this.hasMaxLines = this.properties.maxLines ? true : false;\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        // Fill default properties\r\n        properties.maxLines = this.properties.maxLines || 6;\r\n\r\n        if (properties.regularExpressionExpression) {\r\n            var message = properties.regularExpressionMessage || self.getResource(\"render-text-regular-expression-default-message\");\r\n\r\n            properties.regularExpression = {\"expression\": properties.regularExpressionExpression, \"message\": message};\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"extendedText\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            isEmptyField: typeof (this.properties.value) === \"undefined\",\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        self._super();\r\n\r\n        var control = self.getControl();\r\n        self.textarea = control.find(\"textarea\");\r\n\r\n        // If is textarea, then enable resize element.\r\n        if (self.textarea) {\r\n            self.textarea.css({resize: \"both\"});\r\n        } else {\r\n            self.textarea.css({resize: \"none\"});\r\n        }\r\n\r\n        // Attach event for retype double\r\n        if (self.properties.retype === \"double\")\r\n            self.attachRetypeDouble();\r\n    },\r\n\r\n    /**\r\n     * Function virtual implements on children (desktop,samrtphone...).\r\n     */\r\n    attachRetypeDouble: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set the default maxlength for the input if is 0 or undefined set to infinity\r\n        // this resolve issue with scope strings that don't have maxlength\r\n        if (properties.maxLength)\r\n            self.textarea.prop('maxlength', properties.maxLength);\r\n\r\n        if (properties.maxLines) {\r\n            self.textarea.prop('rows', properties.maxLines)\r\n        } else {\r\n            self.textarea.prop('rows', 6);\r\n        }\r\n\r\n        // Attach change event\r\n        self.textarea.bind(\"change\", function () {\r\n\r\n            // Updates internal value\r\n            self.setValue(self.textarea.val());\r\n\r\n            // Check that the value is valid\r\n            var validationMessages = [];\r\n            if (properties.retype !== \"duplicate\") {\r\n                if (self.isValid(validationMessages) || typeof (properties.regularExpression) === \"undefined\") {\r\n                    // Update value again triggering handlers\r\n                    self.setValue(self.textarea.val(), true);\r\n                } else {\r\n                    // Set error message\r\n                    var message = validationMessages[0].message;\r\n                    bizagi.showMessageBox(message, \"Bizagi\", \"error\");\r\n                }\r\n            }\r\n        });\r\n\r\n        // Attach blur event\r\n        self.textarea.bind(\"blur\", function () {\r\n            // Updates internal value\r\n            self.setValue(self.textarea.val());\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param {} invalidElements\r\n     * @returns {}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        var regEx = new RegExp(\".*?(<|\\\\u003C)(.+?)(>|\\\\u003E)(.?)|eval\\\\(|eval\\\\u0028\", \"g\");\r\n\r\n        // Offline capability\r\n        if (this.isOfflineForm && bizagi.util.isMobileDevice()) {\r\n            value = value && typeof (value) === \"object\" && value.value ? value.value : value;\r\n        }\r\n\r\n        // Check regular expression\r\n        if (properties.regularExpression) {\r\n\r\n            if (value && ((value.match(regEx)) || (!value.match(new RegExp(properties.regularExpression.expression)) && (self.properties && self.properties.xpath === \"userName\")))) {\r\n                message = properties.regularExpression.message;\r\n                invalidElements.push({xpath: properties.xpath, message: message});\r\n                bValid = false;\r\n            } else {\r\n                if (value && ((value.match(regEx)) || (!value.match(new RegExp(properties.regularExpression.expression))))) {\r\n                    message = properties.regularExpression.message;\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n        } else {\r\n            if (value && (value.match(new RegExp(\".*?eval\\\\(\", \"g\"))) && (value.match(new RegExp(\".*?eval\\\\u0028\", \"g\")))) {\r\n                if (properties.editable) {\r\n                    message = this.getResource(\"render-text-regular-expression-default-message\");\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n\r\n        if (self.properties.editable == false) {\r\n            // Render as simple value\r\n            if (typeof (value) == \"string\") {\r\n\r\n                // Replace line breaks for html line breaks\r\n                var valueToDisplay = bizagi.util.decodedDisplayValue(self.getDisplayValue());\r\n\r\n                control.html(valueToDisplay);\r\n            }\r\n        }\r\n\r\n        // Set internal value\r\n        self.setValue(decodedValue, false);\r\n    },\r\n\r\n    /**\r\n     * Add the render data to the given collection in order to send data to the server\r\n     * @param {} renderValues\r\n     * @returns {}\r\n     */\r\n    collectData: function (renderValues) {\r\n        // Call base\r\n        this._super(renderValues);\r\n    },\r\n\r\n    /**\r\n     * Extend setValue to fix all encode data from database\r\n     * More information SUITE-9407\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setValue: function (value) {\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n\r\n        this._super(decodedValue);\r\n    },\r\n\r\n    /**\r\n     * Helptext tooltip\r\n     * @param {} control\r\n     * @param {} currentValue\r\n     * @param {} currentTitle\r\n     */\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        control.data(\"oldValue\", currentValue);\r\n        control.val(\"\");\r\n\r\n        if(control.data('ui-tooltip')) control.tooltip('destroy');  \r\n\r\n        control.attr(\"title\", currentTitle);\r\n        control.tooltip();\r\n\r\n        var toolTipZindex = $.getMaxZindex();\r\n        control.tooltip().on(\"tooltipopen\", function (event, ui) {\r\n            ui.tooltip.zIndex(toolTipZindex);\r\n        });\r\n\r\n        // Create new tooltip\r\n        control.tooltip(\"open\");\r\n\r\n        setTimeout(function () {\r\n            control.focus();\r\n        }, 100);\r\n    },\r\n\r\n    //#region No side effects functions\r\n    /**\r\n     * Gets the string with the correct size\r\n     * @param {string} value String value to validate\r\n     * @param {Int} maxLength Maximum size of the string\r\n     * @returns {string} String value validated\r\n     */\r\n    validateValue: function (value, maxLength) {\r\n        if(maxLength<1 || value.length<=maxLength)return value;\r\n        return value.substr(0, maxLength)\r\n    }\r\n    //#endregion No side effects functions\r\n});\r\n","/*\r\n *   Name: Bizagi Render Grid Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for grids\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.grid\", {}, {\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        self.originalData = bizagi.clone(data.properties);\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        self.initProperties();\r\n\r\n        // Set columns\r\n        var areThereEditableColumns;\r\n        var areThereTotalizedColumns;\r\n        self.columns = [];\r\n        self.columnsIds = [];\r\n        self.enabledChecks = {};\r\n        self.exclusiveChanges = {};\r\n        self.originalEnabledChecks = [];\r\n        $.each(data.elements, function (i, column) {\r\n            var columnProperties = column.render.properties;\r\n\r\n            // the groupby property is taken of column\r\n            if (columnProperties.groupBy) {\r\n                properties.groupBy = columnProperties.xpath || \"\";\r\n                properties.allowGrouping = !bizagi.util.isEmpty(properties.groupBy) ? true : false;\r\n            }\r\n           //if (columnProperties.type === \"columnLabel\") {\r\n                //self.spliceRowData(data.properties.data, i + 1);\r\n            //}\r\n\r\n            if (columnProperties.type === \"columnBoolean\" && columnProperties.isExclusive) {\r\n                properties.hasExclusiveCheck = true;\r\n                self.enabledChecks[columnProperties.xpath] = [];                   \r\n            }\r\n                       \r\n            // If inlineEdit is false then all columns must be read only\r\n            if (!self.properties.inlineEdit) {\r\n                column.render.properties.editable = false;\r\n            }\r\n\r\n            // Create renderColumns\r\n            var columnRender = self.renderFactory.getColumn({\r\n                type: columnProperties.type,\r\n                data: column.render,\r\n                parent: self,\r\n                singleInstance: properties.singleInstance\r\n            });\r\n\r\n            self.columns.push(columnRender);\r\n            self.columnsIds.push(column.render.properties.id);\r\n\r\n            if (columnProperties.editable) {\r\n                areThereEditableColumns = true;\r\n            }\r\n\r\n            if (columnProperties.totalize && columnProperties.totalize.operation) {\r\n                areThereTotalizedColumns = true;\r\n\r\n                // Default summary format\r\n                columnProperties.totalize.format = columnProperties.totalize.format || {};\r\n                columnProperties.totalize.format.bold = columnProperties.totalize.format.bold !== undefined ? columnProperties.totalize.format.bold : true;\r\n            }\r\n        });\r\n\r\n        // Reverse columns when using right to left orientation\r\n        if (properties.orientation === \"rtl\")\r\n            self.columns = self.columns.reverse();\r\n\r\n        // Turn off inline edit if there are any editable columns        \r\n        if (properties.inlineEdit && !areThereEditableColumns) {\r\n            properties.inlineEdit = false;\r\n            properties.allowEdit = false;\r\n        }\r\n\r\n        // Check if the grid has totalizers\r\n        if (areThereTotalizedColumns) {\r\n            properties.showSummary = true;\r\n            properties.rowsPerPage = 0;\r\n        }\r\n    },\r\n\r\n    initProperties: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        /** Edit properties\r\n         * @default editable true\r\n         */\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) || false;\r\n        properties.allowEdit = bizagi.util.parseBoolean(properties.allowEdit) != null ? bizagi.util.parseBoolean(properties.allowEdit) : true;\r\n        properties.inlineEdit = bizagi.util.parseBoolean(properties.inlineEdit) != null ? bizagi.util.parseBoolean(properties.inlineEdit) : true;\r\n        properties.withEditForm = bizagi.util.parseBoolean(properties.withEditForm) != null ? bizagi.util.parseBoolean(properties.withEditForm) : false;\r\n\r\n        /** Add properties\r\n         * @default  allowAdd true\r\n         */\r\n        properties.allowAdd = bizagi.util.parseBoolean(properties.allowAdd) != null ? bizagi.util.parseBoolean(properties.allowAdd) : true;\r\n        properties.inlineAdd = (properties.allowAdd) ? (bizagi.util.parseBoolean(properties.inlineAdd) != null) ? bizagi.util.parseBoolean(properties.inlineAdd) : true : false;\r\n\r\n        /* Define Delete properties */\r\n        properties.allowDelete = bizagi.util.parseBoolean(properties.allowDelete) != null ? bizagi.util.parseBoolean(properties.allowDelete) : true;\r\n\r\n        /* Define details properties*/\r\n        properties.allowDetail = bizagi.util.parseBoolean(properties.allowDetail) != null ? bizagi.util.parseBoolean(properties.allowDetail) : false;\r\n\r\n        /* Define general properties */\r\n        properties.keyColumn = \"\";\r\n        properties.data = properties.data || null;\r\n        properties.displayType = \"value\";\r\n        properties.skipInitialLoad = properties.skipInitialLoad || false;\r\n        properties.allowMore = bizagi.util.parseBoolean(properties.allowMore) || false;\r\n        properties.allowFilter = bizagi.util.parseBoolean(properties.allowFilter) || false;\r\n        properties.allowGrouping = false;\r\n        properties.groupBy = \"\";\r\n        properties.groupSummary = properties.groupSummary || null;\r\n        properties.groupText = this.getResource(\"render-grid-group-text\");\r\n        properties.groupCollapsed = bizagi.util.parseBoolean(properties.groupCollapsed) || false;\r\n        properties.groupOrder = properties.groupOrder || \"asc\";\r\n        properties.formShowMode = bizagi.util.parseBoolean(properties.formShowMode) || \"popup\";\r\n        properties.floatingHeader = bizagi.util.parseBoolean(properties.floatingHeader) || false;\r\n\r\n        properties.sortBy = properties.sortBy ? properties.sortBy : properties.data && properties.data.sort ? properties.data.sort : properties.keyColumn;\r\n        properties.sortOrder = properties.sortOrder !== undefined && properties.sortOrder !== null ? (properties.sortOrder === \"True\" ? \"asc\" : \"desc\") : properties.data && properties.data.order ? properties.data.order : \"asc\";\r\n        properties.sort = properties.sortBy + \" \" + properties.sortOrder;\r\n\r\n        properties.rowsPerPage = properties.allowGrouping ? 1000 : (properties.rowsPerPage || 20);\r\n        properties.page = 1;\r\n        properties.records = 0;\r\n        properties.totalPages = 0;\r\n\r\n        properties.addLabel = properties.addLabel || this.getResource(\"render-grid-add-label\") + properties.displayName;\r\n        properties.editLabel = properties.editLabel || $.trim(this.getResource(\"render-grid-edit-label\")) + \" \" + properties.displayName;\r\n        properties.deleteLabel = properties.deleteLabel || this.getResource(\"render-ecm-confirm-bt-delete\") + \" \" + properties.displayName;\r\n        properties.exportOptionsLabel = properties.exportOptionsLabel || this.getResource(\"render-grid-export-options-label\") + properties.displayName;\r\n        properties.detailLabel = properties.detailLabel || this.getResource(\"render-collection-navigator-details-form\");\r\n\r\n\r\n        // Apply style to entire table\r\n        properties.tableCssClass = properties.cssClass || \"\";\r\n\r\n        properties.alreadySaved = false;\r\n\r\n        // When grid open in modal window and the parent is entity\r\n        if (properties.contexttype != \"entity\") {\r\n            properties.contexttype = (typeof self.parent.getContextType == 'function') ? self.parent.getContextType() : \"\";\r\n        }\r\n\r\n        // Define if it is editable or not        \r\n        /* This part change all cells in the table to no editable,\r\n         * you must use it when the parent container has noeditable property,\r\n         * so this table is noeditable too.\r\n         */\r\n        try {\r\n            if ((self.parent && typeof self.parent.properties.editable == \"boolean\" && !self.parent.properties.editable) || !properties.editable) {\r\n                properties.allowAdd = false;\r\n                properties.allowEdit = false;\r\n                properties.allowDelete = false;\r\n                properties.inlineEdit = false;\r\n                properties.inlineAdd = false;\r\n                properties.editable = false;\r\n            }\r\n        } catch (e) {\r\n        }\r\n\r\n\r\n        // If grid has not allowEdit property in true, all fields within the grid\r\n        // must be no editables, so these lines changes this behavior\r\n        if (!properties.allowEdit || (!properties.inlineEdit && !properties.withEditForm)) {\r\n            properties.editable = false;\r\n        }\r\n\r\n        // Calculate render width\r\n        properties.labelWidth = 0;\r\n        properties.valueWidth = \"100%\";\r\n\r\n        // This property will be used to make custom grids with another data source\r\n        properties.overrideGetRemoteData = properties.overrideGetRemoteData || undefined;\r\n        //this property use to create a single decorated or a array of decorated\r\n        properties.singleInstance = bizagi.util.isEmpty(properties.singleInstance) ? true : properties.singleInstance;\r\n\r\n        // Check if the grid its opened whitin dialog form and has contextType\r\n        properties.contextType = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : null;\r\n\r\n        // Create a collection to collect changes\r\n        self.changes = {};\r\n\r\n        // Create a collection to override properties per cell\r\n        self.cellOverrides = {};\r\n\r\n\r\n        // Check orientation and change order of data if its necesary (rtl)\r\n        if (self.isRTL() && properties.data != null) {\r\n            properties.data.rows = self.changeOrderData(properties.data.rows);\r\n        }\r\n    },\r\n\r\n    /*\r\n   *   Check if a render has no value for required validation\r\n   */\r\n    hasValue: function () {\r\n        return this.properties.data && this.properties.data.rows.length > 0;\r\n    },\r\n\r\n    isRTL: function () {\r\n        var properties = this.properties;\r\n        if (!properties) return true;\r\n        return (typeof properties.orientation == \"string\" && properties.orientation.toUpperCase() == \"RTL\") ? true : false;\r\n    },\r\n    changeOrderData: function (data) {\r\n        var reverseDataRows = [];\r\n        var rows = data || [];\r\n        var rowKey;\r\n\r\n        $.each(rows, function (key, value) {\r\n            // Extract row key\r\n            rowKey = value.shift();\r\n            reverseDataRows = value.reverse();\r\n            // add element in the start\r\n            reverseDataRows.unshift(rowKey);\r\n\r\n            rows[key] = reverseDataRows;\r\n        });\r\n\r\n        return rows;\r\n    },\r\n\r\n    /**\r\n     * Specific fix RTL with localizated\r\n     * @param data\r\n     * @returns {*|Array}\r\n     */\r\n    removeRemainingColumns: function (data, numColumns) {\r\n        var rows = data || [];\r\n        var remainingColumns = 0;\r\n        if (rows.length > 0) {\r\n            // \"- 1\" because the first column represent id row\r\n            remainingColumns = rows[0].length - numColumns - 1;\r\n        }\r\n        if (remainingColumns > 0) {\r\n            $.each(rows, function (key, value) {\r\n                // Remove remaining columns\r\n                for (var i = 0; i < remainingColumns; i++) {\r\n                    value.pop();\r\n                }\r\n            });\r\n        }\r\n        return rows;\r\n    },\r\n\r\n    /* \r\n     *   Gets a column definition by xpath\r\n     */\r\n    getColumn: function (xpath) {\r\n        var self = this;\r\n        var result = null;\r\n        $.each(self.columns, function (i, column) {\r\n            if (\r\n                column.properties.xpath == xpath || \r\n                column.properties.id == xpath ||\r\n                column.properties.xpath + \".\" + column.properties.id == xpath\r\n            ) {\r\n                result = column;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    },\r\n\r\n    getColumnType: function (id) {\r\n        var self = this;\r\n        var columnIndex = self.columnsIds.indexOf(id);\r\n\r\n        if (columnIndex != -1) {\r\n            return self.columns[columnIndex].properties.type;\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    /*\r\n     *   Template method to implement in each children to customize each control\r\n     *   Returns a promise that will be resolved when all the columns has been loaded\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        // Set dummy data when not in execution mode\r\n        var mode = self.getMode();\r\n        if (mode !== \"execution\") {\r\n            properties.data = self.getDummyData();\r\n        }\r\n\r\n        var template = self.getGridTemplate();\r\n\r\n        // Render template\r\n        var html = self.applyTemplate(template);\r\n\r\n        // Initialize columns\r\n        var columnInitializers = [];\r\n        $.each(self.columns, function (i, column) {\r\n\r\n            // Add to column initializer array so we can synch out the promises\r\n            var result = column.initialize();\r\n            if (result)\r\n                columnInitializers.push(result);\r\n        });\r\n\r\n        // Resolve when all columns has been loaded\r\n        $.when.apply($, columnInitializers).done(function () {\r\n            defer.resolve(html);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n    /*\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Call base\r\n        this._super();\r\n\r\n        // Make control to behave as a block container\r\n        // TODO: Move to instances. This does not apply to mobiles\r\n        control.addClass(\"ui-bizagi-render-grid-container\")\r\n            .addClass(\"ui-bizagi-render-display-block\");\r\n    },\r\n\r\n    /*\r\n     *   Returns the grid template to be used\r\n     */\r\n    getGridTemplate: function () {\r\n        return this.renderFactory.getTemplate(\"grid\");\r\n    },\r\n\r\n    /*\r\n     *   Applies the template to the render and returns the resolved element\r\n     */\r\n    applyTemplate: function (template) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        orientation = self.properties.orientation;\r\n\r\n        return $.fasttmpl(template, {\r\n            id: bizagi.util.encodeXpath(properties.xpath),\r\n            displayName: bizagi.util.encodeXpath(properties.displayName),\r\n            allowAdd: properties.allowAdd,\r\n            addLabel: properties.addLabel\r\n        });\r\n    },\r\n    /*\r\n     *   Method to render non editable values\r\n     *   Returns a promise that will be resolved when all the columns has been loaded\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n\r\n        // Override read-only presets\r\n        //  properties.allowAdd = false;\r\n        // Render the same, just change some presets\r\n        return self.renderControl();\r\n    },\r\n    /*\r\n     *   Fetch the data into a deferred\r\n     */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set params\r\n        params = params || {};\r\n        $.extend(params, {\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType,\r\n            idPageCache: properties.idPageCache,\r\n            sort: properties.sortBy,\r\n            order: properties.sortType,\r\n            page: properties.page,\r\n            rows: properties.rowsPerPage,\r\n            searchFilter: properties.searchFilter,\r\n            orientation: properties.orientation || \"ltr\"\r\n        });\r\n\r\n        // Check if a custom method has been given\r\n        if (properties.overrideGetRemoteData) {\r\n            return properties.overrideGetRemoteData(params);\r\n        } else {\r\n            // Resolve with remote data\r\n            return self.dataService.multiaction().getGridData(params).then(function (data) {\r\n                self.originalData = self.originalData || {};\r\n                self.originalData.data = bizagi.clone(data);\r\n\r\n                // Resolve with fetched data\r\n                properties.page = data.page;\r\n                properties.records = data.records;\r\n                properties.totalPages = data.totalPages;\r\n\r\n                return data;\r\n            });\r\n        }\r\n    },\r\n    /*\r\n     insert a blank item in the selected column in the data matrix\r\n     */\r\n    spliceRowData: function (data, index) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        if (mode === \"execution\" && (data && data.rows)) {\r\n            $.each(data.rows, function (key, value) {\r\n                var spliceIndex = index || data.rows[key].length;\r\n                data.rows[key].splice(spliceIndex, 0, \"\");\r\n            });\r\n        }\r\n    },\r\n\r\n    spliceRowDataVisible: function(data, index) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        if (mode === \"execution\" && (data && data.visible)) {\r\n            $.each(data.visible, function (key, value) {\r\n                var spliceIndex = index || data.visible[key].length;\r\n                data.visible[key].splice(spliceIndex, 0, true);\r\n            });\r\n        }\r\n    },\r\n\r\n    spliceRowDataEditable: function(data, index) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        if (mode === \"execution\" && (data && data.editable)) {\r\n            $.each(data.editable, function (key, value) {\r\n                var spliceIndex = index || data.editable[key].length;\r\n                data.editable[key].splice(spliceIndex, 0, true);\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n     *   Creates a set of dummy data in order to display it when rendering in design or layout mode\r\n     */\r\n    getDummyData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (properties.data) {\r\n            return properties.data;\r\n\r\n        } else {\r\n            var rowTemplate = [\"1\"];\r\n\r\n            // Add a value for each column\r\n            for (var i = 0; i < self.columns.length; i++) {\r\n                rowTemplate.push(\"\");\r\n            }\r\n\r\n            var data = {\r\n                \"page\": 1,\r\n                \"total\": 1,\r\n                \"records\": 1,\r\n                \"rows\": [rowTemplate]\r\n            };\r\n\r\n            return data;\r\n        }\r\n    },\r\n    /*\r\n     *   Submits a grid edit record request for the given id\r\n     *   Returns a deferred\r\n     */\r\n    submitEditRequest: function (id) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var xpath = properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n        return self.dataService.editGridRecord({\r\n            url: properties.editUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType\r\n        });\r\n    },\r\n    /*\r\n     *   Submits a grid edit record request for the given id\r\n     *   Returns a deferred\r\n     */\r\n    submitSaveRequest: function (id, data) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        // Check if there are deferreds to wait\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        // Calculate xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + properties.xpath + self.buildCellXpathFilter(id) : properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n        return $.when(deferredsToWait).pipe(function () {\r\n            self.startLoading();\r\n            return self.dataService.saveGridRecord({\r\n                url: properties.saveUrl,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: xpathContext,\r\n                submitData: data,\r\n                contexttype: properties.contextType,\r\n                disableServerGridValidations: data.disableServerGridValidations || false\r\n            }).pipe(function (dataResp) {\r\n                self.endLoading();\r\n                return dataResp;\r\n            }).fail(function (dataFail) {\r\n                var form = self.getFormContainer();\r\n                var message = (dataFail.responseText) ? dataFail.responseText : ((typeof dataFail == \"string\") ? dataFail : dataFail.toString());\r\n                //Convert String to object\r\n                if (typeof message == \"string\") {\r\n                    try {\r\n                        message = JSON.parse(message).message;\r\n                    } catch (e) {\r\n                        message = message.match(/\"message\":(.*)\",/)[0];\r\n                        message = message.substr(11, message.length - 13);\r\n                    }\r\n\r\n                } else if (!message.message) {\r\n                    message = dataFail;\r\n                }\r\n                form.validateForm();\r\n                form.clearValidationMessages();\r\n                form.addValidationMessage(message);\r\n            });\r\n        });\r\n    },\r\n    /*\r\n     *   Submits a grid delete record request for the given id\r\n     *   Returns a deferred\r\n     */\r\n    submitDeleteRequest: function (id) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var xpath = properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n        return self.dataService.deleteGridRecord({\r\n            url: properties.deleteUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType\r\n        }).pipe(function (data) {\r\n            if (data.type == \"validationMessages\") {\r\n                var form = self.getFormContainer();\r\n                var message = data.messages.join(\" \");\r\n                form.failHandler({message: message});\r\n            }\r\n\r\n            return data;\r\n        });\r\n    },\r\n    /*\r\n     *   Submits a grid add record request\r\n     *   Returns a deferred when done, the server returns an id for the new record\r\n     */\r\n    submitAddRequest: function () {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var request = self.dataService.addGridRecord({\r\n            url: properties.addUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType,\r\n            idPageCache: properties.idPageCache\r\n        });\r\n\r\n        var filterResponse = request.pipe(function (data) {\r\n            // Parses response\r\n            return data.idEntity;\r\n        });\r\n\r\n        return filterResponse.promise();\r\n    },\r\n    /*\r\n     *   Submits a grid rollback request\r\n     *   Returns a deferred when done\r\n     */\r\n    submitRollbackRequest: function (params) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        return self.dataService.rollbackGridAction({\r\n            url: properties.rollbackUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: params ? params.idPageCache : properties.idPageCache,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        });\r\n    },\r\n    /*\r\n     *   Collect a single cell change made in the grid to send the data when the user saves the form\r\n     */\r\n    collectGridChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        var id = params.id;\r\n        var xpath = params.xpath;\r\n        var value = params.value;\r\n        var trigger = typeof (params.trigger) !== \"undefined\" ? params.trigger : true;\r\n        var isPressed = params.pressed || false;\r\n\r\n        self.changes[id] = self.changes[id] || {};\r\n        self.changes[id][xpath] = value;\r\n\r\n        if (trigger)\r\n            self.triggerRenderChange({key: id, column: xpath, pressed: isPressed});\r\n    },\r\n    /*\r\n     *   Configures a column to perform a submit on change when the user changes a cell\r\n     */\r\n    configureColumnSubmitOnChange: function (xpath) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Build action\r\n        var action = {\r\n            commands: [{\r\n                xpath: properties.xpath,\r\n                command: 'submit-value',\r\n                argument: 'all'\r\n            }],\r\n            conditions: {\r\n                operator: 'and',\r\n                expressions: [\r\n                    {\r\n                        simple: {\r\n                            operator: 'cell-change',\r\n                            xpath: properties.xpath + '[].' + xpath,\r\n                            argumentType: 'text',\r\n                            argument: xpath\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            dependencies: [properties.xpath]\r\n        };\r\n\r\n        // Add action when form ends its rendering\r\n        $.when(self.ready())\r\n            .done(function () {\r\n                var form = self.getFormContainer();\r\n                form.addSubmitAction(xpath, action);\r\n            });\r\n    },\r\n    /*\r\n     *   Add the render data to the given collection in order to send data to the server\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var keysToDelete = [];\r\n\r\n        if (self.exclusiveChanges) {\r\n            //Add filter to parse all checks in tru to false. DON'T CHANGE CODE ORDER\r\n            for (var xpath in self.exclusiveChanges) {//Brings the xpath columns with changes\r\n                var columnExclusiveChanges = self.exclusiveChanges[xpath];\r\n                var columnEnabledChecks = self.enabledChecks[xpath];\r\n                if (columnExclusiveChanges && columnEnabledChecks) {\r\n                    // If there are any change, its needed to include as a change the filter to set all rows in false\r\n                    var xpathExclusiveFilter = properties.xpath + \"[\" + xpath + \"=true].\" + xpath;\r\n                    renderValues[xpathExclusiveFilter] = false;                    \r\n                }\r\n            }\r\n        }\r\n\r\n        for (var id in self.changes) {\r\n            // Dont collect data from totalizers \r\n            if (id != \"summary\") {\r\n                for (var columnXpath in self.changes[id]) {\r\n                    // Check if the render can submit data\r\n                    if (self.canColumnBeSent(id, columnXpath)) {\r\n                        var xpath = properties.xpath + self.buildCellXpathFilter(id) + \".\" + columnXpath;\r\n                        var value = self.changes[id][columnXpath];\r\n\r\n                        renderValues[xpath] = value;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Clean changes \r\n            keysToDelete.push(id);\r\n\r\n        }\r\n        //If any exclusive check is true, set the new value in renderValues. DON'T CHANGE CODE ORDER\r\n        if (self.exclusiveChanges) {\r\n            for (var xpath in self.exclusiveChanges) {//Brings the xpath columns with changes\r\n                var columnExclusiveChanges = self.exclusiveChanges[xpath];\r\n                var columnEnabledChecks = self.enabledChecks[xpath];\r\n                if (columnExclusiveChanges && columnEnabledChecks) {\r\n                    var checkedObject = self.exclusiveChanges[xpath];                    \r\n                    if (checkedObject && checkedObject.value){\r\n                        var columnSimpleXpathEnabled = properties.xpath + self.buildCellXpathFilter(checkedObject.key) + \".\" + xpath;                                                    \r\n                        renderValues[columnSimpleXpathEnabled] = checkedObject.value;                \r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Clean changes array in order to prevent duplicate data\r\n        // when execute SUBMITDATA in multiaction, that make and error\r\n        // in circular dependencies, specially when we add inline record\r\n        $.each(keysToDelete, function (key, v) {\r\n            delete self.changes[v];\r\n        });\r\n    },\r\n\r\n    hasChanged: function (result) {\r\n        var self = this;\r\n        if (!$.isEmptyObject(self.changes)) {\r\n            result.push(true);\r\n            return true;\r\n        } else {\r\n            if (!$.isEmptyObject(self.exclusiveChanges)) {\r\n                result.push(true);\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n     *   Check if a column data can be sent to the server\r\n     */\r\n    canColumnBeSent: function (id, columnXpath) {\r\n        var self = this, i, j, xpath;\r\n        for (i in self.columns) {\r\n            if (self.columns.hasOwnProperty(i)) {\r\n                var column = self.columns[i];\r\n                if (column.properties.type !== \"columnUserfield\") {\r\n                    if (column.properties.xpath == columnXpath) {\r\n                        var cellOverride = self.getCellOverride(id, column.columnIndex - 1);\r\n                        return column.canBeSent(id, cellOverride);\r\n                    }\r\n                } else {\r\n                    for (j in column.properties) {\r\n                        if (column.properties.hasOwnProperty(j)) {\r\n                            if (Object.prototype.toString.apply(column.properties[j]) === \"[object String]\") {\r\n                                xpath = column.properties[j].substr(column.properties[j].lastIndexOf(\".\") + 1);\r\n                                if (xpath === columnXpath) {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n    /* \r\n     *  Method to determine if the render value can be sent to the server or not\r\n     */\r\n    canBeSent: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var displayOnly = bizagi.util.parseBoolean(properties.displayOnly) || false;\r\n\r\n        // The render can be sent if it is \"display only\" and inline Edit is available\r\n        if (!displayOnly && (properties.inlineEdit || properties.inlineAdd || !$.isEmptyObject(self.changes))) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    /*\r\n     *   Return the value for a requested cell\r\n     */\r\n    getCellValue: function (key, xpath) {\r\n        var self = this;\r\n        var data = self.properties.data.rows;\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (data[i][0] == key) {\r\n                for (var j = 0; j < self.columns.length; j++) {\r\n                    if (self.columns[j].properties.xpath == xpath) {\r\n                        var result = data[i][j + 1];\r\n                        return result;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n     *\r\n     */\r\n    getCellCurrentValue: function (key, xpath) {\r\n        var self = this;\r\n\r\n        var control = self.getControlCell(key, xpath);\r\n        if (control && typeof control.getValue === \"function\") {\r\n            return control.getValue();\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n     *   Gets control\r\n     */\r\n    getControlCell: function (key, xpath) {\r\n        var self = this;\r\n        var control = null;\r\n        if (typeof (self.columns) != \"undefined\")\r\n            for (var j = 0; j < self.columns.length; j++) {\r\n                if (\r\n                    self.columns[j].properties.xpath == xpath || \r\n                    self.columns[j].properties.id == xpath ||\r\n                    self.columns[j].properties.xpath + \".\" + self.columns[j].properties.id == xpath \r\n                ) {\r\n                    control = self.columns[j].getDecorated(key);\r\n                    break;\r\n                }\r\n            }\r\n\r\n\r\n        return control;\r\n    },\r\n\r\n    changeRequired: function (argument) {\r\n        this.properties.required = argument;\r\n        this.changeRequiredLabel(argument);\r\n    },\r\n\r\n    changeRequiredLabel: function (argument) {\r\n        var control = this.getControl();\r\n\r\n        if (control.length > 0) {\r\n            if (this.getMode() !== \"execution\") {\r\n                if (bizagi.util.parseBoolean(argument) == true && this.properties.editable) {\r\n                    control.addClass(\"grid-control-required\");\r\n                } else {\r\n                    control.removeClass(\"grid-control-required\");\r\n                }\r\n            } else {\r\n                if (bizagi.util.parseBoolean(argument) == true && !this.hasValue() && this.properties.editable) {\r\n                    control.addClass(\"grid-control-required\");\r\n                } else {\r\n                    control.removeClass(\"grid-control-required\");\r\n                }\r\n            }\r\n        }\r\n\r\n        this.triggerRenderValidate();\r\n    },\r\n\r\n    /*\r\n     *   Fetch the data again and updates the content\r\n     */\r\n    refresh: function () {\r\n    },\r\n    /*\r\n     *   Sets an error on the cell\r\n     */\r\n    setError: function (key, columnXpath) {\r\n    },\r\n    /*\r\n     *   Changes the background for a cell\r\n     */\r\n    changeCellBackgroundColor: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *   Changes the background for a cell\r\n     */\r\n    changeCellColor: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *   Changes the visibility for a cell\r\n     */\r\n    changeCellVisibility: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *   Changes the editability for a cell\r\n     */\r\n    changeCellEditability: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *  Changes the required for cell\r\n     */\r\n    changeCellRequired: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *  Refresh behaviors of cell\r\n     */\r\n    changeCellProperties: function (key, xpath, argument) {\r\n\r\n    },\r\n    /*\r\n     *  Changes the max value for a cell\r\n     */\r\n    changeCellMaxValue: function (key, xpath, argument) {\r\n\r\n    },\r\n    /*\r\n     *  Changes the min value for a cell\r\n     */\r\n    changeCellMinValue: function (key, xpath, argument) {\r\n\r\n    },\r\n    /*\r\n     *  Clean data of cell\r\n     */\r\n    cleanCellData: function (key, xpath) {\r\n    },\r\n\r\n    changeEditability: function (argument) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        self.saveGrid().done(function () {\r\n\r\n            // Renders again\r\n            var tmpEditable = argument == \"Default\" ? self.originalProperties.editable: bizagi.util.parseBoolean(argument);\r\n            var properties = {properties: $.extend({editable: tmpEditable}, self.originalData)};\r\n\r\n            // Clears control\r\n            control.empty();\r\n\r\n            bizagi.rendering.render.prototype.initializeData.apply(self, [properties]);\r\n\r\n            self.initProperties();\r\n            self.changeColumnsEditability(argument);\r\n\r\n            if (typeof self.internalRenderControl == \"function\") {\r\n                $.when(self.internalRenderControl()).done(function (html) {\r\n                    control.append(html);\r\n                    self.postRenderElement(self.element);\r\n                });\r\n\r\n            }\r\n\r\n        });\r\n\r\n    },\r\n\r\n    saveGrid: function () {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n\r\n        var rows = $(\"[data-bizagi-component=rows]\", self.element).find(\"[data-new-row=true]\");\r\n        if (rows.length > 0) {\r\n            rows = $.map(rows, function (row, i) {\r\n                return $(row).data(\"business-key\");\r\n            });\r\n            self.saveInlineAddedRows(rows).done(function () {\r\n                defer.resolve();\r\n            });\r\n        } else {\r\n            defer.resolve();\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    changeColumnsEditability: function (value) {\r\n        var self = this;\r\n        var columns = self.columns || [];\r\n\r\n        $.each(columns, function (i, column) {\r\n            column.properties.editable = value == \"Default\" ? column.originalProperties.editable :  bizagi.util.parseBoolean(value);\r\n        });\r\n    },\r\n\r\n    /**\r\n     *   Refresh behaviors of cell\r\n     */\r\n    refreshCell: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var key = params.key;\r\n        var column = params.column;\r\n        var xpathContext = (params.xpathContext !== \"\") ? params.xpathContext + \".\" + self.properties.xpath + self.buildCellXpathFilter(key) : self.properties.xpath + self.buildCellXpathFilter(key);\r\n        var cell = self.getControlCell(key, params.column);\r\n        var form = self.getFormContainer();\r\n        var idForm = form.properties.id;\r\n\r\n        if (!cell) {\r\n            return;\r\n        }\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        cell.beforeToRefresh();\r\n\r\n        // Call service\r\n        return $.when(self.dataService.multiaction().refreshGridCell({\r\n            idRender: properties.id,\r\n            column: cell.properties.id,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: xpathContext,\r\n            idForm: idForm,\r\n            typeRender: cell.properties.type\r\n        })).done(function (data) {\r\n            // Extract values\r\n            var getDepthData = function (target) {\r\n                if (target && typeof target == \"object\" && target.length >= 1) {\r\n                    return (target[0].length >= 1) ? target[0][0] : target[0];\r\n                }\r\n                return \"\";\r\n            };\r\n            var newValue = getDepthData(data.rows);\r\n            var editable = getDepthData(data.editable);\r\n            if (!bizagi.util.isBoolean(editable)) {\r\n                editable = editable || true;\r\n            }\r\n            var visible = getDepthData(data.visible);\r\n            if (!bizagi.util.isBoolean(visible)) {\r\n                visible = visible || true;\r\n            }\r\n            \r\n            // Change Visibility & Editability\r\n            self.changeCellVisibility(key, column, visible);\r\n            self.changeCellEditability(key, column, editable);\r\n\r\n            // Change control value\r\n            cell.setValue(newValue);\r\n            cell.setDisplayValue(newValue);\r\n\r\n            // Trigger grid change\r\n            self.triggerRenderChange({key: key, column: column, changed: false});\r\n\r\n            // Update the affected cell manually after a refresh\r\n            //TODO:temporary solution\r\n            //review the DRAGON-5982 \r\n            if (cell.column != undefined && bizagi.util.detectDevice() == \"desktop\") {\r\n                self.updateAffectedCellManually(key, newValue, cell.column.columnIndex);\r\n            }\r\n\r\n            // Execute personalized stuff after to refresh it\r\n            self.afterToRefresh({ action: \"refreshCell\" });\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Triggers the render change event\r\n     */\r\n    triggerRenderChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        // Property to verify exporting updated grids\r\n        if (!bizagi.util.isEmpty(params) && params.changed != false)\r\n            self.properties.canBeExported = false;\r\n        self.triggerHandler(\"renderchange\", {\r\n            render: self,\r\n            surrogateKey: params.key,\r\n            column: params.column,\r\n            changed: params.changed,\r\n            rowDeleted: params.rowDeleted,\r\n            pressed: params.pressed\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Validate the grid\r\n     */\r\n    validate: function () {\r\n        this.isValid([]);\r\n    },\r\n    /* \r\n     * Public method to determine if a value is valid or not\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var bValid = true;\r\n\r\n        // Clear error message\r\n        self.hasErrors = false;\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check for required columns and null values\r\n        if (self.properties.data && self.properties.data.rows) {\r\n            var newRows = self.getDataNewRows();\r\n            // Preserve elements in data.rows\r\n            // Check required\r\n            if (newRows.length == 0 && bizagi.util.parseBoolean(self.properties.required)) {\r\n                if (!self.hasValue()) {\r\n                    message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", self.properties.displayName);\r\n                    invalidElements.push({\r\n                        xpath: self.properties.xpath,\r\n                        message: message\r\n                    });\r\n                    bValid = false;\r\n                }\r\n            }\r\n\r\n            var data = $.merge($.merge([], self.properties.data.rows), newRows);\r\n\r\n            for (var i = 0; i < self.columns.length; i++) {\r\n                var messages = [];\r\n                var uniqueMessages = {};\r\n\r\n                for (var j = 0; j < data.length; j++) {\r\n                    var value = data[j][i + 1];\r\n                    var key = data[j][0];\r\n                    var xpath = self.columns[i].properties.xpath;\r\n                    if (self.changes[key] !== undefined && self.changes[key][self.columns[i].properties.xpath] !== undefined) {\r\n                        value = self.changes[key][self.columns[i].properties.xpath];\r\n                    }\r\n\r\n                    // Check if the column is valid\r\n                    var valueValid = self.columns[i].isValueValid(key, value, messages, self.getCellOverride(key, i));\r\n                    if (!valueValid) {\r\n                        bValid = false;\r\n\r\n                        self.hasErrors = true;\r\n                        self.setError(key, self.columns[i].properties.xpath);\r\n                    }\r\n                }\r\n                for (var k = 0, messagesLength = messages.length; k < messagesLength; k++) {\r\n                    if (uniqueMessages[messages[k]] == null) {\r\n                        uniqueMessages[messages[k]] = messages[k];\r\n                    }\r\n                }\r\n\r\n                if (messages.length > 0) {\r\n                    var gridValidationMessage = self.getResource(\"render-grid-validation\").replaceAll(\"#grid#\", self.properties.displayName);\r\n                    for (key in uniqueMessages) {\r\n                        invalidElements.push({\r\n                            xpath: self.properties.xpath,\r\n                            message: gridValidationMessage + \" \" + key\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n    /*\r\n     *   Enables submit on change feature for the current render\r\n     */\r\n    configureSubmitOnChange: function () {\r\n        // Don't do anything we will trigger submit on change manually only when the grid add or edit form has been edited   \r\n    },\r\n    /*\r\n     *   Get cell override\r\n     */\r\n    getCellOverride: function (key, column) {\r\n        var self = this;\r\n\r\n        // Convert to numbers\r\n        key = Number(key);\r\n        column = Number(column);\r\n\r\n        // Find overrides\r\n        var columnProperties = self.columns[column].properties;\r\n        if (!self.cellOverrides[key])\r\n            self.cellOverrides[key] = {};\r\n        if (!self.cellOverrides[key][column]) {\r\n            self.cellOverrides[key][column] = {\r\n                visible: columnProperties.visible,\r\n                editable: columnProperties.editable,\r\n                required: columnProperties.required\r\n            };\r\n        }\r\n\r\n        return self.cellOverrides[key][column];\r\n    },\r\n\r\n    /*\r\n     * Set cell overrides based on the data\r\n     */\r\n    setCellOverrides: function (data, columns) {\r\n        var self = this;\r\n        var key;\r\n\r\n        // Init visibility overrides\r\n        if (data.visible) {\r\n            for (var i = 0, len = data.visible.length; i < len; i++) {\r\n                key = data.visible[i][0];\r\n                for (var j = 0, len_v = data.visible[i].length; j < len_v; j++) {\r\n                    // Skip key columns\r\n                    if (j > 0)\r\n                        self.getCellOverride(key, j - 1).visible = bizagi.util.parseBoolean(data.visible[i][j]);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Init editability overrides\r\n        if (data.editable) {\r\n            for (var i = 0, len = data.editable.length; i < len; i++) {\r\n                key = data.editable[i][0];\r\n                for (var j = 0, len_v = data.editable[i].length; j < len_v; j++) {\r\n                    // Skip key columns\r\n                    if (j > 0) {\r\n                        var columnEditable = columns ? bizagi.util.parseBoolean(columns[j - 1].properties.editable) : true;\r\n                        self.getCellOverride(key, j - 1).editable = columnEditable ? bizagi.util.parseBoolean(data.editable[i][j]) : false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Init required overrides\r\n        if (data.required) {\r\n            for (var i = 0, len = data.required.length; i < len; i++) {\r\n                key = data.required[i][0];\r\n                for (var j = 0, len_v = data.required[i].length; j < len_v; j++) {\r\n                    // Skip key columns\r\n                    if (j > 0)\r\n                        self.getCellOverride(key, j - 1).required = bizagi.util.parseBoolean(data.required[i][j]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*\r\n     *   Returns the row indexes for the data\r\n     */\r\n    getIndexes: function () {\r\n        var self = this;\r\n        var data = $.merge(self.properties.data.rows, self.getDataNewRows());\r\n        return $.map(data, function (item, i) {\r\n            return item[0];\r\n        });\r\n    },\r\n    /**\r\n     *  Return object with value of all new records unsaved within the grid\r\n     *  @return {object} all new records\r\n     */\r\n    getDataNewRows: function () {\r\n        var self = this;\r\n        var newRows = [];\r\n\r\n        if (typeof self.newRecords == \"object\" && !$.isEmptyObject(self.newRecords)) {\r\n            $.each(self.newRecords, function (rowKey) {\r\n                var cellValue = [];\r\n                cellValue.push(Number(rowKey));\r\n                for (var i = 0, length = self.columns.length; i < length; i++) {\r\n                    cellValue.push(self.getCellCurrentValue(rowKey, self.columns[i].properties.xpath));\r\n                }\r\n                // Add cell value row to new rows\r\n                newRows.push(cellValue);\r\n            });\r\n        }\r\n        return newRows;\r\n    },\r\n\r\n    /*\r\n     * Return the object with the required url to access the exported grid to the desired format\r\n     *  @return {object} render attributes, including id, xpathContext, idPagecache, disposition (inline or attachment), and exportType (XLS or PDF)\r\n     */\r\n    getGridExportUrl: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.getGridExportUrl({\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext || \"\",\r\n            idPageCache: properties.idPageCache,\r\n            disposition: params.disposition,\r\n            exportType: params.exportType,\r\n            sort: properties.sort,\r\n            sessionId: self.getSessionId(),\r\n            idForm: self.getFormContainer().properties.id\r\n\r\n        });\r\n    },\r\n\r\n    submitForGridChange: function () {\r\n        var self = this;\r\n        return self.submitOnChange(null, false);\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self.columns) {\r\n                $.each(self.columns, function (i, column) {\r\n                    column.dispose();\r\n                });\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    },\r\n\r\n    getEnabledChecks: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        params = params || {};\r\n        $.extend(params, {\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType,\r\n            idPageCache: properties.idPageCache,\r\n            rows: properties.rowsPerPage,\r\n            xpathfilter: params.xpath\r\n        });\r\n        // Default ajax call\r\n        var defer = new $.Deferred();\r\n        // Resolve with remote data\r\n        self.dataService.multiaction().getGridDataExclusivesSelected(params).done(function (data) {\r\n            // Resolve with fetched data\r\n            properties.page = data.page;\r\n            properties.records = data.records;\r\n            properties.totalPages = data.totalPages;\r\n\r\n            // Check RTL\r\n            if (self.isRTL()) {\r\n                data.rows = self.changeOrderData(data.rows);\r\n            }\r\n            defer.resolve(data);\r\n        });\r\n        return defer.promise();\r\n    },\r\n\r\n    buildCellXpathFilter: function (key) {\r\n        if (bizagi.util.isNumeric(key)) return \"[id=\" + key + \"]\";\r\n        return \"[id='\" + key + \"']\";\r\n    },\r\n\r\n    cleanNewRecords: function () {\r\n        // Mark it as saved\r\n        this.newRecords = {};\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Customizes render background color\r\n     *\r\n     * This method is called when the backgroud color is setted by Form Designer\r\n     *\r\n     * @param color\r\n     */\r\n    changeBackgroundColor: function (color) {\r\n        this._super(color);\r\n\r\n        var control = this.getControl();\r\n        control.find(\".bz-rn-grid-header-title\").css(\"background-color\", color, \"!important\");\r\n        control.find(\".bz-rn-grid-container-foother\").css(\"background-color\", color, \"!important\");\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Check has header format\r\n     * @returns {boolean}\r\n     */\r\n    hasColorHeader: function () {\r\n        var headerFormat = this.properties.headerFormat || {};\r\n\r\n        return headerFormat ? !bizagi.util.isEmpty(headerFormat.color) : false;\r\n    },\r\n\r\n    /**\r\n     * Check if the orientation is RTL\r\n     * @param parent\r\n     * @param orientation\r\n     * @returns {*|boolean|boolean}\r\n     */\r\n    isRTLOrientation: function(parent, orientation){\r\n        if ((!orientation || orientation === \"auto\") && parent) {\r\n            return this.isRTLOrientation(parent.parent, parent.properties.orientation);\r\n        }\r\n\r\n        return /^rtl$/i.test(orientation);\r\n    },\r\n\r\n    /**\r\n     * Check If has changes for send to server\r\n     * @returns {boolean}\r\n     */\r\n    canBeExport: function () {\r\n        var self = this;\r\n        var renderValues = {};\r\n\r\n        for (var id in self.changes) {\r\n            // Don't collect data from totalizers\r\n            if (id !== \"summary\") {\r\n                for (var columnXpath in self.changes[id]) {\r\n                    // Check if the render can submit data\r\n                    if (self.canColumnBeSent(id, columnXpath)) {\r\n                        var xpath = self.properties.xpath + self.buildCellXpathFilter(id) + \".\" + columnXpath;\r\n                        var value = self.changes[id][columnXpath];\r\n\r\n                        renderValues[xpath] = value;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return Object.keys(renderValues).length === 0;\r\n    }, \r\n    getExclusiveChangeByRow: function(idRow){\r\n        var value = {};\r\n        for (var xpath in this.enabledChecks) {\r\n            if (this.enabledChecks.hasOwnProperty(xpath)) {\r\n                var obj = (this.enabledChecks[xpath] || []).find(function(el){\r\n                    return el.id == idRow && el.changed;\r\n                });\r\n                if (obj){\r\n                    value[xpath] = obj.value;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    },\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Hidden Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for hiddens\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.hidden\", {}, {\r\n\r\n    /**\r\n     * Returns the in-memory processed element\r\n     */\r\n    renderControl: function () {\r\n        if (this.getMode() === \"design\") {\r\n            return \"<div>\" + bizagi.localization.getResource(\"render-hidden-displayName\") + \"</div>\";\r\n        } else {\r\n            return \"<div />\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var properties = this.properties;\r\n\r\n        // Call base\r\n        this._super();\r\n\r\n        // Set the initial value\r\n        if (properties.value !== undefined) {\r\n            this.setDisplayValue(properties.value);\r\n        }\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Label Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for labels\r\n */\r\n$.Class.extend(\"bizagi.rendering.label\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // A label itself is never \"required\" as other controls\r\n        var properties = self.properties;\r\n        properties.required = false;\r\n\r\n        // Set properties\r\n        self.properties.displayType = \"label\";\r\n        //self.properties.labelAlign = self.originalProperties.labelAlign || \"left\";\r\n        self.properties.displayName = data.properties.displayName || \"\";\r\n\r\n        if (bizagi.util.parseBoolean(self.properties.allowDinamiclabel)) {\r\n            this.properties.displayName = data.properties.displayName || bizagi.localization.getResource(\"render-label-default-display-name\");\r\n        }\r\n\r\n        self.bindingValue();\r\n\r\n        // Calculate layout properties\r\n        self.calculateInitialLayoutProperties();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();\r\n        // Just apply display-type: label, align it to the left\r\n        this.changeDisplayOption(\"label\");\r\n        //this.changeLabelAlign(this.properties.labelAlign || \"left\");\r\n\r\n        if (typeof this.configureHelpText == \"function\")\r\n            this.configureHelpText();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this._super();\r\n        // Just apply display-type: label, align it to the left\r\n        this.changeDisplayOption(\"label\");\r\n        this.changeLabelAlign(this.properties.labelAlign || \"left\");\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param {} invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Automatically this render is valid, so we can't check a required label\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    bindingValue: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.allowDinamiclabel && self.properties.value) {\r\n            if (typeof (self.properties.value) === \"object\" && self.properties.value[0]) {\r\n                self.properties.displayName = self.properties.value[0].value;\r\n            } else if (typeof (self.properties.value) === \"string\" && self.properties.value !== \"\") {\r\n                self.properties.displayName = self.properties.value;\r\n            }\r\n        }\r\n    },\r\n\r\n    controlValueIsChanged: function(){\r\n        //Labels never change\r\n        return false;\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: Bizagi Render Search Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for search renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.search\", {}, {\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        properties.searchForms = properties.searchForms || [];\r\n\r\n        // Default maxRecords is 20\r\n        properties.maxRecords = Number(properties.maxRecords) || 20;\r\n        properties.advancedSearch = (bizagi.util.parseBoolean(properties.advancedSearch) === null) ? false : bizagi.util.parseBoolean(properties.advancedSearch);\r\n        properties.allowSuggest = bizagi.util.parseBoolean(properties.allowSuggest) !== null ? bizagi.util.parseBoolean(properties.allowSuggest) : false;\r\n        properties.allowFullSearch = properties.allowFullSearch || false;\r\n        properties.allowAdd = bizagi.util.parseBoolean(properties.allowAdd) || false;\r\n        properties.allowTyping = bizagi.util.parseBoolean(properties.allowTyping) !== null ? bizagi.util.parseBoolean(properties.allowTyping) : false;\r\n        properties.allowTyping = bizagi.util.parseBoolean(properties.allowSuggest) ? true : properties.allowTyping;\r\n        properties.allowClear = bizagi.util.parseBoolean(properties.allowClear) !== null ? bizagi.util.parseBoolean(properties.allowClear) : false;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) !== null ? bizagi.util.parseBoolean(properties.editable) : true;\r\n\r\n        // This length defines the behavior of the suggest, 2 characters are used by default meaning after 2 characters are written the search will take place\r\n        properties.searchLength = properties.searchLength || 2;\r\n\r\n        // Expire local storage cache\r\n        properties.enableLocalStorage = false;\r\n        properties.expireCache = 1000 * 60 * 15; // 15 minutes\r\n\r\n        // QAF-3297 - Compatibility for old versions of advanced search where the \"submitOnChange\" property default is true\r\n        // New \"submitVersion\" property default is 2\r\n        if (properties.advancedSearch && self.getMode() === \"execution\") {\r\n            properties.submitOnChange = bizagi.util.parseBoolean(properties.submitOnChange) || false;\r\n            properties.submitOnChange = (properties.submitVersion || 1) > 1 ? properties.submitOnChange : true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"search\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            allowTyping: properties.allowTyping,\r\n            advancedSearch: properties.advancedSearch,\r\n            allowSuggest: properties.allowSuggest,\r\n            editable: properties.editable,\r\n            allowClear: properties.allowClear,\r\n            hasValue: self.hasValue(),\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Fetch the data into a deferred\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    getData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        var form = self.getFormContainer();\r\n        var contextType = form.getContextType() || form.params.contexttype || false;\r\n\r\n        params = params || {};\r\n\r\n        // Verify context type\r\n        if (self.properties.contexttype) {\r\n            params.h_contexttype = self.properties.contexttype;\r\n        } else if (contextType) {\r\n            params.h_contexttype = contextType;\r\n        }\r\n\r\n        params.h_contexttype = self.properties.enableQuerySuggestBehavior ? \"metadata\" : params.h_contexttype;\r\n\r\n        // QA-471 When the contexttype is metadata it does not send xpathcontext\r\n        if (params && params.h_contexttype && params.h_contexttype === 'metadata') {\r\n            properties.xpathContext = '';\r\n        }\r\n\r\n        // BA35025 - JFA\r\n        if (properties.term.indexOf(\"\\'\") > -1) {\r\n            var regexC = new RegExp(\"\\'\", \"g\");\r\n            properties.term = properties.term.replace(regexC, \"\\\\'\\\\'\");\r\n        }\r\n\r\n        // QAF-6448 - JFA\r\n        if (properties.term.indexOf(\"\\\"\") > -1) {\r\n            var regexC = new RegExp(\"\\\"\", \"g\");\r\n            properties.term = properties.term.replace(regexC, \"\\\"\");\r\n        }\r\n\r\n        // Resolve with remote data\r\n        self.dataService.multiaction().getSearchData({\r\n            url: properties.dataUrl,\r\n            contexttype: params.h_contexttype,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            term: (properties.allowFullSearch) ? \"%\" + properties.term : properties.term,\r\n            extra: params\r\n        }).done(function (data) {\r\n            // Resolve with fetched data\r\n            properties.data = data;\r\n            defer.resolve(properties.data);\r\n        }).fail(function (data) {\r\n            var hideStatus = data.hideStatus || false;\r\n\r\n            defer.resolve({});\r\n\r\n            if (!hideStatus) {\r\n                self.trigger(\"onSearchError\", data);\r\n            }\r\n        });\r\n\r\n        return defer.promise(defer);\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param {} value\r\n     * @param {} triggerEvents\r\n     * @returns {}\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        triggerEvents = triggerEvents !== undefined ? triggerEvents : true;\r\n\r\n        self._super(value, triggerEvents);\r\n\r\n        if (value != undefined) {\r\n            this.value = value;\r\n            this.selectedValue = value.label;\r\n        } else {\r\n            this.value = null;\r\n            this.selectedValue = null;\r\n        }\r\n    },\r\n\r\n    /* Maps the value, when this one comes from actions*/\r\n    mapValue: function (value) {\r\n        if (value && value.fromAction) {\r\n            return {\r\n                id: value.value,\r\n                value: value.label,\r\n                label: value.label\r\n            }\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var xpath = self.properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            // Remove empty validation for value for combos\r\n            if (!bizagi.util.isEmpty(xpath) && value !== null && typeof (value) !== \"undefined\") {\r\n                // Add a validation because sometimes value contains an empty not null object\r\n                if (typeof (value) == \"object\" && value.id === undefined)\r\n                    return;\r\n                // Add the value to the server\r\n                renderValues[xpath] = value;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Submits the selected data to the server in order to be saved\r\n     * @returns {}\r\n     */\r\n    submitData: function () {\r\n        var self = this;\r\n        var data = {};\r\n\r\n        // Add current data\r\n        if (!self.grid) {\r\n            data[self.properties.xpath] = self.getValue();\r\n        }\r\n\r\n        // Executes submit on change\r\n        self.submitOnChange(data, undefined, false);\r\n    },\r\n\r\n    /**\r\n     * Check if control is valid or not\r\n     * @param {} invalidElements\r\n     * @returns {}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        return this._super(invalidElements);\r\n    },\r\n\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (typeof (value) == \"undefined\" || value == null) return false;\r\n\r\n        if (typeof value === \"object\" && value.id !== \"\" && typeof (value.id) !== \"undefined\") return true;\r\n        return !bizagi.util.isEmpty(value);\r\n    },\r\n\r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n        return bizagi.util.formatItem(value);\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Text Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for text renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.text\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        if (properties.regularExpressionExpression) {\r\n            var message = properties.regularExpressionMessage || this.getResource(\"render-text-regular-expression-default-message\");\r\n            properties.regularExpression = {\"expression\": properties.regularExpressionExpression, \"message\": message};\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*}\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"text\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            value: this.properties.value,\r\n            isEmptyField: typeof (this.properties.value) === \"undefined\",\r\n            helpText: this.properties.helpText,\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"text-read-only\");\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.isString(value)) {\r\n            value = value.replaceAll(\"`\", \"&#96;\");\r\n        }\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {value: value, editable: this.properties.editable});\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n\r\n        this.input = this.getControl().find(\"input\");\r\n\r\n        //Attach event for retype double\r\n        if (this.properties.retype === \"double\")\r\n            this.attachRetypeDouble();\r\n    },\r\n\r\n    /**\r\n     * function virtual implements on children (desktop,samrtphone...).\r\n     */\r\n    attachRetypeDouble: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Check mask property\r\n        if (properties.mask)\r\n            self.input.mask({mask: properties.mask});\r\n\r\n        // Attach change event\r\n        self.input.bind(\"change\", function () {\r\n\r\n            // Updates internal value\r\n            self.setValue(self.input.val(), false);\r\n\r\n            // Check that the value is valid\r\n            var validationMessages = [];\r\n            if (properties.retype !== \"duplicate\") {\r\n                if (self.isValid(validationMessages) || typeof (properties.regularExpression) === \"undefined\") {\r\n                    // Update value again triggering handlers\r\n                    self.setValue(self.input.val(), true);\r\n                }\r\n            }\r\n\r\n        }).keypress(function (e) {\r\n            e = window.event || e;\r\n            var keyUnicode = e.charCode || e.keyCode;\r\n\r\n            if (e !== undefined) {\r\n                if (keyUnicode == 13) {\r\n                    $(this).trigger(\"change\");\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @returns {*}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n\r\n        // When the form have big data, block browser executing RegExp. QAF-1418.\r\n        // Check regular expression\r\n        if (typeof value == \"string\") {\r\n            if (properties.regularExpression) {\r\n                var regex = new RegExp(\"\");\r\n                try {\r\n                    regex = new RegExp(properties.regularExpression.expression);\r\n                } catch (e) {\r\n                    if (bizagi.override.showDesignValidations) {\r\n                        bizagi.log(e);\r\n                        invalidElements.push({xpath: properties.xpath, message: e.message});\r\n                        bValid = false;\r\n                    }\r\n                }\r\n\r\n                if (value && ((value.match(new RegExp(\".*?(<|\\\\u003C)(.+?)(>|\\\\u003E)(.?)|eval\\\\(|eval\\\\u0028\", \"g\"))) || (!value.match(regex) && self.properties && self.properties.xpath === \"userName\"))) {\r\n                    var message = properties.regularExpression.message;\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                } else {\r\n                    if (value && ((value.match(new RegExp(\".*?(<|\\\\u003C)(.+?)(>|\\\\u003E)(.?)|eval\\\\(|eval\\\\u0028\", \"g\"))) || (!value.match(regex)))) {\r\n                        var message = properties.regularExpression.message;\r\n                        invalidElements.push({xpath: properties.xpath, message: message});\r\n                        bValid = false;\r\n                    }\r\n                }\r\n            } else {\r\n                // Strange behavior on IE. When matchs are united on IE have is very slow\r\n                // solution, divide matchs\r\n                //.*? means for more information search: \"Lazy matching regexp\"\r\n                if (value && (value.match(new RegExp(\".*?eval\\\\(\", \"g\"))) && (value.match(new RegExp(\".*?eval\\\\u0028\", \"g\")))) {\r\n                    if (properties.editable) {\r\n                        var message = this.getResource(\"render-text-regular-expression-default-message\");\r\n\r\n                        invalidElements.push({xpath: properties.xpath, message: message});\r\n                        bValid = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n\r\n        if (!bizagi.util.parseBoolean(self.properties.editable)) {\r\n            // Render as simple value\r\n            if (typeof (value) === \"string\") {\r\n                // Replace line breaks for html line breaks\r\n                var valueToDisplay = bizagi.util.decodedDisplayValue(self.getDisplayValue());\r\n\r\n                control.html(\"<label class='readonly-control'>\" + valueToDisplay + \"</label>\");\r\n            } else {\r\n                if (bizagi.util.isNull(value)) {\r\n                    control.html(\"\");\r\n                }\r\n            }\r\n        }\r\n\r\n        // Set internal value\r\n        self.setValue(decodedValue, false);\r\n    },\r\n\r\n    /**\r\n     * Extend setValue to fix all encode data from database\r\n     * @param value\r\n     */\r\n    setValue: function (value) {\r\n        this._super(value);\r\n    },\r\n\r\n    /**\r\n     * Helptext tooltip\r\n     * @param {} control\r\n     * @param {} currentValue\r\n     * @param {} currentTitle\r\n     */\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        control.data(\"oldValue\", currentValue);\r\n        control.val(\"\");\r\n        \r\n        if(control.data('ui-tooltip')) control.tooltip('destroy');  \r\n        \r\n        control.attr(\"title\", currentTitle);\r\n        control.tooltip();\r\n\r\n        var toolTipZindex = $.getMaxZindex();\r\n        control.tooltip().on(\"tooltipopen\", function (event, ui) {\r\n            ui.tooltip.zIndex(toolTipZindex);\r\n        });\r\n\r\n        // Create new tooltip\r\n        control.tooltip(\"open\");\r\n\r\n        setTimeout(function () {\r\n            control.focus();\r\n        }, 100);\r\n    },\r\n\r\n\r\n    //#region No side effects funtions    \r\n    /**\r\n     * Gets the string with the correct size\r\n     * @param {string} value String value to validate\r\n     * @param {Int} maxLength Maximum size of the string\r\n     * @returns {string} String value validated\r\n     */\r\n    validateValue: function (value, maxLength) {\r\n        if (maxLength < 1 || value.length <= maxLength) return value;\r\n        return value.substr(0, maxLength)\r\n    }\r\n    //#endregion No side effects funtions\r\n\r\n});","/*\r\n *   Name: BizAgi Render Radio Class\r\n *   Author: Ivan Ricardo Taimal Narvaez\r\n *   Comments:\r\n *   -   This script will define basic stuff for radio renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.checkList\", {}, {\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.horizontal = bizagi.util.parseBoolean(properties.horizontal) || false;\r\n        self.setValue(properties.items);\r\n        self.updateOriginalValue();\r\n    },\r\n\r\n    /*\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Call base\r\n        self._super();\r\n        self.checkListGroup = $(\".ui-bizagi-render-checkList .ui-bizagi-render-checkList-item\", control);\r\n    },\r\n\r\n    /*\r\n     *   Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(self.getTemplateName());\r\n        var items = self.properties.items || [];\r\n\r\n        var html = $.fasttmpl(template, $.extend(self.getTemplateParams(), {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            unique: bizagi.util.randomNumber(10000, 1000000),\r\n            idPageCache: properties.idPageCache,\r\n            items: items\r\n        }));\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     *   Gets the template used by the combo render\r\n     *   can be overriden in subclasses to reuse logic and just change the template\r\n     */\r\n    getTemplateName: function () {\r\n        return \"checkList\";\r\n    },\r\n\r\n    /*\r\n     *   Determines if we need to show the empty node or not\r\n     *   Can be overriden to change behaviour\r\n     */\r\n    showEmpty: function () {\r\n        return false;\r\n    },\r\n\r\n    /*\r\n     *   Determines if we need to show the current data regardless if it belongs to data or not\r\n     *   Can be overriden to change behaviour\r\n     */\r\n    showCurrentData: function () {\r\n        return false;\r\n    },\r\n\r\n    /*\r\n     *   Adds custom parameters to process the template\r\n     */\r\n    getTemplateParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return {\r\n            vertical: !properties.horizontal\r\n        };\r\n    },\r\n    /*\r\n     * Cleans current data\r\n     */\r\n    cleanData: function () {\r\n\r\n    },\r\n\r\n    setValue: function (value) {;\r\n        this.value = bizagi.clone(value);\r\n    },\r\n\r\n    getValue: function (data) {;\r\n        return this.value || [];\r\n    }\r\n\r\n});\r\n\r\n","/**\r\n * Base definition of a range control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.range\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function(params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     * Initialize the control with data provided\r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n    },\r\n\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function() {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var template;\r\n        var html = \"\";\r\n        // Render template\r\n        template = self.renderFactory.getTemplate(\"render-range\");\r\n        html = $.fasttmpl(template, {});\r\n        return html;\r\n    },\r\n    /**\r\n     * Sets the range controls in DOM\r\n     * @param minControl: min range control\r\n     * @param maxControl: max range control\r\n     */\r\n    setRanageControls: function (minControl, maxControl){\r\n        var self = this;\r\n        self.minControl = minControl || null;\r\n        self.maxControl = maxControl || null;\r\n        var control = self.getControl();\r\n\r\n        var $maxCanvas = $(\".bz-range-maximum\", control);\r\n        var $minCanvas = $(\".bz-range-minimum\", control);\r\n\r\n        //var $maxCanvas = $('<div>hola</div>');\r\n        //var $minCanvas = $('<div>hola</div>');\r\n\r\n        self.renderRangeControl($minCanvas, minControl);\r\n        self.renderRangeControl($maxCanvas, maxControl);\r\n    },\r\n\r\n    /*\r\n     *   Returns the internal value\r\n     */\r\n    getValue: function () {\r\n        var self = this;\r\n        var minValue = self.minControl.getValue();\r\n        var maxValue = self.maxControl.getValue();\r\n\r\n        var value = {\r\n            min: minValue,\r\n            max: maxValue\r\n        };\r\n        return value;\r\n    },\r\n\r\n    renderRangeControl: function ($canvas, control){\r\n        $.when(control.render(\"render\")).done(function (html) {\r\n            $canvas.empty().append(html);\r\n            control.postRenderElement($canvas);\r\n        });\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range date control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.rangeDate\", {}, {\r\n\r\n    /**\r\n     * Defines de min date an de max date to the range control\r\n     */\r\n    defineRangeControl: function (params) {\r\n        var self = this;\r\n\r\n        var dateMin = bizagi.rendering.date.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1 ; i >= 0; i--) {\r\n                    this.observer[i].changeMinValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var dateMax = bizagi.rendering.date.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1; i >= 0; i--) {\r\n                    this.observer[i].changeMaxValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n\r\n        var minControl = new dateMin(self.getRenderProperties(\"min\"));\r\n        var maxControl = new dateMax(self.getRenderProperties(\"max\"));\r\n\r\n        minControl.suscribe(maxControl);\r\n        maxControl.suscribe(minControl);\r\n\r\n\r\n        self.setRanageControls(minControl, maxControl);\r\n    },\r\n\r\n    getRenderProperties: function (typeRangeControl) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        var renderProperties = {\r\n            data: {\r\n                properties: {\r\n                    \"id\": properties.id,\r\n                    \"xpath\": properties.xpath + \"_\" + typeRangeControl,\r\n                    \"displayType\": \"value\"\r\n                }\r\n            },\r\n            mode: \"execute\",\r\n            parent: form,\r\n            renderFactory: self.renderFactory,\r\n            resources: bizagi.localization,\r\n            dataService: self.dataService\r\n        };\r\n\r\n        if (typeRangeControl === \"min\") {\r\n            renderProperties.data.properties.displayName = \"From\";\r\n        } else {\r\n            renderProperties.data.properties.displayName = \"To\";\r\n        }\r\n\r\n        return renderProperties;\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range money control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.rangeMoney\", {}, {\r\n    \r\n    /**\r\n     * Defines de min money an de max money to the range control\r\n     */\r\n    defineRangeControl: function () {\r\n        var self = this;\r\n\r\n        var moneyMin = bizagi.rendering.money.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1 ; i >= 0; i--) {\r\n                    this.observer[i].changeMinValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var moneyMax = bizagi.rendering.money.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1; i >= 0; i--) {\r\n                    this.observer[i].changeMaxValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var minControl = new moneyMin(self.getRenderProperties(\"min\"));\r\n        var maxControl = new moneyMax(self.getRenderProperties(\"max\"));\r\n\r\n        minControl.suscribe(maxControl);\r\n        maxControl.suscribe(minControl);\r\n\r\n        self.setRanageControls(minControl, maxControl);\r\n    },\r\n\r\n\r\n    getRenderProperties: function (typeRangeControl){\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        var renderProperties = {\r\n            data: {\r\n                properties: {\r\n                    \"id\": properties.id,\r\n                    \"xpath\": properties.xpath + \"_\" + typeRangeControl,\r\n                    \"displayType\": \"value\"\r\n                }\r\n            },\r\n            mode: \"execute\",\r\n            parent: form,\r\n            renderFactory: self.renderFactory,\r\n            resources: bizagi.localization,\r\n            dataService: self.dataService\r\n        };\r\n        return renderProperties;\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range number control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n $.Class.extend(\"bizagi.rendering.rangeNumber\", {}, {\r\n\r\n    /**\r\n    * Defines de min number an de max number to the range control\r\n    */\r\n    defineRangeControl: function () {\r\n        var self = this;\r\n\r\n        var numberMin = bizagi.rendering.number.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1 ; i >= 0; i--) {\r\n                    this.observer[i].changeMinValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var numberMax = bizagi.rendering.number.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1; i >= 0; i--) {\r\n                    this.observer[i].changeMaxValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var minControl = new numberMin(self.getRenderProperties(\"min\"));\r\n        var maxControl = new numberMax(self.getRenderProperties(\"max\"));\r\n\r\n        minControl.suscribe(maxControl);\r\n        maxControl.suscribe(minControl);\r\n\r\n        self.setRanageControls(minControl, maxControl);\r\n    },\r\n\r\n\r\n    getRenderProperties: function (typeRangeControl){\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        var renderProperties = {\r\n            data: {\r\n                properties: {\r\n                    \"id\": properties.id,\r\n                    \"xpath\": properties.xpath + \"_\" + typeRangeControl,\r\n                    \"displayType\": \"value\"\r\n                }\r\n            },\r\n            mode: \"execute\",\r\n            parent: form,\r\n            renderFactory: self.renderFactory,\r\n            resources: bizagi.localization,\r\n            dataService: self.dataService\r\n        };\r\n\r\n        return renderProperties;\r\n    }\r\n});\r\n","/**\r\n * Base definition of Action Launcher and Entity template controls\r\n *\r\n * @author: Edward Morales\r\n */\r\n$.Class.extend(\"bizagi.rendering.actionLauncher\", {}, {\r\n\r\n    /*\r\n     * Initialize the control with data provided\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n        var form = self.getFormContainer();\r\n        this.typeForm = form.properties.typeForm || \"\";\r\n        var mode = self.getMode();\r\n        var properties = self.properties;\r\n\r\n        self.deferredActions = new $.Deferred();\r\n        self.deferredActions.promise();\r\n\r\n        if (mode == \"execution\") {\r\n            self.engine = new bizagi.templateEngine({\r\n                renderFactory: self.renderFactory,\r\n                cache: true,\r\n                autoGenerateData: false,\r\n                templateGuid: properties.selecttemplate\r\n            });\r\n        }\r\n\r\n        // Data of get process property value\r\n        self.processPropertyValueArgs = {\r\n            \"pcaseId\": self.getIdCase(),\r\n            \"pguidEntity\": self.properties.guidEntity,\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"property\": \"data\",\r\n            \"psurrogatedKey\": self.properties.surrogatedKey,\r\n            \"ptags\": self.properties.tagslist || [],\r\n            \"pmaxitems\": self.properties.maxItems,\r\n            \"pactionXpath\": self.properties.xpathActions\r\n        };\r\n\r\n        self.processPropertyValueDataTmplArgs = {\r\n            \"pactionXpath\": self.properties.xpathActions,\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"ptemplateGuid\": properties.selecttemplate,\r\n            \"property\": \"dataTemplate\",\r\n            \"xpathActions\": self.properties.xpathActions\r\n        };\r\n\r\n        self.properties.valueWidth = 100;\r\n        self.properties.displayType = \"value\";\r\n        var defaultAllowActions = data.properties.type === \"entityTemplate\" ? false : true;\r\n        self.properties.allowactions = (typeof data.properties.allowactions == \"undefined\")\r\n            ? defaultAllowActions : data.properties.allowactions;\r\n        self.properties.isHorizontal = (typeof data.properties.isHorizontal == \"undefined\")\r\n            ? true : data.properties.isHorizontal;\r\n        self.properties.allowSearch = (typeof data.properties.allowSearch == \"undefined\")\r\n            ? false : data.properties.allowSearch;\r\n        self.properties.selecttemplate = (typeof data.properties.selecttemplate == \"undefined\")\r\n            ? \"\" : data.properties.selecttemplate;\r\n        self.properties.templatetype = (typeof properties.templatetype != \"undefined\")\r\n            ? properties.templatetype : 'none';\r\n\r\n        self.properties.sessionId = form.params.data.sessionId;\r\n\r\n        if (!self.properties.value) {\r\n            self.properties.value = self.value = [];\r\n            self.properties.originalValue = [];\r\n        } else if (typeof self.properties.value == \"string\") {\r\n            self.properties.value = self.value = JSON.parse(self.properties.value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Send processpropertyvalue in order to execute an Action\r\n     * This method is used when this control stay in Summary form or Global form\r\n     * @param action\r\n     */\r\n    executeActionImmediately: function (action) {\r\n        var self = this;\r\n        //Execute action immediately\r\n        var form = self.getFormContainer();\r\n\r\n        var processPropertyValueExecuteAction = {\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"property\": \"executeAction\",\r\n            \"psurrogatedKey\": self.properties.surrogatedKey,\r\n            \"pguidAction\": action.guidAction,\r\n            \"pparameters\": JSON.encode({\r\n                \"idStartScope\": action.idStartScope,\r\n                \"pactionXpath\": self.properties.xpathActions,\r\n                \"idPageCache\": action.idPageCache\r\n            })\r\n        };\r\n\r\n        self.dataService.executeActions(processPropertyValueExecuteAction).done(function (data) {\r\n            self.notifyExecution(data, action);\r\n        }).fail(function (error) {\r\n            // TODO: Create generic mechanism to send notifications\r\n            self.notifyExecution(\"Error\", action);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * notify action execution status\r\n     * @param response\r\n     * @param actionName\r\n     */\r\n    notifyExecution: function (response, actionName) {\r\n        // To override in each device\r\n    },\r\n\r\n    /**\r\n     * Render control in read only mode: properties.editable = false\r\n     * @return {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Make a postrender of readonly control\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this.properties.readOnly = true;\r\n        this.postRender();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @return {string}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n        var template;\r\n        var html = \"\";\r\n\r\n        // Render template\r\n        if (mode == \"design\") {\r\n            template = self.renderFactory.getTemplate(\"render-actionLauncher-design\");\r\n            var params = {\r\n                type: properties.type,\r\n                isHorizontal: properties.isHorizontal,\r\n                allowSearch: properties.allowSearch,\r\n                templateDefined: properties.templatetype != 'none',\r\n                allowactions: properties.allowactions\r\n            };\r\n            html = $.fasttmpl(template, params);\r\n        } else if (properties.surrogatedKey) {\r\n            template = self.renderFactory.getTemplate(\"render-actionLauncher\");\r\n            html = $.fasttmpl(template, { allowactions: self.properties.allowactions });\r\n        }\r\n        return html;\r\n    },\r\n\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @return {*}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var value = self.getValue();\r\n        var bValid = false;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) == false) {\r\n            return true;\r\n        }\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) == false) {\r\n            return true;\r\n        }\r\n\r\n        // Check required\r\n        if (properties.required) {\r\n            if (self.value) {\r\n                if (self.value.length > 0)\r\n                    return true;\r\n                message = self.getResource(\"render-required-register-action\");\r\n                invalidElements.push({ xpath: properties.xpath, message: message });\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        // TODO: write functionality\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n    },\r\n\r\n    /**\r\n     * Process an action\r\n     * @param action\r\n     */\r\n    actionManager: function (action) {\r\n        var self = this;\r\n        var guidProcess = action.guidProcess || \"\";\r\n        var def = new $.Deferred();\r\n\r\n        action.recordXpath = self.getFormContainer().properties.recordXpath;\r\n\r\n        /**\r\n         * Check if action is a process\r\n         */\r\n        switch (action.actionType) {\r\n            case \"Process\":\r\n                // Verify if case has startform\r\n                var params = {\r\n                    guidWFClass: guidProcess\r\n                };\r\n\r\n                $.when(self.dataService.hasStartForm(params)).done(function (result) {\r\n                    if (result.hasStartForm) {\r\n                        // Open a dialog with startform and wait for Scope\r\n                        $.when(self.processStartForm({\r\n                            guidprocess: guidProcess,\r\n                            title: action.displayName,\r\n                            recordXpath: action.recordXpath\r\n                        })).done(function (idStartScope) {\r\n                            action.idStartScope = idStartScope;\r\n                            def.resolve(action);\r\n                        });\r\n                    } else {\r\n                        // Just add action to queue to be executed on nextEvent\r\n                        def.resolve(action);\r\n                    }\r\n                });\r\n\r\n                break;\r\n            case \"Rule\":\r\n                // Just add action to queue to be executed on nextEvent\r\n                def.resolve(action);\r\n                break;\r\n            case \"Form\":\r\n                // If it has additional xpath this action is a form of collection\r\n                if (action.xpathContext) {\r\n                    $.when(self.processActionFormCollection(action)).done(function (idStartScope) {\r\n                        action.idStartScope = idStartScope;\r\n                        def.resolve(action);\r\n                    });\r\n                } else {\r\n\r\n                    if (action.actionType === \"Form\") {\r\n                        action.xpathContext = undefined;\r\n                        action.contextType = \"entitytemplate\";\r\n                        action.guidEntity = action.guidEntity || self.properties.guidEntity;\r\n                    }\r\n\r\n                    $.when(self.processActionForm(action)).done(function (idStartScope) {\r\n                        action.idStartScope = idStartScope;\r\n                        def.resolve(action);\r\n                    });\r\n                }\r\n                break;\r\n        }\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Add actions within value object\r\n     * @param action\r\n     */\r\n    addActionToQueue: function (action) {\r\n        var self = this;\r\n        var actionsList = self.getValue();\r\n        var formParams = self.getFormContainer().getParams();\r\n\r\n        action.params = action.params || {};\r\n\r\n        var recordXpath = self.properties.xpathContext;\r\n\r\n        switch (action.actionType) {\r\n            case \"Process\":\r\n                action.params = {\r\n                    idStartScope: action.idStartScope,\r\n                    additionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n                    idParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n                    recordXpath: recordXpath\r\n                };\r\n                break;\r\n            case \"Form\":\r\n                action.params = {\r\n                    idStartScope: action.idStartScope,\r\n                    additionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n                    entityXpath: self.properties.xpathActions,\r\n                    idParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n                    idEntity: action.idEntity\r\n                };\r\n                break;\r\n            case \"Rule\":\r\n                action.params = {\r\n                    xpathActions: action.xpathActions || \"\",\r\n                    recordXpath: recordXpath\r\n                };\r\n                break;\r\n        }\r\n\r\n        var newValueActionsList = bizagi.clone(actionsList);\r\n        newValueActionsList.push(action);\r\n        self.setValue(newValueActionsList);\r\n        self.setDisplayValue(newValueActionsList);\r\n    },\r\n\r\n    /**\r\n     * Remove action within value object\r\n     * @param index\r\n     */\r\n    removeActionToQueue: function (index) {\r\n        var self = this;\r\n        var newValueActionsList = bizagi.clone(self.getValue());\r\n        newValueActionsList.splice(index, 1);\r\n        self.setValue(newValueActionsList);\r\n        self.setDisplayValue(newValueActionsList);\r\n    },\r\n    /**\r\n     * Add the render data to the given collection in order to send data to the server\r\n     * @param renderValues\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        if (self.controlValueIsChanged()) {\r\n            var properties = self.properties;\r\n            var xpath = properties.xpath;\r\n            var controlValue = self.getValue();\r\n            var actions = [];\r\n            $.each(controlValue, function (index, value) {\r\n                var action = {};\r\n                action.params = value.params || {};\r\n                action.guidAction = value.guidAction;\r\n\r\n                actions.push(action);\r\n            });\r\n            renderValues[xpath] = (actions.length == 0) ? \"\" : JSON.encode(actions);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Util to count how many actions are there\r\n     * @param action\r\n     * @return {number}\r\n     */\r\n    countSameActions: function (action) {\r\n        var self = this;\r\n        var value = self.getValue();\r\n        var count = 0;\r\n        $.each(value, function (key, value) {\r\n            if (value.guidAction == action.guidAction) {\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    },\r\n\r\n    /**\r\n    * Normalize action launcher control properties\r\n    * @param actionsLaucher\r\n    * @returns {*}\r\n    */\r\n    getPropertiesActionLaucher: function (actionsLaucher) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        /**\r\n         * The properties of actionLaucher have to 7 properties mandatory\r\n         * 0: guidProcess\r\n         * 1: displayName\r\n         * 2: title\r\n         * 3: actionType\r\n         * 4: guidaction\r\n         * 5: xpathContext\r\n         * 6: readOnlyForm: default: false\r\n         */\r\n        for (var i = 0, length = actionsLaucher.length, j = length; i < j; i += 1) {\r\n            //some ocassions server return 6 or 7 items\r\n            //return 6 properties when launch form action from action launcher control.\r\n            //in this case dont return xpathContext.\r\n            // So, add item position 5, simulate xpathContext empty.\r\n            if (actionsLaucher[i].length === 6) {\r\n                actionsLaucher[i].splice(5, 0, \"\");\r\n\r\n                if (actionsLaucher[i][3] == \"Process\" && form.properties.xpathContext) {\r\n                    actionsLaucher[i][5] = form.properties.xpathContext;\r\n                }\r\n            }\r\n        }\r\n\r\n        return actionsLaucher;\r\n    }\r\n});\r\n","/**\r\n * Base definition of entity template\r\n *\r\n * @author: Andres Fernando Muñoz\r\n * based on action launcher control\r\n */\r\n$.Class.extend(\"bizagi.rendering.entityTemplate\", {}, {\r\n    /**\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /**\r\n     * Initialize the control with data provided\r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n        var form = self.getFormContainer();\r\n\r\n        self.deferredActions = new $.Deferred();\r\n        self.deferredActions.promise();\r\n\r\n        // Data of get process property value\r\n        self.processPropertyValueArgs = {\r\n            \"pcaseId\": self.getIdCase(),\r\n            \"pguidEntity\": self.properties.guidEntity,\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"property\": \"data\",\r\n            \"psurrogatedKey\": self.properties.surrogatedKey\r\n        };\r\n\r\n        self.properties.valueWidth = 100;\r\n        self.properties.displayType = \"value\";\r\n        self.properties.allowactions = (typeof data.properties.allowactions == \"undefined\") ? true : data.properties.allowactions;\r\n\r\n        if(!self.properties.value) {\r\n            self.properties.value = self.value = [];\r\n        } else if(typeof self.properties.value == \"string\") {\r\n            self.properties.value = self.value = JSON.parse(self.properties.value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var template;\r\n        var html = \"\";\r\n        // Render template\r\n        if (mode == \"design\") {\r\n            template = self.renderFactory.getTemplate(\"render-entityTemplate-design\");\r\n            html = $.fasttmpl(template, {});\r\n        }\r\n        else if(self.properties.surrogatedKey) {\r\n            template = self.renderFactory.getTemplate(\"render-entityTemplate\");\r\n            html = $.fasttmpl(template, {allowactions: self.properties.allowactions});\r\n        }\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        // TODO: write functionality\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        // TODO: write functionality\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n    }\r\n});","/**\r\n * Base definition of Polymorphic launcher\r\n *\r\n * @author: Edward J Morales\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.polymorphicLauncher\", {}, {\r\n\t/*\r\n\t * Constructor\r\n\t */\r\n\tinit: function(params) {\r\n\t\t// Call base\r\n\t\tthis._super(params);\r\n\t},\r\n\r\n\t/*\r\n\t * Initialize the control with data provided\r\n\t */\r\n\tinitializeData: function(data) {\r\n\t\tvar self = this;\r\n\t\t// Call base\r\n\t\tthis._super(data);\r\n\t\tvar form = self.getFormContainer();\r\n\t\tthis.typeForm = form.properties.typeForm || \"\";\r\n\t\tvar mode = self.getMode();\r\n\r\n\t\tself.deferredActions = new $.Deferred();\r\n\t\tself.deferredActions.promise();\r\n\r\n\t\tself.properties.valueWidth = 100;\r\n\t\tself.properties.displayType = \"value\";\r\n\t\tself.properties.allowSearch = (typeof data.properties.allowSearch == \"undefined\") ? false : data.properties.allowSearch;\r\n\t\tself.properties.additionalXpath = self.properties.additionalXpath || [];\r\n\r\n\t\tif(!self.properties.value) {\r\n\t\t\tself.properties.value = self.value = [];\r\n\t\t\tself.properties.originalValue = [];\r\n\t\t} else if(typeof self.properties.value == \"string\") {\r\n\t\t\tself.properties.value = self.value = JSON.parse(self.properties.value);\r\n\t\t}\r\n\r\n\t\t// Data of get process property value\r\n\t\tself.processPropertyValueArgs = {\r\n\t\t\t\"pcaseId\": self.getIdCase(),\r\n\t\t\t\"pguidEntity\": self.properties.guidEntity,\r\n\t\t\t\"idRender\": self.properties.id,\r\n\t\t\t\"xpathContext\": form.properties.xpathContext,\r\n\t\t\t\"idPageCache\": form.properties.idPageCache,\r\n\t\t\t\"property\": \"data\",\r\n\t\t\t\"ptags\": self.getTagList(self.properties.tagslist),\r\n\t\t\t\"additionalXpaths\": self.properties.additionalXpath\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t * Send processpropertyvalue in order to execute an Action\r\n\t * This method is used when this control stay in Summary form or Global form\r\n\t * @param action\r\n\t */\r\n\texecuteActionImmediately: function(action) {\r\n\t\tvar self = this;\r\n\t\t//Execute action immediately\r\n\t\tvar form = self.getFormContainer();\r\n\r\n\t\tvar processPropertyValueExecuteConstructor = {\r\n\t\t\t\"idRender\": self.properties.id,\r\n\t\t\t\"xpathContext\": form.properties.xpathContext,\r\n\t\t\t\"idPageCache\": form.properties.idPageCache,\r\n\t\t\t\"property\": \"executeConstructor\",\r\n\t\t\t\"psurrogatedKey\": self.properties.surrogatedKey,\r\n\t\t\t\"pguidConstructor\": action.guidConstructor,\r\n\t\t\t\"pparameters\": JSON.encode({\r\n\t\t\t\t\"idStartScope\": action.idStartScope,\r\n\t\t\t\t\"pactionXpath\": self.properties.xpathActions,\r\n\t\t\t\t\"idPageCache\": action.idPageCache\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tself.dataService.executeActions(processPropertyValueExecuteConstructor).done(function(data) {\r\n\t\t\tself.notifyExecution(data.response, action);\r\n\t\t}).fail(function(error) {\r\n\t\t\t// TODO: Create generic mechanism to send notifications\r\n\t\t\tself.notifyExecution(\"Error\", action);\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * notify action execution status\r\n\t * @param response\r\n\t */\r\n\tnotifyExecution: function(response, actionName) {\r\n\t\t// To override in each device\r\n\t},\r\n\r\n\t/**\r\n\t * Render control in read only mode: properties.editable = false\r\n\t * @return {*}\r\n\t */\r\n\trenderReadOnly: function() {\r\n\t\treturn this.renderControl();\r\n\t},\r\n\r\n\t/**\r\n\t * Make a postrender of readonly control\r\n\t */\r\n\tpostRenderReadOnly: function() {\r\n\t\tthis.properties.readOnly = true;\r\n\t\tthis.postRender();\r\n\t},\r\n\r\n\t/**\r\n\t * Template method to implement in each children to customize each control\r\n\t * @return {string}\r\n\t */\r\n\trenderControl: function() {\r\n\t\tvar self = this;\r\n\t\tvar properties = self.properties;\r\n\t\tvar mode = self.getMode();\r\n\t\tvar template;\r\n\t\tvar html = \"\";\r\n\r\n\t\t// Render template\r\n\t\tif(mode == \"design\") {\r\n\t\t\ttemplate = self.renderFactory.getTemplate(\"render-polymorphicLauncher-design\");\r\n\t\t\tvar params = {\r\n\t\t\t\ttype: properties.type,\r\n\t\t\t\tallowSearch: properties.allowSearch\r\n\t\t\t};\r\n\t\t\thtml = $.fasttmpl(template, params);\r\n\t\t} else if(properties.surrogatedKey) {\r\n\t\t\ttemplate = self.renderFactory.getTemplate(\"render-polymorphicLauncher\");\r\n\t\t\thtml = $.fasttmpl(template);\r\n\t\t}\r\n\t\treturn html;\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Public method to determine if a value is valid or not\r\n\t * @param invalidElements\r\n\t * @return {*}\r\n\t */\r\n\tisValid: function(invalidElements) {\r\n\t\tvar self = this,\r\n\t\t\tproperties = self.properties;\r\n\t\t// Call base\r\n\t\tvar bValid = this._super(invalidElements);\r\n\t\tvar value = self.getValue();\r\n\t\t// TODO: write functionality\r\n\t\treturn bValid;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the value in the rendered control\r\n\t * @param value\r\n\t */\r\n\tsetDisplayValue: function(value) {\r\n\t\tvar self = this;\r\n\t\t// Set internal value\r\n\t\tself.setValue(value, false);\r\n\t},\r\n\r\n\t/**\r\n\t * Process an action\r\n\t * @param action\r\n\t */\r\n\tactionManager: function(action) {\r\n\t\tvar self = this;\r\n\t\tvar guidProcess = action.guidObject || \"\";\r\n\t\tvar def = new $.Deferred();\r\n\r\n        action.recordXpath = self.getFormContainer().properties.recordXpath;\r\n\r\n\t\t/**\r\n\t\t/**\r\n\t\t * Check if action is a process\r\n\t\t */\r\n\t\tswitch(action.actionType) {\r\n\t\t\tcase \"Process\":\r\n\t\t\t\t// Verify if case has startform\r\n\t\t\t\tvar params = {\r\n\t\t\t\t\tguidWFClass: guidProcess\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$.when(self.dataService.hasStartForm(params)).done(function(result) {\r\n\t\t\t\t\tif(result.hasStartForm) {\r\n\t\t\t\t\t\t// Open a dialog with startform and wait for Scope\r\n\t\t\t\t\t\t$.when(self.processStartForm({\r\n\t\t\t\t\t\t\tguidprocess: guidProcess,\r\n\t\t\t\t\t\t\ttitle: action.displayNamee,\r\n                            recordXpath: action.recordXpath\r\n\t\t\t\t\t\t})).done(function(idStartScope) {\r\n\t\t\t\t\t\t\taction.idStartScope = idStartScope;\r\n\t\t\t\t\t\t\tdef.resolve(action);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Just add action to queue to be executed on nextEvent\r\n\t\t\t\t\t\tdef.resolve(action);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Rule\":\r\n\t\t\t\t// Just add action to queue to be executed on nextEvent\r\n\t\t\t\tdef.resolve(action);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Form\":\r\n\t\t\t\t$.when(self.processActionForm(action)).done(function(idStartScope) {\r\n\t\t\t\t\taction.idStartScope = idStartScope;\r\n\t\t\t\t\tdef.resolve(action);\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn def.promise();\r\n\t},\r\n\r\n\t/**\r\n\t * Add actions within value object\r\n\t * @param action\r\n\t */\r\n\taddActionToQueue: function(action) {\r\n\t\tvar self = this;\r\n\t\tvar actionsList = self.getValue();\r\n\t\tvar formParams = self.getFormContainer().getParams();\r\n\t\t\r\n\t\taction.params = action.params || {};\r\n\r\n        var recordXpath = self.properties.xpathContext;\r\n\r\n\t\tswitch(action.actionType) {\r\n\t\t\tcase \"Process\":\r\n\t\t\t\taction.params = {\r\n\t\t\t\t\tadditionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n\t\t\t\t\tidParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n                    recordXpath: recordXpath\r\n\t\t\t\t};\r\n                if (typeof action.idStartScope !== \"undefined\") {\r\n                    action.params.idStartScope = action.idStartScope;\r\n                }\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Form\":\r\n\t\t\t\taction.params = {\r\n\t\t\t\t\tidStartScope: action.idStartScope,\r\n\t\t\t\t\tadditionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n\t\t\t\t\tentityXpath: self.properties.xpathActions,\r\n\t\t\t\t\tidParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n\t\t\t\t\tidEntity: action.idEntity,\r\n\t\t\t\t\tguidEntity: action.guidEntity\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Rule\":\r\n\t\t\t\t//TODO\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tactionsList.push(action);\r\n\t\tself.setValue(actionsList);\r\n\t\tself.setDisplayValue(actionsList);\r\n\t},\r\n\r\n\t/**\r\n\t * Remove action within value object\r\n\t * @param index\r\n\t */\r\n\tremoveActionToQueue: function(index) {\r\n\t\tvar self = this;\r\n\t\tvar value = self.getValue();\r\n\t\tvalue.splice(index, 1);\r\n\t\tself.setValue(value);\r\n\t\tself.setDisplayValue(value);\r\n\t},\r\n\t/**\r\n\t * Add the render data to the given collection in order to send data to the server\r\n\t * @param renderValues\r\n\t */\r\n\tcollectData: function(renderValues) {\r\n\t\tvar self = this;\r\n\t\tif(self.controlValueIsChanged()) {\r\n\t\t\tvar properties = self.properties;\r\n\t\t\tvar xpath = properties.xpath;\r\n\t\t\tvar controlValue = self.getValue();\r\n\t\t\tvar actions = [];\r\n\t\t\t$.each(controlValue, function(index, value) {\r\n\t\t\t\tvar action = {};\r\n\t\t\t\taction.params = value.params || {};\r\n\t\t\t\taction.guidAction = value.guidObject || value.guidAction;\r\n\t\t\t\taction.displayName = value.displayName;\r\n\t\t\t\taction.guidConstructor = value.guidConstructor;\r\n\t\t\t\taction.actionType = value.actionType;\r\n\t\t\t\taction.xpathContext = value.xpathContext;\r\n\t\t\t\taction.guidEntity = value.guidEntity;\r\n\t\t\t\tactions.push(action);\r\n\t\t\t});\r\n\t\t\trenderValues[xpath] = (actions.length == 0) ? \"\" : JSON.encode(actions);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Util to count how many actions are there\r\n\t * @param action\r\n\t * @return {number}\r\n\t */\r\n\tcountSameActions: function(action) {\r\n\t\tvar self = this;\r\n\t\tvar value = self.getValue();\r\n\t\tvar count = 0;\r\n\t\t$.each(value, function(key, value) {\r\n\t\t\tif(value.guidAction == action.guidAction) {\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn count;\r\n\t},\r\n\r\n\t/**\r\n\t * Get list of tags\r\n\t * @param taglist\r\n\t * @return {Array}\r\n\t */\r\n\tgetTagList: function(taglist) {\r\n\t\ttaglist = taglist || [];\r\n\t\tvar result = [];\r\n\r\n\t\tfor(var i = taglist.length; i > 0; i--) {\r\n\t\t\tresult.push(taglist[i - 1].value);\r\n\t\t}\r\n\t\treturn (result.length > 0) ? result : \"\";\r\n\t}\r\n});","/**\r\n *   Name: Bizagi Render Button Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for button renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.button\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.caption = properties.caption || \"\";\r\n\r\n        // set default value from normal to value\r\n        properties.displayType = \"value\";\r\n\r\n        // A button cannot be required\r\n        properties.required = false;\r\n\r\n        // This flag enable/disable default behaviors of buttons\r\n        // auto save and execute rule\r\n        properties.preventDefault = properties.preventDefault || false;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"button\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {\r\n            caption: self.properties.caption,\r\n            cssClass: self.properties.cssclass || \"\",\r\n            editable: self.properties.editable\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {}\r\n     */\r\n    renderReadOnly: function () {\r\n        // Executes the same template than normal render\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        // call base\r\n        this._super();\r\n\r\n        this.getLabel().addClass('bz-form-label--hidden');\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render behaviour after to be processed\r\n     */\r\n    postRender: function () {\r\n        // call base\r\n        this._super();\r\n\r\n        this.getLabel().addClass('bz-form-label--hidden');\r\n    },\r\n\r\n    /**\r\n     * Saves the form\r\n     * @returns {}\r\n     */\r\n    saveForm: function () {\r\n        var form = this.getFormContainer();\r\n        return form.saveForm();\r\n    },\r\n\r\n    /**\r\n     * Executes the button action\r\n     * @returns {}\r\n     */\r\n    executeButton: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = properties.xpathContext || \"\";\r\n\r\n        if (properties.submitOnChangexpathContextRow) {\r\n            xpathContext = xpathContext ? xpathContext + \".\" + properties.submitOnChangexpathContextRow : properties.submitOnChangexpathContextRow;\r\n        }\r\n\r\n        // Set the loading feedback\r\n        self.getFormContainer().startLoading();\r\n\r\n        return self.dataService.multiaction().executeButton({\r\n            idRender: properties.id,\r\n            xpath: properties.xpath || \"\",\r\n            xpathContext: xpathContext || \"\",\r\n            idPageCache: properties.idPageCache\r\n        }).always(function () {\r\n            self.getFormContainer().endLoading();\r\n            return arguments ? arguments[0] : undefined;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Refresh the current form\r\n     * @returns {}\r\n     */\r\n    refreshForm: function () {\r\n        var form = this.getFormContainer();\r\n        form.refreshForm(this.properties.id);\r\n    },\r\n\r\n    /**\r\n     * Process the button actions workflow\r\n     * @returns {}\r\n     */\r\n    processButton: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.editable) {\r\n            // Save the form prior opening the dialog\r\n            self.runButtonAction();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Triggers the render change event\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    triggerRenderChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n\r\n        var pressed = params.pressed || false;\r\n\r\n        self.triggerHandler(\"renderchange\", {render: self, pressed: pressed});\r\n    },\r\n\r\n    /**\r\n     * Run button actions\r\n     * @returns {}\r\n     */\r\n    runButtonAction: function () {\r\n        var self = this;\r\n\r\n        // Save the form prior opening the dialog\r\n        self.getFormContainer().clearValidationMessages();\r\n\r\n        self.saveForm().pipe(function () {\r\n            return self.executeButton();\r\n        }).done(function (result) {\r\n\r\n            if (result == null || result == true || result.result === \"success\" || result.type === \"success\") {\r\n                return self.refreshForm();\r\n            } else if (result.type === \"validationMessages\") {\r\n                try {\r\n                    // Add validation messages\r\n                    self.getFormContainer().addValidationMessage(result.messages);\r\n                } catch (e) {\r\n                }\r\n            }\r\n        }).fail(function (error) {\r\n\r\n            try {\r\n                // Add error messages\r\n                var error_obj = bizagi.util.getErrorFormatted(error);\r\n                var message = typeof (error_obj) === \"undefined\" ? {\r\n                    \"message\": bizagi.localization.getResource(\"workportal-general-error\")\r\n                } : error_obj;\r\n\r\n                self.getFormContainer().failHandler(message);\r\n            } catch (e) {\r\n            }\r\n\r\n        });\r\n\r\n    },\r\n\r\n    processLayout: function (isLabelFormat, format) {\r\n        if (isLabelFormat) {\r\n            this.changeBackgroundColor(format.background);\r\n            this._super(!isLabelFormat, format);\r\n        }\r\n    },\r\n\r\n    changeBackgroundColor: function (color) {\r\n        if (typeof color === \"undefined\") return this;\r\n\r\n        if (color !== \"none\") {\r\n            this.getElementsToStylize(this.getControl()).style(\"background\", color, \"important\");\r\n        } else {\r\n            this.getElementsToStylize(this.getControl()).css(\"background\", \"\");\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    getElementsToStylize: function ($context) {\r\n        return $(\"input\", $context);\r\n    },\r\n\r\n    /**\r\n     *  Method to determine if the render value can be sent to the server or not\r\n     * @returns {}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Fileprint Class\r\n *   Author: Christian Collazos\r\n *   Comments:\r\n *   -   This script will define basic stuff for fileprint renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.fileprint\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.caption = (properties.caption && properties.caption != \" \")? properties.caption : \"render-fileprint-property-caption\";\r\n        properties.filesCount = properties.filesCount ? properties.filesCount : 0;\r\n\r\n        // set default value from normal to value\r\n        properties.displayType = \"value\";\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n\r\n        // A button cannot be required\r\n        properties.required = false;\r\n    },\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"fileprint\");\r\n\r\n        return $.fasttmpl(template, {\r\n            caption: properties.caption\r\n        });\r\n    },\r\n    /*\r\n    *   Method to render non editable values\r\n    */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n\r\n        // Executes the same template than normal render\r\n        return self.renderControl();\r\n    },\r\n\r\n    /*\r\n    *   get the fileprint url\r\n    */\r\n    getFilePrintUrl: function (disposition) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.getFilePrintUrl({\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext || \"\",\r\n            idPageCache: properties.idPageCache,\r\n            disposition: disposition,\r\n            sessionId: self.getSessionId()\r\n        });\r\n\r\n    },\r\n\r\n    /*\r\n    *   Refresh the current form\r\n    */\r\n    refreshForm: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var form = self.getFormContainer();\r\n        form.refreshForm(properties.id);\r\n    },\r\n\r\n     /*\r\n    *   Saves the form\r\n    */\r\n    saveForm: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        return form.saveForm();\r\n    }\r\n});","/**\r\n *   Name: Bizagi Render Simple Link Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for link renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.link\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Set properties\r\n        var properties = this.properties;\r\n        properties.required = false;\r\n        properties.displayType = \"value\";\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"link\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {\r\n            displayName: self.properties.displayName,\r\n            align: self.properties.valueAlign,\r\n            editable: self.properties.editable\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        // Executes the same template than normal render\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Automatically this render is valid, so we can't check a required link\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Do nothing\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        return false;\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render Geolocation control\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for geolocation renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.geolocation\", {}, {\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {} data\r\n     */\r\n    init: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n        this.geolocation = window.navigator.geolocation;\r\n\r\n        var properties = this.properties;\r\n        properties.allowUpdate = bizagi.util.parseBoolean(properties.allowUpdate) === true;\r\n\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"geolocation\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, self.properties);\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param {} invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Call base\r\n        return this._super(invalidElements);\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Set internal value\r\n        this.setValue(value, false);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     * @returns {}\r\n     */\r\n    configureHandlers: function () {\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} succes_callback\r\n     * @param {} fail_callback\r\n     */\r\n    getCurrentPosition: function (succes_callback, fail_callback) {\r\n        var self = this;\r\n\r\n        if (typeof (self.geolocation) === \"undefined\") {\r\n            if (fail_callback)\r\n                fail_callback(bizagi.localization.getResource(\"render-control-unsuported-by-browser\").replace(\"{0}\", self.properties.type));\r\n            return;\r\n        }\r\n\r\n        var onSuccess = function (position) {\r\n            if (succes_callback)\r\n                succes_callback(position);\r\n        };\r\n\r\n        var onError = function (error) {\r\n            var strMessage = self.getErrorMessage(error);\r\n\r\n            if (fail_callback)\r\n                fail_callback(strMessage);\r\n        };\r\n\r\n        return self.geolocation.getCurrentPosition(onSuccess, onError);\r\n    },\r\n\r\n    /**\r\n     * Get message of error\r\n     * @param error\r\n     * @returns {*|string}\r\n     */\r\n    getErrorMessage: function (error) {\r\n        var strMessage = \"\";\r\n\r\n        // Check for known errors\r\n        switch (error.code) {\r\n            case error.PERMISSION_DENIED:\r\n            case 1:\r\n                strMessage = bizagi.localization.getResource(\"render-geolocation-permission-denied\");\r\n                break;\r\n            case error.POSITION_UNAVAILABLE:\r\n            case 2:\r\n                strMessage = bizagi.localization.getResource(\"render-geolocation-position-unavailable\");\r\n                break;\r\n            case error.TIMEOUT:\r\n            case 3:\r\n                strMessage = bizagi.localization.getResource(\"render-geolocation-timeout\");\r\n                break;\r\n            default:\r\n                strMessage = \"WD: \" + bizagi.localization.getResource(\"render-geolocation-permission-denied\");\r\n                break;\r\n        }\r\n\r\n        return strMessage;\r\n    },\r\n\r\n    /**\r\n     * Change precision number of coordinates\r\n     * @param data\r\n     * @returns {*}\r\n     */\r\n    performPrecision: function (data) {\r\n        var geolocation = data.split(\" \") || \"\";\r\n\r\n        if (!geolocation) return data;\r\n\r\n        try {\r\n            var latitude = parseFloat(geolocation[0].trim());\r\n            var longitude = parseFloat(geolocation[1].trim());\r\n\r\n            return latitude.toPrecision(10) + \" \" + longitude.toPrecision(10);\r\n        } catch (e) {\r\n            return data;\r\n        }\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Render Association Class\r\n*   Author: Edward Morales\r\n*   Comments:\r\n*   -   This script will define basic stuff for association renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.association\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        var properties = self.properties;\r\n\r\n        // Fill default properties\r\n        properties.property = \"flipped\";\r\n        properties.idRender = self.properties.id;\r\n        properties.allowFlip = (typeof properties.allowFlip != \"undefined\") ? bizagi.util.parseBoolean(properties.allowFlip) : true;\r\n        properties.flipped = (typeof properties.flipped != \"undefined\") ? bizagi.util.parseBoolean(properties.flipped) : false;\r\n        properties.flipstate = properties.flipped;\r\n\r\n\r\n        // data of entities (left and right)\r\n        properties.leftData = properties.leftData || [];\r\n        properties.rightData = properties.rightData || [];\r\n\r\n        if (properties.value) {\r\n            self.processPropertyValue();\r\n        }\r\n    },\r\n\r\n\r\n\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"association\");\r\n        var def = new $.Deferred();\r\n\r\n        self.properties.property = \"flipped\";\r\n        self.properties.idRender = self.properties.id;\r\n\r\n        // Define flipped\r\n        $.when(self.getFlipAssociation())\r\n            .done(function (flip) {\r\n\r\n                // Make json base, create self.properties.formatJson\r\n                self.makeJsonBase();\r\n\r\n                self.properties.flipped = bizagi.util.parseBoolean(flip) || false;\r\n\r\n                var html = $.fasttmpl(template, self.properties, {\r\n                    getColumnData: self.getColumnData,\r\n                    getRightAssociation: self.getRightAssociation\r\n                });\r\n\r\n                /* by default need set self.properties.formatJson */\r\n                self.setValue(JSON.encode(self.properties.formatJson));\r\n\r\n                def.resolve(html);\r\n            });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n\r\n    /*\r\n    * Returns the flip state\r\n    */\r\n    getFlipAssociation: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        if (mode == \"execution\")\r\n            return self.dataService.getFlipAssociation(self.properties);\r\n\r\n        return false;\r\n    },\r\n\r\n    /* \r\n    *   Gets the display value of the render\r\n    */\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n        var value = self.getValue();\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Get the template \r\n    */\r\n    getTemplateName: function () {\r\n        return \"association\";\r\n    },\r\n\r\n\r\n    /**\r\n    * Get Left Data, verify if flipper flags sets true\r\n    * \r\n    * @param column {'0'||'1'}\r\n    */\r\n    getColumnData: function () {\r\n        var self = this;\r\n        var properties = self.data;\r\n        var data = [];\r\n        var associationData = properties.flipped ? properties.rightData : properties.leftData;\r\n\r\n        $.each(associationData, function(key, item) {\r\n            data.push({ id: item.id, value: item.value });\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n    * Association of right elements\r\n    */\r\n    getRightAssociation: function (leftId) {\r\n        var self = this;\r\n        var properties = self.data;\r\n        var association = [];\r\n\r\n\r\n        var isChecked = function (leftId, idRight) {\r\n            var checked = false;\r\n            $.each(properties.formatJson.value, function (key, value) {\r\n                if (!checked && value.id == leftId && value.value.indexOf(idRight) >= 0) {\r\n                    checked = true;\r\n                }\r\n            });\r\n\r\n            return checked;\r\n        };\r\n\r\n        // create association and check element\r\n        if (properties.flipped) {\r\n            // left element\r\n            $.each(properties.leftData, function (key, data) {\r\n                association.push({\r\n                    id: data.id,\r\n                    name: data.value,\r\n                    checked: isChecked(data.id, leftId)\r\n                });\r\n\r\n            });\r\n        } else {\r\n            $.each(properties.rightData, function (key, data) {\r\n                association.push({\r\n                    id: data.id,\r\n                    name: data.value,\r\n                    checked: isChecked(leftId, data.id)\r\n                });\r\n            });\r\n        }\r\n\r\n        return association;\r\n    },\r\n\r\n\r\n    removeElement: function (leftId, rightId) {\r\n        var self = this;\r\n\r\n        $.each(self.properties.formatJson.value, function (key, data) {\r\n            if (self.properties.flipped) {\r\n                if (data.id == rightId) {\r\n                    // Remove right element from left panel\r\n                    $.each(self.properties.formatJson.value[key][\"value\"], function (removeKey, removeValue) {\r\n                        if (leftId == removeValue) {\r\n                            // Splice from array\r\n                            self.properties.formatJson.value[key][\"value\"].splice(removeKey, 1);\r\n                        }\r\n                    });\r\n                }\r\n            } else if (data.id == leftId) {\r\n                // Remove right element from left panel\r\n                $.each(self.properties.formatJson.value[key][\"value\"], function (removeKey, removeValue) {\r\n                    if (rightId == removeValue) {\r\n                        // Splice from array\r\n                        self.properties.formatJson.value[key][\"value\"].splice(removeKey, 1);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        self.setValue(JSON.encode(self.properties.formatJson));\r\n    },\r\n\r\n\r\n    addElement: function (leftId, rightId) {\r\n        var self = this;\r\n\r\n        $.each(self.properties.formatJson.value, function (key, data) {\r\n            if (self.properties.flipped) {\r\n                if (data.id == rightId) {\r\n                    // Add right element to left panel\r\n                    self.properties.formatJson.value[key][\"value\"].push(leftId);\r\n                }\r\n            } else if (data.id == leftId) {\r\n                // Add right element to left panel\r\n                self.properties.formatJson.value[key][\"value\"].push(rightId);\r\n            }\r\n        });\r\n        self.setValue(JSON.encode(self.properties.formatJson));\r\n    },\r\n\r\n    makeJsonBase: function () {\r\n        var self = this;\r\n        self.properties.formatJson = self.properties.formatJson || {\r\n            leftXpath: self.properties.leftXpath,\r\n            rightXpath: self.properties.rightXpath,\r\n            leftFactName: self.properties.leftFactName,\r\n            rightFactName: self.properties.rightFactName,\r\n            value: self.properties.value\r\n        };\r\n    },\r\n\r\n\r\n    /*\r\n    *   Check if a render has no value for required validation\r\n    */\r\n    hasValue: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.formatJson) {\r\n            var values = self.properties.formatJson.value;\r\n        } else {            \r\n            values = self.properties.value;\r\n        }\r\n       \r\n\r\n        for (var i = 0, l = values.length; i < l; i++) {\r\n            var data = values[i];\r\n            if (data && data.value.length > 0) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    /*\r\n    * This method process the value.\r\n    * changes the format to send request\r\n    */\r\n    processPropertyValue: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var values = properties.value;\r\n        var result = [];\r\n\r\n        for (var i = 0, l = values.length; i < l; i++) {\r\n            var value = values[i];\r\n            result.push({ id: value[0], value: value[1] });\r\n        }\r\n\r\n        properties.value = result;\r\n    }\r\n});","/**\r\n *   Name: Bizagi Render Upload Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for uploads\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.upload\", {}, {\r\n    /***\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        var form = self.getFormContainer();\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        var maxFileSizeOfProperty = Number(properties.maxSize) || 0;\r\n        var maxFileSizeOfUser = typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\" ? Number(BIZAGI_SETTINGS.UploadMaxFileSize) : 4091904;\r\n\r\n        properties.maxSize = maxFileSizeOfProperty || maxFileSizeOfUser;\r\n        properties.maxfiles = Number(properties.maxfiles) || 999;\r\n        properties.validExtensions = properties.validExtensions || \"\";\r\n\r\n        if (properties.validExtensions.length > 0 && properties.validExtensions.indexOf(\".\") < 0) {\r\n            var singleExtensions = properties.validExtensions.replace(/\\ /gi, '').split(\";\");\r\n            var defExtensions = [];\r\n\r\n            for (var i = 0; i < singleExtensions.length; i++) {\r\n                if (singleExtensions[i].length > 0) {\r\n                    defExtensions.push(\"*.\" + singleExtensions[i]);\r\n                } else {\r\n                    //Removes the empty element\r\n                    var index = singleExtensions.indexOf(singleExtensions[i]);\r\n                    singleExtensions.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            properties.validExtensions = defExtensions.join(\";\");\r\n        }\r\n\r\n        properties.addUrl = properties.addUrl || self.dataService.getUploadAddUrl();\r\n        properties.deleteUrl = properties.deleteUrl || undefined;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) || false;\r\n        properties.allowDelete = (bizagi.util.parseBoolean(properties.allowDelete) !== null && properties.editable) ? bizagi.util.parseBoolean(properties.allowDelete) : false;\r\n\r\n        properties.contexttype = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : \"\";\r\n        properties.allowSendInMail = properties.allowSendInMail || false;\r\n\r\n        // Set files property\r\n        self.files = properties.value || [];\r\n        self.filesCount = self.files.length;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"upload\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            xpath: bizagi.util.encodeXpath(self.getUploadXpath()),\r\n            editable: properties.editable,\r\n            haveFiles: self.filesCount !== 0,\r\n            noFiles: self.filesCount === 0,\r\n            allowSendInMail: properties.allowSendInMail\r\n        });\r\n\r\n        // Render current children\r\n        var items = \"\";\r\n        for (var i = 0; i < self.filesCount; i++) {\r\n            var file = {id: self.files[i][0], fileName: self.files[i][1]};\r\n            var item = self.renderUploadItem(file);\r\n\r\n            items += item;\r\n        }\r\n\r\n        html = self.replaceFilesHtml(html, items);\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Renders a single upload item\r\n     * @param file\r\n     * @returns {jQuery|*}\r\n     */\r\n    renderUploadItem: function (file) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var itemTemplate = self.getTemplateItemName();\r\n        var template = self.renderFactory.getTemplate(itemTemplate);\r\n\r\n        // Don't render urls when not running in execution mode\r\n        var url = !self.isExecutionMode() ? \"\" : self.buildItemUrl(file); // TODO: Review if need it: javascript:void(0);\r\n\r\n        var html = $.fasttmpl(template, {\r\n            id: file.id,\r\n            mode: mode,\r\n            url: url,\r\n            allowDelete: self.properties.allowDelete,\r\n            filename: file.fileName,\r\n            editable: self.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (file) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n\r\n        return self.dataService.getUploadFileUrl({\r\n            idRender: properties.id,\r\n            xpath: self.getUploadXpath(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            fileId: file.id,\r\n            sessionId: form.properties.sessionId,\r\n            contexttype: properties.contexttype\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{files}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Removes a file from the upload control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    deleteUploadItem: function (item, fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = self.getUploadXpath() + (bizagi.util.isNumeric(fileId) ? \"[id=\" + fileId + \"]\" : \"[id='\" + fileId + \"']\");\r\n\r\n        return self.dataService.deleteUploadFile({\r\n            url: properties.deleteUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contexttype\r\n        }).pipe(function () {\r\n\r\n            // Subtract counter\r\n            self.filesCount = self.filesCount - 1;\r\n\r\n            // Remove from local collection\r\n            self.files = $.grep(self.files, function (fileItem) {\r\n                return fileItem[0] != fileId;\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n\r\n        // Set files property\r\n        self.files = value || []; // Dont remove this line\r\n        self.filesCount = self.files.length;\r\n\r\n        // Call base\r\n        self._super(value, triggerEvents);\r\n    },\r\n\r\n    /**\r\n     * Returns the internal value\r\n     * @returns {*}\r\n     */\r\n    getValue: function () {\r\n        return this.files;\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @returns {boolean}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n        var bValid = true;\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (properties.required && properties.editable) {\r\n            var newRow = self.grid && self.grid.isFromCreatedRow.apply(self);\r\n\r\n            if (self.filesCount <= 0 && !newRow) {\r\n                var inlineEdit = self.grid ? self.grid.properties.inlineEdit : true;\r\n\r\n                if (inlineEdit) {\r\n                    message = self.getResource(\"render-required-upload\").replaceAll(\"#label#\", properties.displayName);\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Build add params to send to the server\r\n     */\r\n    buildAddParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var data = {};\r\n        var prefix = self.Class.BA_CONTEXT_PARAMETER_PREFIX;\r\n\r\n        data[prefix + \"xpath\"] = self.getUploadXpath();\r\n        data[prefix + \"idRender\"] = properties.id;\r\n        data[prefix + \"xpathContext\"] = properties.xpathContext;\r\n        data[prefix + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\r\n        data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = form.properties.sessionId;\r\n        data[prefix + \"contexttype\"] = properties.contexttype;\r\n\r\n        try {\r\n            if (typeof (BIZAGI_SESSION_NAME) !== \"undefined\") {\r\n                data[BIZAGI_SESSION_NAME] = form.properties.sessionId\r\n            } else {\r\n                data[\"JSESSIONID\"] = form.properties.sessionId;\r\n            }\r\n        } catch (e) {\r\n            data[\"JSESSIONID\"] = form.properties.sessionId;\r\n        }\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getUploadXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    checkRequired: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (bizagi.util.parseBoolean(properties.required)) {\r\n            if (self.grid && self.grid.properties.inlineAdd === true) {\r\n                if (!self.hasValue() && !(self.getControl().parents(\"tr\").data(\"new-row\"))) {\r\n                    self.setRenderRequired(invalidElements, properties);\r\n                    return false;\r\n                }\r\n            } else {\r\n                if (!self.hasValue()) {\r\n                    self.setRenderRequired(invalidElements, properties);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    setRenderRequired: function (invalidElements, properties) {\r\n        var self = this;\r\n        var message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n        invalidElements.push({xpath: properties.xpath, message: message});\r\n    },\r\n\r\n    /**\r\n     * Templates\r\n     */\r\n    getTemplateItemName: function () {\r\n        return \"uploadItem\";\r\n    }\r\n});","/**\r\n *   Name: Bizagi Render ECM upload control\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for ECM Control\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.ecm\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        properties.maxSize = Number(properties.maxSize) || (typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\" ? Number(BIZAGI_SETTINGS.UploadMaxFileSize) : properties.maxSize = Number(properties.maxSize) || 4091904);\r\n        properties.maxFiles = Number(properties.maxfiles) || 999;\r\n        properties.validExtensions = properties.validExtensions || \"\";\r\n\r\n        if (properties.validExtensions.length > 0 && properties.validExtensions.indexOf(\".\") < 0) {\r\n            var singleExtensions = properties.validExtensions.split(\";\");\r\n            for (var i = 0; i < singleExtensions.length; i++) {\r\n                singleExtensions[i] = \"*.\" + singleExtensions[i];\r\n            }\r\n            properties.validExtensions = singleExtensions.join(\";\");\r\n        }\r\n\r\n        properties.addUrl = self.dataService.serviceLocator.getUrl(\"render-ecm-upload-url\") + \"?action=uploadECMFile\";\r\n        properties.editUrl = self.dataService.serviceLocator.getUrl(\"render-ecm-upload-url\") + \"?action=updateECMFileContent\";\r\n        properties.deleteUrl = properties.deleteUrl || undefined;\r\n        properties.allowDelete = bizagi.util.parseBoolean(properties.allowDelete) !== null ? bizagi.util.parseBoolean(properties.allowDelete) : true;\r\n        properties.q_xpath = bizagi.util.encodeXpath(properties.xpath);\r\n        properties.showMetadata = properties.showMetadata === undefined || properties.showMetadata === null ? true : bizagi.util.parseBoolean(properties.showMetadata);\r\n\r\n        var dateFormat = this.getResource(\"dateFormat\");\r\n        var timeFormat = this.getResource(\"timeFormat\");\r\n\r\n        // We will hold here the value to display\r\n        properties.displayValue = \"\";\r\n        properties.showTime = properties.showTime !== undefined ? bizagi.util.parseBoolean(properties.showTime) : false;\r\n        properties.dateFormat = properties.dateFormat || dateFormat;\r\n        properties.timeFormat = properties.timeFormat || timeFormat;\r\n        properties.fullFormat = properties.dateFormat;\r\n\r\n        // Set files property\r\n        self.files = properties.value || [];\r\n        self.filesCount = self.files.length;\r\n\r\n        properties.xpathContext = this.parent.properties.xpathContext || properties.xpathContext || \"\";\r\n\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @param listControl\r\n     * @param fileProperties\r\n     * @returns {*}\r\n     */\r\n    renderControl: function (listControl, fileProperties) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"ecm\");\r\n        var mode = self.getMode();\r\n        var defer = new $.Deferred();\r\n\r\n        properties.value = (fileProperties) ? [[fileProperties.idFileUpload, fileProperties.fileName]] : self.value;\r\n        var html = $.fasttmpl(template, properties, {\r\n            getFileExtension: self.getFileExtension,\r\n            isImage: self.isImage\r\n        });\r\n\r\n        if (self.properties.value != undefined) {\r\n\r\n            var lengthValues = self.properties.value.length;\r\n\r\n            if (lengthValues === 0) {\r\n                defer.resolve(html);\r\n            }\r\n\r\n            $.each(self.properties.value, function (key, value) {\r\n                var data = {};\r\n\r\n                data.idFileUpload = value[0];\r\n                data.fileName = value[1];\r\n                data.idPageCache = self.properties.idPageCache;\r\n                data.xpathContext = self.getXpathContext();\r\n                data.xPath = self.properties.xpath;\r\n                data.editable = self.properties.editable;\r\n                data.idAttrib = self.properties.idAttrib;\r\n\r\n                var form = self.getFormContainer();\r\n                if (form && form.properties && form.properties.sessionId) {\r\n                    data.sessionId = form.properties.sessionId;\r\n                }\r\n\r\n                if (mode === \"execution\") {\r\n                    $.when(self.renderFileLayout(data, fileProperties)).done(function (item) {\r\n                        lengthValues--;\r\n\r\n                        if (bizagi.loader.productBuildToAbout && bizagi.loader.productBuildToAbout.indexOf(\"10.4\") === 0) {\r\n                            item = item.replaceAll(\"Handlers/MetadataFile\", \"Handlers/Metadata\");\r\n                        }\r\n\r\n                        html = self.replaceItemHtml(html, self.properties.id + \"-\" + data.idFileUpload, item);\r\n                        if (lengthValues === 0) {\r\n                            defer.resolve(html);\r\n                        }\r\n                    });\r\n\r\n                }\r\n            });\r\n        } else {\r\n            defer.resolve(html);\r\n        }\r\n        return defer.promise();\r\n    },\r\n\r\n    replaceItemHtml: function (html, id, replace) {\r\n        return html.replace(\"{{\" + id + \"}}\", replace);\r\n    },\r\n\r\n    renderFileLayout: function (data, fileProperties) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var metadataTemplate = self.renderFactory.getTemplate(\"ecm-metadata\");\r\n\r\n        var deferred = $.Deferred();\r\n\r\n        $.when(self.dataService.getECMMetadata(data),\r\n            (fileProperties) ? [fileProperties] : self.dataService.getFileProperties(data)\r\n        ).done(function (metaData, fileProperties) {\r\n\r\n            fileProperties[0].data = data;\r\n\r\n            // Make xpath context\r\n            fileProperties[0].xpathContext = fileProperties[0].xpathContext || form.properties.xpathContext || \"\";\r\n            fileProperties[0].xpath = self.properties.xpath;\r\n\r\n            metaData[0].filename = data.fileName;\r\n            metaData[0].url = self.buildItemUrl(fileProperties[0]);\r\n\r\n            // Define File Properties\r\n            metaData[0].ecm_ecmStatus = fileProperties[0].ecmStatus;\r\n            metaData[0].ecm_isVisible = fileProperties[0].isVisible;\r\n            metaData[0].ecm_allowUpdateMetadata = fileProperties[0].allowUpdateMetadata;\r\n            metaData[0].ecm_allowDelete = fileProperties[0].allowDelete;\r\n            metaData[0].ecm_allowUpdateContent = fileProperties[0].allowUpdateContent;\r\n            metaData[0].ecm_allowView = fileProperties[0].allowView;\r\n            metaData[0].ecm_allowCheckOut = fileProperties[0].allowCheckOut;\r\n            metaData[0].ecm_allowCancelCheckOut = fileProperties[0].allowCancelCheckOut;\r\n            metaData[0].ecm_allowEdit = data.editable && fileProperties[0].allowEdit;\r\n            metaData[0].ecm_ecmStatus = fileProperties[0].ecmStatus;\r\n            metaData[0].idFileUploads = fileProperties[0].idFileUpload;\r\n            metaData[0].xpath = fileProperties[0].xpath;\r\n            metaData[0].value = bizagi.util.parseBoolean(fileProperties[0].value);\r\n            metaData[0].deviceType = bizagi.detectDevice();\r\n\r\n            var html = $.fasttmpl(metadataTemplate, metaData[0]);\r\n            deferred.resolve(html);\r\n        });\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    isImage: function (file) {\r\n        var extension = this.getFileExtension(file);\r\n        var image = [\"JPG\", \"JPEG\", \"GIF\", \"PNG\", \"BMP\"];\r\n\r\n        return (image.indexOf(extension.toUpperCase()) > -1) ? true : false;\r\n    },\r\n\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (file) {\r\n        var self = this;\r\n        var p_sessionId = bizagi.cookie(\"JSESSIONID\");\r\n\r\n        if(!file.data) {\r\n            file.data = {fileName: file.fileName, idAttrib: file.idAttrib}\r\n        }\r\n\r\n        return self.dataService.getECMFileUrl({\r\n            idFileUpload: file.idFileUpload,\r\n            xPath: file.xpath || file.xPath,\r\n            xpathContext: file.xpathContext,\r\n            idAttrib: file.data.idAttrib,\r\n            idPageCache: self.properties.idPageCache,\r\n            fileName: file.data.fileName.replace(/ /g, \"_\"),\r\n            p_sessionId: p_sessionId,\r\n            sessionId: file.data.sessionId || \"\"\r\n        });\r\n    },\r\n\r\n    buildAddParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var data = {};\r\n\r\n        // data.fileExt = properties.validExtensions;\r\n        // data.fileDesc = properties.validExtensions ? self.getResource(\"render-upload-allowed-extensions\") + properties.validExtensions : \"\";\r\n        data.xPath = properties.xpath;\r\n        data.idAttrib = properties.idAttrib;\r\n        data.xpathContext = properties.xpathContext;\r\n        data.metaValues = [];\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Get name of file extension\r\n     * @param fileName\r\n     * @returns {*}\r\n     */\r\n    getFileExtension: function (fileName) {\r\n        fileName = fileName || \"\";\r\n        return fileName.split(\".\").pop();\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Call base\r\n        self._super(value, triggerEvents);\r\n\r\n        // Set files property\r\n        self.files = properties.value || [];\r\n        self.filesCount = (self.files.length) ? self.files.length : properties.value;\r\n    },\r\n\r\n    /**\r\n     * Gets xpath context\r\n     * @returns {*|string}\r\n     */\r\n    getXpathContext: function () {\r\n        return this.properties.xpathContext || \"\";\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getUploadXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Removes a file from the ECM control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    deleteUploadItem: function (item, fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var params = {\r\n            idFileUpload: fileId,\r\n            xPath: properties.xpath,\r\n            idAttrib: properties.idAttrib,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: self.getXpathContext()\r\n        };\r\n\r\n        return self.dataService.deleteECMFile(params).pipe(function () {\r\n\r\n            // Subtract counter\r\n            self.filesCount = self.filesCount - 1;\r\n\r\n            // Remove from local collection\r\n            self.files = $.grep(self.files, function (fileItem) {\r\n                return fileItem[0] != fileId;\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Lock a file from the ECM control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    lockUploadItem: function (fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var params = {\r\n            idFileUpload: fileId,\r\n            xPath: properties.xpath,\r\n            idAttrib: properties.idAttrib,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: self.getXpathContext()\r\n        };\r\n\r\n        return self.dataService.checkOutFile(params);\r\n    },\r\n\r\n    /**\r\n     * Unlock a file from the ECM control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    unlockUploadItem: function (fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var params = {\r\n            idFileUpload: fileId,\r\n            xPath: properties.xpath,\r\n            idAttrib: properties.idAttrib,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: self.getXpathContext()\r\n        };\r\n\r\n        return self.dataService.cancelCheckOut(params);\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render Yes-no Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for yes-no renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.yesno\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.value = typeof (properties.value) != \"undefined\" ? bizagi.util.parseBoolean(properties.value) : null;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"yesno\");\r\n        var randomId = bizagi.util.randomNumber(100, 10000000);\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            id: randomId,\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Gets the display value of the render\r\n     */\r\n    getDisplayValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.parseBoolean(value) === true) {\r\n            return this.getResource(\"render-boolean-yes\");\r\n        } else if (bizagi.util.parseBoolean(value) === false) {\r\n            return this.getResource(\"render-boolean-no\");\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if a render has no value for required validation\r\n     * @returns {boolean}\r\n     */\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.isEmptyValue(value)) return false;\r\n        return bizagi.util.parseBoolean(value) !== null;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Letter Class\r\n*   Author: Diego Parra\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for letter renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.letter\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Create a variable to check if the letter has been opened when editable\r\n        this.letterOpened = false;\r\n    },\r\n\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"letter\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template);\r\n    },\r\n\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"letter.readonly\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template);\r\n    },\r\n\r\n    /**\r\n     * Returns the letter content from the server\r\n     */\r\n    getLetterContent: function () {\r\n        // Set flag to true\r\n        this.letterOpened = true;\r\n\r\n        return this.dataService.getLetterContent({\r\n            url: this.properties.getUrl,\r\n            idRender: this.properties.id,\r\n            xpath: this.getXpath(),\r\n            xpathContext: this.getContextXpath(),\r\n            idPageCache: this.properties.idPageCache\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sends the content to the server in order to save\r\n     * @param {} content\r\n     */\r\n    saveLetterContent: function (content) {\r\n        return this.dataService.saveLetterContent({\r\n            url: this.properties.saveUrl,\r\n            idRender: this.properties.id,\r\n            xpath: this.getXpath(),\r\n            xpathContext: this.getContextXpath(),\r\n            idPageCache: this.properties.idPageCache,\r\n            content: content\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Returns the letter content from the server\r\n     */\r\n    getCanGenerateLetter: function () {\r\n        return this.dataService.getCanGenerateLetter({\r\n            idRender: this.properties.id,\r\n            xpath: this.getXpath(),\r\n            xpathContext: this.getContextXpath(),\r\n            idPageCache: this.properties.idPageCache\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Saves the form\r\n     */\r\n    saveForm: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        return form.saveForm();\r\n    },\r\n\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) == false) return true;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) == false) return true;\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (properties.required) {\r\n            if (self.letterOpened == false) {\r\n                message = self.getResource(\"render-letter-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                invalidElements.push({xpath: properties.xpath, message: message});\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns the current xpath\r\n     */\r\n    getXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Returns the current context xpath\r\n     */\r\n    getContextXpath: function () {\r\n        return this.properties.xpathContext;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Form Link Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for form link renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.formLink\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Set properties\r\n        var properties = this.properties;\r\n\r\n        properties.displayType = \"value\";\r\n        properties.maximized = bizagi.util.parseBoolean(this.properties.maximized) != null ? bizagi.util.parseBoolean(this.properties.maximized) : false;\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"formLink\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            align: properties.valueAlign,\r\n            displayName: properties.displayName,\r\n            value: properties.value,\r\n            editable: properties.editable,\r\n            likeButton: bizagi.util.parseBoolean(properties.likeButton) || false\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        // Executes the same template than normal render\r\n        return this.renderControl();\r\n\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Submits a edit request for a link display form\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    submitEditRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Don't send request when the link is not editable\r\n        if (!properties.editable && !properties.value)\r\n            return null;\r\n\r\n        return self.dataService.editLinkForm({\r\n            url: properties.editUrl,\r\n            idRender: properties.id,\r\n            xpath: self.getFormLinkXpath(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Submits a link save request for the displayed form\r\n     * @param data\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    submitSaveRequest: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Don't send request when the link is not editable\r\n        if (!properties.editable && !properties.value)\r\n            return null;\r\n\r\n        var xpath = self.getFormLinkXpath();\r\n        var xpathContext = xpath;\r\n\r\n        if (typeof (properties.xpathContext) !== \"undefined\" && properties.xpathContext !== \"\") {\r\n            xpathContext = xpath ? properties.xpathContext + \".\" + xpath : properties.xpathContext;\r\n        }\r\n\r\n        return self.dataService.saveLinkForm({\r\n            url: properties.saveUrl,\r\n            idRender: properties.id,\r\n            xpathContext: xpathContext,\r\n            submitData: data\r\n        }).done(function (response) {\r\n            var executeSubmitOnChange = true;\r\n\r\n            if (response && response.type === \"validationMessages\")\r\n                executeSubmitOnChange = false;\r\n\r\n            if (executeSubmitOnChange)\r\n                self.submitOnChange({});\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Submits a rollback request\r\n     * @param params\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitRollbackRequest: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function(){\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value){\r\n                return null;\r\n            }\r\n            else{\r\n                return self.dataService.rollbackLinkForm({\r\n                    url: properties.rollbackUrl,\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: params ? params.idPageCache : properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Submits a commit request\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitCommitRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function(){\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value){\r\n                return null;\r\n            } else {\r\n                return self.dataService.commitLinkForm({\r\n                    url: properties.commitUrl,\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Submits a checkpoint request\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitCheckpointRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function(){\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value){\r\n                return null;\r\n            } else {\r\n                return self.dataService.sendCheckpoint({\r\n                    url: properties.checkpointUrl,\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Submits a submitData request\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitDataRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function () {\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value) {\r\n                return null;\r\n            } else {\r\n\r\n\r\n                return self.dataService.submitData({\r\n                    url: properties.checkpointUrl,\r\n                    action: \"SUBMITDATA\",\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Automatically this render is valid, so we can't check a required link\r\n    },\r\n\r\n    /**\r\n     * Get Form Link xpath to use\r\n     * @returns {*}\r\n     */\r\n    getFormLinkXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Don't do anything\r\n    }\r\n\r\n});\r\n\r\n","/*\r\n*   Name: Bizagi Render Cascading Combo Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for cascading combo renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.cascadingCombo\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX\r\n}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Create dependency collection\r\n        self.dependants = [];\r\n        self.isDependant = false;\r\n    },\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.hasLocalData = bizagi.util.isEmpty(properties.parentCombo) ? properties.hasLocalData : false;\r\n\r\n        if (properties.value && properties.value.id === undefined)\r\n            properties.value = null;\r\n\r\n        self.value = properties.value;\r\n\r\n        // Add empty node if configured\r\n        if (properties.hasLocalData)\r\n            properties.data = self.complementData(properties.data);\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        // Check if this is a dependant combo\r\n        var parentCombo = self.parentCombo = self.getParentCombo();\r\n        if (parentCombo != null) {\r\n            var renderType = bizagi.util.normalizeType(parentCombo.properties.type);\r\n\r\n            if (/^cascadingcombo$/i.test(renderType)) {\r\n                self.isDependant = true;\r\n            }\r\n        }\r\n\r\n        // Apply element plugin, set a flag to avoid dependant combo ajax requests\r\n        self.initializingCascadingCombo = true;\r\n\r\n        // Call base\r\n        var result = this._super();\r\n\r\n        if (mode !== \"execution\") {\r\n            self.initializingCascadingCombo = false;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        self.initializingCascadingCombo = false;\r\n\r\n        // Bind with parent combo\r\n        if (self.isDependant) {\r\n            self.parentCombo.bindDependantCombo(self);\r\n        }\r\n    },\r\n\r\n    configureReadOnlyHandlers: function () {\r\n        var self = this;\r\n        self.initializingCascadingCombo = false;\r\n\r\n        // Bind with parent combo\r\n        if (self.isDependant) {\r\n            self.parentCombo.bindDependantCombo(self);\r\n        }\r\n    },\r\n    /*\r\n    *   Refresh the combo, after it has been painted\r\n    */\r\n    refresh: function (params, isInitialValue) {\r\n        var self = this;\r\n\r\n        // Wait until current element is rendered\r\n        $.when(self.isRendered()).done(function () {\r\n\r\n            // Unbind previous handler\r\n            // self.parentCombo.unbindDependantCombo(self);\r\n\r\n            // Clear current control\r\n            var control = self.getControl();\r\n            var mode = self.getMode();\r\n            control.empty();\r\n\r\n            // Render combo again\r\n            $.when(self.renderCombo(params)).then(function (html) {\r\n                // Append new element\r\n                control.html(html);\r\n\r\n                // Post-render method\r\n                self.postRender();\r\n\r\n                if (mode == \"execution\") {\r\n                    self.configureHandlers();\r\n                }\r\n\r\n                // Set current value\r\n                if (self.getValue() !== undefined) {\r\n                    self.setDisplayValue(self.getValue());\r\n                }\r\n\r\n                if (self.deferredVisible) {\r\n                    self.deferredVisible.resolve();\r\n                }\r\n\r\n                self.trigger(\"select\", [self.value, isInitialValue]);\r\n\r\n            });\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getData: function (params) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        // Just execute ajax calls when rendering in execution mode\r\n        if (mode != \"execution\") return self.getDummyData();\r\n\r\n        // Do not load dependant combos when there are no parent id\r\n        if (self.isDependant) {\r\n            if (self.parentCombo && params) {\r\n                self.properties.remoteDataLoaded = false;\r\n            }\r\n\r\n            // Return an empty array when there are no parent defined when the combo is dependant\r\n\r\n            var parentValue = (self.parentCombo.selectedValue) ? self.parentCombo.selectedValue.id : '';\r\n\r\n            if (parentValue != '') {\r\n                return this._super(params);\r\n            } else {\r\n                return [];\r\n            }\r\n        }\r\n\r\n        return this._super(params);\r\n    },\r\n\r\n\r\n    /* \r\n    *   Bind the combos to create the cascading feature\r\n    */\r\n    bindDependantCombo: function (dependantCombo) {\r\n        var self = this;\r\n        var renderType = bizagi.util.normalizeType(dependantCombo.properties.type);\r\n\r\n        // Check it is a cascading combo\r\n        if (/^cascadingcombo$/i.test(renderType)) {\r\n\r\n            // Append to dependant combos\r\n            self.dependants.push(dependantCombo);\r\n\r\n            // When this combo is selected we need to make the other combo to auto fill with an extra filter\r\n            dependantCombo.onChangeFunction = function (event, item, isInitialValue) {\r\n                // Fill items for next combo\r\n                self.refreshDependantCombo(dependantCombo, item.id, self.focusDependant, isInitialValue);\r\n\r\n                //if initial value is true, it prevents deleting the next combo\r\n                if (!isInitialValue) {\r\n                    // Clean next inputs\r\n                    dependantCombo.cleanInput();\r\n                }\r\n            };\r\n\r\n            if (!self.isEventBinded(\"select\")) {\r\n                self.bind(\"select\", dependantCombo.onChangeFunction);\r\n            }\r\n\r\n            // After the event binding has been made, we need to fill the new dependant render if this instance (the parent) has a value\r\n            if (!bizagi.util.isEmpty(self.getValue())) {\r\n\r\n                // Auto fill dependant items with current value\r\n                if (self.properties.hasLocalData) {\r\n                    self.refreshDependantCombo(dependantCombo, self.getValue().id);\r\n                }\r\n\r\n            }\r\n        }\r\n    },\r\n    isEventBinded: function (event) {\r\n        if (typeof $._data(this.observableElement.get(0), \"events\") === \"undefined\") {\r\n            return false;\r\n        } else {\r\n            if (typeof $._data(this.observableElement.get(0), \"events\")[event] === \"undefined\") {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /* \r\n    *   Unbind the combos that are being redrawn\r\n    */\r\n    unbindDependantCombo: function (dependantCombo) {\r\n        // When this combo is selected we need to make the other combo to auto fill with an extra filter\r\n        this.unbind(\"select\", dependantCombo.onChangeFunction);\r\n    },\r\n\r\n    /*\r\n    *   Fills the next dependant combo based on the given value\r\n    */\r\n    refreshDependantCombo: function (dependant, parentValue, focus, isInitialValue) {\r\n        var self = this;\r\n        var params = {};\r\n        params[self.Class.BA_ACTION_PARAMETER_PREFIX + \"parent\"] = parentValue;\r\n\r\n        dependant.deferredVisible = $.Deferred();\r\n\r\n        if (!isInitialValue) {\r\n            // Clear dependant value\r\n            dependant.setValue(\"\", false);\r\n        }\r\n\r\n        dependant.refresh(params, isInitialValue);\r\n\r\n        if (focus) {\r\n            $.when(dependant.deferredVisible.promise()).done(function () {\r\n                dependant.inputCombo.trigger(\"click\");\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Empty html when render from action\r\n     */\r\n\r\n    emptyControlByChangeEditability: function () {\r\n        var control = this.getControl();\r\n        control.empty();\r\n    },\r\n\r\n    /* \r\n    *   Cleans the combo value\r\n    */\r\n    cleanInput: function () {\r\n        this.triggerHandler(\"select\", {id: 0});\r\n    },\r\n\r\n    /*\r\n    *   Search for the other cascading combo refering this one, by idRender\r\n    */\r\n    getParentCombo: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Check if parentCombo is defined\r\n        if (properties.parentCombo === undefined)\r\n            return null;\r\n\r\n        // Get form reference\r\n        var form = self.getFormContainer();\r\n        var renderType = bizagi.util.normalizeType(self.properties.type);\r\n        var controls = /^cascadingcombo$/i.test(renderType) ? form.getRenderByType(properties.type) : [];\r\n\r\n        var i = 0;\r\n        var j = 0;\r\n        var parents = [];\r\n\r\n        var control = null;\r\n\r\n        for (; i < controls.length; i++) {\r\n            if (properties.parentCombo === controls[i].properties.id) {\r\n                parents.push({control: controls[i], index: i});\r\n            }\r\n        }\r\n\r\n        if (parents.length > 1) {\r\n            var parentLength, parent, xpathParent, parentArray;\r\n\r\n            for (; j < parents.length; j++) {\r\n                parent = parents[j].control;\r\n                xpathParent = parent.properties.xpath;\r\n                parentArray = xpathParent.split(\".\");\r\n                parentLength = parentArray.length;\r\n                xpathParent = parentArray.slice(0, parentLength - 1).join(\".\");\r\n\r\n                if (xpathParent === properties.xpath) {\r\n                    control = controls[parents[j].index];\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            control = form.getRenderById(properties.parentCombo);\r\n        }\r\n\r\n        // Return parent combo\r\n        return control;\r\n    },\r\n\r\n    /* \r\n    *  Method to determine if the render value can be sent to the server or not\r\n    */\r\n    canBeSent: function () {\r\n        var self = this;\r\n\r\n        // If the render has dependants we can't send to the server\r\n        return self._super() && bizagi.util.isMapEmpty(self.dependants);\r\n    },\r\n\r\n    /*\r\n    *   Determines if we need to show the current data regardless if it belongs to data or not\r\n    *   Can be overriden to change behaviour\r\n    */\r\n    showCurrentData: function () {\r\n        var mode = this.getMode();\r\n\r\n        if (mode != \"execution\") return true;\r\n        return false;\r\n    },\r\n\r\n    /*\r\n    *   Enables submit on change feature for the current render\r\n    */\r\n    configureSubmitOnChange: function () {\r\n        var self = this;\r\n\r\n        if (!self.configured) {\r\n            // Call super\r\n            self._super();\r\n            self.configured = true;\r\n        }\r\n    },\r\n\r\n    internalSubmitOnChange: function (data, bRefreshForm) {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        if (self.isDependant && self.canBeSent() && self.itemSelected !== undefined)\r\n            return self._super(data, bRefreshForm);\r\n        return defer.resolve();\r\n    },\r\n    /*\r\n    *   Sets the initial value for the renders\r\n    */\r\n    internalSetInitialValue: function () {\r\n        var self = this;\r\n        // Call original method\r\n        self._super();\r\n\r\n        if (self.value && self.isDependant == false) {\r\n            self.internalSetInitialValueFlag = true;\r\n            self.trigger(\"select\", [self.value, true]);\r\n        }\r\n\r\n        self.internalSetInitialValueFlag = false;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Render List Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for list renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.list\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data \r\n     * @returns {} \r\n     */\r\n    initializeData: function(data) {      \r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.listSize = properties.listSize || 0;\r\n    },\r\n\r\n    /**\r\n     * Gets the template used by the combo render can be overriden in subclasses\r\n     * to reuse logic and just change the template\r\n     * @returns {} \r\n     */\r\n    getTemplateName: function() {\r\n        return \"list\";\r\n    },\r\n\r\n    /**\r\n     * Determines if we need to show the current data regardless if it belongs\r\n     * to data or not Can be overriden to change behaviour    \r\n     * @returns {} \r\n     */\r\n    showCurrentData: function() {\r\n        return false;\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render MultiSelect Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for multiselect renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.multiSelect\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n        if (Array.isArray(this.value)) {\r\n            this.value = this.properties.value = JSON.encode({\"value\": this.value});\r\n            this.properties.originalValue = this.properties.previousValue = this.value;\r\n        }\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) !== null ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.maxRecords = Number(properties.maxRecords) || 20;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"list-multiselect\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            editable: properties.editable,\r\n            align: properties.valueAlign\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"list-multiselect\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            editable: properties.editable,\r\n            align: properties.valueAlign\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Fetch the data into a deferred\r\n     * @returns {*[]}\r\n     */\r\n    getData: function () {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n        var properties = this.properties;\r\n\r\n        // Go to server\r\n        self.dataService.multiaction().getData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contexttype || null,\r\n            idPageCache: properties.idPageCache\r\n        }).done(function (data) {\r\n            properties.data = self.normalizeData(data);\r\n\r\n            defer.resolve(properties.data);\r\n\r\n        }).fail(function (data) {\r\n            if (data.type === \"not-processed\")\r\n                return;\r\n\r\n            // Show error from server\r\n            var auxMsg = \"\";\r\n            var form = self.getFormContainer();\r\n            var msgObj = self.properties.displayName + \": \";\r\n\r\n            if (typeof data == \"string\") {\r\n                auxMsg = JSON && JSON.parse(data) || $.parseJSON(data);\r\n            } else {\r\n                auxMsg = data;\r\n            }\r\n\r\n            msgObj += auxMsg.message;\r\n\r\n            form.addValidationMessage(msgObj);\r\n\r\n            defer.reject(data);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        triggerEvents = triggerEvents !== undefined ? triggerEvents : true;\r\n\r\n        if(Array.isArray(value)){\t\t\r\n\t\t\tvalue = JSON.encode({\"value\": value});\r\n\t\t} else {\r\n\t\t\tvalue = value;\r\n\t\t}\r\n\r\n        this._super(value, triggerEvents);\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns the internal value\r\n     * @returns {*|Array}\r\n     */\r\n    getValue: function () {\r\n        return this.value || [];\r\n    },\r\n\r\n    /**\r\n     * Get list of data\r\n     * @returns {*|Array}\r\n     */\r\n    getDataValue: function () {\r\n        var list;\r\n\r\n        try {\r\n            list = JSON.parse(this.value);\r\n\r\n            return list.value || [];\r\n        } catch (e) {\r\n            return [];\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if a render has no value for required validation\r\n     * @returns {*|Array|boolean}\r\n     */\r\n    hasValue: function () {\r\n        var values = this.getDataValue();\r\n\r\n        return values && values.length > 0;\r\n    },\r\n\r\n    getElementsToStylize: function (context) {\r\n        return $(\".bz-multiselect .bz-multiselect__tag:not(.bz-multiselect__plus)\", context);\r\n    },\r\n\r\n    /**\r\n     * Add elements to global value\r\n     * @param value\r\n     */\r\n    addElement: function (value) {\r\n        var newValue = this.getDataValue();\r\n\r\n        newValue.push(value);\r\n\r\n        this.setValue(newValue);\r\n    },\r\n\r\n    /**\r\n     * Remove elements to global value\r\n     * @param value\r\n     */\r\n    removeElement: function (value) {\r\n        var idToRemove = value.id;\r\n        var newValue = this.getDataValue()\r\n            .filter(function (item) {\r\n                return item.id !== idToRemove;\r\n            });\r\n\r\n        this.setValue(newValue);\r\n    },\r\n\r\n    /**\r\n     * Submit the selected data to the server in order to be saved\r\n     */\r\n    submitData: function () {\r\n        var data = {};\r\n\r\n        // Add current data\r\n        data[this.properties.xpath] = this.getValue();\r\n\r\n        // Executes submit on change\r\n        this.submitOnChange(data);\r\n    },\r\n\r\n    /**\r\n     * Mark a item how checked\r\n     * @param id\r\n     * @returns {*}\r\n     */\r\n    markAsChecked: function (id) {\r\n        var self = this;\r\n\r\n        return self.selected.some(function (item, index) {\r\n            var found = item.id === id;\r\n\r\n            if (found) self.selected.splice(index, 1);\r\n            return found;\r\n        });\r\n    },\r\n\r\n    isChecked: function (values, id) {\r\n        return values.some(function (item) {\r\n            return item.id == id;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to verify if can add more items\r\n     * @param $tagsContainer\r\n     * @returns {boolean}\r\n     */\r\n    canAddMoreItems: function ($tagsContainer) {\r\n        var self = this;\r\n        var containerWidth = parseInt($tagsContainer.css(\"width\"));\r\n        var $children = $tagsContainer.children();\r\n\r\n        var childrenWidth = $children\r\n            .toArray()\r\n            .reduce(function (acc, child) {\r\n                acc += self.getElementWidth(child);\r\n                return acc;\r\n            }, 0);\r\n\r\n        return containerWidth > (childrenWidth + self.Class.MORE_OPTION_WIDTH)\r\n\r\n    },\r\n\r\n    /**\r\n     * getElementWidth\r\n     * @param element\r\n     * @returns {*}\r\n     */\r\n    getElementWidth: function (element) {\r\n        var styles = window.getComputedStyle(element);\r\n        var outerWidth = $(element).outerWidth();\r\n        return outerWidth + [\r\n            \"padding-left\",\r\n            \"padding-right\",\r\n            \"margin-left\",\r\n            \"margin-right\"\r\n        ].reduce(function (acc, property) {\r\n            acc += parseInt(styles[property]);\r\n            return acc;\r\n        }, 0);\r\n    },\r\n\r\n    /**\r\n     * Filtering list of elements\r\n     * @param query\r\n     * @param $container\r\n     */\r\n    filterList: function (query, $container) {\r\n\r\n        $container.filter(function () {\r\n            var stringContainer = $(this).text().toUpperCase();\r\n            var stringToSearch = query.toUpperCase();\r\n\r\n            if (stringContainer.indexOf(stringToSearch) >= 0) {\r\n                return $(this);\r\n            } else {\r\n                $(this).hide();\r\n            }\r\n        }).show();\r\n\r\n    },\r\n\r\n    /**\r\n     * addSelectedElements\r\n     */\r\n    addSelectedElements: function () {\r\n    },\r\n\r\n    /**\r\n     * Find item by id\r\n     * @param id\r\n     * @returns {[]}\r\n     */\r\n    findItemById: function (id) {\r\n        return (this.properties.data || []).find(function (item) {\r\n            return item.id == id;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n        return bizagi.util.formatItem(value);\r\n    },\r\n\r\n    /**\r\n     * Complement data from server before control implementation\r\n     * @param data\r\n     */\r\n    normalizeData: function (data) {\r\n        (data || []).forEach(function (item) {\r\n            item.value = typeof (item.value) !== \"undefined\" && item.value !== null ? item.value : \"\";\r\n        });\r\n\r\n        return data;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Render Search List Control\r\n*   Author: UI Forms Team\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.searchList\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data \r\n     * @returns {} \r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.maxRecords = Number(properties.maxRecords) || 20;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) !== null ? bizagi.util.parseBoolean(properties.editable) : true;\r\n\r\n        // Set value\r\n        self.setValue(properties.value);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {} \r\n     */\r\n    renderControl: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"searchList\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            value: properties.value,\r\n            allowTyping: properties.allowTyping,\r\n            items: properties.value,\r\n            hasSearchForm: properties.searchForms ? true : false,\r\n            editable: properties.editable\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {} \r\n     */\r\n    renderReadOnly: function() {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param {} value \r\n     * @returns {} \r\n     */\r\n    setValue: function(value) {\r\n        this.value = JSON.encode({ \"value\": value });\r\n        this.triggerRenderChange();\r\n    },\r\n\r\n    /**\r\n     * Add elements to global value\r\n     * @param value = { id:integer,value:[string || array] }\r\n     * @returns {} \r\n     */\r\n    addElement: function(value) {\r\n        var list = JSON.parse(this.value);\r\n\r\n        list.value.push(value);\r\n\r\n        this.setValue(list.value);\r\n    },\r\n\r\n    /**\r\n     * Remove elements to global value\r\n     * @param value = { id:integer }\r\n     * @returns {} \r\n     */\r\n    removeElement: function(value) {\r\n        var list = JSON.parse(this.value);\r\n        var result = [];\r\n\r\n        $.each(list.value, function(key, val) {\r\n            if (val.id != value.id) {\r\n                result.push({ id: val.id, value: val.value });\r\n            }\r\n        });\r\n\r\n        this.setValue(result);\r\n    },\r\n\r\n    /**\r\n     * Remove last element to global value\r\n     * @returns {} \r\n     */\r\n    removeLastElement: function() {\r\n        var list = JSON.parse(this.value);\r\n\r\n        if (list.value.length > 0) {\r\n            list.value.pop();\r\n            this.setValue(list.value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fetch the data into a deferred\r\n     * @param {} params \r\n     * @returns {} \r\n     */\r\n    getData: function(params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        // Resolve with remote data\r\n        self.dataService.getSearchData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            term: properties.term,\r\n            extra: params\r\n        }).done(function(data) {\r\n            // Resolve with fetched data\r\n            properties.data = data;\r\n            defer.resolve(properties.data);\r\n        }).fail(function(data) {\r\n            var hideStatus = data.hideStatus || false;\r\n\r\n            defer.resolve({});\r\n\r\n            if (!hideStatus) {\r\n                self.trigger(\"onSearchError\", data);\r\n            }\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Submits the selected data to the server in order to be saved\r\n     * @returns {} \r\n     */\r\n    submitData: function() {\r\n        var data = {};\r\n\r\n        // Add current data\r\n        data[this.properties.xpath] = this.getValue();\r\n\r\n        // Executes submit on change\r\n        this.submitOnChange(data);\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {} \r\n     */\r\n    canBeSent: function() {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Check if the control has value\r\n     * @returns {} \r\n     */\r\n    hasValue: function() {\r\n        var list = this.getListItems();\r\n\r\n        return list.length > 0;\r\n    },\r\n\r\n    getListItems: function(){\r\n        var value = this.getValue();\r\n        var finalValue = typeof (value) === \"string\" ? JSON.parse(value).value : value.value;\r\n\r\n        return finalValue || [];\r\n    },\r\n    \r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n        return bizagi.util.formatItem(value);\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Money Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for money numbers\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.money\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        // Configures symbol\r\n        properties.showsymbol = typeof (properties.showsymbol) !== \"undefined\" ? properties.showsymbol : true;\r\n\r\n        if (properties.showsymbol) {\r\n            var symbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.symbol : format.symbol;\r\n            properties.symbol = properties.currencySymbol ? properties.currencySymbol : symbol;\r\n        } else {\r\n            properties.symbol = \"\";\r\n        }\r\n\r\n        properties.groupDigits = true;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Radio Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for radio renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.radio\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.horizontal = bizagi.util.parseBoolean(properties.horizontal) || false;\r\n\r\n        // Set a random identifier to fix a problem when using radio buttons inside grids and the plugin mismatch the elements because all of them have the same name\r\n        properties.unique = bizagi.util.randomNumber(1000, 1000000);\r\n    },\r\n\r\n    /**\r\n     * Gets the template used by the combo render\r\n     * Can be overridden in subclasses to reuse logic and just change the template\r\n     * @returns {string}\r\n     */\r\n    getTemplateName: function () {\r\n        return \"radio\";\r\n    },\r\n\r\n    /**\r\n     * Determines if we need to show the empty node or not\r\n     * Can be overridden to change behaviour\r\n     * @returns {boolean}\r\n     */\r\n    showEmpty: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Determines if we need to show the current data regardless if it belongs to data or not\r\n     * Can be overridden to change behaviour\r\n     * @returns {boolean}\r\n     */\r\n    showCurrentData: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Adds custom parameters to process the template\r\n     * @returns {{vertical: boolean}}\r\n     */\r\n    getTemplateParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return {\r\n            vertical: !properties.horizontal,\r\n            horizontal: properties.horizontal\r\n        };\r\n    },\r\n\r\n    /**\r\n     * Cleans current data\r\n     */\r\n    cleanData: function () {\r\n        var self = this;\r\n        var value = {id: \"\", label: \"\"};\r\n        var selectedItem = self.element.find(\".ui-radio-state-checked\");\r\n\r\n        selectedItem.removeClass(\"ui-radio-state-checked\");\r\n        self.setDisplayValue(value);\r\n        self.setValue(value, false);\r\n        self.clearDisplayValue();\r\n    },\r\n\r\n    /**\r\n     * Check value of control is changed\r\n     * @returns {boolean}\r\n     */\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var value = self.getValue();\r\n        var compareValue = properties.originalValue;\r\n        var baseValue = properties.defaultValue;\r\n\r\n        var result = true;\r\n\r\n        if (value && value.length !== undefined) {\r\n            value = value[0];\r\n        }\r\n        if (compareValue && compareValue.length !== undefined) {\r\n            compareValue = compareValue[0];\r\n        }\r\n        if (baseValue && baseValue.length !== undefined) {\r\n            baseValue = baseValue[0];\r\n        }\r\n\r\n        value = value && value.id !== undefined ? value.id : value;\r\n        compareValue = compareValue && compareValue.id !== undefined ? compareValue.id : compareValue;\r\n        baseValue = baseValue && baseValue.id !== undefined ? baseValue.id : baseValue;\r\n\r\n        if (baseValue !== undefined) {\r\n            if ((baseValue == value) && (value == compareValue)) {\r\n                result = false;\r\n            } else {\r\n                if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                    result = false;\r\n                } else {\r\n                    result = (compareValue == value) ? false : true;\r\n                }\r\n            }\r\n        } else {\r\n            if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue == value) ? false : true;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    },\r\n    /**\r\n     * Clean html because some scenarios render twice\r\n     */\r\n    emptyControlByAsyncRenderDeferred: function () {\r\n        var control = this.getControl();\r\n        control.empty();\r\n    }\r\n});\r\n\r\n","/**\r\n*   Name: Bizagi Render Image Class\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define basic stuff for image control\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.image\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\r\n    BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE\r\n}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var maxSize = 4091904;\r\n\r\n        if(properties.maxSize) {\r\n            maxSize = Number(properties.maxSize);\r\n        } else if (typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\") {\r\n            maxSize = Number(BIZAGI_SETTINGS.UploadMaxFileSize);\r\n        }\r\n\r\n        properties.maxSize = maxSize;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) === true;\r\n        properties.validExtensions = properties.validExtensions || \"\";\r\n\r\n        if (properties.validExtensions.length > 0 && properties.validExtensions.indexOf(\".\") < 0) {\r\n            var singleExtensions = properties.validExtensions.replace(/\\ /gi, '').split(\";\");\r\n\r\n            for (var i = 0; i < singleExtensions.length; i++) {\r\n                if (singleExtensions[i].length != 0) {\r\n                    singleExtensions[i] = \"*.\" + singleExtensions[i].replaceAll(\" \", \"\");\r\n                } else {\r\n                    //Removes the empty element\r\n                    var index = singleExtensions.indexOf(singleExtensions[i]);\r\n                    singleExtensions.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            properties.validExtensions = singleExtensions.join(\";\");\r\n        }\r\n\r\n        properties.addUrl = properties.addUrl || self.dataService.getUploadAddFileUrl(properties.isUserPreference);\r\n        properties.allowDelete = bizagi.util.parseBoolean(properties.allowDelete) !== null;\r\n\r\n        properties.isAutoWidth = false;\r\n        properties.isAutoHeight = false;\r\n\r\n        if (properties.width === -1) {\r\n            properties.width = \"100%\";\r\n            properties.isAutoWidth = true;\r\n        } else {\r\n            properties.width = properties.width + \"px\";\r\n        }\r\n\r\n        if (properties.height === -1) {\r\n            properties.height = \"auto\";\r\n            properties.isAutoHeight = true;\r\n        } else {\r\n            properties.height = properties.height + \"px\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var def = new $.Deferred(); //design\r\n        var template = self.renderFactory.getTemplate(\"image\");        \r\n\r\n        $.when(self.buildItemUrl()).done(function (dataUrl) {\r\n            if (!self.isDisposed()) {\r\n                self.properties.url = dataUrl !== \"\" ? dataUrl : \"\";\r\n                self.properties.value = self.value = self.properties.url.length > 0 ? [self.properties.url] : null;\r\n                self.setValue(self.properties.value);                \r\n\r\n                var html = $.fasttmpl(template, { url: self.properties.url });\r\n                def.resolve(html);\r\n            }\r\n        }).fail(function (error) {\r\n           def.reject(error)\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"image-readonly\");\r\n        var html = $.fasttmpl(template);\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * This method return the name of template of items, please make a override in each device\r\n     * @returns {*}\r\n     */\r\n    getTemplateItem: function () {\r\n        return this.renderFactory.getTemplate(\"image-item\");\r\n    },\r\n\r\n    /**\r\n     * Renders a single upload item\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    renderUploadItem: function (file) {\r\n        var self = this;\r\n        var mode = self.getMode();        \r\n        var def = new $.Deferred();\r\n        var template = self.getTemplateItem();\r\n\r\n        $.when(self.buildItemUrl()).done(function (dataUrl) {\r\n            var url = dataUrl || \"\";\r\n\r\n            var html = $.fasttmpl(template, {\r\n                url: url,\r\n                allowDelete: self.properties.allowDelete,\r\n                editable: self.properties.editable,\r\n                mode: mode,                \r\n            });\r\n\r\n            self.properties.url = url;\r\n            self.properties.value = url.length > 0 ? [url] : null;\r\n\r\n            def.resolve(html);\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param params\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var def = new $.Deferred();\r\n        var url = \"\";\r\n\r\n        if (!this.isExecutionMode()) {\r\n            url = \"\"; // TODO: Review the use of \"javascript:void(0);\";\r\n            def.resolve(url);\r\n        } else {\r\n            var parameters = {\r\n                url: properties.dataUrl,\r\n                xpath: properties.xpath,\r\n                idRender: properties.id,\r\n                xpathContext: properties.xpathContext,\r\n                idPageCache: properties.idPageCache,\r\n                property: params && params.property ? params.property : \"fileContent\",\r\n                dataType: \"text\"\r\n            };\r\n\r\n            if (properties.contexttype) {\r\n                parameters.contexttype = properties.contexttype;\r\n            }\r\n\r\n            if (properties.isUserPreference) {\r\n                self.currentUser = bizagi.currentUser.idUser;\r\n                parameters.xpathContext = \"@Context.Users[id == \" + self.currentUser + \"]\";\r\n                parameters.contexttype = \"entity\";\r\n                parameters.surrogatekey = self.currentUser;\r\n            }\r\n\r\n            self.dataService.multiaction().getPropertyData(parameters, \"text\")\r\n                .done(function (data) {\r\n                    if (data.charAt(0) === \"\\\"\") {\r\n                        data = data.slice(1, -1);\r\n                    }\r\n\r\n                    if (data !== \"\") {\r\n                        url = \"data:image/png;base64,\" + data;\r\n                    }\r\n\r\n                    def.resolve(url);\r\n                }).fail(function (error) {\r\n                def.reject(error);\r\n            });\r\n        }\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    buildItemUrlOffline: function(parameters){\r\n        var def = new $.Deferred();\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var formParams = self.getFormParams();\r\n        var loadImageFromForm = true;\r\n        var imageId = properties.xpath;\r\n        if( properties.offlineImageId ){\r\n            imageId = properties.offlineImageId;\r\n            loadImageFromForm = false;\r\n        }\r\n        var parameters = {\r\n            idCase: formParams.idCase,\r\n            idWorkitem: formParams.idWorkitem,\r\n            id: imageId,\r\n            offlineType: formParams.offlineType,\r\n            loadImageFromForm: loadImageFromForm\r\n        }\r\n        $.when(self.dataService.getOfflineImage(parameters, \"base64\"))\r\n        .done( function(imageValue){\r\n            properties.value = imageValue;\r\n            def.resolve(bizagi.util.getDataUrl(properties));\r\n        });\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Create an image offline\r\n     * @param path File in Browser or Path in Mobile Devices\r\n     * @param promise Promise to be resolved when save is completed\r\n     */\r\n    saveImageOffline: function (path) {\r\n        var self = this; \r\n        var def = new $.Deferred();       \r\n        var blobPromise = new $.Deferred();\r\n        var offlineImageId = self.properties.xpath + '-' + bizagi.util.randomNumber();\r\n\r\n        if(self.isNative){\r\n            var fileName = self.fileProperties.name;            \r\n            if (!bizagi.util.isAndroidDevice()) {\r\n                path = bizagi.util.media.normalizeIOSFilePath(path);\r\n            }\r\n            else{\r\n                // Fix android 4.4 getting images from recent folder\r\n                path = bizagi.util.media.getImagePath(path);\r\n            }\r\n            \r\n            var errorHandler = function (error) {\r\n                bizagi.log('error converting path to blob', error);  \r\n                blobPromise.reject(error);\r\n            };\r\n    \r\n            window.resolveLocalFileSystemURL(path, function (fileEntry) {\r\n                fileEntry.file(function (file) {    \r\n                    var reader = new FileReader();\r\n                    reader.onloadend = function () {\r\n                        var blob = new Blob([this.result], {type: file.type});\r\n                        blob.name = fileName;\r\n                        blobPromise.resolve(blob);\r\n                    }    \r\n                    reader.readAsArrayBuffer(file);\r\n                }, errorHandler);\r\n            }, errorHandler);\r\n        }\r\n        else {\r\n            blobPromise.resolve(path);\r\n        }        \r\n\r\n        $.when(blobPromise)\r\n        .done( function(blobImage) {\r\n            // Save the image as attachment \r\n            var formParams = self.getFormParams();\r\n            var parameters = {\r\n                idCase: formParams.idCase,\r\n                idWorkitem: formParams.idWorkitem,\r\n                id: offlineImageId,\r\n                operationType: \"edition\",\r\n                offlineType: formParams.offlineType\r\n            }\r\n\r\n            $.when(self.dataService.saveOfflineImage(parameters, blobImage))\r\n            .done( function() {\r\n                self.properties.offlineImageId = offlineImageId;\r\n                def.resolve();\r\n            })\r\n            .fail( function(err){\r\n                def.reject(err);\r\n            });\r\n        })\r\n        .fail( function(blobError){\r\n            def.reject(blobError);\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url in real size\r\n     * @returns {*}\r\n     */\r\n    buildFullItemUrl: function () {\r\n        var def = new $.Deferred();\r\n\r\n        $.when(this.buildItemUrl({\"property\": \"fileFullContent\"}))\r\n            .done(function (dataUrl) {\r\n                def.resolve(dataUrl);\r\n            }).fail(function (error) {\r\n            def.reject(error);\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        // Call base\r\n        this._super(value, triggerEvents);\r\n    },\r\n\r\n    /**\r\n     * Returns the internal value\r\n     * @returns {*|Array}\r\n     */\r\n    getValue: function () {\r\n        return this.properties.value || [];\r\n    },\r\n\r\n    /**\r\n     * Check if control is valid or not\r\n     * @param invalidElements\r\n     * @returns {boolean}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(self.properties.visible) === false) {\r\n            return true;\r\n        }\r\n\r\n        // Don't check non- editable renders\r\n        if (bizagi.util.parseBoolean(self.properties.editable) === false) {\r\n            return true;\r\n        }\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (self.properties.required) {\r\n            var newRow = self.grid && self.grid.isFromCreatedRow.apply(self);\r\n\r\n            if (!newRow) {\r\n                var value = self.getValue();\r\n\r\n                if (value.length === 0) {\r\n                    var message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", self.properties.displayName);\r\n                    invalidElements.push({ xpath: self.properties.xpath, message: message });\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Build add params to send to the server\r\n     */\r\n    buildAddParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var data = {};\r\n\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = self.getUploadXpath();\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = properties.id;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = properties.xpathContext;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\r\n        data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = form.properties.sessionId;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = 'savefile';\r\n\r\n        if (properties.contexttype) {\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = properties.contexttype;\r\n        }\r\n\r\n        try {\r\n            if (typeof (BIZAGI_SESSION_NAME) !== \"undefined\") {\r\n                data[BIZAGI_SESSION_NAME] = form.properties.sessionId;\r\n            } else {\r\n                data[\"JSESSIONID\"] = form.properties.sessionId;\r\n            }\r\n        } catch (e) {\r\n            data[\"JSESSIONID\"] = form.properties.sessionId;\r\n        }\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getUploadXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Clean html because some scenarios render twice\r\n     */\r\n    emptyControlByAsyncRenderDeferred: function () {\r\n        var $control = this.getControl();\r\n        $control.empty();\r\n    }\r\n});","/*\r\n*   Name: BizAgi User field render\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define the basic behavior for userfields\r\n*/\r\n$.Class.extend(\"bizagi.rendering.userfieldDefinition\", {}, {\r\n\r\n    /*************************************************************/\r\n    /* Private section of the userfield                          */\r\n    /*************************************************************/\r\n\r\n    /*\r\n    *   Method to be overriden by userfields in order to ensure that custom files are loaded before the execution\r\n    */\r\n    getFileDependencies: function () {\r\n        return null;\r\n    },\r\n\r\n    postRender: function () {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super();\r\n\r\n        var defer = $.Deferred();\r\n        var fileDependencies = self.getFileDependencies();\r\n        if (fileDependencies && fileDependencies.length > 0) {\r\n            bizagi.loader.loadFile(fileDependencies)\r\n\t\t\t.then(function () {\r\n\t\t\t    // After all dependencies has been resolved\r\n\t\t\t    self.internalRenderControl();\r\n\t\t\t    defer.resolve();\r\n\t\t\t});\r\n\r\n        } else {\r\n            $.when( self.renderUserfieldControl()).done(function () {\r\n                defer.resolve();\r\n            });\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    renderUserfieldControl: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n        var def = new $.Deferred();\r\n\r\n        if (properties.extendedData && properties.extendedData.length > 0) {\r\n            self.extendedData = bizagi.services.ajax.parseJSON(properties.extendedData);\r\n        } else {\r\n            self.extendedData = {};\r\n        }\r\n\r\n\r\n        var loadUserfield = function () {\r\n            var userEditableControl = self.getEditableControl();\r\n            if (userEditableControl) {\r\n                self.input = control.html(userEditableControl);\r\n            }\r\n            self.renderComplex();\r\n            def.resolve();\r\n        };\r\n\r\n        \r\n            loadUserfield();\r\n    \r\n        \r\n        return def.promise();\r\n    },\r\n\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n\r\n        if (properties.extendedData && properties.extendedData.length > 0) {\r\n            self.extendedData = bizagi.services.ajax.parseJSON(properties.extendedData);\r\n        } else {\r\n            self.extendedData = {};\r\n        }\r\n\r\n        var loadUserfieldReadOnly = function () {\r\n            try {\r\n                var userReadOnlyControl = self.getReadonlyControl();\r\n                if (userReadOnlyControl) {\r\n                    self.input = control.html(userReadOnlyControl);\r\n                }                                                 \r\n                self.renderComplex();\r\n                \r\n            } catch (error) {\r\n                var displayName = self.properties.displayName || \"Widget\";\r\n                control.html(\"<h6>\" + displayName  + \"</h6>\")\r\n            }\r\n            \r\n        };\r\n\r\n        if (self.ready) {\r\n            self.ready().done(function () {\r\n                loadUserfieldReadOnly();\r\n            });\r\n        } else {\r\n            loadUserfieldReadOnly();\r\n        }\r\n    },\r\n\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n        return self.getReadonlyValue();\r\n    },\r\n\r\n    /*\r\n    *   Sets the value in the rendered control \r\n    */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self.setValue(value);\r\n\r\n        // Set editable value in control\r\n        self.setEditableValue(value);\r\n    },\r\n\r\n    getValue: function () {\r\n        var self = this;\r\n        return self.getEditableValue();\r\n    },\r\n\r\n    getPropertyValue: function (propertyName, params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        self.dataService.multiaction().getPropertyData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            property: propertyName,\r\n            extra: params,\r\n            dataType: params ? params.dataType : null\r\n        }).done(function (data) {\r\n            if (data.type == \"error\") {\r\n                // Workflow engine error, we gotta show it with error\r\n                self.getFormContainer().addErrorMessage(data.message);\r\n                defer.reject(data);\r\n            } else {\r\n                defer.resolve(data);\r\n            }\r\n        }).fail(function (jqXHR, textStatus, errorThrown) {\r\n            defer.reject(jqXHR, textStatus, errorThrown);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Saves the form\r\n    */\r\n    saveForm: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        return form.saveForm();\r\n    },\r\n\r\n    /**\r\n    * Returns all the elements that match the given xpath\r\n    */\r\n    getRenderElements: function (xpath) {\r\n        var self = this;\r\n        var result = $();\r\n        var controls = self.getFormContainer().getRenders(xpath);\r\n        $.each(controls, function (i, item) {\r\n            result = result.add($(item.element));\r\n        });\r\n\r\n        return result;\r\n    },\r\n\r\n    getServerResourceURL: function (resource) {\r\n        var self = this;\r\n        var url = \"Rest/Userfields/{0}/resource/{1}/{2}\";\r\n        url = url.replace(\"{0}\", self.properties.userfieldGuid);\r\n        resource = resource.replace(\"\\\\\", \"__\").replace(\"/\", \"__\");\r\n        var device = bizagi.util.detectDevice();\r\n        url = url.replace(\"{1}\", device);\r\n        url = url.replace(\"{2}\", resource);\r\n        //Rest/Userfields/{0}/resource/desktop/{1}\r\n        return url;\r\n    },\r\n\r\n    /**\r\n    * Returns all the elements that match the given xpath\r\n    */\r\n    getRenderValue: function (xpath) {\r\n        var self = this;\r\n        var controls = self.getFormContainer().getRenders(xpath);\r\n        var control;\r\n        $.each(controls, function (index, item) {\r\n            if (!control || item.properties.editable) {\r\n                control = item;\r\n            }\r\n        });\r\n        if (control) {\r\n            return control.getValue();\r\n        } else {\r\n            return null;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Refresh the current form\r\n    */\r\n    refreshForm: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var form = self.getFormContainer();\r\n        form.refreshForm(properties.id);\r\n    },\r\n\r\n    /*\r\n    * Shows a jquery dialog\r\n    */\r\n    showDialog: function (url, params) {\r\n        bizagi.util.mustImplement(\"Must implement the showDialog method\");\r\n    },\r\n\r\n    /*\r\n    *   Shows a browser popup\r\n    */\r\n    showPopup: function (url, params) {\r\n        bizagi.util.mustImplement(\"Must implement the showPopup method\");\r\n    },\r\n\r\n    updateOriginalValue: function () {\r\n        var self = this;\r\n        self.properties.originalValue = self.value = self.properties.value;\r\n    }\r\n\r\n\r\n});\r\n\r\n\r\n$.Class.extend(\"bizagi.rendering.basicUserField\", {}, {\r\n\r\n    /*************************************************************/\r\n    /* methods to be overriden by the implementations            */\r\n    /*************************************************************/\r\n    getEditableControl: function () {\r\n    },\r\n\r\n    renderComplex: function () {\r\n    },\r\n\r\n    // Returns the value of the control\r\n    getEditableValue: function () {\r\n        return bizagi.rendering.render.prototype.getValue.apply(this, arguments);\r\n    },\r\n\r\n    // \r\n    setEditableValue: function (value) {\r\n        return bizagi.rendering.render.prototype.setValue.apply(this, arguments);\r\n    },\r\n\r\n    getReadonlyControl: function () {\r\n    },\r\n\r\n    getReadonlyValue: function () {\r\n        // if the method is not overriden then call the parent method \r\n        return bizagi.rendering.render.prototype.getDisplayValue.apply(this, arguments);\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super();\r\n    }\r\n\r\n});\r\n\r\n/*\r\n*   This control will wrap any userfield in order to load the code remotely, \r\n*   when executing renderControl, which is an async method\r\n*/\r\n$.Class.extend(\"bizagi.rendering.userfieldWrapper\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n        // Save userfield guid and name\r\n        self.initialParams = params;\r\n        self.userfieldGuid = this.properties.userfieldGuid;\r\n        self.userfieldName = this.properties.control;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    */\r\n    internalPostRender: function () {\r\n        var self = this;\r\n        $.when(self.getUserfieldControl())\r\n        .done(function (control) {\r\n            control.element = self.element;\r\n\r\n            // Add grid and surrogatekey properties if the userfield is a column userfield\r\n            if (self.column) {\r\n                control.isColumn = true;\r\n                control.grid = self.grid;\r\n                control.surrogateKey = self.surrogateKey;\r\n                control.properties.xpathContext = self.getControlXpathContext(control);\r\n                control.getControl = self.column.getControl;\r\n            }\r\n\r\n            return control.internalPostRender();\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Helper for userfields to fetch the xpathContext\r\n    */\r\n    getControlXpathContext: function (control) {\r\n        var self = this;\r\n        var properties = control.properties;\r\n\r\n        if (control.isColumn) {\r\n            return properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + control.grid.properties.xpath + \"[id=\" + control.surrogateKey + \"]\" : control.grid.properties.xpath + \"[id=\" + control.surrogateKey + \"]\";\r\n        }\r\n\r\n        return properties.xpathContext;\r\n    },\r\n\r\n\r\n    getUserFieldInstance: function(params){\r\n        console.log(\"not implemented\");\r\n    },\r\n\r\n    /*\r\n    *   Replicate all userfield methods to this instance in order to create a proxy\r\n    */\r\n    replicateUserfieldMethods: function (control) {\r\n        var self = this;\r\n        for (var key in control.Class.prototype) {\r\n            // Omit the folowing methods\r\n            if (key == \"init\" || key == \"constructor\" || key == \"Class\" || key == \"subscribe\" || key == \"unsubscribe\" ||\r\n                key == \"publish\" || key == \"render\" || key == \"triggerHandler\" || key == \"dispose\") continue;\r\n\r\n            // Replicate instance methods\r\n            self[key] = eval('var tmp = function(){ if (this.userfieldInstance) return this.userfieldInstance.' + key + '.apply(this.userfieldInstance, arguments); return null;};tmp');\r\n        }\r\n\r\n        // Replicate properties and value\r\n        control.properties = self.properties;\r\n        control.value = self.value;\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self.userfieldInstance) {\r\n                self.userfieldInstance.unbind(\"renderchange\");\r\n                self.userfieldInstance.dispose();\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    }\r\n});\r\n\r\n","/**\r\n *   Name: Bizagi Render Document Generator\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for document generator render\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.document\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        var properties = this.properties;\r\n\r\n        properties.validate = bizagi.util.parseBoolean(properties.validate) != null ? bizagi.util.parseBoolean(properties.validate) : false;\r\n        properties.downloadalldocuments = properties.downloadalldocuments ? properties.downloadalldocuments : false;\r\n        properties.allowGenerate = properties.allowGenerate !== undefined ? properties.allowGenerate : true;\r\n        properties.append = properties.append ? properties.append : false;\r\n\r\n        if (properties.caption) {\r\n            properties.caption = bizagi.util.trim(properties.caption);\r\n\r\n            if (properties.caption.length === 0) {\r\n                properties.caption = this.getResource(\"render-documentgenerator-button-label\");\r\n            }\r\n        } else {\r\n            properties.caption = this.getResource(\"render-documentgenerator-button-label\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n\r\n        self.preRenderControl();\r\n\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n        var downloadAllDocuments = properties.downloadalldocuments;\r\n        var allowGenerate = properties.allowGenerate;\r\n        var template = self.renderFactory.getTemplate(self.getTemplate());\r\n        var documents = properties.value || [];\r\n        var noFiles = documents ? (documents.length === 0) : true;\r\n\r\n        // Render template\r\n        var html = self.getControlHtml(template, mode, downloadAllDocuments, allowGenerate, properties, noFiles);\r\n\r\n        // Render current children\r\n        var items = this.renderDocumentsHtml(documents);\r\n        items += this.renderActionsHtml(documents, noFiles, downloadAllDocuments);\r\n\r\n        html = self.replaceFilesHtml(html, items);\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @param template\r\n     * @param mode\r\n     * @param downloadAllDocuments\r\n     * @param allowGenerate\r\n     * @param properties\r\n     * @param noFiles\r\n     * @returns {*|jQuery}\r\n     */\r\n    getControlHtml: function (template, mode, downloadAllDocuments, allowGenerate, properties, noFiles) {\r\n        var self = this;\r\n\r\n        return $.fasttmpl(template, {\r\n            noActivateButton: false,\r\n            editable: mode !== \"execution\",\r\n            mode: mode,\r\n            downloadalldocuments: downloadAllDocuments,\r\n            required: properties.required,\r\n            allowgenerate: allowGenerate,\r\n            xpath: self.getXpath(properties.xpath),\r\n            append: properties.append,\r\n            caption: properties.caption,\r\n            noFiles: noFiles,\r\n            allowSendInMail: properties.allowSendInMail\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @param xpath\r\n     * @returns {*}\r\n     */\r\n    getXpath: function (xpath) {\r\n        return xpath;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    preRenderControl: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {boolean}\r\n     */\r\n    activateButton: function () {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @param xpath\r\n     * @returns {*}\r\n     */\r\n    getDocumentXpath: function (xpath) {\r\n        return xpath;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getContextXpath: function () {\r\n        return this.properties.xpathContext;\r\n    },\r\n\r\n    /**\r\n     * Renders a single document item\r\n     * @param file\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderDocumentItem: function (file) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var template = self.renderFactory.getTemplate(self.getTemplateItem());\r\n        var url = self.buildItemUrl(file);\r\n\r\n        // Don't render urls when not running in execution mode\r\n        if (mode !== \"execution\") url = \"javascript:void(0);\";\r\n\r\n        var html = $.fasttmpl(template, {\r\n            url: url,\r\n            allowDelete: self.properties.allowDelete,\r\n            filename: file.fileName,\r\n            mode: mode,\r\n            editable: self.properties.editable,\r\n            joined: false\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (file) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.getUploadFileUrl({\r\n            idRender: properties.id,\r\n            xpath: self.getDocumentXpath(properties.xpath),\r\n            xpathContext: self.getContextXpath(),\r\n            idPageCache: properties.idPageCache,\r\n            fileId: file.id,\r\n            sessionId: self.getSessionId()\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Builds the download all items item url\r\n     * @returns {*}\r\n     */\r\n    buildAllDocumentsUrl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var returnLink = self.dataService.getAllDocumentsDownloadUrl({\r\n            xpath: self.getDocumentXpath(properties.xpath),\r\n            xpathContext: self.getContextXpath(),\r\n            idPageCache: properties.idPageCache,\r\n            idCase: properties.caseId,\r\n            idWorkItem: properties.workitemId,\r\n            sessionId: self.getSessionId()\r\n        });\r\n\r\n        return returnLink;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed (Virtual method)\r\n     * @returns {string}\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n\r\n        return \"<div></div>\";\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        if (mode !== \"design\") {\r\n            var control = self.getControl();\r\n            var htmlControl = self.renderControl();\r\n\r\n            control.append(htmlControl);\r\n\r\n            self.updateControlForPrintMode(control);\r\n\r\n            // Execute the same as post-render\r\n            self.postRender();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Saves the form before the document generation\r\n     * @returns {*}\r\n     */\r\n    validateContainer: function () {\r\n        // Check if the form is valid, then generate\r\n        var form = this.getFormContainer();\r\n        return form.validateForm();\r\n    },\r\n\r\n    /**\r\n     * Saves the form before the document generation\r\n     * @returns {*}\r\n     */\r\n    save: function () {\r\n        var form = this.getFormContainer();\r\n\r\n        return form.saveForm();\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{files}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{actions}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceActionsHtml: function (html, replace) {\r\n        return html.replace(\"{{actions}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @param invalidElements\r\n     * @returns {boolean}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties,\r\n            message;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) === false) {\r\n            return true;\r\n        }\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) === false) {\r\n            return true;\r\n        }\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (properties.required && !properties.buttonExecuted) {\r\n            if (self.value) {\r\n                if (self.value.length > 0) return true;\r\n                message = self.getResource(\"render-document-required-text\");\r\n                invalidElements.push({xpath: properties.xpath, message: message});\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var mode = self.getMode();\r\n\r\n        // Call base\r\n        self._super();\r\n\r\n        // Attach handler\r\n        var generateLink = $(\".ui-bizagi-button-documentgenerator\", control);\r\n        if (mode === \"execution\") {\r\n            generateLink.click(function (e) {\r\n                if (e.isPropagationStopped()) return;\r\n                e.stopPropagation();\r\n\r\n                self.properties.buttonExecuted = true;\r\n\r\n                if (self.properties.validate) {\r\n                    // Check if the form is valid, then generate\r\n                    var isValid = self.validateContainer();\r\n                    if (isValid) {\r\n                        self.documentTemplateGenerate();\r\n                    }\r\n                } else {\r\n                    // Just generate the form\r\n                    self.documentTemplateGenerate();\r\n                }\r\n\r\n                self.properties.buttonExecuted = false;\r\n            });\r\n        }\r\n\r\n        // Configure preview handler\r\n        $(\".ui-bizagi-document-preview\", control).click(function (e) {\r\n            if (e.isPropagationStopped()) return;\r\n            e.stopPropagation();\r\n\r\n            self.showDocumentPreview($(this).data(\"url\"), $(this).data(\"filename\"));\r\n        });\r\n\r\n        // Configure preview handler\r\n        $(\".ui-bizagi-container-documents-item-delete\", control).click(function (e) {\r\n            if (e.isPropagationStopped()) return;\r\n            e.stopPropagation();\r\n\r\n            self.deleteDocumentTemplate($(this).data(\"filename\"));\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Creates the event of generation of templates.\r\n     * @param filename\r\n     */\r\n    deleteDocumentTemplate: function (filename) {\r\n        var self = this;\r\n        var params = {\r\n            xpath: self.properties.xpath + \"[fileName='\" + filename + \"']\",\r\n            idRender: self.properties.id,\r\n            xpathContext: self.getContextXpath(),\r\n            idPageCache: self.properties.idPageCache\r\n        };\r\n\r\n        self.startLoading();\r\n\r\n        $.when(self.dataService.deleteUploadFile(params))\r\n            .done(function () {\r\n                $.when(self.dataService.multiaction().getPropertyData({\r\n                    xpath: self.properties.xpath,\r\n                    idRender: self.properties.id,\r\n                    xpathContext: self.getContextXpath(),\r\n                    idPageCache: self.properties.idPageCache,\r\n                    property: \"value\"\r\n                })).done(function (documents) {\r\n                    self.resolveDeleteDocumentTemplate(documents, false, self.properties.downloadalldocuments);\r\n\r\n                    // Finish loading\r\n                    self.endLoading();\r\n                });\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Creates the event of generation of templates.\r\n     */\r\n    documentTemplateGenerate: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        self.startLoading();\r\n\r\n        //Get the context xPath\r\n        properties.xpathcontext = self.getContextXpath();\r\n        properties.xpath = self.getDocumentXpath(properties.xpath);\r\n\r\n        self.save().done(function () {\r\n\r\n            bizagi.showErrorAlertDialog = false;\r\n\r\n            $.when(self.dataService.generateDocumentTemplate(properties))\r\n                .done(function () {\r\n\r\n                    // Fetch again the value property\r\n                    $.when(self.dataService.multiaction().getPropertyData({\r\n                        xpath: properties.xpath,\r\n                        idRender: properties.id,\r\n                        xpathContext: self.getContextXpath(),\r\n                        idPageCache: properties.idPageCache,\r\n                        property: \"value\"\r\n                    })).done(function (documents) {\r\n                        self.resolveDocumentTemplateGenerate(documents, false, properties.downloadalldocuments);\r\n\r\n                        // Finish loading\r\n                        self.endLoading();\r\n                    });\r\n\r\n                }).fail(function (error) {\r\n                self.endLoading();\r\n\r\n                // Add error messages\r\n                self.showErrorMessage(error);\r\n            });\r\n        }).fail(function (message) {\r\n            self.endLoading();\r\n\r\n            // Add error messages\r\n            self.showErrorMessage(message);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Show the error message when something went wrong with the service.\r\n     * @param error\r\n     */\r\n    showErrorMessage: function (error) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var messageText = self.resources.getResource('render-upload-alert-maxsize').replace(\"{0}\", BIZAGI_SETTINGS.UploadMaxFileSize);\r\n\r\n        try {\r\n            messageText = error && typeof (error.responseText) !== \"undefined\" ? JSON.parse(error.responseText).message : error;\r\n        } catch (e) {\r\n        }\r\n\r\n        form.addErrorMessage(messageText);\r\n        form.endLoading();\r\n    },\r\n\r\n    /**\r\n     * Shows the document if the flag is set. (virtual Function)\r\n     */\r\n    autoOpenDocuments: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed (Virtual method)\r\n     * @param url\r\n     * @param filename\r\n     */\r\n    showDocumentPreview: function (url, filename) {\r\n    },\r\n\r\n    /**\r\n     * Identifies the extension of the file in a simpler way that ECM does\r\n     * @param file\r\n     * @returns {string}\r\n     */\r\n    returnCssTypeFile: function (file) {\r\n\r\n        if (file == undefined || file.lenght === 0) {\r\n            return \"ui-bizagi-document-upload-item-generic-file\";\r\n        }\r\n\r\n        var extension = file.substr((file.lastIndexOf('.') + 1));\r\n\r\n        switch (extension) {\r\n            case 'docx':\r\n                return \"ui-bizagi-document-upload-item-doc\";\r\n            case 'pdf':\r\n                return \"ui-bizagi-document-upload-item-pdf\";\r\n            case 'xlsx':\r\n                return \"ui-bizagi-document-upload-item-xls\";\r\n            default:\r\n                return \"ui-bizagi-document-upload-item-generic-file\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Redraw documents when needed\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    redrawDocuments: function (documents, noFiles, downloadAllDocuments) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var html = \"\";\r\n        var documentContainer = $(\"[data-component='files']\", control);\r\n\r\n        // Clear current links\r\n        documentContainer.empty();\r\n\r\n        // Draw links again\r\n        html += this.renderDocumentsHtml(documents);\r\n\r\n        // Check if there are documents and the flag to download all are available to show the link.\r\n        html += this.renderActionsHtml(documents, noFiles, downloadAllDocuments);\r\n\r\n        documentContainer.append(html);\r\n\r\n        //Set value\r\n        self.setValue(documents);\r\n    },\r\n\r\n    /**\r\n     * This method must be implemented by the specific class of each device. (Virtual method)\r\n     * @param file\r\n     * @returns {*|*|*}\r\n     */\r\n    renderAllDocumentDownload: function (file) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n\r\n        var template = self.renderFactory.getTemplate(self.getTemplateItem());\r\n        var url = self.buildAllDocumentsUrl();\r\n\r\n        // Don't render urls when not running in execution mode\r\n        if (mode !== \"execution\") url = \"javascript:void(0);\";\r\n\r\n        var html = $.fasttmpl(template, {\r\n            url: url,\r\n            allowDelete: properties.allowDelete,\r\n            filename: file.fileName,\r\n            mode: mode,\r\n            joined: true\r\n        });\r\n\r\n        return self.removeDeleteButton(html);\r\n    },\r\n\r\n    /**\r\n     * removeDeleteButton\r\n     * @param html\r\n     * @returns {*}\r\n     */\r\n    removeDeleteButton: function (html) {\r\n        var startIndex = html.indexOf(\"<span class=\\\"ui-bizagi-container-documents-item-delete\");\r\n\r\n        if (startIndex > 0) {\r\n            var restOfWord = html.substring(startIndex);\r\n            var finishIndex = restOfWord.indexOf(\"</span>\") + 7;\r\n\r\n            return html.substring(0, startIndex) + restOfWord.substring(finishIndex);\r\n        } else {\r\n            return html;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Process request of DeleteDocumentTemplate action\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    resolveDocumentTemplateGenerate: function (documents, noFiles, downloadAllDocuments) {\r\n        // Redraw documents\r\n        this.redrawDocuments(documents, noFiles, downloadAllDocuments);\r\n        this.value = documents;\r\n\r\n        // This does not apply for mobile.\r\n        this.autoOpenDocuments();\r\n        this.configureHandlers();\r\n    },\r\n\r\n    /**\r\n     * Process request of DocumentTemplateGenerate action\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    resolveDeleteDocumentTemplate: function (documents, noFiles, downloadAllDocuments) {\r\n        // Redraw documents\r\n        this.redrawDocuments(documents, noFiles, downloadAllDocuments);\r\n        this.value = documents;\r\n\r\n        // This does not apply for mobile.\r\n        this.configureHandlers();\r\n    },\r\n\r\n    /**\r\n     * Method to renders the documents\r\n     * @param documents\r\n     * @returns {string}\r\n     */\r\n    renderDocumentsHtml: function (documents) {\r\n        var items = \"\";\r\n\r\n        for (var i = 0; i < documents.length; i++) {\r\n            var document = {id: documents[i][0], fileName: documents[i][1]};\r\n            var item = this.renderDocumentItem(document);\r\n\r\n            items += item;\r\n        }\r\n\r\n        return items;\r\n    },\r\n\r\n    /**\r\n     * Methos to renders action of document\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     * @returns {string}\r\n     */\r\n    renderActionsHtml: function (documents, noFiles, downloadAllDocuments) {\r\n        var actions = \"\";\r\n\r\n        if (downloadAllDocuments && (!noFiles && documents.length > 0)) {\r\n            var downloadAllDocumentsLink = {fileName: this.getResource(\"render-document-downloadalldocuments\")};\r\n            var action = this.renderAllDocumentDownload(downloadAllDocumentsLink);\r\n\r\n            actions += action;\r\n        }\r\n\r\n        return actions;\r\n    },\r\n\r\n    getTemplate: function () {\r\n        return \"document\";\r\n    },\r\n\r\n    getTemplateItem: function () {\r\n        return \"document-item\";\r\n    },\r\n\r\n    getErrorTemplate: function () {\r\n        return \"form-error\";\r\n    },\r\n\r\n    getTemplateDownload: function () {\r\n        return \"document-download\";\r\n    },\r\n\r\n    getTemplateReadonly: function () {\r\n        return \"document-readonly\";\r\n    }\r\n\r\n});","/*\r\n *   Name: BizAgi Render Column Decorator Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define basic stuff for Columns\r\n */\r\n\r\nbizagi.rendering.element.extend(\"bizagi.rendering.columns.column\", {}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        this.decoratedClass = params.decorated;\r\n        this.data = params.data;\r\n        if (params.singleInstance) {\r\n            this.decorated = new this.decoratedClass({\r\n                data: this.data,\r\n                parent: this.parent,\r\n                renderFactory: this.renderFactory,\r\n                dataService: this.dataService\r\n            });\r\n            this.decorated.getControl = this.getControl;\r\n            params.decorated = this.decorated;\r\n            this.decorated.properties.isColumn = true;\r\n        } else {\r\n            this.decorateRenders = [];\r\n        }\r\n        this.grid = params.parent;\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n        properties.columnVisible = bizagi.util.parseBoolean(properties.columnVisible) != null ? bizagi.util.parseBoolean(properties.columnVisible) : true;\r\n        properties.align = properties.align || 'center';\r\n        properties.textFormat = properties.textFormat || {};\r\n        properties.submitOnChange = (typeof properties.submitOnChange != \"undefined\") ? bizagi.util.parseBoolean(properties.submitOnChange) : false;\r\n        properties.singleInstance = params.singleInstance;\r\n        properties.editable = (typeof properties.editable != \"undefined\") ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.visible = (typeof properties.visible != \"undefined\") ? bizagi.util.parseBoolean(properties.visible) : true;\r\n        properties.required = (typeof properties.required != \"undefined\") ? bizagi.util.parseBoolean(properties.required) : false;\r\n        properties.showColumn = (typeof properties.showColumn != \"undefined\") ? bizagi.util.parseBoolean(properties.showColumn) : true;\r\n\r\n        // Define if it is editable or not        \r\n        try {\r\n            if (params.parent && typeof params.parent.properties.editable == \"boolean\" && !params.parent.properties.editable) {\r\n                properties.editable = false;\r\n            }\r\n        } catch (e) {\r\n        }\r\n\r\n        // Define if the column is readonly\r\n        this.readonly = properties.readonly !== undefined ? properties.readonly : false;\r\n        if (this.readonly) properties.editable = required = false;\r\n\r\n        // Save original properties\r\n        this.originalProperties = JSON.parse(JSON.encode(properties));\r\n    },\r\n\r\n    /*\r\n    *   Return true if the column is read-only, so we can make a quick render\r\n    */\r\n    isReadonly: function () {\r\n        return false;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Method to retrieve the decorated control\r\n    */\r\n    getControl: function () {\r\n        var self = this;\r\n        return $(\".ui-bizagi-render-control\", self.element || self.observableElement);\r\n    },\r\n    /*\r\n    *   Returns the decorated cell instance to use\r\n    */\r\n    getDecorated: function (surrogateKey) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (properties.singleInstance) {\r\n            return self.decorated;\r\n        }\r\n        else {\r\n            var decorated = self.decorateRenders[surrogateKey];\r\n            if (decorated == undefined) {\r\n                if (typeof self.decorateRenders != \"object\") {\r\n                    self.decorateRenders = [];\r\n                }\r\n                var instanceDecoratedClass = new this.decoratedClass({\r\n                    data: bizagi.clone(this.data),\r\n                    parent: this.parent,\r\n                    renderFactory: this.renderFactory,\r\n                    dataService: this.dataService\r\n                });\r\n                decorated = instanceDecoratedClass;\r\n                self.decorateRenders[surrogateKey] = instanceDecoratedClass;\r\n\r\n                // Set surrogate key to all controls\r\n                decorated.surrogateKey = surrogateKey;\r\n\r\n                // Execute decorated overrides\r\n                self.applyOverrides(decorated);\r\n\r\n                // Also override setDisplayValue on summary row for non numeric columns\r\n                if (surrogateKey == \"summary\" && decorated.properties.type != \"columnMoney\" && decorated.properties.type != \"columnNumber\") {\r\n\r\n                    decorated.setDisplayValue = function (value) {\r\n                        var control = this.getControl();\r\n\r\n                        // Replace line breaks for html line breaks\r\n                        control.html(value);\r\n                    };\r\n                }\r\n            }\r\n            return decorated;\r\n        }\r\n    },\r\n    /*\r\n    *   Set a ready function to execute when the render has been inserted in the dom\r\n    */\r\n    ready: function () {\r\n        return this.readyDeferred.promise();\r\n    },\r\n    /*\r\n    *   Load stuff needed for the column\r\n    *   It could return a promise if the column need to load async stuff\r\n    */\r\n    initialize: function () {\r\n        // Override to do any stuff needed here\r\n    },\r\n    /* \r\n    *  Method to determine if the render value can be sent to the server or not\r\n    */\r\n    canBeSent: function (surrogateKey, cellOverrides) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n\r\n        if (cellOverrides) {\r\n            decorated.properties.visible = cellOverrides.visible;\r\n            decorated.properties.editable = cellOverrides.editable;\r\n        }\r\n        return decorated.canBeSent() || (!self.properties.editable && self.hasChanged()) || (!decorated.properties.editable && self.hasChanged()) || (decorated.properties.editabilityEnabled);\r\n    },\r\n    /*\r\n    *   Method to check if a value is valid or not in this render\r\n    */\r\n    isValueValid: function (surrogateKey, value, messages, propertyOverrides) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var invalidElements = [];\r\n\r\n        if (propertyOverrides.visible) {\r\n            self.setValue(surrogateKey, value);\r\n\r\n            // Override properties\r\n            decorated.properties = $.extend(decorated.properties, propertyOverrides);\r\n\r\n            if (self.grid && typeof(decorated.grid) === \"undefined\") {\r\n                decorated.grid = self.grid;\r\n            }\r\n\r\n            // Validate field\r\n            decorated.isValid(invalidElements);\r\n        }\r\n\r\n        if (invalidElements.length > 0) {\r\n            $.each(invalidElements, function (i, invalidElement) {\r\n                messages.push(invalidElement.message);\r\n            });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    },\r\n    /*\r\n    *   Apply custom overrides to each decorated instance\r\n    */\r\n    applyOverrides: function (decorated) {\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        // Set grid and id references to the control in order to render the content\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        decorated.grid = self.grid;\r\n        decorated.column = this;\r\n        decorated.surrogateKey = surrogateKey;\r\n\r\n        // Set cell value\r\n        self.setValue(surrogateKey, value);\r\n\r\n        // Override render properties\r\n        self.overrideDecoratedRenderProperties(surrogateKey);\r\n\r\n        // Set flag to check when a render has changed\r\n        self.changed = false;\r\n\r\n        // If the render is not editable return the readonly version of the column\r\n        //Fix: Uncaught RangeError: Maximum call stack size exceeded\r\n        if (!properties.editable && arguments[3] !== \"CALLER_RENDER_READ_ONLY_COLUMNSLINK\")\r\n            return self.renderReadOnly.apply(self, arguments);\r\n\r\n        // Returns the decorated render inside a custom layout for columns\r\n        self.readyDeferred = new $.Deferred();\r\n        var cell = decorated.render(\"cell\");\r\n\r\n        // If the render changes set the flag on\r\n        decorated.bind(\"renderchange\", function () {\r\n            self.changed = true;\r\n        });\r\n\r\n        self.bind(\"rendered\", function () {\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n        return cell;\r\n    },\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRender: function (surrogateKey, cell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        decorated.postRenderElement(cell);\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element when the element is read-only\r\n    */\r\n    renderReadOnly: function (surrogateKey, value) {\r\n        var self = this;\r\n        // Set grid and id references to the control in order to render the content\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        decorated.grid = self.grid;\r\n        decorated.column = this;\r\n        decorated.surrogateKey = surrogateKey;\r\n\r\n        // Set cell value\r\n        self.setValue(surrogateKey, value);\r\n\r\n        // Override render properties\r\n        self.overrideDecoratedRenderProperties(surrogateKey);\r\n\r\n        // Changes editable to false to render read-only\r\n        decorated.properties.editable = false;\r\n\r\n        // Perform the internal render\r\n        self.readyDeferred = new $.Deferred();\r\n        var result = decorated.render(\"cell.readonly\");\r\n\r\n        self.bind(\"rendered\", function () {\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n        // Returns the decorated render inside a custom layout for columns\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *  Returns the html template to draw the summary cell\r\n    */\r\n    renderSummary: function (key, value) {\r\n        var self = this;\r\n        var result = self.renderFactory.getTemplate(\"cell.summary\")\r\n        return $.tmpl(result).html();\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRenderReadOnly: function (surrogateKey, cell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var editable = self.properties.editable;\r\n        decorated.properties.editable = false;\r\n        if (self.properties.singleInstance) {\r\n            decorated.element = cell;\r\n        }\r\n        decorated.postRenderElement(cell);\r\n        decorated.properties.editable = editable;\r\n    },\r\n\r\n    /*\r\n    * Return false to all columns that doesn't need special treatment (like number or currency)\r\n    */\r\n    postRenderSummary: function () {\r\n        return false;\r\n    },\r\n\r\n    /*\r\n    *   Returns the cell html to be inserted in the table\r\n    */\r\n    getCell: function () {\r\n        return this.decorated.getDisplayValue();\r\n    },\r\n    /*\r\n    *   Sets the surrogate key for this row\r\n    */\r\n    setSurrogateKey: function (key) {\r\n        this.surrogateKey = key;\r\n    },\r\n    /*\r\n    *   Sets the internal value, only must be called internally\r\n    */\r\n    setValue: function (surrogateKey, value) {\r\n        var self = this;\r\n\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated != \"undefined\" && decorated != null) {\r\n\r\n            decorated.properties.originalValue = value;\r\n            decorated.properties.previousValue = value;\r\n\r\n             if ((value === null || value === undefined) && (self.properties.defaultvalue !== undefined || self.properties.defaultValue !== undefined) && decorated.grid != undefined) {\r\n                value = self.setDefaultValue(surrogateKey, decorated);\r\n            }\r\n\r\n            decorated.properties.value = value;\r\n            decorated.setValue(value, false);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Set the cell default value and make this action as a change to send it to server\r\n    */\r\n    setDefaultValue: function (surrogateKey, decorated) {\r\n        var self = this;\r\n        var value = self.properties.defaultvalue || self.properties.defaultValue;\r\n\r\n        decorated.grid.changes[surrogateKey] = decorated.grid.changes[surrogateKey] || {};\r\n        decorated.grid.changes[surrogateKey][self.properties.xpath] = value;\r\n\r\n        return value;\r\n    },\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        return decorated.getValue();\r\n    },\r\n    /*\r\n    *   Gets the composite value (applies for non-standard render values)\r\n    */\r\n    getCompositeValue: function (surrogateKey) {\r\n        return this.getValue(surrogateKey);\r\n    },\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () {\r\n        return bizagi.rendering.element.ELEMENT_TYPE_COLUMN;\r\n    },\r\n    /*\r\n    *   Determines if a render has changed its value\r\n    */\r\n    hasChanged: function () {\r\n        return this.changed;\r\n    },\r\n    /*\r\n    *   Triggers an event inside the control\r\n    */\r\n    trigger: function (eventType, data) {\r\n        if (this.decorated)\r\n            this.decorated.trigger(eventType, data);\r\n    },\r\n    /*\r\n    *   Triggers an event handler inside the control\r\n    */\r\n    triggerHandler: function (eventType, data) {\r\n        if (this.decorated)\r\n            this.decorated.triggerHandler(eventType, data);\r\n    },\r\n    /*\r\n    *   Binds to an event\r\n    */\r\n    bind: function (eventType, fn) {\r\n        if (this.decorated)\r\n            this.decorated.bind(eventType, fn);\r\n    },\r\n    /*\r\n    *   Unbinds to an event\r\n    */\r\n    unbind: function (eventType, fn) {\r\n        if (this.decorated)\r\n            this.decorated.unbind(eventType, fn);\r\n    },\r\n    /*\r\n    *   Override decorated properties\r\n    */\r\n    overrideDecoratedRenderProperties: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n\r\n        // Override decorated control properties\r\n        decorated.properties.editable = this.properties.editable;\r\n        decorated.properties.visible = this.properties.visible;\r\n        decorated.properties.required = this.properties.required;\r\n    },\r\n\r\n    overrideProperties: function (properties) {\r\n        var self = this;\r\n\r\n        self.properties.editable = properties.editable || self.properties.editable;\r\n        self.properties.visible = properties.visible || self.properties.visible;\r\n        self.properties.required = properties.required || self.properties.required;\r\n    },\r\n\r\n    /*\r\n    *   Returns the xpath used to sort the grid\r\n    */\r\n    getSortName: function () {\r\n        var self = this;\r\n\r\n        // Check if there is an override for the default behaviour \r\n        var decorated = self.getAnyDecoratedInstance();\r\n        if (decorated && decorated.getSortColumn) {\r\n            return decorated.getSortColumn();\r\n        }\r\n\r\n        // Default behaviour\r\n        return self.properties.xpath;\r\n    },\r\n\r\n    /*\r\n    *   Returns any of the decorated instances, if there are none, return null\r\n    */\r\n    getAnyDecoratedInstance: function () {\r\n        var self = this;\r\n        var first;\r\n\r\n        // Get the first key for the hash\r\n        for (first in this.decorateRenders) break;\r\n\r\n        // Return the first decorated render\r\n        if (first) return this.decorateRenders[first];\r\n\r\n        return null;\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self.decorated) {\r\n                self.decorated.unbind(\"renderchange\");\r\n                self.decorated.dispose();\r\n            }\r\n        \r\n            if (self.decorateRenders) {\r\n                bizagi.util.arrayEach(self.decorateRenders, function (key, render) {\r\n                    if (render) {\r\n                        render.unbind(\"renderchange\");\r\n                        render.dispose();\r\n                    }\r\n                });\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n        \r\n        // Call base\r\n        self._super();\r\n    }\r\n});\r\n\r\n","/*\r\n *   Name: BizAgi Render Column ReadOnlyDecorator Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define basic stuff for readonly-columns\r\n */\r\n\r\n// Extends itself\r\n$.Class.extend(\"bizagi.rendering.columns.readonly\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n\r\n        // Define the column as readonly\r\n        properties.editable = required = false;\r\n    },\r\n\r\n    /*\r\n    *   Return true if the column is read-only, so we can make a quick render\r\n    */\r\n    isReadonly: function () {\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value) {\r\n        if (typeof value === \"string\") {\r\n            value = bizagi.util.sanitizeHTML(value);\r\n            var valueToDisplay = value.replaceAll(\"\\\\n\", \"<br/>\").replaceAll(\"\\n\", \"<br/>\");\r\n            return valueToDisplay;\r\n        }\r\n        else if (value === null){\r\n            return \"\";\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRender: function (surrogateKey, cell) {\r\n        // DON'T DO ANYTHING\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element when the element is read-only\r\n    */\r\n    renderReadOnly: function (surrogateKey, value) {\r\n        return this.render(surrogateKey, value);\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRenderReadOnly: function (surrogateKey, cell) {\r\n        // DON'T DO ANYTHING\r\n    },\r\n    \r\n    /*\r\n    *   Method to check if a value is valid or not in this render\r\n    */\r\n    isValueValid: function () {\r\n        // It is always valid because the column is readonly\r\n        return true;\r\n    }\r\n});\r\n\r\n","/*\r\n*   Name: BizAgi Render Combo Column Decorator Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for Combo Columns\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.combo\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n        properties.recalculate = bizagi.util.parseBoolean(properties.recalculate) || false;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Apply custom overrides to each decorated instance\r\n    */\r\n    applyOverrides: function (decorated) {\r\n        var properties = this.properties;\r\n\r\n        this._super(decorated);\r\n\r\n        if (!properties.recalculate) {\r\n            decorated.originalGetData = decorated.getData;\r\n            decorated.getData = this.getDataForAllCells;\r\n            decorated.findDataById = this.findDataById;\r\n        }\r\n    },\r\n\r\n    findDataById: function (id) {\r\n        var self = this;\r\n        var result = {};\r\n        if (this.column && this.column.comboData) {\r\n            $.each(this.column.comboData, function (key, value) {\r\n                if (value.id == id) {\r\n                    result = value;\r\n                }\r\n            });\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Single data fetch for all the cells\r\n    */\r\n    getDataForAllCells: function (params) {\r\n        var column = this.column;\r\n        if (column.comboData) return column.comboData;\r\n        if (column.fetchingData) return column.dataPromise;\r\n\r\n        // Start fetching\r\n        column.fetchingData = true;\r\n        column.dataPromise = $.when(this.originalGetData(params))\r\n        .pipe(function (result) {\r\n            column.comboData = result;\r\n            column.fetchingData = false;\r\n            return result;\r\n        });\r\n\r\n        return column.dataPromise;\r\n    },\r\n\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function(surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated === null) {\r\n            return;\r\n        }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey == \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if (value && bizagi.util.isString(value)) {        \r\n            self._super(surrogateKey, value);\r\n        } else if (value && value.length > 0) {\r\n            // Create the value property\r\n            var newValue = {\r\n                id: value[0][0],\r\n                value: value[0].length > 2 ? $.grep(value[0], function(item, i) { return i != 0; }) : value[0][1]\r\n            };\r\n            // Call base\r\n            self._super(surrogateKey, newValue);\r\n            decorated.selectedValue = newValue.value;\r\n        } else if (value && value.id && value.value) {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.value;\r\n        } else if (self.properties.type == \"columnRadio\") {\r\n            self._super(surrogateKey, null);\r\n            decorated.selectedValue = value;\r\n        } else if (value && typeof (value) == \"number\") {\r\n            self._super(surrogateKey, value);\r\n        } else {\r\n            // Set null values when the entry array is null\r\n            self._super(surrogateKey, null);\r\n            decorated.selectedValue = \"\";\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Set the cell default value and make this action as a change to send it to server\r\n    */\r\n   setDefaultValue: function (surrogateKey, decorated) {\r\n        var self = this;\r\n        var value = self.properties.defaultValue[0];\r\n\r\n        decorated.grid.changes[surrogateKey] = decorated.grid.changes[surrogateKey] || {};\r\n        decorated.grid.changes[surrogateKey][self.properties.xpath] = value.id;\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getCompositeValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var value = decorated.getValue();\r\n        var label = decorated.getSelectedValue();\r\n\r\n        // Build value for grid data\r\n        var valueForGrid = [];\r\n        if (value && (value.id > 0 || bizagi.util.isString(value.id))) {\r\n            valueForGrid.push([]);\r\n            valueForGrid[0].push(value.id);\r\n            valueForGrid[0].push(label);\r\n        } else {\r\n            valueForGrid.push([]);\r\n        }\r\n\r\n        return valueForGrid;\r\n    },\r\n\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var value = decorated.getValue();\r\n        if (value) return value.id;\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value, tableCell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var properties = self.properties;\r\n\r\n        // If the control needs to recalculate data, reset it on the decorated render\r\n        if (properties.recalculate) {\r\n            decorated.resetData();\r\n        }\r\n\r\n        // Change the xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + surrogateKey + \"]\" : self.grid.properties.xpath + \"[id=\" + surrogateKey + \"]\";\r\n        decorated.properties.xpathContext = xpathContext;\r\n\r\n        // Render the control\r\n        var result = this._super(surrogateKey, value, tableCell);\r\n\r\n        return result;\r\n    },\r\n\r\n    renderReadOnly: function (key, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(key);\r\n        var properties = self.properties;\r\n\r\n        // Change the xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + key + \"]\" : self.grid.properties.xpath + \"[id=\" + key + \"]\";\r\n        decorated.properties.xpathContext = xpathContext;\r\n\r\n        // Render the control\r\n        var result = this._super(key, value);\r\n\r\n        return result;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Render Date Column Decorator Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for Date Columns\r\n*/\r\n\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.date\", {}, {\r\n\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function (surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated === null) return;\r\n\r\n        self._super(surrogateKey, value);\r\n        if ((value === null || value === undefined) && self.properties.defaultvalue !== undefined) {\r\n            value = self.setDefaultValue(surrogateKey, decorated);\r\n        }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey === \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if (value == null) {\r\n            decorated.setValue(value, false);\r\n            decorated.properties.displayValue = \"\";\r\n        }\r\n\r\n        var date = bizagi.util.dateFormatter.getDateFromInvariant(value, decorated.properties.showTime);\r\n\r\n        if (date === 0) {\r\n            // force another attempt in order to check invariant format for the value with time or without time (reverse option)\r\n            date = bizagi.util.dateFormatter.getDateFromInvariant(value, !decorated.properties.showTime);\r\n        }\r\n        // Format date to current format\r\n        if (date !== 0) {\r\n            var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n            var formattedDate = bizagi.util.dateFormatter.formatDate(date, decorated.properties.fullFormat, datePickerRegional);\r\n\r\n            // Set formatted value in display value property\r\n            decorated.properties.displayValue = formattedDate;\r\n\r\n            // Send original value to decorated control, because it must be with invariant format\r\n            decorated.setValue(value, false);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Set the cell default value and make this action as a change to send it to server\r\n    */\r\n    setDefaultValue: function (surrogateKey, decorated) {\r\n        var self = this;\r\n        var value = self.properties.defaultvalue;\r\n\r\n        decorated.grid.changes[surrogateKey] = decorated.grid.changes[surrogateKey] || {};\r\n\r\n        value = bizagi.util.dateFormatter.getDateFromInvariant(value, decorated.properties.showTime || false);\r\n\r\n        value = bizagi.util.dateFormatter.formatInvariant(value, true);\r\n        decorated.grid.changes[surrogateKey][self.properties.xpath] = value;\r\n\r\n        return value;\r\n    }\r\n});\r\n\r\n","/**\r\n *   Name: BizAgi Render Combo Column Decorator Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define basic stuff for Combo Columns\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.search\", {}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n\r\n        if (properties.advancedSearch && this.getMode() === \"execution\") {\r\n            properties.submitOnChange = bizagi.util.parseBoolean(properties.submitOnChange) || false;\r\n            properties.submitOnChange = (properties.submitVersion || 1) > 1 ? properties.submitOnChange : true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Apply custom overrides to each decorated instance\r\n     * @param decorated\r\n     */\r\n    applyOverrides: function (decorated) {\r\n        this._super(decorated);\r\n\r\n        // Change the xpath context\r\n        var xpathContext;\r\n\r\n        if (this.properties.xpathContext.length > 0) {\r\n            xpathContext = this.properties.xpathContext + \".\" + this.grid.properties.xpath + \"[id=\" + decorated.surrogateKey + \"]\";\r\n        } else {\r\n            xpathContext = this.grid.properties.xpath + \"[id=\" + decorated.surrogateKey + \"]\";\r\n        }\r\n\r\n        decorated.properties.xpathContext = xpathContext;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value, tableCell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var properties = self.properties;\r\n\r\n        // If the control needs to recalculate data, reset it on the decorated render\r\n        if (properties.recalculate) {\r\n            decorated.resetData();\r\n        }\r\n\r\n        // Render the control\r\n        var result = this._super(surrogateKey, value, tableCell);\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var value = decorated.getValue();\r\n        if (value && typeof (value) == \"object\") return value.id;\r\n\r\n        return value;\r\n    },\r\n\r\n    setValue: function (surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated === null) {\r\n            return;\r\n        }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey == \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if (value && value.length > 0) {\r\n            // Create the value property\r\n            var newValue = {\r\n                id: value[0][0],\r\n                value: value[0].length > 2 ? $.grep(value[0], function (item, i) {\r\n                    return i != 0;\r\n                }) : value[0][1]\r\n            };\r\n            // Call base\r\n            self._super(surrogateKey, newValue);\r\n            decorated.selectedValue = newValue.value;\r\n        } else if (value && value.id && value.value) {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.value;\r\n        } else if (value && value.id && value.label) {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.label;\r\n        } else {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = \"\";\r\n        }\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: Bizagi Base Render Factory\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define an abstract render factory in order to do common stuff for all device factories\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.base.factory\", {}, {\r\n    /* \r\n    *   Constructor\r\n    */\r\n    init: function (dataService) {\r\n        this.templates = {};\r\n        this.dataService = dataService;        \r\n    },\r\n\r\n    /**\r\n    * Load client resources in order to override a default behavior\r\n    */\r\n    loadOverrides: function () {\r\n    },\r\n    /*\r\n    *   This function will load asynchronous stuff needed in the module\r\n    */\r\n    initAsyncStuff: function() {\r\n        return $.when.apply($, [this.loadOverrides(), this.loadTemplates()]);\r\n    },\r\n    /*\r\n    *   Load all the templates used for rendering\r\n    */\r\n    loadTemplates: function () {\r\n    },\r\n    /*\r\n    *   Load one template and save it internally\r\n    */\r\n    loadTemplate: function(template, templateDestination) {\r\n        var self = this;\r\n\r\n        // Go fetch the template\r\n        return bizagi.templateService.getTemplate(templateDestination, template)\r\n                .done(function (resolvedTemplate) {\r\n                self.templates[template] = resolvedTemplate;\r\n            });\r\n    },\r\n    /*\r\n    * Returns a common  used template for the framework\r\n    */\r\n    getCommonTemplate: function (template) {        \r\n        return this.templates[template];\r\n    },\r\n    /*\r\n    *   Returns the appropiate container based on the container type\r\n    */\r\n    getContainer: function (params) {\r\n        // TODO: REMOVE IMPLEMENTATION\r\n\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var containerParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"form\") {\r\n            return new bizagi.rendering.form(containerParams);\r\n        }\r\n\r\n        if (type == \"mobileform\") {\r\n            return new bizagi.rendering.mobileform(containerParams);\r\n        }\r\n\r\n        if (type == \"template\") {\r\n            return new bizagi.rendering.formTemplate(containerParams);\r\n        }\r\n\r\n        if (type == \"queryForm\") {\r\n            return new bizagi.rendering.queryForm(containerParams);\r\n        }\r\n\r\n        if (type == \"layout\") {\r\n            return new bizagi.rendering.layout(containerParams);\r\n        }\r\n\r\n        if (type == \"usersForm\") {\r\n            return new bizagi.rendering.usersForm(containerParams);\r\n        }\r\n\r\n        if (type == \"panel\") {\r\n            return new bizagi.rendering.panel(containerParams);\r\n        }\r\n\r\n        if (type == \"contentPanel\" || type == \"contentpanel\") {\r\n            return new bizagi.rendering.contentPanel(containerParams);\r\n        }\r\n\r\n        if (type.toLowerCase() == \"nestedform\") {\r\n            return new bizagi.rendering.nestedForm(containerParams);\r\n        }\r\n\r\n        if (type == \"tab\") {\r\n            return new bizagi.rendering.tab(containerParams);\r\n        }\r\n\r\n        if (type == \"tabItem\" || type == \"tabitem\") {\r\n            return new bizagi.rendering.tabItem(containerParams);\r\n        }\r\n\r\n        if (type == \"horizontal\") {\r\n            return new bizagi.rendering.horizontal(containerParams);\r\n        }\r\n\r\n        if (type == \"accordion\") {\r\n            return new bizagi.rendering.accordion(containerParams);\r\n        }\r\n\r\n        if (type == \"accordionItem\") {\r\n            return new bizagi.rendering.accordionItem(containerParams);\r\n        }\r\n\r\n        if (type == \"group\") {\r\n            return new bizagi.rendering.group(containerParams);\r\n        }\r\n\r\n        if (type == \"mobilegroup\") {\r\n            return new bizagi.rendering.mobilegroup(containerParams);\r\n        }\r\n\r\n        if (type == \"searchForm\") {\r\n            containerParams.context = \"search\";\r\n            containerParams.contexttype = \"metadata\";\r\n            return new bizagi.rendering.searchForm(containerParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate render based on the render type\r\n    */\r\n    getRender: function (params) {\r\n\r\n        // TODO: REMOVE IMPLEMENTATION\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var renderParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (!type)\r\n            type = \"label\";\r\n\r\n        if (type == \"text\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                return new bizagi.rendering.extendedText(renderParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.text(renderParams);\r\n        }\r\n        if (type == \"mobiletext\") {\r\n            return new bizagi.rendering.mobiletext(renderParams);\r\n        }\r\n\r\n        if (type == \"association\") {\r\n            return new bizagi.rendering.association(renderParams);\r\n        }\r\n\r\n        if (type == \"label\") {\r\n            return new bizagi.rendering.label(renderParams);\r\n        }\r\n\r\n        if (type == \"hidden\") {\r\n            return new bizagi.rendering.hidden(renderParams);\r\n        }\r\n\r\n        if (type == \"number\") {\r\n            return new bizagi.rendering.number(renderParams);\r\n        }\r\n\r\n        if (type == \"money\") {\r\n            return new bizagi.rendering.money(renderParams);\r\n        }\r\n\r\n        if (type == \"date\") {\r\n            return new bizagi.rendering.date(renderParams);\r\n        }\r\n\r\n        if (type == \"boolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                return new bizagi.rendering.check(renderParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.yesno(renderParams);\r\n        }\r\n\r\n        if (type == \"combo\") {\r\n            return new bizagi.rendering.combo(renderParams);\r\n        }\r\n\r\n        if (/^cascadingcombo$/i.test(type)) {\r\n            return new bizagi.rendering.cascadingCombo(renderParams);\r\n        }\r\n\r\n        if (type == \"list\") {\r\n            return new bizagi.rendering.list(renderParams);\r\n        }\r\n\r\n        if (type == \"multiSelect\") {\r\n            return new bizagi.rendering.multiSelect(renderParams);\r\n        }\r\n\r\n        if (type == \"radio\") {\r\n            return new bizagi.rendering.radio(renderParams);\r\n        }\r\n\r\n        if (type == \"image\") {\r\n            // Override for test purposes\r\n            return new bizagi.rendering.image(renderParams);\r\n        }\r\n        if (type == \"uploadecm\") {\r\n            // Check if its ECM file            \r\n            return new bizagi.rendering.ecm(renderParams);\r\n        }\r\n\r\n        if (type == \"upload\") {\r\n            return new bizagi.rendering.upload(renderParams);\r\n        }\r\n        if (type == \"grid\") {\r\n            return new bizagi.rendering.grid(renderParams);\r\n        }\r\n\r\n        if (type == \"groupedgrid\") {\r\n            return new bizagi.rendering.grid(renderParams);\r\n        }\r\n\r\n        if (type == \"search\") {\r\n            return new bizagi.rendering.search(renderParams);\r\n        }\r\n\r\n        if (type == \"suggest\") {\r\n            renderParams.data.properties.enableQuerySuggestBehavior = true;\r\n            return new bizagi.rendering.search(renderParams);\r\n        }\r\n\r\n        if (type == \"searchList\") {\r\n            return new bizagi.rendering.searchList(renderParams);\r\n        }\r\n\r\n        if (type == \"letter\") {\r\n            return new bizagi.rendering.letter(renderParams);\r\n        }\r\n\r\n        if (type == \"button\") {\r\n            return new bizagi.rendering.button(renderParams);\r\n        }\r\n\r\n        if (type == \"formLink\") {\r\n            return new bizagi.rendering.formLink(renderParams);\r\n        }\r\n\r\n        if (type == \"link\") {\r\n            return new bizagi.rendering.link(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutImage\") {\r\n            return new bizagi.rendering.layoutImage(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutLink\") {\r\n            return new bizagi.rendering.layoutLink(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutLabel\") {\r\n            return new bizagi.rendering.layoutLabel(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutText\") {\r\n            return new bizagi.rendering.layoutText(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutDateTime\") {\r\n            return new bizagi.rendering.layoutDateTime(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutNumber\") {\r\n            return new bizagi.rendering.layoutNumber(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutMoney\") {\r\n            return new bizagi.rendering.layoutMoney(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutPlaceholder\") {\r\n            return new bizagi.rendering.layoutPlaceholder(renderParams);\r\n        }\r\n\r\n        if (type == \"actionLauncher\") {\r\n            return new bizagi.rendering.actionLauncher(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutBoolean\") {\r\n            return new bizagi.rendering.layoutBoolean(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutUpload\") {\r\n            return new bizagi.rendering.layoutUpload(renderParams);\r\n        }\r\n\r\n        if (type == \"entityTemplate\") {\r\n            return new bizagi.rendering.entityTemplate(renderParams);\r\n        }\r\n\r\n        if (type == \"polymorphicLauncher\") {\r\n            return new bizagi.rendering.polymorphicLauncher(renderParams);\r\n        }\r\n\r\n        if (type == \"userfield\") {\r\n            return new bizagi.rendering.userfieldWrapper(renderParams);\r\n        }\r\n\r\n        // Check search renders (starts with \"search\")\r\n        if (type.indexOf(\"search\") == 0) {\r\n            return this.getSearchRender(params);\r\n        }\r\n\r\n        if (type.indexOf(\"query\") == 0) {\r\n            return this.getQueryRender(params);\r\n        }\r\n\r\n        if (type == \"document\") {\r\n            return new bizagi.rendering.document(renderParams);\r\n        }\r\n\r\n        if (type == \"image\") {\r\n            return new bizagi.rendering.image(renderParams);\r\n        }\r\n        if (type == \"fileprint\") {\r\n            return new bizagi.rendering.fileprint(renderParams);\r\n        }\r\n        if (type == \"geolocation\") {\r\n            return new bizagi.rendering.geolocation(renderParams);\r\n        }\r\n\r\n        if (type == \"collectionnavigator\") {\r\n            return new bizagi.rendering.collectionnavigator(renderParams);\r\n        }\r\n\r\n        if (type == \"getUser\") {\r\n            return new bizagi.rendering.getUser(renderParams);\r\n        }\r\n\r\n        if (type == \"rangeDate\") {\r\n            return new bizagi.rendering.rangeDate(renderParams);\r\n        }\r\n\r\n        if (type == \"rangeMoney\") {\r\n            return new bizagi.rendering.rangeMoney(renderParams);\r\n        }\r\n\r\n        if (type == \"rangeNumber\") {\r\n            return new bizagi.rendering.rangeNumber(renderParams);\r\n        }\r\n\r\n        if (type == \"activityCheckList\") {\r\n            return new bizagi.rendering.activityCheckList(renderParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate column based on the render type\r\n    */\r\n    getColumn: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var columnParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService,\r\n            singleInstance: bizagi.util.isEmpty(params.singleInstance) ? true : params.singleInstance\r\n        });\r\n\r\n        if (type == \"columnText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                columnParams.decorated = bizagi.rendering.extendedText;\r\n            } else {\r\n                // Creates one normal text render\r\n                columnParams.decorated = bizagi.rendering.text;\r\n            }\r\n            return new bizagi.rendering.columns.text(columnParams);\r\n        }\r\n\r\n        if (type == \"columnSearchList\") {\r\n            columnParams.decorated = bizagi.rendering.searchList;\r\n            return new bizagi.rendering.columns.searchList(columnParams);\r\n        }\r\n\r\n        if (type == \"columnNumber\") {\r\n            columnParams.decorated = bizagi.rendering.number;\r\n            return new bizagi.rendering.columns.number(columnParams);\r\n        }\r\n\r\n        if (type == \"columnMoney\") {\r\n            columnParams.decorated = bizagi.rendering.money;\r\n            return new bizagi.rendering.columns.number(columnParams);\r\n        }\r\n\r\n        if (type == \"columnDate\") {\r\n            columnParams.decorated = bizagi.rendering.date;\r\n            return new bizagi.rendering.columns.date(columnParams);\r\n        }\r\n\r\n        if (type == \"columnBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                columnParams.decorated = bizagi.rendering.check;\r\n                if (params.data.properties.isExclusive) {\r\n                    return new bizagi.rendering.columns.exclusiveCheck(columnParams);\r\n                }\r\n            } else {\r\n                // Creates one yes-no render\r\n                columnParams.decorated = bizagi.rendering.yesno;\r\n            }\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnCombo\") {\r\n            columnParams.decorated = bizagi.rendering.combo;\r\n            return new bizagi.rendering.columns.combo(columnParams);\r\n        }\r\n\r\n        if (type == \"columnRadio\") {\r\n            columnParams.decorated = bizagi.rendering.radio;\r\n            return new bizagi.rendering.columns.radio(columnParams);\r\n        }\r\n\r\n        if (type == \"columnList\") {\r\n            columnParams.decorated = bizagi.rendering.list;\r\n            return new bizagi.rendering.columns.list(columnParams);\r\n        }\r\n\r\n        if (type == \"columnHidden\") {\r\n            columnParams.decorated = bizagi.rendering.hidden;\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUpload\") {\r\n            columnParams.decorated = bizagi.rendering.upload;\r\n            return new bizagi.rendering.columns.upload(columnParams);\r\n        }\r\n\r\n        if (type == \"columnImage\") {\r\n            columnParams.decorated = bizagi.rendering.image;\r\n            return new bizagi.rendering.columns.image(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUploadEcm\") {\r\n            columnParams.decorated = bizagi.rendering.ecm;\r\n            return new bizagi.rendering.columns.uploadecm(columnParams);\r\n        }\r\n        if (type == \"columnLink\") {\r\n            columnParams.decorated = bizagi.rendering.link;\r\n            return new bizagi.rendering.columns.link(columnParams);\r\n        }\r\n\r\n        if (type == \"columnFormLink\") {\r\n            columnParams.decorated = bizagi.rendering.formLink;\r\n            return new bizagi.rendering.columns.link(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUserfield\") {\r\n            columnParams.decorated = bizagi.rendering.userfieldWrapper;\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnSearch\") {\r\n            columnParams.decorated = bizagi.rendering.search;\r\n            return new bizagi.rendering.columns.search(columnParams);\r\n        }\r\n\r\n        if (type == \"columnLabel\") {\r\n            columnParams.decorated = bizagi.rendering.label;\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnReadonly\") {\r\n            columnParams.decorated = bizagi.rendering.label;\r\n            return new bizagi.rendering.columns.readonly(columnParams);\r\n        }\r\n\r\n        if (type == \"columnDocument\") {\r\n            columnParams.decorated = bizagi.rendering.document;\r\n            return new bizagi.rendering.columns.document(columnParams);\r\n        }\r\n\r\n        if (type == \"columnLetter\") {\r\n            columnParams.decorated = bizagi.rendering.letter;\r\n            return new bizagi.rendering.columns.letter(columnParams);\r\n        }\r\n\r\n        if (type == \"columnButton\") {\r\n            columnParams.decorated = bizagi.rendering.button;\r\n            return new bizagi.rendering.columns.button(columnParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate search render based on the type\r\n    */\r\n    getSearchRender: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var searchParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"searchText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                return new bizagi.rendering.extendedText(searchParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.text(searchParams);\r\n        }\r\n\r\n        if (type == \"searchBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                return new bizagi.rendering.check(searchParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.yesno(searchParams);\r\n        }\r\n\r\n        if (type == \"searchNumber\") {\r\n            if (data.properties.dataType == 29) {\r\n                //Creates a Scientific Notation render\r\n                return new bizagi.rendering.numberScientificNotation(searchParams);\r\n            }\r\n            return new bizagi.rendering.number(searchParams);\r\n        }\r\n\r\n        if (type == \"searchMoney\") {\r\n            return new bizagi.rendering.money(searchParams);\r\n        }\r\n\r\n        if (type == \"searchDate\") {\r\n            return new bizagi.rendering.date(searchParams);\r\n        }\r\n\r\n        if (type == \"searchCombo\") {\r\n            return new bizagi.rendering.combo(searchParams);\r\n        }\r\n\r\n        if (type == \"searchSuggest\") {\r\n            return new bizagi.rendering.search(searchParams);\r\n        }\r\n\r\n        if (type == \"searchLabel\") {\r\n            return new bizagi.rendering.label(searchParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate search render based on the type\r\n    */\r\n    getQueryRender: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var searchParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"queryText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                return new bizagi.rendering.queryExtendedText(searchParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.queryText(searchParams);\r\n        }\r\n\r\n        if (type == \"queryBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                return new bizagi.rendering.queryCheck(searchParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.queryYesNo(searchParams);\r\n        }\r\n\r\n        if (type == \"queryNumber\") {\r\n\r\n            return new bizagi.rendering.queryNumber(searchParams);\r\n        }\r\n\r\n        if (type == \"queryMoney\") {\r\n            return new bizagi.rendering.queryMoney(searchParams);\r\n        }\r\n\r\n        if (type == \"queryDate\") {\r\n            return new bizagi.rendering.queryDate(searchParams);\r\n        }\r\n\r\n        if (type == \"queryCombo\") {\r\n            return new bizagi.rendering.queryCombo(searchParams);\r\n        }\r\n\r\n        if (type == \"queryCascadingCombo\") {\r\n            return new bizagi.rendering.queryCascadingCombo(searchParams);\r\n        }\r\n\r\n        if (type == \"querySuggest\") {\r\n            return new bizagi.rendering.querySuggest(searchParams);\r\n        }\r\n\r\n        if (type == \"queryLabel\") {\r\n            return new bizagi.rendering.queryLabel(searchParams);\r\n        }\r\n\r\n        if (type == \"queryList\") {\r\n            return new bizagi.rendering.queryList(searchParams);\r\n        }\r\n        \r\n        if (type == \"queryMultiSelect\") {\r\n            return new bizagi.rendering.queryMultiSelect(searchParams);\r\n        }\r\n\r\n        if (type == \"querySearch\") {\r\n            return new bizagi.rendering.querySearch(searchParams);\r\n        }\r\n\r\n        if (type == \"queryRadio\") {\r\n            return new bizagi.rendering.queryRadio(searchParams);\r\n        }\r\n\r\n        if (type == \"queryState\") {\r\n            return new bizagi.rendering.queryState(searchParams);\r\n        }\r\n\r\n        if (type == \"queryCaseState\") {\r\n            return new bizagi.rendering.queryCaseState(searchParams);\r\n        }\r\n\r\n        if (type == \"queryProcess\") {\r\n            return new bizagi.rendering.queryProcess(searchParams);\r\n        }\r\n\r\n        if (type == \"querySearchUser\") {\r\n            return new bizagi.rendering.querySearchUser(searchParams);\r\n        }\r\n\r\n        if (type == \"queryHidden\") {\r\n            return new bizagi.rendering.hidden(searchParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Method to fetch templates from a private dictionary\r\n    */\r\n    getTemplate: function (template) {\r\n        var self = this;\r\n        return self.templates[template];\r\n    }\r\n});\r\n","/*\r\n*   Name: Bizagi Device Render Factory\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will detect the current device and then will load the appropriate factory on demand\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.device.factory\", {}, {\r\n\r\n    /**\r\n     * Constructor, detects the device\r\n     * @param params\r\n     */\r\n    init: function (params) {\r\n        this.execution_device = bizagi.util.detectDevice();\r\n        this.cachedFactory = {};\r\n    },\r\n\r\n    /**\r\n     * Returns the appropriate render factory based on the device detection\r\n     * Because it loads the scripts on demand it must return a promise\r\n     * @param dataService\r\n     * @param device\r\n     * @returns {*}\r\n     */\r\n    getRenderFactory: function (dataService, device) {\r\n        var self = this;\r\n        device = device || \"desktop\";\r\n        var defer = new $.Deferred();\r\n\r\n        if (typeof self.cachedFactory[device] !== \"undefined\") {\r\n            // Reset print version value\r\n            self.cachedFactory[device].printVersion = false;\r\n            // Resolve with cached factory                \r\n            defer.resolve(self.cachedFactory[device]);\r\n        } else {\r\n            // If factory is not cached then build it\r\n            if (device === \"print\") {\r\n\r\n                // Load print version references\r\n                self.cachedFactory[device] = new bizagi.rendering.print.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n\r\n            } else if (device === \"desktop\") {\r\n\r\n                // Load desktop references\r\n                self.cachedFactory[device] = new bizagi.rendering.desktop.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n\r\n            } else if (bizagi.util.isTabletDevice(device)) {\r\n\r\n                // Load tablet references\r\n                self.cachedFactory[device] = new bizagi.rendering.tablet.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n            } else if (bizagi.util.isSmartphoneDevice(device)) {\r\n\r\n                // Load tablet references\r\n                self.cachedFactory[device] = new bizagi.rendering.smartphone.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n            } else {\r\n                // if no device suuported\r\n                bizagi.showMessageBox(\"Not supported device: \" + device);\r\n                defer.reject(\"Not supported device: \" + device);\r\n            }\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Returns the current data service being used\r\n     * @returns {*}\r\n     */\r\n    getDataService: function () {\r\n        return this.dataService;\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: BizAgi Rendering\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will process a rendering page by calling an ajax service to retrieve the model,\r\n *       and then process it to create base layout, and then call the device render factory\r\n */\r\n\r\n// Define BizAgi Rendering namespace\r\nbizagi.rendering = bizagi.rendering || {};\r\n\r\n/*\r\n *   This class will define a method to process the page\r\n *   1. Fetch the data\r\n *   2. Call the device factory to appropriately render the content\r\n */\r\n$.Class.extend(\"bizagi.rendering.facade\", {\r\n    form: undefined,\r\n    executionDeferred: new $.Deferred()\r\n}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        params = params || {};\r\n\r\n        // Set observable element\r\n        this.observableElement = $({});\r\n\r\n        // Injection of Device, only for print version purpose\r\n        var device = params.device || \"\";\r\n\r\n        // Defines a device factory for all rendering\r\n        this.deviceFactory = new bizagi.rendering.device.factory();\r\n\r\n        // Creates a data service instance\r\n        this.dataService = new bizagi.render.services.service(params);\r\n\r\n        // Retrieves the render factory\r\n        this.renderFactory = this.deviceFactory.getRenderFactory(this.dataService, device);\r\n    },\r\n    getFactory: function () {\r\n        var self = this;\r\n        return {\r\n            deviceFactory: self.deviceFactory,\r\n            dataService: self.dataService,\r\n            renderFactory: self.renderFactory\r\n        };\r\n    },\r\n    /*\r\n    *   Subscribe method\r\n    */\r\n    subscribe: function () {\r\n        this.observableElement.bind.apply(this.observableElement, arguments);\r\n    },\r\n    /*\r\n    *   Unsubscribe method\r\n    */\r\n    unsubscribe: function () {\r\n        this.observableElement.unbind.apply(this.observableElement, arguments);\r\n    },\r\n    /*\r\n    *   Publish method\r\n    */\r\n    publish: function () {\r\n        return this.observableElement.triggerHandler.apply(this.observableElement, arguments);\r\n    },\r\n    /*\r\n    *   This method will re-execute the process\r\n    */\r\n    update: function (params) {\r\n        var self = this;\r\n\r\n        // Update rendering mode\r\n        if (params.mode)\r\n            self.mode = params.mode;\r\n\r\n        // Enable form buttons on desktop view\r\n        return self.execute($.extend({\r\n            canvas: self.canvas,\r\n            mode: self.mode\r\n        }, params));\r\n    },\r\n    /*\r\n    *   Start point method to use in the main javascript pages\r\n    *   This method will process everything and attach the html directly to the dom\r\n    */\r\n    execute: function (params) {\r\n        var self = this;\r\n        var doc = this.ownerDocument;\r\n        var body = $(\"body\", doc);\r\n        params = params || {};\r\n\r\n        // Creates ready deferred\r\n        if (self.executionDeferred && self.executionDeferred.state) {\r\n            if (self.executionDeferred.state() == \"resolved\") {\r\n                self.executionDeferred = $.Deferred();\r\n            }\r\n        } else {\r\n            self.executionDeferred = $.Deferred();\r\n        }\r\n\r\n        // Performance measurement stuff\r\n        bizagi.chrono.initAndStart(\"rendering+data\", true);\r\n        bizagi.rendering.render.startOptimization();\r\n\r\n        // Override mode\r\n        if (typeof (params.mode) === \"undefined\") {\r\n            if (!bizagi.util.isEmpty(window.location.search)) {\r\n                var queryString = bizagi.util.getQueryString();\r\n                params.mode = queryString[\"mode\"];\r\n            }\r\n        }\r\n\r\n        // If the canvas is not given, we need to create one\r\n        var canvas = self.canvas = params.canvas = params.canvas || $(\"<div />\").appendTo(body);\r\n        self.mode = params.mode;\r\n\r\n        self.process(params).done(function (form) {\r\n\r\n            // Clear canvas    \r\n            if (!params.refreshing) {\r\n                canvas.empty();\r\n            }\r\n\r\n            // Append content\r\n            canvas.append(form.container);\r\n\r\n            // Include process path\r\n            $(form.pathProcess).insertBefore(form.container);\r\n\r\n            // Keep reference in class\r\n            self.form = form;\r\n            self.form.setSize({width: self.lastWidth, height: self.lastHeight});\r\n\r\n            // Save window size variables\r\n            setTimeout(function () {\r\n                self.lastWidth = $(window).width();\r\n                self.lastHeight = $(window).height();\r\n                if (window.self !== window.top)\r\n                    self.resizeInPopUpHTML();\r\n            }, 2000);\r\n\r\n            // Publish an event to check if the form has been set in the DOM\r\n            form.triggerHandler(\"ondomincluded\");\r\n\r\n            // Notify to module users that the form has been rendered\r\n            self.publish(\"rendering-formRendered\", {});\r\n\r\n            // Configure handlers\r\n            self.configureRefresh(form, canvas);\r\n            self.configureRouting(form, canvas);\r\n            self.configureRenderError(form, canvas);\r\n            self.configureResize(form);\r\n            self.configureGlobalHandlers(form);\r\n\r\n            // Check if it is a summary form\r\n            if (params.summaryForm) {\r\n                form.container.addClass(\"ui-bizagi-summary-form\");\r\n            }\r\n\r\n            // Ends main timer and log everything\r\n            bizagi.chrono.stopAndLog(\"rendering\");\r\n            bizagi.chrono.stopAndLog(\"rendering+data\");\r\n            bizagi.chrono.stopAndLog(\"submitForm\");\r\n            bizagi.chrono.stopAndLog(\"submitForm-ajax\");\r\n            bizagi.chrono.stopAndLog(\"waiting\");\r\n\r\n            // Resolves deferred\r\n            bizagi.rendering.render.stopOptimization();\r\n\r\n            // Expose public reference of form\r\n            if (bizagi.override.enableE2EInterface) {\r\n                self.Class.form = self.form;\r\n                self.Class.executionDeferred.resolve(self.form);\r\n            }\r\n\r\n            self.executionDeferred.resolve(self.form);\r\n\r\n        }).fail(function (message, errorType) {\r\n\r\n            $.when(self.renderFactory)\r\n                .done(function (renderFactory) {\r\n\r\n                    if (typeof message === \"undefined\" || message === \"\") {\r\n                        message = bizagi.localization.getResource(\"render-error-unknown\");\r\n                    }\r\n\r\n                    var errorTemplate = renderFactory.getCommonTemplate(\"form-error\");\r\n                    // Fill canvas\r\n                    canvas.empty();\r\n                    canvas.append($.tmpl(errorTemplate, {\r\n                        message: message\r\n                    }));\r\n                    self.publish(\"rendering-formRenderedError\", message);\r\n                    self.canvas.triggerHandler(\"errorform\", message);\r\n                    // Ends main timer and log everything\r\n                    bizagi.chrono.stopAndLog(\"rendering\");\r\n                    bizagi.chrono.stopAndLog(\"rendering+data\");\r\n\r\n                    self.executionDeferred.reject();\r\n                });\r\n        });\r\n\r\n        return self.executionDeferred.promise();\r\n    },\r\n    /*\r\n    *   Returns the execution deferred to determine if the component is ready or not\r\n    */\r\n    ready: function () {\r\n        return this.executionDeferred.promise();\r\n    },\r\n    /*\r\n    *   Loads data and render factory in order to process the form\r\n    *   Returns a deferred to set callbacks when the process is done\r\n    */\r\n    process: function (params) {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        // Call get form data service\r\n        var dataPromise = self.dataService.getFormData(params);\r\n\r\n        var canvas = self.canvas || params.canvas;\r\n\r\n        bizagi.showErrorAlertDialog = false;\r\n        // Set callback when requests have been done\r\n        $.when(dataPromise, self.renderFactory)\r\n            .done(function (data, renderFactory) {\r\n                bizagi.showErrorAlertDialog = true;\r\n\r\n                // When there is no data trigger an event\r\n                if (bizagi.util.isEmpty(data)) {\r\n                    self.publish(\"no-data-found\");\r\n                    defer.fail();\r\n                    return;\r\n                }\r\n\r\n                if (data && data.type == \"reload\") {\r\n                    var form = self.form;\r\n                    if (form) {\r\n                        form.endLoading();\r\n                        form.dispose();\r\n                    }\r\n                    // Trigger handler on canvas\r\n                    canvas.triggerHandler(\"routing\");\r\n\r\n                } else if (data && data.type == \"suspended\") {\r\n                    var errorTemplate = renderFactory.getTemplate(\"info-message\");\r\n                    var message = bizagi.localization.getResource(\"render-case-suspended\");\r\n                    var errorHtml = $.tmpl(errorTemplate, {\r\n                        message: message\r\n                    });\r\n                    // Remove loading icon from summary container\r\n                    errorHtml.appendTo(canvas);\r\n\r\n                    defer.fail();\r\n\r\n                } else if (data && data.type != \"error\") {\r\n                    if (params.hasOwnProperty('printversion')) {\r\n                        data = self.transformGridControl(data);\r\n                        data.form.properties.editable = \"False\";\r\n                    }\r\n\r\n                    bizagi.chrono.initAndStart(\"rendering\");\r\n                    params.type = (data.form && data.form.properties.type) || params.type;\r\n                    var form = self.processForm(data.form, renderFactory, params);\r\n\r\n                    // Resolve deferred\r\n                    defer.resolve(form);\r\n\r\n                } else {\r\n                    self.getFailDeferred(data, defer);\r\n                }\r\n            }).fail(function (errorMessage) {\r\n            self.getFailDeferred(errorMessage, defer);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n    /**\r\n     * In the print version widget when grid control was rendered, the main render has broken\r\n     * Is necesary change id of grid control to fixed these  problems\r\n     */\r\n    transformGridControl: function (data) {\r\n        var self = this;\r\n        if (data == null) {\r\n            return data;\r\n        }\r\n\r\n        if (data.hasOwnProperty('type') && data.type == 'grid') {\r\n            data.id = data.id + \"-print\";\r\n            data.allowAdd = \"False\";\r\n            data.allowDelete = \"False\";\r\n            data.allowEdit = \"False\";\r\n            data.allowGrouping = \"False\";\r\n            data.allowMore = \"False\";\r\n            data.allowSearch = \"False\";\r\n        } else {\r\n            $.each(data, function (key, value) {\r\n                if (typeof (value) == 'object') {\r\n                    data[key] = self.transformGridControl(data[key]);\r\n                }\r\n            });\r\n        }\r\n        return data;\r\n    },\r\n    /**\r\n     * Resolve deferred\r\n     */\r\n    getFailDeferred: function (errorMessage, defer) {\r\n        var self = this;\r\n        var message = \"\";\r\n        var jsonErrorMessage = {};\r\n        try {\r\n            jsonErrorMessage = JSON.parse(errorMessage.responseText);\r\n        } catch (e) {\r\n            jsonErrorMessage = {message: errorMessage.responseText, errorType: \"ERRORUNKNOWN\"};\r\n        }\r\n\r\n\r\n        if (jsonErrorMessage.message) {\r\n            message += \"<br>Error Type: \" + jsonErrorMessage.errorType;\r\n            message += \"<br>Error Message: \" + jsonErrorMessage.message;\r\n        } else {\r\n            if (jsonErrorMessage.errorType == \"JSharpNotSupportedException\") {\r\n                message += \"<br>Error Message: \" + bizagi.localization.getResource(\"jsharp-required\");\r\n            }\r\n        }\r\n\r\n        // Error in metadata InvalidFormMetadata\r\n        if (jsonErrorMessage.errorType == 'ERRORUNKNOWN') {\r\n            defer.reject(message, jsonErrorMessage.errorType);\r\n        } else {\r\n\r\n            defer.reject(message);\r\n        }\r\n    },\r\n    /*\r\n    *   Process the form\r\n    */\r\n    processForm: function (data, renderFactory, params) {\r\n        var form = renderFactory.getContainer($.extend(params, {\r\n            type: params.type || \"form\",\r\n            data: data\r\n        }));\r\n\r\n        //Orientation RTL - OrderButtons\r\n        if (typeof BIZAGI_ORIENTATION != \"undefined\") {\r\n            if ((form.properties.orientation == \"rtl\" || BIZAGI_ORIENTATION == 'rtl') && form.buttons.length > 0) {\r\n                var buttonsForm = form.buttons[0];\r\n\r\n                form.buttons.splice(0, 1);\r\n                form.buttons.push(buttonsForm);\r\n            }\r\n        }\r\n\r\n        // Render the full form\r\n        form.render();\r\n\r\n        return form;\r\n    },\r\n    /*\r\n    *   Performs a resize\r\n    */\r\n    resize: function (args) {\r\n        var self = this;\r\n        if (self.form) {\r\n            self.form.trigger(\"renderresize\", args);\r\n        }\r\n    },\r\n    /*\r\n    *   Binds a refresh handler to detect when the whole form needs to fetch all data from server\r\n    */\r\n    configureRefresh: function (form, canvas) {\r\n        var self = this;\r\n\r\n        // Attach a refresh handler to recreate all the form\r\n        form.bind(\"refresh\", function (_, refreshParams) {\r\n\r\n            // Find the scroll top\r\n            var parent = form.container.parent();\r\n            parent = bizagi.util.scrollTop(parent);\r\n            var scrollTop = parent.scrollTop();\r\n\r\n            $(self.form).trigger(\"onRefreshStarted\");\r\n\r\n            //Dispose current form\r\n            form.dispose(refreshParams);\r\n            canvas.fastEmpty();\r\n            var canvasParent = canvas.parent();\r\n            if (canvasParent.find(\".ui-bizagi-button-container\").length > 0) {\r\n                canvasParent.find(\".ui-bizagi-button-container\").remove();\r\n            }\r\n\r\n            if (self.executionDeferred && self.executionDeferred.state) {\r\n                if (self.executionDeferred.state() == \"resolved\") {\r\n                    self.executionDeferred = $.Deferred();\r\n                }\r\n            }\r\n\r\n            var formParams = self.form.getParams();\r\n            // Re-execute process\r\n            $.when(self.execute($.extend(refreshParams, {\r\n                canvas: canvas,\r\n                refreshing: true,\r\n                idCase: formParams.idCase,\r\n                displayName: formParams.displayName\r\n            }))).done(function () {\r\n\r\n                // Restore scroll at same position\r\n                setTimeout(function () {\r\n                    parent.scrollTop(scrollTop);\r\n                    $(self.form).trigger(\"onRefreshFinished\");\r\n                }, 100);\r\n            });\r\n\r\n            return self.executionDeferred.promise();\r\n        });\r\n    },\r\n    /*\r\n    *   Binds a resize hanlder to configure the resize behaviour\r\n    */\r\n    configureResize: function (form) {\r\n        var self = this;\r\n\r\n        // Attach resize handler\r\n        form.bind(\"renderresize\", function (_, args) {\r\n            args = args || {};\r\n            // Just allow one resize at a time\r\n            if (self.resizeTimeout)\r\n                return;\r\n            var resizeFn = function () {\r\n                // Call resize event in form\r\n                var width = $(window).width();\r\n                var height = $(window).height();\r\n                if (args.forceResize || width != self.lastWidth) {\r\n\r\n                    // Logging stuff\r\n                    bizagi.chrono.initAndStart(\"resize\");\r\n\r\n                    // Perform resize\r\n                    form.resize({\r\n                        width: width,\r\n                        height: height\r\n                    });\r\n                    self.lastWidth = width;\r\n                    self.lastHeight = height;\r\n\r\n                    // Logging stuff\r\n                    bizagi.chrono.stopAndLog(\"resize\");\r\n                    bizagi.chrono.log(\"resize\");\r\n                }\r\n\r\n                self.resizeTimeout = null;\r\n                clearTimeout(self.resizeTimeout);\r\n            };\r\n            self.resizeTimeout = setTimeout(resizeFn, 0);\r\n\r\n        });\r\n        self.resize();\r\n    },\r\n    /*\r\n    *   Binds a routing handler to detect when the workportal need to enroute the case\r\n    */\r\n    configureRouting: function (form, canvas) {\r\n        // Attach a routing handler to notify to the caller\r\n        form.bind(\"routing\", function (context, triggerParams) {\r\n            //Dispose current form\r\n            form.dispose();\r\n\r\n            // Trigger handler on canvas\r\n            canvas.triggerHandler(\"routing\", triggerParams);\r\n        });\r\n    },\r\n    /*\r\n    *   Binds a generic handler that will be replicated to facade instantiators\r\n    */\r\n    configureGlobalHandlers: function (form) {\r\n        var self = this;\r\n\r\n        // Attach a routing handler to notify to the caller\r\n        form.bind(\"globalHandler\", function (_, args) {\r\n            // Trigger handler on canvas\r\n            return self.publish(args.eventType, args.data);\r\n        });\r\n    },\r\n    /*\r\n    * Binds error form handler to detect when the render element nop posible get information or error in server\r\n    */\r\n    configureRenderError: function (form, canvas) {\r\n        var self = this;\r\n\r\n        form.bind(\"formRenderingError\", function (event, errorMessage) {\r\n            $.when(self.renderFactory)\r\n                .done(function (renderFactory) {\r\n                    var message = \"<br>Error: \";\r\n\r\n                    errorMessage = errorMessage.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\r\n\r\n                    var jsonErrorMessage = JSON.parse(errorMessage);\r\n                    if (jsonErrorMessage.message) {\r\n                        message += jsonErrorMessage.message;\r\n                        message += \"<br>Error Type: \" + jsonErrorMessage.errorType;\r\n                    }\r\n                    var errorTemplate = renderFactory.getCommonTemplate(\"form-error\");\r\n                    // Fill canvas\r\n                    canvas.empty();\r\n                    canvas.append($.tmpl(errorTemplate, {\r\n                        message: message\r\n                    }));\r\n                    //send the type error to differentiate between a form and an item for render\r\n                    self.canvas.triggerHandler(\"errorform\", \"renderItemError\");\r\n                    // Ends main timer and log everything\r\n                    bizagi.chrono.stopAndLog(\"rendering+data\");\r\n                    bizagi.chrono.stopAndLog(\"rendering\");\r\n                });\r\n        });\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n        if (self.form) {\r\n            self.form.dispose();\r\n        }\r\n        bizagi.util.dispose(self);\r\n    },\r\n\r\n    resizeInPopUpHTML: function () {\r\n        if ($(\".activitiFormContainer\").length > 0 && bizagi.util.getQueryString().type != \"cases\") {\r\n            var heightActivitiFormContainer = $(\".activitiFormContainer\").height() || 0;\r\n            var renderForm = $(\".activitiFormContainer #ui-bizagi-webpart-render-container\");\r\n            var buttonContainer = $(\".ui-bizagi-button-container\", \".activitiFormContainer\");\r\n            var heightButtonContainer = buttonContainer.outerHeight() || 0;\r\n            var renderBehavior = bizagi.util.getQueryString().renderBehavior || \"\";\r\n            renderBehavior = renderBehavior.replace(\"#\", \"\");\r\n\r\n            if (renderBehavior == \"PopUp\") {\r\n                if (typeof (self.postMessageSocket) == \"undefined\") {\r\n                    var heightCanvas = $(\".activitiFormContainer\").height() - 50 || 396;\r\n                    $(\"#render-canvas\").height(heightCanvas);\r\n                    $(\"#render-canvas\").css(\"overflowY\", \"scroll\");\r\n                } else $(\".activitiFormContainer\").height($(\".activitiFormContainer\").height() + $(\".ui-bizagi-button-container\").height() + 30);\r\n                $(\".ui-bizagi-button-container\").css(\"position\", \"absolute\");\r\n                $(\".ui-bizagi-button-container\").appendTo(\".activitiFormContainer\");\r\n                if ($(\".ui-bizagi-button-container\").length > 1) {\r\n                    $(\".ui-bizagi-button-container:first\").hide();\r\n                    renderForm.css(\"marginTop\", \"-17px\");\r\n                }\r\n            }\r\n            if (buttonContainer.length > 0) {\r\n                //display buttons\r\n                renderForm.height(heightActivitiFormContainer - 97 - heightButtonContainer);\r\n            }\r\n            if ($(\".ui-bizagi-button-container\").children().length == 0)\r\n                $(\"#render-canvas\").height($(\"#render-canvas\").height() + heightButtonContainer);\r\n            else {\r\n                buttonContainer.width(\"100%\");\r\n                buttonContainer.css(\"marginLeft\", 0);\r\n                buttonContainer.css(\"bottom\", 0);\r\n            }\r\n        } else if (bizagi.util.getQueryString().type == \"render\") {\r\n            $(\"html\").css(\"overflowX\", \"hidden\");\r\n            ($(\"#render\").height() <= window.innerHeight + 5) ? $(\"html\").css(\"overflowY\", \"hidden\")\r\n                : $(\"html\").css(\"overflowY\", \"scroll\");\r\n            $(\".ui-widget-overlay\").height(650);\r\n        }\r\n    }\r\n\r\n});"]}